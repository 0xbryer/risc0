bigint_declare_byte_poly!(BytePoly_32, 32);
bigint_declare_byte_poly!(BytePoly_64, 64);
bigint_declare_byte_poly!(BytePoly_34, 34);
bigint_declare_byte_poly!(BytePoly_66, 66);
bigint_declare_byte_poly!(BytePoly_384, 384);
bigint_declare_byte_poly!(BytePoly_768, 768);
bigint_declare_byte_poly!(BytePoly_387, 387);
bigint_declare_byte_poly!(BytePoly_771, 771);
bigint_declare_byte_poly!(BytePoly_1, 1);
bigint_declare_byte_poly!(BytePoly_2, 2);
bigint_declare_byte_poly!(BytePoly_3, 3);
bigint_declare_byte_poly!(BytePoly_4, 4);
bigint_declare_byte_poly!(BytePoly_16, 16);
bigint_declare_byte_poly!(BytePoly_17, 17);
bigint_declare_byte_poly!(BytePoly_5, 5);
bigint_declare_byte_poly!(BytePoly_8, 8);
bigint_declare_byte_poly!(BytePoly_9, 9);
bigint_declare_byte_poly!(BytePoly_13, 13);
bigint_declare_byte_poly!(BytePoly_10, 10);
bigint_declare_byte_poly!(BytePoly_14, 14);
bigint_declare_byte_poly!(BytePoly_6, 6);
bigint_declare_byte_poly!(BytePoly_12, 12);
bigint_declare_byte_poly!(BytePoly_98, 98);
bigint_declare_byte_poly!(BytePoly_96, 96);
bigint_declare_byte_poly!(BytePoly_33, 33);
bigint_declare_byte_poly!(BytePoly_35, 35);
pub fn rsa_256_x1(ctx: &mut BigIntContext) -> Result<()> {
    let x0: BytePoly_32 = bigint_def!(ctx, 32, 0, 1);
    let x1: BytePoly_32 = bigint_def!(ctx, 32, 1, 1);
    let x2: BytePoly_32 = bigint_def!(ctx, 32, 2, 1);
    let x3: BytePoly_64 = bigint_mul!(x1, x1, 64);
    let x4: BytePoly_34 = bigint_nondet_quot!(ctx, x3, x0, 34);
    let x5: BytePoly_32 = bigint_nondet_rem!(ctx, x3, x0, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x4, x0, 66), x5, 66), x3, 66),
        276359,
        4,
    )?;
    let x6: BytePoly_64 = bigint_mul!(x5, x5, 64);
    let x7: BytePoly_34 = bigint_nondet_quot!(ctx, x6, x0, 34);
    let x8: BytePoly_32 = bigint_nondet_rem!(ctx, x6, x0, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x7, x0, 66), x8, 66), x6, 66),
        276359,
        4,
    )?;
    let x9: BytePoly_64 = bigint_mul!(x8, x8, 64);
    let x10: BytePoly_34 = bigint_nondet_quot!(ctx, x9, x0, 34);
    let x11: BytePoly_32 = bigint_nondet_rem!(ctx, x9, x0, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x10, x0, 66), x11, 66), x9, 66),
        276359,
        4,
    )?;
    let x12: BytePoly_64 = bigint_mul!(x11, x11, 64);
    let x13: BytePoly_34 = bigint_nondet_quot!(ctx, x12, x0, 34);
    let x14: BytePoly_32 = bigint_nondet_rem!(ctx, x12, x0, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x13, x0, 66), x14, 66), x12, 66),
        276359,
        4,
    )?;
    let x15: BytePoly_64 = bigint_mul!(x14, x14, 64);
    let x16: BytePoly_34 = bigint_nondet_quot!(ctx, x15, x0, 34);
    let x17: BytePoly_32 = bigint_nondet_rem!(ctx, x15, x0, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x16, x0, 66), x17, 66), x15, 66),
        276359,
        4,
    )?;
    let x18: BytePoly_64 = bigint_mul!(x17, x17, 64);
    let x19: BytePoly_34 = bigint_nondet_quot!(ctx, x18, x0, 34);
    let x20: BytePoly_32 = bigint_nondet_rem!(ctx, x18, x0, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x19, x0, 66), x20, 66), x18, 66),
        276359,
        4,
    )?;
    let x21: BytePoly_64 = bigint_mul!(x20, x20, 64);
    let x22: BytePoly_34 = bigint_nondet_quot!(ctx, x21, x0, 34);
    let x23: BytePoly_32 = bigint_nondet_rem!(ctx, x21, x0, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x22, x0, 66), x23, 66), x21, 66),
        276359,
        4,
    )?;
    let x24: BytePoly_64 = bigint_mul!(x23, x23, 64);
    let x25: BytePoly_34 = bigint_nondet_quot!(ctx, x24, x0, 34);
    let x26: BytePoly_32 = bigint_nondet_rem!(ctx, x24, x0, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x25, x0, 66), x26, 66), x24, 66),
        276359,
        4,
    )?;
    let x27: BytePoly_64 = bigint_mul!(x26, x26, 64);
    let x28: BytePoly_34 = bigint_nondet_quot!(ctx, x27, x0, 34);
    let x29: BytePoly_32 = bigint_nondet_rem!(ctx, x27, x0, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x28, x0, 66), x29, 66), x27, 66),
        276359,
        4,
    )?;
    let x30: BytePoly_64 = bigint_mul!(x29, x29, 64);
    let x31: BytePoly_34 = bigint_nondet_quot!(ctx, x30, x0, 34);
    let x32: BytePoly_32 = bigint_nondet_rem!(ctx, x30, x0, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x31, x0, 66), x32, 66), x30, 66),
        276359,
        4,
    )?;
    let x33: BytePoly_64 = bigint_mul!(x32, x32, 64);
    let x34: BytePoly_34 = bigint_nondet_quot!(ctx, x33, x0, 34);
    let x35: BytePoly_32 = bigint_nondet_rem!(ctx, x33, x0, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x34, x0, 66), x35, 66), x33, 66),
        276359,
        4,
    )?;
    let x36: BytePoly_64 = bigint_mul!(x35, x35, 64);
    let x37: BytePoly_34 = bigint_nondet_quot!(ctx, x36, x0, 34);
    let x38: BytePoly_32 = bigint_nondet_rem!(ctx, x36, x0, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x37, x0, 66), x38, 66), x36, 66),
        276359,
        4,
    )?;
    let x39: BytePoly_64 = bigint_mul!(x38, x38, 64);
    let x40: BytePoly_34 = bigint_nondet_quot!(ctx, x39, x0, 34);
    let x41: BytePoly_32 = bigint_nondet_rem!(ctx, x39, x0, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x40, x0, 66), x41, 66), x39, 66),
        276359,
        4,
    )?;
    let x42: BytePoly_64 = bigint_mul!(x41, x41, 64);
    let x43: BytePoly_34 = bigint_nondet_quot!(ctx, x42, x0, 34);
    let x44: BytePoly_32 = bigint_nondet_rem!(ctx, x42, x0, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x43, x0, 66), x44, 66), x42, 66),
        276359,
        4,
    )?;
    let x45: BytePoly_64 = bigint_mul!(x44, x44, 64);
    let x46: BytePoly_34 = bigint_nondet_quot!(ctx, x45, x0, 34);
    let x47: BytePoly_32 = bigint_nondet_rem!(ctx, x45, x0, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x46, x0, 66), x47, 66), x45, 66),
        276359,
        4,
    )?;
    let x48: BytePoly_64 = bigint_mul!(x47, x47, 64);
    let x49: BytePoly_34 = bigint_nondet_quot!(ctx, x48, x0, 34);
    let x50: BytePoly_32 = bigint_nondet_rem!(ctx, x48, x0, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x49, x0, 66), x50, 66), x48, 66),
        276359,
        4,
    )?;
    let x51: BytePoly_64 = bigint_mul!(x50, x1, 64);
    let x52: BytePoly_34 = bigint_nondet_quot!(ctx, x51, x0, 34);
    let x53: BytePoly_32 = bigint_nondet_rem!(ctx, x51, x0, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x52, x0, 66), x53, 66), x51, 66),
        276359,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x53, x2, 32), 34, 1)?;
    return Ok(());
}
pub fn rsa_256_x2(ctx: &mut BigIntContext) -> Result<()> {
    let x0: BytePoly_32 = bigint_def!(ctx, 32, 0, 1);
    let x1: BytePoly_32 = bigint_def!(ctx, 32, 1, 1);
    let x2: BytePoly_32 = bigint_def!(ctx, 32, 2, 1);
    let x3: BytePoly_64 = bigint_mul!(x1, x1, 64);
    let x4: BytePoly_34 = bigint_nondet_quot!(ctx, x3, x0, 34);
    let x5: BytePoly_32 = bigint_nondet_rem!(ctx, x3, x0, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x4, x0, 66), x5, 66), x3, 66),
        276359,
        4,
    )?;
    let x6: BytePoly_64 = bigint_mul!(x5, x5, 64);
    let x7: BytePoly_34 = bigint_nondet_quot!(ctx, x6, x0, 34);
    let x8: BytePoly_32 = bigint_nondet_rem!(ctx, x6, x0, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x7, x0, 66), x8, 66), x6, 66),
        276359,
        4,
    )?;
    let x9: BytePoly_64 = bigint_mul!(x8, x8, 64);
    let x10: BytePoly_34 = bigint_nondet_quot!(ctx, x9, x0, 34);
    let x11: BytePoly_32 = bigint_nondet_rem!(ctx, x9, x0, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x10, x0, 66), x11, 66), x9, 66),
        276359,
        4,
    )?;
    let x12: BytePoly_64 = bigint_mul!(x11, x11, 64);
    let x13: BytePoly_34 = bigint_nondet_quot!(ctx, x12, x0, 34);
    let x14: BytePoly_32 = bigint_nondet_rem!(ctx, x12, x0, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x13, x0, 66), x14, 66), x12, 66),
        276359,
        4,
    )?;
    let x15: BytePoly_64 = bigint_mul!(x14, x14, 64);
    let x16: BytePoly_34 = bigint_nondet_quot!(ctx, x15, x0, 34);
    let x17: BytePoly_32 = bigint_nondet_rem!(ctx, x15, x0, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x16, x0, 66), x17, 66), x15, 66),
        276359,
        4,
    )?;
    let x18: BytePoly_64 = bigint_mul!(x17, x17, 64);
    let x19: BytePoly_34 = bigint_nondet_quot!(ctx, x18, x0, 34);
    let x20: BytePoly_32 = bigint_nondet_rem!(ctx, x18, x0, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x19, x0, 66), x20, 66), x18, 66),
        276359,
        4,
    )?;
    let x21: BytePoly_64 = bigint_mul!(x20, x20, 64);
    let x22: BytePoly_34 = bigint_nondet_quot!(ctx, x21, x0, 34);
    let x23: BytePoly_32 = bigint_nondet_rem!(ctx, x21, x0, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x22, x0, 66), x23, 66), x21, 66),
        276359,
        4,
    )?;
    let x24: BytePoly_64 = bigint_mul!(x23, x23, 64);
    let x25: BytePoly_34 = bigint_nondet_quot!(ctx, x24, x0, 34);
    let x26: BytePoly_32 = bigint_nondet_rem!(ctx, x24, x0, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x25, x0, 66), x26, 66), x24, 66),
        276359,
        4,
    )?;
    let x27: BytePoly_64 = bigint_mul!(x26, x26, 64);
    let x28: BytePoly_34 = bigint_nondet_quot!(ctx, x27, x0, 34);
    let x29: BytePoly_32 = bigint_nondet_rem!(ctx, x27, x0, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x28, x0, 66), x29, 66), x27, 66),
        276359,
        4,
    )?;
    let x30: BytePoly_64 = bigint_mul!(x29, x29, 64);
    let x31: BytePoly_34 = bigint_nondet_quot!(ctx, x30, x0, 34);
    let x32: BytePoly_32 = bigint_nondet_rem!(ctx, x30, x0, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x31, x0, 66), x32, 66), x30, 66),
        276359,
        4,
    )?;
    let x33: BytePoly_64 = bigint_mul!(x32, x32, 64);
    let x34: BytePoly_34 = bigint_nondet_quot!(ctx, x33, x0, 34);
    let x35: BytePoly_32 = bigint_nondet_rem!(ctx, x33, x0, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x34, x0, 66), x35, 66), x33, 66),
        276359,
        4,
    )?;
    let x36: BytePoly_64 = bigint_mul!(x35, x35, 64);
    let x37: BytePoly_34 = bigint_nondet_quot!(ctx, x36, x0, 34);
    let x38: BytePoly_32 = bigint_nondet_rem!(ctx, x36, x0, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x37, x0, 66), x38, 66), x36, 66),
        276359,
        4,
    )?;
    let x39: BytePoly_64 = bigint_mul!(x38, x38, 64);
    let x40: BytePoly_34 = bigint_nondet_quot!(ctx, x39, x0, 34);
    let x41: BytePoly_32 = bigint_nondet_rem!(ctx, x39, x0, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x40, x0, 66), x41, 66), x39, 66),
        276359,
        4,
    )?;
    let x42: BytePoly_64 = bigint_mul!(x41, x41, 64);
    let x43: BytePoly_34 = bigint_nondet_quot!(ctx, x42, x0, 34);
    let x44: BytePoly_32 = bigint_nondet_rem!(ctx, x42, x0, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x43, x0, 66), x44, 66), x42, 66),
        276359,
        4,
    )?;
    let x45: BytePoly_64 = bigint_mul!(x44, x44, 64);
    let x46: BytePoly_34 = bigint_nondet_quot!(ctx, x45, x0, 34);
    let x47: BytePoly_32 = bigint_nondet_rem!(ctx, x45, x0, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x46, x0, 66), x47, 66), x45, 66),
        276359,
        4,
    )?;
    let x48: BytePoly_64 = bigint_mul!(x47, x47, 64);
    let x49: BytePoly_34 = bigint_nondet_quot!(ctx, x48, x0, 34);
    let x50: BytePoly_32 = bigint_nondet_rem!(ctx, x48, x0, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x49, x0, 66), x50, 66), x48, 66),
        276359,
        4,
    )?;
    let x51: BytePoly_64 = bigint_mul!(x50, x1, 64);
    let x52: BytePoly_34 = bigint_nondet_quot!(ctx, x51, x0, 34);
    let x53: BytePoly_32 = bigint_nondet_rem!(ctx, x51, x0, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x52, x0, 66), x53, 66), x51, 66),
        276359,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x53, x2, 32), 34, 1)?;
    return Ok(());
}
pub fn rsa_3072_x15(ctx: &mut BigIntContext) -> Result<()> {
    let x0: BytePoly_384 = bigint_def!(ctx, 384, 0, 1);
    let x1: BytePoly_384 = bigint_def!(ctx, 384, 1, 1);
    let x2: BytePoly_384 = bigint_def!(ctx, 384, 2, 1);
    let x3: BytePoly_768 = bigint_mul!(x1, x1, 768);
    let x4: BytePoly_387 = bigint_nondet_quot!(ctx, x3, x0, 387);
    let x5: BytePoly_384 = bigint_nondet_rem!(ctx, x3, x0, 384);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x4, x0, 771), x5, 771), x3, 771),
        3145587,
        4,
    )?;
    let x6: BytePoly_768 = bigint_mul!(x5, x5, 768);
    let x7: BytePoly_387 = bigint_nondet_quot!(ctx, x6, x0, 387);
    let x8: BytePoly_384 = bigint_nondet_rem!(ctx, x6, x0, 384);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x7, x0, 771), x8, 771), x6, 771),
        3145587,
        4,
    )?;
    let x9: BytePoly_768 = bigint_mul!(x8, x8, 768);
    let x10: BytePoly_387 = bigint_nondet_quot!(ctx, x9, x0, 387);
    let x11: BytePoly_384 = bigint_nondet_rem!(ctx, x9, x0, 384);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x10, x0, 771), x11, 771), x9, 771),
        3145587,
        4,
    )?;
    let x12: BytePoly_768 = bigint_mul!(x11, x11, 768);
    let x13: BytePoly_387 = bigint_nondet_quot!(ctx, x12, x0, 387);
    let x14: BytePoly_384 = bigint_nondet_rem!(ctx, x12, x0, 384);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x13, x0, 771), x14, 771), x12, 771),
        3145587,
        4,
    )?;
    let x15: BytePoly_768 = bigint_mul!(x14, x14, 768);
    let x16: BytePoly_387 = bigint_nondet_quot!(ctx, x15, x0, 387);
    let x17: BytePoly_384 = bigint_nondet_rem!(ctx, x15, x0, 384);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x16, x0, 771), x17, 771), x15, 771),
        3145587,
        4,
    )?;
    let x18: BytePoly_768 = bigint_mul!(x17, x17, 768);
    let x19: BytePoly_387 = bigint_nondet_quot!(ctx, x18, x0, 387);
    let x20: BytePoly_384 = bigint_nondet_rem!(ctx, x18, x0, 384);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x19, x0, 771), x20, 771), x18, 771),
        3145587,
        4,
    )?;
    let x21: BytePoly_768 = bigint_mul!(x20, x20, 768);
    let x22: BytePoly_387 = bigint_nondet_quot!(ctx, x21, x0, 387);
    let x23: BytePoly_384 = bigint_nondet_rem!(ctx, x21, x0, 384);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x22, x0, 771), x23, 771), x21, 771),
        3145587,
        4,
    )?;
    let x24: BytePoly_768 = bigint_mul!(x23, x23, 768);
    let x25: BytePoly_387 = bigint_nondet_quot!(ctx, x24, x0, 387);
    let x26: BytePoly_384 = bigint_nondet_rem!(ctx, x24, x0, 384);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x25, x0, 771), x26, 771), x24, 771),
        3145587,
        4,
    )?;
    let x27: BytePoly_768 = bigint_mul!(x26, x26, 768);
    let x28: BytePoly_387 = bigint_nondet_quot!(ctx, x27, x0, 387);
    let x29: BytePoly_384 = bigint_nondet_rem!(ctx, x27, x0, 384);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x28, x0, 771), x29, 771), x27, 771),
        3145587,
        4,
    )?;
    let x30: BytePoly_768 = bigint_mul!(x29, x29, 768);
    let x31: BytePoly_387 = bigint_nondet_quot!(ctx, x30, x0, 387);
    let x32: BytePoly_384 = bigint_nondet_rem!(ctx, x30, x0, 384);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x31, x0, 771), x32, 771), x30, 771),
        3145587,
        4,
    )?;
    let x33: BytePoly_768 = bigint_mul!(x32, x32, 768);
    let x34: BytePoly_387 = bigint_nondet_quot!(ctx, x33, x0, 387);
    let x35: BytePoly_384 = bigint_nondet_rem!(ctx, x33, x0, 384);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x34, x0, 771), x35, 771), x33, 771),
        3145587,
        4,
    )?;
    let x36: BytePoly_768 = bigint_mul!(x35, x35, 768);
    let x37: BytePoly_387 = bigint_nondet_quot!(ctx, x36, x0, 387);
    let x38: BytePoly_384 = bigint_nondet_rem!(ctx, x36, x0, 384);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x37, x0, 771), x38, 771), x36, 771),
        3145587,
        4,
    )?;
    let x39: BytePoly_768 = bigint_mul!(x38, x38, 768);
    let x40: BytePoly_387 = bigint_nondet_quot!(ctx, x39, x0, 387);
    let x41: BytePoly_384 = bigint_nondet_rem!(ctx, x39, x0, 384);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x40, x0, 771), x41, 771), x39, 771),
        3145587,
        4,
    )?;
    let x42: BytePoly_768 = bigint_mul!(x41, x41, 768);
    let x43: BytePoly_387 = bigint_nondet_quot!(ctx, x42, x0, 387);
    let x44: BytePoly_384 = bigint_nondet_rem!(ctx, x42, x0, 384);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x43, x0, 771), x44, 771), x42, 771),
        3145587,
        4,
    )?;
    let x45: BytePoly_768 = bigint_mul!(x44, x44, 768);
    let x46: BytePoly_387 = bigint_nondet_quot!(ctx, x45, x0, 387);
    let x47: BytePoly_384 = bigint_nondet_rem!(ctx, x45, x0, 384);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x46, x0, 771), x47, 771), x45, 771),
        3145587,
        4,
    )?;
    let x48: BytePoly_768 = bigint_mul!(x47, x47, 768);
    let x49: BytePoly_387 = bigint_nondet_quot!(ctx, x48, x0, 387);
    let x50: BytePoly_384 = bigint_nondet_rem!(ctx, x48, x0, 384);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x49, x0, 771), x50, 771), x48, 771),
        3145587,
        4,
    )?;
    let x51: BytePoly_768 = bigint_mul!(x50, x1, 768);
    let x52: BytePoly_387 = bigint_nondet_quot!(ctx, x51, x0, 387);
    let x53: BytePoly_384 = bigint_nondet_rem!(ctx, x51, x0, 384);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x52, x0, 771), x53, 771), x51, 771),
        3145587,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x53, x2, 384), 34, 1)?;
    return Ok(());
}
pub fn nondet_inv_test_8(ctx: &mut BigIntContext) -> Result<()> {
    let x0: BytePoly_1 = bigint_const!(ctx, 1);
    let x1: BytePoly_1 = bigint_def!(ctx, 1, 0, 1);
    let x2: BytePoly_1 = bigint_def!(ctx, 1, 1, 1);
    let x3: BytePoly_1 = bigint_def!(ctx, 1, 2, 1);
    let x4: BytePoly_1 = bigint_nondet_inv!(ctx, x1, x2, 1);
    let x5: BytePoly_2 = bigint_mul!(x1, x4, 2);
    let x6: BytePoly_3 = bigint_nondet_quot!(ctx, x5, x2, 3);
    let x7: BytePoly_1 = bigint_nondet_rem!(ctx, x5, x2, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x6, x2, 4), x7, 4), x5, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x7, x0, 1), 34, 1)?;
    eqz(ctx, &bigint_sub!(x4, x3, 1), 34, 1)?;
    return Ok(());
}
pub fn const_add_test_8(ctx: &mut BigIntContext) -> Result<()> {
    let x0: BytePoly_2 = bigint_const!(ctx, 71, 71);
    let x1: BytePoly_1 = bigint_def!(ctx, 1, 0, 1);
    let x2: BytePoly_3 = bigint_def!(ctx, 3, 1, 1);
    eqz(ctx, &bigint_sub!(bigint_add!(x1, x0, 2), x2, 3), 34, 1)?;
    return Ok(());
}
pub fn const_add_alt_test_16(ctx: &mut BigIntContext) -> Result<()> {
    let x0: BytePoly_2 = bigint_const!(ctx, 50, 84);
    let x1: BytePoly_2 = bigint_def!(ctx, 2, 0, 1);
    let x2: BytePoly_3 = bigint_def!(ctx, 3, 1, 1);
    eqz(ctx, &bigint_sub!(bigint_add!(x1, x0, 2), x2, 3), 34, 1)?;
    return Ok(());
}
pub fn const_mul_test_8(ctx: &mut BigIntContext) -> Result<()> {
    let x0: BytePoly_2 = bigint_const!(ctx, 50, 84);
    let x1: BytePoly_1 = bigint_def!(ctx, 1, 0, 1);
    let x2: BytePoly_3 = bigint_def!(ctx, 3, 1, 1);
    eqz(ctx, &bigint_sub!(bigint_mul!(x1, x0, 3), x2, 3), 16259, 2)?;
    return Ok(());
}
pub fn add_test_8(ctx: &mut BigIntContext) -> Result<()> {
    let x0: BytePoly_1 = bigint_def!(ctx, 1, 0, 1);
    let x1: BytePoly_1 = bigint_def!(ctx, 1, 1, 1);
    let x2: BytePoly_2 = bigint_def!(ctx, 2, 2, 1);
    eqz(ctx, &bigint_sub!(bigint_add!(x0, x1, 1), x2, 2), 34, 1)?;
    return Ok(());
}
pub fn add_test_16(ctx: &mut BigIntContext) -> Result<()> {
    let x0: BytePoly_2 = bigint_def!(ctx, 2, 0, 1);
    let x1: BytePoly_2 = bigint_def!(ctx, 2, 1, 1);
    let x2: BytePoly_3 = bigint_def!(ctx, 3, 2, 1);
    eqz(ctx, &bigint_sub!(bigint_add!(x0, x1, 2), x2, 3), 34, 1)?;
    return Ok(());
}
pub fn add_test_128(ctx: &mut BigIntContext) -> Result<()> {
    let x0: BytePoly_16 = bigint_def!(ctx, 16, 0, 1);
    let x1: BytePoly_16 = bigint_def!(ctx, 16, 1, 1);
    let x2: BytePoly_17 = bigint_def!(ctx, 17, 2, 1);
    eqz(ctx, &bigint_sub!(bigint_add!(x0, x1, 16), x2, 17), 34, 1)?;
    return Ok(());
}
pub fn const_one_test_8(ctx: &mut BigIntContext) -> Result<()> {
    let x0: BytePoly_1 = bigint_const!(ctx, 1);
    let x1: BytePoly_1 = bigint_def!(ctx, 1, 0, 1);
    eqz(ctx, &bigint_sub!(x0, x1, 1), 34, 1)?;
    return Ok(());
}
pub fn const_twobyte_test_16(ctx: &mut BigIntContext) -> Result<()> {
    let x0: BytePoly_2 = bigint_const!(ctx, 52, 18);
    let x1: BytePoly_2 = bigint_def!(ctx, 2, 0, 1);
    eqz(ctx, &bigint_sub!(x0, x1, 2), 34, 1)?;
    return Ok(());
}
pub fn sub_test_8(ctx: &mut BigIntContext) -> Result<()> {
    let x0: BytePoly_1 = bigint_def!(ctx, 1, 0, 1);
    let x1: BytePoly_1 = bigint_def!(ctx, 1, 1, 1);
    let x2: BytePoly_1 = bigint_def!(ctx, 1, 2, 1);
    eqz(ctx, &bigint_sub!(bigint_sub!(x0, x1, 1), x2, 1), 34, 1)?;
    return Ok(());
}
pub fn sub_test_128(ctx: &mut BigIntContext) -> Result<()> {
    let x0: BytePoly_16 = bigint_def!(ctx, 16, 0, 1);
    let x1: BytePoly_16 = bigint_def!(ctx, 16, 1, 1);
    let x2: BytePoly_16 = bigint_def!(ctx, 16, 2, 1);
    eqz(ctx, &bigint_sub!(bigint_sub!(x0, x1, 16), x2, 16), 34, 1)?;
    return Ok(());
}
pub fn mul_test_8(ctx: &mut BigIntContext) -> Result<()> {
    let x0: BytePoly_1 = bigint_def!(ctx, 1, 0, 1);
    let x1: BytePoly_1 = bigint_def!(ctx, 1, 1, 1);
    let x2: BytePoly_2 = bigint_def!(ctx, 2, 2, 1);
    eqz(ctx, &bigint_sub!(bigint_mul!(x0, x1, 2), x2, 2), 8131, 2)?;
    return Ok(());
}
pub fn mul_test_128(ctx: &mut BigIntContext) -> Result<()> {
    let x0: BytePoly_16 = bigint_def!(ctx, 16, 0, 1);
    let x1: BytePoly_16 = bigint_def!(ctx, 16, 1, 1);
    let x2: BytePoly_32 = bigint_def!(ctx, 32, 2, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_mul!(x0, x1, 32), x2, 32),
        130053,
        4,
    )?;
    return Ok(());
}
pub fn reduce_test_8(ctx: &mut BigIntContext) -> Result<()> {
    let x0: BytePoly_1 = bigint_def!(ctx, 1, 0, 1);
    let x1: BytePoly_1 = bigint_def!(ctx, 1, 1, 1);
    let x2: BytePoly_1 = bigint_def!(ctx, 1, 2, 1);
    let x3: BytePoly_1 = bigint_nondet_quot!(ctx, x0, x1, 1);
    let x4: BytePoly_1 = bigint_nondet_rem!(ctx, x0, x1, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3, x1, 2), x4, 2), x0, 2),
        8131,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x4, x2, 1), 34, 1)?;
    return Ok(());
}
pub fn reduce_test_128(ctx: &mut BigIntContext) -> Result<()> {
    let x0: BytePoly_16 = bigint_def!(ctx, 16, 0, 1);
    let x1: BytePoly_16 = bigint_def!(ctx, 16, 1, 1);
    let x2: BytePoly_16 = bigint_def!(ctx, 16, 2, 1);
    let x3: BytePoly_16 = bigint_nondet_quot!(ctx, x0, x1, 16);
    let x4: BytePoly_16 = bigint_nondet_rem!(ctx, x0, x1, 16);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3, x1, 32), x4, 32), x0, 32),
        130053,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x4, x2, 16), 34, 1)?;
    return Ok(());
}
pub fn ecdsa_verify_8(ctx: &mut BigIntContext) -> Result<()> {
    let x0: BytePoly_1 = bigint_const!(ctx, 1);
    let x1: BytePoly_1 = bigint_const!(ctx, 2);
    let x2: BytePoly_1 = bigint_const!(ctx, 1);
    let x3: BytePoly_1 = bigint_const!(ctx, 3);
    let x4: BytePoly_1 = bigint_const!(ctx, 0);
    let x5: BytePoly_1 = bigint_const!(ctx, 31);
    let x6: BytePoly_1 = bigint_const!(ctx, 43);
    let x7: BytePoly_1 = bigint_def!(ctx, 1, 0, 1);
    let x8: BytePoly_1 = bigint_def!(ctx, 1, 1, 1);
    let x9: BytePoly_1 = bigint_def!(ctx, 1, 2, 1);
    let x10: BytePoly_1 = bigint_def!(ctx, 1, 3, 1);
    let x11: BytePoly_2 = bigint_def!(ctx, 2, 4, 1);
    let x12: BytePoly_2 = bigint_def!(ctx, 2, 5, 1);
    let x13: BytePoly_2 = bigint_def!(ctx, 2, 6, 1);
    let x14: BytePoly_1 = bigint_def!(ctx, 1, 7, 1);
    let x15: BytePoly_1 = bigint_def!(ctx, 1, 8, 1);
    let x16: BytePoly_2 = bigint_mul!(x9, x9, 2);
    let x17: BytePoly_3 = bigint_nondet_quot!(ctx, x16, x5, 3);
    let x18: BytePoly_1 = bigint_nondet_rem!(ctx, x16, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x17, x5, 4), x18, 4), x16, 4),
        24387,
        2,
    )?;
    let x19: BytePoly_2 = bigint_mul!(x5, x5, 2);
    let x20: BytePoly_2 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_add!(bigint_mul!(x9, x18, 2), bigint_mul!(x9, x4, 2), 2),
                x3,
                2
            ),
            bigint_mul!(x10, x10, 2),
            2
        ),
        x19,
        2
    );
    let x21: BytePoly_3 = bigint_nondet_quot!(ctx, x20, x5, 3);
    let x22: BytePoly_1 = bigint_nondet_rem!(ctx, x20, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x21, x5, 4), x22, 4), x20, 4),
        24387,
        2,
    )?;
    eqz(ctx, &x22, 34, 1)?;
    let x23: BytePoly_2 = bigint_mul!(x15, x15, 2);
    let x24: BytePoly_2 = bigint_mul!(x14, x14, 2);
    let x25: BytePoly_3 = bigint_nondet_quot!(ctx, x24, x5, 3);
    let x26: BytePoly_1 = bigint_nondet_rem!(ctx, x24, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x25, x5, 4), x26, 4), x24, 4),
        24387,
        2,
    )?;
    let x27: BytePoly_2 = bigint_mul!(x14, x4, 2);
    let x28: BytePoly_2 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x14, x26, 2), x27, 2), x3, 2),
            x23,
            2
        ),
        x19,
        2
    );
    let x29: BytePoly_3 = bigint_nondet_quot!(ctx, x28, x5, 3);
    let x30: BytePoly_1 = bigint_nondet_rem!(ctx, x28, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x29, x5, 4), x30, 4), x28, 4),
        24387,
        2,
    )?;
    eqz(ctx, &x30, 34, 1)?;
    let x31: BytePoly_1 = bigint_nondet_inv!(ctx, x13, x6, 1);
    let x32: BytePoly_3 = bigint_mul!(x13, x31, 3);
    let x33: BytePoly_4 = bigint_nondet_quot!(ctx, x32, x6, 4);
    let x34: BytePoly_1 = bigint_nondet_rem!(ctx, x32, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x33, x6, 5), x34, 5), x32, 5),
        32515,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x34, x2, 1), 34, 1)?;
    let x35: BytePoly_3 = bigint_mul!(x11, x31, 3);
    let x36: BytePoly_4 = bigint_nondet_quot!(ctx, x35, x6, 4);
    let x37: BytePoly_1 = bigint_nondet_rem!(ctx, x35, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x36, x6, 5), x37, 5), x35, 5),
        32515,
        2,
    )?;
    let x38: BytePoly_3 = bigint_mul!(x12, x31, 3);
    let x39: BytePoly_4 = bigint_nondet_quot!(ctx, x38, x6, 4);
    let x40: BytePoly_1 = bigint_nondet_rem!(ctx, x38, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x39, x6, 5), x40, 5), x38, 5),
        32515,
        2,
    )?;
    let x41: BytePoly_3 = bigint_nondet_quot!(ctx, x24, x5, 3);
    let x42: BytePoly_1 = bigint_nondet_rem!(ctx, x24, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x41, x5, 4), x42, 4), x24, 4),
        24387,
        2,
    )?;
    let x43: BytePoly_2 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x14, x42, 2), x27, 2), x3, 2),
            x23,
            2
        ),
        x19,
        2
    );
    let x44: BytePoly_3 = bigint_nondet_quot!(ctx, x43, x5, 3);
    let x45: BytePoly_1 = bigint_nondet_rem!(ctx, x43, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x44, x5, 4), x45, 4), x43, 4),
        24387,
        2,
    )?;
    eqz(ctx, &x45, 34, 1)?;
    let x46: BytePoly_1 = bigint_nondet_rem!(ctx, x37, x1, 1);
    let x47: BytePoly_1 = bigint_nondet_quot!(ctx, x37, x1, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x47, x1, 2), x46, 2), x37, 2),
        8131,
        2,
    )?;
    let x48: BytePoly_1 = bigint_sub!(x2, x46, 1);
    eqz(ctx, &bigint_mul!(x46, x48, 2), 8131, 2)?;
    let x49: BytePoly_1 = bigint_add!(bigint_sub!(x8, x15, 1), x5, 1);
    let x50: BytePoly_1 = bigint_add!(bigint_sub!(x7, x14, 1), x5, 1);
    let x51: BytePoly_1 = bigint_nondet_inv!(ctx, x50, x5, 1);
    let x52: BytePoly_2 = bigint_mul!(x50, x51, 2);
    let x53: BytePoly_3 = bigint_nondet_quot!(ctx, x52, x5, 3);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x52, bigint_mul!(x53, x5, 4), 4), x0, 4),
        24387,
        2,
    )?;
    let x54: BytePoly_1 = bigint_nondet_rem!(ctx, bigint_mul!(x49, x51, 2), x5, 1);
    let x55: BytePoly_2 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x54, x50, 2), x49, 2), x5, 2),
        x5,
        2
    );
    let x56: BytePoly_3 = bigint_nondet_quot!(ctx, x55, x5, 3);
    eqz(ctx, &bigint_sub!(x55, bigint_mul!(x56, x5, 4), 4), 24387, 2)?;
    let x57: BytePoly_2 = bigint_mul!(x54, x54, 2);
    let x58: BytePoly_2 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x57, x14, 2), x5, 2), x7, 2),
        x5,
        2
    );
    let x59: BytePoly_3 = bigint_nondet_quot!(ctx, x58, x5, 3);
    let x60: BytePoly_1 = bigint_nondet_rem!(ctx, x58, x5, 1);
    let x61: BytePoly_2 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x5,
                    bigint_add!(
                        bigint_mul!(x54, x60, 2),
                        bigint_add!(bigint_sub!(x15, bigint_mul!(x54, x14, 2), 2), x5, 2),
                        2
                    ),
                    2
                ),
                x5,
                2
            ),
            x5,
            2
        ),
        x19,
        2
    );
    let x62: BytePoly_3 = bigint_nondet_quot!(ctx, x61, x5, 3);
    let x63: BytePoly_1 = bigint_nondet_rem!(ctx, x61, x5, 1);
    let x64: BytePoly_4 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x57, bigint_mul!(x59, x5, 4), 4), x14, 4),
                    x7,
                    4
                ),
                x5,
                4
            ),
            x5,
            4
        ),
        x60,
        4
    );
    eqz(ctx, &x64, 24387, 2)?;
    let x65: BytePoly_4 = bigint_sub!(
        bigint_add!(bigint_mul!(x62, x5, 4), x63, 4),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x54, bigint_sub!(x14, x60, 1), 2), x15, 2),
                    x5,
                    2
                ),
                x5,
                2
            ),
            x19,
            2
        ),
        4
    );
    eqz(ctx, &x65, 24387, 2)?;
    let x66: BytePoly_2 = bigint_add!(bigint_mul!(x60, x46, 2), bigint_mul!(x14, x48, 2), 2);
    let x67: BytePoly_2 = bigint_add!(bigint_mul!(x63, x46, 2), bigint_mul!(x15, x48, 2), 2);
    let x68: BytePoly_3 = bigint_nondet_quot!(ctx, x66, x5, 3);
    let x69: BytePoly_1 = bigint_nondet_rem!(ctx, x66, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x68, x5, 4), x69, 4), x66, 4),
        24387,
        2,
    )?;
    let x70: BytePoly_3 = bigint_nondet_quot!(ctx, x67, x5, 3);
    let x71: BytePoly_1 = bigint_nondet_rem!(ctx, x67, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x70, x5, 4), x71, 4), x67, 4),
        24387,
        2,
    )?;
    let x72: BytePoly_2 = bigint_mul!(x7, x7, 2);
    let x73: BytePoly_2 = bigint_add!(bigint_add!(bigint_add!(x72, x72, 2), x72, 2), x4, 2);
    let x74: BytePoly_2 = bigint_add!(x19, x19, 2);
    let x75: BytePoly_2 = bigint_add!(x74, x73, 2);
    let x76: BytePoly_1 = bigint_nondet_inv!(ctx, bigint_add!(x8, x8, 1), x5, 1);
    let x77: BytePoly_1 = bigint_nondet_rem!(ctx, bigint_mul!(x73, x76, 3), x5, 1);
    let x78: BytePoly_2 = bigint_mul!(x8, x77, 2);
    let x79: BytePoly_2 = bigint_add!(x78, x78, 2);
    let x80: BytePoly_3 = bigint_nondet_quot!(ctx, bigint_sub!(x75, x79, 2), x5, 3);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x80, x5, 4), x79, 4), x75, 4),
        24387,
        2,
    )?;
    let x81: BytePoly_2 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x77, x77, 2), x5, 2), x5, 2),
            x7,
            2
        ),
        x7,
        2
    );
    let x82: BytePoly_3 = bigint_nondet_quot!(ctx, x81, x5, 3);
    let x83: BytePoly_1 = bigint_nondet_rem!(ctx, x81, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x82, x5, 4), x83, 4), x81, 4),
        24387,
        2,
    )?;
    let x84: BytePoly_2 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x19, bigint_mul!(x77, x83, 2), 2), x5, 2),
            x8,
            2
        ),
        bigint_mul!(x77, x7, 2),
        2
    );
    let x85: BytePoly_3 = bigint_nondet_quot!(ctx, x84, x5, 3);
    let x86: BytePoly_1 = bigint_nondet_rem!(ctx, x84, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x85, x5, 4), x86, 4), x84, 4),
        24387,
        2,
    )?;
    let x87: BytePoly_1 = bigint_nondet_rem!(ctx, x47, x1, 1);
    let x88: BytePoly_1 = bigint_nondet_quot!(ctx, x47, x1, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x88, x1, 2), x87, 2), x47, 2),
        8131,
        2,
    )?;
    let x89: BytePoly_1 = bigint_sub!(x2, x87, 1);
    eqz(ctx, &bigint_mul!(x87, x89, 2), 8131, 2)?;
    let x90: BytePoly_1 = bigint_add!(bigint_sub!(x86, x71, 1), x5, 1);
    let x91: BytePoly_1 = bigint_add!(bigint_sub!(x83, x69, 1), x5, 1);
    let x92: BytePoly_1 = bigint_nondet_inv!(ctx, x91, x5, 1);
    let x93: BytePoly_2 = bigint_mul!(x91, x92, 2);
    let x94: BytePoly_3 = bigint_nondet_quot!(ctx, x93, x5, 3);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x93, bigint_mul!(x94, x5, 4), 4), x0, 4),
        24387,
        2,
    )?;
    let x95: BytePoly_1 = bigint_nondet_rem!(ctx, bigint_mul!(x90, x92, 2), x5, 1);
    let x96: BytePoly_2 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x95, x91, 2), x90, 2), x5, 2),
        x5,
        2
    );
    let x97: BytePoly_3 = bigint_nondet_quot!(ctx, x96, x5, 3);
    eqz(ctx, &bigint_sub!(x96, bigint_mul!(x97, x5, 4), 4), 24387, 2)?;
    let x98: BytePoly_2 = bigint_mul!(x95, x95, 2);
    let x99: BytePoly_2 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x98, x69, 2), x5, 2), x83, 2),
        x5,
        2
    );
    let x100: BytePoly_3 = bigint_nondet_quot!(ctx, x99, x5, 3);
    let x101: BytePoly_1 = bigint_nondet_rem!(ctx, x99, x5, 1);
    let x102: BytePoly_2 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x5,
                    bigint_add!(
                        bigint_mul!(x95, x101, 2),
                        bigint_add!(bigint_sub!(x71, bigint_mul!(x95, x69, 2), 2), x5, 2),
                        2
                    ),
                    2
                ),
                x5,
                2
            ),
            x5,
            2
        ),
        x19,
        2
    );
    let x103: BytePoly_3 = bigint_nondet_quot!(ctx, x102, x5, 3);
    let x104: BytePoly_1 = bigint_nondet_rem!(ctx, x102, x5, 1);
    let x105: BytePoly_4 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x98, bigint_mul!(x100, x5, 4), 4), x69, 4),
                    x83,
                    4
                ),
                x5,
                4
            ),
            x5,
            4
        ),
        x101,
        4
    );
    eqz(ctx, &x105, 24387, 2)?;
    let x106: BytePoly_4 = bigint_sub!(
        bigint_add!(bigint_mul!(x103, x5, 4), x104, 4),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x95, bigint_sub!(x69, x101, 1), 2), x71, 2),
                    x5,
                    2
                ),
                x5,
                2
            ),
            x19,
            2
        ),
        4
    );
    eqz(ctx, &x106, 24387, 2)?;
    let x107: BytePoly_2 = bigint_add!(bigint_mul!(x101, x87, 2), bigint_mul!(x69, x89, 2), 2);
    let x108: BytePoly_2 = bigint_add!(bigint_mul!(x104, x87, 2), bigint_mul!(x71, x89, 2), 2);
    let x109: BytePoly_3 = bigint_nondet_quot!(ctx, x107, x5, 3);
    let x110: BytePoly_1 = bigint_nondet_rem!(ctx, x107, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x109, x5, 4), x110, 4), x107, 4),
        24387,
        2,
    )?;
    let x111: BytePoly_3 = bigint_nondet_quot!(ctx, x108, x5, 3);
    let x112: BytePoly_1 = bigint_nondet_rem!(ctx, x108, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x111, x5, 4), x112, 4), x108, 4),
        24387,
        2,
    )?;
    let x113: BytePoly_2 = bigint_mul!(x83, x83, 2);
    let x114: BytePoly_2 = bigint_add!(bigint_add!(bigint_add!(x113, x113, 2), x113, 2), x4, 2);
    let x115: BytePoly_2 = bigint_add!(x74, x114, 2);
    let x116: BytePoly_1 = bigint_nondet_inv!(ctx, bigint_add!(x86, x86, 1), x5, 1);
    let x117: BytePoly_1 = bigint_nondet_rem!(ctx, bigint_mul!(x114, x116, 3), x5, 1);
    let x118: BytePoly_2 = bigint_mul!(x86, x117, 2);
    let x119: BytePoly_2 = bigint_add!(x118, x118, 2);
    let x120: BytePoly_3 = bigint_nondet_quot!(ctx, bigint_sub!(x115, x119, 2), x5, 3);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x120, x5, 4), x119, 4), x115, 4),
        24387,
        2,
    )?;
    let x121: BytePoly_2 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x117, x117, 2), x5, 2), x5, 2),
            x83,
            2
        ),
        x83,
        2
    );
    let x122: BytePoly_3 = bigint_nondet_quot!(ctx, x121, x5, 3);
    let x123: BytePoly_1 = bigint_nondet_rem!(ctx, x121, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x122, x5, 4), x123, 4), x121, 4),
        24387,
        2,
    )?;
    let x124: BytePoly_2 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x19, bigint_mul!(x117, x123, 2), 2), x5, 2),
            x86,
            2
        ),
        bigint_mul!(x117, x83, 2),
        2
    );
    let x125: BytePoly_3 = bigint_nondet_quot!(ctx, x124, x5, 3);
    let x126: BytePoly_1 = bigint_nondet_rem!(ctx, x124, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x125, x5, 4), x126, 4), x124, 4),
        24387,
        2,
    )?;
    let x127: BytePoly_1 = bigint_nondet_rem!(ctx, x88, x1, 1);
    let x128: BytePoly_1 = bigint_nondet_quot!(ctx, x88, x1, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x128, x1, 2), x127, 2), x88, 2),
        8131,
        2,
    )?;
    let x129: BytePoly_1 = bigint_sub!(x2, x127, 1);
    eqz(ctx, &bigint_mul!(x127, x129, 2), 8131, 2)?;
    let x130: BytePoly_1 = bigint_add!(bigint_sub!(x126, x112, 1), x5, 1);
    let x131: BytePoly_1 = bigint_add!(bigint_sub!(x123, x110, 1), x5, 1);
    let x132: BytePoly_1 = bigint_nondet_inv!(ctx, x131, x5, 1);
    let x133: BytePoly_2 = bigint_mul!(x131, x132, 2);
    let x134: BytePoly_3 = bigint_nondet_quot!(ctx, x133, x5, 3);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x133, bigint_mul!(x134, x5, 4), 4), x0, 4),
        24387,
        2,
    )?;
    let x135: BytePoly_1 = bigint_nondet_rem!(ctx, bigint_mul!(x130, x132, 2), x5, 1);
    let x136: BytePoly_2 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x135, x131, 2), x130, 2), x5, 2),
        x5,
        2
    );
    let x137: BytePoly_3 = bigint_nondet_quot!(ctx, x136, x5, 3);
    eqz(
        ctx,
        &bigint_sub!(x136, bigint_mul!(x137, x5, 4), 4),
        24387,
        2,
    )?;
    let x138: BytePoly_2 = bigint_mul!(x135, x135, 2);
    let x139: BytePoly_2 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x138, x110, 2), x5, 2), x123, 2),
        x5,
        2
    );
    let x140: BytePoly_3 = bigint_nondet_quot!(ctx, x139, x5, 3);
    let x141: BytePoly_1 = bigint_nondet_rem!(ctx, x139, x5, 1);
    let x142: BytePoly_2 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x5,
                    bigint_add!(
                        bigint_mul!(x135, x141, 2),
                        bigint_add!(bigint_sub!(x112, bigint_mul!(x135, x110, 2), 2), x5, 2),
                        2
                    ),
                    2
                ),
                x5,
                2
            ),
            x5,
            2
        ),
        x19,
        2
    );
    let x143: BytePoly_3 = bigint_nondet_quot!(ctx, x142, x5, 3);
    let x144: BytePoly_1 = bigint_nondet_rem!(ctx, x142, x5, 1);
    let x145: BytePoly_4 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x138, bigint_mul!(x140, x5, 4), 4), x110, 4),
                    x123,
                    4
                ),
                x5,
                4
            ),
            x5,
            4
        ),
        x141,
        4
    );
    eqz(ctx, &x145, 24387, 2)?;
    let x146: BytePoly_4 = bigint_sub!(
        bigint_add!(bigint_mul!(x143, x5, 4), x144, 4),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x135, bigint_sub!(x110, x141, 1), 2), x112, 2),
                    x5,
                    2
                ),
                x5,
                2
            ),
            x19,
            2
        ),
        4
    );
    eqz(ctx, &x146, 24387, 2)?;
    let x147: BytePoly_2 = bigint_add!(bigint_mul!(x141, x127, 2), bigint_mul!(x110, x129, 2), 2);
    let x148: BytePoly_2 = bigint_add!(bigint_mul!(x144, x127, 2), bigint_mul!(x112, x129, 2), 2);
    let x149: BytePoly_3 = bigint_nondet_quot!(ctx, x147, x5, 3);
    let x150: BytePoly_1 = bigint_nondet_rem!(ctx, x147, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x149, x5, 4), x150, 4), x147, 4),
        24387,
        2,
    )?;
    let x151: BytePoly_3 = bigint_nondet_quot!(ctx, x148, x5, 3);
    let x152: BytePoly_1 = bigint_nondet_rem!(ctx, x148, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x151, x5, 4), x152, 4), x148, 4),
        24387,
        2,
    )?;
    let x153: BytePoly_2 = bigint_mul!(x123, x123, 2);
    let x154: BytePoly_2 = bigint_add!(bigint_add!(bigint_add!(x153, x153, 2), x153, 2), x4, 2);
    let x155: BytePoly_2 = bigint_add!(x74, x154, 2);
    let x156: BytePoly_1 = bigint_nondet_inv!(ctx, bigint_add!(x126, x126, 1), x5, 1);
    let x157: BytePoly_1 = bigint_nondet_rem!(ctx, bigint_mul!(x154, x156, 3), x5, 1);
    let x158: BytePoly_2 = bigint_mul!(x126, x157, 2);
    let x159: BytePoly_2 = bigint_add!(x158, x158, 2);
    let x160: BytePoly_3 = bigint_nondet_quot!(ctx, bigint_sub!(x155, x159, 2), x5, 3);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x160, x5, 4), x159, 4), x155, 4),
        24387,
        2,
    )?;
    let x161: BytePoly_2 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x157, x157, 2), x5, 2), x5, 2),
            x123,
            2
        ),
        x123,
        2
    );
    let x162: BytePoly_3 = bigint_nondet_quot!(ctx, x161, x5, 3);
    let x163: BytePoly_1 = bigint_nondet_rem!(ctx, x161, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x162, x5, 4), x163, 4), x161, 4),
        24387,
        2,
    )?;
    let x164: BytePoly_2 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x19, bigint_mul!(x157, x163, 2), 2), x5, 2),
            x126,
            2
        ),
        bigint_mul!(x157, x123, 2),
        2
    );
    let x165: BytePoly_3 = bigint_nondet_quot!(ctx, x164, x5, 3);
    let x166: BytePoly_1 = bigint_nondet_rem!(ctx, x164, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x165, x5, 4), x166, 4), x164, 4),
        24387,
        2,
    )?;
    let x167: BytePoly_1 = bigint_nondet_rem!(ctx, x128, x1, 1);
    let x168: BytePoly_1 = bigint_nondet_quot!(ctx, x128, x1, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x168, x1, 2), x167, 2), x128, 2),
        8131,
        2,
    )?;
    let x169: BytePoly_1 = bigint_sub!(x2, x167, 1);
    eqz(ctx, &bigint_mul!(x167, x169, 2), 8131, 2)?;
    let x170: BytePoly_1 = bigint_add!(bigint_sub!(x166, x152, 1), x5, 1);
    let x171: BytePoly_1 = bigint_add!(bigint_sub!(x163, x150, 1), x5, 1);
    let x172: BytePoly_1 = bigint_nondet_inv!(ctx, x171, x5, 1);
    let x173: BytePoly_2 = bigint_mul!(x171, x172, 2);
    let x174: BytePoly_3 = bigint_nondet_quot!(ctx, x173, x5, 3);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x173, bigint_mul!(x174, x5, 4), 4), x0, 4),
        24387,
        2,
    )?;
    let x175: BytePoly_1 = bigint_nondet_rem!(ctx, bigint_mul!(x170, x172, 2), x5, 1);
    let x176: BytePoly_2 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x175, x171, 2), x170, 2), x5, 2),
        x5,
        2
    );
    let x177: BytePoly_3 = bigint_nondet_quot!(ctx, x176, x5, 3);
    eqz(
        ctx,
        &bigint_sub!(x176, bigint_mul!(x177, x5, 4), 4),
        24387,
        2,
    )?;
    let x178: BytePoly_2 = bigint_mul!(x175, x175, 2);
    let x179: BytePoly_2 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x178, x150, 2), x5, 2), x163, 2),
        x5,
        2
    );
    let x180: BytePoly_3 = bigint_nondet_quot!(ctx, x179, x5, 3);
    let x181: BytePoly_1 = bigint_nondet_rem!(ctx, x179, x5, 1);
    let x182: BytePoly_2 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x5,
                    bigint_add!(
                        bigint_mul!(x175, x181, 2),
                        bigint_add!(bigint_sub!(x152, bigint_mul!(x175, x150, 2), 2), x5, 2),
                        2
                    ),
                    2
                ),
                x5,
                2
            ),
            x5,
            2
        ),
        x19,
        2
    );
    let x183: BytePoly_3 = bigint_nondet_quot!(ctx, x182, x5, 3);
    let x184: BytePoly_1 = bigint_nondet_rem!(ctx, x182, x5, 1);
    let x185: BytePoly_4 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x178, bigint_mul!(x180, x5, 4), 4), x150, 4),
                    x163,
                    4
                ),
                x5,
                4
            ),
            x5,
            4
        ),
        x181,
        4
    );
    eqz(ctx, &x185, 24387, 2)?;
    let x186: BytePoly_4 = bigint_sub!(
        bigint_add!(bigint_mul!(x183, x5, 4), x184, 4),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x175, bigint_sub!(x150, x181, 1), 2), x152, 2),
                    x5,
                    2
                ),
                x5,
                2
            ),
            x19,
            2
        ),
        4
    );
    eqz(ctx, &x186, 24387, 2)?;
    let x187: BytePoly_2 = bigint_add!(bigint_mul!(x181, x167, 2), bigint_mul!(x150, x169, 2), 2);
    let x188: BytePoly_2 = bigint_add!(bigint_mul!(x184, x167, 2), bigint_mul!(x152, x169, 2), 2);
    let x189: BytePoly_3 = bigint_nondet_quot!(ctx, x187, x5, 3);
    let x190: BytePoly_1 = bigint_nondet_rem!(ctx, x187, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x189, x5, 4), x190, 4), x187, 4),
        24387,
        2,
    )?;
    let x191: BytePoly_3 = bigint_nondet_quot!(ctx, x188, x5, 3);
    let x192: BytePoly_1 = bigint_nondet_rem!(ctx, x188, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x191, x5, 4), x192, 4), x188, 4),
        24387,
        2,
    )?;
    let x193: BytePoly_2 = bigint_mul!(x163, x163, 2);
    let x194: BytePoly_2 = bigint_add!(bigint_add!(bigint_add!(x193, x193, 2), x193, 2), x4, 2);
    let x195: BytePoly_2 = bigint_add!(x74, x194, 2);
    let x196: BytePoly_1 = bigint_nondet_inv!(ctx, bigint_add!(x166, x166, 1), x5, 1);
    let x197: BytePoly_1 = bigint_nondet_rem!(ctx, bigint_mul!(x194, x196, 3), x5, 1);
    let x198: BytePoly_2 = bigint_mul!(x166, x197, 2);
    let x199: BytePoly_2 = bigint_add!(x198, x198, 2);
    let x200: BytePoly_3 = bigint_nondet_quot!(ctx, bigint_sub!(x195, x199, 2), x5, 3);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x200, x5, 4), x199, 4), x195, 4),
        24387,
        2,
    )?;
    let x201: BytePoly_2 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x197, x197, 2), x5, 2), x5, 2),
            x163,
            2
        ),
        x163,
        2
    );
    let x202: BytePoly_3 = bigint_nondet_quot!(ctx, x201, x5, 3);
    let x203: BytePoly_1 = bigint_nondet_rem!(ctx, x201, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x202, x5, 4), x203, 4), x201, 4),
        24387,
        2,
    )?;
    let x204: BytePoly_2 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x19, bigint_mul!(x197, x203, 2), 2), x5, 2),
            x166,
            2
        ),
        bigint_mul!(x197, x163, 2),
        2
    );
    let x205: BytePoly_3 = bigint_nondet_quot!(ctx, x204, x5, 3);
    let x206: BytePoly_1 = bigint_nondet_rem!(ctx, x204, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x205, x5, 4), x206, 4), x204, 4),
        24387,
        2,
    )?;
    let x207: BytePoly_1 = bigint_nondet_rem!(ctx, x168, x1, 1);
    let x208: BytePoly_1 = bigint_nondet_quot!(ctx, x168, x1, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x208, x1, 2), x207, 2), x168, 2),
        8131,
        2,
    )?;
    let x209: BytePoly_1 = bigint_sub!(x2, x207, 1);
    eqz(ctx, &bigint_mul!(x207, x209, 2), 8131, 2)?;
    let x210: BytePoly_1 = bigint_add!(bigint_sub!(x206, x192, 1), x5, 1);
    let x211: BytePoly_1 = bigint_add!(bigint_sub!(x203, x190, 1), x5, 1);
    let x212: BytePoly_1 = bigint_nondet_inv!(ctx, x211, x5, 1);
    let x213: BytePoly_2 = bigint_mul!(x211, x212, 2);
    let x214: BytePoly_3 = bigint_nondet_quot!(ctx, x213, x5, 3);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x213, bigint_mul!(x214, x5, 4), 4), x0, 4),
        24387,
        2,
    )?;
    let x215: BytePoly_1 = bigint_nondet_rem!(ctx, bigint_mul!(x210, x212, 2), x5, 1);
    let x216: BytePoly_2 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x215, x211, 2), x210, 2), x5, 2),
        x5,
        2
    );
    let x217: BytePoly_3 = bigint_nondet_quot!(ctx, x216, x5, 3);
    eqz(
        ctx,
        &bigint_sub!(x216, bigint_mul!(x217, x5, 4), 4),
        24387,
        2,
    )?;
    let x218: BytePoly_2 = bigint_mul!(x215, x215, 2);
    let x219: BytePoly_2 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x218, x190, 2), x5, 2), x203, 2),
        x5,
        2
    );
    let x220: BytePoly_3 = bigint_nondet_quot!(ctx, x219, x5, 3);
    let x221: BytePoly_1 = bigint_nondet_rem!(ctx, x219, x5, 1);
    let x222: BytePoly_2 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x5,
                    bigint_add!(
                        bigint_mul!(x215, x221, 2),
                        bigint_add!(bigint_sub!(x192, bigint_mul!(x215, x190, 2), 2), x5, 2),
                        2
                    ),
                    2
                ),
                x5,
                2
            ),
            x5,
            2
        ),
        x19,
        2
    );
    let x223: BytePoly_3 = bigint_nondet_quot!(ctx, x222, x5, 3);
    let x224: BytePoly_1 = bigint_nondet_rem!(ctx, x222, x5, 1);
    let x225: BytePoly_4 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x218, bigint_mul!(x220, x5, 4), 4), x190, 4),
                    x203,
                    4
                ),
                x5,
                4
            ),
            x5,
            4
        ),
        x221,
        4
    );
    eqz(ctx, &x225, 24387, 2)?;
    let x226: BytePoly_4 = bigint_sub!(
        bigint_add!(bigint_mul!(x223, x5, 4), x224, 4),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x215, bigint_sub!(x190, x221, 1), 2), x192, 2),
                    x5,
                    2
                ),
                x5,
                2
            ),
            x19,
            2
        ),
        4
    );
    eqz(ctx, &x226, 24387, 2)?;
    let x227: BytePoly_2 = bigint_add!(bigint_mul!(x221, x207, 2), bigint_mul!(x190, x209, 2), 2);
    let x228: BytePoly_2 = bigint_add!(bigint_mul!(x224, x207, 2), bigint_mul!(x192, x209, 2), 2);
    let x229: BytePoly_3 = bigint_nondet_quot!(ctx, x227, x5, 3);
    let x230: BytePoly_1 = bigint_nondet_rem!(ctx, x227, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x229, x5, 4), x230, 4), x227, 4),
        24387,
        2,
    )?;
    let x231: BytePoly_3 = bigint_nondet_quot!(ctx, x228, x5, 3);
    let x232: BytePoly_1 = bigint_nondet_rem!(ctx, x228, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x231, x5, 4), x232, 4), x228, 4),
        24387,
        2,
    )?;
    let x233: BytePoly_2 = bigint_mul!(x203, x203, 2);
    let x234: BytePoly_2 = bigint_add!(bigint_add!(bigint_add!(x233, x233, 2), x233, 2), x4, 2);
    let x235: BytePoly_2 = bigint_add!(x74, x234, 2);
    let x236: BytePoly_1 = bigint_nondet_inv!(ctx, bigint_add!(x206, x206, 1), x5, 1);
    let x237: BytePoly_1 = bigint_nondet_rem!(ctx, bigint_mul!(x234, x236, 3), x5, 1);
    let x238: BytePoly_2 = bigint_mul!(x206, x237, 2);
    let x239: BytePoly_2 = bigint_add!(x238, x238, 2);
    let x240: BytePoly_3 = bigint_nondet_quot!(ctx, bigint_sub!(x235, x239, 2), x5, 3);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x240, x5, 4), x239, 4), x235, 4),
        24387,
        2,
    )?;
    let x241: BytePoly_2 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x237, x237, 2), x5, 2), x5, 2),
            x203,
            2
        ),
        x203,
        2
    );
    let x242: BytePoly_3 = bigint_nondet_quot!(ctx, x241, x5, 3);
    let x243: BytePoly_1 = bigint_nondet_rem!(ctx, x241, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x242, x5, 4), x243, 4), x241, 4),
        24387,
        2,
    )?;
    let x244: BytePoly_2 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x19, bigint_mul!(x237, x243, 2), 2), x5, 2),
            x206,
            2
        ),
        bigint_mul!(x237, x203, 2),
        2
    );
    let x245: BytePoly_3 = bigint_nondet_quot!(ctx, x244, x5, 3);
    let x246: BytePoly_1 = bigint_nondet_rem!(ctx, x244, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x245, x5, 4), x246, 4), x244, 4),
        24387,
        2,
    )?;
    let x247: BytePoly_1 = bigint_nondet_rem!(ctx, x208, x1, 1);
    let x248: BytePoly_1 = bigint_nondet_quot!(ctx, x208, x1, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x248, x1, 2), x247, 2), x208, 2),
        8131,
        2,
    )?;
    let x249: BytePoly_1 = bigint_sub!(x2, x247, 1);
    eqz(ctx, &bigint_mul!(x247, x249, 2), 8131, 2)?;
    let x250: BytePoly_1 = bigint_add!(bigint_sub!(x246, x232, 1), x5, 1);
    let x251: BytePoly_1 = bigint_add!(bigint_sub!(x243, x230, 1), x5, 1);
    let x252: BytePoly_1 = bigint_nondet_inv!(ctx, x251, x5, 1);
    let x253: BytePoly_2 = bigint_mul!(x251, x252, 2);
    let x254: BytePoly_3 = bigint_nondet_quot!(ctx, x253, x5, 3);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x253, bigint_mul!(x254, x5, 4), 4), x0, 4),
        24387,
        2,
    )?;
    let x255: BytePoly_1 = bigint_nondet_rem!(ctx, bigint_mul!(x250, x252, 2), x5, 1);
    let x256: BytePoly_2 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x255, x251, 2), x250, 2), x5, 2),
        x5,
        2
    );
    let x257: BytePoly_3 = bigint_nondet_quot!(ctx, x256, x5, 3);
    eqz(
        ctx,
        &bigint_sub!(x256, bigint_mul!(x257, x5, 4), 4),
        24387,
        2,
    )?;
    let x258: BytePoly_2 = bigint_mul!(x255, x255, 2);
    let x259: BytePoly_2 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x258, x230, 2), x5, 2), x243, 2),
        x5,
        2
    );
    let x260: BytePoly_3 = bigint_nondet_quot!(ctx, x259, x5, 3);
    let x261: BytePoly_1 = bigint_nondet_rem!(ctx, x259, x5, 1);
    let x262: BytePoly_2 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x5,
                    bigint_add!(
                        bigint_mul!(x255, x261, 2),
                        bigint_add!(bigint_sub!(x232, bigint_mul!(x255, x230, 2), 2), x5, 2),
                        2
                    ),
                    2
                ),
                x5,
                2
            ),
            x5,
            2
        ),
        x19,
        2
    );
    let x263: BytePoly_3 = bigint_nondet_quot!(ctx, x262, x5, 3);
    let x264: BytePoly_1 = bigint_nondet_rem!(ctx, x262, x5, 1);
    let x265: BytePoly_4 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x258, bigint_mul!(x260, x5, 4), 4), x230, 4),
                    x243,
                    4
                ),
                x5,
                4
            ),
            x5,
            4
        ),
        x261,
        4
    );
    eqz(ctx, &x265, 24387, 2)?;
    let x266: BytePoly_4 = bigint_sub!(
        bigint_add!(bigint_mul!(x263, x5, 4), x264, 4),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x255, bigint_sub!(x230, x261, 1), 2), x232, 2),
                    x5,
                    2
                ),
                x5,
                2
            ),
            x19,
            2
        ),
        4
    );
    eqz(ctx, &x266, 24387, 2)?;
    let x267: BytePoly_2 = bigint_add!(bigint_mul!(x261, x247, 2), bigint_mul!(x230, x249, 2), 2);
    let x268: BytePoly_2 = bigint_add!(bigint_mul!(x264, x247, 2), bigint_mul!(x232, x249, 2), 2);
    let x269: BytePoly_3 = bigint_nondet_quot!(ctx, x267, x5, 3);
    let x270: BytePoly_1 = bigint_nondet_rem!(ctx, x267, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x269, x5, 4), x270, 4), x267, 4),
        24387,
        2,
    )?;
    let x271: BytePoly_3 = bigint_nondet_quot!(ctx, x268, x5, 3);
    let x272: BytePoly_1 = bigint_nondet_rem!(ctx, x268, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x271, x5, 4), x272, 4), x268, 4),
        24387,
        2,
    )?;
    let x273: BytePoly_2 = bigint_mul!(x243, x243, 2);
    let x274: BytePoly_2 = bigint_add!(bigint_add!(bigint_add!(x273, x273, 2), x273, 2), x4, 2);
    let x275: BytePoly_2 = bigint_add!(x74, x274, 2);
    let x276: BytePoly_1 = bigint_nondet_inv!(ctx, bigint_add!(x246, x246, 1), x5, 1);
    let x277: BytePoly_1 = bigint_nondet_rem!(ctx, bigint_mul!(x274, x276, 3), x5, 1);
    let x278: BytePoly_2 = bigint_mul!(x246, x277, 2);
    let x279: BytePoly_2 = bigint_add!(x278, x278, 2);
    let x280: BytePoly_3 = bigint_nondet_quot!(ctx, bigint_sub!(x275, x279, 2), x5, 3);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x280, x5, 4), x279, 4), x275, 4),
        24387,
        2,
    )?;
    let x281: BytePoly_2 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x277, x277, 2), x5, 2), x5, 2),
            x243,
            2
        ),
        x243,
        2
    );
    let x282: BytePoly_3 = bigint_nondet_quot!(ctx, x281, x5, 3);
    let x283: BytePoly_1 = bigint_nondet_rem!(ctx, x281, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x282, x5, 4), x283, 4), x281, 4),
        24387,
        2,
    )?;
    let x284: BytePoly_2 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x19, bigint_mul!(x277, x283, 2), 2), x5, 2),
            x246,
            2
        ),
        bigint_mul!(x277, x243, 2),
        2
    );
    let x285: BytePoly_3 = bigint_nondet_quot!(ctx, x284, x5, 3);
    let x286: BytePoly_1 = bigint_nondet_rem!(ctx, x284, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x285, x5, 4), x286, 4), x284, 4),
        24387,
        2,
    )?;
    let x287: BytePoly_1 = bigint_nondet_rem!(ctx, x248, x1, 1);
    let x288: BytePoly_1 = bigint_nondet_quot!(ctx, x248, x1, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x288, x1, 2), x287, 2), x248, 2),
        8131,
        2,
    )?;
    let x289: BytePoly_1 = bigint_sub!(x2, x287, 1);
    eqz(ctx, &bigint_mul!(x287, x289, 2), 8131, 2)?;
    let x290: BytePoly_1 = bigint_add!(bigint_sub!(x286, x272, 1), x5, 1);
    let x291: BytePoly_1 = bigint_add!(bigint_sub!(x283, x270, 1), x5, 1);
    let x292: BytePoly_1 = bigint_nondet_inv!(ctx, x291, x5, 1);
    let x293: BytePoly_2 = bigint_mul!(x291, x292, 2);
    let x294: BytePoly_3 = bigint_nondet_quot!(ctx, x293, x5, 3);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x293, bigint_mul!(x294, x5, 4), 4), x0, 4),
        24387,
        2,
    )?;
    let x295: BytePoly_1 = bigint_nondet_rem!(ctx, bigint_mul!(x290, x292, 2), x5, 1);
    let x296: BytePoly_2 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x295, x291, 2), x290, 2), x5, 2),
        x5,
        2
    );
    let x297: BytePoly_3 = bigint_nondet_quot!(ctx, x296, x5, 3);
    eqz(
        ctx,
        &bigint_sub!(x296, bigint_mul!(x297, x5, 4), 4),
        24387,
        2,
    )?;
    let x298: BytePoly_2 = bigint_mul!(x295, x295, 2);
    let x299: BytePoly_2 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x298, x270, 2), x5, 2), x283, 2),
        x5,
        2
    );
    let x300: BytePoly_3 = bigint_nondet_quot!(ctx, x299, x5, 3);
    let x301: BytePoly_1 = bigint_nondet_rem!(ctx, x299, x5, 1);
    let x302: BytePoly_2 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x5,
                    bigint_add!(
                        bigint_mul!(x295, x301, 2),
                        bigint_add!(bigint_sub!(x272, bigint_mul!(x295, x270, 2), 2), x5, 2),
                        2
                    ),
                    2
                ),
                x5,
                2
            ),
            x5,
            2
        ),
        x19,
        2
    );
    let x303: BytePoly_3 = bigint_nondet_quot!(ctx, x302, x5, 3);
    let x304: BytePoly_1 = bigint_nondet_rem!(ctx, x302, x5, 1);
    let x305: BytePoly_4 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x298, bigint_mul!(x300, x5, 4), 4), x270, 4),
                    x283,
                    4
                ),
                x5,
                4
            ),
            x5,
            4
        ),
        x301,
        4
    );
    eqz(ctx, &x305, 24387, 2)?;
    let x306: BytePoly_4 = bigint_sub!(
        bigint_add!(bigint_mul!(x303, x5, 4), x304, 4),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x295, bigint_sub!(x270, x301, 1), 2), x272, 2),
                    x5,
                    2
                ),
                x5,
                2
            ),
            x19,
            2
        ),
        4
    );
    eqz(ctx, &x306, 24387, 2)?;
    let x307: BytePoly_2 = bigint_add!(bigint_mul!(x301, x287, 2), bigint_mul!(x270, x289, 2), 2);
    let x308: BytePoly_2 = bigint_add!(bigint_mul!(x304, x287, 2), bigint_mul!(x272, x289, 2), 2);
    let x309: BytePoly_3 = bigint_nondet_quot!(ctx, x307, x5, 3);
    let x310: BytePoly_1 = bigint_nondet_rem!(ctx, x307, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x309, x5, 4), x310, 4), x307, 4),
        24387,
        2,
    )?;
    let x311: BytePoly_3 = bigint_nondet_quot!(ctx, x308, x5, 3);
    let x312: BytePoly_1 = bigint_nondet_rem!(ctx, x308, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x311, x5, 4), x312, 4), x308, 4),
        24387,
        2,
    )?;
    let x313: BytePoly_2 = bigint_mul!(x283, x283, 2);
    let x314: BytePoly_2 = bigint_add!(bigint_add!(bigint_add!(x313, x313, 2), x313, 2), x4, 2);
    let x315: BytePoly_2 = bigint_add!(x74, x314, 2);
    let x316: BytePoly_1 = bigint_nondet_inv!(ctx, bigint_add!(x286, x286, 1), x5, 1);
    let x317: BytePoly_1 = bigint_nondet_rem!(ctx, bigint_mul!(x314, x316, 3), x5, 1);
    let x318: BytePoly_2 = bigint_mul!(x286, x317, 2);
    let x319: BytePoly_2 = bigint_add!(x318, x318, 2);
    let x320: BytePoly_3 = bigint_nondet_quot!(ctx, bigint_sub!(x315, x319, 2), x5, 3);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x320, x5, 4), x319, 4), x315, 4),
        24387,
        2,
    )?;
    let x321: BytePoly_2 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x317, x317, 2), x5, 2), x5, 2),
            x283,
            2
        ),
        x283,
        2
    );
    let x322: BytePoly_3 = bigint_nondet_quot!(ctx, x321, x5, 3);
    let x323: BytePoly_1 = bigint_nondet_rem!(ctx, x321, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x322, x5, 4), x323, 4), x321, 4),
        24387,
        2,
    )?;
    let x324: BytePoly_2 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x19, bigint_mul!(x317, x323, 2), 2), x5, 2),
            x286,
            2
        ),
        bigint_mul!(x317, x283, 2),
        2
    );
    let x325: BytePoly_3 = bigint_nondet_quot!(ctx, x324, x5, 3);
    let x326: BytePoly_1 = bigint_nondet_rem!(ctx, x324, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x325, x5, 4), x326, 4), x324, 4),
        24387,
        2,
    )?;
    let x327: BytePoly_1 = bigint_nondet_rem!(ctx, x288, x1, 1);
    let x328: BytePoly_1 = bigint_nondet_quot!(ctx, x288, x1, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x328, x1, 2), x327, 2), x288, 2),
        8131,
        2,
    )?;
    let x329: BytePoly_1 = bigint_sub!(x2, x327, 1);
    eqz(ctx, &bigint_mul!(x327, x329, 2), 8131, 2)?;
    let x330: BytePoly_1 = bigint_add!(bigint_sub!(x326, x312, 1), x5, 1);
    let x331: BytePoly_1 = bigint_add!(bigint_sub!(x323, x310, 1), x5, 1);
    let x332: BytePoly_1 = bigint_nondet_inv!(ctx, x331, x5, 1);
    let x333: BytePoly_2 = bigint_mul!(x331, x332, 2);
    let x334: BytePoly_3 = bigint_nondet_quot!(ctx, x333, x5, 3);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x333, bigint_mul!(x334, x5, 4), 4), x0, 4),
        24387,
        2,
    )?;
    let x335: BytePoly_1 = bigint_nondet_rem!(ctx, bigint_mul!(x330, x332, 2), x5, 1);
    let x336: BytePoly_2 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x335, x331, 2), x330, 2), x5, 2),
        x5,
        2
    );
    let x337: BytePoly_3 = bigint_nondet_quot!(ctx, x336, x5, 3);
    eqz(
        ctx,
        &bigint_sub!(x336, bigint_mul!(x337, x5, 4), 4),
        24387,
        2,
    )?;
    let x338: BytePoly_2 = bigint_mul!(x335, x335, 2);
    let x339: BytePoly_2 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x338, x310, 2), x5, 2), x323, 2),
        x5,
        2
    );
    let x340: BytePoly_3 = bigint_nondet_quot!(ctx, x339, x5, 3);
    let x341: BytePoly_1 = bigint_nondet_rem!(ctx, x339, x5, 1);
    let x342: BytePoly_2 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x5,
                    bigint_add!(
                        bigint_mul!(x335, x341, 2),
                        bigint_add!(bigint_sub!(x312, bigint_mul!(x335, x310, 2), 2), x5, 2),
                        2
                    ),
                    2
                ),
                x5,
                2
            ),
            x5,
            2
        ),
        x19,
        2
    );
    let x343: BytePoly_3 = bigint_nondet_quot!(ctx, x342, x5, 3);
    let x344: BytePoly_1 = bigint_nondet_rem!(ctx, x342, x5, 1);
    let x345: BytePoly_4 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x338, bigint_mul!(x340, x5, 4), 4), x310, 4),
                    x323,
                    4
                ),
                x5,
                4
            ),
            x5,
            4
        ),
        x341,
        4
    );
    eqz(ctx, &x345, 24387, 2)?;
    let x346: BytePoly_4 = bigint_sub!(
        bigint_add!(bigint_mul!(x343, x5, 4), x344, 4),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x335, bigint_sub!(x310, x341, 1), 2), x312, 2),
                    x5,
                    2
                ),
                x5,
                2
            ),
            x19,
            2
        ),
        4
    );
    eqz(ctx, &x346, 24387, 2)?;
    let x347: BytePoly_2 = bigint_add!(bigint_mul!(x341, x327, 2), bigint_mul!(x310, x329, 2), 2);
    let x348: BytePoly_2 = bigint_add!(bigint_mul!(x344, x327, 2), bigint_mul!(x312, x329, 2), 2);
    let x349: BytePoly_3 = bigint_nondet_quot!(ctx, x347, x5, 3);
    let x350: BytePoly_1 = bigint_nondet_rem!(ctx, x347, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x349, x5, 4), x350, 4), x347, 4),
        24387,
        2,
    )?;
    let x351: BytePoly_3 = bigint_nondet_quot!(ctx, x348, x5, 3);
    let x352: BytePoly_1 = bigint_nondet_rem!(ctx, x348, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x351, x5, 4), x352, 4), x348, 4),
        24387,
        2,
    )?;
    let x353: BytePoly_2 = bigint_mul!(x323, x323, 2);
    let x354: BytePoly_2 = bigint_add!(bigint_add!(bigint_add!(x353, x353, 2), x353, 2), x4, 2);
    let x355: BytePoly_2 = bigint_add!(x74, x354, 2);
    let x356: BytePoly_1 = bigint_nondet_inv!(ctx, bigint_add!(x326, x326, 1), x5, 1);
    let x357: BytePoly_1 = bigint_nondet_rem!(ctx, bigint_mul!(x354, x356, 3), x5, 1);
    let x358: BytePoly_2 = bigint_mul!(x326, x357, 2);
    let x359: BytePoly_2 = bigint_add!(x358, x358, 2);
    let x360: BytePoly_3 = bigint_nondet_quot!(ctx, bigint_sub!(x355, x359, 2), x5, 3);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x360, x5, 4), x359, 4), x355, 4),
        24387,
        2,
    )?;
    let x361: BytePoly_2 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x357, x357, 2), x5, 2), x5, 2),
            x323,
            2
        ),
        x323,
        2
    );
    let x362: BytePoly_3 = bigint_nondet_quot!(ctx, x361, x5, 3);
    let x363: BytePoly_1 = bigint_nondet_rem!(ctx, x361, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x362, x5, 4), x363, 4), x361, 4),
        24387,
        2,
    )?;
    let x364: BytePoly_2 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x19, bigint_mul!(x357, x363, 2), 2), x5, 2),
            x326,
            2
        ),
        bigint_mul!(x357, x323, 2),
        2
    );
    let x365: BytePoly_3 = bigint_nondet_quot!(ctx, x364, x5, 3);
    let x366: BytePoly_1 = bigint_nondet_rem!(ctx, x364, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x365, x5, 4), x366, 4), x364, 4),
        24387,
        2,
    )?;
    let x367: BytePoly_1 = bigint_sub!(x5, x15, 1);
    let x368: BytePoly_1 = bigint_add!(bigint_sub!(x367, x352, 1), x5, 1);
    let x369: BytePoly_1 = bigint_add!(bigint_sub!(x14, x350, 1), x5, 1);
    let x370: BytePoly_1 = bigint_nondet_inv!(ctx, x369, x5, 1);
    let x371: BytePoly_2 = bigint_mul!(x369, x370, 2);
    let x372: BytePoly_3 = bigint_nondet_quot!(ctx, x371, x5, 3);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x371, bigint_mul!(x372, x5, 4), 4), x0, 4),
        24387,
        2,
    )?;
    let x373: BytePoly_1 = bigint_nondet_rem!(ctx, bigint_mul!(x368, x370, 2), x5, 1);
    let x374: BytePoly_2 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x373, x369, 2), x368, 2), x5, 2),
        x5,
        2
    );
    let x375: BytePoly_3 = bigint_nondet_quot!(ctx, x374, x5, 3);
    eqz(
        ctx,
        &bigint_sub!(x374, bigint_mul!(x375, x5, 4), 4),
        24387,
        2,
    )?;
    let x376: BytePoly_2 = bigint_mul!(x373, x373, 2);
    let x377: BytePoly_2 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x376, x350, 2), x5, 2), x14, 2),
        x5,
        2
    );
    let x378: BytePoly_3 = bigint_nondet_quot!(ctx, x377, x5, 3);
    let x379: BytePoly_1 = bigint_nondet_rem!(ctx, x377, x5, 1);
    let x380: BytePoly_2 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x5,
                    bigint_add!(
                        bigint_mul!(x373, x379, 2),
                        bigint_add!(bigint_sub!(x352, bigint_mul!(x373, x350, 2), 2), x5, 2),
                        2
                    ),
                    2
                ),
                x5,
                2
            ),
            x5,
            2
        ),
        x19,
        2
    );
    let x381: BytePoly_3 = bigint_nondet_quot!(ctx, x380, x5, 3);
    let x382: BytePoly_1 = bigint_nondet_rem!(ctx, x380, x5, 1);
    let x383: BytePoly_4 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x376, bigint_mul!(x378, x5, 4), 4), x350, 4),
                    x14,
                    4
                ),
                x5,
                4
            ),
            x5,
            4
        ),
        x379,
        4
    );
    eqz(ctx, &x383, 24387, 2)?;
    let x384: BytePoly_4 = bigint_sub!(
        bigint_add!(bigint_mul!(x381, x5, 4), x382, 4),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x373, bigint_sub!(x350, x379, 1), 2), x352, 2),
                    x5,
                    2
                ),
                x5,
                2
            ),
            x19,
            2
        ),
        4
    );
    eqz(ctx, &x384, 24387, 2)?;
    let x385: BytePoly_3 = bigint_nondet_quot!(ctx, x24, x5, 3);
    let x386: BytePoly_1 = bigint_nondet_rem!(ctx, x24, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x385, x5, 4), x386, 4), x24, 4),
        24387,
        2,
    )?;
    let x387: BytePoly_2 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x14, x386, 2), x27, 2), x3, 2),
            x23,
            2
        ),
        x19,
        2
    );
    let x388: BytePoly_3 = bigint_nondet_quot!(ctx, x387, x5, 3);
    let x389: BytePoly_1 = bigint_nondet_rem!(ctx, x387, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x388, x5, 4), x389, 4), x387, 4),
        24387,
        2,
    )?;
    eqz(ctx, &x389, 34, 1)?;
    let x390: BytePoly_1 = bigint_nondet_rem!(ctx, x40, x1, 1);
    let x391: BytePoly_1 = bigint_nondet_quot!(ctx, x40, x1, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x391, x1, 2), x390, 2), x40, 2),
        8131,
        2,
    )?;
    let x392: BytePoly_1 = bigint_sub!(x2, x390, 1);
    eqz(ctx, &bigint_mul!(x390, x392, 2), 8131, 2)?;
    let x393: BytePoly_1 = bigint_add!(bigint_sub!(x10, x15, 1), x5, 1);
    let x394: BytePoly_1 = bigint_add!(bigint_sub!(x9, x14, 1), x5, 1);
    let x395: BytePoly_1 = bigint_nondet_inv!(ctx, x394, x5, 1);
    let x396: BytePoly_2 = bigint_mul!(x394, x395, 2);
    let x397: BytePoly_3 = bigint_nondet_quot!(ctx, x396, x5, 3);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x396, bigint_mul!(x397, x5, 4), 4), x0, 4),
        24387,
        2,
    )?;
    let x398: BytePoly_1 = bigint_nondet_rem!(ctx, bigint_mul!(x393, x395, 2), x5, 1);
    let x399: BytePoly_2 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x398, x394, 2), x393, 2), x5, 2),
        x5,
        2
    );
    let x400: BytePoly_3 = bigint_nondet_quot!(ctx, x399, x5, 3);
    eqz(
        ctx,
        &bigint_sub!(x399, bigint_mul!(x400, x5, 4), 4),
        24387,
        2,
    )?;
    let x401: BytePoly_2 = bigint_mul!(x398, x398, 2);
    let x402: BytePoly_2 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x401, x14, 2), x5, 2), x9, 2),
        x5,
        2
    );
    let x403: BytePoly_3 = bigint_nondet_quot!(ctx, x402, x5, 3);
    let x404: BytePoly_1 = bigint_nondet_rem!(ctx, x402, x5, 1);
    let x405: BytePoly_2 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x5,
                    bigint_add!(
                        bigint_mul!(x398, x404, 2),
                        bigint_add!(bigint_sub!(x15, bigint_mul!(x398, x14, 2), 2), x5, 2),
                        2
                    ),
                    2
                ),
                x5,
                2
            ),
            x5,
            2
        ),
        x19,
        2
    );
    let x406: BytePoly_3 = bigint_nondet_quot!(ctx, x405, x5, 3);
    let x407: BytePoly_1 = bigint_nondet_rem!(ctx, x405, x5, 1);
    let x408: BytePoly_4 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x401, bigint_mul!(x403, x5, 4), 4), x14, 4),
                    x9,
                    4
                ),
                x5,
                4
            ),
            x5,
            4
        ),
        x404,
        4
    );
    eqz(ctx, &x408, 24387, 2)?;
    let x409: BytePoly_4 = bigint_sub!(
        bigint_add!(bigint_mul!(x406, x5, 4), x407, 4),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x398, bigint_sub!(x14, x404, 1), 2), x15, 2),
                    x5,
                    2
                ),
                x5,
                2
            ),
            x19,
            2
        ),
        4
    );
    eqz(ctx, &x409, 24387, 2)?;
    let x410: BytePoly_2 = bigint_add!(bigint_mul!(x404, x390, 2), bigint_mul!(x14, x392, 2), 2);
    let x411: BytePoly_2 = bigint_add!(bigint_mul!(x407, x390, 2), bigint_mul!(x15, x392, 2), 2);
    let x412: BytePoly_3 = bigint_nondet_quot!(ctx, x410, x5, 3);
    let x413: BytePoly_1 = bigint_nondet_rem!(ctx, x410, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x412, x5, 4), x413, 4), x410, 4),
        24387,
        2,
    )?;
    let x414: BytePoly_3 = bigint_nondet_quot!(ctx, x411, x5, 3);
    let x415: BytePoly_1 = bigint_nondet_rem!(ctx, x411, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x414, x5, 4), x415, 4), x411, 4),
        24387,
        2,
    )?;
    let x416: BytePoly_2 = bigint_add!(bigint_add!(bigint_add!(x16, x16, 2), x16, 2), x4, 2);
    let x417: BytePoly_2 = bigint_add!(x74, x416, 2);
    let x418: BytePoly_1 = bigint_nondet_inv!(ctx, bigint_add!(x10, x10, 1), x5, 1);
    let x419: BytePoly_1 = bigint_nondet_rem!(ctx, bigint_mul!(x416, x418, 3), x5, 1);
    let x420: BytePoly_2 = bigint_mul!(x10, x419, 2);
    let x421: BytePoly_2 = bigint_add!(x420, x420, 2);
    let x422: BytePoly_3 = bigint_nondet_quot!(ctx, bigint_sub!(x417, x421, 2), x5, 3);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x422, x5, 4), x421, 4), x417, 4),
        24387,
        2,
    )?;
    let x423: BytePoly_2 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x419, x419, 2), x5, 2), x5, 2),
            x9,
            2
        ),
        x9,
        2
    );
    let x424: BytePoly_3 = bigint_nondet_quot!(ctx, x423, x5, 3);
    let x425: BytePoly_1 = bigint_nondet_rem!(ctx, x423, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x424, x5, 4), x425, 4), x423, 4),
        24387,
        2,
    )?;
    let x426: BytePoly_2 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x19, bigint_mul!(x419, x425, 2), 2), x5, 2),
            x10,
            2
        ),
        bigint_mul!(x419, x9, 2),
        2
    );
    let x427: BytePoly_3 = bigint_nondet_quot!(ctx, x426, x5, 3);
    let x428: BytePoly_1 = bigint_nondet_rem!(ctx, x426, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x427, x5, 4), x428, 4), x426, 4),
        24387,
        2,
    )?;
    let x429: BytePoly_1 = bigint_nondet_rem!(ctx, x391, x1, 1);
    let x430: BytePoly_1 = bigint_nondet_quot!(ctx, x391, x1, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x430, x1, 2), x429, 2), x391, 2),
        8131,
        2,
    )?;
    let x431: BytePoly_1 = bigint_sub!(x2, x429, 1);
    eqz(ctx, &bigint_mul!(x429, x431, 2), 8131, 2)?;
    let x432: BytePoly_1 = bigint_add!(bigint_sub!(x428, x415, 1), x5, 1);
    let x433: BytePoly_1 = bigint_add!(bigint_sub!(x425, x413, 1), x5, 1);
    let x434: BytePoly_1 = bigint_nondet_inv!(ctx, x433, x5, 1);
    let x435: BytePoly_2 = bigint_mul!(x433, x434, 2);
    let x436: BytePoly_3 = bigint_nondet_quot!(ctx, x435, x5, 3);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x435, bigint_mul!(x436, x5, 4), 4), x0, 4),
        24387,
        2,
    )?;
    let x437: BytePoly_1 = bigint_nondet_rem!(ctx, bigint_mul!(x432, x434, 2), x5, 1);
    let x438: BytePoly_2 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x437, x433, 2), x432, 2), x5, 2),
        x5,
        2
    );
    let x439: BytePoly_3 = bigint_nondet_quot!(ctx, x438, x5, 3);
    eqz(
        ctx,
        &bigint_sub!(x438, bigint_mul!(x439, x5, 4), 4),
        24387,
        2,
    )?;
    let x440: BytePoly_2 = bigint_mul!(x437, x437, 2);
    let x441: BytePoly_2 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x440, x413, 2), x5, 2), x425, 2),
        x5,
        2
    );
    let x442: BytePoly_3 = bigint_nondet_quot!(ctx, x441, x5, 3);
    let x443: BytePoly_1 = bigint_nondet_rem!(ctx, x441, x5, 1);
    let x444: BytePoly_2 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x5,
                    bigint_add!(
                        bigint_mul!(x437, x443, 2),
                        bigint_add!(bigint_sub!(x415, bigint_mul!(x437, x413, 2), 2), x5, 2),
                        2
                    ),
                    2
                ),
                x5,
                2
            ),
            x5,
            2
        ),
        x19,
        2
    );
    let x445: BytePoly_3 = bigint_nondet_quot!(ctx, x444, x5, 3);
    let x446: BytePoly_1 = bigint_nondet_rem!(ctx, x444, x5, 1);
    let x447: BytePoly_4 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x440, bigint_mul!(x442, x5, 4), 4), x413, 4),
                    x425,
                    4
                ),
                x5,
                4
            ),
            x5,
            4
        ),
        x443,
        4
    );
    eqz(ctx, &x447, 24387, 2)?;
    let x448: BytePoly_4 = bigint_sub!(
        bigint_add!(bigint_mul!(x445, x5, 4), x446, 4),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x437, bigint_sub!(x413, x443, 1), 2), x415, 2),
                    x5,
                    2
                ),
                x5,
                2
            ),
            x19,
            2
        ),
        4
    );
    eqz(ctx, &x448, 24387, 2)?;
    let x449: BytePoly_2 = bigint_add!(bigint_mul!(x443, x429, 2), bigint_mul!(x413, x431, 2), 2);
    let x450: BytePoly_2 = bigint_add!(bigint_mul!(x446, x429, 2), bigint_mul!(x415, x431, 2), 2);
    let x451: BytePoly_3 = bigint_nondet_quot!(ctx, x449, x5, 3);
    let x452: BytePoly_1 = bigint_nondet_rem!(ctx, x449, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x451, x5, 4), x452, 4), x449, 4),
        24387,
        2,
    )?;
    let x453: BytePoly_3 = bigint_nondet_quot!(ctx, x450, x5, 3);
    let x454: BytePoly_1 = bigint_nondet_rem!(ctx, x450, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x453, x5, 4), x454, 4), x450, 4),
        24387,
        2,
    )?;
    let x455: BytePoly_2 = bigint_mul!(x425, x425, 2);
    let x456: BytePoly_2 = bigint_add!(bigint_add!(bigint_add!(x455, x455, 2), x455, 2), x4, 2);
    let x457: BytePoly_2 = bigint_add!(x74, x456, 2);
    let x458: BytePoly_1 = bigint_nondet_inv!(ctx, bigint_add!(x428, x428, 1), x5, 1);
    let x459: BytePoly_1 = bigint_nondet_rem!(ctx, bigint_mul!(x456, x458, 3), x5, 1);
    let x460: BytePoly_2 = bigint_mul!(x428, x459, 2);
    let x461: BytePoly_2 = bigint_add!(x460, x460, 2);
    let x462: BytePoly_3 = bigint_nondet_quot!(ctx, bigint_sub!(x457, x461, 2), x5, 3);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x462, x5, 4), x461, 4), x457, 4),
        24387,
        2,
    )?;
    let x463: BytePoly_2 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x459, x459, 2), x5, 2), x5, 2),
            x425,
            2
        ),
        x425,
        2
    );
    let x464: BytePoly_3 = bigint_nondet_quot!(ctx, x463, x5, 3);
    let x465: BytePoly_1 = bigint_nondet_rem!(ctx, x463, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x464, x5, 4), x465, 4), x463, 4),
        24387,
        2,
    )?;
    let x466: BytePoly_2 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x19, bigint_mul!(x459, x465, 2), 2), x5, 2),
            x428,
            2
        ),
        bigint_mul!(x459, x425, 2),
        2
    );
    let x467: BytePoly_3 = bigint_nondet_quot!(ctx, x466, x5, 3);
    let x468: BytePoly_1 = bigint_nondet_rem!(ctx, x466, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x467, x5, 4), x468, 4), x466, 4),
        24387,
        2,
    )?;
    let x469: BytePoly_1 = bigint_nondet_rem!(ctx, x430, x1, 1);
    let x470: BytePoly_1 = bigint_nondet_quot!(ctx, x430, x1, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x470, x1, 2), x469, 2), x430, 2),
        8131,
        2,
    )?;
    let x471: BytePoly_1 = bigint_sub!(x2, x469, 1);
    eqz(ctx, &bigint_mul!(x469, x471, 2), 8131, 2)?;
    let x472: BytePoly_1 = bigint_add!(bigint_sub!(x468, x454, 1), x5, 1);
    let x473: BytePoly_1 = bigint_add!(bigint_sub!(x465, x452, 1), x5, 1);
    let x474: BytePoly_1 = bigint_nondet_inv!(ctx, x473, x5, 1);
    let x475: BytePoly_2 = bigint_mul!(x473, x474, 2);
    let x476: BytePoly_3 = bigint_nondet_quot!(ctx, x475, x5, 3);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x475, bigint_mul!(x476, x5, 4), 4), x0, 4),
        24387,
        2,
    )?;
    let x477: BytePoly_1 = bigint_nondet_rem!(ctx, bigint_mul!(x472, x474, 2), x5, 1);
    let x478: BytePoly_2 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x477, x473, 2), x472, 2), x5, 2),
        x5,
        2
    );
    let x479: BytePoly_3 = bigint_nondet_quot!(ctx, x478, x5, 3);
    eqz(
        ctx,
        &bigint_sub!(x478, bigint_mul!(x479, x5, 4), 4),
        24387,
        2,
    )?;
    let x480: BytePoly_2 = bigint_mul!(x477, x477, 2);
    let x481: BytePoly_2 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x480, x452, 2), x5, 2), x465, 2),
        x5,
        2
    );
    let x482: BytePoly_3 = bigint_nondet_quot!(ctx, x481, x5, 3);
    let x483: BytePoly_1 = bigint_nondet_rem!(ctx, x481, x5, 1);
    let x484: BytePoly_2 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x5,
                    bigint_add!(
                        bigint_mul!(x477, x483, 2),
                        bigint_add!(bigint_sub!(x454, bigint_mul!(x477, x452, 2), 2), x5, 2),
                        2
                    ),
                    2
                ),
                x5,
                2
            ),
            x5,
            2
        ),
        x19,
        2
    );
    let x485: BytePoly_3 = bigint_nondet_quot!(ctx, x484, x5, 3);
    let x486: BytePoly_1 = bigint_nondet_rem!(ctx, x484, x5, 1);
    let x487: BytePoly_4 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x480, bigint_mul!(x482, x5, 4), 4), x452, 4),
                    x465,
                    4
                ),
                x5,
                4
            ),
            x5,
            4
        ),
        x483,
        4
    );
    eqz(ctx, &x487, 24387, 2)?;
    let x488: BytePoly_4 = bigint_sub!(
        bigint_add!(bigint_mul!(x485, x5, 4), x486, 4),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x477, bigint_sub!(x452, x483, 1), 2), x454, 2),
                    x5,
                    2
                ),
                x5,
                2
            ),
            x19,
            2
        ),
        4
    );
    eqz(ctx, &x488, 24387, 2)?;
    let x489: BytePoly_2 = bigint_add!(bigint_mul!(x483, x469, 2), bigint_mul!(x452, x471, 2), 2);
    let x490: BytePoly_2 = bigint_add!(bigint_mul!(x486, x469, 2), bigint_mul!(x454, x471, 2), 2);
    let x491: BytePoly_3 = bigint_nondet_quot!(ctx, x489, x5, 3);
    let x492: BytePoly_1 = bigint_nondet_rem!(ctx, x489, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x491, x5, 4), x492, 4), x489, 4),
        24387,
        2,
    )?;
    let x493: BytePoly_3 = bigint_nondet_quot!(ctx, x490, x5, 3);
    let x494: BytePoly_1 = bigint_nondet_rem!(ctx, x490, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x493, x5, 4), x494, 4), x490, 4),
        24387,
        2,
    )?;
    let x495: BytePoly_2 = bigint_mul!(x465, x465, 2);
    let x496: BytePoly_2 = bigint_add!(bigint_add!(bigint_add!(x495, x495, 2), x495, 2), x4, 2);
    let x497: BytePoly_2 = bigint_add!(x74, x496, 2);
    let x498: BytePoly_1 = bigint_nondet_inv!(ctx, bigint_add!(x468, x468, 1), x5, 1);
    let x499: BytePoly_1 = bigint_nondet_rem!(ctx, bigint_mul!(x496, x498, 3), x5, 1);
    let x500: BytePoly_2 = bigint_mul!(x468, x499, 2);
    let x501: BytePoly_2 = bigint_add!(x500, x500, 2);
    let x502: BytePoly_3 = bigint_nondet_quot!(ctx, bigint_sub!(x497, x501, 2), x5, 3);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x502, x5, 4), x501, 4), x497, 4),
        24387,
        2,
    )?;
    let x503: BytePoly_2 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x499, x499, 2), x5, 2), x5, 2),
            x465,
            2
        ),
        x465,
        2
    );
    let x504: BytePoly_3 = bigint_nondet_quot!(ctx, x503, x5, 3);
    let x505: BytePoly_1 = bigint_nondet_rem!(ctx, x503, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x504, x5, 4), x505, 4), x503, 4),
        24387,
        2,
    )?;
    let x506: BytePoly_2 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x19, bigint_mul!(x499, x505, 2), 2), x5, 2),
            x468,
            2
        ),
        bigint_mul!(x499, x465, 2),
        2
    );
    let x507: BytePoly_3 = bigint_nondet_quot!(ctx, x506, x5, 3);
    let x508: BytePoly_1 = bigint_nondet_rem!(ctx, x506, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x507, x5, 4), x508, 4), x506, 4),
        24387,
        2,
    )?;
    let x509: BytePoly_1 = bigint_nondet_rem!(ctx, x470, x1, 1);
    let x510: BytePoly_1 = bigint_nondet_quot!(ctx, x470, x1, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x510, x1, 2), x509, 2), x470, 2),
        8131,
        2,
    )?;
    let x511: BytePoly_1 = bigint_sub!(x2, x509, 1);
    eqz(ctx, &bigint_mul!(x509, x511, 2), 8131, 2)?;
    let x512: BytePoly_1 = bigint_add!(bigint_sub!(x508, x494, 1), x5, 1);
    let x513: BytePoly_1 = bigint_add!(bigint_sub!(x505, x492, 1), x5, 1);
    let x514: BytePoly_1 = bigint_nondet_inv!(ctx, x513, x5, 1);
    let x515: BytePoly_2 = bigint_mul!(x513, x514, 2);
    let x516: BytePoly_3 = bigint_nondet_quot!(ctx, x515, x5, 3);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x515, bigint_mul!(x516, x5, 4), 4), x0, 4),
        24387,
        2,
    )?;
    let x517: BytePoly_1 = bigint_nondet_rem!(ctx, bigint_mul!(x512, x514, 2), x5, 1);
    let x518: BytePoly_2 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x517, x513, 2), x512, 2), x5, 2),
        x5,
        2
    );
    let x519: BytePoly_3 = bigint_nondet_quot!(ctx, x518, x5, 3);
    eqz(
        ctx,
        &bigint_sub!(x518, bigint_mul!(x519, x5, 4), 4),
        24387,
        2,
    )?;
    let x520: BytePoly_2 = bigint_mul!(x517, x517, 2);
    let x521: BytePoly_2 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x520, x492, 2), x5, 2), x505, 2),
        x5,
        2
    );
    let x522: BytePoly_3 = bigint_nondet_quot!(ctx, x521, x5, 3);
    let x523: BytePoly_1 = bigint_nondet_rem!(ctx, x521, x5, 1);
    let x524: BytePoly_2 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x5,
                    bigint_add!(
                        bigint_mul!(x517, x523, 2),
                        bigint_add!(bigint_sub!(x494, bigint_mul!(x517, x492, 2), 2), x5, 2),
                        2
                    ),
                    2
                ),
                x5,
                2
            ),
            x5,
            2
        ),
        x19,
        2
    );
    let x525: BytePoly_3 = bigint_nondet_quot!(ctx, x524, x5, 3);
    let x526: BytePoly_1 = bigint_nondet_rem!(ctx, x524, x5, 1);
    let x527: BytePoly_4 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x520, bigint_mul!(x522, x5, 4), 4), x492, 4),
                    x505,
                    4
                ),
                x5,
                4
            ),
            x5,
            4
        ),
        x523,
        4
    );
    eqz(ctx, &x527, 24387, 2)?;
    let x528: BytePoly_4 = bigint_sub!(
        bigint_add!(bigint_mul!(x525, x5, 4), x526, 4),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x517, bigint_sub!(x492, x523, 1), 2), x494, 2),
                    x5,
                    2
                ),
                x5,
                2
            ),
            x19,
            2
        ),
        4
    );
    eqz(ctx, &x528, 24387, 2)?;
    let x529: BytePoly_2 = bigint_add!(bigint_mul!(x523, x509, 2), bigint_mul!(x492, x511, 2), 2);
    let x530: BytePoly_2 = bigint_add!(bigint_mul!(x526, x509, 2), bigint_mul!(x494, x511, 2), 2);
    let x531: BytePoly_3 = bigint_nondet_quot!(ctx, x529, x5, 3);
    let x532: BytePoly_1 = bigint_nondet_rem!(ctx, x529, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x531, x5, 4), x532, 4), x529, 4),
        24387,
        2,
    )?;
    let x533: BytePoly_3 = bigint_nondet_quot!(ctx, x530, x5, 3);
    let x534: BytePoly_1 = bigint_nondet_rem!(ctx, x530, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x533, x5, 4), x534, 4), x530, 4),
        24387,
        2,
    )?;
    let x535: BytePoly_2 = bigint_mul!(x505, x505, 2);
    let x536: BytePoly_2 = bigint_add!(bigint_add!(bigint_add!(x535, x535, 2), x535, 2), x4, 2);
    let x537: BytePoly_2 = bigint_add!(x74, x536, 2);
    let x538: BytePoly_1 = bigint_nondet_inv!(ctx, bigint_add!(x508, x508, 1), x5, 1);
    let x539: BytePoly_1 = bigint_nondet_rem!(ctx, bigint_mul!(x536, x538, 3), x5, 1);
    let x540: BytePoly_2 = bigint_mul!(x508, x539, 2);
    let x541: BytePoly_2 = bigint_add!(x540, x540, 2);
    let x542: BytePoly_3 = bigint_nondet_quot!(ctx, bigint_sub!(x537, x541, 2), x5, 3);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x542, x5, 4), x541, 4), x537, 4),
        24387,
        2,
    )?;
    let x543: BytePoly_2 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x539, x539, 2), x5, 2), x5, 2),
            x505,
            2
        ),
        x505,
        2
    );
    let x544: BytePoly_3 = bigint_nondet_quot!(ctx, x543, x5, 3);
    let x545: BytePoly_1 = bigint_nondet_rem!(ctx, x543, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x544, x5, 4), x545, 4), x543, 4),
        24387,
        2,
    )?;
    let x546: BytePoly_2 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x19, bigint_mul!(x539, x545, 2), 2), x5, 2),
            x508,
            2
        ),
        bigint_mul!(x539, x505, 2),
        2
    );
    let x547: BytePoly_3 = bigint_nondet_quot!(ctx, x546, x5, 3);
    let x548: BytePoly_1 = bigint_nondet_rem!(ctx, x546, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x547, x5, 4), x548, 4), x546, 4),
        24387,
        2,
    )?;
    let x549: BytePoly_1 = bigint_nondet_rem!(ctx, x510, x1, 1);
    let x550: BytePoly_1 = bigint_nondet_quot!(ctx, x510, x1, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x550, x1, 2), x549, 2), x510, 2),
        8131,
        2,
    )?;
    let x551: BytePoly_1 = bigint_sub!(x2, x549, 1);
    eqz(ctx, &bigint_mul!(x549, x551, 2), 8131, 2)?;
    let x552: BytePoly_1 = bigint_add!(bigint_sub!(x548, x534, 1), x5, 1);
    let x553: BytePoly_1 = bigint_add!(bigint_sub!(x545, x532, 1), x5, 1);
    let x554: BytePoly_1 = bigint_nondet_inv!(ctx, x553, x5, 1);
    let x555: BytePoly_2 = bigint_mul!(x553, x554, 2);
    let x556: BytePoly_3 = bigint_nondet_quot!(ctx, x555, x5, 3);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x555, bigint_mul!(x556, x5, 4), 4), x0, 4),
        24387,
        2,
    )?;
    let x557: BytePoly_1 = bigint_nondet_rem!(ctx, bigint_mul!(x552, x554, 2), x5, 1);
    let x558: BytePoly_2 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x557, x553, 2), x552, 2), x5, 2),
        x5,
        2
    );
    let x559: BytePoly_3 = bigint_nondet_quot!(ctx, x558, x5, 3);
    eqz(
        ctx,
        &bigint_sub!(x558, bigint_mul!(x559, x5, 4), 4),
        24387,
        2,
    )?;
    let x560: BytePoly_2 = bigint_mul!(x557, x557, 2);
    let x561: BytePoly_2 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x560, x532, 2), x5, 2), x545, 2),
        x5,
        2
    );
    let x562: BytePoly_3 = bigint_nondet_quot!(ctx, x561, x5, 3);
    let x563: BytePoly_1 = bigint_nondet_rem!(ctx, x561, x5, 1);
    let x564: BytePoly_2 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x5,
                    bigint_add!(
                        bigint_mul!(x557, x563, 2),
                        bigint_add!(bigint_sub!(x534, bigint_mul!(x557, x532, 2), 2), x5, 2),
                        2
                    ),
                    2
                ),
                x5,
                2
            ),
            x5,
            2
        ),
        x19,
        2
    );
    let x565: BytePoly_3 = bigint_nondet_quot!(ctx, x564, x5, 3);
    let x566: BytePoly_1 = bigint_nondet_rem!(ctx, x564, x5, 1);
    let x567: BytePoly_4 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x560, bigint_mul!(x562, x5, 4), 4), x532, 4),
                    x545,
                    4
                ),
                x5,
                4
            ),
            x5,
            4
        ),
        x563,
        4
    );
    eqz(ctx, &x567, 24387, 2)?;
    let x568: BytePoly_4 = bigint_sub!(
        bigint_add!(bigint_mul!(x565, x5, 4), x566, 4),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x557, bigint_sub!(x532, x563, 1), 2), x534, 2),
                    x5,
                    2
                ),
                x5,
                2
            ),
            x19,
            2
        ),
        4
    );
    eqz(ctx, &x568, 24387, 2)?;
    let x569: BytePoly_2 = bigint_add!(bigint_mul!(x563, x549, 2), bigint_mul!(x532, x551, 2), 2);
    let x570: BytePoly_2 = bigint_add!(bigint_mul!(x566, x549, 2), bigint_mul!(x534, x551, 2), 2);
    let x571: BytePoly_3 = bigint_nondet_quot!(ctx, x569, x5, 3);
    let x572: BytePoly_1 = bigint_nondet_rem!(ctx, x569, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x571, x5, 4), x572, 4), x569, 4),
        24387,
        2,
    )?;
    let x573: BytePoly_3 = bigint_nondet_quot!(ctx, x570, x5, 3);
    let x574: BytePoly_1 = bigint_nondet_rem!(ctx, x570, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x573, x5, 4), x574, 4), x570, 4),
        24387,
        2,
    )?;
    let x575: BytePoly_2 = bigint_mul!(x545, x545, 2);
    let x576: BytePoly_2 = bigint_add!(bigint_add!(bigint_add!(x575, x575, 2), x575, 2), x4, 2);
    let x577: BytePoly_2 = bigint_add!(x74, x576, 2);
    let x578: BytePoly_1 = bigint_nondet_inv!(ctx, bigint_add!(x548, x548, 1), x5, 1);
    let x579: BytePoly_1 = bigint_nondet_rem!(ctx, bigint_mul!(x576, x578, 3), x5, 1);
    let x580: BytePoly_2 = bigint_mul!(x548, x579, 2);
    let x581: BytePoly_2 = bigint_add!(x580, x580, 2);
    let x582: BytePoly_3 = bigint_nondet_quot!(ctx, bigint_sub!(x577, x581, 2), x5, 3);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x582, x5, 4), x581, 4), x577, 4),
        24387,
        2,
    )?;
    let x583: BytePoly_2 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x579, x579, 2), x5, 2), x5, 2),
            x545,
            2
        ),
        x545,
        2
    );
    let x584: BytePoly_3 = bigint_nondet_quot!(ctx, x583, x5, 3);
    let x585: BytePoly_1 = bigint_nondet_rem!(ctx, x583, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x584, x5, 4), x585, 4), x583, 4),
        24387,
        2,
    )?;
    let x586: BytePoly_2 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x19, bigint_mul!(x579, x585, 2), 2), x5, 2),
            x548,
            2
        ),
        bigint_mul!(x579, x545, 2),
        2
    );
    let x587: BytePoly_3 = bigint_nondet_quot!(ctx, x586, x5, 3);
    let x588: BytePoly_1 = bigint_nondet_rem!(ctx, x586, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x587, x5, 4), x588, 4), x586, 4),
        24387,
        2,
    )?;
    let x589: BytePoly_1 = bigint_nondet_rem!(ctx, x550, x1, 1);
    let x590: BytePoly_1 = bigint_nondet_quot!(ctx, x550, x1, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x590, x1, 2), x589, 2), x550, 2),
        8131,
        2,
    )?;
    let x591: BytePoly_1 = bigint_sub!(x2, x589, 1);
    eqz(ctx, &bigint_mul!(x589, x591, 2), 8131, 2)?;
    let x592: BytePoly_1 = bigint_add!(bigint_sub!(x588, x574, 1), x5, 1);
    let x593: BytePoly_1 = bigint_add!(bigint_sub!(x585, x572, 1), x5, 1);
    let x594: BytePoly_1 = bigint_nondet_inv!(ctx, x593, x5, 1);
    let x595: BytePoly_2 = bigint_mul!(x593, x594, 2);
    let x596: BytePoly_3 = bigint_nondet_quot!(ctx, x595, x5, 3);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x595, bigint_mul!(x596, x5, 4), 4), x0, 4),
        24387,
        2,
    )?;
    let x597: BytePoly_1 = bigint_nondet_rem!(ctx, bigint_mul!(x592, x594, 2), x5, 1);
    let x598: BytePoly_2 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x597, x593, 2), x592, 2), x5, 2),
        x5,
        2
    );
    let x599: BytePoly_3 = bigint_nondet_quot!(ctx, x598, x5, 3);
    eqz(
        ctx,
        &bigint_sub!(x598, bigint_mul!(x599, x5, 4), 4),
        24387,
        2,
    )?;
    let x600: BytePoly_2 = bigint_mul!(x597, x597, 2);
    let x601: BytePoly_2 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x600, x572, 2), x5, 2), x585, 2),
        x5,
        2
    );
    let x602: BytePoly_3 = bigint_nondet_quot!(ctx, x601, x5, 3);
    let x603: BytePoly_1 = bigint_nondet_rem!(ctx, x601, x5, 1);
    let x604: BytePoly_2 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x5,
                    bigint_add!(
                        bigint_mul!(x597, x603, 2),
                        bigint_add!(bigint_sub!(x574, bigint_mul!(x597, x572, 2), 2), x5, 2),
                        2
                    ),
                    2
                ),
                x5,
                2
            ),
            x5,
            2
        ),
        x19,
        2
    );
    let x605: BytePoly_3 = bigint_nondet_quot!(ctx, x604, x5, 3);
    let x606: BytePoly_1 = bigint_nondet_rem!(ctx, x604, x5, 1);
    let x607: BytePoly_4 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x600, bigint_mul!(x602, x5, 4), 4), x572, 4),
                    x585,
                    4
                ),
                x5,
                4
            ),
            x5,
            4
        ),
        x603,
        4
    );
    eqz(ctx, &x607, 24387, 2)?;
    let x608: BytePoly_4 = bigint_sub!(
        bigint_add!(bigint_mul!(x605, x5, 4), x606, 4),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x597, bigint_sub!(x572, x603, 1), 2), x574, 2),
                    x5,
                    2
                ),
                x5,
                2
            ),
            x19,
            2
        ),
        4
    );
    eqz(ctx, &x608, 24387, 2)?;
    let x609: BytePoly_2 = bigint_add!(bigint_mul!(x603, x589, 2), bigint_mul!(x572, x591, 2), 2);
    let x610: BytePoly_2 = bigint_add!(bigint_mul!(x606, x589, 2), bigint_mul!(x574, x591, 2), 2);
    let x611: BytePoly_3 = bigint_nondet_quot!(ctx, x609, x5, 3);
    let x612: BytePoly_1 = bigint_nondet_rem!(ctx, x609, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x611, x5, 4), x612, 4), x609, 4),
        24387,
        2,
    )?;
    let x613: BytePoly_3 = bigint_nondet_quot!(ctx, x610, x5, 3);
    let x614: BytePoly_1 = bigint_nondet_rem!(ctx, x610, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x613, x5, 4), x614, 4), x610, 4),
        24387,
        2,
    )?;
    let x615: BytePoly_2 = bigint_mul!(x585, x585, 2);
    let x616: BytePoly_2 = bigint_add!(bigint_add!(bigint_add!(x615, x615, 2), x615, 2), x4, 2);
    let x617: BytePoly_2 = bigint_add!(x74, x616, 2);
    let x618: BytePoly_1 = bigint_nondet_inv!(ctx, bigint_add!(x588, x588, 1), x5, 1);
    let x619: BytePoly_1 = bigint_nondet_rem!(ctx, bigint_mul!(x616, x618, 3), x5, 1);
    let x620: BytePoly_2 = bigint_mul!(x588, x619, 2);
    let x621: BytePoly_2 = bigint_add!(x620, x620, 2);
    let x622: BytePoly_3 = bigint_nondet_quot!(ctx, bigint_sub!(x617, x621, 2), x5, 3);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x622, x5, 4), x621, 4), x617, 4),
        24387,
        2,
    )?;
    let x623: BytePoly_2 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x619, x619, 2), x5, 2), x5, 2),
            x585,
            2
        ),
        x585,
        2
    );
    let x624: BytePoly_3 = bigint_nondet_quot!(ctx, x623, x5, 3);
    let x625: BytePoly_1 = bigint_nondet_rem!(ctx, x623, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x624, x5, 4), x625, 4), x623, 4),
        24387,
        2,
    )?;
    let x626: BytePoly_2 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x19, bigint_mul!(x619, x625, 2), 2), x5, 2),
            x588,
            2
        ),
        bigint_mul!(x619, x585, 2),
        2
    );
    let x627: BytePoly_3 = bigint_nondet_quot!(ctx, x626, x5, 3);
    let x628: BytePoly_1 = bigint_nondet_rem!(ctx, x626, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x627, x5, 4), x628, 4), x626, 4),
        24387,
        2,
    )?;
    let x629: BytePoly_1 = bigint_nondet_rem!(ctx, x590, x1, 1);
    let x630: BytePoly_1 = bigint_nondet_quot!(ctx, x590, x1, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x630, x1, 2), x629, 2), x590, 2),
        8131,
        2,
    )?;
    let x631: BytePoly_1 = bigint_sub!(x2, x629, 1);
    eqz(ctx, &bigint_mul!(x629, x631, 2), 8131, 2)?;
    let x632: BytePoly_1 = bigint_add!(bigint_sub!(x628, x614, 1), x5, 1);
    let x633: BytePoly_1 = bigint_add!(bigint_sub!(x625, x612, 1), x5, 1);
    let x634: BytePoly_1 = bigint_nondet_inv!(ctx, x633, x5, 1);
    let x635: BytePoly_2 = bigint_mul!(x633, x634, 2);
    let x636: BytePoly_3 = bigint_nondet_quot!(ctx, x635, x5, 3);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x635, bigint_mul!(x636, x5, 4), 4), x0, 4),
        24387,
        2,
    )?;
    let x637: BytePoly_1 = bigint_nondet_rem!(ctx, bigint_mul!(x632, x634, 2), x5, 1);
    let x638: BytePoly_2 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x637, x633, 2), x632, 2), x5, 2),
        x5,
        2
    );
    let x639: BytePoly_3 = bigint_nondet_quot!(ctx, x638, x5, 3);
    eqz(
        ctx,
        &bigint_sub!(x638, bigint_mul!(x639, x5, 4), 4),
        24387,
        2,
    )?;
    let x640: BytePoly_2 = bigint_mul!(x637, x637, 2);
    let x641: BytePoly_2 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x640, x612, 2), x5, 2), x625, 2),
        x5,
        2
    );
    let x642: BytePoly_3 = bigint_nondet_quot!(ctx, x641, x5, 3);
    let x643: BytePoly_1 = bigint_nondet_rem!(ctx, x641, x5, 1);
    let x644: BytePoly_2 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x5,
                    bigint_add!(
                        bigint_mul!(x637, x643, 2),
                        bigint_add!(bigint_sub!(x614, bigint_mul!(x637, x612, 2), 2), x5, 2),
                        2
                    ),
                    2
                ),
                x5,
                2
            ),
            x5,
            2
        ),
        x19,
        2
    );
    let x645: BytePoly_3 = bigint_nondet_quot!(ctx, x644, x5, 3);
    let x646: BytePoly_1 = bigint_nondet_rem!(ctx, x644, x5, 1);
    let x647: BytePoly_4 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x640, bigint_mul!(x642, x5, 4), 4), x612, 4),
                    x625,
                    4
                ),
                x5,
                4
            ),
            x5,
            4
        ),
        x643,
        4
    );
    eqz(ctx, &x647, 24387, 2)?;
    let x648: BytePoly_4 = bigint_sub!(
        bigint_add!(bigint_mul!(x645, x5, 4), x646, 4),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x637, bigint_sub!(x612, x643, 1), 2), x614, 2),
                    x5,
                    2
                ),
                x5,
                2
            ),
            x19,
            2
        ),
        4
    );
    eqz(ctx, &x648, 24387, 2)?;
    let x649: BytePoly_2 = bigint_add!(bigint_mul!(x643, x629, 2), bigint_mul!(x612, x631, 2), 2);
    let x650: BytePoly_2 = bigint_add!(bigint_mul!(x646, x629, 2), bigint_mul!(x614, x631, 2), 2);
    let x651: BytePoly_3 = bigint_nondet_quot!(ctx, x649, x5, 3);
    let x652: BytePoly_1 = bigint_nondet_rem!(ctx, x649, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x651, x5, 4), x652, 4), x649, 4),
        24387,
        2,
    )?;
    let x653: BytePoly_3 = bigint_nondet_quot!(ctx, x650, x5, 3);
    let x654: BytePoly_1 = bigint_nondet_rem!(ctx, x650, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x653, x5, 4), x654, 4), x650, 4),
        24387,
        2,
    )?;
    let x655: BytePoly_2 = bigint_mul!(x625, x625, 2);
    let x656: BytePoly_2 = bigint_add!(bigint_add!(bigint_add!(x655, x655, 2), x655, 2), x4, 2);
    let x657: BytePoly_2 = bigint_add!(x74, x656, 2);
    let x658: BytePoly_1 = bigint_nondet_inv!(ctx, bigint_add!(x628, x628, 1), x5, 1);
    let x659: BytePoly_1 = bigint_nondet_rem!(ctx, bigint_mul!(x656, x658, 3), x5, 1);
    let x660: BytePoly_2 = bigint_mul!(x628, x659, 2);
    let x661: BytePoly_2 = bigint_add!(x660, x660, 2);
    let x662: BytePoly_3 = bigint_nondet_quot!(ctx, bigint_sub!(x657, x661, 2), x5, 3);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x662, x5, 4), x661, 4), x657, 4),
        24387,
        2,
    )?;
    let x663: BytePoly_2 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x659, x659, 2), x5, 2), x5, 2),
            x625,
            2
        ),
        x625,
        2
    );
    let x664: BytePoly_3 = bigint_nondet_quot!(ctx, x663, x5, 3);
    let x665: BytePoly_1 = bigint_nondet_rem!(ctx, x663, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x664, x5, 4), x665, 4), x663, 4),
        24387,
        2,
    )?;
    let x666: BytePoly_2 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x19, bigint_mul!(x659, x665, 2), 2), x5, 2),
            x628,
            2
        ),
        bigint_mul!(x659, x625, 2),
        2
    );
    let x667: BytePoly_3 = bigint_nondet_quot!(ctx, x666, x5, 3);
    let x668: BytePoly_1 = bigint_nondet_rem!(ctx, x666, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x667, x5, 4), x668, 4), x666, 4),
        24387,
        2,
    )?;
    let x669: BytePoly_1 = bigint_nondet_rem!(ctx, x630, x1, 1);
    let x670: BytePoly_1 = bigint_nondet_quot!(ctx, x630, x1, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x670, x1, 2), x669, 2), x630, 2),
        8131,
        2,
    )?;
    let x671: BytePoly_1 = bigint_sub!(x2, x669, 1);
    eqz(ctx, &bigint_mul!(x669, x671, 2), 8131, 2)?;
    let x672: BytePoly_1 = bigint_add!(bigint_sub!(x668, x654, 1), x5, 1);
    let x673: BytePoly_1 = bigint_add!(bigint_sub!(x665, x652, 1), x5, 1);
    let x674: BytePoly_1 = bigint_nondet_inv!(ctx, x673, x5, 1);
    let x675: BytePoly_2 = bigint_mul!(x673, x674, 2);
    let x676: BytePoly_3 = bigint_nondet_quot!(ctx, x675, x5, 3);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x675, bigint_mul!(x676, x5, 4), 4), x0, 4),
        24387,
        2,
    )?;
    let x677: BytePoly_1 = bigint_nondet_rem!(ctx, bigint_mul!(x672, x674, 2), x5, 1);
    let x678: BytePoly_2 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x677, x673, 2), x672, 2), x5, 2),
        x5,
        2
    );
    let x679: BytePoly_3 = bigint_nondet_quot!(ctx, x678, x5, 3);
    eqz(
        ctx,
        &bigint_sub!(x678, bigint_mul!(x679, x5, 4), 4),
        24387,
        2,
    )?;
    let x680: BytePoly_2 = bigint_mul!(x677, x677, 2);
    let x681: BytePoly_2 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x680, x652, 2), x5, 2), x665, 2),
        x5,
        2
    );
    let x682: BytePoly_3 = bigint_nondet_quot!(ctx, x681, x5, 3);
    let x683: BytePoly_1 = bigint_nondet_rem!(ctx, x681, x5, 1);
    let x684: BytePoly_2 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x5,
                    bigint_add!(
                        bigint_mul!(x677, x683, 2),
                        bigint_add!(bigint_sub!(x654, bigint_mul!(x677, x652, 2), 2), x5, 2),
                        2
                    ),
                    2
                ),
                x5,
                2
            ),
            x5,
            2
        ),
        x19,
        2
    );
    let x685: BytePoly_3 = bigint_nondet_quot!(ctx, x684, x5, 3);
    let x686: BytePoly_1 = bigint_nondet_rem!(ctx, x684, x5, 1);
    let x687: BytePoly_4 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x680, bigint_mul!(x682, x5, 4), 4), x652, 4),
                    x665,
                    4
                ),
                x5,
                4
            ),
            x5,
            4
        ),
        x683,
        4
    );
    eqz(ctx, &x687, 24387, 2)?;
    let x688: BytePoly_4 = bigint_sub!(
        bigint_add!(bigint_mul!(x685, x5, 4), x686, 4),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x677, bigint_sub!(x652, x683, 1), 2), x654, 2),
                    x5,
                    2
                ),
                x5,
                2
            ),
            x19,
            2
        ),
        4
    );
    eqz(ctx, &x688, 24387, 2)?;
    let x689: BytePoly_2 = bigint_add!(bigint_mul!(x683, x669, 2), bigint_mul!(x652, x671, 2), 2);
    let x690: BytePoly_2 = bigint_add!(bigint_mul!(x686, x669, 2), bigint_mul!(x654, x671, 2), 2);
    let x691: BytePoly_3 = bigint_nondet_quot!(ctx, x689, x5, 3);
    let x692: BytePoly_1 = bigint_nondet_rem!(ctx, x689, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x691, x5, 4), x692, 4), x689, 4),
        24387,
        2,
    )?;
    let x693: BytePoly_3 = bigint_nondet_quot!(ctx, x690, x5, 3);
    let x694: BytePoly_1 = bigint_nondet_rem!(ctx, x690, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x693, x5, 4), x694, 4), x690, 4),
        24387,
        2,
    )?;
    let x695: BytePoly_2 = bigint_mul!(x665, x665, 2);
    let x696: BytePoly_2 = bigint_add!(bigint_add!(bigint_add!(x695, x695, 2), x695, 2), x4, 2);
    let x697: BytePoly_2 = bigint_add!(x74, x696, 2);
    let x698: BytePoly_1 = bigint_nondet_inv!(ctx, bigint_add!(x668, x668, 1), x5, 1);
    let x699: BytePoly_1 = bigint_nondet_rem!(ctx, bigint_mul!(x696, x698, 3), x5, 1);
    let x700: BytePoly_2 = bigint_mul!(x668, x699, 2);
    let x701: BytePoly_2 = bigint_add!(x700, x700, 2);
    let x702: BytePoly_3 = bigint_nondet_quot!(ctx, bigint_sub!(x697, x701, 2), x5, 3);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x702, x5, 4), x701, 4), x697, 4),
        24387,
        2,
    )?;
    let x703: BytePoly_2 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x699, x699, 2), x5, 2), x5, 2),
            x665,
            2
        ),
        x665,
        2
    );
    let x704: BytePoly_3 = bigint_nondet_quot!(ctx, x703, x5, 3);
    let x705: BytePoly_1 = bigint_nondet_rem!(ctx, x703, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x704, x5, 4), x705, 4), x703, 4),
        24387,
        2,
    )?;
    let x706: BytePoly_2 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x19, bigint_mul!(x699, x705, 2), 2), x5, 2),
            x668,
            2
        ),
        bigint_mul!(x699, x665, 2),
        2
    );
    let x707: BytePoly_3 = bigint_nondet_quot!(ctx, x706, x5, 3);
    let x708: BytePoly_1 = bigint_nondet_rem!(ctx, x706, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x707, x5, 4), x708, 4), x706, 4),
        24387,
        2,
    )?;
    let x709: BytePoly_1 = bigint_add!(bigint_sub!(x367, x694, 1), x5, 1);
    let x710: BytePoly_1 = bigint_add!(bigint_sub!(x14, x692, 1), x5, 1);
    let x711: BytePoly_1 = bigint_nondet_inv!(ctx, x710, x5, 1);
    let x712: BytePoly_2 = bigint_mul!(x710, x711, 2);
    let x713: BytePoly_3 = bigint_nondet_quot!(ctx, x712, x5, 3);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x712, bigint_mul!(x713, x5, 4), 4), x0, 4),
        24387,
        2,
    )?;
    let x714: BytePoly_1 = bigint_nondet_rem!(ctx, bigint_mul!(x709, x711, 2), x5, 1);
    let x715: BytePoly_2 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x714, x710, 2), x709, 2), x5, 2),
        x5,
        2
    );
    let x716: BytePoly_3 = bigint_nondet_quot!(ctx, x715, x5, 3);
    eqz(
        ctx,
        &bigint_sub!(x715, bigint_mul!(x716, x5, 4), 4),
        24387,
        2,
    )?;
    let x717: BytePoly_2 = bigint_mul!(x714, x714, 2);
    let x718: BytePoly_2 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x717, x692, 2), x5, 2), x14, 2),
        x5,
        2
    );
    let x719: BytePoly_3 = bigint_nondet_quot!(ctx, x718, x5, 3);
    let x720: BytePoly_1 = bigint_nondet_rem!(ctx, x718, x5, 1);
    let x721: BytePoly_2 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x5,
                    bigint_add!(
                        bigint_mul!(x714, x720, 2),
                        bigint_add!(bigint_sub!(x694, bigint_mul!(x714, x692, 2), 2), x5, 2),
                        2
                    ),
                    2
                ),
                x5,
                2
            ),
            x5,
            2
        ),
        x19,
        2
    );
    let x722: BytePoly_3 = bigint_nondet_quot!(ctx, x721, x5, 3);
    let x723: BytePoly_1 = bigint_nondet_rem!(ctx, x721, x5, 1);
    let x724: BytePoly_4 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x717, bigint_mul!(x719, x5, 4), 4), x692, 4),
                    x14,
                    4
                ),
                x5,
                4
            ),
            x5,
            4
        ),
        x720,
        4
    );
    eqz(ctx, &x724, 24387, 2)?;
    let x725: BytePoly_4 = bigint_sub!(
        bigint_add!(bigint_mul!(x722, x5, 4), x723, 4),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x714, bigint_sub!(x692, x720, 1), 2), x694, 2),
                    x5,
                    2
                ),
                x5,
                2
            ),
            x19,
            2
        ),
        4
    );
    eqz(ctx, &x725, 24387, 2)?;
    let x726: BytePoly_1 = bigint_add!(bigint_sub!(x723, x382, 1), x5, 1);
    let x727: BytePoly_1 = bigint_add!(bigint_sub!(x720, x379, 1), x5, 1);
    let x728: BytePoly_1 = bigint_nondet_inv!(ctx, x727, x5, 1);
    let x729: BytePoly_2 = bigint_mul!(x727, x728, 2);
    let x730: BytePoly_3 = bigint_nondet_quot!(ctx, x729, x5, 3);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x729, bigint_mul!(x730, x5, 4), 4), x0, 4),
        24387,
        2,
    )?;
    let x731: BytePoly_1 = bigint_nondet_rem!(ctx, bigint_mul!(x726, x728, 2), x5, 1);
    let x732: BytePoly_2 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x731, x727, 2), x726, 2), x5, 2),
        x5,
        2
    );
    let x733: BytePoly_3 = bigint_nondet_quot!(ctx, x732, x5, 3);
    eqz(
        ctx,
        &bigint_sub!(x732, bigint_mul!(x733, x5, 4), 4),
        24387,
        2,
    )?;
    let x734: BytePoly_2 = bigint_mul!(x731, x731, 2);
    let x735: BytePoly_2 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x734, x379, 2), x5, 2), x720, 2),
        x5,
        2
    );
    let x736: BytePoly_3 = bigint_nondet_quot!(ctx, x735, x5, 3);
    let x737: BytePoly_1 = bigint_nondet_rem!(ctx, x735, x5, 1);
    let x738: BytePoly_2 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x5,
                    bigint_add!(
                        bigint_mul!(x731, x737, 2),
                        bigint_add!(bigint_sub!(x382, bigint_mul!(x731, x379, 2), 2), x5, 2),
                        2
                    ),
                    2
                ),
                x5,
                2
            ),
            x5,
            2
        ),
        x19,
        2
    );
    let x739: BytePoly_3 = bigint_nondet_quot!(ctx, x738, x5, 3);
    let x740: BytePoly_1 = bigint_nondet_rem!(ctx, x738, x5, 1);
    let x741: BytePoly_4 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x734, bigint_mul!(x736, x5, 4), 4), x379, 4),
                    x720,
                    4
                ),
                x5,
                4
            ),
            x5,
            4
        ),
        x737,
        4
    );
    eqz(ctx, &x741, 24387, 2)?;
    let x742: BytePoly_4 = bigint_sub!(
        bigint_add!(bigint_mul!(x739, x5, 4), x740, 4),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x731, bigint_sub!(x379, x737, 1), 2), x382, 2),
                    x5,
                    2
                ),
                x5,
                2
            ),
            x19,
            2
        ),
        4
    );
    eqz(ctx, &x742, 24387, 2)?;
    eqz(ctx, &bigint_sub!(x12, x737, 2), 34, 1)?;
    eqz(ctx, &bigint_sub!(x740, x740, 1), 34, 1)?;
    return Ok(());
}
pub fn ecdsa_verify_32(ctx: &mut BigIntContext) -> Result<()> {
    let x0: BytePoly_1 = bigint_const!(ctx, 1);
    let x1: BytePoly_1 = bigint_const!(ctx, 2);
    let x2: BytePoly_1 = bigint_const!(ctx, 1);
    let x3: BytePoly_4 = bigint_const!(ctx, 3, 0, 0, 0);
    let x4: BytePoly_4 = bigint_const!(ctx, 0, 0, 0, 0);
    let x5: BytePoly_4 = bigint_const!(ctx, 31, 0, 0, 0);
    let x6: BytePoly_4 = bigint_const!(ctx, 43, 0, 0, 0);
    let x7: BytePoly_4 = bigint_def!(ctx, 4, 0, 1);
    let x8: BytePoly_4 = bigint_def!(ctx, 4, 1, 1);
    let x9: BytePoly_4 = bigint_def!(ctx, 4, 2, 1);
    let x10: BytePoly_4 = bigint_def!(ctx, 4, 3, 1);
    let x11: BytePoly_5 = bigint_def!(ctx, 5, 4, 1);
    let x12: BytePoly_5 = bigint_def!(ctx, 5, 5, 1);
    let x13: BytePoly_5 = bigint_def!(ctx, 5, 6, 1);
    let x14: BytePoly_4 = bigint_def!(ctx, 4, 7, 1);
    let x15: BytePoly_4 = bigint_def!(ctx, 4, 8, 1);
    let x16: BytePoly_8 = bigint_mul!(x9, x9, 8);
    let x17: BytePoly_9 = bigint_nondet_quot!(ctx, x16, x5, 9);
    let x18: BytePoly_4 = bigint_nondet_rem!(ctx, x16, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x17, x5, 13), x18, 13), x16, 13),
        73156,
        4,
    )?;
    let x19: BytePoly_8 = bigint_mul!(x5, x5, 8);
    let x20: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_add!(bigint_mul!(x9, x18, 8), bigint_mul!(x9, x4, 8), 8),
                x3,
                8
            ),
            bigint_mul!(x10, x10, 8),
            8
        ),
        x19,
        8
    );
    let x21: BytePoly_9 = bigint_nondet_quot!(ctx, x20, x5, 9);
    let x22: BytePoly_4 = bigint_nondet_rem!(ctx, x20, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x21, x5, 13), x22, 13), x20, 13),
        73156,
        4,
    )?;
    eqz(ctx, &x22, 34, 1)?;
    let x23: BytePoly_8 = bigint_mul!(x15, x15, 8);
    let x24: BytePoly_8 = bigint_mul!(x14, x14, 8);
    let x25: BytePoly_9 = bigint_nondet_quot!(ctx, x24, x5, 9);
    let x26: BytePoly_4 = bigint_nondet_rem!(ctx, x24, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x25, x5, 13), x26, 13), x24, 13),
        73156,
        4,
    )?;
    let x27: BytePoly_8 = bigint_mul!(x14, x4, 8);
    let x28: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x14, x26, 8), x27, 8), x3, 8),
            x23,
            8
        ),
        x19,
        8
    );
    let x29: BytePoly_9 = bigint_nondet_quot!(ctx, x28, x5, 9);
    let x30: BytePoly_4 = bigint_nondet_rem!(ctx, x28, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x29, x5, 13), x30, 13), x28, 13),
        73156,
        4,
    )?;
    eqz(ctx, &x30, 34, 1)?;
    let x31: BytePoly_4 = bigint_nondet_inv!(ctx, x13, x6, 4);
    let x32: BytePoly_9 = bigint_mul!(x13, x31, 9);
    let x33: BytePoly_10 = bigint_nondet_quot!(ctx, x32, x6, 10);
    let x34: BytePoly_4 = bigint_nondet_rem!(ctx, x32, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x33, x6, 14), x34, 14), x32, 14),
        81284,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x34, x2, 4), 34, 1)?;
    let x35: BytePoly_9 = bigint_mul!(x11, x31, 9);
    let x36: BytePoly_10 = bigint_nondet_quot!(ctx, x35, x6, 10);
    let x37: BytePoly_4 = bigint_nondet_rem!(ctx, x35, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x36, x6, 14), x37, 14), x35, 14),
        81284,
        4,
    )?;
    let x38: BytePoly_9 = bigint_mul!(x12, x31, 9);
    let x39: BytePoly_10 = bigint_nondet_quot!(ctx, x38, x6, 10);
    let x40: BytePoly_4 = bigint_nondet_rem!(ctx, x38, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x39, x6, 14), x40, 14), x38, 14),
        81284,
        4,
    )?;
    let x41: BytePoly_9 = bigint_nondet_quot!(ctx, x24, x5, 9);
    let x42: BytePoly_4 = bigint_nondet_rem!(ctx, x24, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x41, x5, 13), x42, 13), x24, 13),
        73156,
        4,
    )?;
    let x43: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x14, x42, 8), x27, 8), x3, 8),
            x23,
            8
        ),
        x19,
        8
    );
    let x44: BytePoly_9 = bigint_nondet_quot!(ctx, x43, x5, 9);
    let x45: BytePoly_4 = bigint_nondet_rem!(ctx, x43, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x44, x5, 13), x45, 13), x43, 13),
        73156,
        4,
    )?;
    eqz(ctx, &x45, 34, 1)?;
    let x46: BytePoly_1 = bigint_nondet_rem!(ctx, x37, x1, 1);
    let x47: BytePoly_4 = bigint_nondet_quot!(ctx, x37, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x47, x1, 5), x46, 5), x37, 5),
        32515,
        2,
    )?;
    let x48: BytePoly_1 = bigint_sub!(x2, x46, 1);
    eqz(ctx, &bigint_mul!(x46, x48, 2), 8131, 2)?;
    let x49: BytePoly_4 = bigint_add!(bigint_sub!(x8, x15, 4), x5, 4);
    let x50: BytePoly_4 = bigint_add!(bigint_sub!(x7, x14, 4), x5, 4);
    let x51: BytePoly_4 = bigint_nondet_inv!(ctx, x50, x5, 4);
    let x52: BytePoly_8 = bigint_mul!(x50, x51, 8);
    let x53: BytePoly_9 = bigint_nondet_quot!(ctx, x52, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x52, bigint_mul!(x53, x5, 13), 13), x0, 13),
        73156,
        4,
    )?;
    let x54: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x49, x51, 8), x5, 4);
    let x55: BytePoly_8 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x54, x50, 8), x49, 8), x5, 8),
        x5,
        8
    );
    let x56: BytePoly_9 = bigint_nondet_quot!(ctx, x55, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x55, bigint_mul!(x56, x5, 13), 13),
        73156,
        4,
    )?;
    let x57: BytePoly_8 = bigint_mul!(x54, x54, 8);
    let x58: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x57, x14, 8), x5, 8), x7, 8),
        x5,
        8
    );
    let x59: BytePoly_9 = bigint_nondet_quot!(ctx, x58, x5, 9);
    let x60: BytePoly_4 = bigint_nondet_rem!(ctx, x58, x5, 4);
    let x61: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x5,
                    bigint_add!(
                        bigint_mul!(x54, x60, 8),
                        bigint_add!(bigint_sub!(x15, bigint_mul!(x54, x14, 8), 8), x5, 8),
                        8
                    ),
                    8
                ),
                x5,
                8
            ),
            x5,
            8
        ),
        x19,
        8
    );
    let x62: BytePoly_9 = bigint_nondet_quot!(ctx, x61, x5, 9);
    let x63: BytePoly_4 = bigint_nondet_rem!(ctx, x61, x5, 4);
    let x64: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x57, bigint_mul!(x59, x5, 13), 13), x14, 13),
                    x7,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x60,
        13
    );
    eqz(ctx, &x64, 73156, 4)?;
    let x65: BytePoly_13 = bigint_sub!(
        bigint_add!(bigint_mul!(x62, x5, 13), x63, 13),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x54, bigint_sub!(x14, x60, 4), 8), x15, 8),
                    x5,
                    8
                ),
                x5,
                8
            ),
            x19,
            8
        ),
        13
    );
    eqz(ctx, &x65, 73156, 4)?;
    let x66: BytePoly_5 = bigint_add!(bigint_mul!(x60, x46, 5), bigint_mul!(x14, x48, 5), 5);
    let x67: BytePoly_5 = bigint_add!(bigint_mul!(x63, x46, 5), bigint_mul!(x15, x48, 5), 5);
    let x68: BytePoly_6 = bigint_nondet_quot!(ctx, x66, x5, 6);
    let x69: BytePoly_4 = bigint_nondet_rem!(ctx, x66, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x68, x5, 10), x69, 10), x66, 10),
        48771,
        4,
    )?;
    let x70: BytePoly_6 = bigint_nondet_quot!(ctx, x67, x5, 6);
    let x71: BytePoly_4 = bigint_nondet_rem!(ctx, x67, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x70, x5, 10), x71, 10), x67, 10),
        48771,
        4,
    )?;
    let x72: BytePoly_8 = bigint_mul!(x7, x7, 8);
    let x73: BytePoly_8 = bigint_add!(bigint_add!(bigint_add!(x72, x72, 8), x72, 8), x4, 8);
    let x74: BytePoly_8 = bigint_add!(x19, x19, 8);
    let x75: BytePoly_8 = bigint_add!(x74, x73, 8);
    let x76: BytePoly_4 = bigint_nondet_inv!(ctx, bigint_add!(x8, x8, 4), x5, 4);
    let x77: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x73, x76, 12), x5, 4);
    let x78: BytePoly_8 = bigint_mul!(x8, x77, 8);
    let x79: BytePoly_8 = bigint_add!(x78, x78, 8);
    let x80: BytePoly_9 = bigint_nondet_quot!(ctx, bigint_sub!(x75, x79, 8), x5, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x80, x5, 13), x79, 13), x75, 13),
        73156,
        4,
    )?;
    let x81: BytePoly_8 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x77, x77, 8), x5, 8), x5, 8),
            x7,
            8
        ),
        x7,
        8
    );
    let x82: BytePoly_9 = bigint_nondet_quot!(ctx, x81, x5, 9);
    let x83: BytePoly_4 = bigint_nondet_rem!(ctx, x81, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x82, x5, 13), x83, 13), x81, 13),
        73156,
        4,
    )?;
    let x84: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x19, bigint_mul!(x77, x83, 8), 8), x5, 8),
            x8,
            8
        ),
        bigint_mul!(x77, x7, 8),
        8
    );
    let x85: BytePoly_9 = bigint_nondet_quot!(ctx, x84, x5, 9);
    let x86: BytePoly_4 = bigint_nondet_rem!(ctx, x84, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x85, x5, 13), x86, 13), x84, 13),
        73156,
        4,
    )?;
    let x87: BytePoly_1 = bigint_nondet_rem!(ctx, x47, x1, 1);
    let x88: BytePoly_4 = bigint_nondet_quot!(ctx, x47, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x88, x1, 5), x87, 5), x47, 5),
        32515,
        2,
    )?;
    let x89: BytePoly_1 = bigint_sub!(x2, x87, 1);
    eqz(ctx, &bigint_mul!(x87, x89, 2), 8131, 2)?;
    let x90: BytePoly_4 = bigint_add!(bigint_sub!(x86, x71, 4), x5, 4);
    let x91: BytePoly_4 = bigint_add!(bigint_sub!(x83, x69, 4), x5, 4);
    let x92: BytePoly_4 = bigint_nondet_inv!(ctx, x91, x5, 4);
    let x93: BytePoly_8 = bigint_mul!(x91, x92, 8);
    let x94: BytePoly_9 = bigint_nondet_quot!(ctx, x93, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x93, bigint_mul!(x94, x5, 13), 13), x0, 13),
        73156,
        4,
    )?;
    let x95: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x90, x92, 8), x5, 4);
    let x96: BytePoly_8 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x95, x91, 8), x90, 8), x5, 8),
        x5,
        8
    );
    let x97: BytePoly_9 = bigint_nondet_quot!(ctx, x96, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x96, bigint_mul!(x97, x5, 13), 13),
        73156,
        4,
    )?;
    let x98: BytePoly_8 = bigint_mul!(x95, x95, 8);
    let x99: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x98, x69, 8), x5, 8), x83, 8),
        x5,
        8
    );
    let x100: BytePoly_9 = bigint_nondet_quot!(ctx, x99, x5, 9);
    let x101: BytePoly_4 = bigint_nondet_rem!(ctx, x99, x5, 4);
    let x102: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x5,
                    bigint_add!(
                        bigint_mul!(x95, x101, 8),
                        bigint_add!(bigint_sub!(x71, bigint_mul!(x95, x69, 8), 8), x5, 8),
                        8
                    ),
                    8
                ),
                x5,
                8
            ),
            x5,
            8
        ),
        x19,
        8
    );
    let x103: BytePoly_9 = bigint_nondet_quot!(ctx, x102, x5, 9);
    let x104: BytePoly_4 = bigint_nondet_rem!(ctx, x102, x5, 4);
    let x105: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x98, bigint_mul!(x100, x5, 13), 13), x69, 13),
                    x83,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x101,
        13
    );
    eqz(ctx, &x105, 73156, 4)?;
    let x106: BytePoly_13 = bigint_sub!(
        bigint_add!(bigint_mul!(x103, x5, 13), x104, 13),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x95, bigint_sub!(x69, x101, 4), 8), x71, 8),
                    x5,
                    8
                ),
                x5,
                8
            ),
            x19,
            8
        ),
        13
    );
    eqz(ctx, &x106, 73156, 4)?;
    let x107: BytePoly_5 = bigint_add!(bigint_mul!(x101, x87, 5), bigint_mul!(x69, x89, 5), 5);
    let x108: BytePoly_5 = bigint_add!(bigint_mul!(x104, x87, 5), bigint_mul!(x71, x89, 5), 5);
    let x109: BytePoly_6 = bigint_nondet_quot!(ctx, x107, x5, 6);
    let x110: BytePoly_4 = bigint_nondet_rem!(ctx, x107, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x109, x5, 10), x110, 10), x107, 10),
        48771,
        4,
    )?;
    let x111: BytePoly_6 = bigint_nondet_quot!(ctx, x108, x5, 6);
    let x112: BytePoly_4 = bigint_nondet_rem!(ctx, x108, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x111, x5, 10), x112, 10), x108, 10),
        48771,
        4,
    )?;
    let x113: BytePoly_8 = bigint_mul!(x83, x83, 8);
    let x114: BytePoly_8 = bigint_add!(bigint_add!(bigint_add!(x113, x113, 8), x113, 8), x4, 8);
    let x115: BytePoly_8 = bigint_add!(x74, x114, 8);
    let x116: BytePoly_4 = bigint_nondet_inv!(ctx, bigint_add!(x86, x86, 4), x5, 4);
    let x117: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x114, x116, 12), x5, 4);
    let x118: BytePoly_8 = bigint_mul!(x86, x117, 8);
    let x119: BytePoly_8 = bigint_add!(x118, x118, 8);
    let x120: BytePoly_9 = bigint_nondet_quot!(ctx, bigint_sub!(x115, x119, 8), x5, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x120, x5, 13), x119, 13), x115, 13),
        73156,
        4,
    )?;
    let x121: BytePoly_8 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x117, x117, 8), x5, 8), x5, 8),
            x83,
            8
        ),
        x83,
        8
    );
    let x122: BytePoly_9 = bigint_nondet_quot!(ctx, x121, x5, 9);
    let x123: BytePoly_4 = bigint_nondet_rem!(ctx, x121, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x122, x5, 13), x123, 13), x121, 13),
        73156,
        4,
    )?;
    let x124: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x19, bigint_mul!(x117, x123, 8), 8), x5, 8),
            x86,
            8
        ),
        bigint_mul!(x117, x83, 8),
        8
    );
    let x125: BytePoly_9 = bigint_nondet_quot!(ctx, x124, x5, 9);
    let x126: BytePoly_4 = bigint_nondet_rem!(ctx, x124, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x125, x5, 13), x126, 13), x124, 13),
        73156,
        4,
    )?;
    let x127: BytePoly_1 = bigint_nondet_rem!(ctx, x88, x1, 1);
    let x128: BytePoly_4 = bigint_nondet_quot!(ctx, x88, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x128, x1, 5), x127, 5), x88, 5),
        32515,
        2,
    )?;
    let x129: BytePoly_1 = bigint_sub!(x2, x127, 1);
    eqz(ctx, &bigint_mul!(x127, x129, 2), 8131, 2)?;
    let x130: BytePoly_4 = bigint_add!(bigint_sub!(x126, x112, 4), x5, 4);
    let x131: BytePoly_4 = bigint_add!(bigint_sub!(x123, x110, 4), x5, 4);
    let x132: BytePoly_4 = bigint_nondet_inv!(ctx, x131, x5, 4);
    let x133: BytePoly_8 = bigint_mul!(x131, x132, 8);
    let x134: BytePoly_9 = bigint_nondet_quot!(ctx, x133, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x133, bigint_mul!(x134, x5, 13), 13), x0, 13),
        73156,
        4,
    )?;
    let x135: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x130, x132, 8), x5, 4);
    let x136: BytePoly_8 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x135, x131, 8), x130, 8), x5, 8),
        x5,
        8
    );
    let x137: BytePoly_9 = bigint_nondet_quot!(ctx, x136, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x136, bigint_mul!(x137, x5, 13), 13),
        73156,
        4,
    )?;
    let x138: BytePoly_8 = bigint_mul!(x135, x135, 8);
    let x139: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x138, x110, 8), x5, 8), x123, 8),
        x5,
        8
    );
    let x140: BytePoly_9 = bigint_nondet_quot!(ctx, x139, x5, 9);
    let x141: BytePoly_4 = bigint_nondet_rem!(ctx, x139, x5, 4);
    let x142: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x5,
                    bigint_add!(
                        bigint_mul!(x135, x141, 8),
                        bigint_add!(bigint_sub!(x112, bigint_mul!(x135, x110, 8), 8), x5, 8),
                        8
                    ),
                    8
                ),
                x5,
                8
            ),
            x5,
            8
        ),
        x19,
        8
    );
    let x143: BytePoly_9 = bigint_nondet_quot!(ctx, x142, x5, 9);
    let x144: BytePoly_4 = bigint_nondet_rem!(ctx, x142, x5, 4);
    let x145: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x138, bigint_mul!(x140, x5, 13), 13), x110, 13),
                    x123,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x141,
        13
    );
    eqz(ctx, &x145, 73156, 4)?;
    let x146: BytePoly_13 = bigint_sub!(
        bigint_add!(bigint_mul!(x143, x5, 13), x144, 13),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x135, bigint_sub!(x110, x141, 4), 8), x112, 8),
                    x5,
                    8
                ),
                x5,
                8
            ),
            x19,
            8
        ),
        13
    );
    eqz(ctx, &x146, 73156, 4)?;
    let x147: BytePoly_5 = bigint_add!(bigint_mul!(x141, x127, 5), bigint_mul!(x110, x129, 5), 5);
    let x148: BytePoly_5 = bigint_add!(bigint_mul!(x144, x127, 5), bigint_mul!(x112, x129, 5), 5);
    let x149: BytePoly_6 = bigint_nondet_quot!(ctx, x147, x5, 6);
    let x150: BytePoly_4 = bigint_nondet_rem!(ctx, x147, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x149, x5, 10), x150, 10), x147, 10),
        48771,
        4,
    )?;
    let x151: BytePoly_6 = bigint_nondet_quot!(ctx, x148, x5, 6);
    let x152: BytePoly_4 = bigint_nondet_rem!(ctx, x148, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x151, x5, 10), x152, 10), x148, 10),
        48771,
        4,
    )?;
    let x153: BytePoly_8 = bigint_mul!(x123, x123, 8);
    let x154: BytePoly_8 = bigint_add!(bigint_add!(bigint_add!(x153, x153, 8), x153, 8), x4, 8);
    let x155: BytePoly_8 = bigint_add!(x74, x154, 8);
    let x156: BytePoly_4 = bigint_nondet_inv!(ctx, bigint_add!(x126, x126, 4), x5, 4);
    let x157: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x154, x156, 12), x5, 4);
    let x158: BytePoly_8 = bigint_mul!(x126, x157, 8);
    let x159: BytePoly_8 = bigint_add!(x158, x158, 8);
    let x160: BytePoly_9 = bigint_nondet_quot!(ctx, bigint_sub!(x155, x159, 8), x5, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x160, x5, 13), x159, 13), x155, 13),
        73156,
        4,
    )?;
    let x161: BytePoly_8 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x157, x157, 8), x5, 8), x5, 8),
            x123,
            8
        ),
        x123,
        8
    );
    let x162: BytePoly_9 = bigint_nondet_quot!(ctx, x161, x5, 9);
    let x163: BytePoly_4 = bigint_nondet_rem!(ctx, x161, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x162, x5, 13), x163, 13), x161, 13),
        73156,
        4,
    )?;
    let x164: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x19, bigint_mul!(x157, x163, 8), 8), x5, 8),
            x126,
            8
        ),
        bigint_mul!(x157, x123, 8),
        8
    );
    let x165: BytePoly_9 = bigint_nondet_quot!(ctx, x164, x5, 9);
    let x166: BytePoly_4 = bigint_nondet_rem!(ctx, x164, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x165, x5, 13), x166, 13), x164, 13),
        73156,
        4,
    )?;
    let x167: BytePoly_1 = bigint_nondet_rem!(ctx, x128, x1, 1);
    let x168: BytePoly_4 = bigint_nondet_quot!(ctx, x128, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x168, x1, 5), x167, 5), x128, 5),
        32515,
        2,
    )?;
    let x169: BytePoly_1 = bigint_sub!(x2, x167, 1);
    eqz(ctx, &bigint_mul!(x167, x169, 2), 8131, 2)?;
    let x170: BytePoly_4 = bigint_add!(bigint_sub!(x166, x152, 4), x5, 4);
    let x171: BytePoly_4 = bigint_add!(bigint_sub!(x163, x150, 4), x5, 4);
    let x172: BytePoly_4 = bigint_nondet_inv!(ctx, x171, x5, 4);
    let x173: BytePoly_8 = bigint_mul!(x171, x172, 8);
    let x174: BytePoly_9 = bigint_nondet_quot!(ctx, x173, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x173, bigint_mul!(x174, x5, 13), 13), x0, 13),
        73156,
        4,
    )?;
    let x175: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x170, x172, 8), x5, 4);
    let x176: BytePoly_8 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x175, x171, 8), x170, 8), x5, 8),
        x5,
        8
    );
    let x177: BytePoly_9 = bigint_nondet_quot!(ctx, x176, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x176, bigint_mul!(x177, x5, 13), 13),
        73156,
        4,
    )?;
    let x178: BytePoly_8 = bigint_mul!(x175, x175, 8);
    let x179: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x178, x150, 8), x5, 8), x163, 8),
        x5,
        8
    );
    let x180: BytePoly_9 = bigint_nondet_quot!(ctx, x179, x5, 9);
    let x181: BytePoly_4 = bigint_nondet_rem!(ctx, x179, x5, 4);
    let x182: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x5,
                    bigint_add!(
                        bigint_mul!(x175, x181, 8),
                        bigint_add!(bigint_sub!(x152, bigint_mul!(x175, x150, 8), 8), x5, 8),
                        8
                    ),
                    8
                ),
                x5,
                8
            ),
            x5,
            8
        ),
        x19,
        8
    );
    let x183: BytePoly_9 = bigint_nondet_quot!(ctx, x182, x5, 9);
    let x184: BytePoly_4 = bigint_nondet_rem!(ctx, x182, x5, 4);
    let x185: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x178, bigint_mul!(x180, x5, 13), 13), x150, 13),
                    x163,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x181,
        13
    );
    eqz(ctx, &x185, 73156, 4)?;
    let x186: BytePoly_13 = bigint_sub!(
        bigint_add!(bigint_mul!(x183, x5, 13), x184, 13),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x175, bigint_sub!(x150, x181, 4), 8), x152, 8),
                    x5,
                    8
                ),
                x5,
                8
            ),
            x19,
            8
        ),
        13
    );
    eqz(ctx, &x186, 73156, 4)?;
    let x187: BytePoly_5 = bigint_add!(bigint_mul!(x181, x167, 5), bigint_mul!(x150, x169, 5), 5);
    let x188: BytePoly_5 = bigint_add!(bigint_mul!(x184, x167, 5), bigint_mul!(x152, x169, 5), 5);
    let x189: BytePoly_6 = bigint_nondet_quot!(ctx, x187, x5, 6);
    let x190: BytePoly_4 = bigint_nondet_rem!(ctx, x187, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x189, x5, 10), x190, 10), x187, 10),
        48771,
        4,
    )?;
    let x191: BytePoly_6 = bigint_nondet_quot!(ctx, x188, x5, 6);
    let x192: BytePoly_4 = bigint_nondet_rem!(ctx, x188, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x191, x5, 10), x192, 10), x188, 10),
        48771,
        4,
    )?;
    let x193: BytePoly_8 = bigint_mul!(x163, x163, 8);
    let x194: BytePoly_8 = bigint_add!(bigint_add!(bigint_add!(x193, x193, 8), x193, 8), x4, 8);
    let x195: BytePoly_8 = bigint_add!(x74, x194, 8);
    let x196: BytePoly_4 = bigint_nondet_inv!(ctx, bigint_add!(x166, x166, 4), x5, 4);
    let x197: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x194, x196, 12), x5, 4);
    let x198: BytePoly_8 = bigint_mul!(x166, x197, 8);
    let x199: BytePoly_8 = bigint_add!(x198, x198, 8);
    let x200: BytePoly_9 = bigint_nondet_quot!(ctx, bigint_sub!(x195, x199, 8), x5, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x200, x5, 13), x199, 13), x195, 13),
        73156,
        4,
    )?;
    let x201: BytePoly_8 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x197, x197, 8), x5, 8), x5, 8),
            x163,
            8
        ),
        x163,
        8
    );
    let x202: BytePoly_9 = bigint_nondet_quot!(ctx, x201, x5, 9);
    let x203: BytePoly_4 = bigint_nondet_rem!(ctx, x201, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x202, x5, 13), x203, 13), x201, 13),
        73156,
        4,
    )?;
    let x204: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x19, bigint_mul!(x197, x203, 8), 8), x5, 8),
            x166,
            8
        ),
        bigint_mul!(x197, x163, 8),
        8
    );
    let x205: BytePoly_9 = bigint_nondet_quot!(ctx, x204, x5, 9);
    let x206: BytePoly_4 = bigint_nondet_rem!(ctx, x204, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x205, x5, 13), x206, 13), x204, 13),
        73156,
        4,
    )?;
    let x207: BytePoly_1 = bigint_nondet_rem!(ctx, x168, x1, 1);
    let x208: BytePoly_4 = bigint_nondet_quot!(ctx, x168, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x208, x1, 5), x207, 5), x168, 5),
        32515,
        2,
    )?;
    let x209: BytePoly_1 = bigint_sub!(x2, x207, 1);
    eqz(ctx, &bigint_mul!(x207, x209, 2), 8131, 2)?;
    let x210: BytePoly_4 = bigint_add!(bigint_sub!(x206, x192, 4), x5, 4);
    let x211: BytePoly_4 = bigint_add!(bigint_sub!(x203, x190, 4), x5, 4);
    let x212: BytePoly_4 = bigint_nondet_inv!(ctx, x211, x5, 4);
    let x213: BytePoly_8 = bigint_mul!(x211, x212, 8);
    let x214: BytePoly_9 = bigint_nondet_quot!(ctx, x213, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x213, bigint_mul!(x214, x5, 13), 13), x0, 13),
        73156,
        4,
    )?;
    let x215: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x210, x212, 8), x5, 4);
    let x216: BytePoly_8 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x215, x211, 8), x210, 8), x5, 8),
        x5,
        8
    );
    let x217: BytePoly_9 = bigint_nondet_quot!(ctx, x216, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x216, bigint_mul!(x217, x5, 13), 13),
        73156,
        4,
    )?;
    let x218: BytePoly_8 = bigint_mul!(x215, x215, 8);
    let x219: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x218, x190, 8), x5, 8), x203, 8),
        x5,
        8
    );
    let x220: BytePoly_9 = bigint_nondet_quot!(ctx, x219, x5, 9);
    let x221: BytePoly_4 = bigint_nondet_rem!(ctx, x219, x5, 4);
    let x222: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x5,
                    bigint_add!(
                        bigint_mul!(x215, x221, 8),
                        bigint_add!(bigint_sub!(x192, bigint_mul!(x215, x190, 8), 8), x5, 8),
                        8
                    ),
                    8
                ),
                x5,
                8
            ),
            x5,
            8
        ),
        x19,
        8
    );
    let x223: BytePoly_9 = bigint_nondet_quot!(ctx, x222, x5, 9);
    let x224: BytePoly_4 = bigint_nondet_rem!(ctx, x222, x5, 4);
    let x225: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x218, bigint_mul!(x220, x5, 13), 13), x190, 13),
                    x203,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x221,
        13
    );
    eqz(ctx, &x225, 73156, 4)?;
    let x226: BytePoly_13 = bigint_sub!(
        bigint_add!(bigint_mul!(x223, x5, 13), x224, 13),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x215, bigint_sub!(x190, x221, 4), 8), x192, 8),
                    x5,
                    8
                ),
                x5,
                8
            ),
            x19,
            8
        ),
        13
    );
    eqz(ctx, &x226, 73156, 4)?;
    let x227: BytePoly_5 = bigint_add!(bigint_mul!(x221, x207, 5), bigint_mul!(x190, x209, 5), 5);
    let x228: BytePoly_5 = bigint_add!(bigint_mul!(x224, x207, 5), bigint_mul!(x192, x209, 5), 5);
    let x229: BytePoly_6 = bigint_nondet_quot!(ctx, x227, x5, 6);
    let x230: BytePoly_4 = bigint_nondet_rem!(ctx, x227, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x229, x5, 10), x230, 10), x227, 10),
        48771,
        4,
    )?;
    let x231: BytePoly_6 = bigint_nondet_quot!(ctx, x228, x5, 6);
    let x232: BytePoly_4 = bigint_nondet_rem!(ctx, x228, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x231, x5, 10), x232, 10), x228, 10),
        48771,
        4,
    )?;
    let x233: BytePoly_8 = bigint_mul!(x203, x203, 8);
    let x234: BytePoly_8 = bigint_add!(bigint_add!(bigint_add!(x233, x233, 8), x233, 8), x4, 8);
    let x235: BytePoly_8 = bigint_add!(x74, x234, 8);
    let x236: BytePoly_4 = bigint_nondet_inv!(ctx, bigint_add!(x206, x206, 4), x5, 4);
    let x237: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x234, x236, 12), x5, 4);
    let x238: BytePoly_8 = bigint_mul!(x206, x237, 8);
    let x239: BytePoly_8 = bigint_add!(x238, x238, 8);
    let x240: BytePoly_9 = bigint_nondet_quot!(ctx, bigint_sub!(x235, x239, 8), x5, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x240, x5, 13), x239, 13), x235, 13),
        73156,
        4,
    )?;
    let x241: BytePoly_8 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x237, x237, 8), x5, 8), x5, 8),
            x203,
            8
        ),
        x203,
        8
    );
    let x242: BytePoly_9 = bigint_nondet_quot!(ctx, x241, x5, 9);
    let x243: BytePoly_4 = bigint_nondet_rem!(ctx, x241, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x242, x5, 13), x243, 13), x241, 13),
        73156,
        4,
    )?;
    let x244: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x19, bigint_mul!(x237, x243, 8), 8), x5, 8),
            x206,
            8
        ),
        bigint_mul!(x237, x203, 8),
        8
    );
    let x245: BytePoly_9 = bigint_nondet_quot!(ctx, x244, x5, 9);
    let x246: BytePoly_4 = bigint_nondet_rem!(ctx, x244, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x245, x5, 13), x246, 13), x244, 13),
        73156,
        4,
    )?;
    let x247: BytePoly_1 = bigint_nondet_rem!(ctx, x208, x1, 1);
    let x248: BytePoly_4 = bigint_nondet_quot!(ctx, x208, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x248, x1, 5), x247, 5), x208, 5),
        32515,
        2,
    )?;
    let x249: BytePoly_1 = bigint_sub!(x2, x247, 1);
    eqz(ctx, &bigint_mul!(x247, x249, 2), 8131, 2)?;
    let x250: BytePoly_4 = bigint_add!(bigint_sub!(x246, x232, 4), x5, 4);
    let x251: BytePoly_4 = bigint_add!(bigint_sub!(x243, x230, 4), x5, 4);
    let x252: BytePoly_4 = bigint_nondet_inv!(ctx, x251, x5, 4);
    let x253: BytePoly_8 = bigint_mul!(x251, x252, 8);
    let x254: BytePoly_9 = bigint_nondet_quot!(ctx, x253, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x253, bigint_mul!(x254, x5, 13), 13), x0, 13),
        73156,
        4,
    )?;
    let x255: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x250, x252, 8), x5, 4);
    let x256: BytePoly_8 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x255, x251, 8), x250, 8), x5, 8),
        x5,
        8
    );
    let x257: BytePoly_9 = bigint_nondet_quot!(ctx, x256, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x256, bigint_mul!(x257, x5, 13), 13),
        73156,
        4,
    )?;
    let x258: BytePoly_8 = bigint_mul!(x255, x255, 8);
    let x259: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x258, x230, 8), x5, 8), x243, 8),
        x5,
        8
    );
    let x260: BytePoly_9 = bigint_nondet_quot!(ctx, x259, x5, 9);
    let x261: BytePoly_4 = bigint_nondet_rem!(ctx, x259, x5, 4);
    let x262: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x5,
                    bigint_add!(
                        bigint_mul!(x255, x261, 8),
                        bigint_add!(bigint_sub!(x232, bigint_mul!(x255, x230, 8), 8), x5, 8),
                        8
                    ),
                    8
                ),
                x5,
                8
            ),
            x5,
            8
        ),
        x19,
        8
    );
    let x263: BytePoly_9 = bigint_nondet_quot!(ctx, x262, x5, 9);
    let x264: BytePoly_4 = bigint_nondet_rem!(ctx, x262, x5, 4);
    let x265: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x258, bigint_mul!(x260, x5, 13), 13), x230, 13),
                    x243,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x261,
        13
    );
    eqz(ctx, &x265, 73156, 4)?;
    let x266: BytePoly_13 = bigint_sub!(
        bigint_add!(bigint_mul!(x263, x5, 13), x264, 13),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x255, bigint_sub!(x230, x261, 4), 8), x232, 8),
                    x5,
                    8
                ),
                x5,
                8
            ),
            x19,
            8
        ),
        13
    );
    eqz(ctx, &x266, 73156, 4)?;
    let x267: BytePoly_5 = bigint_add!(bigint_mul!(x261, x247, 5), bigint_mul!(x230, x249, 5), 5);
    let x268: BytePoly_5 = bigint_add!(bigint_mul!(x264, x247, 5), bigint_mul!(x232, x249, 5), 5);
    let x269: BytePoly_6 = bigint_nondet_quot!(ctx, x267, x5, 6);
    let x270: BytePoly_4 = bigint_nondet_rem!(ctx, x267, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x269, x5, 10), x270, 10), x267, 10),
        48771,
        4,
    )?;
    let x271: BytePoly_6 = bigint_nondet_quot!(ctx, x268, x5, 6);
    let x272: BytePoly_4 = bigint_nondet_rem!(ctx, x268, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x271, x5, 10), x272, 10), x268, 10),
        48771,
        4,
    )?;
    let x273: BytePoly_8 = bigint_mul!(x243, x243, 8);
    let x274: BytePoly_8 = bigint_add!(bigint_add!(bigint_add!(x273, x273, 8), x273, 8), x4, 8);
    let x275: BytePoly_8 = bigint_add!(x74, x274, 8);
    let x276: BytePoly_4 = bigint_nondet_inv!(ctx, bigint_add!(x246, x246, 4), x5, 4);
    let x277: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x274, x276, 12), x5, 4);
    let x278: BytePoly_8 = bigint_mul!(x246, x277, 8);
    let x279: BytePoly_8 = bigint_add!(x278, x278, 8);
    let x280: BytePoly_9 = bigint_nondet_quot!(ctx, bigint_sub!(x275, x279, 8), x5, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x280, x5, 13), x279, 13), x275, 13),
        73156,
        4,
    )?;
    let x281: BytePoly_8 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x277, x277, 8), x5, 8), x5, 8),
            x243,
            8
        ),
        x243,
        8
    );
    let x282: BytePoly_9 = bigint_nondet_quot!(ctx, x281, x5, 9);
    let x283: BytePoly_4 = bigint_nondet_rem!(ctx, x281, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x282, x5, 13), x283, 13), x281, 13),
        73156,
        4,
    )?;
    let x284: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x19, bigint_mul!(x277, x283, 8), 8), x5, 8),
            x246,
            8
        ),
        bigint_mul!(x277, x243, 8),
        8
    );
    let x285: BytePoly_9 = bigint_nondet_quot!(ctx, x284, x5, 9);
    let x286: BytePoly_4 = bigint_nondet_rem!(ctx, x284, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x285, x5, 13), x286, 13), x284, 13),
        73156,
        4,
    )?;
    let x287: BytePoly_1 = bigint_nondet_rem!(ctx, x248, x1, 1);
    let x288: BytePoly_4 = bigint_nondet_quot!(ctx, x248, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x288, x1, 5), x287, 5), x248, 5),
        32515,
        2,
    )?;
    let x289: BytePoly_1 = bigint_sub!(x2, x287, 1);
    eqz(ctx, &bigint_mul!(x287, x289, 2), 8131, 2)?;
    let x290: BytePoly_4 = bigint_add!(bigint_sub!(x286, x272, 4), x5, 4);
    let x291: BytePoly_4 = bigint_add!(bigint_sub!(x283, x270, 4), x5, 4);
    let x292: BytePoly_4 = bigint_nondet_inv!(ctx, x291, x5, 4);
    let x293: BytePoly_8 = bigint_mul!(x291, x292, 8);
    let x294: BytePoly_9 = bigint_nondet_quot!(ctx, x293, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x293, bigint_mul!(x294, x5, 13), 13), x0, 13),
        73156,
        4,
    )?;
    let x295: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x290, x292, 8), x5, 4);
    let x296: BytePoly_8 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x295, x291, 8), x290, 8), x5, 8),
        x5,
        8
    );
    let x297: BytePoly_9 = bigint_nondet_quot!(ctx, x296, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x296, bigint_mul!(x297, x5, 13), 13),
        73156,
        4,
    )?;
    let x298: BytePoly_8 = bigint_mul!(x295, x295, 8);
    let x299: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x298, x270, 8), x5, 8), x283, 8),
        x5,
        8
    );
    let x300: BytePoly_9 = bigint_nondet_quot!(ctx, x299, x5, 9);
    let x301: BytePoly_4 = bigint_nondet_rem!(ctx, x299, x5, 4);
    let x302: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x5,
                    bigint_add!(
                        bigint_mul!(x295, x301, 8),
                        bigint_add!(bigint_sub!(x272, bigint_mul!(x295, x270, 8), 8), x5, 8),
                        8
                    ),
                    8
                ),
                x5,
                8
            ),
            x5,
            8
        ),
        x19,
        8
    );
    let x303: BytePoly_9 = bigint_nondet_quot!(ctx, x302, x5, 9);
    let x304: BytePoly_4 = bigint_nondet_rem!(ctx, x302, x5, 4);
    let x305: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x298, bigint_mul!(x300, x5, 13), 13), x270, 13),
                    x283,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x301,
        13
    );
    eqz(ctx, &x305, 73156, 4)?;
    let x306: BytePoly_13 = bigint_sub!(
        bigint_add!(bigint_mul!(x303, x5, 13), x304, 13),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x295, bigint_sub!(x270, x301, 4), 8), x272, 8),
                    x5,
                    8
                ),
                x5,
                8
            ),
            x19,
            8
        ),
        13
    );
    eqz(ctx, &x306, 73156, 4)?;
    let x307: BytePoly_5 = bigint_add!(bigint_mul!(x301, x287, 5), bigint_mul!(x270, x289, 5), 5);
    let x308: BytePoly_5 = bigint_add!(bigint_mul!(x304, x287, 5), bigint_mul!(x272, x289, 5), 5);
    let x309: BytePoly_6 = bigint_nondet_quot!(ctx, x307, x5, 6);
    let x310: BytePoly_4 = bigint_nondet_rem!(ctx, x307, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x309, x5, 10), x310, 10), x307, 10),
        48771,
        4,
    )?;
    let x311: BytePoly_6 = bigint_nondet_quot!(ctx, x308, x5, 6);
    let x312: BytePoly_4 = bigint_nondet_rem!(ctx, x308, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x311, x5, 10), x312, 10), x308, 10),
        48771,
        4,
    )?;
    let x313: BytePoly_8 = bigint_mul!(x283, x283, 8);
    let x314: BytePoly_8 = bigint_add!(bigint_add!(bigint_add!(x313, x313, 8), x313, 8), x4, 8);
    let x315: BytePoly_8 = bigint_add!(x74, x314, 8);
    let x316: BytePoly_4 = bigint_nondet_inv!(ctx, bigint_add!(x286, x286, 4), x5, 4);
    let x317: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x314, x316, 12), x5, 4);
    let x318: BytePoly_8 = bigint_mul!(x286, x317, 8);
    let x319: BytePoly_8 = bigint_add!(x318, x318, 8);
    let x320: BytePoly_9 = bigint_nondet_quot!(ctx, bigint_sub!(x315, x319, 8), x5, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x320, x5, 13), x319, 13), x315, 13),
        73156,
        4,
    )?;
    let x321: BytePoly_8 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x317, x317, 8), x5, 8), x5, 8),
            x283,
            8
        ),
        x283,
        8
    );
    let x322: BytePoly_9 = bigint_nondet_quot!(ctx, x321, x5, 9);
    let x323: BytePoly_4 = bigint_nondet_rem!(ctx, x321, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x322, x5, 13), x323, 13), x321, 13),
        73156,
        4,
    )?;
    let x324: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x19, bigint_mul!(x317, x323, 8), 8), x5, 8),
            x286,
            8
        ),
        bigint_mul!(x317, x283, 8),
        8
    );
    let x325: BytePoly_9 = bigint_nondet_quot!(ctx, x324, x5, 9);
    let x326: BytePoly_4 = bigint_nondet_rem!(ctx, x324, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x325, x5, 13), x326, 13), x324, 13),
        73156,
        4,
    )?;
    let x327: BytePoly_1 = bigint_nondet_rem!(ctx, x288, x1, 1);
    let x328: BytePoly_4 = bigint_nondet_quot!(ctx, x288, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x328, x1, 5), x327, 5), x288, 5),
        32515,
        2,
    )?;
    let x329: BytePoly_1 = bigint_sub!(x2, x327, 1);
    eqz(ctx, &bigint_mul!(x327, x329, 2), 8131, 2)?;
    let x330: BytePoly_4 = bigint_add!(bigint_sub!(x326, x312, 4), x5, 4);
    let x331: BytePoly_4 = bigint_add!(bigint_sub!(x323, x310, 4), x5, 4);
    let x332: BytePoly_4 = bigint_nondet_inv!(ctx, x331, x5, 4);
    let x333: BytePoly_8 = bigint_mul!(x331, x332, 8);
    let x334: BytePoly_9 = bigint_nondet_quot!(ctx, x333, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x333, bigint_mul!(x334, x5, 13), 13), x0, 13),
        73156,
        4,
    )?;
    let x335: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x330, x332, 8), x5, 4);
    let x336: BytePoly_8 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x335, x331, 8), x330, 8), x5, 8),
        x5,
        8
    );
    let x337: BytePoly_9 = bigint_nondet_quot!(ctx, x336, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x336, bigint_mul!(x337, x5, 13), 13),
        73156,
        4,
    )?;
    let x338: BytePoly_8 = bigint_mul!(x335, x335, 8);
    let x339: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x338, x310, 8), x5, 8), x323, 8),
        x5,
        8
    );
    let x340: BytePoly_9 = bigint_nondet_quot!(ctx, x339, x5, 9);
    let x341: BytePoly_4 = bigint_nondet_rem!(ctx, x339, x5, 4);
    let x342: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x5,
                    bigint_add!(
                        bigint_mul!(x335, x341, 8),
                        bigint_add!(bigint_sub!(x312, bigint_mul!(x335, x310, 8), 8), x5, 8),
                        8
                    ),
                    8
                ),
                x5,
                8
            ),
            x5,
            8
        ),
        x19,
        8
    );
    let x343: BytePoly_9 = bigint_nondet_quot!(ctx, x342, x5, 9);
    let x344: BytePoly_4 = bigint_nondet_rem!(ctx, x342, x5, 4);
    let x345: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x338, bigint_mul!(x340, x5, 13), 13), x310, 13),
                    x323,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x341,
        13
    );
    eqz(ctx, &x345, 73156, 4)?;
    let x346: BytePoly_13 = bigint_sub!(
        bigint_add!(bigint_mul!(x343, x5, 13), x344, 13),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x335, bigint_sub!(x310, x341, 4), 8), x312, 8),
                    x5,
                    8
                ),
                x5,
                8
            ),
            x19,
            8
        ),
        13
    );
    eqz(ctx, &x346, 73156, 4)?;
    let x347: BytePoly_5 = bigint_add!(bigint_mul!(x341, x327, 5), bigint_mul!(x310, x329, 5), 5);
    let x348: BytePoly_5 = bigint_add!(bigint_mul!(x344, x327, 5), bigint_mul!(x312, x329, 5), 5);
    let x349: BytePoly_6 = bigint_nondet_quot!(ctx, x347, x5, 6);
    let x350: BytePoly_4 = bigint_nondet_rem!(ctx, x347, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x349, x5, 10), x350, 10), x347, 10),
        48771,
        4,
    )?;
    let x351: BytePoly_6 = bigint_nondet_quot!(ctx, x348, x5, 6);
    let x352: BytePoly_4 = bigint_nondet_rem!(ctx, x348, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x351, x5, 10), x352, 10), x348, 10),
        48771,
        4,
    )?;
    let x353: BytePoly_8 = bigint_mul!(x323, x323, 8);
    let x354: BytePoly_8 = bigint_add!(bigint_add!(bigint_add!(x353, x353, 8), x353, 8), x4, 8);
    let x355: BytePoly_8 = bigint_add!(x74, x354, 8);
    let x356: BytePoly_4 = bigint_nondet_inv!(ctx, bigint_add!(x326, x326, 4), x5, 4);
    let x357: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x354, x356, 12), x5, 4);
    let x358: BytePoly_8 = bigint_mul!(x326, x357, 8);
    let x359: BytePoly_8 = bigint_add!(x358, x358, 8);
    let x360: BytePoly_9 = bigint_nondet_quot!(ctx, bigint_sub!(x355, x359, 8), x5, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x360, x5, 13), x359, 13), x355, 13),
        73156,
        4,
    )?;
    let x361: BytePoly_8 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x357, x357, 8), x5, 8), x5, 8),
            x323,
            8
        ),
        x323,
        8
    );
    let x362: BytePoly_9 = bigint_nondet_quot!(ctx, x361, x5, 9);
    let x363: BytePoly_4 = bigint_nondet_rem!(ctx, x361, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x362, x5, 13), x363, 13), x361, 13),
        73156,
        4,
    )?;
    let x364: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x19, bigint_mul!(x357, x363, 8), 8), x5, 8),
            x326,
            8
        ),
        bigint_mul!(x357, x323, 8),
        8
    );
    let x365: BytePoly_9 = bigint_nondet_quot!(ctx, x364, x5, 9);
    let x366: BytePoly_4 = bigint_nondet_rem!(ctx, x364, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x365, x5, 13), x366, 13), x364, 13),
        73156,
        4,
    )?;
    let x367: BytePoly_1 = bigint_nondet_rem!(ctx, x328, x1, 1);
    let x368: BytePoly_4 = bigint_nondet_quot!(ctx, x328, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x368, x1, 5), x367, 5), x328, 5),
        32515,
        2,
    )?;
    let x369: BytePoly_1 = bigint_sub!(x2, x367, 1);
    eqz(ctx, &bigint_mul!(x367, x369, 2), 8131, 2)?;
    let x370: BytePoly_4 = bigint_add!(bigint_sub!(x366, x352, 4), x5, 4);
    let x371: BytePoly_4 = bigint_add!(bigint_sub!(x363, x350, 4), x5, 4);
    let x372: BytePoly_4 = bigint_nondet_inv!(ctx, x371, x5, 4);
    let x373: BytePoly_8 = bigint_mul!(x371, x372, 8);
    let x374: BytePoly_9 = bigint_nondet_quot!(ctx, x373, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x373, bigint_mul!(x374, x5, 13), 13), x0, 13),
        73156,
        4,
    )?;
    let x375: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x370, x372, 8), x5, 4);
    let x376: BytePoly_8 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x375, x371, 8), x370, 8), x5, 8),
        x5,
        8
    );
    let x377: BytePoly_9 = bigint_nondet_quot!(ctx, x376, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x376, bigint_mul!(x377, x5, 13), 13),
        73156,
        4,
    )?;
    let x378: BytePoly_8 = bigint_mul!(x375, x375, 8);
    let x379: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x378, x350, 8), x5, 8), x363, 8),
        x5,
        8
    );
    let x380: BytePoly_9 = bigint_nondet_quot!(ctx, x379, x5, 9);
    let x381: BytePoly_4 = bigint_nondet_rem!(ctx, x379, x5, 4);
    let x382: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x5,
                    bigint_add!(
                        bigint_mul!(x375, x381, 8),
                        bigint_add!(bigint_sub!(x352, bigint_mul!(x375, x350, 8), 8), x5, 8),
                        8
                    ),
                    8
                ),
                x5,
                8
            ),
            x5,
            8
        ),
        x19,
        8
    );
    let x383: BytePoly_9 = bigint_nondet_quot!(ctx, x382, x5, 9);
    let x384: BytePoly_4 = bigint_nondet_rem!(ctx, x382, x5, 4);
    let x385: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x378, bigint_mul!(x380, x5, 13), 13), x350, 13),
                    x363,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x381,
        13
    );
    eqz(ctx, &x385, 73156, 4)?;
    let x386: BytePoly_13 = bigint_sub!(
        bigint_add!(bigint_mul!(x383, x5, 13), x384, 13),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x375, bigint_sub!(x350, x381, 4), 8), x352, 8),
                    x5,
                    8
                ),
                x5,
                8
            ),
            x19,
            8
        ),
        13
    );
    eqz(ctx, &x386, 73156, 4)?;
    let x387: BytePoly_5 = bigint_add!(bigint_mul!(x381, x367, 5), bigint_mul!(x350, x369, 5), 5);
    let x388: BytePoly_5 = bigint_add!(bigint_mul!(x384, x367, 5), bigint_mul!(x352, x369, 5), 5);
    let x389: BytePoly_6 = bigint_nondet_quot!(ctx, x387, x5, 6);
    let x390: BytePoly_4 = bigint_nondet_rem!(ctx, x387, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x389, x5, 10), x390, 10), x387, 10),
        48771,
        4,
    )?;
    let x391: BytePoly_6 = bigint_nondet_quot!(ctx, x388, x5, 6);
    let x392: BytePoly_4 = bigint_nondet_rem!(ctx, x388, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x391, x5, 10), x392, 10), x388, 10),
        48771,
        4,
    )?;
    let x393: BytePoly_8 = bigint_mul!(x363, x363, 8);
    let x394: BytePoly_8 = bigint_add!(bigint_add!(bigint_add!(x393, x393, 8), x393, 8), x4, 8);
    let x395: BytePoly_8 = bigint_add!(x74, x394, 8);
    let x396: BytePoly_4 = bigint_nondet_inv!(ctx, bigint_add!(x366, x366, 4), x5, 4);
    let x397: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x394, x396, 12), x5, 4);
    let x398: BytePoly_8 = bigint_mul!(x366, x397, 8);
    let x399: BytePoly_8 = bigint_add!(x398, x398, 8);
    let x400: BytePoly_9 = bigint_nondet_quot!(ctx, bigint_sub!(x395, x399, 8), x5, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x400, x5, 13), x399, 13), x395, 13),
        73156,
        4,
    )?;
    let x401: BytePoly_8 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x397, x397, 8), x5, 8), x5, 8),
            x363,
            8
        ),
        x363,
        8
    );
    let x402: BytePoly_9 = bigint_nondet_quot!(ctx, x401, x5, 9);
    let x403: BytePoly_4 = bigint_nondet_rem!(ctx, x401, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x402, x5, 13), x403, 13), x401, 13),
        73156,
        4,
    )?;
    let x404: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x19, bigint_mul!(x397, x403, 8), 8), x5, 8),
            x366,
            8
        ),
        bigint_mul!(x397, x363, 8),
        8
    );
    let x405: BytePoly_9 = bigint_nondet_quot!(ctx, x404, x5, 9);
    let x406: BytePoly_4 = bigint_nondet_rem!(ctx, x404, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x405, x5, 13), x406, 13), x404, 13),
        73156,
        4,
    )?;
    let x407: BytePoly_1 = bigint_nondet_rem!(ctx, x368, x1, 1);
    let x408: BytePoly_4 = bigint_nondet_quot!(ctx, x368, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x408, x1, 5), x407, 5), x368, 5),
        32515,
        2,
    )?;
    let x409: BytePoly_1 = bigint_sub!(x2, x407, 1);
    eqz(ctx, &bigint_mul!(x407, x409, 2), 8131, 2)?;
    let x410: BytePoly_4 = bigint_add!(bigint_sub!(x406, x392, 4), x5, 4);
    let x411: BytePoly_4 = bigint_add!(bigint_sub!(x403, x390, 4), x5, 4);
    let x412: BytePoly_4 = bigint_nondet_inv!(ctx, x411, x5, 4);
    let x413: BytePoly_8 = bigint_mul!(x411, x412, 8);
    let x414: BytePoly_9 = bigint_nondet_quot!(ctx, x413, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x413, bigint_mul!(x414, x5, 13), 13), x0, 13),
        73156,
        4,
    )?;
    let x415: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x410, x412, 8), x5, 4);
    let x416: BytePoly_8 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x415, x411, 8), x410, 8), x5, 8),
        x5,
        8
    );
    let x417: BytePoly_9 = bigint_nondet_quot!(ctx, x416, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x416, bigint_mul!(x417, x5, 13), 13),
        73156,
        4,
    )?;
    let x418: BytePoly_8 = bigint_mul!(x415, x415, 8);
    let x419: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x418, x390, 8), x5, 8), x403, 8),
        x5,
        8
    );
    let x420: BytePoly_9 = bigint_nondet_quot!(ctx, x419, x5, 9);
    let x421: BytePoly_4 = bigint_nondet_rem!(ctx, x419, x5, 4);
    let x422: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x5,
                    bigint_add!(
                        bigint_mul!(x415, x421, 8),
                        bigint_add!(bigint_sub!(x392, bigint_mul!(x415, x390, 8), 8), x5, 8),
                        8
                    ),
                    8
                ),
                x5,
                8
            ),
            x5,
            8
        ),
        x19,
        8
    );
    let x423: BytePoly_9 = bigint_nondet_quot!(ctx, x422, x5, 9);
    let x424: BytePoly_4 = bigint_nondet_rem!(ctx, x422, x5, 4);
    let x425: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x418, bigint_mul!(x420, x5, 13), 13), x390, 13),
                    x403,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x421,
        13
    );
    eqz(ctx, &x425, 73156, 4)?;
    let x426: BytePoly_13 = bigint_sub!(
        bigint_add!(bigint_mul!(x423, x5, 13), x424, 13),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x415, bigint_sub!(x390, x421, 4), 8), x392, 8),
                    x5,
                    8
                ),
                x5,
                8
            ),
            x19,
            8
        ),
        13
    );
    eqz(ctx, &x426, 73156, 4)?;
    let x427: BytePoly_5 = bigint_add!(bigint_mul!(x421, x407, 5), bigint_mul!(x390, x409, 5), 5);
    let x428: BytePoly_5 = bigint_add!(bigint_mul!(x424, x407, 5), bigint_mul!(x392, x409, 5), 5);
    let x429: BytePoly_6 = bigint_nondet_quot!(ctx, x427, x5, 6);
    let x430: BytePoly_4 = bigint_nondet_rem!(ctx, x427, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x429, x5, 10), x430, 10), x427, 10),
        48771,
        4,
    )?;
    let x431: BytePoly_6 = bigint_nondet_quot!(ctx, x428, x5, 6);
    let x432: BytePoly_4 = bigint_nondet_rem!(ctx, x428, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x431, x5, 10), x432, 10), x428, 10),
        48771,
        4,
    )?;
    let x433: BytePoly_8 = bigint_mul!(x403, x403, 8);
    let x434: BytePoly_8 = bigint_add!(bigint_add!(bigint_add!(x433, x433, 8), x433, 8), x4, 8);
    let x435: BytePoly_8 = bigint_add!(x74, x434, 8);
    let x436: BytePoly_4 = bigint_nondet_inv!(ctx, bigint_add!(x406, x406, 4), x5, 4);
    let x437: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x434, x436, 12), x5, 4);
    let x438: BytePoly_8 = bigint_mul!(x406, x437, 8);
    let x439: BytePoly_8 = bigint_add!(x438, x438, 8);
    let x440: BytePoly_9 = bigint_nondet_quot!(ctx, bigint_sub!(x435, x439, 8), x5, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x440, x5, 13), x439, 13), x435, 13),
        73156,
        4,
    )?;
    let x441: BytePoly_8 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x437, x437, 8), x5, 8), x5, 8),
            x403,
            8
        ),
        x403,
        8
    );
    let x442: BytePoly_9 = bigint_nondet_quot!(ctx, x441, x5, 9);
    let x443: BytePoly_4 = bigint_nondet_rem!(ctx, x441, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x442, x5, 13), x443, 13), x441, 13),
        73156,
        4,
    )?;
    let x444: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x19, bigint_mul!(x437, x443, 8), 8), x5, 8),
            x406,
            8
        ),
        bigint_mul!(x437, x403, 8),
        8
    );
    let x445: BytePoly_9 = bigint_nondet_quot!(ctx, x444, x5, 9);
    let x446: BytePoly_4 = bigint_nondet_rem!(ctx, x444, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x445, x5, 13), x446, 13), x444, 13),
        73156,
        4,
    )?;
    let x447: BytePoly_1 = bigint_nondet_rem!(ctx, x408, x1, 1);
    let x448: BytePoly_4 = bigint_nondet_quot!(ctx, x408, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x448, x1, 5), x447, 5), x408, 5),
        32515,
        2,
    )?;
    let x449: BytePoly_1 = bigint_sub!(x2, x447, 1);
    eqz(ctx, &bigint_mul!(x447, x449, 2), 8131, 2)?;
    let x450: BytePoly_4 = bigint_add!(bigint_sub!(x446, x432, 4), x5, 4);
    let x451: BytePoly_4 = bigint_add!(bigint_sub!(x443, x430, 4), x5, 4);
    let x452: BytePoly_4 = bigint_nondet_inv!(ctx, x451, x5, 4);
    let x453: BytePoly_8 = bigint_mul!(x451, x452, 8);
    let x454: BytePoly_9 = bigint_nondet_quot!(ctx, x453, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x453, bigint_mul!(x454, x5, 13), 13), x0, 13),
        73156,
        4,
    )?;
    let x455: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x450, x452, 8), x5, 4);
    let x456: BytePoly_8 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x455, x451, 8), x450, 8), x5, 8),
        x5,
        8
    );
    let x457: BytePoly_9 = bigint_nondet_quot!(ctx, x456, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x456, bigint_mul!(x457, x5, 13), 13),
        73156,
        4,
    )?;
    let x458: BytePoly_8 = bigint_mul!(x455, x455, 8);
    let x459: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x458, x430, 8), x5, 8), x443, 8),
        x5,
        8
    );
    let x460: BytePoly_9 = bigint_nondet_quot!(ctx, x459, x5, 9);
    let x461: BytePoly_4 = bigint_nondet_rem!(ctx, x459, x5, 4);
    let x462: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x5,
                    bigint_add!(
                        bigint_mul!(x455, x461, 8),
                        bigint_add!(bigint_sub!(x432, bigint_mul!(x455, x430, 8), 8), x5, 8),
                        8
                    ),
                    8
                ),
                x5,
                8
            ),
            x5,
            8
        ),
        x19,
        8
    );
    let x463: BytePoly_9 = bigint_nondet_quot!(ctx, x462, x5, 9);
    let x464: BytePoly_4 = bigint_nondet_rem!(ctx, x462, x5, 4);
    let x465: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x458, bigint_mul!(x460, x5, 13), 13), x430, 13),
                    x443,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x461,
        13
    );
    eqz(ctx, &x465, 73156, 4)?;
    let x466: BytePoly_13 = bigint_sub!(
        bigint_add!(bigint_mul!(x463, x5, 13), x464, 13),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x455, bigint_sub!(x430, x461, 4), 8), x432, 8),
                    x5,
                    8
                ),
                x5,
                8
            ),
            x19,
            8
        ),
        13
    );
    eqz(ctx, &x466, 73156, 4)?;
    let x467: BytePoly_5 = bigint_add!(bigint_mul!(x461, x447, 5), bigint_mul!(x430, x449, 5), 5);
    let x468: BytePoly_5 = bigint_add!(bigint_mul!(x464, x447, 5), bigint_mul!(x432, x449, 5), 5);
    let x469: BytePoly_6 = bigint_nondet_quot!(ctx, x467, x5, 6);
    let x470: BytePoly_4 = bigint_nondet_rem!(ctx, x467, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x469, x5, 10), x470, 10), x467, 10),
        48771,
        4,
    )?;
    let x471: BytePoly_6 = bigint_nondet_quot!(ctx, x468, x5, 6);
    let x472: BytePoly_4 = bigint_nondet_rem!(ctx, x468, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x471, x5, 10), x472, 10), x468, 10),
        48771,
        4,
    )?;
    let x473: BytePoly_8 = bigint_mul!(x443, x443, 8);
    let x474: BytePoly_8 = bigint_add!(bigint_add!(bigint_add!(x473, x473, 8), x473, 8), x4, 8);
    let x475: BytePoly_8 = bigint_add!(x74, x474, 8);
    let x476: BytePoly_4 = bigint_nondet_inv!(ctx, bigint_add!(x446, x446, 4), x5, 4);
    let x477: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x474, x476, 12), x5, 4);
    let x478: BytePoly_8 = bigint_mul!(x446, x477, 8);
    let x479: BytePoly_8 = bigint_add!(x478, x478, 8);
    let x480: BytePoly_9 = bigint_nondet_quot!(ctx, bigint_sub!(x475, x479, 8), x5, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x480, x5, 13), x479, 13), x475, 13),
        73156,
        4,
    )?;
    let x481: BytePoly_8 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x477, x477, 8), x5, 8), x5, 8),
            x443,
            8
        ),
        x443,
        8
    );
    let x482: BytePoly_9 = bigint_nondet_quot!(ctx, x481, x5, 9);
    let x483: BytePoly_4 = bigint_nondet_rem!(ctx, x481, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x482, x5, 13), x483, 13), x481, 13),
        73156,
        4,
    )?;
    let x484: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x19, bigint_mul!(x477, x483, 8), 8), x5, 8),
            x446,
            8
        ),
        bigint_mul!(x477, x443, 8),
        8
    );
    let x485: BytePoly_9 = bigint_nondet_quot!(ctx, x484, x5, 9);
    let x486: BytePoly_4 = bigint_nondet_rem!(ctx, x484, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x485, x5, 13), x486, 13), x484, 13),
        73156,
        4,
    )?;
    let x487: BytePoly_1 = bigint_nondet_rem!(ctx, x448, x1, 1);
    let x488: BytePoly_4 = bigint_nondet_quot!(ctx, x448, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x488, x1, 5), x487, 5), x448, 5),
        32515,
        2,
    )?;
    let x489: BytePoly_1 = bigint_sub!(x2, x487, 1);
    eqz(ctx, &bigint_mul!(x487, x489, 2), 8131, 2)?;
    let x490: BytePoly_4 = bigint_add!(bigint_sub!(x486, x472, 4), x5, 4);
    let x491: BytePoly_4 = bigint_add!(bigint_sub!(x483, x470, 4), x5, 4);
    let x492: BytePoly_4 = bigint_nondet_inv!(ctx, x491, x5, 4);
    let x493: BytePoly_8 = bigint_mul!(x491, x492, 8);
    let x494: BytePoly_9 = bigint_nondet_quot!(ctx, x493, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x493, bigint_mul!(x494, x5, 13), 13), x0, 13),
        73156,
        4,
    )?;
    let x495: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x490, x492, 8), x5, 4);
    let x496: BytePoly_8 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x495, x491, 8), x490, 8), x5, 8),
        x5,
        8
    );
    let x497: BytePoly_9 = bigint_nondet_quot!(ctx, x496, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x496, bigint_mul!(x497, x5, 13), 13),
        73156,
        4,
    )?;
    let x498: BytePoly_8 = bigint_mul!(x495, x495, 8);
    let x499: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x498, x470, 8), x5, 8), x483, 8),
        x5,
        8
    );
    let x500: BytePoly_9 = bigint_nondet_quot!(ctx, x499, x5, 9);
    let x501: BytePoly_4 = bigint_nondet_rem!(ctx, x499, x5, 4);
    let x502: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x5,
                    bigint_add!(
                        bigint_mul!(x495, x501, 8),
                        bigint_add!(bigint_sub!(x472, bigint_mul!(x495, x470, 8), 8), x5, 8),
                        8
                    ),
                    8
                ),
                x5,
                8
            ),
            x5,
            8
        ),
        x19,
        8
    );
    let x503: BytePoly_9 = bigint_nondet_quot!(ctx, x502, x5, 9);
    let x504: BytePoly_4 = bigint_nondet_rem!(ctx, x502, x5, 4);
    let x505: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x498, bigint_mul!(x500, x5, 13), 13), x470, 13),
                    x483,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x501,
        13
    );
    eqz(ctx, &x505, 73156, 4)?;
    let x506: BytePoly_13 = bigint_sub!(
        bigint_add!(bigint_mul!(x503, x5, 13), x504, 13),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x495, bigint_sub!(x470, x501, 4), 8), x472, 8),
                    x5,
                    8
                ),
                x5,
                8
            ),
            x19,
            8
        ),
        13
    );
    eqz(ctx, &x506, 73156, 4)?;
    let x507: BytePoly_5 = bigint_add!(bigint_mul!(x501, x487, 5), bigint_mul!(x470, x489, 5), 5);
    let x508: BytePoly_5 = bigint_add!(bigint_mul!(x504, x487, 5), bigint_mul!(x472, x489, 5), 5);
    let x509: BytePoly_6 = bigint_nondet_quot!(ctx, x507, x5, 6);
    let x510: BytePoly_4 = bigint_nondet_rem!(ctx, x507, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x509, x5, 10), x510, 10), x507, 10),
        48771,
        4,
    )?;
    let x511: BytePoly_6 = bigint_nondet_quot!(ctx, x508, x5, 6);
    let x512: BytePoly_4 = bigint_nondet_rem!(ctx, x508, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x511, x5, 10), x512, 10), x508, 10),
        48771,
        4,
    )?;
    let x513: BytePoly_8 = bigint_mul!(x483, x483, 8);
    let x514: BytePoly_8 = bigint_add!(bigint_add!(bigint_add!(x513, x513, 8), x513, 8), x4, 8);
    let x515: BytePoly_8 = bigint_add!(x74, x514, 8);
    let x516: BytePoly_4 = bigint_nondet_inv!(ctx, bigint_add!(x486, x486, 4), x5, 4);
    let x517: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x514, x516, 12), x5, 4);
    let x518: BytePoly_8 = bigint_mul!(x486, x517, 8);
    let x519: BytePoly_8 = bigint_add!(x518, x518, 8);
    let x520: BytePoly_9 = bigint_nondet_quot!(ctx, bigint_sub!(x515, x519, 8), x5, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x520, x5, 13), x519, 13), x515, 13),
        73156,
        4,
    )?;
    let x521: BytePoly_8 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x517, x517, 8), x5, 8), x5, 8),
            x483,
            8
        ),
        x483,
        8
    );
    let x522: BytePoly_9 = bigint_nondet_quot!(ctx, x521, x5, 9);
    let x523: BytePoly_4 = bigint_nondet_rem!(ctx, x521, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x522, x5, 13), x523, 13), x521, 13),
        73156,
        4,
    )?;
    let x524: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x19, bigint_mul!(x517, x523, 8), 8), x5, 8),
            x486,
            8
        ),
        bigint_mul!(x517, x483, 8),
        8
    );
    let x525: BytePoly_9 = bigint_nondet_quot!(ctx, x524, x5, 9);
    let x526: BytePoly_4 = bigint_nondet_rem!(ctx, x524, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x525, x5, 13), x526, 13), x524, 13),
        73156,
        4,
    )?;
    let x527: BytePoly_1 = bigint_nondet_rem!(ctx, x488, x1, 1);
    let x528: BytePoly_4 = bigint_nondet_quot!(ctx, x488, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x528, x1, 5), x527, 5), x488, 5),
        32515,
        2,
    )?;
    let x529: BytePoly_1 = bigint_sub!(x2, x527, 1);
    eqz(ctx, &bigint_mul!(x527, x529, 2), 8131, 2)?;
    let x530: BytePoly_4 = bigint_add!(bigint_sub!(x526, x512, 4), x5, 4);
    let x531: BytePoly_4 = bigint_add!(bigint_sub!(x523, x510, 4), x5, 4);
    let x532: BytePoly_4 = bigint_nondet_inv!(ctx, x531, x5, 4);
    let x533: BytePoly_8 = bigint_mul!(x531, x532, 8);
    let x534: BytePoly_9 = bigint_nondet_quot!(ctx, x533, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x533, bigint_mul!(x534, x5, 13), 13), x0, 13),
        73156,
        4,
    )?;
    let x535: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x530, x532, 8), x5, 4);
    let x536: BytePoly_8 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x535, x531, 8), x530, 8), x5, 8),
        x5,
        8
    );
    let x537: BytePoly_9 = bigint_nondet_quot!(ctx, x536, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x536, bigint_mul!(x537, x5, 13), 13),
        73156,
        4,
    )?;
    let x538: BytePoly_8 = bigint_mul!(x535, x535, 8);
    let x539: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x538, x510, 8), x5, 8), x523, 8),
        x5,
        8
    );
    let x540: BytePoly_9 = bigint_nondet_quot!(ctx, x539, x5, 9);
    let x541: BytePoly_4 = bigint_nondet_rem!(ctx, x539, x5, 4);
    let x542: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x5,
                    bigint_add!(
                        bigint_mul!(x535, x541, 8),
                        bigint_add!(bigint_sub!(x512, bigint_mul!(x535, x510, 8), 8), x5, 8),
                        8
                    ),
                    8
                ),
                x5,
                8
            ),
            x5,
            8
        ),
        x19,
        8
    );
    let x543: BytePoly_9 = bigint_nondet_quot!(ctx, x542, x5, 9);
    let x544: BytePoly_4 = bigint_nondet_rem!(ctx, x542, x5, 4);
    let x545: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x538, bigint_mul!(x540, x5, 13), 13), x510, 13),
                    x523,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x541,
        13
    );
    eqz(ctx, &x545, 73156, 4)?;
    let x546: BytePoly_13 = bigint_sub!(
        bigint_add!(bigint_mul!(x543, x5, 13), x544, 13),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x535, bigint_sub!(x510, x541, 4), 8), x512, 8),
                    x5,
                    8
                ),
                x5,
                8
            ),
            x19,
            8
        ),
        13
    );
    eqz(ctx, &x546, 73156, 4)?;
    let x547: BytePoly_5 = bigint_add!(bigint_mul!(x541, x527, 5), bigint_mul!(x510, x529, 5), 5);
    let x548: BytePoly_5 = bigint_add!(bigint_mul!(x544, x527, 5), bigint_mul!(x512, x529, 5), 5);
    let x549: BytePoly_6 = bigint_nondet_quot!(ctx, x547, x5, 6);
    let x550: BytePoly_4 = bigint_nondet_rem!(ctx, x547, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x549, x5, 10), x550, 10), x547, 10),
        48771,
        4,
    )?;
    let x551: BytePoly_6 = bigint_nondet_quot!(ctx, x548, x5, 6);
    let x552: BytePoly_4 = bigint_nondet_rem!(ctx, x548, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x551, x5, 10), x552, 10), x548, 10),
        48771,
        4,
    )?;
    let x553: BytePoly_8 = bigint_mul!(x523, x523, 8);
    let x554: BytePoly_8 = bigint_add!(bigint_add!(bigint_add!(x553, x553, 8), x553, 8), x4, 8);
    let x555: BytePoly_8 = bigint_add!(x74, x554, 8);
    let x556: BytePoly_4 = bigint_nondet_inv!(ctx, bigint_add!(x526, x526, 4), x5, 4);
    let x557: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x554, x556, 12), x5, 4);
    let x558: BytePoly_8 = bigint_mul!(x526, x557, 8);
    let x559: BytePoly_8 = bigint_add!(x558, x558, 8);
    let x560: BytePoly_9 = bigint_nondet_quot!(ctx, bigint_sub!(x555, x559, 8), x5, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x560, x5, 13), x559, 13), x555, 13),
        73156,
        4,
    )?;
    let x561: BytePoly_8 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x557, x557, 8), x5, 8), x5, 8),
            x523,
            8
        ),
        x523,
        8
    );
    let x562: BytePoly_9 = bigint_nondet_quot!(ctx, x561, x5, 9);
    let x563: BytePoly_4 = bigint_nondet_rem!(ctx, x561, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x562, x5, 13), x563, 13), x561, 13),
        73156,
        4,
    )?;
    let x564: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x19, bigint_mul!(x557, x563, 8), 8), x5, 8),
            x526,
            8
        ),
        bigint_mul!(x557, x523, 8),
        8
    );
    let x565: BytePoly_9 = bigint_nondet_quot!(ctx, x564, x5, 9);
    let x566: BytePoly_4 = bigint_nondet_rem!(ctx, x564, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x565, x5, 13), x566, 13), x564, 13),
        73156,
        4,
    )?;
    let x567: BytePoly_1 = bigint_nondet_rem!(ctx, x528, x1, 1);
    let x568: BytePoly_4 = bigint_nondet_quot!(ctx, x528, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x568, x1, 5), x567, 5), x528, 5),
        32515,
        2,
    )?;
    let x569: BytePoly_1 = bigint_sub!(x2, x567, 1);
    eqz(ctx, &bigint_mul!(x567, x569, 2), 8131, 2)?;
    let x570: BytePoly_4 = bigint_add!(bigint_sub!(x566, x552, 4), x5, 4);
    let x571: BytePoly_4 = bigint_add!(bigint_sub!(x563, x550, 4), x5, 4);
    let x572: BytePoly_4 = bigint_nondet_inv!(ctx, x571, x5, 4);
    let x573: BytePoly_8 = bigint_mul!(x571, x572, 8);
    let x574: BytePoly_9 = bigint_nondet_quot!(ctx, x573, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x573, bigint_mul!(x574, x5, 13), 13), x0, 13),
        73156,
        4,
    )?;
    let x575: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x570, x572, 8), x5, 4);
    let x576: BytePoly_8 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x575, x571, 8), x570, 8), x5, 8),
        x5,
        8
    );
    let x577: BytePoly_9 = bigint_nondet_quot!(ctx, x576, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x576, bigint_mul!(x577, x5, 13), 13),
        73156,
        4,
    )?;
    let x578: BytePoly_8 = bigint_mul!(x575, x575, 8);
    let x579: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x578, x550, 8), x5, 8), x563, 8),
        x5,
        8
    );
    let x580: BytePoly_9 = bigint_nondet_quot!(ctx, x579, x5, 9);
    let x581: BytePoly_4 = bigint_nondet_rem!(ctx, x579, x5, 4);
    let x582: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x5,
                    bigint_add!(
                        bigint_mul!(x575, x581, 8),
                        bigint_add!(bigint_sub!(x552, bigint_mul!(x575, x550, 8), 8), x5, 8),
                        8
                    ),
                    8
                ),
                x5,
                8
            ),
            x5,
            8
        ),
        x19,
        8
    );
    let x583: BytePoly_9 = bigint_nondet_quot!(ctx, x582, x5, 9);
    let x584: BytePoly_4 = bigint_nondet_rem!(ctx, x582, x5, 4);
    let x585: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x578, bigint_mul!(x580, x5, 13), 13), x550, 13),
                    x563,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x581,
        13
    );
    eqz(ctx, &x585, 73156, 4)?;
    let x586: BytePoly_13 = bigint_sub!(
        bigint_add!(bigint_mul!(x583, x5, 13), x584, 13),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x575, bigint_sub!(x550, x581, 4), 8), x552, 8),
                    x5,
                    8
                ),
                x5,
                8
            ),
            x19,
            8
        ),
        13
    );
    eqz(ctx, &x586, 73156, 4)?;
    let x587: BytePoly_5 = bigint_add!(bigint_mul!(x581, x567, 5), bigint_mul!(x550, x569, 5), 5);
    let x588: BytePoly_5 = bigint_add!(bigint_mul!(x584, x567, 5), bigint_mul!(x552, x569, 5), 5);
    let x589: BytePoly_6 = bigint_nondet_quot!(ctx, x587, x5, 6);
    let x590: BytePoly_4 = bigint_nondet_rem!(ctx, x587, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x589, x5, 10), x590, 10), x587, 10),
        48771,
        4,
    )?;
    let x591: BytePoly_6 = bigint_nondet_quot!(ctx, x588, x5, 6);
    let x592: BytePoly_4 = bigint_nondet_rem!(ctx, x588, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x591, x5, 10), x592, 10), x588, 10),
        48771,
        4,
    )?;
    let x593: BytePoly_8 = bigint_mul!(x563, x563, 8);
    let x594: BytePoly_8 = bigint_add!(bigint_add!(bigint_add!(x593, x593, 8), x593, 8), x4, 8);
    let x595: BytePoly_8 = bigint_add!(x74, x594, 8);
    let x596: BytePoly_4 = bigint_nondet_inv!(ctx, bigint_add!(x566, x566, 4), x5, 4);
    let x597: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x594, x596, 12), x5, 4);
    let x598: BytePoly_8 = bigint_mul!(x566, x597, 8);
    let x599: BytePoly_8 = bigint_add!(x598, x598, 8);
    let x600: BytePoly_9 = bigint_nondet_quot!(ctx, bigint_sub!(x595, x599, 8), x5, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x600, x5, 13), x599, 13), x595, 13),
        73156,
        4,
    )?;
    let x601: BytePoly_8 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x597, x597, 8), x5, 8), x5, 8),
            x563,
            8
        ),
        x563,
        8
    );
    let x602: BytePoly_9 = bigint_nondet_quot!(ctx, x601, x5, 9);
    let x603: BytePoly_4 = bigint_nondet_rem!(ctx, x601, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x602, x5, 13), x603, 13), x601, 13),
        73156,
        4,
    )?;
    let x604: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x19, bigint_mul!(x597, x603, 8), 8), x5, 8),
            x566,
            8
        ),
        bigint_mul!(x597, x563, 8),
        8
    );
    let x605: BytePoly_9 = bigint_nondet_quot!(ctx, x604, x5, 9);
    let x606: BytePoly_4 = bigint_nondet_rem!(ctx, x604, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x605, x5, 13), x606, 13), x604, 13),
        73156,
        4,
    )?;
    let x607: BytePoly_1 = bigint_nondet_rem!(ctx, x568, x1, 1);
    let x608: BytePoly_4 = bigint_nondet_quot!(ctx, x568, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x608, x1, 5), x607, 5), x568, 5),
        32515,
        2,
    )?;
    let x609: BytePoly_1 = bigint_sub!(x2, x607, 1);
    eqz(ctx, &bigint_mul!(x607, x609, 2), 8131, 2)?;
    let x610: BytePoly_4 = bigint_add!(bigint_sub!(x606, x592, 4), x5, 4);
    let x611: BytePoly_4 = bigint_add!(bigint_sub!(x603, x590, 4), x5, 4);
    let x612: BytePoly_4 = bigint_nondet_inv!(ctx, x611, x5, 4);
    let x613: BytePoly_8 = bigint_mul!(x611, x612, 8);
    let x614: BytePoly_9 = bigint_nondet_quot!(ctx, x613, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x613, bigint_mul!(x614, x5, 13), 13), x0, 13),
        73156,
        4,
    )?;
    let x615: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x610, x612, 8), x5, 4);
    let x616: BytePoly_8 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x615, x611, 8), x610, 8), x5, 8),
        x5,
        8
    );
    let x617: BytePoly_9 = bigint_nondet_quot!(ctx, x616, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x616, bigint_mul!(x617, x5, 13), 13),
        73156,
        4,
    )?;
    let x618: BytePoly_8 = bigint_mul!(x615, x615, 8);
    let x619: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x618, x590, 8), x5, 8), x603, 8),
        x5,
        8
    );
    let x620: BytePoly_9 = bigint_nondet_quot!(ctx, x619, x5, 9);
    let x621: BytePoly_4 = bigint_nondet_rem!(ctx, x619, x5, 4);
    let x622: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x5,
                    bigint_add!(
                        bigint_mul!(x615, x621, 8),
                        bigint_add!(bigint_sub!(x592, bigint_mul!(x615, x590, 8), 8), x5, 8),
                        8
                    ),
                    8
                ),
                x5,
                8
            ),
            x5,
            8
        ),
        x19,
        8
    );
    let x623: BytePoly_9 = bigint_nondet_quot!(ctx, x622, x5, 9);
    let x624: BytePoly_4 = bigint_nondet_rem!(ctx, x622, x5, 4);
    let x625: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x618, bigint_mul!(x620, x5, 13), 13), x590, 13),
                    x603,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x621,
        13
    );
    eqz(ctx, &x625, 73156, 4)?;
    let x626: BytePoly_13 = bigint_sub!(
        bigint_add!(bigint_mul!(x623, x5, 13), x624, 13),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x615, bigint_sub!(x590, x621, 4), 8), x592, 8),
                    x5,
                    8
                ),
                x5,
                8
            ),
            x19,
            8
        ),
        13
    );
    eqz(ctx, &x626, 73156, 4)?;
    let x627: BytePoly_5 = bigint_add!(bigint_mul!(x621, x607, 5), bigint_mul!(x590, x609, 5), 5);
    let x628: BytePoly_5 = bigint_add!(bigint_mul!(x624, x607, 5), bigint_mul!(x592, x609, 5), 5);
    let x629: BytePoly_6 = bigint_nondet_quot!(ctx, x627, x5, 6);
    let x630: BytePoly_4 = bigint_nondet_rem!(ctx, x627, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x629, x5, 10), x630, 10), x627, 10),
        48771,
        4,
    )?;
    let x631: BytePoly_6 = bigint_nondet_quot!(ctx, x628, x5, 6);
    let x632: BytePoly_4 = bigint_nondet_rem!(ctx, x628, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x631, x5, 10), x632, 10), x628, 10),
        48771,
        4,
    )?;
    let x633: BytePoly_8 = bigint_mul!(x603, x603, 8);
    let x634: BytePoly_8 = bigint_add!(bigint_add!(bigint_add!(x633, x633, 8), x633, 8), x4, 8);
    let x635: BytePoly_8 = bigint_add!(x74, x634, 8);
    let x636: BytePoly_4 = bigint_nondet_inv!(ctx, bigint_add!(x606, x606, 4), x5, 4);
    let x637: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x634, x636, 12), x5, 4);
    let x638: BytePoly_8 = bigint_mul!(x606, x637, 8);
    let x639: BytePoly_8 = bigint_add!(x638, x638, 8);
    let x640: BytePoly_9 = bigint_nondet_quot!(ctx, bigint_sub!(x635, x639, 8), x5, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x640, x5, 13), x639, 13), x635, 13),
        73156,
        4,
    )?;
    let x641: BytePoly_8 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x637, x637, 8), x5, 8), x5, 8),
            x603,
            8
        ),
        x603,
        8
    );
    let x642: BytePoly_9 = bigint_nondet_quot!(ctx, x641, x5, 9);
    let x643: BytePoly_4 = bigint_nondet_rem!(ctx, x641, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x642, x5, 13), x643, 13), x641, 13),
        73156,
        4,
    )?;
    let x644: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x19, bigint_mul!(x637, x643, 8), 8), x5, 8),
            x606,
            8
        ),
        bigint_mul!(x637, x603, 8),
        8
    );
    let x645: BytePoly_9 = bigint_nondet_quot!(ctx, x644, x5, 9);
    let x646: BytePoly_4 = bigint_nondet_rem!(ctx, x644, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x645, x5, 13), x646, 13), x644, 13),
        73156,
        4,
    )?;
    let x647: BytePoly_1 = bigint_nondet_rem!(ctx, x608, x1, 1);
    let x648: BytePoly_4 = bigint_nondet_quot!(ctx, x608, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x648, x1, 5), x647, 5), x608, 5),
        32515,
        2,
    )?;
    let x649: BytePoly_1 = bigint_sub!(x2, x647, 1);
    eqz(ctx, &bigint_mul!(x647, x649, 2), 8131, 2)?;
    let x650: BytePoly_4 = bigint_add!(bigint_sub!(x646, x632, 4), x5, 4);
    let x651: BytePoly_4 = bigint_add!(bigint_sub!(x643, x630, 4), x5, 4);
    let x652: BytePoly_4 = bigint_nondet_inv!(ctx, x651, x5, 4);
    let x653: BytePoly_8 = bigint_mul!(x651, x652, 8);
    let x654: BytePoly_9 = bigint_nondet_quot!(ctx, x653, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x653, bigint_mul!(x654, x5, 13), 13), x0, 13),
        73156,
        4,
    )?;
    let x655: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x650, x652, 8), x5, 4);
    let x656: BytePoly_8 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x655, x651, 8), x650, 8), x5, 8),
        x5,
        8
    );
    let x657: BytePoly_9 = bigint_nondet_quot!(ctx, x656, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x656, bigint_mul!(x657, x5, 13), 13),
        73156,
        4,
    )?;
    let x658: BytePoly_8 = bigint_mul!(x655, x655, 8);
    let x659: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x658, x630, 8), x5, 8), x643, 8),
        x5,
        8
    );
    let x660: BytePoly_9 = bigint_nondet_quot!(ctx, x659, x5, 9);
    let x661: BytePoly_4 = bigint_nondet_rem!(ctx, x659, x5, 4);
    let x662: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x5,
                    bigint_add!(
                        bigint_mul!(x655, x661, 8),
                        bigint_add!(bigint_sub!(x632, bigint_mul!(x655, x630, 8), 8), x5, 8),
                        8
                    ),
                    8
                ),
                x5,
                8
            ),
            x5,
            8
        ),
        x19,
        8
    );
    let x663: BytePoly_9 = bigint_nondet_quot!(ctx, x662, x5, 9);
    let x664: BytePoly_4 = bigint_nondet_rem!(ctx, x662, x5, 4);
    let x665: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x658, bigint_mul!(x660, x5, 13), 13), x630, 13),
                    x643,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x661,
        13
    );
    eqz(ctx, &x665, 73156, 4)?;
    let x666: BytePoly_13 = bigint_sub!(
        bigint_add!(bigint_mul!(x663, x5, 13), x664, 13),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x655, bigint_sub!(x630, x661, 4), 8), x632, 8),
                    x5,
                    8
                ),
                x5,
                8
            ),
            x19,
            8
        ),
        13
    );
    eqz(ctx, &x666, 73156, 4)?;
    let x667: BytePoly_5 = bigint_add!(bigint_mul!(x661, x647, 5), bigint_mul!(x630, x649, 5), 5);
    let x668: BytePoly_5 = bigint_add!(bigint_mul!(x664, x647, 5), bigint_mul!(x632, x649, 5), 5);
    let x669: BytePoly_6 = bigint_nondet_quot!(ctx, x667, x5, 6);
    let x670: BytePoly_4 = bigint_nondet_rem!(ctx, x667, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x669, x5, 10), x670, 10), x667, 10),
        48771,
        4,
    )?;
    let x671: BytePoly_6 = bigint_nondet_quot!(ctx, x668, x5, 6);
    let x672: BytePoly_4 = bigint_nondet_rem!(ctx, x668, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x671, x5, 10), x672, 10), x668, 10),
        48771,
        4,
    )?;
    let x673: BytePoly_8 = bigint_mul!(x643, x643, 8);
    let x674: BytePoly_8 = bigint_add!(bigint_add!(bigint_add!(x673, x673, 8), x673, 8), x4, 8);
    let x675: BytePoly_8 = bigint_add!(x74, x674, 8);
    let x676: BytePoly_4 = bigint_nondet_inv!(ctx, bigint_add!(x646, x646, 4), x5, 4);
    let x677: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x674, x676, 12), x5, 4);
    let x678: BytePoly_8 = bigint_mul!(x646, x677, 8);
    let x679: BytePoly_8 = bigint_add!(x678, x678, 8);
    let x680: BytePoly_9 = bigint_nondet_quot!(ctx, bigint_sub!(x675, x679, 8), x5, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x680, x5, 13), x679, 13), x675, 13),
        73156,
        4,
    )?;
    let x681: BytePoly_8 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x677, x677, 8), x5, 8), x5, 8),
            x643,
            8
        ),
        x643,
        8
    );
    let x682: BytePoly_9 = bigint_nondet_quot!(ctx, x681, x5, 9);
    let x683: BytePoly_4 = bigint_nondet_rem!(ctx, x681, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x682, x5, 13), x683, 13), x681, 13),
        73156,
        4,
    )?;
    let x684: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x19, bigint_mul!(x677, x683, 8), 8), x5, 8),
            x646,
            8
        ),
        bigint_mul!(x677, x643, 8),
        8
    );
    let x685: BytePoly_9 = bigint_nondet_quot!(ctx, x684, x5, 9);
    let x686: BytePoly_4 = bigint_nondet_rem!(ctx, x684, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x685, x5, 13), x686, 13), x684, 13),
        73156,
        4,
    )?;
    let x687: BytePoly_1 = bigint_nondet_rem!(ctx, x648, x1, 1);
    let x688: BytePoly_4 = bigint_nondet_quot!(ctx, x648, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x688, x1, 5), x687, 5), x648, 5),
        32515,
        2,
    )?;
    let x689: BytePoly_1 = bigint_sub!(x2, x687, 1);
    eqz(ctx, &bigint_mul!(x687, x689, 2), 8131, 2)?;
    let x690: BytePoly_4 = bigint_add!(bigint_sub!(x686, x672, 4), x5, 4);
    let x691: BytePoly_4 = bigint_add!(bigint_sub!(x683, x670, 4), x5, 4);
    let x692: BytePoly_4 = bigint_nondet_inv!(ctx, x691, x5, 4);
    let x693: BytePoly_8 = bigint_mul!(x691, x692, 8);
    let x694: BytePoly_9 = bigint_nondet_quot!(ctx, x693, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x693, bigint_mul!(x694, x5, 13), 13), x0, 13),
        73156,
        4,
    )?;
    let x695: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x690, x692, 8), x5, 4);
    let x696: BytePoly_8 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x695, x691, 8), x690, 8), x5, 8),
        x5,
        8
    );
    let x697: BytePoly_9 = bigint_nondet_quot!(ctx, x696, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x696, bigint_mul!(x697, x5, 13), 13),
        73156,
        4,
    )?;
    let x698: BytePoly_8 = bigint_mul!(x695, x695, 8);
    let x699: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x698, x670, 8), x5, 8), x683, 8),
        x5,
        8
    );
    let x700: BytePoly_9 = bigint_nondet_quot!(ctx, x699, x5, 9);
    let x701: BytePoly_4 = bigint_nondet_rem!(ctx, x699, x5, 4);
    let x702: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x5,
                    bigint_add!(
                        bigint_mul!(x695, x701, 8),
                        bigint_add!(bigint_sub!(x672, bigint_mul!(x695, x670, 8), 8), x5, 8),
                        8
                    ),
                    8
                ),
                x5,
                8
            ),
            x5,
            8
        ),
        x19,
        8
    );
    let x703: BytePoly_9 = bigint_nondet_quot!(ctx, x702, x5, 9);
    let x704: BytePoly_4 = bigint_nondet_rem!(ctx, x702, x5, 4);
    let x705: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x698, bigint_mul!(x700, x5, 13), 13), x670, 13),
                    x683,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x701,
        13
    );
    eqz(ctx, &x705, 73156, 4)?;
    let x706: BytePoly_13 = bigint_sub!(
        bigint_add!(bigint_mul!(x703, x5, 13), x704, 13),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x695, bigint_sub!(x670, x701, 4), 8), x672, 8),
                    x5,
                    8
                ),
                x5,
                8
            ),
            x19,
            8
        ),
        13
    );
    eqz(ctx, &x706, 73156, 4)?;
    let x707: BytePoly_5 = bigint_add!(bigint_mul!(x701, x687, 5), bigint_mul!(x670, x689, 5), 5);
    let x708: BytePoly_5 = bigint_add!(bigint_mul!(x704, x687, 5), bigint_mul!(x672, x689, 5), 5);
    let x709: BytePoly_6 = bigint_nondet_quot!(ctx, x707, x5, 6);
    let x710: BytePoly_4 = bigint_nondet_rem!(ctx, x707, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x709, x5, 10), x710, 10), x707, 10),
        48771,
        4,
    )?;
    let x711: BytePoly_6 = bigint_nondet_quot!(ctx, x708, x5, 6);
    let x712: BytePoly_4 = bigint_nondet_rem!(ctx, x708, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x711, x5, 10), x712, 10), x708, 10),
        48771,
        4,
    )?;
    let x713: BytePoly_8 = bigint_mul!(x683, x683, 8);
    let x714: BytePoly_8 = bigint_add!(bigint_add!(bigint_add!(x713, x713, 8), x713, 8), x4, 8);
    let x715: BytePoly_8 = bigint_add!(x74, x714, 8);
    let x716: BytePoly_4 = bigint_nondet_inv!(ctx, bigint_add!(x686, x686, 4), x5, 4);
    let x717: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x714, x716, 12), x5, 4);
    let x718: BytePoly_8 = bigint_mul!(x686, x717, 8);
    let x719: BytePoly_8 = bigint_add!(x718, x718, 8);
    let x720: BytePoly_9 = bigint_nondet_quot!(ctx, bigint_sub!(x715, x719, 8), x5, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x720, x5, 13), x719, 13), x715, 13),
        73156,
        4,
    )?;
    let x721: BytePoly_8 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x717, x717, 8), x5, 8), x5, 8),
            x683,
            8
        ),
        x683,
        8
    );
    let x722: BytePoly_9 = bigint_nondet_quot!(ctx, x721, x5, 9);
    let x723: BytePoly_4 = bigint_nondet_rem!(ctx, x721, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x722, x5, 13), x723, 13), x721, 13),
        73156,
        4,
    )?;
    let x724: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x19, bigint_mul!(x717, x723, 8), 8), x5, 8),
            x686,
            8
        ),
        bigint_mul!(x717, x683, 8),
        8
    );
    let x725: BytePoly_9 = bigint_nondet_quot!(ctx, x724, x5, 9);
    let x726: BytePoly_4 = bigint_nondet_rem!(ctx, x724, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x725, x5, 13), x726, 13), x724, 13),
        73156,
        4,
    )?;
    let x727: BytePoly_1 = bigint_nondet_rem!(ctx, x688, x1, 1);
    let x728: BytePoly_4 = bigint_nondet_quot!(ctx, x688, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x728, x1, 5), x727, 5), x688, 5),
        32515,
        2,
    )?;
    let x729: BytePoly_1 = bigint_sub!(x2, x727, 1);
    eqz(ctx, &bigint_mul!(x727, x729, 2), 8131, 2)?;
    let x730: BytePoly_4 = bigint_add!(bigint_sub!(x726, x712, 4), x5, 4);
    let x731: BytePoly_4 = bigint_add!(bigint_sub!(x723, x710, 4), x5, 4);
    let x732: BytePoly_4 = bigint_nondet_inv!(ctx, x731, x5, 4);
    let x733: BytePoly_8 = bigint_mul!(x731, x732, 8);
    let x734: BytePoly_9 = bigint_nondet_quot!(ctx, x733, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x733, bigint_mul!(x734, x5, 13), 13), x0, 13),
        73156,
        4,
    )?;
    let x735: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x730, x732, 8), x5, 4);
    let x736: BytePoly_8 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x735, x731, 8), x730, 8), x5, 8),
        x5,
        8
    );
    let x737: BytePoly_9 = bigint_nondet_quot!(ctx, x736, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x736, bigint_mul!(x737, x5, 13), 13),
        73156,
        4,
    )?;
    let x738: BytePoly_8 = bigint_mul!(x735, x735, 8);
    let x739: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x738, x710, 8), x5, 8), x723, 8),
        x5,
        8
    );
    let x740: BytePoly_9 = bigint_nondet_quot!(ctx, x739, x5, 9);
    let x741: BytePoly_4 = bigint_nondet_rem!(ctx, x739, x5, 4);
    let x742: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x5,
                    bigint_add!(
                        bigint_mul!(x735, x741, 8),
                        bigint_add!(bigint_sub!(x712, bigint_mul!(x735, x710, 8), 8), x5, 8),
                        8
                    ),
                    8
                ),
                x5,
                8
            ),
            x5,
            8
        ),
        x19,
        8
    );
    let x743: BytePoly_9 = bigint_nondet_quot!(ctx, x742, x5, 9);
    let x744: BytePoly_4 = bigint_nondet_rem!(ctx, x742, x5, 4);
    let x745: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x738, bigint_mul!(x740, x5, 13), 13), x710, 13),
                    x723,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x741,
        13
    );
    eqz(ctx, &x745, 73156, 4)?;
    let x746: BytePoly_13 = bigint_sub!(
        bigint_add!(bigint_mul!(x743, x5, 13), x744, 13),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x735, bigint_sub!(x710, x741, 4), 8), x712, 8),
                    x5,
                    8
                ),
                x5,
                8
            ),
            x19,
            8
        ),
        13
    );
    eqz(ctx, &x746, 73156, 4)?;
    let x747: BytePoly_5 = bigint_add!(bigint_mul!(x741, x727, 5), bigint_mul!(x710, x729, 5), 5);
    let x748: BytePoly_5 = bigint_add!(bigint_mul!(x744, x727, 5), bigint_mul!(x712, x729, 5), 5);
    let x749: BytePoly_6 = bigint_nondet_quot!(ctx, x747, x5, 6);
    let x750: BytePoly_4 = bigint_nondet_rem!(ctx, x747, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x749, x5, 10), x750, 10), x747, 10),
        48771,
        4,
    )?;
    let x751: BytePoly_6 = bigint_nondet_quot!(ctx, x748, x5, 6);
    let x752: BytePoly_4 = bigint_nondet_rem!(ctx, x748, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x751, x5, 10), x752, 10), x748, 10),
        48771,
        4,
    )?;
    let x753: BytePoly_8 = bigint_mul!(x723, x723, 8);
    let x754: BytePoly_8 = bigint_add!(bigint_add!(bigint_add!(x753, x753, 8), x753, 8), x4, 8);
    let x755: BytePoly_8 = bigint_add!(x74, x754, 8);
    let x756: BytePoly_4 = bigint_nondet_inv!(ctx, bigint_add!(x726, x726, 4), x5, 4);
    let x757: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x754, x756, 12), x5, 4);
    let x758: BytePoly_8 = bigint_mul!(x726, x757, 8);
    let x759: BytePoly_8 = bigint_add!(x758, x758, 8);
    let x760: BytePoly_9 = bigint_nondet_quot!(ctx, bigint_sub!(x755, x759, 8), x5, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x760, x5, 13), x759, 13), x755, 13),
        73156,
        4,
    )?;
    let x761: BytePoly_8 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x757, x757, 8), x5, 8), x5, 8),
            x723,
            8
        ),
        x723,
        8
    );
    let x762: BytePoly_9 = bigint_nondet_quot!(ctx, x761, x5, 9);
    let x763: BytePoly_4 = bigint_nondet_rem!(ctx, x761, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x762, x5, 13), x763, 13), x761, 13),
        73156,
        4,
    )?;
    let x764: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x19, bigint_mul!(x757, x763, 8), 8), x5, 8),
            x726,
            8
        ),
        bigint_mul!(x757, x723, 8),
        8
    );
    let x765: BytePoly_9 = bigint_nondet_quot!(ctx, x764, x5, 9);
    let x766: BytePoly_4 = bigint_nondet_rem!(ctx, x764, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x765, x5, 13), x766, 13), x764, 13),
        73156,
        4,
    )?;
    let x767: BytePoly_1 = bigint_nondet_rem!(ctx, x728, x1, 1);
    let x768: BytePoly_4 = bigint_nondet_quot!(ctx, x728, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x768, x1, 5), x767, 5), x728, 5),
        32515,
        2,
    )?;
    let x769: BytePoly_1 = bigint_sub!(x2, x767, 1);
    eqz(ctx, &bigint_mul!(x767, x769, 2), 8131, 2)?;
    let x770: BytePoly_4 = bigint_add!(bigint_sub!(x766, x752, 4), x5, 4);
    let x771: BytePoly_4 = bigint_add!(bigint_sub!(x763, x750, 4), x5, 4);
    let x772: BytePoly_4 = bigint_nondet_inv!(ctx, x771, x5, 4);
    let x773: BytePoly_8 = bigint_mul!(x771, x772, 8);
    let x774: BytePoly_9 = bigint_nondet_quot!(ctx, x773, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x773, bigint_mul!(x774, x5, 13), 13), x0, 13),
        73156,
        4,
    )?;
    let x775: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x770, x772, 8), x5, 4);
    let x776: BytePoly_8 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x775, x771, 8), x770, 8), x5, 8),
        x5,
        8
    );
    let x777: BytePoly_9 = bigint_nondet_quot!(ctx, x776, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x776, bigint_mul!(x777, x5, 13), 13),
        73156,
        4,
    )?;
    let x778: BytePoly_8 = bigint_mul!(x775, x775, 8);
    let x779: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x778, x750, 8), x5, 8), x763, 8),
        x5,
        8
    );
    let x780: BytePoly_9 = bigint_nondet_quot!(ctx, x779, x5, 9);
    let x781: BytePoly_4 = bigint_nondet_rem!(ctx, x779, x5, 4);
    let x782: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x5,
                    bigint_add!(
                        bigint_mul!(x775, x781, 8),
                        bigint_add!(bigint_sub!(x752, bigint_mul!(x775, x750, 8), 8), x5, 8),
                        8
                    ),
                    8
                ),
                x5,
                8
            ),
            x5,
            8
        ),
        x19,
        8
    );
    let x783: BytePoly_9 = bigint_nondet_quot!(ctx, x782, x5, 9);
    let x784: BytePoly_4 = bigint_nondet_rem!(ctx, x782, x5, 4);
    let x785: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x778, bigint_mul!(x780, x5, 13), 13), x750, 13),
                    x763,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x781,
        13
    );
    eqz(ctx, &x785, 73156, 4)?;
    let x786: BytePoly_13 = bigint_sub!(
        bigint_add!(bigint_mul!(x783, x5, 13), x784, 13),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x775, bigint_sub!(x750, x781, 4), 8), x752, 8),
                    x5,
                    8
                ),
                x5,
                8
            ),
            x19,
            8
        ),
        13
    );
    eqz(ctx, &x786, 73156, 4)?;
    let x787: BytePoly_5 = bigint_add!(bigint_mul!(x781, x767, 5), bigint_mul!(x750, x769, 5), 5);
    let x788: BytePoly_5 = bigint_add!(bigint_mul!(x784, x767, 5), bigint_mul!(x752, x769, 5), 5);
    let x789: BytePoly_6 = bigint_nondet_quot!(ctx, x787, x5, 6);
    let x790: BytePoly_4 = bigint_nondet_rem!(ctx, x787, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x789, x5, 10), x790, 10), x787, 10),
        48771,
        4,
    )?;
    let x791: BytePoly_6 = bigint_nondet_quot!(ctx, x788, x5, 6);
    let x792: BytePoly_4 = bigint_nondet_rem!(ctx, x788, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x791, x5, 10), x792, 10), x788, 10),
        48771,
        4,
    )?;
    let x793: BytePoly_8 = bigint_mul!(x763, x763, 8);
    let x794: BytePoly_8 = bigint_add!(bigint_add!(bigint_add!(x793, x793, 8), x793, 8), x4, 8);
    let x795: BytePoly_8 = bigint_add!(x74, x794, 8);
    let x796: BytePoly_4 = bigint_nondet_inv!(ctx, bigint_add!(x766, x766, 4), x5, 4);
    let x797: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x794, x796, 12), x5, 4);
    let x798: BytePoly_8 = bigint_mul!(x766, x797, 8);
    let x799: BytePoly_8 = bigint_add!(x798, x798, 8);
    let x800: BytePoly_9 = bigint_nondet_quot!(ctx, bigint_sub!(x795, x799, 8), x5, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x800, x5, 13), x799, 13), x795, 13),
        73156,
        4,
    )?;
    let x801: BytePoly_8 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x797, x797, 8), x5, 8), x5, 8),
            x763,
            8
        ),
        x763,
        8
    );
    let x802: BytePoly_9 = bigint_nondet_quot!(ctx, x801, x5, 9);
    let x803: BytePoly_4 = bigint_nondet_rem!(ctx, x801, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x802, x5, 13), x803, 13), x801, 13),
        73156,
        4,
    )?;
    let x804: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x19, bigint_mul!(x797, x803, 8), 8), x5, 8),
            x766,
            8
        ),
        bigint_mul!(x797, x763, 8),
        8
    );
    let x805: BytePoly_9 = bigint_nondet_quot!(ctx, x804, x5, 9);
    let x806: BytePoly_4 = bigint_nondet_rem!(ctx, x804, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x805, x5, 13), x806, 13), x804, 13),
        73156,
        4,
    )?;
    let x807: BytePoly_1 = bigint_nondet_rem!(ctx, x768, x1, 1);
    let x808: BytePoly_4 = bigint_nondet_quot!(ctx, x768, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x808, x1, 5), x807, 5), x768, 5),
        32515,
        2,
    )?;
    let x809: BytePoly_1 = bigint_sub!(x2, x807, 1);
    eqz(ctx, &bigint_mul!(x807, x809, 2), 8131, 2)?;
    let x810: BytePoly_4 = bigint_add!(bigint_sub!(x806, x792, 4), x5, 4);
    let x811: BytePoly_4 = bigint_add!(bigint_sub!(x803, x790, 4), x5, 4);
    let x812: BytePoly_4 = bigint_nondet_inv!(ctx, x811, x5, 4);
    let x813: BytePoly_8 = bigint_mul!(x811, x812, 8);
    let x814: BytePoly_9 = bigint_nondet_quot!(ctx, x813, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x813, bigint_mul!(x814, x5, 13), 13), x0, 13),
        73156,
        4,
    )?;
    let x815: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x810, x812, 8), x5, 4);
    let x816: BytePoly_8 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x815, x811, 8), x810, 8), x5, 8),
        x5,
        8
    );
    let x817: BytePoly_9 = bigint_nondet_quot!(ctx, x816, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x816, bigint_mul!(x817, x5, 13), 13),
        73156,
        4,
    )?;
    let x818: BytePoly_8 = bigint_mul!(x815, x815, 8);
    let x819: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x818, x790, 8), x5, 8), x803, 8),
        x5,
        8
    );
    let x820: BytePoly_9 = bigint_nondet_quot!(ctx, x819, x5, 9);
    let x821: BytePoly_4 = bigint_nondet_rem!(ctx, x819, x5, 4);
    let x822: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x5,
                    bigint_add!(
                        bigint_mul!(x815, x821, 8),
                        bigint_add!(bigint_sub!(x792, bigint_mul!(x815, x790, 8), 8), x5, 8),
                        8
                    ),
                    8
                ),
                x5,
                8
            ),
            x5,
            8
        ),
        x19,
        8
    );
    let x823: BytePoly_9 = bigint_nondet_quot!(ctx, x822, x5, 9);
    let x824: BytePoly_4 = bigint_nondet_rem!(ctx, x822, x5, 4);
    let x825: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x818, bigint_mul!(x820, x5, 13), 13), x790, 13),
                    x803,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x821,
        13
    );
    eqz(ctx, &x825, 73156, 4)?;
    let x826: BytePoly_13 = bigint_sub!(
        bigint_add!(bigint_mul!(x823, x5, 13), x824, 13),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x815, bigint_sub!(x790, x821, 4), 8), x792, 8),
                    x5,
                    8
                ),
                x5,
                8
            ),
            x19,
            8
        ),
        13
    );
    eqz(ctx, &x826, 73156, 4)?;
    let x827: BytePoly_5 = bigint_add!(bigint_mul!(x821, x807, 5), bigint_mul!(x790, x809, 5), 5);
    let x828: BytePoly_5 = bigint_add!(bigint_mul!(x824, x807, 5), bigint_mul!(x792, x809, 5), 5);
    let x829: BytePoly_6 = bigint_nondet_quot!(ctx, x827, x5, 6);
    let x830: BytePoly_4 = bigint_nondet_rem!(ctx, x827, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x829, x5, 10), x830, 10), x827, 10),
        48771,
        4,
    )?;
    let x831: BytePoly_6 = bigint_nondet_quot!(ctx, x828, x5, 6);
    let x832: BytePoly_4 = bigint_nondet_rem!(ctx, x828, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x831, x5, 10), x832, 10), x828, 10),
        48771,
        4,
    )?;
    let x833: BytePoly_8 = bigint_mul!(x803, x803, 8);
    let x834: BytePoly_8 = bigint_add!(bigint_add!(bigint_add!(x833, x833, 8), x833, 8), x4, 8);
    let x835: BytePoly_8 = bigint_add!(x74, x834, 8);
    let x836: BytePoly_4 = bigint_nondet_inv!(ctx, bigint_add!(x806, x806, 4), x5, 4);
    let x837: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x834, x836, 12), x5, 4);
    let x838: BytePoly_8 = bigint_mul!(x806, x837, 8);
    let x839: BytePoly_8 = bigint_add!(x838, x838, 8);
    let x840: BytePoly_9 = bigint_nondet_quot!(ctx, bigint_sub!(x835, x839, 8), x5, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x840, x5, 13), x839, 13), x835, 13),
        73156,
        4,
    )?;
    let x841: BytePoly_8 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x837, x837, 8), x5, 8), x5, 8),
            x803,
            8
        ),
        x803,
        8
    );
    let x842: BytePoly_9 = bigint_nondet_quot!(ctx, x841, x5, 9);
    let x843: BytePoly_4 = bigint_nondet_rem!(ctx, x841, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x842, x5, 13), x843, 13), x841, 13),
        73156,
        4,
    )?;
    let x844: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x19, bigint_mul!(x837, x843, 8), 8), x5, 8),
            x806,
            8
        ),
        bigint_mul!(x837, x803, 8),
        8
    );
    let x845: BytePoly_9 = bigint_nondet_quot!(ctx, x844, x5, 9);
    let x846: BytePoly_4 = bigint_nondet_rem!(ctx, x844, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x845, x5, 13), x846, 13), x844, 13),
        73156,
        4,
    )?;
    let x847: BytePoly_1 = bigint_nondet_rem!(ctx, x808, x1, 1);
    let x848: BytePoly_4 = bigint_nondet_quot!(ctx, x808, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x848, x1, 5), x847, 5), x808, 5),
        32515,
        2,
    )?;
    let x849: BytePoly_1 = bigint_sub!(x2, x847, 1);
    eqz(ctx, &bigint_mul!(x847, x849, 2), 8131, 2)?;
    let x850: BytePoly_4 = bigint_add!(bigint_sub!(x846, x832, 4), x5, 4);
    let x851: BytePoly_4 = bigint_add!(bigint_sub!(x843, x830, 4), x5, 4);
    let x852: BytePoly_4 = bigint_nondet_inv!(ctx, x851, x5, 4);
    let x853: BytePoly_8 = bigint_mul!(x851, x852, 8);
    let x854: BytePoly_9 = bigint_nondet_quot!(ctx, x853, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x853, bigint_mul!(x854, x5, 13), 13), x0, 13),
        73156,
        4,
    )?;
    let x855: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x850, x852, 8), x5, 4);
    let x856: BytePoly_8 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x855, x851, 8), x850, 8), x5, 8),
        x5,
        8
    );
    let x857: BytePoly_9 = bigint_nondet_quot!(ctx, x856, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x856, bigint_mul!(x857, x5, 13), 13),
        73156,
        4,
    )?;
    let x858: BytePoly_8 = bigint_mul!(x855, x855, 8);
    let x859: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x858, x830, 8), x5, 8), x843, 8),
        x5,
        8
    );
    let x860: BytePoly_9 = bigint_nondet_quot!(ctx, x859, x5, 9);
    let x861: BytePoly_4 = bigint_nondet_rem!(ctx, x859, x5, 4);
    let x862: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x5,
                    bigint_add!(
                        bigint_mul!(x855, x861, 8),
                        bigint_add!(bigint_sub!(x832, bigint_mul!(x855, x830, 8), 8), x5, 8),
                        8
                    ),
                    8
                ),
                x5,
                8
            ),
            x5,
            8
        ),
        x19,
        8
    );
    let x863: BytePoly_9 = bigint_nondet_quot!(ctx, x862, x5, 9);
    let x864: BytePoly_4 = bigint_nondet_rem!(ctx, x862, x5, 4);
    let x865: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x858, bigint_mul!(x860, x5, 13), 13), x830, 13),
                    x843,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x861,
        13
    );
    eqz(ctx, &x865, 73156, 4)?;
    let x866: BytePoly_13 = bigint_sub!(
        bigint_add!(bigint_mul!(x863, x5, 13), x864, 13),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x855, bigint_sub!(x830, x861, 4), 8), x832, 8),
                    x5,
                    8
                ),
                x5,
                8
            ),
            x19,
            8
        ),
        13
    );
    eqz(ctx, &x866, 73156, 4)?;
    let x867: BytePoly_5 = bigint_add!(bigint_mul!(x861, x847, 5), bigint_mul!(x830, x849, 5), 5);
    let x868: BytePoly_5 = bigint_add!(bigint_mul!(x864, x847, 5), bigint_mul!(x832, x849, 5), 5);
    let x869: BytePoly_6 = bigint_nondet_quot!(ctx, x867, x5, 6);
    let x870: BytePoly_4 = bigint_nondet_rem!(ctx, x867, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x869, x5, 10), x870, 10), x867, 10),
        48771,
        4,
    )?;
    let x871: BytePoly_6 = bigint_nondet_quot!(ctx, x868, x5, 6);
    let x872: BytePoly_4 = bigint_nondet_rem!(ctx, x868, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x871, x5, 10), x872, 10), x868, 10),
        48771,
        4,
    )?;
    let x873: BytePoly_8 = bigint_mul!(x843, x843, 8);
    let x874: BytePoly_8 = bigint_add!(bigint_add!(bigint_add!(x873, x873, 8), x873, 8), x4, 8);
    let x875: BytePoly_8 = bigint_add!(x74, x874, 8);
    let x876: BytePoly_4 = bigint_nondet_inv!(ctx, bigint_add!(x846, x846, 4), x5, 4);
    let x877: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x874, x876, 12), x5, 4);
    let x878: BytePoly_8 = bigint_mul!(x846, x877, 8);
    let x879: BytePoly_8 = bigint_add!(x878, x878, 8);
    let x880: BytePoly_9 = bigint_nondet_quot!(ctx, bigint_sub!(x875, x879, 8), x5, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x880, x5, 13), x879, 13), x875, 13),
        73156,
        4,
    )?;
    let x881: BytePoly_8 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x877, x877, 8), x5, 8), x5, 8),
            x843,
            8
        ),
        x843,
        8
    );
    let x882: BytePoly_9 = bigint_nondet_quot!(ctx, x881, x5, 9);
    let x883: BytePoly_4 = bigint_nondet_rem!(ctx, x881, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x882, x5, 13), x883, 13), x881, 13),
        73156,
        4,
    )?;
    let x884: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x19, bigint_mul!(x877, x883, 8), 8), x5, 8),
            x846,
            8
        ),
        bigint_mul!(x877, x843, 8),
        8
    );
    let x885: BytePoly_9 = bigint_nondet_quot!(ctx, x884, x5, 9);
    let x886: BytePoly_4 = bigint_nondet_rem!(ctx, x884, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x885, x5, 13), x886, 13), x884, 13),
        73156,
        4,
    )?;
    let x887: BytePoly_1 = bigint_nondet_rem!(ctx, x848, x1, 1);
    let x888: BytePoly_4 = bigint_nondet_quot!(ctx, x848, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x888, x1, 5), x887, 5), x848, 5),
        32515,
        2,
    )?;
    let x889: BytePoly_1 = bigint_sub!(x2, x887, 1);
    eqz(ctx, &bigint_mul!(x887, x889, 2), 8131, 2)?;
    let x890: BytePoly_4 = bigint_add!(bigint_sub!(x886, x872, 4), x5, 4);
    let x891: BytePoly_4 = bigint_add!(bigint_sub!(x883, x870, 4), x5, 4);
    let x892: BytePoly_4 = bigint_nondet_inv!(ctx, x891, x5, 4);
    let x893: BytePoly_8 = bigint_mul!(x891, x892, 8);
    let x894: BytePoly_9 = bigint_nondet_quot!(ctx, x893, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x893, bigint_mul!(x894, x5, 13), 13), x0, 13),
        73156,
        4,
    )?;
    let x895: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x890, x892, 8), x5, 4);
    let x896: BytePoly_8 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x895, x891, 8), x890, 8), x5, 8),
        x5,
        8
    );
    let x897: BytePoly_9 = bigint_nondet_quot!(ctx, x896, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x896, bigint_mul!(x897, x5, 13), 13),
        73156,
        4,
    )?;
    let x898: BytePoly_8 = bigint_mul!(x895, x895, 8);
    let x899: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x898, x870, 8), x5, 8), x883, 8),
        x5,
        8
    );
    let x900: BytePoly_9 = bigint_nondet_quot!(ctx, x899, x5, 9);
    let x901: BytePoly_4 = bigint_nondet_rem!(ctx, x899, x5, 4);
    let x902: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x5,
                    bigint_add!(
                        bigint_mul!(x895, x901, 8),
                        bigint_add!(bigint_sub!(x872, bigint_mul!(x895, x870, 8), 8), x5, 8),
                        8
                    ),
                    8
                ),
                x5,
                8
            ),
            x5,
            8
        ),
        x19,
        8
    );
    let x903: BytePoly_9 = bigint_nondet_quot!(ctx, x902, x5, 9);
    let x904: BytePoly_4 = bigint_nondet_rem!(ctx, x902, x5, 4);
    let x905: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x898, bigint_mul!(x900, x5, 13), 13), x870, 13),
                    x883,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x901,
        13
    );
    eqz(ctx, &x905, 73156, 4)?;
    let x906: BytePoly_13 = bigint_sub!(
        bigint_add!(bigint_mul!(x903, x5, 13), x904, 13),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x895, bigint_sub!(x870, x901, 4), 8), x872, 8),
                    x5,
                    8
                ),
                x5,
                8
            ),
            x19,
            8
        ),
        13
    );
    eqz(ctx, &x906, 73156, 4)?;
    let x907: BytePoly_5 = bigint_add!(bigint_mul!(x901, x887, 5), bigint_mul!(x870, x889, 5), 5);
    let x908: BytePoly_5 = bigint_add!(bigint_mul!(x904, x887, 5), bigint_mul!(x872, x889, 5), 5);
    let x909: BytePoly_6 = bigint_nondet_quot!(ctx, x907, x5, 6);
    let x910: BytePoly_4 = bigint_nondet_rem!(ctx, x907, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x909, x5, 10), x910, 10), x907, 10),
        48771,
        4,
    )?;
    let x911: BytePoly_6 = bigint_nondet_quot!(ctx, x908, x5, 6);
    let x912: BytePoly_4 = bigint_nondet_rem!(ctx, x908, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x911, x5, 10), x912, 10), x908, 10),
        48771,
        4,
    )?;
    let x913: BytePoly_8 = bigint_mul!(x883, x883, 8);
    let x914: BytePoly_8 = bigint_add!(bigint_add!(bigint_add!(x913, x913, 8), x913, 8), x4, 8);
    let x915: BytePoly_8 = bigint_add!(x74, x914, 8);
    let x916: BytePoly_4 = bigint_nondet_inv!(ctx, bigint_add!(x886, x886, 4), x5, 4);
    let x917: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x914, x916, 12), x5, 4);
    let x918: BytePoly_8 = bigint_mul!(x886, x917, 8);
    let x919: BytePoly_8 = bigint_add!(x918, x918, 8);
    let x920: BytePoly_9 = bigint_nondet_quot!(ctx, bigint_sub!(x915, x919, 8), x5, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x920, x5, 13), x919, 13), x915, 13),
        73156,
        4,
    )?;
    let x921: BytePoly_8 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x917, x917, 8), x5, 8), x5, 8),
            x883,
            8
        ),
        x883,
        8
    );
    let x922: BytePoly_9 = bigint_nondet_quot!(ctx, x921, x5, 9);
    let x923: BytePoly_4 = bigint_nondet_rem!(ctx, x921, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x922, x5, 13), x923, 13), x921, 13),
        73156,
        4,
    )?;
    let x924: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x19, bigint_mul!(x917, x923, 8), 8), x5, 8),
            x886,
            8
        ),
        bigint_mul!(x917, x883, 8),
        8
    );
    let x925: BytePoly_9 = bigint_nondet_quot!(ctx, x924, x5, 9);
    let x926: BytePoly_4 = bigint_nondet_rem!(ctx, x924, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x925, x5, 13), x926, 13), x924, 13),
        73156,
        4,
    )?;
    let x927: BytePoly_1 = bigint_nondet_rem!(ctx, x888, x1, 1);
    let x928: BytePoly_4 = bigint_nondet_quot!(ctx, x888, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x928, x1, 5), x927, 5), x888, 5),
        32515,
        2,
    )?;
    let x929: BytePoly_1 = bigint_sub!(x2, x927, 1);
    eqz(ctx, &bigint_mul!(x927, x929, 2), 8131, 2)?;
    let x930: BytePoly_4 = bigint_add!(bigint_sub!(x926, x912, 4), x5, 4);
    let x931: BytePoly_4 = bigint_add!(bigint_sub!(x923, x910, 4), x5, 4);
    let x932: BytePoly_4 = bigint_nondet_inv!(ctx, x931, x5, 4);
    let x933: BytePoly_8 = bigint_mul!(x931, x932, 8);
    let x934: BytePoly_9 = bigint_nondet_quot!(ctx, x933, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x933, bigint_mul!(x934, x5, 13), 13), x0, 13),
        73156,
        4,
    )?;
    let x935: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x930, x932, 8), x5, 4);
    let x936: BytePoly_8 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x935, x931, 8), x930, 8), x5, 8),
        x5,
        8
    );
    let x937: BytePoly_9 = bigint_nondet_quot!(ctx, x936, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x936, bigint_mul!(x937, x5, 13), 13),
        73156,
        4,
    )?;
    let x938: BytePoly_8 = bigint_mul!(x935, x935, 8);
    let x939: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x938, x910, 8), x5, 8), x923, 8),
        x5,
        8
    );
    let x940: BytePoly_9 = bigint_nondet_quot!(ctx, x939, x5, 9);
    let x941: BytePoly_4 = bigint_nondet_rem!(ctx, x939, x5, 4);
    let x942: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x5,
                    bigint_add!(
                        bigint_mul!(x935, x941, 8),
                        bigint_add!(bigint_sub!(x912, bigint_mul!(x935, x910, 8), 8), x5, 8),
                        8
                    ),
                    8
                ),
                x5,
                8
            ),
            x5,
            8
        ),
        x19,
        8
    );
    let x943: BytePoly_9 = bigint_nondet_quot!(ctx, x942, x5, 9);
    let x944: BytePoly_4 = bigint_nondet_rem!(ctx, x942, x5, 4);
    let x945: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x938, bigint_mul!(x940, x5, 13), 13), x910, 13),
                    x923,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x941,
        13
    );
    eqz(ctx, &x945, 73156, 4)?;
    let x946: BytePoly_13 = bigint_sub!(
        bigint_add!(bigint_mul!(x943, x5, 13), x944, 13),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x935, bigint_sub!(x910, x941, 4), 8), x912, 8),
                    x5,
                    8
                ),
                x5,
                8
            ),
            x19,
            8
        ),
        13
    );
    eqz(ctx, &x946, 73156, 4)?;
    let x947: BytePoly_5 = bigint_add!(bigint_mul!(x941, x927, 5), bigint_mul!(x910, x929, 5), 5);
    let x948: BytePoly_5 = bigint_add!(bigint_mul!(x944, x927, 5), bigint_mul!(x912, x929, 5), 5);
    let x949: BytePoly_6 = bigint_nondet_quot!(ctx, x947, x5, 6);
    let x950: BytePoly_4 = bigint_nondet_rem!(ctx, x947, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x949, x5, 10), x950, 10), x947, 10),
        48771,
        4,
    )?;
    let x951: BytePoly_6 = bigint_nondet_quot!(ctx, x948, x5, 6);
    let x952: BytePoly_4 = bigint_nondet_rem!(ctx, x948, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x951, x5, 10), x952, 10), x948, 10),
        48771,
        4,
    )?;
    let x953: BytePoly_8 = bigint_mul!(x923, x923, 8);
    let x954: BytePoly_8 = bigint_add!(bigint_add!(bigint_add!(x953, x953, 8), x953, 8), x4, 8);
    let x955: BytePoly_8 = bigint_add!(x74, x954, 8);
    let x956: BytePoly_4 = bigint_nondet_inv!(ctx, bigint_add!(x926, x926, 4), x5, 4);
    let x957: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x954, x956, 12), x5, 4);
    let x958: BytePoly_8 = bigint_mul!(x926, x957, 8);
    let x959: BytePoly_8 = bigint_add!(x958, x958, 8);
    let x960: BytePoly_9 = bigint_nondet_quot!(ctx, bigint_sub!(x955, x959, 8), x5, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x960, x5, 13), x959, 13), x955, 13),
        73156,
        4,
    )?;
    let x961: BytePoly_8 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x957, x957, 8), x5, 8), x5, 8),
            x923,
            8
        ),
        x923,
        8
    );
    let x962: BytePoly_9 = bigint_nondet_quot!(ctx, x961, x5, 9);
    let x963: BytePoly_4 = bigint_nondet_rem!(ctx, x961, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x962, x5, 13), x963, 13), x961, 13),
        73156,
        4,
    )?;
    let x964: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x19, bigint_mul!(x957, x963, 8), 8), x5, 8),
            x926,
            8
        ),
        bigint_mul!(x957, x923, 8),
        8
    );
    let x965: BytePoly_9 = bigint_nondet_quot!(ctx, x964, x5, 9);
    let x966: BytePoly_4 = bigint_nondet_rem!(ctx, x964, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x965, x5, 13), x966, 13), x964, 13),
        73156,
        4,
    )?;
    let x967: BytePoly_1 = bigint_nondet_rem!(ctx, x928, x1, 1);
    let x968: BytePoly_4 = bigint_nondet_quot!(ctx, x928, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x968, x1, 5), x967, 5), x928, 5),
        32515,
        2,
    )?;
    let x969: BytePoly_1 = bigint_sub!(x2, x967, 1);
    eqz(ctx, &bigint_mul!(x967, x969, 2), 8131, 2)?;
    let x970: BytePoly_4 = bigint_add!(bigint_sub!(x966, x952, 4), x5, 4);
    let x971: BytePoly_4 = bigint_add!(bigint_sub!(x963, x950, 4), x5, 4);
    let x972: BytePoly_4 = bigint_nondet_inv!(ctx, x971, x5, 4);
    let x973: BytePoly_8 = bigint_mul!(x971, x972, 8);
    let x974: BytePoly_9 = bigint_nondet_quot!(ctx, x973, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x973, bigint_mul!(x974, x5, 13), 13), x0, 13),
        73156,
        4,
    )?;
    let x975: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x970, x972, 8), x5, 4);
    let x976: BytePoly_8 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x975, x971, 8), x970, 8), x5, 8),
        x5,
        8
    );
    let x977: BytePoly_9 = bigint_nondet_quot!(ctx, x976, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x976, bigint_mul!(x977, x5, 13), 13),
        73156,
        4,
    )?;
    let x978: BytePoly_8 = bigint_mul!(x975, x975, 8);
    let x979: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x978, x950, 8), x5, 8), x963, 8),
        x5,
        8
    );
    let x980: BytePoly_9 = bigint_nondet_quot!(ctx, x979, x5, 9);
    let x981: BytePoly_4 = bigint_nondet_rem!(ctx, x979, x5, 4);
    let x982: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x5,
                    bigint_add!(
                        bigint_mul!(x975, x981, 8),
                        bigint_add!(bigint_sub!(x952, bigint_mul!(x975, x950, 8), 8), x5, 8),
                        8
                    ),
                    8
                ),
                x5,
                8
            ),
            x5,
            8
        ),
        x19,
        8
    );
    let x983: BytePoly_9 = bigint_nondet_quot!(ctx, x982, x5, 9);
    let x984: BytePoly_4 = bigint_nondet_rem!(ctx, x982, x5, 4);
    let x985: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x978, bigint_mul!(x980, x5, 13), 13), x950, 13),
                    x963,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x981,
        13
    );
    eqz(ctx, &x985, 73156, 4)?;
    let x986: BytePoly_13 = bigint_sub!(
        bigint_add!(bigint_mul!(x983, x5, 13), x984, 13),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x975, bigint_sub!(x950, x981, 4), 8), x952, 8),
                    x5,
                    8
                ),
                x5,
                8
            ),
            x19,
            8
        ),
        13
    );
    eqz(ctx, &x986, 73156, 4)?;
    let x987: BytePoly_5 = bigint_add!(bigint_mul!(x981, x967, 5), bigint_mul!(x950, x969, 5), 5);
    let x988: BytePoly_5 = bigint_add!(bigint_mul!(x984, x967, 5), bigint_mul!(x952, x969, 5), 5);
    let x989: BytePoly_6 = bigint_nondet_quot!(ctx, x987, x5, 6);
    let x990: BytePoly_4 = bigint_nondet_rem!(ctx, x987, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x989, x5, 10), x990, 10), x987, 10),
        48771,
        4,
    )?;
    let x991: BytePoly_6 = bigint_nondet_quot!(ctx, x988, x5, 6);
    let x992: BytePoly_4 = bigint_nondet_rem!(ctx, x988, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x991, x5, 10), x992, 10), x988, 10),
        48771,
        4,
    )?;
    let x993: BytePoly_8 = bigint_mul!(x963, x963, 8);
    let x994: BytePoly_8 = bigint_add!(bigint_add!(bigint_add!(x993, x993, 8), x993, 8), x4, 8);
    let x995: BytePoly_8 = bigint_add!(x74, x994, 8);
    let x996: BytePoly_4 = bigint_nondet_inv!(ctx, bigint_add!(x966, x966, 4), x5, 4);
    let x997: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x994, x996, 12), x5, 4);
    let x998: BytePoly_8 = bigint_mul!(x966, x997, 8);
    let x999: BytePoly_8 = bigint_add!(x998, x998, 8);
    let x1000: BytePoly_9 = bigint_nondet_quot!(ctx, bigint_sub!(x995, x999, 8), x5, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1000, x5, 13), x999, 13), x995, 13),
        73156,
        4,
    )?;
    let x1001: BytePoly_8 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x997, x997, 8), x5, 8), x5, 8),
            x963,
            8
        ),
        x963,
        8
    );
    let x1002: BytePoly_9 = bigint_nondet_quot!(ctx, x1001, x5, 9);
    let x1003: BytePoly_4 = bigint_nondet_rem!(ctx, x1001, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1002, x5, 13), x1003, 13),
            x1001,
            13
        ),
        73156,
        4,
    )?;
    let x1004: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x19, bigint_mul!(x997, x1003, 8), 8), x5, 8),
            x966,
            8
        ),
        bigint_mul!(x997, x963, 8),
        8
    );
    let x1005: BytePoly_9 = bigint_nondet_quot!(ctx, x1004, x5, 9);
    let x1006: BytePoly_4 = bigint_nondet_rem!(ctx, x1004, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1005, x5, 13), x1006, 13),
            x1004,
            13
        ),
        73156,
        4,
    )?;
    let x1007: BytePoly_1 = bigint_nondet_rem!(ctx, x968, x1, 1);
    let x1008: BytePoly_4 = bigint_nondet_quot!(ctx, x968, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1008, x1, 5), x1007, 5), x968, 5),
        32515,
        2,
    )?;
    let x1009: BytePoly_1 = bigint_sub!(x2, x1007, 1);
    eqz(ctx, &bigint_mul!(x1007, x1009, 2), 8131, 2)?;
    let x1010: BytePoly_4 = bigint_add!(bigint_sub!(x1006, x992, 4), x5, 4);
    let x1011: BytePoly_4 = bigint_add!(bigint_sub!(x1003, x990, 4), x5, 4);
    let x1012: BytePoly_4 = bigint_nondet_inv!(ctx, x1011, x5, 4);
    let x1013: BytePoly_8 = bigint_mul!(x1011, x1012, 8);
    let x1014: BytePoly_9 = bigint_nondet_quot!(ctx, x1013, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1013, bigint_mul!(x1014, x5, 13), 13), x0, 13),
        73156,
        4,
    )?;
    let x1015: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x1010, x1012, 8), x5, 4);
    let x1016: BytePoly_8 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x1015, x1011, 8), x1010, 8), x5, 8),
        x5,
        8
    );
    let x1017: BytePoly_9 = bigint_nondet_quot!(ctx, x1016, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x1016, bigint_mul!(x1017, x5, 13), 13),
        73156,
        4,
    )?;
    let x1018: BytePoly_8 = bigint_mul!(x1015, x1015, 8);
    let x1019: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1018, x990, 8), x5, 8), x1003, 8),
        x5,
        8
    );
    let x1020: BytePoly_9 = bigint_nondet_quot!(ctx, x1019, x5, 9);
    let x1021: BytePoly_4 = bigint_nondet_rem!(ctx, x1019, x5, 4);
    let x1022: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x5,
                    bigint_add!(
                        bigint_mul!(x1015, x1021, 8),
                        bigint_add!(bigint_sub!(x992, bigint_mul!(x1015, x990, 8), 8), x5, 8),
                        8
                    ),
                    8
                ),
                x5,
                8
            ),
            x5,
            8
        ),
        x19,
        8
    );
    let x1023: BytePoly_9 = bigint_nondet_quot!(ctx, x1022, x5, 9);
    let x1024: BytePoly_4 = bigint_nondet_rem!(ctx, x1022, x5, 4);
    let x1025: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x1018, bigint_mul!(x1020, x5, 13), 13), x990, 13),
                    x1003,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x1021,
        13
    );
    eqz(ctx, &x1025, 73156, 4)?;
    let x1026: BytePoly_13 = bigint_sub!(
        bigint_add!(bigint_mul!(x1023, x5, 13), x1024, 13),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x1015, bigint_sub!(x990, x1021, 4), 8), x992, 8),
                    x5,
                    8
                ),
                x5,
                8
            ),
            x19,
            8
        ),
        13
    );
    eqz(ctx, &x1026, 73156, 4)?;
    let x1027: BytePoly_5 =
        bigint_add!(bigint_mul!(x1021, x1007, 5), bigint_mul!(x990, x1009, 5), 5);
    let x1028: BytePoly_5 =
        bigint_add!(bigint_mul!(x1024, x1007, 5), bigint_mul!(x992, x1009, 5), 5);
    let x1029: BytePoly_6 = bigint_nondet_quot!(ctx, x1027, x5, 6);
    let x1030: BytePoly_4 = bigint_nondet_rem!(ctx, x1027, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1029, x5, 10), x1030, 10),
            x1027,
            10
        ),
        48771,
        4,
    )?;
    let x1031: BytePoly_6 = bigint_nondet_quot!(ctx, x1028, x5, 6);
    let x1032: BytePoly_4 = bigint_nondet_rem!(ctx, x1028, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1031, x5, 10), x1032, 10),
            x1028,
            10
        ),
        48771,
        4,
    )?;
    let x1033: BytePoly_8 = bigint_mul!(x1003, x1003, 8);
    let x1034: BytePoly_8 = bigint_add!(bigint_add!(bigint_add!(x1033, x1033, 8), x1033, 8), x4, 8);
    let x1035: BytePoly_8 = bigint_add!(x74, x1034, 8);
    let x1036: BytePoly_4 = bigint_nondet_inv!(ctx, bigint_add!(x1006, x1006, 4), x5, 4);
    let x1037: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x1034, x1036, 12), x5, 4);
    let x1038: BytePoly_8 = bigint_mul!(x1006, x1037, 8);
    let x1039: BytePoly_8 = bigint_add!(x1038, x1038, 8);
    let x1040: BytePoly_9 = bigint_nondet_quot!(ctx, bigint_sub!(x1035, x1039, 8), x5, 9);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1040, x5, 13), x1039, 13),
            x1035,
            13
        ),
        73156,
        4,
    )?;
    let x1041: BytePoly_8 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1037, x1037, 8), x5, 8), x5, 8),
            x1003,
            8
        ),
        x1003,
        8
    );
    let x1042: BytePoly_9 = bigint_nondet_quot!(ctx, x1041, x5, 9);
    let x1043: BytePoly_4 = bigint_nondet_rem!(ctx, x1041, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1042, x5, 13), x1043, 13),
            x1041,
            13
        ),
        73156,
        4,
    )?;
    let x1044: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x19, bigint_mul!(x1037, x1043, 8), 8), x5, 8),
            x1006,
            8
        ),
        bigint_mul!(x1037, x1003, 8),
        8
    );
    let x1045: BytePoly_9 = bigint_nondet_quot!(ctx, x1044, x5, 9);
    let x1046: BytePoly_4 = bigint_nondet_rem!(ctx, x1044, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1045, x5, 13), x1046, 13),
            x1044,
            13
        ),
        73156,
        4,
    )?;
    let x1047: BytePoly_1 = bigint_nondet_rem!(ctx, x1008, x1, 1);
    let x1048: BytePoly_4 = bigint_nondet_quot!(ctx, x1008, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1048, x1, 5), x1047, 5), x1008, 5),
        32515,
        2,
    )?;
    let x1049: BytePoly_1 = bigint_sub!(x2, x1047, 1);
    eqz(ctx, &bigint_mul!(x1047, x1049, 2), 8131, 2)?;
    let x1050: BytePoly_4 = bigint_add!(bigint_sub!(x1046, x1032, 4), x5, 4);
    let x1051: BytePoly_4 = bigint_add!(bigint_sub!(x1043, x1030, 4), x5, 4);
    let x1052: BytePoly_4 = bigint_nondet_inv!(ctx, x1051, x5, 4);
    let x1053: BytePoly_8 = bigint_mul!(x1051, x1052, 8);
    let x1054: BytePoly_9 = bigint_nondet_quot!(ctx, x1053, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1053, bigint_mul!(x1054, x5, 13), 13), x0, 13),
        73156,
        4,
    )?;
    let x1055: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x1050, x1052, 8), x5, 4);
    let x1056: BytePoly_8 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x1055, x1051, 8), x1050, 8), x5, 8),
        x5,
        8
    );
    let x1057: BytePoly_9 = bigint_nondet_quot!(ctx, x1056, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x1056, bigint_mul!(x1057, x5, 13), 13),
        73156,
        4,
    )?;
    let x1058: BytePoly_8 = bigint_mul!(x1055, x1055, 8);
    let x1059: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1058, x1030, 8), x5, 8), x1043, 8),
        x5,
        8
    );
    let x1060: BytePoly_9 = bigint_nondet_quot!(ctx, x1059, x5, 9);
    let x1061: BytePoly_4 = bigint_nondet_rem!(ctx, x1059, x5, 4);
    let x1062: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x5,
                    bigint_add!(
                        bigint_mul!(x1055, x1061, 8),
                        bigint_add!(bigint_sub!(x1032, bigint_mul!(x1055, x1030, 8), 8), x5, 8),
                        8
                    ),
                    8
                ),
                x5,
                8
            ),
            x5,
            8
        ),
        x19,
        8
    );
    let x1063: BytePoly_9 = bigint_nondet_quot!(ctx, x1062, x5, 9);
    let x1064: BytePoly_4 = bigint_nondet_rem!(ctx, x1062, x5, 4);
    let x1065: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1058, bigint_mul!(x1060, x5, 13), 13),
                        x1030,
                        13
                    ),
                    x1043,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x1061,
        13
    );
    eqz(ctx, &x1065, 73156, 4)?;
    let x1066: BytePoly_13 = bigint_sub!(
        bigint_add!(bigint_mul!(x1063, x5, 13), x1064, 13),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1055, bigint_sub!(x1030, x1061, 4), 8),
                        x1032,
                        8
                    ),
                    x5,
                    8
                ),
                x5,
                8
            ),
            x19,
            8
        ),
        13
    );
    eqz(ctx, &x1066, 73156, 4)?;
    let x1067: BytePoly_5 = bigint_add!(
        bigint_mul!(x1061, x1047, 5),
        bigint_mul!(x1030, x1049, 5),
        5
    );
    let x1068: BytePoly_5 = bigint_add!(
        bigint_mul!(x1064, x1047, 5),
        bigint_mul!(x1032, x1049, 5),
        5
    );
    let x1069: BytePoly_6 = bigint_nondet_quot!(ctx, x1067, x5, 6);
    let x1070: BytePoly_4 = bigint_nondet_rem!(ctx, x1067, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1069, x5, 10), x1070, 10),
            x1067,
            10
        ),
        48771,
        4,
    )?;
    let x1071: BytePoly_6 = bigint_nondet_quot!(ctx, x1068, x5, 6);
    let x1072: BytePoly_4 = bigint_nondet_rem!(ctx, x1068, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1071, x5, 10), x1072, 10),
            x1068,
            10
        ),
        48771,
        4,
    )?;
    let x1073: BytePoly_8 = bigint_mul!(x1043, x1043, 8);
    let x1074: BytePoly_8 = bigint_add!(bigint_add!(bigint_add!(x1073, x1073, 8), x1073, 8), x4, 8);
    let x1075: BytePoly_8 = bigint_add!(x74, x1074, 8);
    let x1076: BytePoly_4 = bigint_nondet_inv!(ctx, bigint_add!(x1046, x1046, 4), x5, 4);
    let x1077: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x1074, x1076, 12), x5, 4);
    let x1078: BytePoly_8 = bigint_mul!(x1046, x1077, 8);
    let x1079: BytePoly_8 = bigint_add!(x1078, x1078, 8);
    let x1080: BytePoly_9 = bigint_nondet_quot!(ctx, bigint_sub!(x1075, x1079, 8), x5, 9);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1080, x5, 13), x1079, 13),
            x1075,
            13
        ),
        73156,
        4,
    )?;
    let x1081: BytePoly_8 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1077, x1077, 8), x5, 8), x5, 8),
            x1043,
            8
        ),
        x1043,
        8
    );
    let x1082: BytePoly_9 = bigint_nondet_quot!(ctx, x1081, x5, 9);
    let x1083: BytePoly_4 = bigint_nondet_rem!(ctx, x1081, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1082, x5, 13), x1083, 13),
            x1081,
            13
        ),
        73156,
        4,
    )?;
    let x1084: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x19, bigint_mul!(x1077, x1083, 8), 8), x5, 8),
            x1046,
            8
        ),
        bigint_mul!(x1077, x1043, 8),
        8
    );
    let x1085: BytePoly_9 = bigint_nondet_quot!(ctx, x1084, x5, 9);
    let x1086: BytePoly_4 = bigint_nondet_rem!(ctx, x1084, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1085, x5, 13), x1086, 13),
            x1084,
            13
        ),
        73156,
        4,
    )?;
    let x1087: BytePoly_1 = bigint_nondet_rem!(ctx, x1048, x1, 1);
    let x1088: BytePoly_4 = bigint_nondet_quot!(ctx, x1048, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1088, x1, 5), x1087, 5), x1048, 5),
        32515,
        2,
    )?;
    let x1089: BytePoly_1 = bigint_sub!(x2, x1087, 1);
    eqz(ctx, &bigint_mul!(x1087, x1089, 2), 8131, 2)?;
    let x1090: BytePoly_4 = bigint_add!(bigint_sub!(x1086, x1072, 4), x5, 4);
    let x1091: BytePoly_4 = bigint_add!(bigint_sub!(x1083, x1070, 4), x5, 4);
    let x1092: BytePoly_4 = bigint_nondet_inv!(ctx, x1091, x5, 4);
    let x1093: BytePoly_8 = bigint_mul!(x1091, x1092, 8);
    let x1094: BytePoly_9 = bigint_nondet_quot!(ctx, x1093, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1093, bigint_mul!(x1094, x5, 13), 13), x0, 13),
        73156,
        4,
    )?;
    let x1095: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x1090, x1092, 8), x5, 4);
    let x1096: BytePoly_8 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x1095, x1091, 8), x1090, 8), x5, 8),
        x5,
        8
    );
    let x1097: BytePoly_9 = bigint_nondet_quot!(ctx, x1096, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x1096, bigint_mul!(x1097, x5, 13), 13),
        73156,
        4,
    )?;
    let x1098: BytePoly_8 = bigint_mul!(x1095, x1095, 8);
    let x1099: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1098, x1070, 8), x5, 8), x1083, 8),
        x5,
        8
    );
    let x1100: BytePoly_9 = bigint_nondet_quot!(ctx, x1099, x5, 9);
    let x1101: BytePoly_4 = bigint_nondet_rem!(ctx, x1099, x5, 4);
    let x1102: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x5,
                    bigint_add!(
                        bigint_mul!(x1095, x1101, 8),
                        bigint_add!(bigint_sub!(x1072, bigint_mul!(x1095, x1070, 8), 8), x5, 8),
                        8
                    ),
                    8
                ),
                x5,
                8
            ),
            x5,
            8
        ),
        x19,
        8
    );
    let x1103: BytePoly_9 = bigint_nondet_quot!(ctx, x1102, x5, 9);
    let x1104: BytePoly_4 = bigint_nondet_rem!(ctx, x1102, x5, 4);
    let x1105: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1098, bigint_mul!(x1100, x5, 13), 13),
                        x1070,
                        13
                    ),
                    x1083,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x1101,
        13
    );
    eqz(ctx, &x1105, 73156, 4)?;
    let x1106: BytePoly_13 = bigint_sub!(
        bigint_add!(bigint_mul!(x1103, x5, 13), x1104, 13),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1095, bigint_sub!(x1070, x1101, 4), 8),
                        x1072,
                        8
                    ),
                    x5,
                    8
                ),
                x5,
                8
            ),
            x19,
            8
        ),
        13
    );
    eqz(ctx, &x1106, 73156, 4)?;
    let x1107: BytePoly_5 = bigint_add!(
        bigint_mul!(x1101, x1087, 5),
        bigint_mul!(x1070, x1089, 5),
        5
    );
    let x1108: BytePoly_5 = bigint_add!(
        bigint_mul!(x1104, x1087, 5),
        bigint_mul!(x1072, x1089, 5),
        5
    );
    let x1109: BytePoly_6 = bigint_nondet_quot!(ctx, x1107, x5, 6);
    let x1110: BytePoly_4 = bigint_nondet_rem!(ctx, x1107, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1109, x5, 10), x1110, 10),
            x1107,
            10
        ),
        48771,
        4,
    )?;
    let x1111: BytePoly_6 = bigint_nondet_quot!(ctx, x1108, x5, 6);
    let x1112: BytePoly_4 = bigint_nondet_rem!(ctx, x1108, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1111, x5, 10), x1112, 10),
            x1108,
            10
        ),
        48771,
        4,
    )?;
    let x1113: BytePoly_8 = bigint_mul!(x1083, x1083, 8);
    let x1114: BytePoly_8 = bigint_add!(bigint_add!(bigint_add!(x1113, x1113, 8), x1113, 8), x4, 8);
    let x1115: BytePoly_8 = bigint_add!(x74, x1114, 8);
    let x1116: BytePoly_4 = bigint_nondet_inv!(ctx, bigint_add!(x1086, x1086, 4), x5, 4);
    let x1117: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x1114, x1116, 12), x5, 4);
    let x1118: BytePoly_8 = bigint_mul!(x1086, x1117, 8);
    let x1119: BytePoly_8 = bigint_add!(x1118, x1118, 8);
    let x1120: BytePoly_9 = bigint_nondet_quot!(ctx, bigint_sub!(x1115, x1119, 8), x5, 9);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1120, x5, 13), x1119, 13),
            x1115,
            13
        ),
        73156,
        4,
    )?;
    let x1121: BytePoly_8 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1117, x1117, 8), x5, 8), x5, 8),
            x1083,
            8
        ),
        x1083,
        8
    );
    let x1122: BytePoly_9 = bigint_nondet_quot!(ctx, x1121, x5, 9);
    let x1123: BytePoly_4 = bigint_nondet_rem!(ctx, x1121, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1122, x5, 13), x1123, 13),
            x1121,
            13
        ),
        73156,
        4,
    )?;
    let x1124: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x19, bigint_mul!(x1117, x1123, 8), 8), x5, 8),
            x1086,
            8
        ),
        bigint_mul!(x1117, x1083, 8),
        8
    );
    let x1125: BytePoly_9 = bigint_nondet_quot!(ctx, x1124, x5, 9);
    let x1126: BytePoly_4 = bigint_nondet_rem!(ctx, x1124, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1125, x5, 13), x1126, 13),
            x1124,
            13
        ),
        73156,
        4,
    )?;
    let x1127: BytePoly_1 = bigint_nondet_rem!(ctx, x1088, x1, 1);
    let x1128: BytePoly_4 = bigint_nondet_quot!(ctx, x1088, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1128, x1, 5), x1127, 5), x1088, 5),
        32515,
        2,
    )?;
    let x1129: BytePoly_1 = bigint_sub!(x2, x1127, 1);
    eqz(ctx, &bigint_mul!(x1127, x1129, 2), 8131, 2)?;
    let x1130: BytePoly_4 = bigint_add!(bigint_sub!(x1126, x1112, 4), x5, 4);
    let x1131: BytePoly_4 = bigint_add!(bigint_sub!(x1123, x1110, 4), x5, 4);
    let x1132: BytePoly_4 = bigint_nondet_inv!(ctx, x1131, x5, 4);
    let x1133: BytePoly_8 = bigint_mul!(x1131, x1132, 8);
    let x1134: BytePoly_9 = bigint_nondet_quot!(ctx, x1133, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1133, bigint_mul!(x1134, x5, 13), 13), x0, 13),
        73156,
        4,
    )?;
    let x1135: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x1130, x1132, 8), x5, 4);
    let x1136: BytePoly_8 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x1135, x1131, 8), x1130, 8), x5, 8),
        x5,
        8
    );
    let x1137: BytePoly_9 = bigint_nondet_quot!(ctx, x1136, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x1136, bigint_mul!(x1137, x5, 13), 13),
        73156,
        4,
    )?;
    let x1138: BytePoly_8 = bigint_mul!(x1135, x1135, 8);
    let x1139: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1138, x1110, 8), x5, 8), x1123, 8),
        x5,
        8
    );
    let x1140: BytePoly_9 = bigint_nondet_quot!(ctx, x1139, x5, 9);
    let x1141: BytePoly_4 = bigint_nondet_rem!(ctx, x1139, x5, 4);
    let x1142: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x5,
                    bigint_add!(
                        bigint_mul!(x1135, x1141, 8),
                        bigint_add!(bigint_sub!(x1112, bigint_mul!(x1135, x1110, 8), 8), x5, 8),
                        8
                    ),
                    8
                ),
                x5,
                8
            ),
            x5,
            8
        ),
        x19,
        8
    );
    let x1143: BytePoly_9 = bigint_nondet_quot!(ctx, x1142, x5, 9);
    let x1144: BytePoly_4 = bigint_nondet_rem!(ctx, x1142, x5, 4);
    let x1145: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1138, bigint_mul!(x1140, x5, 13), 13),
                        x1110,
                        13
                    ),
                    x1123,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x1141,
        13
    );
    eqz(ctx, &x1145, 73156, 4)?;
    let x1146: BytePoly_13 = bigint_sub!(
        bigint_add!(bigint_mul!(x1143, x5, 13), x1144, 13),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1135, bigint_sub!(x1110, x1141, 4), 8),
                        x1112,
                        8
                    ),
                    x5,
                    8
                ),
                x5,
                8
            ),
            x19,
            8
        ),
        13
    );
    eqz(ctx, &x1146, 73156, 4)?;
    let x1147: BytePoly_5 = bigint_add!(
        bigint_mul!(x1141, x1127, 5),
        bigint_mul!(x1110, x1129, 5),
        5
    );
    let x1148: BytePoly_5 = bigint_add!(
        bigint_mul!(x1144, x1127, 5),
        bigint_mul!(x1112, x1129, 5),
        5
    );
    let x1149: BytePoly_6 = bigint_nondet_quot!(ctx, x1147, x5, 6);
    let x1150: BytePoly_4 = bigint_nondet_rem!(ctx, x1147, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1149, x5, 10), x1150, 10),
            x1147,
            10
        ),
        48771,
        4,
    )?;
    let x1151: BytePoly_6 = bigint_nondet_quot!(ctx, x1148, x5, 6);
    let x1152: BytePoly_4 = bigint_nondet_rem!(ctx, x1148, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1151, x5, 10), x1152, 10),
            x1148,
            10
        ),
        48771,
        4,
    )?;
    let x1153: BytePoly_8 = bigint_mul!(x1123, x1123, 8);
    let x1154: BytePoly_8 = bigint_add!(bigint_add!(bigint_add!(x1153, x1153, 8), x1153, 8), x4, 8);
    let x1155: BytePoly_8 = bigint_add!(x74, x1154, 8);
    let x1156: BytePoly_4 = bigint_nondet_inv!(ctx, bigint_add!(x1126, x1126, 4), x5, 4);
    let x1157: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x1154, x1156, 12), x5, 4);
    let x1158: BytePoly_8 = bigint_mul!(x1126, x1157, 8);
    let x1159: BytePoly_8 = bigint_add!(x1158, x1158, 8);
    let x1160: BytePoly_9 = bigint_nondet_quot!(ctx, bigint_sub!(x1155, x1159, 8), x5, 9);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1160, x5, 13), x1159, 13),
            x1155,
            13
        ),
        73156,
        4,
    )?;
    let x1161: BytePoly_8 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1157, x1157, 8), x5, 8), x5, 8),
            x1123,
            8
        ),
        x1123,
        8
    );
    let x1162: BytePoly_9 = bigint_nondet_quot!(ctx, x1161, x5, 9);
    let x1163: BytePoly_4 = bigint_nondet_rem!(ctx, x1161, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1162, x5, 13), x1163, 13),
            x1161,
            13
        ),
        73156,
        4,
    )?;
    let x1164: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x19, bigint_mul!(x1157, x1163, 8), 8), x5, 8),
            x1126,
            8
        ),
        bigint_mul!(x1157, x1123, 8),
        8
    );
    let x1165: BytePoly_9 = bigint_nondet_quot!(ctx, x1164, x5, 9);
    let x1166: BytePoly_4 = bigint_nondet_rem!(ctx, x1164, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1165, x5, 13), x1166, 13),
            x1164,
            13
        ),
        73156,
        4,
    )?;
    let x1167: BytePoly_1 = bigint_nondet_rem!(ctx, x1128, x1, 1);
    let x1168: BytePoly_4 = bigint_nondet_quot!(ctx, x1128, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1168, x1, 5), x1167, 5), x1128, 5),
        32515,
        2,
    )?;
    let x1169: BytePoly_1 = bigint_sub!(x2, x1167, 1);
    eqz(ctx, &bigint_mul!(x1167, x1169, 2), 8131, 2)?;
    let x1170: BytePoly_4 = bigint_add!(bigint_sub!(x1166, x1152, 4), x5, 4);
    let x1171: BytePoly_4 = bigint_add!(bigint_sub!(x1163, x1150, 4), x5, 4);
    let x1172: BytePoly_4 = bigint_nondet_inv!(ctx, x1171, x5, 4);
    let x1173: BytePoly_8 = bigint_mul!(x1171, x1172, 8);
    let x1174: BytePoly_9 = bigint_nondet_quot!(ctx, x1173, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1173, bigint_mul!(x1174, x5, 13), 13), x0, 13),
        73156,
        4,
    )?;
    let x1175: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x1170, x1172, 8), x5, 4);
    let x1176: BytePoly_8 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x1175, x1171, 8), x1170, 8), x5, 8),
        x5,
        8
    );
    let x1177: BytePoly_9 = bigint_nondet_quot!(ctx, x1176, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x1176, bigint_mul!(x1177, x5, 13), 13),
        73156,
        4,
    )?;
    let x1178: BytePoly_8 = bigint_mul!(x1175, x1175, 8);
    let x1179: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1178, x1150, 8), x5, 8), x1163, 8),
        x5,
        8
    );
    let x1180: BytePoly_9 = bigint_nondet_quot!(ctx, x1179, x5, 9);
    let x1181: BytePoly_4 = bigint_nondet_rem!(ctx, x1179, x5, 4);
    let x1182: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x5,
                    bigint_add!(
                        bigint_mul!(x1175, x1181, 8),
                        bigint_add!(bigint_sub!(x1152, bigint_mul!(x1175, x1150, 8), 8), x5, 8),
                        8
                    ),
                    8
                ),
                x5,
                8
            ),
            x5,
            8
        ),
        x19,
        8
    );
    let x1183: BytePoly_9 = bigint_nondet_quot!(ctx, x1182, x5, 9);
    let x1184: BytePoly_4 = bigint_nondet_rem!(ctx, x1182, x5, 4);
    let x1185: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1178, bigint_mul!(x1180, x5, 13), 13),
                        x1150,
                        13
                    ),
                    x1163,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x1181,
        13
    );
    eqz(ctx, &x1185, 73156, 4)?;
    let x1186: BytePoly_13 = bigint_sub!(
        bigint_add!(bigint_mul!(x1183, x5, 13), x1184, 13),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1175, bigint_sub!(x1150, x1181, 4), 8),
                        x1152,
                        8
                    ),
                    x5,
                    8
                ),
                x5,
                8
            ),
            x19,
            8
        ),
        13
    );
    eqz(ctx, &x1186, 73156, 4)?;
    let x1187: BytePoly_5 = bigint_add!(
        bigint_mul!(x1181, x1167, 5),
        bigint_mul!(x1150, x1169, 5),
        5
    );
    let x1188: BytePoly_5 = bigint_add!(
        bigint_mul!(x1184, x1167, 5),
        bigint_mul!(x1152, x1169, 5),
        5
    );
    let x1189: BytePoly_6 = bigint_nondet_quot!(ctx, x1187, x5, 6);
    let x1190: BytePoly_4 = bigint_nondet_rem!(ctx, x1187, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1189, x5, 10), x1190, 10),
            x1187,
            10
        ),
        48771,
        4,
    )?;
    let x1191: BytePoly_6 = bigint_nondet_quot!(ctx, x1188, x5, 6);
    let x1192: BytePoly_4 = bigint_nondet_rem!(ctx, x1188, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1191, x5, 10), x1192, 10),
            x1188,
            10
        ),
        48771,
        4,
    )?;
    let x1193: BytePoly_8 = bigint_mul!(x1163, x1163, 8);
    let x1194: BytePoly_8 = bigint_add!(bigint_add!(bigint_add!(x1193, x1193, 8), x1193, 8), x4, 8);
    let x1195: BytePoly_8 = bigint_add!(x74, x1194, 8);
    let x1196: BytePoly_4 = bigint_nondet_inv!(ctx, bigint_add!(x1166, x1166, 4), x5, 4);
    let x1197: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x1194, x1196, 12), x5, 4);
    let x1198: BytePoly_8 = bigint_mul!(x1166, x1197, 8);
    let x1199: BytePoly_8 = bigint_add!(x1198, x1198, 8);
    let x1200: BytePoly_9 = bigint_nondet_quot!(ctx, bigint_sub!(x1195, x1199, 8), x5, 9);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1200, x5, 13), x1199, 13),
            x1195,
            13
        ),
        73156,
        4,
    )?;
    let x1201: BytePoly_8 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1197, x1197, 8), x5, 8), x5, 8),
            x1163,
            8
        ),
        x1163,
        8
    );
    let x1202: BytePoly_9 = bigint_nondet_quot!(ctx, x1201, x5, 9);
    let x1203: BytePoly_4 = bigint_nondet_rem!(ctx, x1201, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1202, x5, 13), x1203, 13),
            x1201,
            13
        ),
        73156,
        4,
    )?;
    let x1204: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x19, bigint_mul!(x1197, x1203, 8), 8), x5, 8),
            x1166,
            8
        ),
        bigint_mul!(x1197, x1163, 8),
        8
    );
    let x1205: BytePoly_9 = bigint_nondet_quot!(ctx, x1204, x5, 9);
    let x1206: BytePoly_4 = bigint_nondet_rem!(ctx, x1204, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1205, x5, 13), x1206, 13),
            x1204,
            13
        ),
        73156,
        4,
    )?;
    let x1207: BytePoly_1 = bigint_nondet_rem!(ctx, x1168, x1, 1);
    let x1208: BytePoly_4 = bigint_nondet_quot!(ctx, x1168, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1208, x1, 5), x1207, 5), x1168, 5),
        32515,
        2,
    )?;
    let x1209: BytePoly_1 = bigint_sub!(x2, x1207, 1);
    eqz(ctx, &bigint_mul!(x1207, x1209, 2), 8131, 2)?;
    let x1210: BytePoly_4 = bigint_add!(bigint_sub!(x1206, x1192, 4), x5, 4);
    let x1211: BytePoly_4 = bigint_add!(bigint_sub!(x1203, x1190, 4), x5, 4);
    let x1212: BytePoly_4 = bigint_nondet_inv!(ctx, x1211, x5, 4);
    let x1213: BytePoly_8 = bigint_mul!(x1211, x1212, 8);
    let x1214: BytePoly_9 = bigint_nondet_quot!(ctx, x1213, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1213, bigint_mul!(x1214, x5, 13), 13), x0, 13),
        73156,
        4,
    )?;
    let x1215: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x1210, x1212, 8), x5, 4);
    let x1216: BytePoly_8 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x1215, x1211, 8), x1210, 8), x5, 8),
        x5,
        8
    );
    let x1217: BytePoly_9 = bigint_nondet_quot!(ctx, x1216, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x1216, bigint_mul!(x1217, x5, 13), 13),
        73156,
        4,
    )?;
    let x1218: BytePoly_8 = bigint_mul!(x1215, x1215, 8);
    let x1219: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1218, x1190, 8), x5, 8), x1203, 8),
        x5,
        8
    );
    let x1220: BytePoly_9 = bigint_nondet_quot!(ctx, x1219, x5, 9);
    let x1221: BytePoly_4 = bigint_nondet_rem!(ctx, x1219, x5, 4);
    let x1222: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x5,
                    bigint_add!(
                        bigint_mul!(x1215, x1221, 8),
                        bigint_add!(bigint_sub!(x1192, bigint_mul!(x1215, x1190, 8), 8), x5, 8),
                        8
                    ),
                    8
                ),
                x5,
                8
            ),
            x5,
            8
        ),
        x19,
        8
    );
    let x1223: BytePoly_9 = bigint_nondet_quot!(ctx, x1222, x5, 9);
    let x1224: BytePoly_4 = bigint_nondet_rem!(ctx, x1222, x5, 4);
    let x1225: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1218, bigint_mul!(x1220, x5, 13), 13),
                        x1190,
                        13
                    ),
                    x1203,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x1221,
        13
    );
    eqz(ctx, &x1225, 73156, 4)?;
    let x1226: BytePoly_13 = bigint_sub!(
        bigint_add!(bigint_mul!(x1223, x5, 13), x1224, 13),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1215, bigint_sub!(x1190, x1221, 4), 8),
                        x1192,
                        8
                    ),
                    x5,
                    8
                ),
                x5,
                8
            ),
            x19,
            8
        ),
        13
    );
    eqz(ctx, &x1226, 73156, 4)?;
    let x1227: BytePoly_5 = bigint_add!(
        bigint_mul!(x1221, x1207, 5),
        bigint_mul!(x1190, x1209, 5),
        5
    );
    let x1228: BytePoly_5 = bigint_add!(
        bigint_mul!(x1224, x1207, 5),
        bigint_mul!(x1192, x1209, 5),
        5
    );
    let x1229: BytePoly_6 = bigint_nondet_quot!(ctx, x1227, x5, 6);
    let x1230: BytePoly_4 = bigint_nondet_rem!(ctx, x1227, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1229, x5, 10), x1230, 10),
            x1227,
            10
        ),
        48771,
        4,
    )?;
    let x1231: BytePoly_6 = bigint_nondet_quot!(ctx, x1228, x5, 6);
    let x1232: BytePoly_4 = bigint_nondet_rem!(ctx, x1228, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1231, x5, 10), x1232, 10),
            x1228,
            10
        ),
        48771,
        4,
    )?;
    let x1233: BytePoly_8 = bigint_mul!(x1203, x1203, 8);
    let x1234: BytePoly_8 = bigint_add!(bigint_add!(bigint_add!(x1233, x1233, 8), x1233, 8), x4, 8);
    let x1235: BytePoly_8 = bigint_add!(x74, x1234, 8);
    let x1236: BytePoly_4 = bigint_nondet_inv!(ctx, bigint_add!(x1206, x1206, 4), x5, 4);
    let x1237: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x1234, x1236, 12), x5, 4);
    let x1238: BytePoly_8 = bigint_mul!(x1206, x1237, 8);
    let x1239: BytePoly_8 = bigint_add!(x1238, x1238, 8);
    let x1240: BytePoly_9 = bigint_nondet_quot!(ctx, bigint_sub!(x1235, x1239, 8), x5, 9);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1240, x5, 13), x1239, 13),
            x1235,
            13
        ),
        73156,
        4,
    )?;
    let x1241: BytePoly_8 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1237, x1237, 8), x5, 8), x5, 8),
            x1203,
            8
        ),
        x1203,
        8
    );
    let x1242: BytePoly_9 = bigint_nondet_quot!(ctx, x1241, x5, 9);
    let x1243: BytePoly_4 = bigint_nondet_rem!(ctx, x1241, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1242, x5, 13), x1243, 13),
            x1241,
            13
        ),
        73156,
        4,
    )?;
    let x1244: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x19, bigint_mul!(x1237, x1243, 8), 8), x5, 8),
            x1206,
            8
        ),
        bigint_mul!(x1237, x1203, 8),
        8
    );
    let x1245: BytePoly_9 = bigint_nondet_quot!(ctx, x1244, x5, 9);
    let x1246: BytePoly_4 = bigint_nondet_rem!(ctx, x1244, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1245, x5, 13), x1246, 13),
            x1244,
            13
        ),
        73156,
        4,
    )?;
    let x1247: BytePoly_1 = bigint_nondet_rem!(ctx, x1208, x1, 1);
    let x1248: BytePoly_4 = bigint_nondet_quot!(ctx, x1208, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1248, x1, 5), x1247, 5), x1208, 5),
        32515,
        2,
    )?;
    let x1249: BytePoly_1 = bigint_sub!(x2, x1247, 1);
    eqz(ctx, &bigint_mul!(x1247, x1249, 2), 8131, 2)?;
    let x1250: BytePoly_4 = bigint_add!(bigint_sub!(x1246, x1232, 4), x5, 4);
    let x1251: BytePoly_4 = bigint_add!(bigint_sub!(x1243, x1230, 4), x5, 4);
    let x1252: BytePoly_4 = bigint_nondet_inv!(ctx, x1251, x5, 4);
    let x1253: BytePoly_8 = bigint_mul!(x1251, x1252, 8);
    let x1254: BytePoly_9 = bigint_nondet_quot!(ctx, x1253, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1253, bigint_mul!(x1254, x5, 13), 13), x0, 13),
        73156,
        4,
    )?;
    let x1255: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x1250, x1252, 8), x5, 4);
    let x1256: BytePoly_8 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x1255, x1251, 8), x1250, 8), x5, 8),
        x5,
        8
    );
    let x1257: BytePoly_9 = bigint_nondet_quot!(ctx, x1256, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x1256, bigint_mul!(x1257, x5, 13), 13),
        73156,
        4,
    )?;
    let x1258: BytePoly_8 = bigint_mul!(x1255, x1255, 8);
    let x1259: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1258, x1230, 8), x5, 8), x1243, 8),
        x5,
        8
    );
    let x1260: BytePoly_9 = bigint_nondet_quot!(ctx, x1259, x5, 9);
    let x1261: BytePoly_4 = bigint_nondet_rem!(ctx, x1259, x5, 4);
    let x1262: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x5,
                    bigint_add!(
                        bigint_mul!(x1255, x1261, 8),
                        bigint_add!(bigint_sub!(x1232, bigint_mul!(x1255, x1230, 8), 8), x5, 8),
                        8
                    ),
                    8
                ),
                x5,
                8
            ),
            x5,
            8
        ),
        x19,
        8
    );
    let x1263: BytePoly_9 = bigint_nondet_quot!(ctx, x1262, x5, 9);
    let x1264: BytePoly_4 = bigint_nondet_rem!(ctx, x1262, x5, 4);
    let x1265: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1258, bigint_mul!(x1260, x5, 13), 13),
                        x1230,
                        13
                    ),
                    x1243,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x1261,
        13
    );
    eqz(ctx, &x1265, 73156, 4)?;
    let x1266: BytePoly_13 = bigint_sub!(
        bigint_add!(bigint_mul!(x1263, x5, 13), x1264, 13),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1255, bigint_sub!(x1230, x1261, 4), 8),
                        x1232,
                        8
                    ),
                    x5,
                    8
                ),
                x5,
                8
            ),
            x19,
            8
        ),
        13
    );
    eqz(ctx, &x1266, 73156, 4)?;
    let x1267: BytePoly_5 = bigint_add!(
        bigint_mul!(x1261, x1247, 5),
        bigint_mul!(x1230, x1249, 5),
        5
    );
    let x1268: BytePoly_5 = bigint_add!(
        bigint_mul!(x1264, x1247, 5),
        bigint_mul!(x1232, x1249, 5),
        5
    );
    let x1269: BytePoly_6 = bigint_nondet_quot!(ctx, x1267, x5, 6);
    let x1270: BytePoly_4 = bigint_nondet_rem!(ctx, x1267, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1269, x5, 10), x1270, 10),
            x1267,
            10
        ),
        48771,
        4,
    )?;
    let x1271: BytePoly_6 = bigint_nondet_quot!(ctx, x1268, x5, 6);
    let x1272: BytePoly_4 = bigint_nondet_rem!(ctx, x1268, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1271, x5, 10), x1272, 10),
            x1268,
            10
        ),
        48771,
        4,
    )?;
    let x1273: BytePoly_8 = bigint_mul!(x1243, x1243, 8);
    let x1274: BytePoly_8 = bigint_add!(bigint_add!(bigint_add!(x1273, x1273, 8), x1273, 8), x4, 8);
    let x1275: BytePoly_8 = bigint_add!(x74, x1274, 8);
    let x1276: BytePoly_4 = bigint_nondet_inv!(ctx, bigint_add!(x1246, x1246, 4), x5, 4);
    let x1277: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x1274, x1276, 12), x5, 4);
    let x1278: BytePoly_8 = bigint_mul!(x1246, x1277, 8);
    let x1279: BytePoly_8 = bigint_add!(x1278, x1278, 8);
    let x1280: BytePoly_9 = bigint_nondet_quot!(ctx, bigint_sub!(x1275, x1279, 8), x5, 9);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1280, x5, 13), x1279, 13),
            x1275,
            13
        ),
        73156,
        4,
    )?;
    let x1281: BytePoly_8 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1277, x1277, 8), x5, 8), x5, 8),
            x1243,
            8
        ),
        x1243,
        8
    );
    let x1282: BytePoly_9 = bigint_nondet_quot!(ctx, x1281, x5, 9);
    let x1283: BytePoly_4 = bigint_nondet_rem!(ctx, x1281, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1282, x5, 13), x1283, 13),
            x1281,
            13
        ),
        73156,
        4,
    )?;
    let x1284: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x19, bigint_mul!(x1277, x1283, 8), 8), x5, 8),
            x1246,
            8
        ),
        bigint_mul!(x1277, x1243, 8),
        8
    );
    let x1285: BytePoly_9 = bigint_nondet_quot!(ctx, x1284, x5, 9);
    let x1286: BytePoly_4 = bigint_nondet_rem!(ctx, x1284, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1285, x5, 13), x1286, 13),
            x1284,
            13
        ),
        73156,
        4,
    )?;
    let x1287: BytePoly_1 = bigint_nondet_rem!(ctx, x1248, x1, 1);
    let x1288: BytePoly_4 = bigint_nondet_quot!(ctx, x1248, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1288, x1, 5), x1287, 5), x1248, 5),
        32515,
        2,
    )?;
    let x1289: BytePoly_1 = bigint_sub!(x2, x1287, 1);
    eqz(ctx, &bigint_mul!(x1287, x1289, 2), 8131, 2)?;
    let x1290: BytePoly_4 = bigint_add!(bigint_sub!(x1286, x1272, 4), x5, 4);
    let x1291: BytePoly_4 = bigint_add!(bigint_sub!(x1283, x1270, 4), x5, 4);
    let x1292: BytePoly_4 = bigint_nondet_inv!(ctx, x1291, x5, 4);
    let x1293: BytePoly_8 = bigint_mul!(x1291, x1292, 8);
    let x1294: BytePoly_9 = bigint_nondet_quot!(ctx, x1293, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1293, bigint_mul!(x1294, x5, 13), 13), x0, 13),
        73156,
        4,
    )?;
    let x1295: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x1290, x1292, 8), x5, 4);
    let x1296: BytePoly_8 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x1295, x1291, 8), x1290, 8), x5, 8),
        x5,
        8
    );
    let x1297: BytePoly_9 = bigint_nondet_quot!(ctx, x1296, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x1296, bigint_mul!(x1297, x5, 13), 13),
        73156,
        4,
    )?;
    let x1298: BytePoly_8 = bigint_mul!(x1295, x1295, 8);
    let x1299: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1298, x1270, 8), x5, 8), x1283, 8),
        x5,
        8
    );
    let x1300: BytePoly_9 = bigint_nondet_quot!(ctx, x1299, x5, 9);
    let x1301: BytePoly_4 = bigint_nondet_rem!(ctx, x1299, x5, 4);
    let x1302: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x5,
                    bigint_add!(
                        bigint_mul!(x1295, x1301, 8),
                        bigint_add!(bigint_sub!(x1272, bigint_mul!(x1295, x1270, 8), 8), x5, 8),
                        8
                    ),
                    8
                ),
                x5,
                8
            ),
            x5,
            8
        ),
        x19,
        8
    );
    let x1303: BytePoly_9 = bigint_nondet_quot!(ctx, x1302, x5, 9);
    let x1304: BytePoly_4 = bigint_nondet_rem!(ctx, x1302, x5, 4);
    let x1305: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1298, bigint_mul!(x1300, x5, 13), 13),
                        x1270,
                        13
                    ),
                    x1283,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x1301,
        13
    );
    eqz(ctx, &x1305, 73156, 4)?;
    let x1306: BytePoly_13 = bigint_sub!(
        bigint_add!(bigint_mul!(x1303, x5, 13), x1304, 13),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1295, bigint_sub!(x1270, x1301, 4), 8),
                        x1272,
                        8
                    ),
                    x5,
                    8
                ),
                x5,
                8
            ),
            x19,
            8
        ),
        13
    );
    eqz(ctx, &x1306, 73156, 4)?;
    let x1307: BytePoly_5 = bigint_add!(
        bigint_mul!(x1301, x1287, 5),
        bigint_mul!(x1270, x1289, 5),
        5
    );
    let x1308: BytePoly_5 = bigint_add!(
        bigint_mul!(x1304, x1287, 5),
        bigint_mul!(x1272, x1289, 5),
        5
    );
    let x1309: BytePoly_6 = bigint_nondet_quot!(ctx, x1307, x5, 6);
    let x1310: BytePoly_4 = bigint_nondet_rem!(ctx, x1307, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1309, x5, 10), x1310, 10),
            x1307,
            10
        ),
        48771,
        4,
    )?;
    let x1311: BytePoly_6 = bigint_nondet_quot!(ctx, x1308, x5, 6);
    let x1312: BytePoly_4 = bigint_nondet_rem!(ctx, x1308, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1311, x5, 10), x1312, 10),
            x1308,
            10
        ),
        48771,
        4,
    )?;
    let x1313: BytePoly_8 = bigint_mul!(x1283, x1283, 8);
    let x1314: BytePoly_8 = bigint_add!(bigint_add!(bigint_add!(x1313, x1313, 8), x1313, 8), x4, 8);
    let x1315: BytePoly_8 = bigint_add!(x74, x1314, 8);
    let x1316: BytePoly_4 = bigint_nondet_inv!(ctx, bigint_add!(x1286, x1286, 4), x5, 4);
    let x1317: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x1314, x1316, 12), x5, 4);
    let x1318: BytePoly_8 = bigint_mul!(x1286, x1317, 8);
    let x1319: BytePoly_8 = bigint_add!(x1318, x1318, 8);
    let x1320: BytePoly_9 = bigint_nondet_quot!(ctx, bigint_sub!(x1315, x1319, 8), x5, 9);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1320, x5, 13), x1319, 13),
            x1315,
            13
        ),
        73156,
        4,
    )?;
    let x1321: BytePoly_8 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1317, x1317, 8), x5, 8), x5, 8),
            x1283,
            8
        ),
        x1283,
        8
    );
    let x1322: BytePoly_9 = bigint_nondet_quot!(ctx, x1321, x5, 9);
    let x1323: BytePoly_4 = bigint_nondet_rem!(ctx, x1321, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1322, x5, 13), x1323, 13),
            x1321,
            13
        ),
        73156,
        4,
    )?;
    let x1324: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x19, bigint_mul!(x1317, x1323, 8), 8), x5, 8),
            x1286,
            8
        ),
        bigint_mul!(x1317, x1283, 8),
        8
    );
    let x1325: BytePoly_9 = bigint_nondet_quot!(ctx, x1324, x5, 9);
    let x1326: BytePoly_4 = bigint_nondet_rem!(ctx, x1324, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1325, x5, 13), x1326, 13),
            x1324,
            13
        ),
        73156,
        4,
    )?;
    let x1327: BytePoly_4 = bigint_sub!(x5, x15, 4);
    let x1328: BytePoly_4 = bigint_add!(bigint_sub!(x1327, x1312, 4), x5, 4);
    let x1329: BytePoly_4 = bigint_add!(bigint_sub!(x14, x1310, 4), x5, 4);
    let x1330: BytePoly_4 = bigint_nondet_inv!(ctx, x1329, x5, 4);
    let x1331: BytePoly_8 = bigint_mul!(x1329, x1330, 8);
    let x1332: BytePoly_9 = bigint_nondet_quot!(ctx, x1331, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1331, bigint_mul!(x1332, x5, 13), 13), x0, 13),
        73156,
        4,
    )?;
    let x1333: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x1328, x1330, 8), x5, 4);
    let x1334: BytePoly_8 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x1333, x1329, 8), x1328, 8), x5, 8),
        x5,
        8
    );
    let x1335: BytePoly_9 = bigint_nondet_quot!(ctx, x1334, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x1334, bigint_mul!(x1335, x5, 13), 13),
        73156,
        4,
    )?;
    let x1336: BytePoly_8 = bigint_mul!(x1333, x1333, 8);
    let x1337: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1336, x1310, 8), x5, 8), x14, 8),
        x5,
        8
    );
    let x1338: BytePoly_9 = bigint_nondet_quot!(ctx, x1337, x5, 9);
    let x1339: BytePoly_4 = bigint_nondet_rem!(ctx, x1337, x5, 4);
    let x1340: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x5,
                    bigint_add!(
                        bigint_mul!(x1333, x1339, 8),
                        bigint_add!(bigint_sub!(x1312, bigint_mul!(x1333, x1310, 8), 8), x5, 8),
                        8
                    ),
                    8
                ),
                x5,
                8
            ),
            x5,
            8
        ),
        x19,
        8
    );
    let x1341: BytePoly_9 = bigint_nondet_quot!(ctx, x1340, x5, 9);
    let x1342: BytePoly_4 = bigint_nondet_rem!(ctx, x1340, x5, 4);
    let x1343: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1336, bigint_mul!(x1338, x5, 13), 13),
                        x1310,
                        13
                    ),
                    x14,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x1339,
        13
    );
    eqz(ctx, &x1343, 73156, 4)?;
    let x1344: BytePoly_13 = bigint_sub!(
        bigint_add!(bigint_mul!(x1341, x5, 13), x1342, 13),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1333, bigint_sub!(x1310, x1339, 4), 8),
                        x1312,
                        8
                    ),
                    x5,
                    8
                ),
                x5,
                8
            ),
            x19,
            8
        ),
        13
    );
    eqz(ctx, &x1344, 73156, 4)?;
    let x1345: BytePoly_9 = bigint_nondet_quot!(ctx, x24, x5, 9);
    let x1346: BytePoly_4 = bigint_nondet_rem!(ctx, x24, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1345, x5, 13), x1346, 13), x24, 13),
        73156,
        4,
    )?;
    let x1347: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x14, x1346, 8), x27, 8), x3, 8),
            x23,
            8
        ),
        x19,
        8
    );
    let x1348: BytePoly_9 = bigint_nondet_quot!(ctx, x1347, x5, 9);
    let x1349: BytePoly_4 = bigint_nondet_rem!(ctx, x1347, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1348, x5, 13), x1349, 13),
            x1347,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &x1349, 34, 1)?;
    let x1350: BytePoly_1 = bigint_nondet_rem!(ctx, x40, x1, 1);
    let x1351: BytePoly_4 = bigint_nondet_quot!(ctx, x40, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1351, x1, 5), x1350, 5), x40, 5),
        32515,
        2,
    )?;
    let x1352: BytePoly_1 = bigint_sub!(x2, x1350, 1);
    eqz(ctx, &bigint_mul!(x1350, x1352, 2), 8131, 2)?;
    let x1353: BytePoly_4 = bigint_add!(bigint_sub!(x10, x15, 4), x5, 4);
    let x1354: BytePoly_4 = bigint_add!(bigint_sub!(x9, x14, 4), x5, 4);
    let x1355: BytePoly_4 = bigint_nondet_inv!(ctx, x1354, x5, 4);
    let x1356: BytePoly_8 = bigint_mul!(x1354, x1355, 8);
    let x1357: BytePoly_9 = bigint_nondet_quot!(ctx, x1356, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1356, bigint_mul!(x1357, x5, 13), 13), x0, 13),
        73156,
        4,
    )?;
    let x1358: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x1353, x1355, 8), x5, 4);
    let x1359: BytePoly_8 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x1358, x1354, 8), x1353, 8), x5, 8),
        x5,
        8
    );
    let x1360: BytePoly_9 = bigint_nondet_quot!(ctx, x1359, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x1359, bigint_mul!(x1360, x5, 13), 13),
        73156,
        4,
    )?;
    let x1361: BytePoly_8 = bigint_mul!(x1358, x1358, 8);
    let x1362: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1361, x14, 8), x5, 8), x9, 8),
        x5,
        8
    );
    let x1363: BytePoly_9 = bigint_nondet_quot!(ctx, x1362, x5, 9);
    let x1364: BytePoly_4 = bigint_nondet_rem!(ctx, x1362, x5, 4);
    let x1365: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x5,
                    bigint_add!(
                        bigint_mul!(x1358, x1364, 8),
                        bigint_add!(bigint_sub!(x15, bigint_mul!(x1358, x14, 8), 8), x5, 8),
                        8
                    ),
                    8
                ),
                x5,
                8
            ),
            x5,
            8
        ),
        x19,
        8
    );
    let x1366: BytePoly_9 = bigint_nondet_quot!(ctx, x1365, x5, 9);
    let x1367: BytePoly_4 = bigint_nondet_rem!(ctx, x1365, x5, 4);
    let x1368: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x1361, bigint_mul!(x1363, x5, 13), 13), x14, 13),
                    x9,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x1364,
        13
    );
    eqz(ctx, &x1368, 73156, 4)?;
    let x1369: BytePoly_13 = bigint_sub!(
        bigint_add!(bigint_mul!(x1366, x5, 13), x1367, 13),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x1358, bigint_sub!(x14, x1364, 4), 8), x15, 8),
                    x5,
                    8
                ),
                x5,
                8
            ),
            x19,
            8
        ),
        13
    );
    eqz(ctx, &x1369, 73156, 4)?;
    let x1370: BytePoly_5 =
        bigint_add!(bigint_mul!(x1364, x1350, 5), bigint_mul!(x14, x1352, 5), 5);
    let x1371: BytePoly_5 =
        bigint_add!(bigint_mul!(x1367, x1350, 5), bigint_mul!(x15, x1352, 5), 5);
    let x1372: BytePoly_6 = bigint_nondet_quot!(ctx, x1370, x5, 6);
    let x1373: BytePoly_4 = bigint_nondet_rem!(ctx, x1370, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1372, x5, 10), x1373, 10),
            x1370,
            10
        ),
        48771,
        4,
    )?;
    let x1374: BytePoly_6 = bigint_nondet_quot!(ctx, x1371, x5, 6);
    let x1375: BytePoly_4 = bigint_nondet_rem!(ctx, x1371, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1374, x5, 10), x1375, 10),
            x1371,
            10
        ),
        48771,
        4,
    )?;
    let x1376: BytePoly_8 = bigint_add!(bigint_add!(bigint_add!(x16, x16, 8), x16, 8), x4, 8);
    let x1377: BytePoly_8 = bigint_add!(x74, x1376, 8);
    let x1378: BytePoly_4 = bigint_nondet_inv!(ctx, bigint_add!(x10, x10, 4), x5, 4);
    let x1379: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x1376, x1378, 12), x5, 4);
    let x1380: BytePoly_8 = bigint_mul!(x10, x1379, 8);
    let x1381: BytePoly_8 = bigint_add!(x1380, x1380, 8);
    let x1382: BytePoly_9 = bigint_nondet_quot!(ctx, bigint_sub!(x1377, x1381, 8), x5, 9);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1382, x5, 13), x1381, 13),
            x1377,
            13
        ),
        73156,
        4,
    )?;
    let x1383: BytePoly_8 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1379, x1379, 8), x5, 8), x5, 8),
            x9,
            8
        ),
        x9,
        8
    );
    let x1384: BytePoly_9 = bigint_nondet_quot!(ctx, x1383, x5, 9);
    let x1385: BytePoly_4 = bigint_nondet_rem!(ctx, x1383, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1384, x5, 13), x1385, 13),
            x1383,
            13
        ),
        73156,
        4,
    )?;
    let x1386: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x19, bigint_mul!(x1379, x1385, 8), 8), x5, 8),
            x10,
            8
        ),
        bigint_mul!(x1379, x9, 8),
        8
    );
    let x1387: BytePoly_9 = bigint_nondet_quot!(ctx, x1386, x5, 9);
    let x1388: BytePoly_4 = bigint_nondet_rem!(ctx, x1386, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1387, x5, 13), x1388, 13),
            x1386,
            13
        ),
        73156,
        4,
    )?;
    let x1389: BytePoly_1 = bigint_nondet_rem!(ctx, x1351, x1, 1);
    let x1390: BytePoly_4 = bigint_nondet_quot!(ctx, x1351, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1390, x1, 5), x1389, 5), x1351, 5),
        32515,
        2,
    )?;
    let x1391: BytePoly_1 = bigint_sub!(x2, x1389, 1);
    eqz(ctx, &bigint_mul!(x1389, x1391, 2), 8131, 2)?;
    let x1392: BytePoly_4 = bigint_add!(bigint_sub!(x1388, x1375, 4), x5, 4);
    let x1393: BytePoly_4 = bigint_add!(bigint_sub!(x1385, x1373, 4), x5, 4);
    let x1394: BytePoly_4 = bigint_nondet_inv!(ctx, x1393, x5, 4);
    let x1395: BytePoly_8 = bigint_mul!(x1393, x1394, 8);
    let x1396: BytePoly_9 = bigint_nondet_quot!(ctx, x1395, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1395, bigint_mul!(x1396, x5, 13), 13), x0, 13),
        73156,
        4,
    )?;
    let x1397: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x1392, x1394, 8), x5, 4);
    let x1398: BytePoly_8 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x1397, x1393, 8), x1392, 8), x5, 8),
        x5,
        8
    );
    let x1399: BytePoly_9 = bigint_nondet_quot!(ctx, x1398, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x1398, bigint_mul!(x1399, x5, 13), 13),
        73156,
        4,
    )?;
    let x1400: BytePoly_8 = bigint_mul!(x1397, x1397, 8);
    let x1401: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1400, x1373, 8), x5, 8), x1385, 8),
        x5,
        8
    );
    let x1402: BytePoly_9 = bigint_nondet_quot!(ctx, x1401, x5, 9);
    let x1403: BytePoly_4 = bigint_nondet_rem!(ctx, x1401, x5, 4);
    let x1404: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x5,
                    bigint_add!(
                        bigint_mul!(x1397, x1403, 8),
                        bigint_add!(bigint_sub!(x1375, bigint_mul!(x1397, x1373, 8), 8), x5, 8),
                        8
                    ),
                    8
                ),
                x5,
                8
            ),
            x5,
            8
        ),
        x19,
        8
    );
    let x1405: BytePoly_9 = bigint_nondet_quot!(ctx, x1404, x5, 9);
    let x1406: BytePoly_4 = bigint_nondet_rem!(ctx, x1404, x5, 4);
    let x1407: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1400, bigint_mul!(x1402, x5, 13), 13),
                        x1373,
                        13
                    ),
                    x1385,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x1403,
        13
    );
    eqz(ctx, &x1407, 73156, 4)?;
    let x1408: BytePoly_13 = bigint_sub!(
        bigint_add!(bigint_mul!(x1405, x5, 13), x1406, 13),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1397, bigint_sub!(x1373, x1403, 4), 8),
                        x1375,
                        8
                    ),
                    x5,
                    8
                ),
                x5,
                8
            ),
            x19,
            8
        ),
        13
    );
    eqz(ctx, &x1408, 73156, 4)?;
    let x1409: BytePoly_5 = bigint_add!(
        bigint_mul!(x1403, x1389, 5),
        bigint_mul!(x1373, x1391, 5),
        5
    );
    let x1410: BytePoly_5 = bigint_add!(
        bigint_mul!(x1406, x1389, 5),
        bigint_mul!(x1375, x1391, 5),
        5
    );
    let x1411: BytePoly_6 = bigint_nondet_quot!(ctx, x1409, x5, 6);
    let x1412: BytePoly_4 = bigint_nondet_rem!(ctx, x1409, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1411, x5, 10), x1412, 10),
            x1409,
            10
        ),
        48771,
        4,
    )?;
    let x1413: BytePoly_6 = bigint_nondet_quot!(ctx, x1410, x5, 6);
    let x1414: BytePoly_4 = bigint_nondet_rem!(ctx, x1410, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1413, x5, 10), x1414, 10),
            x1410,
            10
        ),
        48771,
        4,
    )?;
    let x1415: BytePoly_8 = bigint_mul!(x1385, x1385, 8);
    let x1416: BytePoly_8 = bigint_add!(bigint_add!(bigint_add!(x1415, x1415, 8), x1415, 8), x4, 8);
    let x1417: BytePoly_8 = bigint_add!(x74, x1416, 8);
    let x1418: BytePoly_4 = bigint_nondet_inv!(ctx, bigint_add!(x1388, x1388, 4), x5, 4);
    let x1419: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x1416, x1418, 12), x5, 4);
    let x1420: BytePoly_8 = bigint_mul!(x1388, x1419, 8);
    let x1421: BytePoly_8 = bigint_add!(x1420, x1420, 8);
    let x1422: BytePoly_9 = bigint_nondet_quot!(ctx, bigint_sub!(x1417, x1421, 8), x5, 9);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1422, x5, 13), x1421, 13),
            x1417,
            13
        ),
        73156,
        4,
    )?;
    let x1423: BytePoly_8 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1419, x1419, 8), x5, 8), x5, 8),
            x1385,
            8
        ),
        x1385,
        8
    );
    let x1424: BytePoly_9 = bigint_nondet_quot!(ctx, x1423, x5, 9);
    let x1425: BytePoly_4 = bigint_nondet_rem!(ctx, x1423, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1424, x5, 13), x1425, 13),
            x1423,
            13
        ),
        73156,
        4,
    )?;
    let x1426: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x19, bigint_mul!(x1419, x1425, 8), 8), x5, 8),
            x1388,
            8
        ),
        bigint_mul!(x1419, x1385, 8),
        8
    );
    let x1427: BytePoly_9 = bigint_nondet_quot!(ctx, x1426, x5, 9);
    let x1428: BytePoly_4 = bigint_nondet_rem!(ctx, x1426, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1427, x5, 13), x1428, 13),
            x1426,
            13
        ),
        73156,
        4,
    )?;
    let x1429: BytePoly_1 = bigint_nondet_rem!(ctx, x1390, x1, 1);
    let x1430: BytePoly_4 = bigint_nondet_quot!(ctx, x1390, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1430, x1, 5), x1429, 5), x1390, 5),
        32515,
        2,
    )?;
    let x1431: BytePoly_1 = bigint_sub!(x2, x1429, 1);
    eqz(ctx, &bigint_mul!(x1429, x1431, 2), 8131, 2)?;
    let x1432: BytePoly_4 = bigint_add!(bigint_sub!(x1428, x1414, 4), x5, 4);
    let x1433: BytePoly_4 = bigint_add!(bigint_sub!(x1425, x1412, 4), x5, 4);
    let x1434: BytePoly_4 = bigint_nondet_inv!(ctx, x1433, x5, 4);
    let x1435: BytePoly_8 = bigint_mul!(x1433, x1434, 8);
    let x1436: BytePoly_9 = bigint_nondet_quot!(ctx, x1435, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1435, bigint_mul!(x1436, x5, 13), 13), x0, 13),
        73156,
        4,
    )?;
    let x1437: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x1432, x1434, 8), x5, 4);
    let x1438: BytePoly_8 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x1437, x1433, 8), x1432, 8), x5, 8),
        x5,
        8
    );
    let x1439: BytePoly_9 = bigint_nondet_quot!(ctx, x1438, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x1438, bigint_mul!(x1439, x5, 13), 13),
        73156,
        4,
    )?;
    let x1440: BytePoly_8 = bigint_mul!(x1437, x1437, 8);
    let x1441: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1440, x1412, 8), x5, 8), x1425, 8),
        x5,
        8
    );
    let x1442: BytePoly_9 = bigint_nondet_quot!(ctx, x1441, x5, 9);
    let x1443: BytePoly_4 = bigint_nondet_rem!(ctx, x1441, x5, 4);
    let x1444: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x5,
                    bigint_add!(
                        bigint_mul!(x1437, x1443, 8),
                        bigint_add!(bigint_sub!(x1414, bigint_mul!(x1437, x1412, 8), 8), x5, 8),
                        8
                    ),
                    8
                ),
                x5,
                8
            ),
            x5,
            8
        ),
        x19,
        8
    );
    let x1445: BytePoly_9 = bigint_nondet_quot!(ctx, x1444, x5, 9);
    let x1446: BytePoly_4 = bigint_nondet_rem!(ctx, x1444, x5, 4);
    let x1447: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1440, bigint_mul!(x1442, x5, 13), 13),
                        x1412,
                        13
                    ),
                    x1425,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x1443,
        13
    );
    eqz(ctx, &x1447, 73156, 4)?;
    let x1448: BytePoly_13 = bigint_sub!(
        bigint_add!(bigint_mul!(x1445, x5, 13), x1446, 13),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1437, bigint_sub!(x1412, x1443, 4), 8),
                        x1414,
                        8
                    ),
                    x5,
                    8
                ),
                x5,
                8
            ),
            x19,
            8
        ),
        13
    );
    eqz(ctx, &x1448, 73156, 4)?;
    let x1449: BytePoly_5 = bigint_add!(
        bigint_mul!(x1443, x1429, 5),
        bigint_mul!(x1412, x1431, 5),
        5
    );
    let x1450: BytePoly_5 = bigint_add!(
        bigint_mul!(x1446, x1429, 5),
        bigint_mul!(x1414, x1431, 5),
        5
    );
    let x1451: BytePoly_6 = bigint_nondet_quot!(ctx, x1449, x5, 6);
    let x1452: BytePoly_4 = bigint_nondet_rem!(ctx, x1449, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1451, x5, 10), x1452, 10),
            x1449,
            10
        ),
        48771,
        4,
    )?;
    let x1453: BytePoly_6 = bigint_nondet_quot!(ctx, x1450, x5, 6);
    let x1454: BytePoly_4 = bigint_nondet_rem!(ctx, x1450, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1453, x5, 10), x1454, 10),
            x1450,
            10
        ),
        48771,
        4,
    )?;
    let x1455: BytePoly_8 = bigint_mul!(x1425, x1425, 8);
    let x1456: BytePoly_8 = bigint_add!(bigint_add!(bigint_add!(x1455, x1455, 8), x1455, 8), x4, 8);
    let x1457: BytePoly_8 = bigint_add!(x74, x1456, 8);
    let x1458: BytePoly_4 = bigint_nondet_inv!(ctx, bigint_add!(x1428, x1428, 4), x5, 4);
    let x1459: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x1456, x1458, 12), x5, 4);
    let x1460: BytePoly_8 = bigint_mul!(x1428, x1459, 8);
    let x1461: BytePoly_8 = bigint_add!(x1460, x1460, 8);
    let x1462: BytePoly_9 = bigint_nondet_quot!(ctx, bigint_sub!(x1457, x1461, 8), x5, 9);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1462, x5, 13), x1461, 13),
            x1457,
            13
        ),
        73156,
        4,
    )?;
    let x1463: BytePoly_8 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1459, x1459, 8), x5, 8), x5, 8),
            x1425,
            8
        ),
        x1425,
        8
    );
    let x1464: BytePoly_9 = bigint_nondet_quot!(ctx, x1463, x5, 9);
    let x1465: BytePoly_4 = bigint_nondet_rem!(ctx, x1463, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1464, x5, 13), x1465, 13),
            x1463,
            13
        ),
        73156,
        4,
    )?;
    let x1466: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x19, bigint_mul!(x1459, x1465, 8), 8), x5, 8),
            x1428,
            8
        ),
        bigint_mul!(x1459, x1425, 8),
        8
    );
    let x1467: BytePoly_9 = bigint_nondet_quot!(ctx, x1466, x5, 9);
    let x1468: BytePoly_4 = bigint_nondet_rem!(ctx, x1466, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1467, x5, 13), x1468, 13),
            x1466,
            13
        ),
        73156,
        4,
    )?;
    let x1469: BytePoly_1 = bigint_nondet_rem!(ctx, x1430, x1, 1);
    let x1470: BytePoly_4 = bigint_nondet_quot!(ctx, x1430, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1470, x1, 5), x1469, 5), x1430, 5),
        32515,
        2,
    )?;
    let x1471: BytePoly_1 = bigint_sub!(x2, x1469, 1);
    eqz(ctx, &bigint_mul!(x1469, x1471, 2), 8131, 2)?;
    let x1472: BytePoly_4 = bigint_add!(bigint_sub!(x1468, x1454, 4), x5, 4);
    let x1473: BytePoly_4 = bigint_add!(bigint_sub!(x1465, x1452, 4), x5, 4);
    let x1474: BytePoly_4 = bigint_nondet_inv!(ctx, x1473, x5, 4);
    let x1475: BytePoly_8 = bigint_mul!(x1473, x1474, 8);
    let x1476: BytePoly_9 = bigint_nondet_quot!(ctx, x1475, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1475, bigint_mul!(x1476, x5, 13), 13), x0, 13),
        73156,
        4,
    )?;
    let x1477: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x1472, x1474, 8), x5, 4);
    let x1478: BytePoly_8 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x1477, x1473, 8), x1472, 8), x5, 8),
        x5,
        8
    );
    let x1479: BytePoly_9 = bigint_nondet_quot!(ctx, x1478, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x1478, bigint_mul!(x1479, x5, 13), 13),
        73156,
        4,
    )?;
    let x1480: BytePoly_8 = bigint_mul!(x1477, x1477, 8);
    let x1481: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1480, x1452, 8), x5, 8), x1465, 8),
        x5,
        8
    );
    let x1482: BytePoly_9 = bigint_nondet_quot!(ctx, x1481, x5, 9);
    let x1483: BytePoly_4 = bigint_nondet_rem!(ctx, x1481, x5, 4);
    let x1484: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x5,
                    bigint_add!(
                        bigint_mul!(x1477, x1483, 8),
                        bigint_add!(bigint_sub!(x1454, bigint_mul!(x1477, x1452, 8), 8), x5, 8),
                        8
                    ),
                    8
                ),
                x5,
                8
            ),
            x5,
            8
        ),
        x19,
        8
    );
    let x1485: BytePoly_9 = bigint_nondet_quot!(ctx, x1484, x5, 9);
    let x1486: BytePoly_4 = bigint_nondet_rem!(ctx, x1484, x5, 4);
    let x1487: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1480, bigint_mul!(x1482, x5, 13), 13),
                        x1452,
                        13
                    ),
                    x1465,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x1483,
        13
    );
    eqz(ctx, &x1487, 73156, 4)?;
    let x1488: BytePoly_13 = bigint_sub!(
        bigint_add!(bigint_mul!(x1485, x5, 13), x1486, 13),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1477, bigint_sub!(x1452, x1483, 4), 8),
                        x1454,
                        8
                    ),
                    x5,
                    8
                ),
                x5,
                8
            ),
            x19,
            8
        ),
        13
    );
    eqz(ctx, &x1488, 73156, 4)?;
    let x1489: BytePoly_5 = bigint_add!(
        bigint_mul!(x1483, x1469, 5),
        bigint_mul!(x1452, x1471, 5),
        5
    );
    let x1490: BytePoly_5 = bigint_add!(
        bigint_mul!(x1486, x1469, 5),
        bigint_mul!(x1454, x1471, 5),
        5
    );
    let x1491: BytePoly_6 = bigint_nondet_quot!(ctx, x1489, x5, 6);
    let x1492: BytePoly_4 = bigint_nondet_rem!(ctx, x1489, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1491, x5, 10), x1492, 10),
            x1489,
            10
        ),
        48771,
        4,
    )?;
    let x1493: BytePoly_6 = bigint_nondet_quot!(ctx, x1490, x5, 6);
    let x1494: BytePoly_4 = bigint_nondet_rem!(ctx, x1490, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1493, x5, 10), x1494, 10),
            x1490,
            10
        ),
        48771,
        4,
    )?;
    let x1495: BytePoly_8 = bigint_mul!(x1465, x1465, 8);
    let x1496: BytePoly_8 = bigint_add!(bigint_add!(bigint_add!(x1495, x1495, 8), x1495, 8), x4, 8);
    let x1497: BytePoly_8 = bigint_add!(x74, x1496, 8);
    let x1498: BytePoly_4 = bigint_nondet_inv!(ctx, bigint_add!(x1468, x1468, 4), x5, 4);
    let x1499: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x1496, x1498, 12), x5, 4);
    let x1500: BytePoly_8 = bigint_mul!(x1468, x1499, 8);
    let x1501: BytePoly_8 = bigint_add!(x1500, x1500, 8);
    let x1502: BytePoly_9 = bigint_nondet_quot!(ctx, bigint_sub!(x1497, x1501, 8), x5, 9);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1502, x5, 13), x1501, 13),
            x1497,
            13
        ),
        73156,
        4,
    )?;
    let x1503: BytePoly_8 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1499, x1499, 8), x5, 8), x5, 8),
            x1465,
            8
        ),
        x1465,
        8
    );
    let x1504: BytePoly_9 = bigint_nondet_quot!(ctx, x1503, x5, 9);
    let x1505: BytePoly_4 = bigint_nondet_rem!(ctx, x1503, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1504, x5, 13), x1505, 13),
            x1503,
            13
        ),
        73156,
        4,
    )?;
    let x1506: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x19, bigint_mul!(x1499, x1505, 8), 8), x5, 8),
            x1468,
            8
        ),
        bigint_mul!(x1499, x1465, 8),
        8
    );
    let x1507: BytePoly_9 = bigint_nondet_quot!(ctx, x1506, x5, 9);
    let x1508: BytePoly_4 = bigint_nondet_rem!(ctx, x1506, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1507, x5, 13), x1508, 13),
            x1506,
            13
        ),
        73156,
        4,
    )?;
    let x1509: BytePoly_1 = bigint_nondet_rem!(ctx, x1470, x1, 1);
    let x1510: BytePoly_4 = bigint_nondet_quot!(ctx, x1470, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1510, x1, 5), x1509, 5), x1470, 5),
        32515,
        2,
    )?;
    let x1511: BytePoly_1 = bigint_sub!(x2, x1509, 1);
    eqz(ctx, &bigint_mul!(x1509, x1511, 2), 8131, 2)?;
    let x1512: BytePoly_4 = bigint_add!(bigint_sub!(x1508, x1494, 4), x5, 4);
    let x1513: BytePoly_4 = bigint_add!(bigint_sub!(x1505, x1492, 4), x5, 4);
    let x1514: BytePoly_4 = bigint_nondet_inv!(ctx, x1513, x5, 4);
    let x1515: BytePoly_8 = bigint_mul!(x1513, x1514, 8);
    let x1516: BytePoly_9 = bigint_nondet_quot!(ctx, x1515, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1515, bigint_mul!(x1516, x5, 13), 13), x0, 13),
        73156,
        4,
    )?;
    let x1517: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x1512, x1514, 8), x5, 4);
    let x1518: BytePoly_8 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x1517, x1513, 8), x1512, 8), x5, 8),
        x5,
        8
    );
    let x1519: BytePoly_9 = bigint_nondet_quot!(ctx, x1518, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x1518, bigint_mul!(x1519, x5, 13), 13),
        73156,
        4,
    )?;
    let x1520: BytePoly_8 = bigint_mul!(x1517, x1517, 8);
    let x1521: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1520, x1492, 8), x5, 8), x1505, 8),
        x5,
        8
    );
    let x1522: BytePoly_9 = bigint_nondet_quot!(ctx, x1521, x5, 9);
    let x1523: BytePoly_4 = bigint_nondet_rem!(ctx, x1521, x5, 4);
    let x1524: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x5,
                    bigint_add!(
                        bigint_mul!(x1517, x1523, 8),
                        bigint_add!(bigint_sub!(x1494, bigint_mul!(x1517, x1492, 8), 8), x5, 8),
                        8
                    ),
                    8
                ),
                x5,
                8
            ),
            x5,
            8
        ),
        x19,
        8
    );
    let x1525: BytePoly_9 = bigint_nondet_quot!(ctx, x1524, x5, 9);
    let x1526: BytePoly_4 = bigint_nondet_rem!(ctx, x1524, x5, 4);
    let x1527: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1520, bigint_mul!(x1522, x5, 13), 13),
                        x1492,
                        13
                    ),
                    x1505,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x1523,
        13
    );
    eqz(ctx, &x1527, 73156, 4)?;
    let x1528: BytePoly_13 = bigint_sub!(
        bigint_add!(bigint_mul!(x1525, x5, 13), x1526, 13),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1517, bigint_sub!(x1492, x1523, 4), 8),
                        x1494,
                        8
                    ),
                    x5,
                    8
                ),
                x5,
                8
            ),
            x19,
            8
        ),
        13
    );
    eqz(ctx, &x1528, 73156, 4)?;
    let x1529: BytePoly_5 = bigint_add!(
        bigint_mul!(x1523, x1509, 5),
        bigint_mul!(x1492, x1511, 5),
        5
    );
    let x1530: BytePoly_5 = bigint_add!(
        bigint_mul!(x1526, x1509, 5),
        bigint_mul!(x1494, x1511, 5),
        5
    );
    let x1531: BytePoly_6 = bigint_nondet_quot!(ctx, x1529, x5, 6);
    let x1532: BytePoly_4 = bigint_nondet_rem!(ctx, x1529, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1531, x5, 10), x1532, 10),
            x1529,
            10
        ),
        48771,
        4,
    )?;
    let x1533: BytePoly_6 = bigint_nondet_quot!(ctx, x1530, x5, 6);
    let x1534: BytePoly_4 = bigint_nondet_rem!(ctx, x1530, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1533, x5, 10), x1534, 10),
            x1530,
            10
        ),
        48771,
        4,
    )?;
    let x1535: BytePoly_8 = bigint_mul!(x1505, x1505, 8);
    let x1536: BytePoly_8 = bigint_add!(bigint_add!(bigint_add!(x1535, x1535, 8), x1535, 8), x4, 8);
    let x1537: BytePoly_8 = bigint_add!(x74, x1536, 8);
    let x1538: BytePoly_4 = bigint_nondet_inv!(ctx, bigint_add!(x1508, x1508, 4), x5, 4);
    let x1539: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x1536, x1538, 12), x5, 4);
    let x1540: BytePoly_8 = bigint_mul!(x1508, x1539, 8);
    let x1541: BytePoly_8 = bigint_add!(x1540, x1540, 8);
    let x1542: BytePoly_9 = bigint_nondet_quot!(ctx, bigint_sub!(x1537, x1541, 8), x5, 9);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1542, x5, 13), x1541, 13),
            x1537,
            13
        ),
        73156,
        4,
    )?;
    let x1543: BytePoly_8 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1539, x1539, 8), x5, 8), x5, 8),
            x1505,
            8
        ),
        x1505,
        8
    );
    let x1544: BytePoly_9 = bigint_nondet_quot!(ctx, x1543, x5, 9);
    let x1545: BytePoly_4 = bigint_nondet_rem!(ctx, x1543, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1544, x5, 13), x1545, 13),
            x1543,
            13
        ),
        73156,
        4,
    )?;
    let x1546: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x19, bigint_mul!(x1539, x1545, 8), 8), x5, 8),
            x1508,
            8
        ),
        bigint_mul!(x1539, x1505, 8),
        8
    );
    let x1547: BytePoly_9 = bigint_nondet_quot!(ctx, x1546, x5, 9);
    let x1548: BytePoly_4 = bigint_nondet_rem!(ctx, x1546, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1547, x5, 13), x1548, 13),
            x1546,
            13
        ),
        73156,
        4,
    )?;
    let x1549: BytePoly_1 = bigint_nondet_rem!(ctx, x1510, x1, 1);
    let x1550: BytePoly_4 = bigint_nondet_quot!(ctx, x1510, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1550, x1, 5), x1549, 5), x1510, 5),
        32515,
        2,
    )?;
    let x1551: BytePoly_1 = bigint_sub!(x2, x1549, 1);
    eqz(ctx, &bigint_mul!(x1549, x1551, 2), 8131, 2)?;
    let x1552: BytePoly_4 = bigint_add!(bigint_sub!(x1548, x1534, 4), x5, 4);
    let x1553: BytePoly_4 = bigint_add!(bigint_sub!(x1545, x1532, 4), x5, 4);
    let x1554: BytePoly_4 = bigint_nondet_inv!(ctx, x1553, x5, 4);
    let x1555: BytePoly_8 = bigint_mul!(x1553, x1554, 8);
    let x1556: BytePoly_9 = bigint_nondet_quot!(ctx, x1555, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1555, bigint_mul!(x1556, x5, 13), 13), x0, 13),
        73156,
        4,
    )?;
    let x1557: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x1552, x1554, 8), x5, 4);
    let x1558: BytePoly_8 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x1557, x1553, 8), x1552, 8), x5, 8),
        x5,
        8
    );
    let x1559: BytePoly_9 = bigint_nondet_quot!(ctx, x1558, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x1558, bigint_mul!(x1559, x5, 13), 13),
        73156,
        4,
    )?;
    let x1560: BytePoly_8 = bigint_mul!(x1557, x1557, 8);
    let x1561: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1560, x1532, 8), x5, 8), x1545, 8),
        x5,
        8
    );
    let x1562: BytePoly_9 = bigint_nondet_quot!(ctx, x1561, x5, 9);
    let x1563: BytePoly_4 = bigint_nondet_rem!(ctx, x1561, x5, 4);
    let x1564: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x5,
                    bigint_add!(
                        bigint_mul!(x1557, x1563, 8),
                        bigint_add!(bigint_sub!(x1534, bigint_mul!(x1557, x1532, 8), 8), x5, 8),
                        8
                    ),
                    8
                ),
                x5,
                8
            ),
            x5,
            8
        ),
        x19,
        8
    );
    let x1565: BytePoly_9 = bigint_nondet_quot!(ctx, x1564, x5, 9);
    let x1566: BytePoly_4 = bigint_nondet_rem!(ctx, x1564, x5, 4);
    let x1567: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1560, bigint_mul!(x1562, x5, 13), 13),
                        x1532,
                        13
                    ),
                    x1545,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x1563,
        13
    );
    eqz(ctx, &x1567, 73156, 4)?;
    let x1568: BytePoly_13 = bigint_sub!(
        bigint_add!(bigint_mul!(x1565, x5, 13), x1566, 13),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1557, bigint_sub!(x1532, x1563, 4), 8),
                        x1534,
                        8
                    ),
                    x5,
                    8
                ),
                x5,
                8
            ),
            x19,
            8
        ),
        13
    );
    eqz(ctx, &x1568, 73156, 4)?;
    let x1569: BytePoly_5 = bigint_add!(
        bigint_mul!(x1563, x1549, 5),
        bigint_mul!(x1532, x1551, 5),
        5
    );
    let x1570: BytePoly_5 = bigint_add!(
        bigint_mul!(x1566, x1549, 5),
        bigint_mul!(x1534, x1551, 5),
        5
    );
    let x1571: BytePoly_6 = bigint_nondet_quot!(ctx, x1569, x5, 6);
    let x1572: BytePoly_4 = bigint_nondet_rem!(ctx, x1569, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1571, x5, 10), x1572, 10),
            x1569,
            10
        ),
        48771,
        4,
    )?;
    let x1573: BytePoly_6 = bigint_nondet_quot!(ctx, x1570, x5, 6);
    let x1574: BytePoly_4 = bigint_nondet_rem!(ctx, x1570, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1573, x5, 10), x1574, 10),
            x1570,
            10
        ),
        48771,
        4,
    )?;
    let x1575: BytePoly_8 = bigint_mul!(x1545, x1545, 8);
    let x1576: BytePoly_8 = bigint_add!(bigint_add!(bigint_add!(x1575, x1575, 8), x1575, 8), x4, 8);
    let x1577: BytePoly_8 = bigint_add!(x74, x1576, 8);
    let x1578: BytePoly_4 = bigint_nondet_inv!(ctx, bigint_add!(x1548, x1548, 4), x5, 4);
    let x1579: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x1576, x1578, 12), x5, 4);
    let x1580: BytePoly_8 = bigint_mul!(x1548, x1579, 8);
    let x1581: BytePoly_8 = bigint_add!(x1580, x1580, 8);
    let x1582: BytePoly_9 = bigint_nondet_quot!(ctx, bigint_sub!(x1577, x1581, 8), x5, 9);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1582, x5, 13), x1581, 13),
            x1577,
            13
        ),
        73156,
        4,
    )?;
    let x1583: BytePoly_8 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1579, x1579, 8), x5, 8), x5, 8),
            x1545,
            8
        ),
        x1545,
        8
    );
    let x1584: BytePoly_9 = bigint_nondet_quot!(ctx, x1583, x5, 9);
    let x1585: BytePoly_4 = bigint_nondet_rem!(ctx, x1583, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1584, x5, 13), x1585, 13),
            x1583,
            13
        ),
        73156,
        4,
    )?;
    let x1586: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x19, bigint_mul!(x1579, x1585, 8), 8), x5, 8),
            x1548,
            8
        ),
        bigint_mul!(x1579, x1545, 8),
        8
    );
    let x1587: BytePoly_9 = bigint_nondet_quot!(ctx, x1586, x5, 9);
    let x1588: BytePoly_4 = bigint_nondet_rem!(ctx, x1586, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1587, x5, 13), x1588, 13),
            x1586,
            13
        ),
        73156,
        4,
    )?;
    let x1589: BytePoly_1 = bigint_nondet_rem!(ctx, x1550, x1, 1);
    let x1590: BytePoly_4 = bigint_nondet_quot!(ctx, x1550, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1590, x1, 5), x1589, 5), x1550, 5),
        32515,
        2,
    )?;
    let x1591: BytePoly_1 = bigint_sub!(x2, x1589, 1);
    eqz(ctx, &bigint_mul!(x1589, x1591, 2), 8131, 2)?;
    let x1592: BytePoly_4 = bigint_add!(bigint_sub!(x1588, x1574, 4), x5, 4);
    let x1593: BytePoly_4 = bigint_add!(bigint_sub!(x1585, x1572, 4), x5, 4);
    let x1594: BytePoly_4 = bigint_nondet_inv!(ctx, x1593, x5, 4);
    let x1595: BytePoly_8 = bigint_mul!(x1593, x1594, 8);
    let x1596: BytePoly_9 = bigint_nondet_quot!(ctx, x1595, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1595, bigint_mul!(x1596, x5, 13), 13), x0, 13),
        73156,
        4,
    )?;
    let x1597: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x1592, x1594, 8), x5, 4);
    let x1598: BytePoly_8 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x1597, x1593, 8), x1592, 8), x5, 8),
        x5,
        8
    );
    let x1599: BytePoly_9 = bigint_nondet_quot!(ctx, x1598, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x1598, bigint_mul!(x1599, x5, 13), 13),
        73156,
        4,
    )?;
    let x1600: BytePoly_8 = bigint_mul!(x1597, x1597, 8);
    let x1601: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1600, x1572, 8), x5, 8), x1585, 8),
        x5,
        8
    );
    let x1602: BytePoly_9 = bigint_nondet_quot!(ctx, x1601, x5, 9);
    let x1603: BytePoly_4 = bigint_nondet_rem!(ctx, x1601, x5, 4);
    let x1604: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x5,
                    bigint_add!(
                        bigint_mul!(x1597, x1603, 8),
                        bigint_add!(bigint_sub!(x1574, bigint_mul!(x1597, x1572, 8), 8), x5, 8),
                        8
                    ),
                    8
                ),
                x5,
                8
            ),
            x5,
            8
        ),
        x19,
        8
    );
    let x1605: BytePoly_9 = bigint_nondet_quot!(ctx, x1604, x5, 9);
    let x1606: BytePoly_4 = bigint_nondet_rem!(ctx, x1604, x5, 4);
    let x1607: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1600, bigint_mul!(x1602, x5, 13), 13),
                        x1572,
                        13
                    ),
                    x1585,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x1603,
        13
    );
    eqz(ctx, &x1607, 73156, 4)?;
    let x1608: BytePoly_13 = bigint_sub!(
        bigint_add!(bigint_mul!(x1605, x5, 13), x1606, 13),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1597, bigint_sub!(x1572, x1603, 4), 8),
                        x1574,
                        8
                    ),
                    x5,
                    8
                ),
                x5,
                8
            ),
            x19,
            8
        ),
        13
    );
    eqz(ctx, &x1608, 73156, 4)?;
    let x1609: BytePoly_5 = bigint_add!(
        bigint_mul!(x1603, x1589, 5),
        bigint_mul!(x1572, x1591, 5),
        5
    );
    let x1610: BytePoly_5 = bigint_add!(
        bigint_mul!(x1606, x1589, 5),
        bigint_mul!(x1574, x1591, 5),
        5
    );
    let x1611: BytePoly_6 = bigint_nondet_quot!(ctx, x1609, x5, 6);
    let x1612: BytePoly_4 = bigint_nondet_rem!(ctx, x1609, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1611, x5, 10), x1612, 10),
            x1609,
            10
        ),
        48771,
        4,
    )?;
    let x1613: BytePoly_6 = bigint_nondet_quot!(ctx, x1610, x5, 6);
    let x1614: BytePoly_4 = bigint_nondet_rem!(ctx, x1610, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1613, x5, 10), x1614, 10),
            x1610,
            10
        ),
        48771,
        4,
    )?;
    let x1615: BytePoly_8 = bigint_mul!(x1585, x1585, 8);
    let x1616: BytePoly_8 = bigint_add!(bigint_add!(bigint_add!(x1615, x1615, 8), x1615, 8), x4, 8);
    let x1617: BytePoly_8 = bigint_add!(x74, x1616, 8);
    let x1618: BytePoly_4 = bigint_nondet_inv!(ctx, bigint_add!(x1588, x1588, 4), x5, 4);
    let x1619: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x1616, x1618, 12), x5, 4);
    let x1620: BytePoly_8 = bigint_mul!(x1588, x1619, 8);
    let x1621: BytePoly_8 = bigint_add!(x1620, x1620, 8);
    let x1622: BytePoly_9 = bigint_nondet_quot!(ctx, bigint_sub!(x1617, x1621, 8), x5, 9);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1622, x5, 13), x1621, 13),
            x1617,
            13
        ),
        73156,
        4,
    )?;
    let x1623: BytePoly_8 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1619, x1619, 8), x5, 8), x5, 8),
            x1585,
            8
        ),
        x1585,
        8
    );
    let x1624: BytePoly_9 = bigint_nondet_quot!(ctx, x1623, x5, 9);
    let x1625: BytePoly_4 = bigint_nondet_rem!(ctx, x1623, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1624, x5, 13), x1625, 13),
            x1623,
            13
        ),
        73156,
        4,
    )?;
    let x1626: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x19, bigint_mul!(x1619, x1625, 8), 8), x5, 8),
            x1588,
            8
        ),
        bigint_mul!(x1619, x1585, 8),
        8
    );
    let x1627: BytePoly_9 = bigint_nondet_quot!(ctx, x1626, x5, 9);
    let x1628: BytePoly_4 = bigint_nondet_rem!(ctx, x1626, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1627, x5, 13), x1628, 13),
            x1626,
            13
        ),
        73156,
        4,
    )?;
    let x1629: BytePoly_1 = bigint_nondet_rem!(ctx, x1590, x1, 1);
    let x1630: BytePoly_4 = bigint_nondet_quot!(ctx, x1590, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1630, x1, 5), x1629, 5), x1590, 5),
        32515,
        2,
    )?;
    let x1631: BytePoly_1 = bigint_sub!(x2, x1629, 1);
    eqz(ctx, &bigint_mul!(x1629, x1631, 2), 8131, 2)?;
    let x1632: BytePoly_4 = bigint_add!(bigint_sub!(x1628, x1614, 4), x5, 4);
    let x1633: BytePoly_4 = bigint_add!(bigint_sub!(x1625, x1612, 4), x5, 4);
    let x1634: BytePoly_4 = bigint_nondet_inv!(ctx, x1633, x5, 4);
    let x1635: BytePoly_8 = bigint_mul!(x1633, x1634, 8);
    let x1636: BytePoly_9 = bigint_nondet_quot!(ctx, x1635, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1635, bigint_mul!(x1636, x5, 13), 13), x0, 13),
        73156,
        4,
    )?;
    let x1637: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x1632, x1634, 8), x5, 4);
    let x1638: BytePoly_8 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x1637, x1633, 8), x1632, 8), x5, 8),
        x5,
        8
    );
    let x1639: BytePoly_9 = bigint_nondet_quot!(ctx, x1638, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x1638, bigint_mul!(x1639, x5, 13), 13),
        73156,
        4,
    )?;
    let x1640: BytePoly_8 = bigint_mul!(x1637, x1637, 8);
    let x1641: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1640, x1612, 8), x5, 8), x1625, 8),
        x5,
        8
    );
    let x1642: BytePoly_9 = bigint_nondet_quot!(ctx, x1641, x5, 9);
    let x1643: BytePoly_4 = bigint_nondet_rem!(ctx, x1641, x5, 4);
    let x1644: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x5,
                    bigint_add!(
                        bigint_mul!(x1637, x1643, 8),
                        bigint_add!(bigint_sub!(x1614, bigint_mul!(x1637, x1612, 8), 8), x5, 8),
                        8
                    ),
                    8
                ),
                x5,
                8
            ),
            x5,
            8
        ),
        x19,
        8
    );
    let x1645: BytePoly_9 = bigint_nondet_quot!(ctx, x1644, x5, 9);
    let x1646: BytePoly_4 = bigint_nondet_rem!(ctx, x1644, x5, 4);
    let x1647: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1640, bigint_mul!(x1642, x5, 13), 13),
                        x1612,
                        13
                    ),
                    x1625,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x1643,
        13
    );
    eqz(ctx, &x1647, 73156, 4)?;
    let x1648: BytePoly_13 = bigint_sub!(
        bigint_add!(bigint_mul!(x1645, x5, 13), x1646, 13),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1637, bigint_sub!(x1612, x1643, 4), 8),
                        x1614,
                        8
                    ),
                    x5,
                    8
                ),
                x5,
                8
            ),
            x19,
            8
        ),
        13
    );
    eqz(ctx, &x1648, 73156, 4)?;
    let x1649: BytePoly_5 = bigint_add!(
        bigint_mul!(x1643, x1629, 5),
        bigint_mul!(x1612, x1631, 5),
        5
    );
    let x1650: BytePoly_5 = bigint_add!(
        bigint_mul!(x1646, x1629, 5),
        bigint_mul!(x1614, x1631, 5),
        5
    );
    let x1651: BytePoly_6 = bigint_nondet_quot!(ctx, x1649, x5, 6);
    let x1652: BytePoly_4 = bigint_nondet_rem!(ctx, x1649, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1651, x5, 10), x1652, 10),
            x1649,
            10
        ),
        48771,
        4,
    )?;
    let x1653: BytePoly_6 = bigint_nondet_quot!(ctx, x1650, x5, 6);
    let x1654: BytePoly_4 = bigint_nondet_rem!(ctx, x1650, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1653, x5, 10), x1654, 10),
            x1650,
            10
        ),
        48771,
        4,
    )?;
    let x1655: BytePoly_8 = bigint_mul!(x1625, x1625, 8);
    let x1656: BytePoly_8 = bigint_add!(bigint_add!(bigint_add!(x1655, x1655, 8), x1655, 8), x4, 8);
    let x1657: BytePoly_8 = bigint_add!(x74, x1656, 8);
    let x1658: BytePoly_4 = bigint_nondet_inv!(ctx, bigint_add!(x1628, x1628, 4), x5, 4);
    let x1659: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x1656, x1658, 12), x5, 4);
    let x1660: BytePoly_8 = bigint_mul!(x1628, x1659, 8);
    let x1661: BytePoly_8 = bigint_add!(x1660, x1660, 8);
    let x1662: BytePoly_9 = bigint_nondet_quot!(ctx, bigint_sub!(x1657, x1661, 8), x5, 9);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1662, x5, 13), x1661, 13),
            x1657,
            13
        ),
        73156,
        4,
    )?;
    let x1663: BytePoly_8 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1659, x1659, 8), x5, 8), x5, 8),
            x1625,
            8
        ),
        x1625,
        8
    );
    let x1664: BytePoly_9 = bigint_nondet_quot!(ctx, x1663, x5, 9);
    let x1665: BytePoly_4 = bigint_nondet_rem!(ctx, x1663, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1664, x5, 13), x1665, 13),
            x1663,
            13
        ),
        73156,
        4,
    )?;
    let x1666: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x19, bigint_mul!(x1659, x1665, 8), 8), x5, 8),
            x1628,
            8
        ),
        bigint_mul!(x1659, x1625, 8),
        8
    );
    let x1667: BytePoly_9 = bigint_nondet_quot!(ctx, x1666, x5, 9);
    let x1668: BytePoly_4 = bigint_nondet_rem!(ctx, x1666, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1667, x5, 13), x1668, 13),
            x1666,
            13
        ),
        73156,
        4,
    )?;
    let x1669: BytePoly_1 = bigint_nondet_rem!(ctx, x1630, x1, 1);
    let x1670: BytePoly_4 = bigint_nondet_quot!(ctx, x1630, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1670, x1, 5), x1669, 5), x1630, 5),
        32515,
        2,
    )?;
    let x1671: BytePoly_1 = bigint_sub!(x2, x1669, 1);
    eqz(ctx, &bigint_mul!(x1669, x1671, 2), 8131, 2)?;
    let x1672: BytePoly_4 = bigint_add!(bigint_sub!(x1668, x1654, 4), x5, 4);
    let x1673: BytePoly_4 = bigint_add!(bigint_sub!(x1665, x1652, 4), x5, 4);
    let x1674: BytePoly_4 = bigint_nondet_inv!(ctx, x1673, x5, 4);
    let x1675: BytePoly_8 = bigint_mul!(x1673, x1674, 8);
    let x1676: BytePoly_9 = bigint_nondet_quot!(ctx, x1675, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1675, bigint_mul!(x1676, x5, 13), 13), x0, 13),
        73156,
        4,
    )?;
    let x1677: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x1672, x1674, 8), x5, 4);
    let x1678: BytePoly_8 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x1677, x1673, 8), x1672, 8), x5, 8),
        x5,
        8
    );
    let x1679: BytePoly_9 = bigint_nondet_quot!(ctx, x1678, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x1678, bigint_mul!(x1679, x5, 13), 13),
        73156,
        4,
    )?;
    let x1680: BytePoly_8 = bigint_mul!(x1677, x1677, 8);
    let x1681: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1680, x1652, 8), x5, 8), x1665, 8),
        x5,
        8
    );
    let x1682: BytePoly_9 = bigint_nondet_quot!(ctx, x1681, x5, 9);
    let x1683: BytePoly_4 = bigint_nondet_rem!(ctx, x1681, x5, 4);
    let x1684: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x5,
                    bigint_add!(
                        bigint_mul!(x1677, x1683, 8),
                        bigint_add!(bigint_sub!(x1654, bigint_mul!(x1677, x1652, 8), 8), x5, 8),
                        8
                    ),
                    8
                ),
                x5,
                8
            ),
            x5,
            8
        ),
        x19,
        8
    );
    let x1685: BytePoly_9 = bigint_nondet_quot!(ctx, x1684, x5, 9);
    let x1686: BytePoly_4 = bigint_nondet_rem!(ctx, x1684, x5, 4);
    let x1687: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1680, bigint_mul!(x1682, x5, 13), 13),
                        x1652,
                        13
                    ),
                    x1665,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x1683,
        13
    );
    eqz(ctx, &x1687, 73156, 4)?;
    let x1688: BytePoly_13 = bigint_sub!(
        bigint_add!(bigint_mul!(x1685, x5, 13), x1686, 13),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1677, bigint_sub!(x1652, x1683, 4), 8),
                        x1654,
                        8
                    ),
                    x5,
                    8
                ),
                x5,
                8
            ),
            x19,
            8
        ),
        13
    );
    eqz(ctx, &x1688, 73156, 4)?;
    let x1689: BytePoly_5 = bigint_add!(
        bigint_mul!(x1683, x1669, 5),
        bigint_mul!(x1652, x1671, 5),
        5
    );
    let x1690: BytePoly_5 = bigint_add!(
        bigint_mul!(x1686, x1669, 5),
        bigint_mul!(x1654, x1671, 5),
        5
    );
    let x1691: BytePoly_6 = bigint_nondet_quot!(ctx, x1689, x5, 6);
    let x1692: BytePoly_4 = bigint_nondet_rem!(ctx, x1689, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1691, x5, 10), x1692, 10),
            x1689,
            10
        ),
        48771,
        4,
    )?;
    let x1693: BytePoly_6 = bigint_nondet_quot!(ctx, x1690, x5, 6);
    let x1694: BytePoly_4 = bigint_nondet_rem!(ctx, x1690, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1693, x5, 10), x1694, 10),
            x1690,
            10
        ),
        48771,
        4,
    )?;
    let x1695: BytePoly_8 = bigint_mul!(x1665, x1665, 8);
    let x1696: BytePoly_8 = bigint_add!(bigint_add!(bigint_add!(x1695, x1695, 8), x1695, 8), x4, 8);
    let x1697: BytePoly_8 = bigint_add!(x74, x1696, 8);
    let x1698: BytePoly_4 = bigint_nondet_inv!(ctx, bigint_add!(x1668, x1668, 4), x5, 4);
    let x1699: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x1696, x1698, 12), x5, 4);
    let x1700: BytePoly_8 = bigint_mul!(x1668, x1699, 8);
    let x1701: BytePoly_8 = bigint_add!(x1700, x1700, 8);
    let x1702: BytePoly_9 = bigint_nondet_quot!(ctx, bigint_sub!(x1697, x1701, 8), x5, 9);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1702, x5, 13), x1701, 13),
            x1697,
            13
        ),
        73156,
        4,
    )?;
    let x1703: BytePoly_8 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1699, x1699, 8), x5, 8), x5, 8),
            x1665,
            8
        ),
        x1665,
        8
    );
    let x1704: BytePoly_9 = bigint_nondet_quot!(ctx, x1703, x5, 9);
    let x1705: BytePoly_4 = bigint_nondet_rem!(ctx, x1703, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1704, x5, 13), x1705, 13),
            x1703,
            13
        ),
        73156,
        4,
    )?;
    let x1706: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x19, bigint_mul!(x1699, x1705, 8), 8), x5, 8),
            x1668,
            8
        ),
        bigint_mul!(x1699, x1665, 8),
        8
    );
    let x1707: BytePoly_9 = bigint_nondet_quot!(ctx, x1706, x5, 9);
    let x1708: BytePoly_4 = bigint_nondet_rem!(ctx, x1706, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1707, x5, 13), x1708, 13),
            x1706,
            13
        ),
        73156,
        4,
    )?;
    let x1709: BytePoly_1 = bigint_nondet_rem!(ctx, x1670, x1, 1);
    let x1710: BytePoly_4 = bigint_nondet_quot!(ctx, x1670, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1710, x1, 5), x1709, 5), x1670, 5),
        32515,
        2,
    )?;
    let x1711: BytePoly_1 = bigint_sub!(x2, x1709, 1);
    eqz(ctx, &bigint_mul!(x1709, x1711, 2), 8131, 2)?;
    let x1712: BytePoly_4 = bigint_add!(bigint_sub!(x1708, x1694, 4), x5, 4);
    let x1713: BytePoly_4 = bigint_add!(bigint_sub!(x1705, x1692, 4), x5, 4);
    let x1714: BytePoly_4 = bigint_nondet_inv!(ctx, x1713, x5, 4);
    let x1715: BytePoly_8 = bigint_mul!(x1713, x1714, 8);
    let x1716: BytePoly_9 = bigint_nondet_quot!(ctx, x1715, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1715, bigint_mul!(x1716, x5, 13), 13), x0, 13),
        73156,
        4,
    )?;
    let x1717: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x1712, x1714, 8), x5, 4);
    let x1718: BytePoly_8 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x1717, x1713, 8), x1712, 8), x5, 8),
        x5,
        8
    );
    let x1719: BytePoly_9 = bigint_nondet_quot!(ctx, x1718, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x1718, bigint_mul!(x1719, x5, 13), 13),
        73156,
        4,
    )?;
    let x1720: BytePoly_8 = bigint_mul!(x1717, x1717, 8);
    let x1721: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1720, x1692, 8), x5, 8), x1705, 8),
        x5,
        8
    );
    let x1722: BytePoly_9 = bigint_nondet_quot!(ctx, x1721, x5, 9);
    let x1723: BytePoly_4 = bigint_nondet_rem!(ctx, x1721, x5, 4);
    let x1724: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x5,
                    bigint_add!(
                        bigint_mul!(x1717, x1723, 8),
                        bigint_add!(bigint_sub!(x1694, bigint_mul!(x1717, x1692, 8), 8), x5, 8),
                        8
                    ),
                    8
                ),
                x5,
                8
            ),
            x5,
            8
        ),
        x19,
        8
    );
    let x1725: BytePoly_9 = bigint_nondet_quot!(ctx, x1724, x5, 9);
    let x1726: BytePoly_4 = bigint_nondet_rem!(ctx, x1724, x5, 4);
    let x1727: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1720, bigint_mul!(x1722, x5, 13), 13),
                        x1692,
                        13
                    ),
                    x1705,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x1723,
        13
    );
    eqz(ctx, &x1727, 73156, 4)?;
    let x1728: BytePoly_13 = bigint_sub!(
        bigint_add!(bigint_mul!(x1725, x5, 13), x1726, 13),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1717, bigint_sub!(x1692, x1723, 4), 8),
                        x1694,
                        8
                    ),
                    x5,
                    8
                ),
                x5,
                8
            ),
            x19,
            8
        ),
        13
    );
    eqz(ctx, &x1728, 73156, 4)?;
    let x1729: BytePoly_5 = bigint_add!(
        bigint_mul!(x1723, x1709, 5),
        bigint_mul!(x1692, x1711, 5),
        5
    );
    let x1730: BytePoly_5 = bigint_add!(
        bigint_mul!(x1726, x1709, 5),
        bigint_mul!(x1694, x1711, 5),
        5
    );
    let x1731: BytePoly_6 = bigint_nondet_quot!(ctx, x1729, x5, 6);
    let x1732: BytePoly_4 = bigint_nondet_rem!(ctx, x1729, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1731, x5, 10), x1732, 10),
            x1729,
            10
        ),
        48771,
        4,
    )?;
    let x1733: BytePoly_6 = bigint_nondet_quot!(ctx, x1730, x5, 6);
    let x1734: BytePoly_4 = bigint_nondet_rem!(ctx, x1730, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1733, x5, 10), x1734, 10),
            x1730,
            10
        ),
        48771,
        4,
    )?;
    let x1735: BytePoly_8 = bigint_mul!(x1705, x1705, 8);
    let x1736: BytePoly_8 = bigint_add!(bigint_add!(bigint_add!(x1735, x1735, 8), x1735, 8), x4, 8);
    let x1737: BytePoly_8 = bigint_add!(x74, x1736, 8);
    let x1738: BytePoly_4 = bigint_nondet_inv!(ctx, bigint_add!(x1708, x1708, 4), x5, 4);
    let x1739: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x1736, x1738, 12), x5, 4);
    let x1740: BytePoly_8 = bigint_mul!(x1708, x1739, 8);
    let x1741: BytePoly_8 = bigint_add!(x1740, x1740, 8);
    let x1742: BytePoly_9 = bigint_nondet_quot!(ctx, bigint_sub!(x1737, x1741, 8), x5, 9);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1742, x5, 13), x1741, 13),
            x1737,
            13
        ),
        73156,
        4,
    )?;
    let x1743: BytePoly_8 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1739, x1739, 8), x5, 8), x5, 8),
            x1705,
            8
        ),
        x1705,
        8
    );
    let x1744: BytePoly_9 = bigint_nondet_quot!(ctx, x1743, x5, 9);
    let x1745: BytePoly_4 = bigint_nondet_rem!(ctx, x1743, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1744, x5, 13), x1745, 13),
            x1743,
            13
        ),
        73156,
        4,
    )?;
    let x1746: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x19, bigint_mul!(x1739, x1745, 8), 8), x5, 8),
            x1708,
            8
        ),
        bigint_mul!(x1739, x1705, 8),
        8
    );
    let x1747: BytePoly_9 = bigint_nondet_quot!(ctx, x1746, x5, 9);
    let x1748: BytePoly_4 = bigint_nondet_rem!(ctx, x1746, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1747, x5, 13), x1748, 13),
            x1746,
            13
        ),
        73156,
        4,
    )?;
    let x1749: BytePoly_1 = bigint_nondet_rem!(ctx, x1710, x1, 1);
    let x1750: BytePoly_4 = bigint_nondet_quot!(ctx, x1710, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1750, x1, 5), x1749, 5), x1710, 5),
        32515,
        2,
    )?;
    let x1751: BytePoly_1 = bigint_sub!(x2, x1749, 1);
    eqz(ctx, &bigint_mul!(x1749, x1751, 2), 8131, 2)?;
    let x1752: BytePoly_4 = bigint_add!(bigint_sub!(x1748, x1734, 4), x5, 4);
    let x1753: BytePoly_4 = bigint_add!(bigint_sub!(x1745, x1732, 4), x5, 4);
    let x1754: BytePoly_4 = bigint_nondet_inv!(ctx, x1753, x5, 4);
    let x1755: BytePoly_8 = bigint_mul!(x1753, x1754, 8);
    let x1756: BytePoly_9 = bigint_nondet_quot!(ctx, x1755, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1755, bigint_mul!(x1756, x5, 13), 13), x0, 13),
        73156,
        4,
    )?;
    let x1757: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x1752, x1754, 8), x5, 4);
    let x1758: BytePoly_8 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x1757, x1753, 8), x1752, 8), x5, 8),
        x5,
        8
    );
    let x1759: BytePoly_9 = bigint_nondet_quot!(ctx, x1758, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x1758, bigint_mul!(x1759, x5, 13), 13),
        73156,
        4,
    )?;
    let x1760: BytePoly_8 = bigint_mul!(x1757, x1757, 8);
    let x1761: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1760, x1732, 8), x5, 8), x1745, 8),
        x5,
        8
    );
    let x1762: BytePoly_9 = bigint_nondet_quot!(ctx, x1761, x5, 9);
    let x1763: BytePoly_4 = bigint_nondet_rem!(ctx, x1761, x5, 4);
    let x1764: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x5,
                    bigint_add!(
                        bigint_mul!(x1757, x1763, 8),
                        bigint_add!(bigint_sub!(x1734, bigint_mul!(x1757, x1732, 8), 8), x5, 8),
                        8
                    ),
                    8
                ),
                x5,
                8
            ),
            x5,
            8
        ),
        x19,
        8
    );
    let x1765: BytePoly_9 = bigint_nondet_quot!(ctx, x1764, x5, 9);
    let x1766: BytePoly_4 = bigint_nondet_rem!(ctx, x1764, x5, 4);
    let x1767: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1760, bigint_mul!(x1762, x5, 13), 13),
                        x1732,
                        13
                    ),
                    x1745,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x1763,
        13
    );
    eqz(ctx, &x1767, 73156, 4)?;
    let x1768: BytePoly_13 = bigint_sub!(
        bigint_add!(bigint_mul!(x1765, x5, 13), x1766, 13),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1757, bigint_sub!(x1732, x1763, 4), 8),
                        x1734,
                        8
                    ),
                    x5,
                    8
                ),
                x5,
                8
            ),
            x19,
            8
        ),
        13
    );
    eqz(ctx, &x1768, 73156, 4)?;
    let x1769: BytePoly_5 = bigint_add!(
        bigint_mul!(x1763, x1749, 5),
        bigint_mul!(x1732, x1751, 5),
        5
    );
    let x1770: BytePoly_5 = bigint_add!(
        bigint_mul!(x1766, x1749, 5),
        bigint_mul!(x1734, x1751, 5),
        5
    );
    let x1771: BytePoly_6 = bigint_nondet_quot!(ctx, x1769, x5, 6);
    let x1772: BytePoly_4 = bigint_nondet_rem!(ctx, x1769, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1771, x5, 10), x1772, 10),
            x1769,
            10
        ),
        48771,
        4,
    )?;
    let x1773: BytePoly_6 = bigint_nondet_quot!(ctx, x1770, x5, 6);
    let x1774: BytePoly_4 = bigint_nondet_rem!(ctx, x1770, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1773, x5, 10), x1774, 10),
            x1770,
            10
        ),
        48771,
        4,
    )?;
    let x1775: BytePoly_8 = bigint_mul!(x1745, x1745, 8);
    let x1776: BytePoly_8 = bigint_add!(bigint_add!(bigint_add!(x1775, x1775, 8), x1775, 8), x4, 8);
    let x1777: BytePoly_8 = bigint_add!(x74, x1776, 8);
    let x1778: BytePoly_4 = bigint_nondet_inv!(ctx, bigint_add!(x1748, x1748, 4), x5, 4);
    let x1779: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x1776, x1778, 12), x5, 4);
    let x1780: BytePoly_8 = bigint_mul!(x1748, x1779, 8);
    let x1781: BytePoly_8 = bigint_add!(x1780, x1780, 8);
    let x1782: BytePoly_9 = bigint_nondet_quot!(ctx, bigint_sub!(x1777, x1781, 8), x5, 9);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1782, x5, 13), x1781, 13),
            x1777,
            13
        ),
        73156,
        4,
    )?;
    let x1783: BytePoly_8 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1779, x1779, 8), x5, 8), x5, 8),
            x1745,
            8
        ),
        x1745,
        8
    );
    let x1784: BytePoly_9 = bigint_nondet_quot!(ctx, x1783, x5, 9);
    let x1785: BytePoly_4 = bigint_nondet_rem!(ctx, x1783, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1784, x5, 13), x1785, 13),
            x1783,
            13
        ),
        73156,
        4,
    )?;
    let x1786: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x19, bigint_mul!(x1779, x1785, 8), 8), x5, 8),
            x1748,
            8
        ),
        bigint_mul!(x1779, x1745, 8),
        8
    );
    let x1787: BytePoly_9 = bigint_nondet_quot!(ctx, x1786, x5, 9);
    let x1788: BytePoly_4 = bigint_nondet_rem!(ctx, x1786, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1787, x5, 13), x1788, 13),
            x1786,
            13
        ),
        73156,
        4,
    )?;
    let x1789: BytePoly_1 = bigint_nondet_rem!(ctx, x1750, x1, 1);
    let x1790: BytePoly_4 = bigint_nondet_quot!(ctx, x1750, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1790, x1, 5), x1789, 5), x1750, 5),
        32515,
        2,
    )?;
    let x1791: BytePoly_1 = bigint_sub!(x2, x1789, 1);
    eqz(ctx, &bigint_mul!(x1789, x1791, 2), 8131, 2)?;
    let x1792: BytePoly_4 = bigint_add!(bigint_sub!(x1788, x1774, 4), x5, 4);
    let x1793: BytePoly_4 = bigint_add!(bigint_sub!(x1785, x1772, 4), x5, 4);
    let x1794: BytePoly_4 = bigint_nondet_inv!(ctx, x1793, x5, 4);
    let x1795: BytePoly_8 = bigint_mul!(x1793, x1794, 8);
    let x1796: BytePoly_9 = bigint_nondet_quot!(ctx, x1795, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1795, bigint_mul!(x1796, x5, 13), 13), x0, 13),
        73156,
        4,
    )?;
    let x1797: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x1792, x1794, 8), x5, 4);
    let x1798: BytePoly_8 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x1797, x1793, 8), x1792, 8), x5, 8),
        x5,
        8
    );
    let x1799: BytePoly_9 = bigint_nondet_quot!(ctx, x1798, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x1798, bigint_mul!(x1799, x5, 13), 13),
        73156,
        4,
    )?;
    let x1800: BytePoly_8 = bigint_mul!(x1797, x1797, 8);
    let x1801: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1800, x1772, 8), x5, 8), x1785, 8),
        x5,
        8
    );
    let x1802: BytePoly_9 = bigint_nondet_quot!(ctx, x1801, x5, 9);
    let x1803: BytePoly_4 = bigint_nondet_rem!(ctx, x1801, x5, 4);
    let x1804: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x5,
                    bigint_add!(
                        bigint_mul!(x1797, x1803, 8),
                        bigint_add!(bigint_sub!(x1774, bigint_mul!(x1797, x1772, 8), 8), x5, 8),
                        8
                    ),
                    8
                ),
                x5,
                8
            ),
            x5,
            8
        ),
        x19,
        8
    );
    let x1805: BytePoly_9 = bigint_nondet_quot!(ctx, x1804, x5, 9);
    let x1806: BytePoly_4 = bigint_nondet_rem!(ctx, x1804, x5, 4);
    let x1807: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1800, bigint_mul!(x1802, x5, 13), 13),
                        x1772,
                        13
                    ),
                    x1785,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x1803,
        13
    );
    eqz(ctx, &x1807, 73156, 4)?;
    let x1808: BytePoly_13 = bigint_sub!(
        bigint_add!(bigint_mul!(x1805, x5, 13), x1806, 13),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1797, bigint_sub!(x1772, x1803, 4), 8),
                        x1774,
                        8
                    ),
                    x5,
                    8
                ),
                x5,
                8
            ),
            x19,
            8
        ),
        13
    );
    eqz(ctx, &x1808, 73156, 4)?;
    let x1809: BytePoly_5 = bigint_add!(
        bigint_mul!(x1803, x1789, 5),
        bigint_mul!(x1772, x1791, 5),
        5
    );
    let x1810: BytePoly_5 = bigint_add!(
        bigint_mul!(x1806, x1789, 5),
        bigint_mul!(x1774, x1791, 5),
        5
    );
    let x1811: BytePoly_6 = bigint_nondet_quot!(ctx, x1809, x5, 6);
    let x1812: BytePoly_4 = bigint_nondet_rem!(ctx, x1809, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1811, x5, 10), x1812, 10),
            x1809,
            10
        ),
        48771,
        4,
    )?;
    let x1813: BytePoly_6 = bigint_nondet_quot!(ctx, x1810, x5, 6);
    let x1814: BytePoly_4 = bigint_nondet_rem!(ctx, x1810, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1813, x5, 10), x1814, 10),
            x1810,
            10
        ),
        48771,
        4,
    )?;
    let x1815: BytePoly_8 = bigint_mul!(x1785, x1785, 8);
    let x1816: BytePoly_8 = bigint_add!(bigint_add!(bigint_add!(x1815, x1815, 8), x1815, 8), x4, 8);
    let x1817: BytePoly_8 = bigint_add!(x74, x1816, 8);
    let x1818: BytePoly_4 = bigint_nondet_inv!(ctx, bigint_add!(x1788, x1788, 4), x5, 4);
    let x1819: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x1816, x1818, 12), x5, 4);
    let x1820: BytePoly_8 = bigint_mul!(x1788, x1819, 8);
    let x1821: BytePoly_8 = bigint_add!(x1820, x1820, 8);
    let x1822: BytePoly_9 = bigint_nondet_quot!(ctx, bigint_sub!(x1817, x1821, 8), x5, 9);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1822, x5, 13), x1821, 13),
            x1817,
            13
        ),
        73156,
        4,
    )?;
    let x1823: BytePoly_8 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1819, x1819, 8), x5, 8), x5, 8),
            x1785,
            8
        ),
        x1785,
        8
    );
    let x1824: BytePoly_9 = bigint_nondet_quot!(ctx, x1823, x5, 9);
    let x1825: BytePoly_4 = bigint_nondet_rem!(ctx, x1823, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1824, x5, 13), x1825, 13),
            x1823,
            13
        ),
        73156,
        4,
    )?;
    let x1826: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x19, bigint_mul!(x1819, x1825, 8), 8), x5, 8),
            x1788,
            8
        ),
        bigint_mul!(x1819, x1785, 8),
        8
    );
    let x1827: BytePoly_9 = bigint_nondet_quot!(ctx, x1826, x5, 9);
    let x1828: BytePoly_4 = bigint_nondet_rem!(ctx, x1826, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1827, x5, 13), x1828, 13),
            x1826,
            13
        ),
        73156,
        4,
    )?;
    let x1829: BytePoly_1 = bigint_nondet_rem!(ctx, x1790, x1, 1);
    let x1830: BytePoly_4 = bigint_nondet_quot!(ctx, x1790, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1830, x1, 5), x1829, 5), x1790, 5),
        32515,
        2,
    )?;
    let x1831: BytePoly_1 = bigint_sub!(x2, x1829, 1);
    eqz(ctx, &bigint_mul!(x1829, x1831, 2), 8131, 2)?;
    let x1832: BytePoly_4 = bigint_add!(bigint_sub!(x1828, x1814, 4), x5, 4);
    let x1833: BytePoly_4 = bigint_add!(bigint_sub!(x1825, x1812, 4), x5, 4);
    let x1834: BytePoly_4 = bigint_nondet_inv!(ctx, x1833, x5, 4);
    let x1835: BytePoly_8 = bigint_mul!(x1833, x1834, 8);
    let x1836: BytePoly_9 = bigint_nondet_quot!(ctx, x1835, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1835, bigint_mul!(x1836, x5, 13), 13), x0, 13),
        73156,
        4,
    )?;
    let x1837: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x1832, x1834, 8), x5, 4);
    let x1838: BytePoly_8 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x1837, x1833, 8), x1832, 8), x5, 8),
        x5,
        8
    );
    let x1839: BytePoly_9 = bigint_nondet_quot!(ctx, x1838, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x1838, bigint_mul!(x1839, x5, 13), 13),
        73156,
        4,
    )?;
    let x1840: BytePoly_8 = bigint_mul!(x1837, x1837, 8);
    let x1841: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1840, x1812, 8), x5, 8), x1825, 8),
        x5,
        8
    );
    let x1842: BytePoly_9 = bigint_nondet_quot!(ctx, x1841, x5, 9);
    let x1843: BytePoly_4 = bigint_nondet_rem!(ctx, x1841, x5, 4);
    let x1844: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x5,
                    bigint_add!(
                        bigint_mul!(x1837, x1843, 8),
                        bigint_add!(bigint_sub!(x1814, bigint_mul!(x1837, x1812, 8), 8), x5, 8),
                        8
                    ),
                    8
                ),
                x5,
                8
            ),
            x5,
            8
        ),
        x19,
        8
    );
    let x1845: BytePoly_9 = bigint_nondet_quot!(ctx, x1844, x5, 9);
    let x1846: BytePoly_4 = bigint_nondet_rem!(ctx, x1844, x5, 4);
    let x1847: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1840, bigint_mul!(x1842, x5, 13), 13),
                        x1812,
                        13
                    ),
                    x1825,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x1843,
        13
    );
    eqz(ctx, &x1847, 73156, 4)?;
    let x1848: BytePoly_13 = bigint_sub!(
        bigint_add!(bigint_mul!(x1845, x5, 13), x1846, 13),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1837, bigint_sub!(x1812, x1843, 4), 8),
                        x1814,
                        8
                    ),
                    x5,
                    8
                ),
                x5,
                8
            ),
            x19,
            8
        ),
        13
    );
    eqz(ctx, &x1848, 73156, 4)?;
    let x1849: BytePoly_5 = bigint_add!(
        bigint_mul!(x1843, x1829, 5),
        bigint_mul!(x1812, x1831, 5),
        5
    );
    let x1850: BytePoly_5 = bigint_add!(
        bigint_mul!(x1846, x1829, 5),
        bigint_mul!(x1814, x1831, 5),
        5
    );
    let x1851: BytePoly_6 = bigint_nondet_quot!(ctx, x1849, x5, 6);
    let x1852: BytePoly_4 = bigint_nondet_rem!(ctx, x1849, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1851, x5, 10), x1852, 10),
            x1849,
            10
        ),
        48771,
        4,
    )?;
    let x1853: BytePoly_6 = bigint_nondet_quot!(ctx, x1850, x5, 6);
    let x1854: BytePoly_4 = bigint_nondet_rem!(ctx, x1850, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1853, x5, 10), x1854, 10),
            x1850,
            10
        ),
        48771,
        4,
    )?;
    let x1855: BytePoly_8 = bigint_mul!(x1825, x1825, 8);
    let x1856: BytePoly_8 = bigint_add!(bigint_add!(bigint_add!(x1855, x1855, 8), x1855, 8), x4, 8);
    let x1857: BytePoly_8 = bigint_add!(x74, x1856, 8);
    let x1858: BytePoly_4 = bigint_nondet_inv!(ctx, bigint_add!(x1828, x1828, 4), x5, 4);
    let x1859: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x1856, x1858, 12), x5, 4);
    let x1860: BytePoly_8 = bigint_mul!(x1828, x1859, 8);
    let x1861: BytePoly_8 = bigint_add!(x1860, x1860, 8);
    let x1862: BytePoly_9 = bigint_nondet_quot!(ctx, bigint_sub!(x1857, x1861, 8), x5, 9);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1862, x5, 13), x1861, 13),
            x1857,
            13
        ),
        73156,
        4,
    )?;
    let x1863: BytePoly_8 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1859, x1859, 8), x5, 8), x5, 8),
            x1825,
            8
        ),
        x1825,
        8
    );
    let x1864: BytePoly_9 = bigint_nondet_quot!(ctx, x1863, x5, 9);
    let x1865: BytePoly_4 = bigint_nondet_rem!(ctx, x1863, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1864, x5, 13), x1865, 13),
            x1863,
            13
        ),
        73156,
        4,
    )?;
    let x1866: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x19, bigint_mul!(x1859, x1865, 8), 8), x5, 8),
            x1828,
            8
        ),
        bigint_mul!(x1859, x1825, 8),
        8
    );
    let x1867: BytePoly_9 = bigint_nondet_quot!(ctx, x1866, x5, 9);
    let x1868: BytePoly_4 = bigint_nondet_rem!(ctx, x1866, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1867, x5, 13), x1868, 13),
            x1866,
            13
        ),
        73156,
        4,
    )?;
    let x1869: BytePoly_1 = bigint_nondet_rem!(ctx, x1830, x1, 1);
    let x1870: BytePoly_4 = bigint_nondet_quot!(ctx, x1830, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1870, x1, 5), x1869, 5), x1830, 5),
        32515,
        2,
    )?;
    let x1871: BytePoly_1 = bigint_sub!(x2, x1869, 1);
    eqz(ctx, &bigint_mul!(x1869, x1871, 2), 8131, 2)?;
    let x1872: BytePoly_4 = bigint_add!(bigint_sub!(x1868, x1854, 4), x5, 4);
    let x1873: BytePoly_4 = bigint_add!(bigint_sub!(x1865, x1852, 4), x5, 4);
    let x1874: BytePoly_4 = bigint_nondet_inv!(ctx, x1873, x5, 4);
    let x1875: BytePoly_8 = bigint_mul!(x1873, x1874, 8);
    let x1876: BytePoly_9 = bigint_nondet_quot!(ctx, x1875, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1875, bigint_mul!(x1876, x5, 13), 13), x0, 13),
        73156,
        4,
    )?;
    let x1877: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x1872, x1874, 8), x5, 4);
    let x1878: BytePoly_8 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x1877, x1873, 8), x1872, 8), x5, 8),
        x5,
        8
    );
    let x1879: BytePoly_9 = bigint_nondet_quot!(ctx, x1878, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x1878, bigint_mul!(x1879, x5, 13), 13),
        73156,
        4,
    )?;
    let x1880: BytePoly_8 = bigint_mul!(x1877, x1877, 8);
    let x1881: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1880, x1852, 8), x5, 8), x1865, 8),
        x5,
        8
    );
    let x1882: BytePoly_9 = bigint_nondet_quot!(ctx, x1881, x5, 9);
    let x1883: BytePoly_4 = bigint_nondet_rem!(ctx, x1881, x5, 4);
    let x1884: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x5,
                    bigint_add!(
                        bigint_mul!(x1877, x1883, 8),
                        bigint_add!(bigint_sub!(x1854, bigint_mul!(x1877, x1852, 8), 8), x5, 8),
                        8
                    ),
                    8
                ),
                x5,
                8
            ),
            x5,
            8
        ),
        x19,
        8
    );
    let x1885: BytePoly_9 = bigint_nondet_quot!(ctx, x1884, x5, 9);
    let x1886: BytePoly_4 = bigint_nondet_rem!(ctx, x1884, x5, 4);
    let x1887: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1880, bigint_mul!(x1882, x5, 13), 13),
                        x1852,
                        13
                    ),
                    x1865,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x1883,
        13
    );
    eqz(ctx, &x1887, 73156, 4)?;
    let x1888: BytePoly_13 = bigint_sub!(
        bigint_add!(bigint_mul!(x1885, x5, 13), x1886, 13),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1877, bigint_sub!(x1852, x1883, 4), 8),
                        x1854,
                        8
                    ),
                    x5,
                    8
                ),
                x5,
                8
            ),
            x19,
            8
        ),
        13
    );
    eqz(ctx, &x1888, 73156, 4)?;
    let x1889: BytePoly_5 = bigint_add!(
        bigint_mul!(x1883, x1869, 5),
        bigint_mul!(x1852, x1871, 5),
        5
    );
    let x1890: BytePoly_5 = bigint_add!(
        bigint_mul!(x1886, x1869, 5),
        bigint_mul!(x1854, x1871, 5),
        5
    );
    let x1891: BytePoly_6 = bigint_nondet_quot!(ctx, x1889, x5, 6);
    let x1892: BytePoly_4 = bigint_nondet_rem!(ctx, x1889, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1891, x5, 10), x1892, 10),
            x1889,
            10
        ),
        48771,
        4,
    )?;
    let x1893: BytePoly_6 = bigint_nondet_quot!(ctx, x1890, x5, 6);
    let x1894: BytePoly_4 = bigint_nondet_rem!(ctx, x1890, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1893, x5, 10), x1894, 10),
            x1890,
            10
        ),
        48771,
        4,
    )?;
    let x1895: BytePoly_8 = bigint_mul!(x1865, x1865, 8);
    let x1896: BytePoly_8 = bigint_add!(bigint_add!(bigint_add!(x1895, x1895, 8), x1895, 8), x4, 8);
    let x1897: BytePoly_8 = bigint_add!(x74, x1896, 8);
    let x1898: BytePoly_4 = bigint_nondet_inv!(ctx, bigint_add!(x1868, x1868, 4), x5, 4);
    let x1899: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x1896, x1898, 12), x5, 4);
    let x1900: BytePoly_8 = bigint_mul!(x1868, x1899, 8);
    let x1901: BytePoly_8 = bigint_add!(x1900, x1900, 8);
    let x1902: BytePoly_9 = bigint_nondet_quot!(ctx, bigint_sub!(x1897, x1901, 8), x5, 9);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1902, x5, 13), x1901, 13),
            x1897,
            13
        ),
        73156,
        4,
    )?;
    let x1903: BytePoly_8 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1899, x1899, 8), x5, 8), x5, 8),
            x1865,
            8
        ),
        x1865,
        8
    );
    let x1904: BytePoly_9 = bigint_nondet_quot!(ctx, x1903, x5, 9);
    let x1905: BytePoly_4 = bigint_nondet_rem!(ctx, x1903, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1904, x5, 13), x1905, 13),
            x1903,
            13
        ),
        73156,
        4,
    )?;
    let x1906: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x19, bigint_mul!(x1899, x1905, 8), 8), x5, 8),
            x1868,
            8
        ),
        bigint_mul!(x1899, x1865, 8),
        8
    );
    let x1907: BytePoly_9 = bigint_nondet_quot!(ctx, x1906, x5, 9);
    let x1908: BytePoly_4 = bigint_nondet_rem!(ctx, x1906, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1907, x5, 13), x1908, 13),
            x1906,
            13
        ),
        73156,
        4,
    )?;
    let x1909: BytePoly_1 = bigint_nondet_rem!(ctx, x1870, x1, 1);
    let x1910: BytePoly_4 = bigint_nondet_quot!(ctx, x1870, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1910, x1, 5), x1909, 5), x1870, 5),
        32515,
        2,
    )?;
    let x1911: BytePoly_1 = bigint_sub!(x2, x1909, 1);
    eqz(ctx, &bigint_mul!(x1909, x1911, 2), 8131, 2)?;
    let x1912: BytePoly_4 = bigint_add!(bigint_sub!(x1908, x1894, 4), x5, 4);
    let x1913: BytePoly_4 = bigint_add!(bigint_sub!(x1905, x1892, 4), x5, 4);
    let x1914: BytePoly_4 = bigint_nondet_inv!(ctx, x1913, x5, 4);
    let x1915: BytePoly_8 = bigint_mul!(x1913, x1914, 8);
    let x1916: BytePoly_9 = bigint_nondet_quot!(ctx, x1915, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1915, bigint_mul!(x1916, x5, 13), 13), x0, 13),
        73156,
        4,
    )?;
    let x1917: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x1912, x1914, 8), x5, 4);
    let x1918: BytePoly_8 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x1917, x1913, 8), x1912, 8), x5, 8),
        x5,
        8
    );
    let x1919: BytePoly_9 = bigint_nondet_quot!(ctx, x1918, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x1918, bigint_mul!(x1919, x5, 13), 13),
        73156,
        4,
    )?;
    let x1920: BytePoly_8 = bigint_mul!(x1917, x1917, 8);
    let x1921: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1920, x1892, 8), x5, 8), x1905, 8),
        x5,
        8
    );
    let x1922: BytePoly_9 = bigint_nondet_quot!(ctx, x1921, x5, 9);
    let x1923: BytePoly_4 = bigint_nondet_rem!(ctx, x1921, x5, 4);
    let x1924: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x5,
                    bigint_add!(
                        bigint_mul!(x1917, x1923, 8),
                        bigint_add!(bigint_sub!(x1894, bigint_mul!(x1917, x1892, 8), 8), x5, 8),
                        8
                    ),
                    8
                ),
                x5,
                8
            ),
            x5,
            8
        ),
        x19,
        8
    );
    let x1925: BytePoly_9 = bigint_nondet_quot!(ctx, x1924, x5, 9);
    let x1926: BytePoly_4 = bigint_nondet_rem!(ctx, x1924, x5, 4);
    let x1927: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1920, bigint_mul!(x1922, x5, 13), 13),
                        x1892,
                        13
                    ),
                    x1905,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x1923,
        13
    );
    eqz(ctx, &x1927, 73156, 4)?;
    let x1928: BytePoly_13 = bigint_sub!(
        bigint_add!(bigint_mul!(x1925, x5, 13), x1926, 13),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1917, bigint_sub!(x1892, x1923, 4), 8),
                        x1894,
                        8
                    ),
                    x5,
                    8
                ),
                x5,
                8
            ),
            x19,
            8
        ),
        13
    );
    eqz(ctx, &x1928, 73156, 4)?;
    let x1929: BytePoly_5 = bigint_add!(
        bigint_mul!(x1923, x1909, 5),
        bigint_mul!(x1892, x1911, 5),
        5
    );
    let x1930: BytePoly_5 = bigint_add!(
        bigint_mul!(x1926, x1909, 5),
        bigint_mul!(x1894, x1911, 5),
        5
    );
    let x1931: BytePoly_6 = bigint_nondet_quot!(ctx, x1929, x5, 6);
    let x1932: BytePoly_4 = bigint_nondet_rem!(ctx, x1929, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1931, x5, 10), x1932, 10),
            x1929,
            10
        ),
        48771,
        4,
    )?;
    let x1933: BytePoly_6 = bigint_nondet_quot!(ctx, x1930, x5, 6);
    let x1934: BytePoly_4 = bigint_nondet_rem!(ctx, x1930, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1933, x5, 10), x1934, 10),
            x1930,
            10
        ),
        48771,
        4,
    )?;
    let x1935: BytePoly_8 = bigint_mul!(x1905, x1905, 8);
    let x1936: BytePoly_8 = bigint_add!(bigint_add!(bigint_add!(x1935, x1935, 8), x1935, 8), x4, 8);
    let x1937: BytePoly_8 = bigint_add!(x74, x1936, 8);
    let x1938: BytePoly_4 = bigint_nondet_inv!(ctx, bigint_add!(x1908, x1908, 4), x5, 4);
    let x1939: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x1936, x1938, 12), x5, 4);
    let x1940: BytePoly_8 = bigint_mul!(x1908, x1939, 8);
    let x1941: BytePoly_8 = bigint_add!(x1940, x1940, 8);
    let x1942: BytePoly_9 = bigint_nondet_quot!(ctx, bigint_sub!(x1937, x1941, 8), x5, 9);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1942, x5, 13), x1941, 13),
            x1937,
            13
        ),
        73156,
        4,
    )?;
    let x1943: BytePoly_8 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1939, x1939, 8), x5, 8), x5, 8),
            x1905,
            8
        ),
        x1905,
        8
    );
    let x1944: BytePoly_9 = bigint_nondet_quot!(ctx, x1943, x5, 9);
    let x1945: BytePoly_4 = bigint_nondet_rem!(ctx, x1943, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1944, x5, 13), x1945, 13),
            x1943,
            13
        ),
        73156,
        4,
    )?;
    let x1946: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x19, bigint_mul!(x1939, x1945, 8), 8), x5, 8),
            x1908,
            8
        ),
        bigint_mul!(x1939, x1905, 8),
        8
    );
    let x1947: BytePoly_9 = bigint_nondet_quot!(ctx, x1946, x5, 9);
    let x1948: BytePoly_4 = bigint_nondet_rem!(ctx, x1946, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1947, x5, 13), x1948, 13),
            x1946,
            13
        ),
        73156,
        4,
    )?;
    let x1949: BytePoly_1 = bigint_nondet_rem!(ctx, x1910, x1, 1);
    let x1950: BytePoly_4 = bigint_nondet_quot!(ctx, x1910, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1950, x1, 5), x1949, 5), x1910, 5),
        32515,
        2,
    )?;
    let x1951: BytePoly_1 = bigint_sub!(x2, x1949, 1);
    eqz(ctx, &bigint_mul!(x1949, x1951, 2), 8131, 2)?;
    let x1952: BytePoly_4 = bigint_add!(bigint_sub!(x1948, x1934, 4), x5, 4);
    let x1953: BytePoly_4 = bigint_add!(bigint_sub!(x1945, x1932, 4), x5, 4);
    let x1954: BytePoly_4 = bigint_nondet_inv!(ctx, x1953, x5, 4);
    let x1955: BytePoly_8 = bigint_mul!(x1953, x1954, 8);
    let x1956: BytePoly_9 = bigint_nondet_quot!(ctx, x1955, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1955, bigint_mul!(x1956, x5, 13), 13), x0, 13),
        73156,
        4,
    )?;
    let x1957: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x1952, x1954, 8), x5, 4);
    let x1958: BytePoly_8 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x1957, x1953, 8), x1952, 8), x5, 8),
        x5,
        8
    );
    let x1959: BytePoly_9 = bigint_nondet_quot!(ctx, x1958, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x1958, bigint_mul!(x1959, x5, 13), 13),
        73156,
        4,
    )?;
    let x1960: BytePoly_8 = bigint_mul!(x1957, x1957, 8);
    let x1961: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1960, x1932, 8), x5, 8), x1945, 8),
        x5,
        8
    );
    let x1962: BytePoly_9 = bigint_nondet_quot!(ctx, x1961, x5, 9);
    let x1963: BytePoly_4 = bigint_nondet_rem!(ctx, x1961, x5, 4);
    let x1964: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x5,
                    bigint_add!(
                        bigint_mul!(x1957, x1963, 8),
                        bigint_add!(bigint_sub!(x1934, bigint_mul!(x1957, x1932, 8), 8), x5, 8),
                        8
                    ),
                    8
                ),
                x5,
                8
            ),
            x5,
            8
        ),
        x19,
        8
    );
    let x1965: BytePoly_9 = bigint_nondet_quot!(ctx, x1964, x5, 9);
    let x1966: BytePoly_4 = bigint_nondet_rem!(ctx, x1964, x5, 4);
    let x1967: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1960, bigint_mul!(x1962, x5, 13), 13),
                        x1932,
                        13
                    ),
                    x1945,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x1963,
        13
    );
    eqz(ctx, &x1967, 73156, 4)?;
    let x1968: BytePoly_13 = bigint_sub!(
        bigint_add!(bigint_mul!(x1965, x5, 13), x1966, 13),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1957, bigint_sub!(x1932, x1963, 4), 8),
                        x1934,
                        8
                    ),
                    x5,
                    8
                ),
                x5,
                8
            ),
            x19,
            8
        ),
        13
    );
    eqz(ctx, &x1968, 73156, 4)?;
    let x1969: BytePoly_5 = bigint_add!(
        bigint_mul!(x1963, x1949, 5),
        bigint_mul!(x1932, x1951, 5),
        5
    );
    let x1970: BytePoly_5 = bigint_add!(
        bigint_mul!(x1966, x1949, 5),
        bigint_mul!(x1934, x1951, 5),
        5
    );
    let x1971: BytePoly_6 = bigint_nondet_quot!(ctx, x1969, x5, 6);
    let x1972: BytePoly_4 = bigint_nondet_rem!(ctx, x1969, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1971, x5, 10), x1972, 10),
            x1969,
            10
        ),
        48771,
        4,
    )?;
    let x1973: BytePoly_6 = bigint_nondet_quot!(ctx, x1970, x5, 6);
    let x1974: BytePoly_4 = bigint_nondet_rem!(ctx, x1970, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1973, x5, 10), x1974, 10),
            x1970,
            10
        ),
        48771,
        4,
    )?;
    let x1975: BytePoly_8 = bigint_mul!(x1945, x1945, 8);
    let x1976: BytePoly_8 = bigint_add!(bigint_add!(bigint_add!(x1975, x1975, 8), x1975, 8), x4, 8);
    let x1977: BytePoly_8 = bigint_add!(x74, x1976, 8);
    let x1978: BytePoly_4 = bigint_nondet_inv!(ctx, bigint_add!(x1948, x1948, 4), x5, 4);
    let x1979: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x1976, x1978, 12), x5, 4);
    let x1980: BytePoly_8 = bigint_mul!(x1948, x1979, 8);
    let x1981: BytePoly_8 = bigint_add!(x1980, x1980, 8);
    let x1982: BytePoly_9 = bigint_nondet_quot!(ctx, bigint_sub!(x1977, x1981, 8), x5, 9);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1982, x5, 13), x1981, 13),
            x1977,
            13
        ),
        73156,
        4,
    )?;
    let x1983: BytePoly_8 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1979, x1979, 8), x5, 8), x5, 8),
            x1945,
            8
        ),
        x1945,
        8
    );
    let x1984: BytePoly_9 = bigint_nondet_quot!(ctx, x1983, x5, 9);
    let x1985: BytePoly_4 = bigint_nondet_rem!(ctx, x1983, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1984, x5, 13), x1985, 13),
            x1983,
            13
        ),
        73156,
        4,
    )?;
    let x1986: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x19, bigint_mul!(x1979, x1985, 8), 8), x5, 8),
            x1948,
            8
        ),
        bigint_mul!(x1979, x1945, 8),
        8
    );
    let x1987: BytePoly_9 = bigint_nondet_quot!(ctx, x1986, x5, 9);
    let x1988: BytePoly_4 = bigint_nondet_rem!(ctx, x1986, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1987, x5, 13), x1988, 13),
            x1986,
            13
        ),
        73156,
        4,
    )?;
    let x1989: BytePoly_1 = bigint_nondet_rem!(ctx, x1950, x1, 1);
    let x1990: BytePoly_4 = bigint_nondet_quot!(ctx, x1950, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1990, x1, 5), x1989, 5), x1950, 5),
        32515,
        2,
    )?;
    let x1991: BytePoly_1 = bigint_sub!(x2, x1989, 1);
    eqz(ctx, &bigint_mul!(x1989, x1991, 2), 8131, 2)?;
    let x1992: BytePoly_4 = bigint_add!(bigint_sub!(x1988, x1974, 4), x5, 4);
    let x1993: BytePoly_4 = bigint_add!(bigint_sub!(x1985, x1972, 4), x5, 4);
    let x1994: BytePoly_4 = bigint_nondet_inv!(ctx, x1993, x5, 4);
    let x1995: BytePoly_8 = bigint_mul!(x1993, x1994, 8);
    let x1996: BytePoly_9 = bigint_nondet_quot!(ctx, x1995, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1995, bigint_mul!(x1996, x5, 13), 13), x0, 13),
        73156,
        4,
    )?;
    let x1997: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x1992, x1994, 8), x5, 4);
    let x1998: BytePoly_8 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x1997, x1993, 8), x1992, 8), x5, 8),
        x5,
        8
    );
    let x1999: BytePoly_9 = bigint_nondet_quot!(ctx, x1998, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x1998, bigint_mul!(x1999, x5, 13), 13),
        73156,
        4,
    )?;
    let x2000: BytePoly_8 = bigint_mul!(x1997, x1997, 8);
    let x2001: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2000, x1972, 8), x5, 8), x1985, 8),
        x5,
        8
    );
    let x2002: BytePoly_9 = bigint_nondet_quot!(ctx, x2001, x5, 9);
    let x2003: BytePoly_4 = bigint_nondet_rem!(ctx, x2001, x5, 4);
    let x2004: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x5,
                    bigint_add!(
                        bigint_mul!(x1997, x2003, 8),
                        bigint_add!(bigint_sub!(x1974, bigint_mul!(x1997, x1972, 8), 8), x5, 8),
                        8
                    ),
                    8
                ),
                x5,
                8
            ),
            x5,
            8
        ),
        x19,
        8
    );
    let x2005: BytePoly_9 = bigint_nondet_quot!(ctx, x2004, x5, 9);
    let x2006: BytePoly_4 = bigint_nondet_rem!(ctx, x2004, x5, 4);
    let x2007: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2000, bigint_mul!(x2002, x5, 13), 13),
                        x1972,
                        13
                    ),
                    x1985,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x2003,
        13
    );
    eqz(ctx, &x2007, 73156, 4)?;
    let x2008: BytePoly_13 = bigint_sub!(
        bigint_add!(bigint_mul!(x2005, x5, 13), x2006, 13),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1997, bigint_sub!(x1972, x2003, 4), 8),
                        x1974,
                        8
                    ),
                    x5,
                    8
                ),
                x5,
                8
            ),
            x19,
            8
        ),
        13
    );
    eqz(ctx, &x2008, 73156, 4)?;
    let x2009: BytePoly_5 = bigint_add!(
        bigint_mul!(x2003, x1989, 5),
        bigint_mul!(x1972, x1991, 5),
        5
    );
    let x2010: BytePoly_5 = bigint_add!(
        bigint_mul!(x2006, x1989, 5),
        bigint_mul!(x1974, x1991, 5),
        5
    );
    let x2011: BytePoly_6 = bigint_nondet_quot!(ctx, x2009, x5, 6);
    let x2012: BytePoly_4 = bigint_nondet_rem!(ctx, x2009, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2011, x5, 10), x2012, 10),
            x2009,
            10
        ),
        48771,
        4,
    )?;
    let x2013: BytePoly_6 = bigint_nondet_quot!(ctx, x2010, x5, 6);
    let x2014: BytePoly_4 = bigint_nondet_rem!(ctx, x2010, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2013, x5, 10), x2014, 10),
            x2010,
            10
        ),
        48771,
        4,
    )?;
    let x2015: BytePoly_8 = bigint_mul!(x1985, x1985, 8);
    let x2016: BytePoly_8 = bigint_add!(bigint_add!(bigint_add!(x2015, x2015, 8), x2015, 8), x4, 8);
    let x2017: BytePoly_8 = bigint_add!(x74, x2016, 8);
    let x2018: BytePoly_4 = bigint_nondet_inv!(ctx, bigint_add!(x1988, x1988, 4), x5, 4);
    let x2019: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x2016, x2018, 12), x5, 4);
    let x2020: BytePoly_8 = bigint_mul!(x1988, x2019, 8);
    let x2021: BytePoly_8 = bigint_add!(x2020, x2020, 8);
    let x2022: BytePoly_9 = bigint_nondet_quot!(ctx, bigint_sub!(x2017, x2021, 8), x5, 9);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2022, x5, 13), x2021, 13),
            x2017,
            13
        ),
        73156,
        4,
    )?;
    let x2023: BytePoly_8 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2019, x2019, 8), x5, 8), x5, 8),
            x1985,
            8
        ),
        x1985,
        8
    );
    let x2024: BytePoly_9 = bigint_nondet_quot!(ctx, x2023, x5, 9);
    let x2025: BytePoly_4 = bigint_nondet_rem!(ctx, x2023, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2024, x5, 13), x2025, 13),
            x2023,
            13
        ),
        73156,
        4,
    )?;
    let x2026: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x19, bigint_mul!(x2019, x2025, 8), 8), x5, 8),
            x1988,
            8
        ),
        bigint_mul!(x2019, x1985, 8),
        8
    );
    let x2027: BytePoly_9 = bigint_nondet_quot!(ctx, x2026, x5, 9);
    let x2028: BytePoly_4 = bigint_nondet_rem!(ctx, x2026, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2027, x5, 13), x2028, 13),
            x2026,
            13
        ),
        73156,
        4,
    )?;
    let x2029: BytePoly_1 = bigint_nondet_rem!(ctx, x1990, x1, 1);
    let x2030: BytePoly_4 = bigint_nondet_quot!(ctx, x1990, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2030, x1, 5), x2029, 5), x1990, 5),
        32515,
        2,
    )?;
    let x2031: BytePoly_1 = bigint_sub!(x2, x2029, 1);
    eqz(ctx, &bigint_mul!(x2029, x2031, 2), 8131, 2)?;
    let x2032: BytePoly_4 = bigint_add!(bigint_sub!(x2028, x2014, 4), x5, 4);
    let x2033: BytePoly_4 = bigint_add!(bigint_sub!(x2025, x2012, 4), x5, 4);
    let x2034: BytePoly_4 = bigint_nondet_inv!(ctx, x2033, x5, 4);
    let x2035: BytePoly_8 = bigint_mul!(x2033, x2034, 8);
    let x2036: BytePoly_9 = bigint_nondet_quot!(ctx, x2035, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x2035, bigint_mul!(x2036, x5, 13), 13), x0, 13),
        73156,
        4,
    )?;
    let x2037: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x2032, x2034, 8), x5, 4);
    let x2038: BytePoly_8 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x2037, x2033, 8), x2032, 8), x5, 8),
        x5,
        8
    );
    let x2039: BytePoly_9 = bigint_nondet_quot!(ctx, x2038, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x2038, bigint_mul!(x2039, x5, 13), 13),
        73156,
        4,
    )?;
    let x2040: BytePoly_8 = bigint_mul!(x2037, x2037, 8);
    let x2041: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2040, x2012, 8), x5, 8), x2025, 8),
        x5,
        8
    );
    let x2042: BytePoly_9 = bigint_nondet_quot!(ctx, x2041, x5, 9);
    let x2043: BytePoly_4 = bigint_nondet_rem!(ctx, x2041, x5, 4);
    let x2044: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x5,
                    bigint_add!(
                        bigint_mul!(x2037, x2043, 8),
                        bigint_add!(bigint_sub!(x2014, bigint_mul!(x2037, x2012, 8), 8), x5, 8),
                        8
                    ),
                    8
                ),
                x5,
                8
            ),
            x5,
            8
        ),
        x19,
        8
    );
    let x2045: BytePoly_9 = bigint_nondet_quot!(ctx, x2044, x5, 9);
    let x2046: BytePoly_4 = bigint_nondet_rem!(ctx, x2044, x5, 4);
    let x2047: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2040, bigint_mul!(x2042, x5, 13), 13),
                        x2012,
                        13
                    ),
                    x2025,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x2043,
        13
    );
    eqz(ctx, &x2047, 73156, 4)?;
    let x2048: BytePoly_13 = bigint_sub!(
        bigint_add!(bigint_mul!(x2045, x5, 13), x2046, 13),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2037, bigint_sub!(x2012, x2043, 4), 8),
                        x2014,
                        8
                    ),
                    x5,
                    8
                ),
                x5,
                8
            ),
            x19,
            8
        ),
        13
    );
    eqz(ctx, &x2048, 73156, 4)?;
    let x2049: BytePoly_5 = bigint_add!(
        bigint_mul!(x2043, x2029, 5),
        bigint_mul!(x2012, x2031, 5),
        5
    );
    let x2050: BytePoly_5 = bigint_add!(
        bigint_mul!(x2046, x2029, 5),
        bigint_mul!(x2014, x2031, 5),
        5
    );
    let x2051: BytePoly_6 = bigint_nondet_quot!(ctx, x2049, x5, 6);
    let x2052: BytePoly_4 = bigint_nondet_rem!(ctx, x2049, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2051, x5, 10), x2052, 10),
            x2049,
            10
        ),
        48771,
        4,
    )?;
    let x2053: BytePoly_6 = bigint_nondet_quot!(ctx, x2050, x5, 6);
    let x2054: BytePoly_4 = bigint_nondet_rem!(ctx, x2050, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2053, x5, 10), x2054, 10),
            x2050,
            10
        ),
        48771,
        4,
    )?;
    let x2055: BytePoly_8 = bigint_mul!(x2025, x2025, 8);
    let x2056: BytePoly_8 = bigint_add!(bigint_add!(bigint_add!(x2055, x2055, 8), x2055, 8), x4, 8);
    let x2057: BytePoly_8 = bigint_add!(x74, x2056, 8);
    let x2058: BytePoly_4 = bigint_nondet_inv!(ctx, bigint_add!(x2028, x2028, 4), x5, 4);
    let x2059: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x2056, x2058, 12), x5, 4);
    let x2060: BytePoly_8 = bigint_mul!(x2028, x2059, 8);
    let x2061: BytePoly_8 = bigint_add!(x2060, x2060, 8);
    let x2062: BytePoly_9 = bigint_nondet_quot!(ctx, bigint_sub!(x2057, x2061, 8), x5, 9);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2062, x5, 13), x2061, 13),
            x2057,
            13
        ),
        73156,
        4,
    )?;
    let x2063: BytePoly_8 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2059, x2059, 8), x5, 8), x5, 8),
            x2025,
            8
        ),
        x2025,
        8
    );
    let x2064: BytePoly_9 = bigint_nondet_quot!(ctx, x2063, x5, 9);
    let x2065: BytePoly_4 = bigint_nondet_rem!(ctx, x2063, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2064, x5, 13), x2065, 13),
            x2063,
            13
        ),
        73156,
        4,
    )?;
    let x2066: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x19, bigint_mul!(x2059, x2065, 8), 8), x5, 8),
            x2028,
            8
        ),
        bigint_mul!(x2059, x2025, 8),
        8
    );
    let x2067: BytePoly_9 = bigint_nondet_quot!(ctx, x2066, x5, 9);
    let x2068: BytePoly_4 = bigint_nondet_rem!(ctx, x2066, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2067, x5, 13), x2068, 13),
            x2066,
            13
        ),
        73156,
        4,
    )?;
    let x2069: BytePoly_1 = bigint_nondet_rem!(ctx, x2030, x1, 1);
    let x2070: BytePoly_4 = bigint_nondet_quot!(ctx, x2030, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2070, x1, 5), x2069, 5), x2030, 5),
        32515,
        2,
    )?;
    let x2071: BytePoly_1 = bigint_sub!(x2, x2069, 1);
    eqz(ctx, &bigint_mul!(x2069, x2071, 2), 8131, 2)?;
    let x2072: BytePoly_4 = bigint_add!(bigint_sub!(x2068, x2054, 4), x5, 4);
    let x2073: BytePoly_4 = bigint_add!(bigint_sub!(x2065, x2052, 4), x5, 4);
    let x2074: BytePoly_4 = bigint_nondet_inv!(ctx, x2073, x5, 4);
    let x2075: BytePoly_8 = bigint_mul!(x2073, x2074, 8);
    let x2076: BytePoly_9 = bigint_nondet_quot!(ctx, x2075, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x2075, bigint_mul!(x2076, x5, 13), 13), x0, 13),
        73156,
        4,
    )?;
    let x2077: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x2072, x2074, 8), x5, 4);
    let x2078: BytePoly_8 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x2077, x2073, 8), x2072, 8), x5, 8),
        x5,
        8
    );
    let x2079: BytePoly_9 = bigint_nondet_quot!(ctx, x2078, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x2078, bigint_mul!(x2079, x5, 13), 13),
        73156,
        4,
    )?;
    let x2080: BytePoly_8 = bigint_mul!(x2077, x2077, 8);
    let x2081: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2080, x2052, 8), x5, 8), x2065, 8),
        x5,
        8
    );
    let x2082: BytePoly_9 = bigint_nondet_quot!(ctx, x2081, x5, 9);
    let x2083: BytePoly_4 = bigint_nondet_rem!(ctx, x2081, x5, 4);
    let x2084: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x5,
                    bigint_add!(
                        bigint_mul!(x2077, x2083, 8),
                        bigint_add!(bigint_sub!(x2054, bigint_mul!(x2077, x2052, 8), 8), x5, 8),
                        8
                    ),
                    8
                ),
                x5,
                8
            ),
            x5,
            8
        ),
        x19,
        8
    );
    let x2085: BytePoly_9 = bigint_nondet_quot!(ctx, x2084, x5, 9);
    let x2086: BytePoly_4 = bigint_nondet_rem!(ctx, x2084, x5, 4);
    let x2087: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2080, bigint_mul!(x2082, x5, 13), 13),
                        x2052,
                        13
                    ),
                    x2065,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x2083,
        13
    );
    eqz(ctx, &x2087, 73156, 4)?;
    let x2088: BytePoly_13 = bigint_sub!(
        bigint_add!(bigint_mul!(x2085, x5, 13), x2086, 13),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2077, bigint_sub!(x2052, x2083, 4), 8),
                        x2054,
                        8
                    ),
                    x5,
                    8
                ),
                x5,
                8
            ),
            x19,
            8
        ),
        13
    );
    eqz(ctx, &x2088, 73156, 4)?;
    let x2089: BytePoly_5 = bigint_add!(
        bigint_mul!(x2083, x2069, 5),
        bigint_mul!(x2052, x2071, 5),
        5
    );
    let x2090: BytePoly_5 = bigint_add!(
        bigint_mul!(x2086, x2069, 5),
        bigint_mul!(x2054, x2071, 5),
        5
    );
    let x2091: BytePoly_6 = bigint_nondet_quot!(ctx, x2089, x5, 6);
    let x2092: BytePoly_4 = bigint_nondet_rem!(ctx, x2089, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2091, x5, 10), x2092, 10),
            x2089,
            10
        ),
        48771,
        4,
    )?;
    let x2093: BytePoly_6 = bigint_nondet_quot!(ctx, x2090, x5, 6);
    let x2094: BytePoly_4 = bigint_nondet_rem!(ctx, x2090, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2093, x5, 10), x2094, 10),
            x2090,
            10
        ),
        48771,
        4,
    )?;
    let x2095: BytePoly_8 = bigint_mul!(x2065, x2065, 8);
    let x2096: BytePoly_8 = bigint_add!(bigint_add!(bigint_add!(x2095, x2095, 8), x2095, 8), x4, 8);
    let x2097: BytePoly_8 = bigint_add!(x74, x2096, 8);
    let x2098: BytePoly_4 = bigint_nondet_inv!(ctx, bigint_add!(x2068, x2068, 4), x5, 4);
    let x2099: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x2096, x2098, 12), x5, 4);
    let x2100: BytePoly_8 = bigint_mul!(x2068, x2099, 8);
    let x2101: BytePoly_8 = bigint_add!(x2100, x2100, 8);
    let x2102: BytePoly_9 = bigint_nondet_quot!(ctx, bigint_sub!(x2097, x2101, 8), x5, 9);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2102, x5, 13), x2101, 13),
            x2097,
            13
        ),
        73156,
        4,
    )?;
    let x2103: BytePoly_8 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2099, x2099, 8), x5, 8), x5, 8),
            x2065,
            8
        ),
        x2065,
        8
    );
    let x2104: BytePoly_9 = bigint_nondet_quot!(ctx, x2103, x5, 9);
    let x2105: BytePoly_4 = bigint_nondet_rem!(ctx, x2103, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2104, x5, 13), x2105, 13),
            x2103,
            13
        ),
        73156,
        4,
    )?;
    let x2106: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x19, bigint_mul!(x2099, x2105, 8), 8), x5, 8),
            x2068,
            8
        ),
        bigint_mul!(x2099, x2065, 8),
        8
    );
    let x2107: BytePoly_9 = bigint_nondet_quot!(ctx, x2106, x5, 9);
    let x2108: BytePoly_4 = bigint_nondet_rem!(ctx, x2106, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2107, x5, 13), x2108, 13),
            x2106,
            13
        ),
        73156,
        4,
    )?;
    let x2109: BytePoly_1 = bigint_nondet_rem!(ctx, x2070, x1, 1);
    let x2110: BytePoly_4 = bigint_nondet_quot!(ctx, x2070, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2110, x1, 5), x2109, 5), x2070, 5),
        32515,
        2,
    )?;
    let x2111: BytePoly_1 = bigint_sub!(x2, x2109, 1);
    eqz(ctx, &bigint_mul!(x2109, x2111, 2), 8131, 2)?;
    let x2112: BytePoly_4 = bigint_add!(bigint_sub!(x2108, x2094, 4), x5, 4);
    let x2113: BytePoly_4 = bigint_add!(bigint_sub!(x2105, x2092, 4), x5, 4);
    let x2114: BytePoly_4 = bigint_nondet_inv!(ctx, x2113, x5, 4);
    let x2115: BytePoly_8 = bigint_mul!(x2113, x2114, 8);
    let x2116: BytePoly_9 = bigint_nondet_quot!(ctx, x2115, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x2115, bigint_mul!(x2116, x5, 13), 13), x0, 13),
        73156,
        4,
    )?;
    let x2117: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x2112, x2114, 8), x5, 4);
    let x2118: BytePoly_8 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x2117, x2113, 8), x2112, 8), x5, 8),
        x5,
        8
    );
    let x2119: BytePoly_9 = bigint_nondet_quot!(ctx, x2118, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x2118, bigint_mul!(x2119, x5, 13), 13),
        73156,
        4,
    )?;
    let x2120: BytePoly_8 = bigint_mul!(x2117, x2117, 8);
    let x2121: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2120, x2092, 8), x5, 8), x2105, 8),
        x5,
        8
    );
    let x2122: BytePoly_9 = bigint_nondet_quot!(ctx, x2121, x5, 9);
    let x2123: BytePoly_4 = bigint_nondet_rem!(ctx, x2121, x5, 4);
    let x2124: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x5,
                    bigint_add!(
                        bigint_mul!(x2117, x2123, 8),
                        bigint_add!(bigint_sub!(x2094, bigint_mul!(x2117, x2092, 8), 8), x5, 8),
                        8
                    ),
                    8
                ),
                x5,
                8
            ),
            x5,
            8
        ),
        x19,
        8
    );
    let x2125: BytePoly_9 = bigint_nondet_quot!(ctx, x2124, x5, 9);
    let x2126: BytePoly_4 = bigint_nondet_rem!(ctx, x2124, x5, 4);
    let x2127: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2120, bigint_mul!(x2122, x5, 13), 13),
                        x2092,
                        13
                    ),
                    x2105,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x2123,
        13
    );
    eqz(ctx, &x2127, 73156, 4)?;
    let x2128: BytePoly_13 = bigint_sub!(
        bigint_add!(bigint_mul!(x2125, x5, 13), x2126, 13),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2117, bigint_sub!(x2092, x2123, 4), 8),
                        x2094,
                        8
                    ),
                    x5,
                    8
                ),
                x5,
                8
            ),
            x19,
            8
        ),
        13
    );
    eqz(ctx, &x2128, 73156, 4)?;
    let x2129: BytePoly_5 = bigint_add!(
        bigint_mul!(x2123, x2109, 5),
        bigint_mul!(x2092, x2111, 5),
        5
    );
    let x2130: BytePoly_5 = bigint_add!(
        bigint_mul!(x2126, x2109, 5),
        bigint_mul!(x2094, x2111, 5),
        5
    );
    let x2131: BytePoly_6 = bigint_nondet_quot!(ctx, x2129, x5, 6);
    let x2132: BytePoly_4 = bigint_nondet_rem!(ctx, x2129, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2131, x5, 10), x2132, 10),
            x2129,
            10
        ),
        48771,
        4,
    )?;
    let x2133: BytePoly_6 = bigint_nondet_quot!(ctx, x2130, x5, 6);
    let x2134: BytePoly_4 = bigint_nondet_rem!(ctx, x2130, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2133, x5, 10), x2134, 10),
            x2130,
            10
        ),
        48771,
        4,
    )?;
    let x2135: BytePoly_8 = bigint_mul!(x2105, x2105, 8);
    let x2136: BytePoly_8 = bigint_add!(bigint_add!(bigint_add!(x2135, x2135, 8), x2135, 8), x4, 8);
    let x2137: BytePoly_8 = bigint_add!(x74, x2136, 8);
    let x2138: BytePoly_4 = bigint_nondet_inv!(ctx, bigint_add!(x2108, x2108, 4), x5, 4);
    let x2139: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x2136, x2138, 12), x5, 4);
    let x2140: BytePoly_8 = bigint_mul!(x2108, x2139, 8);
    let x2141: BytePoly_8 = bigint_add!(x2140, x2140, 8);
    let x2142: BytePoly_9 = bigint_nondet_quot!(ctx, bigint_sub!(x2137, x2141, 8), x5, 9);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2142, x5, 13), x2141, 13),
            x2137,
            13
        ),
        73156,
        4,
    )?;
    let x2143: BytePoly_8 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2139, x2139, 8), x5, 8), x5, 8),
            x2105,
            8
        ),
        x2105,
        8
    );
    let x2144: BytePoly_9 = bigint_nondet_quot!(ctx, x2143, x5, 9);
    let x2145: BytePoly_4 = bigint_nondet_rem!(ctx, x2143, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2144, x5, 13), x2145, 13),
            x2143,
            13
        ),
        73156,
        4,
    )?;
    let x2146: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x19, bigint_mul!(x2139, x2145, 8), 8), x5, 8),
            x2108,
            8
        ),
        bigint_mul!(x2139, x2105, 8),
        8
    );
    let x2147: BytePoly_9 = bigint_nondet_quot!(ctx, x2146, x5, 9);
    let x2148: BytePoly_4 = bigint_nondet_rem!(ctx, x2146, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2147, x5, 13), x2148, 13),
            x2146,
            13
        ),
        73156,
        4,
    )?;
    let x2149: BytePoly_1 = bigint_nondet_rem!(ctx, x2110, x1, 1);
    let x2150: BytePoly_4 = bigint_nondet_quot!(ctx, x2110, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2150, x1, 5), x2149, 5), x2110, 5),
        32515,
        2,
    )?;
    let x2151: BytePoly_1 = bigint_sub!(x2, x2149, 1);
    eqz(ctx, &bigint_mul!(x2149, x2151, 2), 8131, 2)?;
    let x2152: BytePoly_4 = bigint_add!(bigint_sub!(x2148, x2134, 4), x5, 4);
    let x2153: BytePoly_4 = bigint_add!(bigint_sub!(x2145, x2132, 4), x5, 4);
    let x2154: BytePoly_4 = bigint_nondet_inv!(ctx, x2153, x5, 4);
    let x2155: BytePoly_8 = bigint_mul!(x2153, x2154, 8);
    let x2156: BytePoly_9 = bigint_nondet_quot!(ctx, x2155, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x2155, bigint_mul!(x2156, x5, 13), 13), x0, 13),
        73156,
        4,
    )?;
    let x2157: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x2152, x2154, 8), x5, 4);
    let x2158: BytePoly_8 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x2157, x2153, 8), x2152, 8), x5, 8),
        x5,
        8
    );
    let x2159: BytePoly_9 = bigint_nondet_quot!(ctx, x2158, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x2158, bigint_mul!(x2159, x5, 13), 13),
        73156,
        4,
    )?;
    let x2160: BytePoly_8 = bigint_mul!(x2157, x2157, 8);
    let x2161: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2160, x2132, 8), x5, 8), x2145, 8),
        x5,
        8
    );
    let x2162: BytePoly_9 = bigint_nondet_quot!(ctx, x2161, x5, 9);
    let x2163: BytePoly_4 = bigint_nondet_rem!(ctx, x2161, x5, 4);
    let x2164: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x5,
                    bigint_add!(
                        bigint_mul!(x2157, x2163, 8),
                        bigint_add!(bigint_sub!(x2134, bigint_mul!(x2157, x2132, 8), 8), x5, 8),
                        8
                    ),
                    8
                ),
                x5,
                8
            ),
            x5,
            8
        ),
        x19,
        8
    );
    let x2165: BytePoly_9 = bigint_nondet_quot!(ctx, x2164, x5, 9);
    let x2166: BytePoly_4 = bigint_nondet_rem!(ctx, x2164, x5, 4);
    let x2167: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2160, bigint_mul!(x2162, x5, 13), 13),
                        x2132,
                        13
                    ),
                    x2145,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x2163,
        13
    );
    eqz(ctx, &x2167, 73156, 4)?;
    let x2168: BytePoly_13 = bigint_sub!(
        bigint_add!(bigint_mul!(x2165, x5, 13), x2166, 13),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2157, bigint_sub!(x2132, x2163, 4), 8),
                        x2134,
                        8
                    ),
                    x5,
                    8
                ),
                x5,
                8
            ),
            x19,
            8
        ),
        13
    );
    eqz(ctx, &x2168, 73156, 4)?;
    let x2169: BytePoly_5 = bigint_add!(
        bigint_mul!(x2163, x2149, 5),
        bigint_mul!(x2132, x2151, 5),
        5
    );
    let x2170: BytePoly_5 = bigint_add!(
        bigint_mul!(x2166, x2149, 5),
        bigint_mul!(x2134, x2151, 5),
        5
    );
    let x2171: BytePoly_6 = bigint_nondet_quot!(ctx, x2169, x5, 6);
    let x2172: BytePoly_4 = bigint_nondet_rem!(ctx, x2169, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2171, x5, 10), x2172, 10),
            x2169,
            10
        ),
        48771,
        4,
    )?;
    let x2173: BytePoly_6 = bigint_nondet_quot!(ctx, x2170, x5, 6);
    let x2174: BytePoly_4 = bigint_nondet_rem!(ctx, x2170, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2173, x5, 10), x2174, 10),
            x2170,
            10
        ),
        48771,
        4,
    )?;
    let x2175: BytePoly_8 = bigint_mul!(x2145, x2145, 8);
    let x2176: BytePoly_8 = bigint_add!(bigint_add!(bigint_add!(x2175, x2175, 8), x2175, 8), x4, 8);
    let x2177: BytePoly_8 = bigint_add!(x74, x2176, 8);
    let x2178: BytePoly_4 = bigint_nondet_inv!(ctx, bigint_add!(x2148, x2148, 4), x5, 4);
    let x2179: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x2176, x2178, 12), x5, 4);
    let x2180: BytePoly_8 = bigint_mul!(x2148, x2179, 8);
    let x2181: BytePoly_8 = bigint_add!(x2180, x2180, 8);
    let x2182: BytePoly_9 = bigint_nondet_quot!(ctx, bigint_sub!(x2177, x2181, 8), x5, 9);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2182, x5, 13), x2181, 13),
            x2177,
            13
        ),
        73156,
        4,
    )?;
    let x2183: BytePoly_8 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2179, x2179, 8), x5, 8), x5, 8),
            x2145,
            8
        ),
        x2145,
        8
    );
    let x2184: BytePoly_9 = bigint_nondet_quot!(ctx, x2183, x5, 9);
    let x2185: BytePoly_4 = bigint_nondet_rem!(ctx, x2183, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2184, x5, 13), x2185, 13),
            x2183,
            13
        ),
        73156,
        4,
    )?;
    let x2186: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x19, bigint_mul!(x2179, x2185, 8), 8), x5, 8),
            x2148,
            8
        ),
        bigint_mul!(x2179, x2145, 8),
        8
    );
    let x2187: BytePoly_9 = bigint_nondet_quot!(ctx, x2186, x5, 9);
    let x2188: BytePoly_4 = bigint_nondet_rem!(ctx, x2186, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2187, x5, 13), x2188, 13),
            x2186,
            13
        ),
        73156,
        4,
    )?;
    let x2189: BytePoly_1 = bigint_nondet_rem!(ctx, x2150, x1, 1);
    let x2190: BytePoly_4 = bigint_nondet_quot!(ctx, x2150, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2190, x1, 5), x2189, 5), x2150, 5),
        32515,
        2,
    )?;
    let x2191: BytePoly_1 = bigint_sub!(x2, x2189, 1);
    eqz(ctx, &bigint_mul!(x2189, x2191, 2), 8131, 2)?;
    let x2192: BytePoly_4 = bigint_add!(bigint_sub!(x2188, x2174, 4), x5, 4);
    let x2193: BytePoly_4 = bigint_add!(bigint_sub!(x2185, x2172, 4), x5, 4);
    let x2194: BytePoly_4 = bigint_nondet_inv!(ctx, x2193, x5, 4);
    let x2195: BytePoly_8 = bigint_mul!(x2193, x2194, 8);
    let x2196: BytePoly_9 = bigint_nondet_quot!(ctx, x2195, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x2195, bigint_mul!(x2196, x5, 13), 13), x0, 13),
        73156,
        4,
    )?;
    let x2197: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x2192, x2194, 8), x5, 4);
    let x2198: BytePoly_8 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x2197, x2193, 8), x2192, 8), x5, 8),
        x5,
        8
    );
    let x2199: BytePoly_9 = bigint_nondet_quot!(ctx, x2198, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x2198, bigint_mul!(x2199, x5, 13), 13),
        73156,
        4,
    )?;
    let x2200: BytePoly_8 = bigint_mul!(x2197, x2197, 8);
    let x2201: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2200, x2172, 8), x5, 8), x2185, 8),
        x5,
        8
    );
    let x2202: BytePoly_9 = bigint_nondet_quot!(ctx, x2201, x5, 9);
    let x2203: BytePoly_4 = bigint_nondet_rem!(ctx, x2201, x5, 4);
    let x2204: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x5,
                    bigint_add!(
                        bigint_mul!(x2197, x2203, 8),
                        bigint_add!(bigint_sub!(x2174, bigint_mul!(x2197, x2172, 8), 8), x5, 8),
                        8
                    ),
                    8
                ),
                x5,
                8
            ),
            x5,
            8
        ),
        x19,
        8
    );
    let x2205: BytePoly_9 = bigint_nondet_quot!(ctx, x2204, x5, 9);
    let x2206: BytePoly_4 = bigint_nondet_rem!(ctx, x2204, x5, 4);
    let x2207: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2200, bigint_mul!(x2202, x5, 13), 13),
                        x2172,
                        13
                    ),
                    x2185,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x2203,
        13
    );
    eqz(ctx, &x2207, 73156, 4)?;
    let x2208: BytePoly_13 = bigint_sub!(
        bigint_add!(bigint_mul!(x2205, x5, 13), x2206, 13),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2197, bigint_sub!(x2172, x2203, 4), 8),
                        x2174,
                        8
                    ),
                    x5,
                    8
                ),
                x5,
                8
            ),
            x19,
            8
        ),
        13
    );
    eqz(ctx, &x2208, 73156, 4)?;
    let x2209: BytePoly_5 = bigint_add!(
        bigint_mul!(x2203, x2189, 5),
        bigint_mul!(x2172, x2191, 5),
        5
    );
    let x2210: BytePoly_5 = bigint_add!(
        bigint_mul!(x2206, x2189, 5),
        bigint_mul!(x2174, x2191, 5),
        5
    );
    let x2211: BytePoly_6 = bigint_nondet_quot!(ctx, x2209, x5, 6);
    let x2212: BytePoly_4 = bigint_nondet_rem!(ctx, x2209, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2211, x5, 10), x2212, 10),
            x2209,
            10
        ),
        48771,
        4,
    )?;
    let x2213: BytePoly_6 = bigint_nondet_quot!(ctx, x2210, x5, 6);
    let x2214: BytePoly_4 = bigint_nondet_rem!(ctx, x2210, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2213, x5, 10), x2214, 10),
            x2210,
            10
        ),
        48771,
        4,
    )?;
    let x2215: BytePoly_8 = bigint_mul!(x2185, x2185, 8);
    let x2216: BytePoly_8 = bigint_add!(bigint_add!(bigint_add!(x2215, x2215, 8), x2215, 8), x4, 8);
    let x2217: BytePoly_8 = bigint_add!(x74, x2216, 8);
    let x2218: BytePoly_4 = bigint_nondet_inv!(ctx, bigint_add!(x2188, x2188, 4), x5, 4);
    let x2219: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x2216, x2218, 12), x5, 4);
    let x2220: BytePoly_8 = bigint_mul!(x2188, x2219, 8);
    let x2221: BytePoly_8 = bigint_add!(x2220, x2220, 8);
    let x2222: BytePoly_9 = bigint_nondet_quot!(ctx, bigint_sub!(x2217, x2221, 8), x5, 9);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2222, x5, 13), x2221, 13),
            x2217,
            13
        ),
        73156,
        4,
    )?;
    let x2223: BytePoly_8 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2219, x2219, 8), x5, 8), x5, 8),
            x2185,
            8
        ),
        x2185,
        8
    );
    let x2224: BytePoly_9 = bigint_nondet_quot!(ctx, x2223, x5, 9);
    let x2225: BytePoly_4 = bigint_nondet_rem!(ctx, x2223, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2224, x5, 13), x2225, 13),
            x2223,
            13
        ),
        73156,
        4,
    )?;
    let x2226: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x19, bigint_mul!(x2219, x2225, 8), 8), x5, 8),
            x2188,
            8
        ),
        bigint_mul!(x2219, x2185, 8),
        8
    );
    let x2227: BytePoly_9 = bigint_nondet_quot!(ctx, x2226, x5, 9);
    let x2228: BytePoly_4 = bigint_nondet_rem!(ctx, x2226, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2227, x5, 13), x2228, 13),
            x2226,
            13
        ),
        73156,
        4,
    )?;
    let x2229: BytePoly_1 = bigint_nondet_rem!(ctx, x2190, x1, 1);
    let x2230: BytePoly_4 = bigint_nondet_quot!(ctx, x2190, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2230, x1, 5), x2229, 5), x2190, 5),
        32515,
        2,
    )?;
    let x2231: BytePoly_1 = bigint_sub!(x2, x2229, 1);
    eqz(ctx, &bigint_mul!(x2229, x2231, 2), 8131, 2)?;
    let x2232: BytePoly_4 = bigint_add!(bigint_sub!(x2228, x2214, 4), x5, 4);
    let x2233: BytePoly_4 = bigint_add!(bigint_sub!(x2225, x2212, 4), x5, 4);
    let x2234: BytePoly_4 = bigint_nondet_inv!(ctx, x2233, x5, 4);
    let x2235: BytePoly_8 = bigint_mul!(x2233, x2234, 8);
    let x2236: BytePoly_9 = bigint_nondet_quot!(ctx, x2235, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x2235, bigint_mul!(x2236, x5, 13), 13), x0, 13),
        73156,
        4,
    )?;
    let x2237: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x2232, x2234, 8), x5, 4);
    let x2238: BytePoly_8 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x2237, x2233, 8), x2232, 8), x5, 8),
        x5,
        8
    );
    let x2239: BytePoly_9 = bigint_nondet_quot!(ctx, x2238, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x2238, bigint_mul!(x2239, x5, 13), 13),
        73156,
        4,
    )?;
    let x2240: BytePoly_8 = bigint_mul!(x2237, x2237, 8);
    let x2241: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2240, x2212, 8), x5, 8), x2225, 8),
        x5,
        8
    );
    let x2242: BytePoly_9 = bigint_nondet_quot!(ctx, x2241, x5, 9);
    let x2243: BytePoly_4 = bigint_nondet_rem!(ctx, x2241, x5, 4);
    let x2244: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x5,
                    bigint_add!(
                        bigint_mul!(x2237, x2243, 8),
                        bigint_add!(bigint_sub!(x2214, bigint_mul!(x2237, x2212, 8), 8), x5, 8),
                        8
                    ),
                    8
                ),
                x5,
                8
            ),
            x5,
            8
        ),
        x19,
        8
    );
    let x2245: BytePoly_9 = bigint_nondet_quot!(ctx, x2244, x5, 9);
    let x2246: BytePoly_4 = bigint_nondet_rem!(ctx, x2244, x5, 4);
    let x2247: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2240, bigint_mul!(x2242, x5, 13), 13),
                        x2212,
                        13
                    ),
                    x2225,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x2243,
        13
    );
    eqz(ctx, &x2247, 73156, 4)?;
    let x2248: BytePoly_13 = bigint_sub!(
        bigint_add!(bigint_mul!(x2245, x5, 13), x2246, 13),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2237, bigint_sub!(x2212, x2243, 4), 8),
                        x2214,
                        8
                    ),
                    x5,
                    8
                ),
                x5,
                8
            ),
            x19,
            8
        ),
        13
    );
    eqz(ctx, &x2248, 73156, 4)?;
    let x2249: BytePoly_5 = bigint_add!(
        bigint_mul!(x2243, x2229, 5),
        bigint_mul!(x2212, x2231, 5),
        5
    );
    let x2250: BytePoly_5 = bigint_add!(
        bigint_mul!(x2246, x2229, 5),
        bigint_mul!(x2214, x2231, 5),
        5
    );
    let x2251: BytePoly_6 = bigint_nondet_quot!(ctx, x2249, x5, 6);
    let x2252: BytePoly_4 = bigint_nondet_rem!(ctx, x2249, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2251, x5, 10), x2252, 10),
            x2249,
            10
        ),
        48771,
        4,
    )?;
    let x2253: BytePoly_6 = bigint_nondet_quot!(ctx, x2250, x5, 6);
    let x2254: BytePoly_4 = bigint_nondet_rem!(ctx, x2250, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2253, x5, 10), x2254, 10),
            x2250,
            10
        ),
        48771,
        4,
    )?;
    let x2255: BytePoly_8 = bigint_mul!(x2225, x2225, 8);
    let x2256: BytePoly_8 = bigint_add!(bigint_add!(bigint_add!(x2255, x2255, 8), x2255, 8), x4, 8);
    let x2257: BytePoly_8 = bigint_add!(x74, x2256, 8);
    let x2258: BytePoly_4 = bigint_nondet_inv!(ctx, bigint_add!(x2228, x2228, 4), x5, 4);
    let x2259: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x2256, x2258, 12), x5, 4);
    let x2260: BytePoly_8 = bigint_mul!(x2228, x2259, 8);
    let x2261: BytePoly_8 = bigint_add!(x2260, x2260, 8);
    let x2262: BytePoly_9 = bigint_nondet_quot!(ctx, bigint_sub!(x2257, x2261, 8), x5, 9);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2262, x5, 13), x2261, 13),
            x2257,
            13
        ),
        73156,
        4,
    )?;
    let x2263: BytePoly_8 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2259, x2259, 8), x5, 8), x5, 8),
            x2225,
            8
        ),
        x2225,
        8
    );
    let x2264: BytePoly_9 = bigint_nondet_quot!(ctx, x2263, x5, 9);
    let x2265: BytePoly_4 = bigint_nondet_rem!(ctx, x2263, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2264, x5, 13), x2265, 13),
            x2263,
            13
        ),
        73156,
        4,
    )?;
    let x2266: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x19, bigint_mul!(x2259, x2265, 8), 8), x5, 8),
            x2228,
            8
        ),
        bigint_mul!(x2259, x2225, 8),
        8
    );
    let x2267: BytePoly_9 = bigint_nondet_quot!(ctx, x2266, x5, 9);
    let x2268: BytePoly_4 = bigint_nondet_rem!(ctx, x2266, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2267, x5, 13), x2268, 13),
            x2266,
            13
        ),
        73156,
        4,
    )?;
    let x2269: BytePoly_1 = bigint_nondet_rem!(ctx, x2230, x1, 1);
    let x2270: BytePoly_4 = bigint_nondet_quot!(ctx, x2230, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2270, x1, 5), x2269, 5), x2230, 5),
        32515,
        2,
    )?;
    let x2271: BytePoly_1 = bigint_sub!(x2, x2269, 1);
    eqz(ctx, &bigint_mul!(x2269, x2271, 2), 8131, 2)?;
    let x2272: BytePoly_4 = bigint_add!(bigint_sub!(x2268, x2254, 4), x5, 4);
    let x2273: BytePoly_4 = bigint_add!(bigint_sub!(x2265, x2252, 4), x5, 4);
    let x2274: BytePoly_4 = bigint_nondet_inv!(ctx, x2273, x5, 4);
    let x2275: BytePoly_8 = bigint_mul!(x2273, x2274, 8);
    let x2276: BytePoly_9 = bigint_nondet_quot!(ctx, x2275, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x2275, bigint_mul!(x2276, x5, 13), 13), x0, 13),
        73156,
        4,
    )?;
    let x2277: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x2272, x2274, 8), x5, 4);
    let x2278: BytePoly_8 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x2277, x2273, 8), x2272, 8), x5, 8),
        x5,
        8
    );
    let x2279: BytePoly_9 = bigint_nondet_quot!(ctx, x2278, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x2278, bigint_mul!(x2279, x5, 13), 13),
        73156,
        4,
    )?;
    let x2280: BytePoly_8 = bigint_mul!(x2277, x2277, 8);
    let x2281: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2280, x2252, 8), x5, 8), x2265, 8),
        x5,
        8
    );
    let x2282: BytePoly_9 = bigint_nondet_quot!(ctx, x2281, x5, 9);
    let x2283: BytePoly_4 = bigint_nondet_rem!(ctx, x2281, x5, 4);
    let x2284: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x5,
                    bigint_add!(
                        bigint_mul!(x2277, x2283, 8),
                        bigint_add!(bigint_sub!(x2254, bigint_mul!(x2277, x2252, 8), 8), x5, 8),
                        8
                    ),
                    8
                ),
                x5,
                8
            ),
            x5,
            8
        ),
        x19,
        8
    );
    let x2285: BytePoly_9 = bigint_nondet_quot!(ctx, x2284, x5, 9);
    let x2286: BytePoly_4 = bigint_nondet_rem!(ctx, x2284, x5, 4);
    let x2287: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2280, bigint_mul!(x2282, x5, 13), 13),
                        x2252,
                        13
                    ),
                    x2265,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x2283,
        13
    );
    eqz(ctx, &x2287, 73156, 4)?;
    let x2288: BytePoly_13 = bigint_sub!(
        bigint_add!(bigint_mul!(x2285, x5, 13), x2286, 13),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2277, bigint_sub!(x2252, x2283, 4), 8),
                        x2254,
                        8
                    ),
                    x5,
                    8
                ),
                x5,
                8
            ),
            x19,
            8
        ),
        13
    );
    eqz(ctx, &x2288, 73156, 4)?;
    let x2289: BytePoly_5 = bigint_add!(
        bigint_mul!(x2283, x2269, 5),
        bigint_mul!(x2252, x2271, 5),
        5
    );
    let x2290: BytePoly_5 = bigint_add!(
        bigint_mul!(x2286, x2269, 5),
        bigint_mul!(x2254, x2271, 5),
        5
    );
    let x2291: BytePoly_6 = bigint_nondet_quot!(ctx, x2289, x5, 6);
    let x2292: BytePoly_4 = bigint_nondet_rem!(ctx, x2289, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2291, x5, 10), x2292, 10),
            x2289,
            10
        ),
        48771,
        4,
    )?;
    let x2293: BytePoly_6 = bigint_nondet_quot!(ctx, x2290, x5, 6);
    let x2294: BytePoly_4 = bigint_nondet_rem!(ctx, x2290, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2293, x5, 10), x2294, 10),
            x2290,
            10
        ),
        48771,
        4,
    )?;
    let x2295: BytePoly_8 = bigint_mul!(x2265, x2265, 8);
    let x2296: BytePoly_8 = bigint_add!(bigint_add!(bigint_add!(x2295, x2295, 8), x2295, 8), x4, 8);
    let x2297: BytePoly_8 = bigint_add!(x74, x2296, 8);
    let x2298: BytePoly_4 = bigint_nondet_inv!(ctx, bigint_add!(x2268, x2268, 4), x5, 4);
    let x2299: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x2296, x2298, 12), x5, 4);
    let x2300: BytePoly_8 = bigint_mul!(x2268, x2299, 8);
    let x2301: BytePoly_8 = bigint_add!(x2300, x2300, 8);
    let x2302: BytePoly_9 = bigint_nondet_quot!(ctx, bigint_sub!(x2297, x2301, 8), x5, 9);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2302, x5, 13), x2301, 13),
            x2297,
            13
        ),
        73156,
        4,
    )?;
    let x2303: BytePoly_8 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2299, x2299, 8), x5, 8), x5, 8),
            x2265,
            8
        ),
        x2265,
        8
    );
    let x2304: BytePoly_9 = bigint_nondet_quot!(ctx, x2303, x5, 9);
    let x2305: BytePoly_4 = bigint_nondet_rem!(ctx, x2303, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2304, x5, 13), x2305, 13),
            x2303,
            13
        ),
        73156,
        4,
    )?;
    let x2306: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x19, bigint_mul!(x2299, x2305, 8), 8), x5, 8),
            x2268,
            8
        ),
        bigint_mul!(x2299, x2265, 8),
        8
    );
    let x2307: BytePoly_9 = bigint_nondet_quot!(ctx, x2306, x5, 9);
    let x2308: BytePoly_4 = bigint_nondet_rem!(ctx, x2306, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2307, x5, 13), x2308, 13),
            x2306,
            13
        ),
        73156,
        4,
    )?;
    let x2309: BytePoly_1 = bigint_nondet_rem!(ctx, x2270, x1, 1);
    let x2310: BytePoly_4 = bigint_nondet_quot!(ctx, x2270, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2310, x1, 5), x2309, 5), x2270, 5),
        32515,
        2,
    )?;
    let x2311: BytePoly_1 = bigint_sub!(x2, x2309, 1);
    eqz(ctx, &bigint_mul!(x2309, x2311, 2), 8131, 2)?;
    let x2312: BytePoly_4 = bigint_add!(bigint_sub!(x2308, x2294, 4), x5, 4);
    let x2313: BytePoly_4 = bigint_add!(bigint_sub!(x2305, x2292, 4), x5, 4);
    let x2314: BytePoly_4 = bigint_nondet_inv!(ctx, x2313, x5, 4);
    let x2315: BytePoly_8 = bigint_mul!(x2313, x2314, 8);
    let x2316: BytePoly_9 = bigint_nondet_quot!(ctx, x2315, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x2315, bigint_mul!(x2316, x5, 13), 13), x0, 13),
        73156,
        4,
    )?;
    let x2317: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x2312, x2314, 8), x5, 4);
    let x2318: BytePoly_8 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x2317, x2313, 8), x2312, 8), x5, 8),
        x5,
        8
    );
    let x2319: BytePoly_9 = bigint_nondet_quot!(ctx, x2318, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x2318, bigint_mul!(x2319, x5, 13), 13),
        73156,
        4,
    )?;
    let x2320: BytePoly_8 = bigint_mul!(x2317, x2317, 8);
    let x2321: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2320, x2292, 8), x5, 8), x2305, 8),
        x5,
        8
    );
    let x2322: BytePoly_9 = bigint_nondet_quot!(ctx, x2321, x5, 9);
    let x2323: BytePoly_4 = bigint_nondet_rem!(ctx, x2321, x5, 4);
    let x2324: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x5,
                    bigint_add!(
                        bigint_mul!(x2317, x2323, 8),
                        bigint_add!(bigint_sub!(x2294, bigint_mul!(x2317, x2292, 8), 8), x5, 8),
                        8
                    ),
                    8
                ),
                x5,
                8
            ),
            x5,
            8
        ),
        x19,
        8
    );
    let x2325: BytePoly_9 = bigint_nondet_quot!(ctx, x2324, x5, 9);
    let x2326: BytePoly_4 = bigint_nondet_rem!(ctx, x2324, x5, 4);
    let x2327: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2320, bigint_mul!(x2322, x5, 13), 13),
                        x2292,
                        13
                    ),
                    x2305,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x2323,
        13
    );
    eqz(ctx, &x2327, 73156, 4)?;
    let x2328: BytePoly_13 = bigint_sub!(
        bigint_add!(bigint_mul!(x2325, x5, 13), x2326, 13),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2317, bigint_sub!(x2292, x2323, 4), 8),
                        x2294,
                        8
                    ),
                    x5,
                    8
                ),
                x5,
                8
            ),
            x19,
            8
        ),
        13
    );
    eqz(ctx, &x2328, 73156, 4)?;
    let x2329: BytePoly_5 = bigint_add!(
        bigint_mul!(x2323, x2309, 5),
        bigint_mul!(x2292, x2311, 5),
        5
    );
    let x2330: BytePoly_5 = bigint_add!(
        bigint_mul!(x2326, x2309, 5),
        bigint_mul!(x2294, x2311, 5),
        5
    );
    let x2331: BytePoly_6 = bigint_nondet_quot!(ctx, x2329, x5, 6);
    let x2332: BytePoly_4 = bigint_nondet_rem!(ctx, x2329, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2331, x5, 10), x2332, 10),
            x2329,
            10
        ),
        48771,
        4,
    )?;
    let x2333: BytePoly_6 = bigint_nondet_quot!(ctx, x2330, x5, 6);
    let x2334: BytePoly_4 = bigint_nondet_rem!(ctx, x2330, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2333, x5, 10), x2334, 10),
            x2330,
            10
        ),
        48771,
        4,
    )?;
    let x2335: BytePoly_8 = bigint_mul!(x2305, x2305, 8);
    let x2336: BytePoly_8 = bigint_add!(bigint_add!(bigint_add!(x2335, x2335, 8), x2335, 8), x4, 8);
    let x2337: BytePoly_8 = bigint_add!(x74, x2336, 8);
    let x2338: BytePoly_4 = bigint_nondet_inv!(ctx, bigint_add!(x2308, x2308, 4), x5, 4);
    let x2339: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x2336, x2338, 12), x5, 4);
    let x2340: BytePoly_8 = bigint_mul!(x2308, x2339, 8);
    let x2341: BytePoly_8 = bigint_add!(x2340, x2340, 8);
    let x2342: BytePoly_9 = bigint_nondet_quot!(ctx, bigint_sub!(x2337, x2341, 8), x5, 9);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2342, x5, 13), x2341, 13),
            x2337,
            13
        ),
        73156,
        4,
    )?;
    let x2343: BytePoly_8 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2339, x2339, 8), x5, 8), x5, 8),
            x2305,
            8
        ),
        x2305,
        8
    );
    let x2344: BytePoly_9 = bigint_nondet_quot!(ctx, x2343, x5, 9);
    let x2345: BytePoly_4 = bigint_nondet_rem!(ctx, x2343, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2344, x5, 13), x2345, 13),
            x2343,
            13
        ),
        73156,
        4,
    )?;
    let x2346: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x19, bigint_mul!(x2339, x2345, 8), 8), x5, 8),
            x2308,
            8
        ),
        bigint_mul!(x2339, x2305, 8),
        8
    );
    let x2347: BytePoly_9 = bigint_nondet_quot!(ctx, x2346, x5, 9);
    let x2348: BytePoly_4 = bigint_nondet_rem!(ctx, x2346, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2347, x5, 13), x2348, 13),
            x2346,
            13
        ),
        73156,
        4,
    )?;
    let x2349: BytePoly_1 = bigint_nondet_rem!(ctx, x2310, x1, 1);
    let x2350: BytePoly_4 = bigint_nondet_quot!(ctx, x2310, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2350, x1, 5), x2349, 5), x2310, 5),
        32515,
        2,
    )?;
    let x2351: BytePoly_1 = bigint_sub!(x2, x2349, 1);
    eqz(ctx, &bigint_mul!(x2349, x2351, 2), 8131, 2)?;
    let x2352: BytePoly_4 = bigint_add!(bigint_sub!(x2348, x2334, 4), x5, 4);
    let x2353: BytePoly_4 = bigint_add!(bigint_sub!(x2345, x2332, 4), x5, 4);
    let x2354: BytePoly_4 = bigint_nondet_inv!(ctx, x2353, x5, 4);
    let x2355: BytePoly_8 = bigint_mul!(x2353, x2354, 8);
    let x2356: BytePoly_9 = bigint_nondet_quot!(ctx, x2355, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x2355, bigint_mul!(x2356, x5, 13), 13), x0, 13),
        73156,
        4,
    )?;
    let x2357: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x2352, x2354, 8), x5, 4);
    let x2358: BytePoly_8 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x2357, x2353, 8), x2352, 8), x5, 8),
        x5,
        8
    );
    let x2359: BytePoly_9 = bigint_nondet_quot!(ctx, x2358, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x2358, bigint_mul!(x2359, x5, 13), 13),
        73156,
        4,
    )?;
    let x2360: BytePoly_8 = bigint_mul!(x2357, x2357, 8);
    let x2361: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2360, x2332, 8), x5, 8), x2345, 8),
        x5,
        8
    );
    let x2362: BytePoly_9 = bigint_nondet_quot!(ctx, x2361, x5, 9);
    let x2363: BytePoly_4 = bigint_nondet_rem!(ctx, x2361, x5, 4);
    let x2364: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x5,
                    bigint_add!(
                        bigint_mul!(x2357, x2363, 8),
                        bigint_add!(bigint_sub!(x2334, bigint_mul!(x2357, x2332, 8), 8), x5, 8),
                        8
                    ),
                    8
                ),
                x5,
                8
            ),
            x5,
            8
        ),
        x19,
        8
    );
    let x2365: BytePoly_9 = bigint_nondet_quot!(ctx, x2364, x5, 9);
    let x2366: BytePoly_4 = bigint_nondet_rem!(ctx, x2364, x5, 4);
    let x2367: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2360, bigint_mul!(x2362, x5, 13), 13),
                        x2332,
                        13
                    ),
                    x2345,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x2363,
        13
    );
    eqz(ctx, &x2367, 73156, 4)?;
    let x2368: BytePoly_13 = bigint_sub!(
        bigint_add!(bigint_mul!(x2365, x5, 13), x2366, 13),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2357, bigint_sub!(x2332, x2363, 4), 8),
                        x2334,
                        8
                    ),
                    x5,
                    8
                ),
                x5,
                8
            ),
            x19,
            8
        ),
        13
    );
    eqz(ctx, &x2368, 73156, 4)?;
    let x2369: BytePoly_5 = bigint_add!(
        bigint_mul!(x2363, x2349, 5),
        bigint_mul!(x2332, x2351, 5),
        5
    );
    let x2370: BytePoly_5 = bigint_add!(
        bigint_mul!(x2366, x2349, 5),
        bigint_mul!(x2334, x2351, 5),
        5
    );
    let x2371: BytePoly_6 = bigint_nondet_quot!(ctx, x2369, x5, 6);
    let x2372: BytePoly_4 = bigint_nondet_rem!(ctx, x2369, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2371, x5, 10), x2372, 10),
            x2369,
            10
        ),
        48771,
        4,
    )?;
    let x2373: BytePoly_6 = bigint_nondet_quot!(ctx, x2370, x5, 6);
    let x2374: BytePoly_4 = bigint_nondet_rem!(ctx, x2370, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2373, x5, 10), x2374, 10),
            x2370,
            10
        ),
        48771,
        4,
    )?;
    let x2375: BytePoly_8 = bigint_mul!(x2345, x2345, 8);
    let x2376: BytePoly_8 = bigint_add!(bigint_add!(bigint_add!(x2375, x2375, 8), x2375, 8), x4, 8);
    let x2377: BytePoly_8 = bigint_add!(x74, x2376, 8);
    let x2378: BytePoly_4 = bigint_nondet_inv!(ctx, bigint_add!(x2348, x2348, 4), x5, 4);
    let x2379: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x2376, x2378, 12), x5, 4);
    let x2380: BytePoly_8 = bigint_mul!(x2348, x2379, 8);
    let x2381: BytePoly_8 = bigint_add!(x2380, x2380, 8);
    let x2382: BytePoly_9 = bigint_nondet_quot!(ctx, bigint_sub!(x2377, x2381, 8), x5, 9);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2382, x5, 13), x2381, 13),
            x2377,
            13
        ),
        73156,
        4,
    )?;
    let x2383: BytePoly_8 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2379, x2379, 8), x5, 8), x5, 8),
            x2345,
            8
        ),
        x2345,
        8
    );
    let x2384: BytePoly_9 = bigint_nondet_quot!(ctx, x2383, x5, 9);
    let x2385: BytePoly_4 = bigint_nondet_rem!(ctx, x2383, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2384, x5, 13), x2385, 13),
            x2383,
            13
        ),
        73156,
        4,
    )?;
    let x2386: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x19, bigint_mul!(x2379, x2385, 8), 8), x5, 8),
            x2348,
            8
        ),
        bigint_mul!(x2379, x2345, 8),
        8
    );
    let x2387: BytePoly_9 = bigint_nondet_quot!(ctx, x2386, x5, 9);
    let x2388: BytePoly_4 = bigint_nondet_rem!(ctx, x2386, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2387, x5, 13), x2388, 13),
            x2386,
            13
        ),
        73156,
        4,
    )?;
    let x2389: BytePoly_1 = bigint_nondet_rem!(ctx, x2350, x1, 1);
    let x2390: BytePoly_4 = bigint_nondet_quot!(ctx, x2350, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2390, x1, 5), x2389, 5), x2350, 5),
        32515,
        2,
    )?;
    let x2391: BytePoly_1 = bigint_sub!(x2, x2389, 1);
    eqz(ctx, &bigint_mul!(x2389, x2391, 2), 8131, 2)?;
    let x2392: BytePoly_4 = bigint_add!(bigint_sub!(x2388, x2374, 4), x5, 4);
    let x2393: BytePoly_4 = bigint_add!(bigint_sub!(x2385, x2372, 4), x5, 4);
    let x2394: BytePoly_4 = bigint_nondet_inv!(ctx, x2393, x5, 4);
    let x2395: BytePoly_8 = bigint_mul!(x2393, x2394, 8);
    let x2396: BytePoly_9 = bigint_nondet_quot!(ctx, x2395, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x2395, bigint_mul!(x2396, x5, 13), 13), x0, 13),
        73156,
        4,
    )?;
    let x2397: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x2392, x2394, 8), x5, 4);
    let x2398: BytePoly_8 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x2397, x2393, 8), x2392, 8), x5, 8),
        x5,
        8
    );
    let x2399: BytePoly_9 = bigint_nondet_quot!(ctx, x2398, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x2398, bigint_mul!(x2399, x5, 13), 13),
        73156,
        4,
    )?;
    let x2400: BytePoly_8 = bigint_mul!(x2397, x2397, 8);
    let x2401: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2400, x2372, 8), x5, 8), x2385, 8),
        x5,
        8
    );
    let x2402: BytePoly_9 = bigint_nondet_quot!(ctx, x2401, x5, 9);
    let x2403: BytePoly_4 = bigint_nondet_rem!(ctx, x2401, x5, 4);
    let x2404: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x5,
                    bigint_add!(
                        bigint_mul!(x2397, x2403, 8),
                        bigint_add!(bigint_sub!(x2374, bigint_mul!(x2397, x2372, 8), 8), x5, 8),
                        8
                    ),
                    8
                ),
                x5,
                8
            ),
            x5,
            8
        ),
        x19,
        8
    );
    let x2405: BytePoly_9 = bigint_nondet_quot!(ctx, x2404, x5, 9);
    let x2406: BytePoly_4 = bigint_nondet_rem!(ctx, x2404, x5, 4);
    let x2407: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2400, bigint_mul!(x2402, x5, 13), 13),
                        x2372,
                        13
                    ),
                    x2385,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x2403,
        13
    );
    eqz(ctx, &x2407, 73156, 4)?;
    let x2408: BytePoly_13 = bigint_sub!(
        bigint_add!(bigint_mul!(x2405, x5, 13), x2406, 13),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2397, bigint_sub!(x2372, x2403, 4), 8),
                        x2374,
                        8
                    ),
                    x5,
                    8
                ),
                x5,
                8
            ),
            x19,
            8
        ),
        13
    );
    eqz(ctx, &x2408, 73156, 4)?;
    let x2409: BytePoly_5 = bigint_add!(
        bigint_mul!(x2403, x2389, 5),
        bigint_mul!(x2372, x2391, 5),
        5
    );
    let x2410: BytePoly_5 = bigint_add!(
        bigint_mul!(x2406, x2389, 5),
        bigint_mul!(x2374, x2391, 5),
        5
    );
    let x2411: BytePoly_6 = bigint_nondet_quot!(ctx, x2409, x5, 6);
    let x2412: BytePoly_4 = bigint_nondet_rem!(ctx, x2409, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2411, x5, 10), x2412, 10),
            x2409,
            10
        ),
        48771,
        4,
    )?;
    let x2413: BytePoly_6 = bigint_nondet_quot!(ctx, x2410, x5, 6);
    let x2414: BytePoly_4 = bigint_nondet_rem!(ctx, x2410, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2413, x5, 10), x2414, 10),
            x2410,
            10
        ),
        48771,
        4,
    )?;
    let x2415: BytePoly_8 = bigint_mul!(x2385, x2385, 8);
    let x2416: BytePoly_8 = bigint_add!(bigint_add!(bigint_add!(x2415, x2415, 8), x2415, 8), x4, 8);
    let x2417: BytePoly_8 = bigint_add!(x74, x2416, 8);
    let x2418: BytePoly_4 = bigint_nondet_inv!(ctx, bigint_add!(x2388, x2388, 4), x5, 4);
    let x2419: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x2416, x2418, 12), x5, 4);
    let x2420: BytePoly_8 = bigint_mul!(x2388, x2419, 8);
    let x2421: BytePoly_8 = bigint_add!(x2420, x2420, 8);
    let x2422: BytePoly_9 = bigint_nondet_quot!(ctx, bigint_sub!(x2417, x2421, 8), x5, 9);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2422, x5, 13), x2421, 13),
            x2417,
            13
        ),
        73156,
        4,
    )?;
    let x2423: BytePoly_8 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2419, x2419, 8), x5, 8), x5, 8),
            x2385,
            8
        ),
        x2385,
        8
    );
    let x2424: BytePoly_9 = bigint_nondet_quot!(ctx, x2423, x5, 9);
    let x2425: BytePoly_4 = bigint_nondet_rem!(ctx, x2423, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2424, x5, 13), x2425, 13),
            x2423,
            13
        ),
        73156,
        4,
    )?;
    let x2426: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x19, bigint_mul!(x2419, x2425, 8), 8), x5, 8),
            x2388,
            8
        ),
        bigint_mul!(x2419, x2385, 8),
        8
    );
    let x2427: BytePoly_9 = bigint_nondet_quot!(ctx, x2426, x5, 9);
    let x2428: BytePoly_4 = bigint_nondet_rem!(ctx, x2426, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2427, x5, 13), x2428, 13),
            x2426,
            13
        ),
        73156,
        4,
    )?;
    let x2429: BytePoly_1 = bigint_nondet_rem!(ctx, x2390, x1, 1);
    let x2430: BytePoly_4 = bigint_nondet_quot!(ctx, x2390, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2430, x1, 5), x2429, 5), x2390, 5),
        32515,
        2,
    )?;
    let x2431: BytePoly_1 = bigint_sub!(x2, x2429, 1);
    eqz(ctx, &bigint_mul!(x2429, x2431, 2), 8131, 2)?;
    let x2432: BytePoly_4 = bigint_add!(bigint_sub!(x2428, x2414, 4), x5, 4);
    let x2433: BytePoly_4 = bigint_add!(bigint_sub!(x2425, x2412, 4), x5, 4);
    let x2434: BytePoly_4 = bigint_nondet_inv!(ctx, x2433, x5, 4);
    let x2435: BytePoly_8 = bigint_mul!(x2433, x2434, 8);
    let x2436: BytePoly_9 = bigint_nondet_quot!(ctx, x2435, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x2435, bigint_mul!(x2436, x5, 13), 13), x0, 13),
        73156,
        4,
    )?;
    let x2437: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x2432, x2434, 8), x5, 4);
    let x2438: BytePoly_8 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x2437, x2433, 8), x2432, 8), x5, 8),
        x5,
        8
    );
    let x2439: BytePoly_9 = bigint_nondet_quot!(ctx, x2438, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x2438, bigint_mul!(x2439, x5, 13), 13),
        73156,
        4,
    )?;
    let x2440: BytePoly_8 = bigint_mul!(x2437, x2437, 8);
    let x2441: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2440, x2412, 8), x5, 8), x2425, 8),
        x5,
        8
    );
    let x2442: BytePoly_9 = bigint_nondet_quot!(ctx, x2441, x5, 9);
    let x2443: BytePoly_4 = bigint_nondet_rem!(ctx, x2441, x5, 4);
    let x2444: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x5,
                    bigint_add!(
                        bigint_mul!(x2437, x2443, 8),
                        bigint_add!(bigint_sub!(x2414, bigint_mul!(x2437, x2412, 8), 8), x5, 8),
                        8
                    ),
                    8
                ),
                x5,
                8
            ),
            x5,
            8
        ),
        x19,
        8
    );
    let x2445: BytePoly_9 = bigint_nondet_quot!(ctx, x2444, x5, 9);
    let x2446: BytePoly_4 = bigint_nondet_rem!(ctx, x2444, x5, 4);
    let x2447: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2440, bigint_mul!(x2442, x5, 13), 13),
                        x2412,
                        13
                    ),
                    x2425,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x2443,
        13
    );
    eqz(ctx, &x2447, 73156, 4)?;
    let x2448: BytePoly_13 = bigint_sub!(
        bigint_add!(bigint_mul!(x2445, x5, 13), x2446, 13),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2437, bigint_sub!(x2412, x2443, 4), 8),
                        x2414,
                        8
                    ),
                    x5,
                    8
                ),
                x5,
                8
            ),
            x19,
            8
        ),
        13
    );
    eqz(ctx, &x2448, 73156, 4)?;
    let x2449: BytePoly_5 = bigint_add!(
        bigint_mul!(x2443, x2429, 5),
        bigint_mul!(x2412, x2431, 5),
        5
    );
    let x2450: BytePoly_5 = bigint_add!(
        bigint_mul!(x2446, x2429, 5),
        bigint_mul!(x2414, x2431, 5),
        5
    );
    let x2451: BytePoly_6 = bigint_nondet_quot!(ctx, x2449, x5, 6);
    let x2452: BytePoly_4 = bigint_nondet_rem!(ctx, x2449, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2451, x5, 10), x2452, 10),
            x2449,
            10
        ),
        48771,
        4,
    )?;
    let x2453: BytePoly_6 = bigint_nondet_quot!(ctx, x2450, x5, 6);
    let x2454: BytePoly_4 = bigint_nondet_rem!(ctx, x2450, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2453, x5, 10), x2454, 10),
            x2450,
            10
        ),
        48771,
        4,
    )?;
    let x2455: BytePoly_8 = bigint_mul!(x2425, x2425, 8);
    let x2456: BytePoly_8 = bigint_add!(bigint_add!(bigint_add!(x2455, x2455, 8), x2455, 8), x4, 8);
    let x2457: BytePoly_8 = bigint_add!(x74, x2456, 8);
    let x2458: BytePoly_4 = bigint_nondet_inv!(ctx, bigint_add!(x2428, x2428, 4), x5, 4);
    let x2459: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x2456, x2458, 12), x5, 4);
    let x2460: BytePoly_8 = bigint_mul!(x2428, x2459, 8);
    let x2461: BytePoly_8 = bigint_add!(x2460, x2460, 8);
    let x2462: BytePoly_9 = bigint_nondet_quot!(ctx, bigint_sub!(x2457, x2461, 8), x5, 9);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2462, x5, 13), x2461, 13),
            x2457,
            13
        ),
        73156,
        4,
    )?;
    let x2463: BytePoly_8 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2459, x2459, 8), x5, 8), x5, 8),
            x2425,
            8
        ),
        x2425,
        8
    );
    let x2464: BytePoly_9 = bigint_nondet_quot!(ctx, x2463, x5, 9);
    let x2465: BytePoly_4 = bigint_nondet_rem!(ctx, x2463, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2464, x5, 13), x2465, 13),
            x2463,
            13
        ),
        73156,
        4,
    )?;
    let x2466: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x19, bigint_mul!(x2459, x2465, 8), 8), x5, 8),
            x2428,
            8
        ),
        bigint_mul!(x2459, x2425, 8),
        8
    );
    let x2467: BytePoly_9 = bigint_nondet_quot!(ctx, x2466, x5, 9);
    let x2468: BytePoly_4 = bigint_nondet_rem!(ctx, x2466, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2467, x5, 13), x2468, 13),
            x2466,
            13
        ),
        73156,
        4,
    )?;
    let x2469: BytePoly_1 = bigint_nondet_rem!(ctx, x2430, x1, 1);
    let x2470: BytePoly_4 = bigint_nondet_quot!(ctx, x2430, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2470, x1, 5), x2469, 5), x2430, 5),
        32515,
        2,
    )?;
    let x2471: BytePoly_1 = bigint_sub!(x2, x2469, 1);
    eqz(ctx, &bigint_mul!(x2469, x2471, 2), 8131, 2)?;
    let x2472: BytePoly_4 = bigint_add!(bigint_sub!(x2468, x2454, 4), x5, 4);
    let x2473: BytePoly_4 = bigint_add!(bigint_sub!(x2465, x2452, 4), x5, 4);
    let x2474: BytePoly_4 = bigint_nondet_inv!(ctx, x2473, x5, 4);
    let x2475: BytePoly_8 = bigint_mul!(x2473, x2474, 8);
    let x2476: BytePoly_9 = bigint_nondet_quot!(ctx, x2475, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x2475, bigint_mul!(x2476, x5, 13), 13), x0, 13),
        73156,
        4,
    )?;
    let x2477: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x2472, x2474, 8), x5, 4);
    let x2478: BytePoly_8 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x2477, x2473, 8), x2472, 8), x5, 8),
        x5,
        8
    );
    let x2479: BytePoly_9 = bigint_nondet_quot!(ctx, x2478, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x2478, bigint_mul!(x2479, x5, 13), 13),
        73156,
        4,
    )?;
    let x2480: BytePoly_8 = bigint_mul!(x2477, x2477, 8);
    let x2481: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2480, x2452, 8), x5, 8), x2465, 8),
        x5,
        8
    );
    let x2482: BytePoly_9 = bigint_nondet_quot!(ctx, x2481, x5, 9);
    let x2483: BytePoly_4 = bigint_nondet_rem!(ctx, x2481, x5, 4);
    let x2484: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x5,
                    bigint_add!(
                        bigint_mul!(x2477, x2483, 8),
                        bigint_add!(bigint_sub!(x2454, bigint_mul!(x2477, x2452, 8), 8), x5, 8),
                        8
                    ),
                    8
                ),
                x5,
                8
            ),
            x5,
            8
        ),
        x19,
        8
    );
    let x2485: BytePoly_9 = bigint_nondet_quot!(ctx, x2484, x5, 9);
    let x2486: BytePoly_4 = bigint_nondet_rem!(ctx, x2484, x5, 4);
    let x2487: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2480, bigint_mul!(x2482, x5, 13), 13),
                        x2452,
                        13
                    ),
                    x2465,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x2483,
        13
    );
    eqz(ctx, &x2487, 73156, 4)?;
    let x2488: BytePoly_13 = bigint_sub!(
        bigint_add!(bigint_mul!(x2485, x5, 13), x2486, 13),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2477, bigint_sub!(x2452, x2483, 4), 8),
                        x2454,
                        8
                    ),
                    x5,
                    8
                ),
                x5,
                8
            ),
            x19,
            8
        ),
        13
    );
    eqz(ctx, &x2488, 73156, 4)?;
    let x2489: BytePoly_5 = bigint_add!(
        bigint_mul!(x2483, x2469, 5),
        bigint_mul!(x2452, x2471, 5),
        5
    );
    let x2490: BytePoly_5 = bigint_add!(
        bigint_mul!(x2486, x2469, 5),
        bigint_mul!(x2454, x2471, 5),
        5
    );
    let x2491: BytePoly_6 = bigint_nondet_quot!(ctx, x2489, x5, 6);
    let x2492: BytePoly_4 = bigint_nondet_rem!(ctx, x2489, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2491, x5, 10), x2492, 10),
            x2489,
            10
        ),
        48771,
        4,
    )?;
    let x2493: BytePoly_6 = bigint_nondet_quot!(ctx, x2490, x5, 6);
    let x2494: BytePoly_4 = bigint_nondet_rem!(ctx, x2490, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2493, x5, 10), x2494, 10),
            x2490,
            10
        ),
        48771,
        4,
    )?;
    let x2495: BytePoly_8 = bigint_mul!(x2465, x2465, 8);
    let x2496: BytePoly_8 = bigint_add!(bigint_add!(bigint_add!(x2495, x2495, 8), x2495, 8), x4, 8);
    let x2497: BytePoly_8 = bigint_add!(x74, x2496, 8);
    let x2498: BytePoly_4 = bigint_nondet_inv!(ctx, bigint_add!(x2468, x2468, 4), x5, 4);
    let x2499: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x2496, x2498, 12), x5, 4);
    let x2500: BytePoly_8 = bigint_mul!(x2468, x2499, 8);
    let x2501: BytePoly_8 = bigint_add!(x2500, x2500, 8);
    let x2502: BytePoly_9 = bigint_nondet_quot!(ctx, bigint_sub!(x2497, x2501, 8), x5, 9);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2502, x5, 13), x2501, 13),
            x2497,
            13
        ),
        73156,
        4,
    )?;
    let x2503: BytePoly_8 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2499, x2499, 8), x5, 8), x5, 8),
            x2465,
            8
        ),
        x2465,
        8
    );
    let x2504: BytePoly_9 = bigint_nondet_quot!(ctx, x2503, x5, 9);
    let x2505: BytePoly_4 = bigint_nondet_rem!(ctx, x2503, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2504, x5, 13), x2505, 13),
            x2503,
            13
        ),
        73156,
        4,
    )?;
    let x2506: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x19, bigint_mul!(x2499, x2505, 8), 8), x5, 8),
            x2468,
            8
        ),
        bigint_mul!(x2499, x2465, 8),
        8
    );
    let x2507: BytePoly_9 = bigint_nondet_quot!(ctx, x2506, x5, 9);
    let x2508: BytePoly_4 = bigint_nondet_rem!(ctx, x2506, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2507, x5, 13), x2508, 13),
            x2506,
            13
        ),
        73156,
        4,
    )?;
    let x2509: BytePoly_1 = bigint_nondet_rem!(ctx, x2470, x1, 1);
    let x2510: BytePoly_4 = bigint_nondet_quot!(ctx, x2470, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2510, x1, 5), x2509, 5), x2470, 5),
        32515,
        2,
    )?;
    let x2511: BytePoly_1 = bigint_sub!(x2, x2509, 1);
    eqz(ctx, &bigint_mul!(x2509, x2511, 2), 8131, 2)?;
    let x2512: BytePoly_4 = bigint_add!(bigint_sub!(x2508, x2494, 4), x5, 4);
    let x2513: BytePoly_4 = bigint_add!(bigint_sub!(x2505, x2492, 4), x5, 4);
    let x2514: BytePoly_4 = bigint_nondet_inv!(ctx, x2513, x5, 4);
    let x2515: BytePoly_8 = bigint_mul!(x2513, x2514, 8);
    let x2516: BytePoly_9 = bigint_nondet_quot!(ctx, x2515, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x2515, bigint_mul!(x2516, x5, 13), 13), x0, 13),
        73156,
        4,
    )?;
    let x2517: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x2512, x2514, 8), x5, 4);
    let x2518: BytePoly_8 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x2517, x2513, 8), x2512, 8), x5, 8),
        x5,
        8
    );
    let x2519: BytePoly_9 = bigint_nondet_quot!(ctx, x2518, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x2518, bigint_mul!(x2519, x5, 13), 13),
        73156,
        4,
    )?;
    let x2520: BytePoly_8 = bigint_mul!(x2517, x2517, 8);
    let x2521: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2520, x2492, 8), x5, 8), x2505, 8),
        x5,
        8
    );
    let x2522: BytePoly_9 = bigint_nondet_quot!(ctx, x2521, x5, 9);
    let x2523: BytePoly_4 = bigint_nondet_rem!(ctx, x2521, x5, 4);
    let x2524: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x5,
                    bigint_add!(
                        bigint_mul!(x2517, x2523, 8),
                        bigint_add!(bigint_sub!(x2494, bigint_mul!(x2517, x2492, 8), 8), x5, 8),
                        8
                    ),
                    8
                ),
                x5,
                8
            ),
            x5,
            8
        ),
        x19,
        8
    );
    let x2525: BytePoly_9 = bigint_nondet_quot!(ctx, x2524, x5, 9);
    let x2526: BytePoly_4 = bigint_nondet_rem!(ctx, x2524, x5, 4);
    let x2527: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2520, bigint_mul!(x2522, x5, 13), 13),
                        x2492,
                        13
                    ),
                    x2505,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x2523,
        13
    );
    eqz(ctx, &x2527, 73156, 4)?;
    let x2528: BytePoly_13 = bigint_sub!(
        bigint_add!(bigint_mul!(x2525, x5, 13), x2526, 13),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2517, bigint_sub!(x2492, x2523, 4), 8),
                        x2494,
                        8
                    ),
                    x5,
                    8
                ),
                x5,
                8
            ),
            x19,
            8
        ),
        13
    );
    eqz(ctx, &x2528, 73156, 4)?;
    let x2529: BytePoly_5 = bigint_add!(
        bigint_mul!(x2523, x2509, 5),
        bigint_mul!(x2492, x2511, 5),
        5
    );
    let x2530: BytePoly_5 = bigint_add!(
        bigint_mul!(x2526, x2509, 5),
        bigint_mul!(x2494, x2511, 5),
        5
    );
    let x2531: BytePoly_6 = bigint_nondet_quot!(ctx, x2529, x5, 6);
    let x2532: BytePoly_4 = bigint_nondet_rem!(ctx, x2529, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2531, x5, 10), x2532, 10),
            x2529,
            10
        ),
        48771,
        4,
    )?;
    let x2533: BytePoly_6 = bigint_nondet_quot!(ctx, x2530, x5, 6);
    let x2534: BytePoly_4 = bigint_nondet_rem!(ctx, x2530, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2533, x5, 10), x2534, 10),
            x2530,
            10
        ),
        48771,
        4,
    )?;
    let x2535: BytePoly_8 = bigint_mul!(x2505, x2505, 8);
    let x2536: BytePoly_8 = bigint_add!(bigint_add!(bigint_add!(x2535, x2535, 8), x2535, 8), x4, 8);
    let x2537: BytePoly_8 = bigint_add!(x74, x2536, 8);
    let x2538: BytePoly_4 = bigint_nondet_inv!(ctx, bigint_add!(x2508, x2508, 4), x5, 4);
    let x2539: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x2536, x2538, 12), x5, 4);
    let x2540: BytePoly_8 = bigint_mul!(x2508, x2539, 8);
    let x2541: BytePoly_8 = bigint_add!(x2540, x2540, 8);
    let x2542: BytePoly_9 = bigint_nondet_quot!(ctx, bigint_sub!(x2537, x2541, 8), x5, 9);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2542, x5, 13), x2541, 13),
            x2537,
            13
        ),
        73156,
        4,
    )?;
    let x2543: BytePoly_8 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2539, x2539, 8), x5, 8), x5, 8),
            x2505,
            8
        ),
        x2505,
        8
    );
    let x2544: BytePoly_9 = bigint_nondet_quot!(ctx, x2543, x5, 9);
    let x2545: BytePoly_4 = bigint_nondet_rem!(ctx, x2543, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2544, x5, 13), x2545, 13),
            x2543,
            13
        ),
        73156,
        4,
    )?;
    let x2546: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x19, bigint_mul!(x2539, x2545, 8), 8), x5, 8),
            x2508,
            8
        ),
        bigint_mul!(x2539, x2505, 8),
        8
    );
    let x2547: BytePoly_9 = bigint_nondet_quot!(ctx, x2546, x5, 9);
    let x2548: BytePoly_4 = bigint_nondet_rem!(ctx, x2546, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2547, x5, 13), x2548, 13),
            x2546,
            13
        ),
        73156,
        4,
    )?;
    let x2549: BytePoly_1 = bigint_nondet_rem!(ctx, x2510, x1, 1);
    let x2550: BytePoly_4 = bigint_nondet_quot!(ctx, x2510, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2550, x1, 5), x2549, 5), x2510, 5),
        32515,
        2,
    )?;
    let x2551: BytePoly_1 = bigint_sub!(x2, x2549, 1);
    eqz(ctx, &bigint_mul!(x2549, x2551, 2), 8131, 2)?;
    let x2552: BytePoly_4 = bigint_add!(bigint_sub!(x2548, x2534, 4), x5, 4);
    let x2553: BytePoly_4 = bigint_add!(bigint_sub!(x2545, x2532, 4), x5, 4);
    let x2554: BytePoly_4 = bigint_nondet_inv!(ctx, x2553, x5, 4);
    let x2555: BytePoly_8 = bigint_mul!(x2553, x2554, 8);
    let x2556: BytePoly_9 = bigint_nondet_quot!(ctx, x2555, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x2555, bigint_mul!(x2556, x5, 13), 13), x0, 13),
        73156,
        4,
    )?;
    let x2557: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x2552, x2554, 8), x5, 4);
    let x2558: BytePoly_8 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x2557, x2553, 8), x2552, 8), x5, 8),
        x5,
        8
    );
    let x2559: BytePoly_9 = bigint_nondet_quot!(ctx, x2558, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x2558, bigint_mul!(x2559, x5, 13), 13),
        73156,
        4,
    )?;
    let x2560: BytePoly_8 = bigint_mul!(x2557, x2557, 8);
    let x2561: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2560, x2532, 8), x5, 8), x2545, 8),
        x5,
        8
    );
    let x2562: BytePoly_9 = bigint_nondet_quot!(ctx, x2561, x5, 9);
    let x2563: BytePoly_4 = bigint_nondet_rem!(ctx, x2561, x5, 4);
    let x2564: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x5,
                    bigint_add!(
                        bigint_mul!(x2557, x2563, 8),
                        bigint_add!(bigint_sub!(x2534, bigint_mul!(x2557, x2532, 8), 8), x5, 8),
                        8
                    ),
                    8
                ),
                x5,
                8
            ),
            x5,
            8
        ),
        x19,
        8
    );
    let x2565: BytePoly_9 = bigint_nondet_quot!(ctx, x2564, x5, 9);
    let x2566: BytePoly_4 = bigint_nondet_rem!(ctx, x2564, x5, 4);
    let x2567: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2560, bigint_mul!(x2562, x5, 13), 13),
                        x2532,
                        13
                    ),
                    x2545,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x2563,
        13
    );
    eqz(ctx, &x2567, 73156, 4)?;
    let x2568: BytePoly_13 = bigint_sub!(
        bigint_add!(bigint_mul!(x2565, x5, 13), x2566, 13),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2557, bigint_sub!(x2532, x2563, 4), 8),
                        x2534,
                        8
                    ),
                    x5,
                    8
                ),
                x5,
                8
            ),
            x19,
            8
        ),
        13
    );
    eqz(ctx, &x2568, 73156, 4)?;
    let x2569: BytePoly_5 = bigint_add!(
        bigint_mul!(x2563, x2549, 5),
        bigint_mul!(x2532, x2551, 5),
        5
    );
    let x2570: BytePoly_5 = bigint_add!(
        bigint_mul!(x2566, x2549, 5),
        bigint_mul!(x2534, x2551, 5),
        5
    );
    let x2571: BytePoly_6 = bigint_nondet_quot!(ctx, x2569, x5, 6);
    let x2572: BytePoly_4 = bigint_nondet_rem!(ctx, x2569, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2571, x5, 10), x2572, 10),
            x2569,
            10
        ),
        48771,
        4,
    )?;
    let x2573: BytePoly_6 = bigint_nondet_quot!(ctx, x2570, x5, 6);
    let x2574: BytePoly_4 = bigint_nondet_rem!(ctx, x2570, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2573, x5, 10), x2574, 10),
            x2570,
            10
        ),
        48771,
        4,
    )?;
    let x2575: BytePoly_8 = bigint_mul!(x2545, x2545, 8);
    let x2576: BytePoly_8 = bigint_add!(bigint_add!(bigint_add!(x2575, x2575, 8), x2575, 8), x4, 8);
    let x2577: BytePoly_8 = bigint_add!(x74, x2576, 8);
    let x2578: BytePoly_4 = bigint_nondet_inv!(ctx, bigint_add!(x2548, x2548, 4), x5, 4);
    let x2579: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x2576, x2578, 12), x5, 4);
    let x2580: BytePoly_8 = bigint_mul!(x2548, x2579, 8);
    let x2581: BytePoly_8 = bigint_add!(x2580, x2580, 8);
    let x2582: BytePoly_9 = bigint_nondet_quot!(ctx, bigint_sub!(x2577, x2581, 8), x5, 9);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2582, x5, 13), x2581, 13),
            x2577,
            13
        ),
        73156,
        4,
    )?;
    let x2583: BytePoly_8 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2579, x2579, 8), x5, 8), x5, 8),
            x2545,
            8
        ),
        x2545,
        8
    );
    let x2584: BytePoly_9 = bigint_nondet_quot!(ctx, x2583, x5, 9);
    let x2585: BytePoly_4 = bigint_nondet_rem!(ctx, x2583, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2584, x5, 13), x2585, 13),
            x2583,
            13
        ),
        73156,
        4,
    )?;
    let x2586: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x19, bigint_mul!(x2579, x2585, 8), 8), x5, 8),
            x2548,
            8
        ),
        bigint_mul!(x2579, x2545, 8),
        8
    );
    let x2587: BytePoly_9 = bigint_nondet_quot!(ctx, x2586, x5, 9);
    let x2588: BytePoly_4 = bigint_nondet_rem!(ctx, x2586, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2587, x5, 13), x2588, 13),
            x2586,
            13
        ),
        73156,
        4,
    )?;
    let x2589: BytePoly_1 = bigint_nondet_rem!(ctx, x2550, x1, 1);
    let x2590: BytePoly_4 = bigint_nondet_quot!(ctx, x2550, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2590, x1, 5), x2589, 5), x2550, 5),
        32515,
        2,
    )?;
    let x2591: BytePoly_1 = bigint_sub!(x2, x2589, 1);
    eqz(ctx, &bigint_mul!(x2589, x2591, 2), 8131, 2)?;
    let x2592: BytePoly_4 = bigint_add!(bigint_sub!(x2588, x2574, 4), x5, 4);
    let x2593: BytePoly_4 = bigint_add!(bigint_sub!(x2585, x2572, 4), x5, 4);
    let x2594: BytePoly_4 = bigint_nondet_inv!(ctx, x2593, x5, 4);
    let x2595: BytePoly_8 = bigint_mul!(x2593, x2594, 8);
    let x2596: BytePoly_9 = bigint_nondet_quot!(ctx, x2595, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x2595, bigint_mul!(x2596, x5, 13), 13), x0, 13),
        73156,
        4,
    )?;
    let x2597: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x2592, x2594, 8), x5, 4);
    let x2598: BytePoly_8 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x2597, x2593, 8), x2592, 8), x5, 8),
        x5,
        8
    );
    let x2599: BytePoly_9 = bigint_nondet_quot!(ctx, x2598, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x2598, bigint_mul!(x2599, x5, 13), 13),
        73156,
        4,
    )?;
    let x2600: BytePoly_8 = bigint_mul!(x2597, x2597, 8);
    let x2601: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2600, x2572, 8), x5, 8), x2585, 8),
        x5,
        8
    );
    let x2602: BytePoly_9 = bigint_nondet_quot!(ctx, x2601, x5, 9);
    let x2603: BytePoly_4 = bigint_nondet_rem!(ctx, x2601, x5, 4);
    let x2604: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x5,
                    bigint_add!(
                        bigint_mul!(x2597, x2603, 8),
                        bigint_add!(bigint_sub!(x2574, bigint_mul!(x2597, x2572, 8), 8), x5, 8),
                        8
                    ),
                    8
                ),
                x5,
                8
            ),
            x5,
            8
        ),
        x19,
        8
    );
    let x2605: BytePoly_9 = bigint_nondet_quot!(ctx, x2604, x5, 9);
    let x2606: BytePoly_4 = bigint_nondet_rem!(ctx, x2604, x5, 4);
    let x2607: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2600, bigint_mul!(x2602, x5, 13), 13),
                        x2572,
                        13
                    ),
                    x2585,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x2603,
        13
    );
    eqz(ctx, &x2607, 73156, 4)?;
    let x2608: BytePoly_13 = bigint_sub!(
        bigint_add!(bigint_mul!(x2605, x5, 13), x2606, 13),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2597, bigint_sub!(x2572, x2603, 4), 8),
                        x2574,
                        8
                    ),
                    x5,
                    8
                ),
                x5,
                8
            ),
            x19,
            8
        ),
        13
    );
    eqz(ctx, &x2608, 73156, 4)?;
    let x2609: BytePoly_5 = bigint_add!(
        bigint_mul!(x2603, x2589, 5),
        bigint_mul!(x2572, x2591, 5),
        5
    );
    let x2610: BytePoly_5 = bigint_add!(
        bigint_mul!(x2606, x2589, 5),
        bigint_mul!(x2574, x2591, 5),
        5
    );
    let x2611: BytePoly_6 = bigint_nondet_quot!(ctx, x2609, x5, 6);
    let x2612: BytePoly_4 = bigint_nondet_rem!(ctx, x2609, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2611, x5, 10), x2612, 10),
            x2609,
            10
        ),
        48771,
        4,
    )?;
    let x2613: BytePoly_6 = bigint_nondet_quot!(ctx, x2610, x5, 6);
    let x2614: BytePoly_4 = bigint_nondet_rem!(ctx, x2610, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2613, x5, 10), x2614, 10),
            x2610,
            10
        ),
        48771,
        4,
    )?;
    let x2615: BytePoly_8 = bigint_mul!(x2585, x2585, 8);
    let x2616: BytePoly_8 = bigint_add!(bigint_add!(bigint_add!(x2615, x2615, 8), x2615, 8), x4, 8);
    let x2617: BytePoly_8 = bigint_add!(x74, x2616, 8);
    let x2618: BytePoly_4 = bigint_nondet_inv!(ctx, bigint_add!(x2588, x2588, 4), x5, 4);
    let x2619: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x2616, x2618, 12), x5, 4);
    let x2620: BytePoly_8 = bigint_mul!(x2588, x2619, 8);
    let x2621: BytePoly_8 = bigint_add!(x2620, x2620, 8);
    let x2622: BytePoly_9 = bigint_nondet_quot!(ctx, bigint_sub!(x2617, x2621, 8), x5, 9);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2622, x5, 13), x2621, 13),
            x2617,
            13
        ),
        73156,
        4,
    )?;
    let x2623: BytePoly_8 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2619, x2619, 8), x5, 8), x5, 8),
            x2585,
            8
        ),
        x2585,
        8
    );
    let x2624: BytePoly_9 = bigint_nondet_quot!(ctx, x2623, x5, 9);
    let x2625: BytePoly_4 = bigint_nondet_rem!(ctx, x2623, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2624, x5, 13), x2625, 13),
            x2623,
            13
        ),
        73156,
        4,
    )?;
    let x2626: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x19, bigint_mul!(x2619, x2625, 8), 8), x5, 8),
            x2588,
            8
        ),
        bigint_mul!(x2619, x2585, 8),
        8
    );
    let x2627: BytePoly_9 = bigint_nondet_quot!(ctx, x2626, x5, 9);
    let x2628: BytePoly_4 = bigint_nondet_rem!(ctx, x2626, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2627, x5, 13), x2628, 13),
            x2626,
            13
        ),
        73156,
        4,
    )?;
    let x2629: BytePoly_4 = bigint_add!(bigint_sub!(x1327, x2614, 4), x5, 4);
    let x2630: BytePoly_4 = bigint_add!(bigint_sub!(x14, x2612, 4), x5, 4);
    let x2631: BytePoly_4 = bigint_nondet_inv!(ctx, x2630, x5, 4);
    let x2632: BytePoly_8 = bigint_mul!(x2630, x2631, 8);
    let x2633: BytePoly_9 = bigint_nondet_quot!(ctx, x2632, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x2632, bigint_mul!(x2633, x5, 13), 13), x0, 13),
        73156,
        4,
    )?;
    let x2634: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x2629, x2631, 8), x5, 4);
    let x2635: BytePoly_8 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x2634, x2630, 8), x2629, 8), x5, 8),
        x5,
        8
    );
    let x2636: BytePoly_9 = bigint_nondet_quot!(ctx, x2635, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x2635, bigint_mul!(x2636, x5, 13), 13),
        73156,
        4,
    )?;
    let x2637: BytePoly_8 = bigint_mul!(x2634, x2634, 8);
    let x2638: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2637, x2612, 8), x5, 8), x14, 8),
        x5,
        8
    );
    let x2639: BytePoly_9 = bigint_nondet_quot!(ctx, x2638, x5, 9);
    let x2640: BytePoly_4 = bigint_nondet_rem!(ctx, x2638, x5, 4);
    let x2641: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x5,
                    bigint_add!(
                        bigint_mul!(x2634, x2640, 8),
                        bigint_add!(bigint_sub!(x2614, bigint_mul!(x2634, x2612, 8), 8), x5, 8),
                        8
                    ),
                    8
                ),
                x5,
                8
            ),
            x5,
            8
        ),
        x19,
        8
    );
    let x2642: BytePoly_9 = bigint_nondet_quot!(ctx, x2641, x5, 9);
    let x2643: BytePoly_4 = bigint_nondet_rem!(ctx, x2641, x5, 4);
    let x2644: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2637, bigint_mul!(x2639, x5, 13), 13),
                        x2612,
                        13
                    ),
                    x14,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x2640,
        13
    );
    eqz(ctx, &x2644, 73156, 4)?;
    let x2645: BytePoly_13 = bigint_sub!(
        bigint_add!(bigint_mul!(x2642, x5, 13), x2643, 13),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2634, bigint_sub!(x2612, x2640, 4), 8),
                        x2614,
                        8
                    ),
                    x5,
                    8
                ),
                x5,
                8
            ),
            x19,
            8
        ),
        13
    );
    eqz(ctx, &x2645, 73156, 4)?;
    let x2646: BytePoly_4 = bigint_add!(bigint_sub!(x2643, x1342, 4), x5, 4);
    let x2647: BytePoly_4 = bigint_add!(bigint_sub!(x2640, x1339, 4), x5, 4);
    let x2648: BytePoly_4 = bigint_nondet_inv!(ctx, x2647, x5, 4);
    let x2649: BytePoly_8 = bigint_mul!(x2647, x2648, 8);
    let x2650: BytePoly_9 = bigint_nondet_quot!(ctx, x2649, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x2649, bigint_mul!(x2650, x5, 13), 13), x0, 13),
        73156,
        4,
    )?;
    let x2651: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x2646, x2648, 8), x5, 4);
    let x2652: BytePoly_8 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x2651, x2647, 8), x2646, 8), x5, 8),
        x5,
        8
    );
    let x2653: BytePoly_9 = bigint_nondet_quot!(ctx, x2652, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x2652, bigint_mul!(x2653, x5, 13), 13),
        73156,
        4,
    )?;
    let x2654: BytePoly_8 = bigint_mul!(x2651, x2651, 8);
    let x2655: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2654, x1339, 8), x5, 8), x2640, 8),
        x5,
        8
    );
    let x2656: BytePoly_9 = bigint_nondet_quot!(ctx, x2655, x5, 9);
    let x2657: BytePoly_4 = bigint_nondet_rem!(ctx, x2655, x5, 4);
    let x2658: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x5,
                    bigint_add!(
                        bigint_mul!(x2651, x2657, 8),
                        bigint_add!(bigint_sub!(x1342, bigint_mul!(x2651, x1339, 8), 8), x5, 8),
                        8
                    ),
                    8
                ),
                x5,
                8
            ),
            x5,
            8
        ),
        x19,
        8
    );
    let x2659: BytePoly_9 = bigint_nondet_quot!(ctx, x2658, x5, 9);
    let x2660: BytePoly_4 = bigint_nondet_rem!(ctx, x2658, x5, 4);
    let x2661: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2654, bigint_mul!(x2656, x5, 13), 13),
                        x1339,
                        13
                    ),
                    x2640,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x2657,
        13
    );
    eqz(ctx, &x2661, 73156, 4)?;
    let x2662: BytePoly_13 = bigint_sub!(
        bigint_add!(bigint_mul!(x2659, x5, 13), x2660, 13),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2651, bigint_sub!(x1339, x2657, 4), 8),
                        x1342,
                        8
                    ),
                    x5,
                    8
                ),
                x5,
                8
            ),
            x19,
            8
        ),
        13
    );
    eqz(ctx, &x2662, 73156, 4)?;
    eqz(ctx, &bigint_sub!(x12, x2657, 5), 34, 1)?;
    eqz(ctx, &bigint_sub!(x2660, x2660, 4), 34, 1)?;
    return Ok(());
}
pub fn ec_aff_add_test_8(ctx: &mut BigIntContext) -> Result<()> {
    let x0: BytePoly_1 = bigint_const!(ctx, 1);
    let x1: BytePoly_1 = bigint_const!(ctx, 11);
    let x2: BytePoly_1 = bigint_def!(ctx, 1, 0, 1);
    let x3: BytePoly_1 = bigint_def!(ctx, 1, 1, 1);
    let x4: BytePoly_1 = bigint_def!(ctx, 1, 2, 1);
    let x5: BytePoly_1 = bigint_def!(ctx, 1, 3, 1);
    let x6: BytePoly_1 = bigint_def!(ctx, 1, 4, 1);
    let x7: BytePoly_1 = bigint_def!(ctx, 1, 5, 1);
    let x8: BytePoly_1 = bigint_add!(bigint_sub!(x5, x3, 1), x1, 1);
    let x9: BytePoly_1 = bigint_add!(bigint_sub!(x4, x2, 1), x1, 1);
    let x10: BytePoly_1 = bigint_nondet_inv!(ctx, x9, x1, 1);
    let x11: BytePoly_2 = bigint_mul!(x9, x10, 2);
    let x12: BytePoly_3 = bigint_nondet_quot!(ctx, x11, x1, 3);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x11, bigint_mul!(x12, x1, 4), 4), x0, 4),
        24387,
        2,
    )?;
    let x13: BytePoly_1 = bigint_nondet_rem!(ctx, bigint_mul!(x8, x10, 2), x1, 1);
    let x14: BytePoly_2 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x13, x9, 2), x8, 2), x1, 2),
        x1,
        2
    );
    let x15: BytePoly_3 = bigint_nondet_quot!(ctx, x14, x1, 3);
    eqz(ctx, &bigint_sub!(x14, bigint_mul!(x15, x1, 4), 4), 24387, 2)?;
    let x16: BytePoly_2 = bigint_mul!(x13, x13, 2);
    let x17: BytePoly_2 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x16, x2, 2), x1, 2), x4, 2),
        x1,
        2
    );
    let x18: BytePoly_3 = bigint_nondet_quot!(ctx, x17, x1, 3);
    let x19: BytePoly_1 = bigint_nondet_rem!(ctx, x17, x1, 1);
    let x20: BytePoly_2 = bigint_mul!(x1, x1, 2);
    let x21: BytePoly_2 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x13, x19, 2),
                        bigint_add!(bigint_sub!(x3, bigint_mul!(x13, x2, 2), 2), x1, 2),
                        2
                    ),
                    2
                ),
                x1,
                2
            ),
            x1,
            2
        ),
        x20,
        2
    );
    let x22: BytePoly_3 = bigint_nondet_quot!(ctx, x21, x1, 3);
    let x23: BytePoly_1 = bigint_nondet_rem!(ctx, x21, x1, 1);
    let x24: BytePoly_4 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x16, bigint_mul!(x18, x1, 4), 4), x2, 4),
                    x4,
                    4
                ),
                x1,
                4
            ),
            x1,
            4
        ),
        x19,
        4
    );
    eqz(ctx, &x24, 24387, 2)?;
    let x25: BytePoly_4 = bigint_sub!(
        bigint_add!(bigint_mul!(x22, x1, 4), x23, 4),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x13, bigint_sub!(x2, x19, 1), 2), x3, 2),
                    x1,
                    2
                ),
                x1,
                2
            ),
            x20,
            2
        ),
        4
    );
    eqz(ctx, &x25, 24387, 2)?;
    eqz(ctx, &bigint_sub!(x19, x6, 1), 34, 1)?;
    eqz(ctx, &bigint_sub!(x23, x7, 1), 34, 1)?;
    return Ok(());
}
pub fn ec_aff_add_test_256(ctx: &mut BigIntContext) -> Result<()> {
    let x0: BytePoly_1 = bigint_const!(ctx, 1);
    let x1: BytePoly_32 = bigint_const!(
        ctx, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0
    );
    let x2: BytePoly_32 = bigint_def!(ctx, 32, 0, 1);
    let x3: BytePoly_32 = bigint_def!(ctx, 32, 1, 1);
    let x4: BytePoly_32 = bigint_def!(ctx, 32, 2, 1);
    let x5: BytePoly_32 = bigint_def!(ctx, 32, 3, 1);
    let x6: BytePoly_32 = bigint_def!(ctx, 32, 4, 1);
    let x7: BytePoly_32 = bigint_def!(ctx, 32, 5, 1);
    let x8: BytePoly_32 = bigint_add!(bigint_sub!(x5, x3, 32), x1, 32);
    let x9: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2, 32), x1, 32);
    let x10: BytePoly_32 = bigint_nondet_inv!(ctx, x9, x1, 32);
    let x11: BytePoly_64 = bigint_mul!(x9, x10, 64);
    let x12: BytePoly_66 = bigint_nondet_quot!(ctx, x11, x1, 66);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x11, bigint_mul!(x12, x1, 98), 98), x0, 98),
        536459,
        4,
    )?;
    let x13: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x8, x10, 64), x1, 32);
    let x14: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x13, x9, 64), x8, 64), x1, 64),
        x1,
        64
    );
    let x15: BytePoly_66 = bigint_nondet_quot!(ctx, x14, x1, 66);
    eqz(
        ctx,
        &bigint_sub!(x14, bigint_mul!(x15, x1, 98), 98),
        536459,
        4,
    )?;
    let x16: BytePoly_64 = bigint_mul!(x13, x13, 64);
    let x17: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x16, x2, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x18: BytePoly_66 = bigint_nondet_quot!(ctx, x17, x1, 66);
    let x19: BytePoly_32 = bigint_nondet_rem!(ctx, x17, x1, 32);
    let x20: BytePoly_64 = bigint_mul!(x1, x1, 64);
    let x21: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x13, x19, 64),
                        bigint_add!(bigint_sub!(x3, bigint_mul!(x13, x2, 64), 64), x1, 64),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x22: BytePoly_66 = bigint_nondet_quot!(ctx, x21, x1, 66);
    let x23: BytePoly_32 = bigint_nondet_rem!(ctx, x21, x1, 32);
    let x24: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x16, bigint_mul!(x18, x1, 98), 98), x2, 98),
                    x4,
                    98
                ),
                x1,
                98
            ),
            x1,
            98
        ),
        x19,
        98
    );
    eqz(ctx, &x24, 536459, 4)?;
    let x25: BytePoly_98 = bigint_sub!(
        bigint_add!(bigint_mul!(x22, x1, 98), x23, 98),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x13, bigint_sub!(x2, x19, 32), 64), x3, 64),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        98
    );
    eqz(ctx, &x25, 536459, 4)?;
    eqz(ctx, &bigint_sub!(x19, x6, 32), 34, 1)?;
    eqz(ctx, &bigint_sub!(x23, x7, 32), 34, 1)?;
    return Ok(());
}
pub fn ec_add_rz8test1(ctx: &mut BigIntContext) -> Result<()> {
    let x0: BytePoly_1 = bigint_const!(ctx, 1);
    let x1: BytePoly_1 = bigint_const!(ctx, 179);
    let x2: BytePoly_1 = bigint_def!(ctx, 1, 0, 1);
    let x3: BytePoly_1 = bigint_def!(ctx, 1, 1, 1);
    let x4: BytePoly_1 = bigint_def!(ctx, 1, 2, 1);
    let x5: BytePoly_1 = bigint_def!(ctx, 1, 3, 1);
    let x6: BytePoly_1 = bigint_def!(ctx, 1, 4, 1);
    let x7: BytePoly_1 = bigint_def!(ctx, 1, 5, 1);
    let x8: BytePoly_1 = bigint_add!(bigint_sub!(x5, x3, 1), x1, 1);
    let x9: BytePoly_1 = bigint_add!(bigint_sub!(x4, x2, 1), x1, 1);
    let x10: BytePoly_1 = bigint_nondet_inv!(ctx, x9, x1, 1);
    let x11: BytePoly_2 = bigint_mul!(x9, x10, 2);
    let x12: BytePoly_3 = bigint_nondet_quot!(ctx, x11, x1, 3);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x11, bigint_mul!(x12, x1, 4), 4), x0, 4),
        24387,
        2,
    )?;
    let x13: BytePoly_1 = bigint_nondet_rem!(ctx, bigint_mul!(x8, x10, 2), x1, 1);
    let x14: BytePoly_2 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x13, x9, 2), x8, 2), x1, 2),
        x1,
        2
    );
    let x15: BytePoly_3 = bigint_nondet_quot!(ctx, x14, x1, 3);
    eqz(ctx, &bigint_sub!(x14, bigint_mul!(x15, x1, 4), 4), 24387, 2)?;
    let x16: BytePoly_2 = bigint_mul!(x13, x13, 2);
    let x17: BytePoly_2 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x16, x2, 2), x1, 2), x4, 2),
        x1,
        2
    );
    let x18: BytePoly_3 = bigint_nondet_quot!(ctx, x17, x1, 3);
    let x19: BytePoly_1 = bigint_nondet_rem!(ctx, x17, x1, 1);
    let x20: BytePoly_2 = bigint_mul!(x1, x1, 2);
    let x21: BytePoly_2 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x13, x19, 2),
                        bigint_add!(bigint_sub!(x3, bigint_mul!(x13, x2, 2), 2), x1, 2),
                        2
                    ),
                    2
                ),
                x1,
                2
            ),
            x1,
            2
        ),
        x20,
        2
    );
    let x22: BytePoly_3 = bigint_nondet_quot!(ctx, x21, x1, 3);
    let x23: BytePoly_1 = bigint_nondet_rem!(ctx, x21, x1, 1);
    let x24: BytePoly_4 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x16, bigint_mul!(x18, x1, 4), 4), x2, 4),
                    x4,
                    4
                ),
                x1,
                4
            ),
            x1,
            4
        ),
        x19,
        4
    );
    eqz(ctx, &x24, 24387, 2)?;
    let x25: BytePoly_4 = bigint_sub!(
        bigint_add!(bigint_mul!(x22, x1, 4), x23, 4),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x13, bigint_sub!(x2, x19, 1), 2), x3, 2),
                    x1,
                    2
                ),
                x1,
                2
            ),
            x20,
            2
        ),
        4
    );
    eqz(ctx, &x25, 24387, 2)?;
    eqz(ctx, &bigint_sub!(x19, x6, 1), 34, 1)?;
    eqz(ctx, &bigint_sub!(x23, x7, 1), 34, 1)?;
    return Ok(());
}
pub fn ec_add_secp256k1(ctx: &mut BigIntContext) -> Result<()> {
    let x0: BytePoly_1 = bigint_const!(ctx, 1);
    let x1: BytePoly_32 = bigint_const!(
        ctx, 47, 252, 255, 255, 254, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
        255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255
    );
    let x2: BytePoly_32 = bigint_def!(ctx, 32, 0, 1);
    let x3: BytePoly_32 = bigint_def!(ctx, 32, 1, 1);
    let x4: BytePoly_32 = bigint_def!(ctx, 32, 2, 1);
    let x5: BytePoly_32 = bigint_def!(ctx, 32, 3, 1);
    let x6: BytePoly_32 = bigint_def!(ctx, 32, 4, 1);
    let x7: BytePoly_32 = bigint_def!(ctx, 32, 5, 1);
    let x8: BytePoly_32 = bigint_add!(bigint_sub!(x5, x3, 32), x1, 32);
    let x9: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2, 32), x1, 32);
    let x10: BytePoly_32 = bigint_nondet_inv!(ctx, x9, x1, 32);
    let x11: BytePoly_64 = bigint_mul!(x9, x10, 64);
    let x12: BytePoly_34 = bigint_nondet_quot!(ctx, x11, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x11, bigint_mul!(x12, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x13: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x8, x10, 64), x1, 32);
    let x14: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x13, x9, 64), x8, 64), x1, 64),
        x1,
        64
    );
    let x15: BytePoly_34 = bigint_nondet_quot!(ctx, x14, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x14, bigint_mul!(x15, x1, 66), 66),
        276359,
        4,
    )?;
    let x16: BytePoly_64 = bigint_mul!(x13, x13, 64);
    let x17: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x16, x2, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x18: BytePoly_34 = bigint_nondet_quot!(ctx, x17, x1, 34);
    let x19: BytePoly_32 = bigint_nondet_rem!(ctx, x17, x1, 32);
    let x20: BytePoly_64 = bigint_mul!(x1, x1, 64);
    let x21: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x13, x19, 64),
                        bigint_add!(bigint_sub!(x3, bigint_mul!(x13, x2, 64), 64), x1, 64),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x22: BytePoly_34 = bigint_nondet_quot!(ctx, x21, x1, 34);
    let x23: BytePoly_32 = bigint_nondet_rem!(ctx, x21, x1, 32);
    let x24: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x16, bigint_mul!(x18, x1, 66), 66), x2, 66),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x19,
        66
    );
    eqz(ctx, &x24, 276359, 4)?;
    let x25: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x22, x1, 66), x23, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x13, bigint_sub!(x2, x19, 32), 64), x3, 64),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x25, 276359, 4)?;
    eqz(ctx, &bigint_sub!(x19, x6, 32), 34, 1)?;
    eqz(ctx, &bigint_sub!(x23, x7, 32), 34, 1)?;
    return Ok(());
}
pub fn ec_aff_doub_test_8(ctx: &mut BigIntContext) -> Result<()> {
    let x0: BytePoly_1 = bigint_const!(ctx, 5);
    let x1: BytePoly_1 = bigint_const!(ctx, 11);
    let x2: BytePoly_1 = bigint_def!(ctx, 1, 0, 1);
    let x3: BytePoly_1 = bigint_def!(ctx, 1, 1, 1);
    let x4: BytePoly_1 = bigint_def!(ctx, 1, 2, 1);
    let x5: BytePoly_1 = bigint_def!(ctx, 1, 3, 1);
    let x6: BytePoly_2 = bigint_mul!(x2, x2, 2);
    let x7: BytePoly_2 = bigint_add!(bigint_add!(bigint_add!(x6, x6, 2), x6, 2), x0, 2);
    let x8: BytePoly_2 = bigint_mul!(x1, x1, 2);
    let x9: BytePoly_2 = bigint_add!(bigint_add!(x8, x8, 2), x7, 2);
    let x10: BytePoly_1 = bigint_nondet_inv!(ctx, bigint_add!(x3, x3, 1), x1, 1);
    let x11: BytePoly_1 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x10, 3), x1, 1);
    let x12: BytePoly_2 = bigint_mul!(x3, x11, 2);
    let x13: BytePoly_2 = bigint_add!(x12, x12, 2);
    let x14: BytePoly_3 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x13, 2), x1, 3);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x14, x1, 4), x13, 4), x9, 4),
        24387,
        2,
    )?;
    let x15: BytePoly_2 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x11, x11, 2), x1, 2), x1, 2),
            x2,
            2
        ),
        x2,
        2
    );
    let x16: BytePoly_3 = bigint_nondet_quot!(ctx, x15, x1, 3);
    let x17: BytePoly_1 = bigint_nondet_rem!(ctx, x15, x1, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x16, x1, 4), x17, 4), x15, 4),
        24387,
        2,
    )?;
    let x18: BytePoly_2 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x11, x17, 2), 2), x1, 2),
            x3,
            2
        ),
        bigint_mul!(x11, x2, 2),
        2
    );
    let x19: BytePoly_3 = bigint_nondet_quot!(ctx, x18, x1, 3);
    let x20: BytePoly_1 = bigint_nondet_rem!(ctx, x18, x1, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x19, x1, 4), x20, 4), x18, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x17, x4, 1), 34, 1)?;
    eqz(ctx, &bigint_sub!(x20, x5, 1), 34, 1)?;
    return Ok(());
}
pub fn ec_aff_doub_test_256(ctx: &mut BigIntContext) -> Result<()> {
    let x0: BytePoly_32 = bigint_const!(
        ctx, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0
    );
    let x1: BytePoly_32 = bigint_const!(
        ctx, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0
    );
    let x2: BytePoly_32 = bigint_def!(ctx, 32, 0, 1);
    let x3: BytePoly_32 = bigint_def!(ctx, 32, 1, 1);
    let x4: BytePoly_32 = bigint_def!(ctx, 32, 2, 1);
    let x5: BytePoly_32 = bigint_def!(ctx, 32, 3, 1);
    let x6: BytePoly_64 = bigint_mul!(x2, x2, 64);
    let x7: BytePoly_64 = bigint_add!(bigint_add!(bigint_add!(x6, x6, 64), x6, 64), x0, 64);
    let x8: BytePoly_64 = bigint_mul!(x1, x1, 64);
    let x9: BytePoly_64 = bigint_add!(bigint_add!(x8, x8, 64), x7, 64);
    let x10: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x3, x3, 32), x1, 32);
    let x11: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x10, 96), x1, 32);
    let x12: BytePoly_64 = bigint_mul!(x3, x11, 64);
    let x13: BytePoly_64 = bigint_add!(x12, x12, 64);
    let x14: BytePoly_66 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x13, 64), x1, 66);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x14, x1, 98), x13, 98), x9, 98),
        536459,
        4,
    )?;
    let x15: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x11, x11, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x16: BytePoly_66 = bigint_nondet_quot!(ctx, x15, x1, 66);
    let x17: BytePoly_32 = bigint_nondet_rem!(ctx, x15, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x16, x1, 98), x17, 98), x15, 98),
        536459,
        4,
    )?;
    let x18: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x11, x17, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x11, x2, 64),
        64
    );
    let x19: BytePoly_66 = bigint_nondet_quot!(ctx, x18, x1, 66);
    let x20: BytePoly_32 = bigint_nondet_rem!(ctx, x18, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x19, x1, 98), x20, 98), x18, 98),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x17, x4, 32), 34, 1)?;
    eqz(ctx, &bigint_sub!(x20, x5, 32), 34, 1)?;
    return Ok(());
}
pub fn ec_doub_rz8test1(ctx: &mut BigIntContext) -> Result<()> {
    let x0: BytePoly_1 = bigint_const!(ctx, 1);
    let x1: BytePoly_1 = bigint_const!(ctx, 179);
    let x2: BytePoly_1 = bigint_def!(ctx, 1, 0, 1);
    let x3: BytePoly_1 = bigint_def!(ctx, 1, 1, 1);
    let x4: BytePoly_1 = bigint_def!(ctx, 1, 2, 1);
    let x5: BytePoly_1 = bigint_def!(ctx, 1, 3, 1);
    let x6: BytePoly_2 = bigint_mul!(x2, x2, 2);
    let x7: BytePoly_2 = bigint_add!(bigint_add!(bigint_add!(x6, x6, 2), x6, 2), x0, 2);
    let x8: BytePoly_2 = bigint_mul!(x1, x1, 2);
    let x9: BytePoly_2 = bigint_add!(bigint_add!(x8, x8, 2), x7, 2);
    let x10: BytePoly_1 = bigint_nondet_inv!(ctx, bigint_add!(x3, x3, 1), x1, 1);
    let x11: BytePoly_1 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x10, 3), x1, 1);
    let x12: BytePoly_2 = bigint_mul!(x3, x11, 2);
    let x13: BytePoly_2 = bigint_add!(x12, x12, 2);
    let x14: BytePoly_3 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x13, 2), x1, 3);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x14, x1, 4), x13, 4), x9, 4),
        24387,
        2,
    )?;
    let x15: BytePoly_2 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x11, x11, 2), x1, 2), x1, 2),
            x2,
            2
        ),
        x2,
        2
    );
    let x16: BytePoly_3 = bigint_nondet_quot!(ctx, x15, x1, 3);
    let x17: BytePoly_1 = bigint_nondet_rem!(ctx, x15, x1, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x16, x1, 4), x17, 4), x15, 4),
        24387,
        2,
    )?;
    let x18: BytePoly_2 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x11, x17, 2), 2), x1, 2),
            x3,
            2
        ),
        bigint_mul!(x11, x2, 2),
        2
    );
    let x19: BytePoly_3 = bigint_nondet_quot!(ctx, x18, x1, 3);
    let x20: BytePoly_1 = bigint_nondet_rem!(ctx, x18, x1, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x19, x1, 4), x20, 4), x18, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x17, x4, 1), 34, 1)?;
    eqz(ctx, &bigint_sub!(x20, x5, 1), 34, 1)?;
    return Ok(());
}
pub fn ec_doub_secp256k1(ctx: &mut BigIntContext) -> Result<()> {
    let x0: BytePoly_1 = bigint_const!(ctx, 0);
    let x1: BytePoly_32 = bigint_const!(
        ctx, 47, 252, 255, 255, 254, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
        255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255
    );
    let x2: BytePoly_32 = bigint_def!(ctx, 32, 0, 1);
    let x3: BytePoly_32 = bigint_def!(ctx, 32, 1, 1);
    let x4: BytePoly_32 = bigint_def!(ctx, 32, 2, 1);
    let x5: BytePoly_32 = bigint_def!(ctx, 32, 3, 1);
    let x6: BytePoly_64 = bigint_mul!(x2, x2, 64);
    let x7: BytePoly_64 = bigint_add!(bigint_add!(bigint_add!(x6, x6, 64), x6, 64), x0, 64);
    let x8: BytePoly_64 = bigint_mul!(x1, x1, 64);
    let x9: BytePoly_64 = bigint_add!(bigint_add!(x8, x8, 64), x7, 64);
    let x10: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x3, x3, 32), x1, 32);
    let x11: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x10, 96), x1, 32);
    let x12: BytePoly_64 = bigint_mul!(x3, x11, 64);
    let x13: BytePoly_64 = bigint_add!(x12, x12, 64);
    let x14: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x13, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x14, x1, 66), x13, 66), x9, 66),
        276359,
        4,
    )?;
    let x15: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x11, x11, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x16: BytePoly_34 = bigint_nondet_quot!(ctx, x15, x1, 34);
    let x17: BytePoly_32 = bigint_nondet_rem!(ctx, x15, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x16, x1, 66), x17, 66), x15, 66),
        276359,
        4,
    )?;
    let x18: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x11, x17, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x11, x2, 64),
        64
    );
    let x19: BytePoly_34 = bigint_nondet_quot!(ctx, x18, x1, 34);
    let x20: BytePoly_32 = bigint_nondet_rem!(ctx, x18, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x19, x1, 66), x20, 66), x18, 66),
        276359,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x17, x4, 32), 34, 1)?;
    eqz(ctx, &bigint_sub!(x20, x5, 32), 34, 1)?;
    return Ok(());
}
pub fn ec_aff_mul_test_8(ctx: &mut BigIntContext) -> Result<()> {
    let x0: BytePoly_1 = bigint_const!(ctx, 12);
    let x1: BytePoly_1 = bigint_const!(ctx, 1);
    let x2: BytePoly_1 = bigint_const!(ctx, 179);
    let x3: BytePoly_1 = bigint_const!(ctx, 2);
    let x4: BytePoly_1 = bigint_const!(ctx, 1);
    let x5: BytePoly_1 = bigint_def!(ctx, 1, 0, 1);
    let x6: BytePoly_1 = bigint_def!(ctx, 1, 1, 1);
    let x7: BytePoly_1 = bigint_def!(ctx, 1, 2, 1);
    let x8: BytePoly_1 = bigint_def!(ctx, 1, 3, 1);
    let x9: BytePoly_1 = bigint_def!(ctx, 1, 4, 1);
    let x10: BytePoly_1 = bigint_def!(ctx, 1, 5, 1);
    let x11: BytePoly_1 = bigint_def!(ctx, 1, 6, 1);
    eqz(ctx, &bigint_sub!(x5, x5, 1), 34, 1)?;
    eqz(ctx, &bigint_sub!(x6, x6, 1), 34, 1)?;
    eqz(ctx, &bigint_sub!(x7, x7, 1), 34, 1)?;
    eqz(ctx, &bigint_sub!(x8, x8, 1), 34, 1)?;
    eqz(ctx, &bigint_sub!(x9, x9, 1), 34, 1)?;
    eqz(ctx, &bigint_sub!(x10, x10, 1), 34, 1)?;
    eqz(ctx, &bigint_sub!(x11, x11, 1), 34, 1)?;
    let x12: BytePoly_2 = bigint_mul!(x8, x8, 2);
    let x13: BytePoly_3 = bigint_nondet_quot!(ctx, x12, x2, 3);
    let x14: BytePoly_1 = bigint_nondet_rem!(ctx, x12, x2, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x13, x2, 4), x14, 4), x12, 4),
        24387,
        2,
    )?;
    let x15: BytePoly_2 = bigint_mul!(x2, x2, 2);
    let x16: BytePoly_2 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_add!(bigint_mul!(x8, x14, 2), bigint_mul!(x8, x1, 2), 2),
                x0,
                2
            ),
            bigint_mul!(x9, x9, 2),
            2
        ),
        x15,
        2
    );
    let x17: BytePoly_3 = bigint_nondet_quot!(ctx, x16, x2, 3);
    let x18: BytePoly_1 = bigint_nondet_rem!(ctx, x16, x2, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x17, x2, 4), x18, 4), x16, 4),
        24387,
        2,
    )?;
    eqz(ctx, &x18, 34, 1)?;
    let x19: BytePoly_1 = bigint_nondet_rem!(ctx, x7, x3, 1);
    let x20: BytePoly_1 = bigint_nondet_quot!(ctx, x7, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x20, x3, 2), x19, 2), x7, 2),
        8131,
        2,
    )?;
    let x21: BytePoly_1 = bigint_sub!(x4, x19, 1);
    eqz(ctx, &bigint_mul!(x19, x21, 2), 8131, 2)?;
    let x22: BytePoly_1 = bigint_add!(bigint_sub!(x6, x9, 1), x2, 1);
    let x23: BytePoly_1 = bigint_add!(bigint_sub!(x5, x8, 1), x2, 1);
    let x24: BytePoly_1 = bigint_nondet_inv!(ctx, x23, x2, 1);
    let x25: BytePoly_2 = bigint_mul!(x23, x24, 2);
    let x26: BytePoly_3 = bigint_nondet_quot!(ctx, x25, x2, 3);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x25, bigint_mul!(x26, x2, 4), 4), x1, 4),
        24387,
        2,
    )?;
    let x27: BytePoly_1 = bigint_nondet_rem!(ctx, bigint_mul!(x22, x24, 2), x2, 1);
    let x28: BytePoly_2 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x27, x23, 2), x22, 2), x2, 2),
        x2,
        2
    );
    let x29: BytePoly_3 = bigint_nondet_quot!(ctx, x28, x2, 3);
    eqz(ctx, &bigint_sub!(x28, bigint_mul!(x29, x2, 4), 4), 24387, 2)?;
    let x30: BytePoly_2 = bigint_mul!(x27, x27, 2);
    let x31: BytePoly_2 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x30, x8, 2), x2, 2), x5, 2),
        x2,
        2
    );
    let x32: BytePoly_3 = bigint_nondet_quot!(ctx, x31, x2, 3);
    let x33: BytePoly_1 = bigint_nondet_rem!(ctx, x31, x2, 1);
    let x34: BytePoly_2 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x2,
                    bigint_add!(
                        bigint_mul!(x27, x33, 2),
                        bigint_add!(bigint_sub!(x9, bigint_mul!(x27, x8, 2), 2), x2, 2),
                        2
                    ),
                    2
                ),
                x2,
                2
            ),
            x2,
            2
        ),
        x15,
        2
    );
    let x35: BytePoly_3 = bigint_nondet_quot!(ctx, x34, x2, 3);
    let x36: BytePoly_1 = bigint_nondet_rem!(ctx, x34, x2, 1);
    let x37: BytePoly_4 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x30, bigint_mul!(x32, x2, 4), 4), x8, 4),
                    x5,
                    4
                ),
                x2,
                4
            ),
            x2,
            4
        ),
        x33,
        4
    );
    eqz(ctx, &x37, 24387, 2)?;
    let x38: BytePoly_4 = bigint_sub!(
        bigint_add!(bigint_mul!(x35, x2, 4), x36, 4),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x27, bigint_sub!(x8, x33, 1), 2), x9, 2),
                    x2,
                    2
                ),
                x2,
                2
            ),
            x15,
            2
        ),
        4
    );
    eqz(ctx, &x38, 24387, 2)?;
    let x39: BytePoly_2 = bigint_add!(bigint_mul!(x33, x19, 2), bigint_mul!(x8, x21, 2), 2);
    let x40: BytePoly_2 = bigint_add!(bigint_mul!(x36, x19, 2), bigint_mul!(x9, x21, 2), 2);
    let x41: BytePoly_3 = bigint_nondet_quot!(ctx, x39, x2, 3);
    let x42: BytePoly_1 = bigint_nondet_rem!(ctx, x39, x2, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x41, x2, 4), x42, 4), x39, 4),
        24387,
        2,
    )?;
    let x43: BytePoly_3 = bigint_nondet_quot!(ctx, x40, x2, 3);
    let x44: BytePoly_1 = bigint_nondet_rem!(ctx, x40, x2, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x43, x2, 4), x44, 4), x40, 4),
        24387,
        2,
    )?;
    let x45: BytePoly_2 = bigint_mul!(x5, x5, 2);
    let x46: BytePoly_2 = bigint_add!(bigint_add!(bigint_add!(x45, x45, 2), x45, 2), x1, 2);
    let x47: BytePoly_2 = bigint_add!(x15, x15, 2);
    let x48: BytePoly_2 = bigint_add!(x47, x46, 2);
    let x49: BytePoly_1 = bigint_nondet_inv!(ctx, bigint_add!(x6, x6, 1), x2, 1);
    let x50: BytePoly_1 = bigint_nondet_rem!(ctx, bigint_mul!(x46, x49, 3), x2, 1);
    let x51: BytePoly_2 = bigint_mul!(x6, x50, 2);
    let x52: BytePoly_2 = bigint_add!(x51, x51, 2);
    let x53: BytePoly_3 = bigint_nondet_quot!(ctx, bigint_sub!(x48, x52, 2), x2, 3);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x53, x2, 4), x52, 4), x48, 4),
        24387,
        2,
    )?;
    let x54: BytePoly_2 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x50, x50, 2), x2, 2), x2, 2),
            x5,
            2
        ),
        x5,
        2
    );
    let x55: BytePoly_3 = bigint_nondet_quot!(ctx, x54, x2, 3);
    let x56: BytePoly_1 = bigint_nondet_rem!(ctx, x54, x2, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x55, x2, 4), x56, 4), x54, 4),
        24387,
        2,
    )?;
    let x57: BytePoly_2 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x15, bigint_mul!(x50, x56, 2), 2), x2, 2),
            x6,
            2
        ),
        bigint_mul!(x50, x5, 2),
        2
    );
    let x58: BytePoly_3 = bigint_nondet_quot!(ctx, x57, x2, 3);
    let x59: BytePoly_1 = bigint_nondet_rem!(ctx, x57, x2, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x58, x2, 4), x59, 4), x57, 4),
        24387,
        2,
    )?;
    let x60: BytePoly_1 = bigint_nondet_rem!(ctx, x20, x3, 1);
    let x61: BytePoly_1 = bigint_nondet_quot!(ctx, x20, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x61, x3, 2), x60, 2), x20, 2),
        8131,
        2,
    )?;
    let x62: BytePoly_1 = bigint_sub!(x4, x60, 1);
    eqz(ctx, &bigint_mul!(x60, x62, 2), 8131, 2)?;
    let x63: BytePoly_1 = bigint_add!(bigint_sub!(x59, x44, 1), x2, 1);
    let x64: BytePoly_1 = bigint_add!(bigint_sub!(x56, x42, 1), x2, 1);
    let x65: BytePoly_1 = bigint_nondet_inv!(ctx, x64, x2, 1);
    let x66: BytePoly_2 = bigint_mul!(x64, x65, 2);
    let x67: BytePoly_3 = bigint_nondet_quot!(ctx, x66, x2, 3);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x66, bigint_mul!(x67, x2, 4), 4), x1, 4),
        24387,
        2,
    )?;
    let x68: BytePoly_1 = bigint_nondet_rem!(ctx, bigint_mul!(x63, x65, 2), x2, 1);
    let x69: BytePoly_2 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x68, x64, 2), x63, 2), x2, 2),
        x2,
        2
    );
    let x70: BytePoly_3 = bigint_nondet_quot!(ctx, x69, x2, 3);
    eqz(ctx, &bigint_sub!(x69, bigint_mul!(x70, x2, 4), 4), 24387, 2)?;
    let x71: BytePoly_2 = bigint_mul!(x68, x68, 2);
    let x72: BytePoly_2 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x71, x42, 2), x2, 2), x56, 2),
        x2,
        2
    );
    let x73: BytePoly_3 = bigint_nondet_quot!(ctx, x72, x2, 3);
    let x74: BytePoly_1 = bigint_nondet_rem!(ctx, x72, x2, 1);
    let x75: BytePoly_2 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x2,
                    bigint_add!(
                        bigint_mul!(x68, x74, 2),
                        bigint_add!(bigint_sub!(x44, bigint_mul!(x68, x42, 2), 2), x2, 2),
                        2
                    ),
                    2
                ),
                x2,
                2
            ),
            x2,
            2
        ),
        x15,
        2
    );
    let x76: BytePoly_3 = bigint_nondet_quot!(ctx, x75, x2, 3);
    let x77: BytePoly_1 = bigint_nondet_rem!(ctx, x75, x2, 1);
    let x78: BytePoly_4 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x71, bigint_mul!(x73, x2, 4), 4), x42, 4),
                    x56,
                    4
                ),
                x2,
                4
            ),
            x2,
            4
        ),
        x74,
        4
    );
    eqz(ctx, &x78, 24387, 2)?;
    let x79: BytePoly_4 = bigint_sub!(
        bigint_add!(bigint_mul!(x76, x2, 4), x77, 4),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x68, bigint_sub!(x42, x74, 1), 2), x44, 2),
                    x2,
                    2
                ),
                x2,
                2
            ),
            x15,
            2
        ),
        4
    );
    eqz(ctx, &x79, 24387, 2)?;
    let x80: BytePoly_2 = bigint_add!(bigint_mul!(x74, x60, 2), bigint_mul!(x42, x62, 2), 2);
    let x81: BytePoly_2 = bigint_add!(bigint_mul!(x77, x60, 2), bigint_mul!(x44, x62, 2), 2);
    let x82: BytePoly_3 = bigint_nondet_quot!(ctx, x80, x2, 3);
    let x83: BytePoly_1 = bigint_nondet_rem!(ctx, x80, x2, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x82, x2, 4), x83, 4), x80, 4),
        24387,
        2,
    )?;
    let x84: BytePoly_3 = bigint_nondet_quot!(ctx, x81, x2, 3);
    let x85: BytePoly_1 = bigint_nondet_rem!(ctx, x81, x2, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x84, x2, 4), x85, 4), x81, 4),
        24387,
        2,
    )?;
    let x86: BytePoly_2 = bigint_mul!(x56, x56, 2);
    let x87: BytePoly_2 = bigint_add!(bigint_add!(bigint_add!(x86, x86, 2), x86, 2), x1, 2);
    let x88: BytePoly_2 = bigint_add!(x47, x87, 2);
    let x89: BytePoly_1 = bigint_nondet_inv!(ctx, bigint_add!(x59, x59, 1), x2, 1);
    let x90: BytePoly_1 = bigint_nondet_rem!(ctx, bigint_mul!(x87, x89, 3), x2, 1);
    let x91: BytePoly_2 = bigint_mul!(x59, x90, 2);
    let x92: BytePoly_2 = bigint_add!(x91, x91, 2);
    let x93: BytePoly_3 = bigint_nondet_quot!(ctx, bigint_sub!(x88, x92, 2), x2, 3);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x93, x2, 4), x92, 4), x88, 4),
        24387,
        2,
    )?;
    let x94: BytePoly_2 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x90, x90, 2), x2, 2), x2, 2),
            x56,
            2
        ),
        x56,
        2
    );
    let x95: BytePoly_3 = bigint_nondet_quot!(ctx, x94, x2, 3);
    let x96: BytePoly_1 = bigint_nondet_rem!(ctx, x94, x2, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x95, x2, 4), x96, 4), x94, 4),
        24387,
        2,
    )?;
    let x97: BytePoly_2 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x15, bigint_mul!(x90, x96, 2), 2), x2, 2),
            x59,
            2
        ),
        bigint_mul!(x90, x56, 2),
        2
    );
    let x98: BytePoly_3 = bigint_nondet_quot!(ctx, x97, x2, 3);
    let x99: BytePoly_1 = bigint_nondet_rem!(ctx, x97, x2, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x98, x2, 4), x99, 4), x97, 4),
        24387,
        2,
    )?;
    let x100: BytePoly_1 = bigint_nondet_rem!(ctx, x61, x3, 1);
    let x101: BytePoly_1 = bigint_nondet_quot!(ctx, x61, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x101, x3, 2), x100, 2), x61, 2),
        8131,
        2,
    )?;
    let x102: BytePoly_1 = bigint_sub!(x4, x100, 1);
    eqz(ctx, &bigint_mul!(x100, x102, 2), 8131, 2)?;
    let x103: BytePoly_1 = bigint_add!(bigint_sub!(x99, x85, 1), x2, 1);
    let x104: BytePoly_1 = bigint_add!(bigint_sub!(x96, x83, 1), x2, 1);
    let x105: BytePoly_1 = bigint_nondet_inv!(ctx, x104, x2, 1);
    let x106: BytePoly_2 = bigint_mul!(x104, x105, 2);
    let x107: BytePoly_3 = bigint_nondet_quot!(ctx, x106, x2, 3);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x106, bigint_mul!(x107, x2, 4), 4), x1, 4),
        24387,
        2,
    )?;
    let x108: BytePoly_1 = bigint_nondet_rem!(ctx, bigint_mul!(x103, x105, 2), x2, 1);
    let x109: BytePoly_2 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x108, x104, 2), x103, 2), x2, 2),
        x2,
        2
    );
    let x110: BytePoly_3 = bigint_nondet_quot!(ctx, x109, x2, 3);
    eqz(
        ctx,
        &bigint_sub!(x109, bigint_mul!(x110, x2, 4), 4),
        24387,
        2,
    )?;
    let x111: BytePoly_2 = bigint_mul!(x108, x108, 2);
    let x112: BytePoly_2 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x111, x83, 2), x2, 2), x96, 2),
        x2,
        2
    );
    let x113: BytePoly_3 = bigint_nondet_quot!(ctx, x112, x2, 3);
    let x114: BytePoly_1 = bigint_nondet_rem!(ctx, x112, x2, 1);
    let x115: BytePoly_2 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x2,
                    bigint_add!(
                        bigint_mul!(x108, x114, 2),
                        bigint_add!(bigint_sub!(x85, bigint_mul!(x108, x83, 2), 2), x2, 2),
                        2
                    ),
                    2
                ),
                x2,
                2
            ),
            x2,
            2
        ),
        x15,
        2
    );
    let x116: BytePoly_3 = bigint_nondet_quot!(ctx, x115, x2, 3);
    let x117: BytePoly_1 = bigint_nondet_rem!(ctx, x115, x2, 1);
    let x118: BytePoly_4 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x111, bigint_mul!(x113, x2, 4), 4), x83, 4),
                    x96,
                    4
                ),
                x2,
                4
            ),
            x2,
            4
        ),
        x114,
        4
    );
    eqz(ctx, &x118, 24387, 2)?;
    let x119: BytePoly_4 = bigint_sub!(
        bigint_add!(bigint_mul!(x116, x2, 4), x117, 4),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x108, bigint_sub!(x83, x114, 1), 2), x85, 2),
                    x2,
                    2
                ),
                x2,
                2
            ),
            x15,
            2
        ),
        4
    );
    eqz(ctx, &x119, 24387, 2)?;
    let x120: BytePoly_2 = bigint_add!(bigint_mul!(x114, x100, 2), bigint_mul!(x83, x102, 2), 2);
    let x121: BytePoly_2 = bigint_add!(bigint_mul!(x117, x100, 2), bigint_mul!(x85, x102, 2), 2);
    let x122: BytePoly_3 = bigint_nondet_quot!(ctx, x120, x2, 3);
    let x123: BytePoly_1 = bigint_nondet_rem!(ctx, x120, x2, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x122, x2, 4), x123, 4), x120, 4),
        24387,
        2,
    )?;
    let x124: BytePoly_3 = bigint_nondet_quot!(ctx, x121, x2, 3);
    let x125: BytePoly_1 = bigint_nondet_rem!(ctx, x121, x2, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x124, x2, 4), x125, 4), x121, 4),
        24387,
        2,
    )?;
    let x126: BytePoly_2 = bigint_mul!(x96, x96, 2);
    let x127: BytePoly_2 = bigint_add!(bigint_add!(bigint_add!(x126, x126, 2), x126, 2), x1, 2);
    let x128: BytePoly_2 = bigint_add!(x47, x127, 2);
    let x129: BytePoly_1 = bigint_nondet_inv!(ctx, bigint_add!(x99, x99, 1), x2, 1);
    let x130: BytePoly_1 = bigint_nondet_rem!(ctx, bigint_mul!(x127, x129, 3), x2, 1);
    let x131: BytePoly_2 = bigint_mul!(x99, x130, 2);
    let x132: BytePoly_2 = bigint_add!(x131, x131, 2);
    let x133: BytePoly_3 = bigint_nondet_quot!(ctx, bigint_sub!(x128, x132, 2), x2, 3);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x133, x2, 4), x132, 4), x128, 4),
        24387,
        2,
    )?;
    let x134: BytePoly_2 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x130, x130, 2), x2, 2), x2, 2),
            x96,
            2
        ),
        x96,
        2
    );
    let x135: BytePoly_3 = bigint_nondet_quot!(ctx, x134, x2, 3);
    let x136: BytePoly_1 = bigint_nondet_rem!(ctx, x134, x2, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x135, x2, 4), x136, 4), x134, 4),
        24387,
        2,
    )?;
    let x137: BytePoly_2 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x15, bigint_mul!(x130, x136, 2), 2), x2, 2),
            x99,
            2
        ),
        bigint_mul!(x130, x96, 2),
        2
    );
    let x138: BytePoly_3 = bigint_nondet_quot!(ctx, x137, x2, 3);
    let x139: BytePoly_1 = bigint_nondet_rem!(ctx, x137, x2, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x138, x2, 4), x139, 4), x137, 4),
        24387,
        2,
    )?;
    let x140: BytePoly_1 = bigint_nondet_rem!(ctx, x101, x3, 1);
    let x141: BytePoly_1 = bigint_nondet_quot!(ctx, x101, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x141, x3, 2), x140, 2), x101, 2),
        8131,
        2,
    )?;
    let x142: BytePoly_1 = bigint_sub!(x4, x140, 1);
    eqz(ctx, &bigint_mul!(x140, x142, 2), 8131, 2)?;
    let x143: BytePoly_1 = bigint_add!(bigint_sub!(x139, x125, 1), x2, 1);
    let x144: BytePoly_1 = bigint_add!(bigint_sub!(x136, x123, 1), x2, 1);
    let x145: BytePoly_1 = bigint_nondet_inv!(ctx, x144, x2, 1);
    let x146: BytePoly_2 = bigint_mul!(x144, x145, 2);
    let x147: BytePoly_3 = bigint_nondet_quot!(ctx, x146, x2, 3);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x146, bigint_mul!(x147, x2, 4), 4), x1, 4),
        24387,
        2,
    )?;
    let x148: BytePoly_1 = bigint_nondet_rem!(ctx, bigint_mul!(x143, x145, 2), x2, 1);
    let x149: BytePoly_2 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x148, x144, 2), x143, 2), x2, 2),
        x2,
        2
    );
    let x150: BytePoly_3 = bigint_nondet_quot!(ctx, x149, x2, 3);
    eqz(
        ctx,
        &bigint_sub!(x149, bigint_mul!(x150, x2, 4), 4),
        24387,
        2,
    )?;
    let x151: BytePoly_2 = bigint_mul!(x148, x148, 2);
    let x152: BytePoly_2 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x151, x123, 2), x2, 2), x136, 2),
        x2,
        2
    );
    let x153: BytePoly_3 = bigint_nondet_quot!(ctx, x152, x2, 3);
    let x154: BytePoly_1 = bigint_nondet_rem!(ctx, x152, x2, 1);
    let x155: BytePoly_2 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x2,
                    bigint_add!(
                        bigint_mul!(x148, x154, 2),
                        bigint_add!(bigint_sub!(x125, bigint_mul!(x148, x123, 2), 2), x2, 2),
                        2
                    ),
                    2
                ),
                x2,
                2
            ),
            x2,
            2
        ),
        x15,
        2
    );
    let x156: BytePoly_3 = bigint_nondet_quot!(ctx, x155, x2, 3);
    let x157: BytePoly_1 = bigint_nondet_rem!(ctx, x155, x2, 1);
    let x158: BytePoly_4 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x151, bigint_mul!(x153, x2, 4), 4), x123, 4),
                    x136,
                    4
                ),
                x2,
                4
            ),
            x2,
            4
        ),
        x154,
        4
    );
    eqz(ctx, &x158, 24387, 2)?;
    let x159: BytePoly_4 = bigint_sub!(
        bigint_add!(bigint_mul!(x156, x2, 4), x157, 4),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x148, bigint_sub!(x123, x154, 1), 2), x125, 2),
                    x2,
                    2
                ),
                x2,
                2
            ),
            x15,
            2
        ),
        4
    );
    eqz(ctx, &x159, 24387, 2)?;
    let x160: BytePoly_2 = bigint_add!(bigint_mul!(x154, x140, 2), bigint_mul!(x123, x142, 2), 2);
    let x161: BytePoly_2 = bigint_add!(bigint_mul!(x157, x140, 2), bigint_mul!(x125, x142, 2), 2);
    let x162: BytePoly_3 = bigint_nondet_quot!(ctx, x160, x2, 3);
    let x163: BytePoly_1 = bigint_nondet_rem!(ctx, x160, x2, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x162, x2, 4), x163, 4), x160, 4),
        24387,
        2,
    )?;
    let x164: BytePoly_3 = bigint_nondet_quot!(ctx, x161, x2, 3);
    let x165: BytePoly_1 = bigint_nondet_rem!(ctx, x161, x2, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x164, x2, 4), x165, 4), x161, 4),
        24387,
        2,
    )?;
    let x166: BytePoly_2 = bigint_mul!(x136, x136, 2);
    let x167: BytePoly_2 = bigint_add!(bigint_add!(bigint_add!(x166, x166, 2), x166, 2), x1, 2);
    let x168: BytePoly_2 = bigint_add!(x47, x167, 2);
    let x169: BytePoly_1 = bigint_nondet_inv!(ctx, bigint_add!(x139, x139, 1), x2, 1);
    let x170: BytePoly_1 = bigint_nondet_rem!(ctx, bigint_mul!(x167, x169, 3), x2, 1);
    let x171: BytePoly_2 = bigint_mul!(x139, x170, 2);
    let x172: BytePoly_2 = bigint_add!(x171, x171, 2);
    let x173: BytePoly_3 = bigint_nondet_quot!(ctx, bigint_sub!(x168, x172, 2), x2, 3);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x173, x2, 4), x172, 4), x168, 4),
        24387,
        2,
    )?;
    let x174: BytePoly_2 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x170, x170, 2), x2, 2), x2, 2),
            x136,
            2
        ),
        x136,
        2
    );
    let x175: BytePoly_3 = bigint_nondet_quot!(ctx, x174, x2, 3);
    let x176: BytePoly_1 = bigint_nondet_rem!(ctx, x174, x2, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x175, x2, 4), x176, 4), x174, 4),
        24387,
        2,
    )?;
    let x177: BytePoly_2 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x15, bigint_mul!(x170, x176, 2), 2), x2, 2),
            x139,
            2
        ),
        bigint_mul!(x170, x136, 2),
        2
    );
    let x178: BytePoly_3 = bigint_nondet_quot!(ctx, x177, x2, 3);
    let x179: BytePoly_1 = bigint_nondet_rem!(ctx, x177, x2, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x178, x2, 4), x179, 4), x177, 4),
        24387,
        2,
    )?;
    let x180: BytePoly_1 = bigint_nondet_rem!(ctx, x141, x3, 1);
    let x181: BytePoly_1 = bigint_nondet_quot!(ctx, x141, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x181, x3, 2), x180, 2), x141, 2),
        8131,
        2,
    )?;
    let x182: BytePoly_1 = bigint_sub!(x4, x180, 1);
    eqz(ctx, &bigint_mul!(x180, x182, 2), 8131, 2)?;
    let x183: BytePoly_1 = bigint_add!(bigint_sub!(x179, x165, 1), x2, 1);
    let x184: BytePoly_1 = bigint_add!(bigint_sub!(x176, x163, 1), x2, 1);
    let x185: BytePoly_1 = bigint_nondet_inv!(ctx, x184, x2, 1);
    let x186: BytePoly_2 = bigint_mul!(x184, x185, 2);
    let x187: BytePoly_3 = bigint_nondet_quot!(ctx, x186, x2, 3);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x186, bigint_mul!(x187, x2, 4), 4), x1, 4),
        24387,
        2,
    )?;
    let x188: BytePoly_1 = bigint_nondet_rem!(ctx, bigint_mul!(x183, x185, 2), x2, 1);
    let x189: BytePoly_2 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x188, x184, 2), x183, 2), x2, 2),
        x2,
        2
    );
    let x190: BytePoly_3 = bigint_nondet_quot!(ctx, x189, x2, 3);
    eqz(
        ctx,
        &bigint_sub!(x189, bigint_mul!(x190, x2, 4), 4),
        24387,
        2,
    )?;
    let x191: BytePoly_2 = bigint_mul!(x188, x188, 2);
    let x192: BytePoly_2 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x191, x163, 2), x2, 2), x176, 2),
        x2,
        2
    );
    let x193: BytePoly_3 = bigint_nondet_quot!(ctx, x192, x2, 3);
    let x194: BytePoly_1 = bigint_nondet_rem!(ctx, x192, x2, 1);
    let x195: BytePoly_2 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x2,
                    bigint_add!(
                        bigint_mul!(x188, x194, 2),
                        bigint_add!(bigint_sub!(x165, bigint_mul!(x188, x163, 2), 2), x2, 2),
                        2
                    ),
                    2
                ),
                x2,
                2
            ),
            x2,
            2
        ),
        x15,
        2
    );
    let x196: BytePoly_3 = bigint_nondet_quot!(ctx, x195, x2, 3);
    let x197: BytePoly_1 = bigint_nondet_rem!(ctx, x195, x2, 1);
    let x198: BytePoly_4 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x191, bigint_mul!(x193, x2, 4), 4), x163, 4),
                    x176,
                    4
                ),
                x2,
                4
            ),
            x2,
            4
        ),
        x194,
        4
    );
    eqz(ctx, &x198, 24387, 2)?;
    let x199: BytePoly_4 = bigint_sub!(
        bigint_add!(bigint_mul!(x196, x2, 4), x197, 4),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x188, bigint_sub!(x163, x194, 1), 2), x165, 2),
                    x2,
                    2
                ),
                x2,
                2
            ),
            x15,
            2
        ),
        4
    );
    eqz(ctx, &x199, 24387, 2)?;
    let x200: BytePoly_2 = bigint_add!(bigint_mul!(x194, x180, 2), bigint_mul!(x163, x182, 2), 2);
    let x201: BytePoly_2 = bigint_add!(bigint_mul!(x197, x180, 2), bigint_mul!(x165, x182, 2), 2);
    let x202: BytePoly_3 = bigint_nondet_quot!(ctx, x200, x2, 3);
    let x203: BytePoly_1 = bigint_nondet_rem!(ctx, x200, x2, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x202, x2, 4), x203, 4), x200, 4),
        24387,
        2,
    )?;
    let x204: BytePoly_3 = bigint_nondet_quot!(ctx, x201, x2, 3);
    let x205: BytePoly_1 = bigint_nondet_rem!(ctx, x201, x2, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x204, x2, 4), x205, 4), x201, 4),
        24387,
        2,
    )?;
    let x206: BytePoly_2 = bigint_mul!(x176, x176, 2);
    let x207: BytePoly_2 = bigint_add!(bigint_add!(bigint_add!(x206, x206, 2), x206, 2), x1, 2);
    let x208: BytePoly_2 = bigint_add!(x47, x207, 2);
    let x209: BytePoly_1 = bigint_nondet_inv!(ctx, bigint_add!(x179, x179, 1), x2, 1);
    let x210: BytePoly_1 = bigint_nondet_rem!(ctx, bigint_mul!(x207, x209, 3), x2, 1);
    let x211: BytePoly_2 = bigint_mul!(x179, x210, 2);
    let x212: BytePoly_2 = bigint_add!(x211, x211, 2);
    let x213: BytePoly_3 = bigint_nondet_quot!(ctx, bigint_sub!(x208, x212, 2), x2, 3);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x213, x2, 4), x212, 4), x208, 4),
        24387,
        2,
    )?;
    let x214: BytePoly_2 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x210, x210, 2), x2, 2), x2, 2),
            x176,
            2
        ),
        x176,
        2
    );
    let x215: BytePoly_3 = bigint_nondet_quot!(ctx, x214, x2, 3);
    let x216: BytePoly_1 = bigint_nondet_rem!(ctx, x214, x2, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x215, x2, 4), x216, 4), x214, 4),
        24387,
        2,
    )?;
    let x217: BytePoly_2 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x15, bigint_mul!(x210, x216, 2), 2), x2, 2),
            x179,
            2
        ),
        bigint_mul!(x210, x176, 2),
        2
    );
    let x218: BytePoly_3 = bigint_nondet_quot!(ctx, x217, x2, 3);
    let x219: BytePoly_1 = bigint_nondet_rem!(ctx, x217, x2, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x218, x2, 4), x219, 4), x217, 4),
        24387,
        2,
    )?;
    let x220: BytePoly_1 = bigint_nondet_rem!(ctx, x181, x3, 1);
    let x221: BytePoly_1 = bigint_nondet_quot!(ctx, x181, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x221, x3, 2), x220, 2), x181, 2),
        8131,
        2,
    )?;
    let x222: BytePoly_1 = bigint_sub!(x4, x220, 1);
    eqz(ctx, &bigint_mul!(x220, x222, 2), 8131, 2)?;
    let x223: BytePoly_1 = bigint_add!(bigint_sub!(x219, x205, 1), x2, 1);
    let x224: BytePoly_1 = bigint_add!(bigint_sub!(x216, x203, 1), x2, 1);
    let x225: BytePoly_1 = bigint_nondet_inv!(ctx, x224, x2, 1);
    let x226: BytePoly_2 = bigint_mul!(x224, x225, 2);
    let x227: BytePoly_3 = bigint_nondet_quot!(ctx, x226, x2, 3);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x226, bigint_mul!(x227, x2, 4), 4), x1, 4),
        24387,
        2,
    )?;
    let x228: BytePoly_1 = bigint_nondet_rem!(ctx, bigint_mul!(x223, x225, 2), x2, 1);
    let x229: BytePoly_2 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x228, x224, 2), x223, 2), x2, 2),
        x2,
        2
    );
    let x230: BytePoly_3 = bigint_nondet_quot!(ctx, x229, x2, 3);
    eqz(
        ctx,
        &bigint_sub!(x229, bigint_mul!(x230, x2, 4), 4),
        24387,
        2,
    )?;
    let x231: BytePoly_2 = bigint_mul!(x228, x228, 2);
    let x232: BytePoly_2 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x231, x203, 2), x2, 2), x216, 2),
        x2,
        2
    );
    let x233: BytePoly_3 = bigint_nondet_quot!(ctx, x232, x2, 3);
    let x234: BytePoly_1 = bigint_nondet_rem!(ctx, x232, x2, 1);
    let x235: BytePoly_2 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x2,
                    bigint_add!(
                        bigint_mul!(x228, x234, 2),
                        bigint_add!(bigint_sub!(x205, bigint_mul!(x228, x203, 2), 2), x2, 2),
                        2
                    ),
                    2
                ),
                x2,
                2
            ),
            x2,
            2
        ),
        x15,
        2
    );
    let x236: BytePoly_3 = bigint_nondet_quot!(ctx, x235, x2, 3);
    let x237: BytePoly_1 = bigint_nondet_rem!(ctx, x235, x2, 1);
    let x238: BytePoly_4 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x231, bigint_mul!(x233, x2, 4), 4), x203, 4),
                    x216,
                    4
                ),
                x2,
                4
            ),
            x2,
            4
        ),
        x234,
        4
    );
    eqz(ctx, &x238, 24387, 2)?;
    let x239: BytePoly_4 = bigint_sub!(
        bigint_add!(bigint_mul!(x236, x2, 4), x237, 4),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x228, bigint_sub!(x203, x234, 1), 2), x205, 2),
                    x2,
                    2
                ),
                x2,
                2
            ),
            x15,
            2
        ),
        4
    );
    eqz(ctx, &x239, 24387, 2)?;
    let x240: BytePoly_2 = bigint_add!(bigint_mul!(x234, x220, 2), bigint_mul!(x203, x222, 2), 2);
    let x241: BytePoly_2 = bigint_add!(bigint_mul!(x237, x220, 2), bigint_mul!(x205, x222, 2), 2);
    let x242: BytePoly_3 = bigint_nondet_quot!(ctx, x240, x2, 3);
    let x243: BytePoly_1 = bigint_nondet_rem!(ctx, x240, x2, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x242, x2, 4), x243, 4), x240, 4),
        24387,
        2,
    )?;
    let x244: BytePoly_3 = bigint_nondet_quot!(ctx, x241, x2, 3);
    let x245: BytePoly_1 = bigint_nondet_rem!(ctx, x241, x2, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x244, x2, 4), x245, 4), x241, 4),
        24387,
        2,
    )?;
    let x246: BytePoly_2 = bigint_mul!(x216, x216, 2);
    let x247: BytePoly_2 = bigint_add!(bigint_add!(bigint_add!(x246, x246, 2), x246, 2), x1, 2);
    let x248: BytePoly_2 = bigint_add!(x47, x247, 2);
    let x249: BytePoly_1 = bigint_nondet_inv!(ctx, bigint_add!(x219, x219, 1), x2, 1);
    let x250: BytePoly_1 = bigint_nondet_rem!(ctx, bigint_mul!(x247, x249, 3), x2, 1);
    let x251: BytePoly_2 = bigint_mul!(x219, x250, 2);
    let x252: BytePoly_2 = bigint_add!(x251, x251, 2);
    let x253: BytePoly_3 = bigint_nondet_quot!(ctx, bigint_sub!(x248, x252, 2), x2, 3);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x253, x2, 4), x252, 4), x248, 4),
        24387,
        2,
    )?;
    let x254: BytePoly_2 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x250, x250, 2), x2, 2), x2, 2),
            x216,
            2
        ),
        x216,
        2
    );
    let x255: BytePoly_3 = bigint_nondet_quot!(ctx, x254, x2, 3);
    let x256: BytePoly_1 = bigint_nondet_rem!(ctx, x254, x2, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x255, x2, 4), x256, 4), x254, 4),
        24387,
        2,
    )?;
    let x257: BytePoly_2 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x15, bigint_mul!(x250, x256, 2), 2), x2, 2),
            x219,
            2
        ),
        bigint_mul!(x250, x216, 2),
        2
    );
    let x258: BytePoly_3 = bigint_nondet_quot!(ctx, x257, x2, 3);
    let x259: BytePoly_1 = bigint_nondet_rem!(ctx, x257, x2, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x258, x2, 4), x259, 4), x257, 4),
        24387,
        2,
    )?;
    let x260: BytePoly_1 = bigint_nondet_rem!(ctx, x221, x3, 1);
    let x261: BytePoly_1 = bigint_nondet_quot!(ctx, x221, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x261, x3, 2), x260, 2), x221, 2),
        8131,
        2,
    )?;
    let x262: BytePoly_1 = bigint_sub!(x4, x260, 1);
    eqz(ctx, &bigint_mul!(x260, x262, 2), 8131, 2)?;
    let x263: BytePoly_1 = bigint_add!(bigint_sub!(x259, x245, 1), x2, 1);
    let x264: BytePoly_1 = bigint_add!(bigint_sub!(x256, x243, 1), x2, 1);
    let x265: BytePoly_1 = bigint_nondet_inv!(ctx, x264, x2, 1);
    let x266: BytePoly_2 = bigint_mul!(x264, x265, 2);
    let x267: BytePoly_3 = bigint_nondet_quot!(ctx, x266, x2, 3);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x266, bigint_mul!(x267, x2, 4), 4), x1, 4),
        24387,
        2,
    )?;
    let x268: BytePoly_1 = bigint_nondet_rem!(ctx, bigint_mul!(x263, x265, 2), x2, 1);
    let x269: BytePoly_2 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x268, x264, 2), x263, 2), x2, 2),
        x2,
        2
    );
    let x270: BytePoly_3 = bigint_nondet_quot!(ctx, x269, x2, 3);
    eqz(
        ctx,
        &bigint_sub!(x269, bigint_mul!(x270, x2, 4), 4),
        24387,
        2,
    )?;
    let x271: BytePoly_2 = bigint_mul!(x268, x268, 2);
    let x272: BytePoly_2 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x271, x243, 2), x2, 2), x256, 2),
        x2,
        2
    );
    let x273: BytePoly_3 = bigint_nondet_quot!(ctx, x272, x2, 3);
    let x274: BytePoly_1 = bigint_nondet_rem!(ctx, x272, x2, 1);
    let x275: BytePoly_2 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x2,
                    bigint_add!(
                        bigint_mul!(x268, x274, 2),
                        bigint_add!(bigint_sub!(x245, bigint_mul!(x268, x243, 2), 2), x2, 2),
                        2
                    ),
                    2
                ),
                x2,
                2
            ),
            x2,
            2
        ),
        x15,
        2
    );
    let x276: BytePoly_3 = bigint_nondet_quot!(ctx, x275, x2, 3);
    let x277: BytePoly_1 = bigint_nondet_rem!(ctx, x275, x2, 1);
    let x278: BytePoly_4 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x271, bigint_mul!(x273, x2, 4), 4), x243, 4),
                    x256,
                    4
                ),
                x2,
                4
            ),
            x2,
            4
        ),
        x274,
        4
    );
    eqz(ctx, &x278, 24387, 2)?;
    let x279: BytePoly_4 = bigint_sub!(
        bigint_add!(bigint_mul!(x276, x2, 4), x277, 4),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x268, bigint_sub!(x243, x274, 1), 2), x245, 2),
                    x2,
                    2
                ),
                x2,
                2
            ),
            x15,
            2
        ),
        4
    );
    eqz(ctx, &x279, 24387, 2)?;
    let x280: BytePoly_2 = bigint_add!(bigint_mul!(x274, x260, 2), bigint_mul!(x243, x262, 2), 2);
    let x281: BytePoly_2 = bigint_add!(bigint_mul!(x277, x260, 2), bigint_mul!(x245, x262, 2), 2);
    let x282: BytePoly_3 = bigint_nondet_quot!(ctx, x280, x2, 3);
    let x283: BytePoly_1 = bigint_nondet_rem!(ctx, x280, x2, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x282, x2, 4), x283, 4), x280, 4),
        24387,
        2,
    )?;
    let x284: BytePoly_3 = bigint_nondet_quot!(ctx, x281, x2, 3);
    let x285: BytePoly_1 = bigint_nondet_rem!(ctx, x281, x2, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x284, x2, 4), x285, 4), x281, 4),
        24387,
        2,
    )?;
    let x286: BytePoly_2 = bigint_mul!(x256, x256, 2);
    let x287: BytePoly_2 = bigint_add!(bigint_add!(bigint_add!(x286, x286, 2), x286, 2), x1, 2);
    let x288: BytePoly_2 = bigint_add!(x47, x287, 2);
    let x289: BytePoly_1 = bigint_nondet_inv!(ctx, bigint_add!(x259, x259, 1), x2, 1);
    let x290: BytePoly_1 = bigint_nondet_rem!(ctx, bigint_mul!(x287, x289, 3), x2, 1);
    let x291: BytePoly_2 = bigint_mul!(x259, x290, 2);
    let x292: BytePoly_2 = bigint_add!(x291, x291, 2);
    let x293: BytePoly_3 = bigint_nondet_quot!(ctx, bigint_sub!(x288, x292, 2), x2, 3);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x293, x2, 4), x292, 4), x288, 4),
        24387,
        2,
    )?;
    let x294: BytePoly_2 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x290, x290, 2), x2, 2), x2, 2),
            x256,
            2
        ),
        x256,
        2
    );
    let x295: BytePoly_3 = bigint_nondet_quot!(ctx, x294, x2, 3);
    let x296: BytePoly_1 = bigint_nondet_rem!(ctx, x294, x2, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x295, x2, 4), x296, 4), x294, 4),
        24387,
        2,
    )?;
    let x297: BytePoly_2 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x15, bigint_mul!(x290, x296, 2), 2), x2, 2),
            x259,
            2
        ),
        bigint_mul!(x290, x256, 2),
        2
    );
    let x298: BytePoly_3 = bigint_nondet_quot!(ctx, x297, x2, 3);
    let x299: BytePoly_1 = bigint_nondet_rem!(ctx, x297, x2, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x298, x2, 4), x299, 4), x297, 4),
        24387,
        2,
    )?;
    let x300: BytePoly_1 = bigint_nondet_rem!(ctx, x261, x3, 1);
    let x301: BytePoly_1 = bigint_nondet_quot!(ctx, x261, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x301, x3, 2), x300, 2), x261, 2),
        8131,
        2,
    )?;
    let x302: BytePoly_1 = bigint_sub!(x4, x300, 1);
    eqz(ctx, &bigint_mul!(x300, x302, 2), 8131, 2)?;
    let x303: BytePoly_1 = bigint_add!(bigint_sub!(x299, x285, 1), x2, 1);
    let x304: BytePoly_1 = bigint_add!(bigint_sub!(x296, x283, 1), x2, 1);
    let x305: BytePoly_1 = bigint_nondet_inv!(ctx, x304, x2, 1);
    let x306: BytePoly_2 = bigint_mul!(x304, x305, 2);
    let x307: BytePoly_3 = bigint_nondet_quot!(ctx, x306, x2, 3);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x306, bigint_mul!(x307, x2, 4), 4), x1, 4),
        24387,
        2,
    )?;
    let x308: BytePoly_1 = bigint_nondet_rem!(ctx, bigint_mul!(x303, x305, 2), x2, 1);
    let x309: BytePoly_2 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x308, x304, 2), x303, 2), x2, 2),
        x2,
        2
    );
    let x310: BytePoly_3 = bigint_nondet_quot!(ctx, x309, x2, 3);
    eqz(
        ctx,
        &bigint_sub!(x309, bigint_mul!(x310, x2, 4), 4),
        24387,
        2,
    )?;
    let x311: BytePoly_2 = bigint_mul!(x308, x308, 2);
    let x312: BytePoly_2 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x311, x283, 2), x2, 2), x296, 2),
        x2,
        2
    );
    let x313: BytePoly_3 = bigint_nondet_quot!(ctx, x312, x2, 3);
    let x314: BytePoly_1 = bigint_nondet_rem!(ctx, x312, x2, 1);
    let x315: BytePoly_2 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x2,
                    bigint_add!(
                        bigint_mul!(x308, x314, 2),
                        bigint_add!(bigint_sub!(x285, bigint_mul!(x308, x283, 2), 2), x2, 2),
                        2
                    ),
                    2
                ),
                x2,
                2
            ),
            x2,
            2
        ),
        x15,
        2
    );
    let x316: BytePoly_3 = bigint_nondet_quot!(ctx, x315, x2, 3);
    let x317: BytePoly_1 = bigint_nondet_rem!(ctx, x315, x2, 1);
    let x318: BytePoly_4 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x311, bigint_mul!(x313, x2, 4), 4), x283, 4),
                    x296,
                    4
                ),
                x2,
                4
            ),
            x2,
            4
        ),
        x314,
        4
    );
    eqz(ctx, &x318, 24387, 2)?;
    let x319: BytePoly_4 = bigint_sub!(
        bigint_add!(bigint_mul!(x316, x2, 4), x317, 4),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x308, bigint_sub!(x283, x314, 1), 2), x285, 2),
                    x2,
                    2
                ),
                x2,
                2
            ),
            x15,
            2
        ),
        4
    );
    eqz(ctx, &x319, 24387, 2)?;
    let x320: BytePoly_2 = bigint_add!(bigint_mul!(x314, x300, 2), bigint_mul!(x283, x302, 2), 2);
    let x321: BytePoly_2 = bigint_add!(bigint_mul!(x317, x300, 2), bigint_mul!(x285, x302, 2), 2);
    let x322: BytePoly_3 = bigint_nondet_quot!(ctx, x320, x2, 3);
    let x323: BytePoly_1 = bigint_nondet_rem!(ctx, x320, x2, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x322, x2, 4), x323, 4), x320, 4),
        24387,
        2,
    )?;
    let x324: BytePoly_3 = bigint_nondet_quot!(ctx, x321, x2, 3);
    let x325: BytePoly_1 = bigint_nondet_rem!(ctx, x321, x2, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x324, x2, 4), x325, 4), x321, 4),
        24387,
        2,
    )?;
    let x326: BytePoly_2 = bigint_mul!(x296, x296, 2);
    let x327: BytePoly_2 = bigint_add!(bigint_add!(bigint_add!(x326, x326, 2), x326, 2), x1, 2);
    let x328: BytePoly_2 = bigint_add!(x47, x327, 2);
    let x329: BytePoly_1 = bigint_nondet_inv!(ctx, bigint_add!(x299, x299, 1), x2, 1);
    let x330: BytePoly_1 = bigint_nondet_rem!(ctx, bigint_mul!(x327, x329, 3), x2, 1);
    let x331: BytePoly_2 = bigint_mul!(x299, x330, 2);
    let x332: BytePoly_2 = bigint_add!(x331, x331, 2);
    let x333: BytePoly_3 = bigint_nondet_quot!(ctx, bigint_sub!(x328, x332, 2), x2, 3);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x333, x2, 4), x332, 4), x328, 4),
        24387,
        2,
    )?;
    let x334: BytePoly_2 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x330, x330, 2), x2, 2), x2, 2),
            x296,
            2
        ),
        x296,
        2
    );
    let x335: BytePoly_3 = bigint_nondet_quot!(ctx, x334, x2, 3);
    let x336: BytePoly_1 = bigint_nondet_rem!(ctx, x334, x2, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x335, x2, 4), x336, 4), x334, 4),
        24387,
        2,
    )?;
    let x337: BytePoly_2 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x15, bigint_mul!(x330, x336, 2), 2), x2, 2),
            x299,
            2
        ),
        bigint_mul!(x330, x296, 2),
        2
    );
    let x338: BytePoly_3 = bigint_nondet_quot!(ctx, x337, x2, 3);
    let x339: BytePoly_1 = bigint_nondet_rem!(ctx, x337, x2, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x338, x2, 4), x339, 4), x337, 4),
        24387,
        2,
    )?;
    let x340: BytePoly_1 = bigint_add!(bigint_sub!(bigint_sub!(x2, x9, 1), x325, 1), x2, 1);
    let x341: BytePoly_1 = bigint_add!(bigint_sub!(x8, x323, 1), x2, 1);
    let x342: BytePoly_1 = bigint_nondet_inv!(ctx, x341, x2, 1);
    let x343: BytePoly_2 = bigint_mul!(x341, x342, 2);
    let x344: BytePoly_3 = bigint_nondet_quot!(ctx, x343, x2, 3);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x343, bigint_mul!(x344, x2, 4), 4), x1, 4),
        24387,
        2,
    )?;
    let x345: BytePoly_1 = bigint_nondet_rem!(ctx, bigint_mul!(x340, x342, 2), x2, 1);
    let x346: BytePoly_2 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x345, x341, 2), x340, 2), x2, 2),
        x2,
        2
    );
    let x347: BytePoly_3 = bigint_nondet_quot!(ctx, x346, x2, 3);
    eqz(
        ctx,
        &bigint_sub!(x346, bigint_mul!(x347, x2, 4), 4),
        24387,
        2,
    )?;
    let x348: BytePoly_2 = bigint_mul!(x345, x345, 2);
    let x349: BytePoly_2 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x348, x323, 2), x2, 2), x8, 2),
        x2,
        2
    );
    let x350: BytePoly_3 = bigint_nondet_quot!(ctx, x349, x2, 3);
    let x351: BytePoly_1 = bigint_nondet_rem!(ctx, x349, x2, 1);
    let x352: BytePoly_2 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x2,
                    bigint_add!(
                        bigint_mul!(x345, x351, 2),
                        bigint_add!(bigint_sub!(x325, bigint_mul!(x345, x323, 2), 2), x2, 2),
                        2
                    ),
                    2
                ),
                x2,
                2
            ),
            x2,
            2
        ),
        x15,
        2
    );
    let x353: BytePoly_3 = bigint_nondet_quot!(ctx, x352, x2, 3);
    let x354: BytePoly_1 = bigint_nondet_rem!(ctx, x352, x2, 1);
    let x355: BytePoly_4 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x348, bigint_mul!(x350, x2, 4), 4), x323, 4),
                    x8,
                    4
                ),
                x2,
                4
            ),
            x2,
            4
        ),
        x351,
        4
    );
    eqz(ctx, &x355, 24387, 2)?;
    let x356: BytePoly_4 = bigint_sub!(
        bigint_add!(bigint_mul!(x353, x2, 4), x354, 4),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x345, bigint_sub!(x323, x351, 1), 2), x325, 2),
                    x2,
                    2
                ),
                x2,
                2
            ),
            x15,
            2
        ),
        4
    );
    eqz(ctx, &x356, 24387, 2)?;
    eqz(ctx, &bigint_sub!(x351, x10, 1), 34, 1)?;
    eqz(ctx, &bigint_sub!(x354, x11, 1), 34, 1)?;
    return Ok(());
}
pub fn ec_aff_mul_test_32(ctx: &mut BigIntContext) -> Result<()> {
    let x0: BytePoly_1 = bigint_const!(ctx, 1);
    let x1: BytePoly_4 = bigint_const!(ctx, 12, 0, 0, 0);
    let x2: BytePoly_4 = bigint_const!(ctx, 1, 0, 0, 0);
    let x3: BytePoly_4 = bigint_const!(ctx, 179, 0, 0, 0);
    let x4: BytePoly_1 = bigint_const!(ctx, 2);
    let x5: BytePoly_1 = bigint_const!(ctx, 1);
    let x6: BytePoly_4 = bigint_def!(ctx, 4, 0, 1);
    let x7: BytePoly_4 = bigint_def!(ctx, 4, 1, 1);
    let x8: BytePoly_4 = bigint_def!(ctx, 4, 2, 1);
    let x9: BytePoly_4 = bigint_def!(ctx, 4, 3, 1);
    let x10: BytePoly_4 = bigint_def!(ctx, 4, 4, 1);
    let x11: BytePoly_4 = bigint_def!(ctx, 4, 5, 1);
    let x12: BytePoly_4 = bigint_def!(ctx, 4, 6, 1);
    eqz(ctx, &bigint_sub!(x6, x6, 4), 34, 1)?;
    eqz(ctx, &bigint_sub!(x7, x7, 4), 34, 1)?;
    eqz(ctx, &bigint_sub!(x8, x8, 4), 34, 1)?;
    eqz(ctx, &bigint_sub!(x9, x9, 4), 34, 1)?;
    eqz(ctx, &bigint_sub!(x10, x10, 4), 34, 1)?;
    eqz(ctx, &bigint_sub!(x11, x11, 4), 34, 1)?;
    eqz(ctx, &bigint_sub!(x12, x12, 4), 34, 1)?;
    let x13: BytePoly_8 = bigint_mul!(x9, x9, 8);
    let x14: BytePoly_9 = bigint_nondet_quot!(ctx, x13, x3, 9);
    let x15: BytePoly_4 = bigint_nondet_rem!(ctx, x13, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x14, x3, 13), x15, 13), x13, 13),
        73156,
        4,
    )?;
    let x16: BytePoly_8 = bigint_mul!(x3, x3, 8);
    let x17: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_add!(bigint_mul!(x9, x15, 8), bigint_mul!(x9, x2, 8), 8),
                x1,
                8
            ),
            bigint_mul!(x10, x10, 8),
            8
        ),
        x16,
        8
    );
    let x18: BytePoly_9 = bigint_nondet_quot!(ctx, x17, x3, 9);
    let x19: BytePoly_4 = bigint_nondet_rem!(ctx, x17, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x18, x3, 13), x19, 13), x17, 13),
        73156,
        4,
    )?;
    eqz(ctx, &x19, 34, 1)?;
    let x20: BytePoly_1 = bigint_nondet_rem!(ctx, x8, x4, 1);
    let x21: BytePoly_4 = bigint_nondet_quot!(ctx, x8, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x21, x4, 5), x20, 5), x8, 5),
        32515,
        2,
    )?;
    let x22: BytePoly_1 = bigint_sub!(x5, x20, 1);
    eqz(ctx, &bigint_mul!(x20, x22, 2), 8131, 2)?;
    let x23: BytePoly_4 = bigint_add!(bigint_sub!(x7, x10, 4), x3, 4);
    let x24: BytePoly_4 = bigint_add!(bigint_sub!(x6, x9, 4), x3, 4);
    let x25: BytePoly_4 = bigint_nondet_inv!(ctx, x24, x3, 4);
    let x26: BytePoly_8 = bigint_mul!(x24, x25, 8);
    let x27: BytePoly_9 = bigint_nondet_quot!(ctx, x26, x3, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x26, bigint_mul!(x27, x3, 13), 13), x0, 13),
        73156,
        4,
    )?;
    let x28: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x23, x25, 8), x3, 4);
    let x29: BytePoly_8 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x28, x24, 8), x23, 8), x3, 8),
        x3,
        8
    );
    let x30: BytePoly_9 = bigint_nondet_quot!(ctx, x29, x3, 9);
    eqz(
        ctx,
        &bigint_sub!(x29, bigint_mul!(x30, x3, 13), 13),
        73156,
        4,
    )?;
    let x31: BytePoly_8 = bigint_mul!(x28, x28, 8);
    let x32: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x31, x9, 8), x3, 8), x6, 8),
        x3,
        8
    );
    let x33: BytePoly_9 = bigint_nondet_quot!(ctx, x32, x3, 9);
    let x34: BytePoly_4 = bigint_nondet_rem!(ctx, x32, x3, 4);
    let x35: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x28, x34, 8),
                        bigint_add!(bigint_sub!(x10, bigint_mul!(x28, x9, 8), 8), x3, 8),
                        8
                    ),
                    8
                ),
                x3,
                8
            ),
            x3,
            8
        ),
        x16,
        8
    );
    let x36: BytePoly_9 = bigint_nondet_quot!(ctx, x35, x3, 9);
    let x37: BytePoly_4 = bigint_nondet_rem!(ctx, x35, x3, 4);
    let x38: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x31, bigint_mul!(x33, x3, 13), 13), x9, 13),
                    x6,
                    13
                ),
                x3,
                13
            ),
            x3,
            13
        ),
        x34,
        13
    );
    eqz(ctx, &x38, 73156, 4)?;
    let x39: BytePoly_13 = bigint_sub!(
        bigint_add!(bigint_mul!(x36, x3, 13), x37, 13),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x28, bigint_sub!(x9, x34, 4), 8), x10, 8),
                    x3,
                    8
                ),
                x3,
                8
            ),
            x16,
            8
        ),
        13
    );
    eqz(ctx, &x39, 73156, 4)?;
    let x40: BytePoly_5 = bigint_add!(bigint_mul!(x34, x20, 5), bigint_mul!(x9, x22, 5), 5);
    let x41: BytePoly_5 = bigint_add!(bigint_mul!(x37, x20, 5), bigint_mul!(x10, x22, 5), 5);
    let x42: BytePoly_6 = bigint_nondet_quot!(ctx, x40, x3, 6);
    let x43: BytePoly_4 = bigint_nondet_rem!(ctx, x40, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x42, x3, 10), x43, 10), x40, 10),
        48771,
        4,
    )?;
    let x44: BytePoly_6 = bigint_nondet_quot!(ctx, x41, x3, 6);
    let x45: BytePoly_4 = bigint_nondet_rem!(ctx, x41, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x44, x3, 10), x45, 10), x41, 10),
        48771,
        4,
    )?;
    let x46: BytePoly_8 = bigint_mul!(x6, x6, 8);
    let x47: BytePoly_8 = bigint_add!(bigint_add!(bigint_add!(x46, x46, 8), x46, 8), x2, 8);
    let x48: BytePoly_8 = bigint_add!(x16, x16, 8);
    let x49: BytePoly_8 = bigint_add!(x48, x47, 8);
    let x50: BytePoly_4 = bigint_nondet_inv!(ctx, bigint_add!(x7, x7, 4), x3, 4);
    let x51: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x47, x50, 12), x3, 4);
    let x52: BytePoly_8 = bigint_mul!(x7, x51, 8);
    let x53: BytePoly_8 = bigint_add!(x52, x52, 8);
    let x54: BytePoly_9 = bigint_nondet_quot!(ctx, bigint_sub!(x49, x53, 8), x3, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x54, x3, 13), x53, 13), x49, 13),
        73156,
        4,
    )?;
    let x55: BytePoly_8 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x51, x51, 8), x3, 8), x3, 8),
            x6,
            8
        ),
        x6,
        8
    );
    let x56: BytePoly_9 = bigint_nondet_quot!(ctx, x55, x3, 9);
    let x57: BytePoly_4 = bigint_nondet_rem!(ctx, x55, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x56, x3, 13), x57, 13), x55, 13),
        73156,
        4,
    )?;
    let x58: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x51, x57, 8), 8), x3, 8),
            x7,
            8
        ),
        bigint_mul!(x51, x6, 8),
        8
    );
    let x59: BytePoly_9 = bigint_nondet_quot!(ctx, x58, x3, 9);
    let x60: BytePoly_4 = bigint_nondet_rem!(ctx, x58, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x59, x3, 13), x60, 13), x58, 13),
        73156,
        4,
    )?;
    let x61: BytePoly_1 = bigint_nondet_rem!(ctx, x21, x4, 1);
    let x62: BytePoly_4 = bigint_nondet_quot!(ctx, x21, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x62, x4, 5), x61, 5), x21, 5),
        32515,
        2,
    )?;
    let x63: BytePoly_1 = bigint_sub!(x5, x61, 1);
    eqz(ctx, &bigint_mul!(x61, x63, 2), 8131, 2)?;
    let x64: BytePoly_4 = bigint_add!(bigint_sub!(x60, x45, 4), x3, 4);
    let x65: BytePoly_4 = bigint_add!(bigint_sub!(x57, x43, 4), x3, 4);
    let x66: BytePoly_4 = bigint_nondet_inv!(ctx, x65, x3, 4);
    let x67: BytePoly_8 = bigint_mul!(x65, x66, 8);
    let x68: BytePoly_9 = bigint_nondet_quot!(ctx, x67, x3, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x67, bigint_mul!(x68, x3, 13), 13), x0, 13),
        73156,
        4,
    )?;
    let x69: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x64, x66, 8), x3, 4);
    let x70: BytePoly_8 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x69, x65, 8), x64, 8), x3, 8),
        x3,
        8
    );
    let x71: BytePoly_9 = bigint_nondet_quot!(ctx, x70, x3, 9);
    eqz(
        ctx,
        &bigint_sub!(x70, bigint_mul!(x71, x3, 13), 13),
        73156,
        4,
    )?;
    let x72: BytePoly_8 = bigint_mul!(x69, x69, 8);
    let x73: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x72, x43, 8), x3, 8), x57, 8),
        x3,
        8
    );
    let x74: BytePoly_9 = bigint_nondet_quot!(ctx, x73, x3, 9);
    let x75: BytePoly_4 = bigint_nondet_rem!(ctx, x73, x3, 4);
    let x76: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x69, x75, 8),
                        bigint_add!(bigint_sub!(x45, bigint_mul!(x69, x43, 8), 8), x3, 8),
                        8
                    ),
                    8
                ),
                x3,
                8
            ),
            x3,
            8
        ),
        x16,
        8
    );
    let x77: BytePoly_9 = bigint_nondet_quot!(ctx, x76, x3, 9);
    let x78: BytePoly_4 = bigint_nondet_rem!(ctx, x76, x3, 4);
    let x79: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x72, bigint_mul!(x74, x3, 13), 13), x43, 13),
                    x57,
                    13
                ),
                x3,
                13
            ),
            x3,
            13
        ),
        x75,
        13
    );
    eqz(ctx, &x79, 73156, 4)?;
    let x80: BytePoly_13 = bigint_sub!(
        bigint_add!(bigint_mul!(x77, x3, 13), x78, 13),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x69, bigint_sub!(x43, x75, 4), 8), x45, 8),
                    x3,
                    8
                ),
                x3,
                8
            ),
            x16,
            8
        ),
        13
    );
    eqz(ctx, &x80, 73156, 4)?;
    let x81: BytePoly_5 = bigint_add!(bigint_mul!(x75, x61, 5), bigint_mul!(x43, x63, 5), 5);
    let x82: BytePoly_5 = bigint_add!(bigint_mul!(x78, x61, 5), bigint_mul!(x45, x63, 5), 5);
    let x83: BytePoly_6 = bigint_nondet_quot!(ctx, x81, x3, 6);
    let x84: BytePoly_4 = bigint_nondet_rem!(ctx, x81, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x83, x3, 10), x84, 10), x81, 10),
        48771,
        4,
    )?;
    let x85: BytePoly_6 = bigint_nondet_quot!(ctx, x82, x3, 6);
    let x86: BytePoly_4 = bigint_nondet_rem!(ctx, x82, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x85, x3, 10), x86, 10), x82, 10),
        48771,
        4,
    )?;
    let x87: BytePoly_8 = bigint_mul!(x57, x57, 8);
    let x88: BytePoly_8 = bigint_add!(bigint_add!(bigint_add!(x87, x87, 8), x87, 8), x2, 8);
    let x89: BytePoly_8 = bigint_add!(x48, x88, 8);
    let x90: BytePoly_4 = bigint_nondet_inv!(ctx, bigint_add!(x60, x60, 4), x3, 4);
    let x91: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x88, x90, 12), x3, 4);
    let x92: BytePoly_8 = bigint_mul!(x60, x91, 8);
    let x93: BytePoly_8 = bigint_add!(x92, x92, 8);
    let x94: BytePoly_9 = bigint_nondet_quot!(ctx, bigint_sub!(x89, x93, 8), x3, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x94, x3, 13), x93, 13), x89, 13),
        73156,
        4,
    )?;
    let x95: BytePoly_8 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x91, x91, 8), x3, 8), x3, 8),
            x57,
            8
        ),
        x57,
        8
    );
    let x96: BytePoly_9 = bigint_nondet_quot!(ctx, x95, x3, 9);
    let x97: BytePoly_4 = bigint_nondet_rem!(ctx, x95, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x96, x3, 13), x97, 13), x95, 13),
        73156,
        4,
    )?;
    let x98: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x91, x97, 8), 8), x3, 8),
            x60,
            8
        ),
        bigint_mul!(x91, x57, 8),
        8
    );
    let x99: BytePoly_9 = bigint_nondet_quot!(ctx, x98, x3, 9);
    let x100: BytePoly_4 = bigint_nondet_rem!(ctx, x98, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x99, x3, 13), x100, 13), x98, 13),
        73156,
        4,
    )?;
    let x101: BytePoly_1 = bigint_nondet_rem!(ctx, x62, x4, 1);
    let x102: BytePoly_4 = bigint_nondet_quot!(ctx, x62, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x102, x4, 5), x101, 5), x62, 5),
        32515,
        2,
    )?;
    let x103: BytePoly_1 = bigint_sub!(x5, x101, 1);
    eqz(ctx, &bigint_mul!(x101, x103, 2), 8131, 2)?;
    let x104: BytePoly_4 = bigint_add!(bigint_sub!(x100, x86, 4), x3, 4);
    let x105: BytePoly_4 = bigint_add!(bigint_sub!(x97, x84, 4), x3, 4);
    let x106: BytePoly_4 = bigint_nondet_inv!(ctx, x105, x3, 4);
    let x107: BytePoly_8 = bigint_mul!(x105, x106, 8);
    let x108: BytePoly_9 = bigint_nondet_quot!(ctx, x107, x3, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x107, bigint_mul!(x108, x3, 13), 13), x0, 13),
        73156,
        4,
    )?;
    let x109: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x104, x106, 8), x3, 4);
    let x110: BytePoly_8 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x109, x105, 8), x104, 8), x3, 8),
        x3,
        8
    );
    let x111: BytePoly_9 = bigint_nondet_quot!(ctx, x110, x3, 9);
    eqz(
        ctx,
        &bigint_sub!(x110, bigint_mul!(x111, x3, 13), 13),
        73156,
        4,
    )?;
    let x112: BytePoly_8 = bigint_mul!(x109, x109, 8);
    let x113: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x112, x84, 8), x3, 8), x97, 8),
        x3,
        8
    );
    let x114: BytePoly_9 = bigint_nondet_quot!(ctx, x113, x3, 9);
    let x115: BytePoly_4 = bigint_nondet_rem!(ctx, x113, x3, 4);
    let x116: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x109, x115, 8),
                        bigint_add!(bigint_sub!(x86, bigint_mul!(x109, x84, 8), 8), x3, 8),
                        8
                    ),
                    8
                ),
                x3,
                8
            ),
            x3,
            8
        ),
        x16,
        8
    );
    let x117: BytePoly_9 = bigint_nondet_quot!(ctx, x116, x3, 9);
    let x118: BytePoly_4 = bigint_nondet_rem!(ctx, x116, x3, 4);
    let x119: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x112, bigint_mul!(x114, x3, 13), 13), x84, 13),
                    x97,
                    13
                ),
                x3,
                13
            ),
            x3,
            13
        ),
        x115,
        13
    );
    eqz(ctx, &x119, 73156, 4)?;
    let x120: BytePoly_13 = bigint_sub!(
        bigint_add!(bigint_mul!(x117, x3, 13), x118, 13),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x109, bigint_sub!(x84, x115, 4), 8), x86, 8),
                    x3,
                    8
                ),
                x3,
                8
            ),
            x16,
            8
        ),
        13
    );
    eqz(ctx, &x120, 73156, 4)?;
    let x121: BytePoly_5 = bigint_add!(bigint_mul!(x115, x101, 5), bigint_mul!(x84, x103, 5), 5);
    let x122: BytePoly_5 = bigint_add!(bigint_mul!(x118, x101, 5), bigint_mul!(x86, x103, 5), 5);
    let x123: BytePoly_6 = bigint_nondet_quot!(ctx, x121, x3, 6);
    let x124: BytePoly_4 = bigint_nondet_rem!(ctx, x121, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x123, x3, 10), x124, 10), x121, 10),
        48771,
        4,
    )?;
    let x125: BytePoly_6 = bigint_nondet_quot!(ctx, x122, x3, 6);
    let x126: BytePoly_4 = bigint_nondet_rem!(ctx, x122, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x125, x3, 10), x126, 10), x122, 10),
        48771,
        4,
    )?;
    let x127: BytePoly_8 = bigint_mul!(x97, x97, 8);
    let x128: BytePoly_8 = bigint_add!(bigint_add!(bigint_add!(x127, x127, 8), x127, 8), x2, 8);
    let x129: BytePoly_8 = bigint_add!(x48, x128, 8);
    let x130: BytePoly_4 = bigint_nondet_inv!(ctx, bigint_add!(x100, x100, 4), x3, 4);
    let x131: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x128, x130, 12), x3, 4);
    let x132: BytePoly_8 = bigint_mul!(x100, x131, 8);
    let x133: BytePoly_8 = bigint_add!(x132, x132, 8);
    let x134: BytePoly_9 = bigint_nondet_quot!(ctx, bigint_sub!(x129, x133, 8), x3, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x134, x3, 13), x133, 13), x129, 13),
        73156,
        4,
    )?;
    let x135: BytePoly_8 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x131, x131, 8), x3, 8), x3, 8),
            x97,
            8
        ),
        x97,
        8
    );
    let x136: BytePoly_9 = bigint_nondet_quot!(ctx, x135, x3, 9);
    let x137: BytePoly_4 = bigint_nondet_rem!(ctx, x135, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x136, x3, 13), x137, 13), x135, 13),
        73156,
        4,
    )?;
    let x138: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x131, x137, 8), 8), x3, 8),
            x100,
            8
        ),
        bigint_mul!(x131, x97, 8),
        8
    );
    let x139: BytePoly_9 = bigint_nondet_quot!(ctx, x138, x3, 9);
    let x140: BytePoly_4 = bigint_nondet_rem!(ctx, x138, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x139, x3, 13), x140, 13), x138, 13),
        73156,
        4,
    )?;
    let x141: BytePoly_1 = bigint_nondet_rem!(ctx, x102, x4, 1);
    let x142: BytePoly_4 = bigint_nondet_quot!(ctx, x102, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x142, x4, 5), x141, 5), x102, 5),
        32515,
        2,
    )?;
    let x143: BytePoly_1 = bigint_sub!(x5, x141, 1);
    eqz(ctx, &bigint_mul!(x141, x143, 2), 8131, 2)?;
    let x144: BytePoly_4 = bigint_add!(bigint_sub!(x140, x126, 4), x3, 4);
    let x145: BytePoly_4 = bigint_add!(bigint_sub!(x137, x124, 4), x3, 4);
    let x146: BytePoly_4 = bigint_nondet_inv!(ctx, x145, x3, 4);
    let x147: BytePoly_8 = bigint_mul!(x145, x146, 8);
    let x148: BytePoly_9 = bigint_nondet_quot!(ctx, x147, x3, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x147, bigint_mul!(x148, x3, 13), 13), x0, 13),
        73156,
        4,
    )?;
    let x149: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x144, x146, 8), x3, 4);
    let x150: BytePoly_8 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x149, x145, 8), x144, 8), x3, 8),
        x3,
        8
    );
    let x151: BytePoly_9 = bigint_nondet_quot!(ctx, x150, x3, 9);
    eqz(
        ctx,
        &bigint_sub!(x150, bigint_mul!(x151, x3, 13), 13),
        73156,
        4,
    )?;
    let x152: BytePoly_8 = bigint_mul!(x149, x149, 8);
    let x153: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x152, x124, 8), x3, 8), x137, 8),
        x3,
        8
    );
    let x154: BytePoly_9 = bigint_nondet_quot!(ctx, x153, x3, 9);
    let x155: BytePoly_4 = bigint_nondet_rem!(ctx, x153, x3, 4);
    let x156: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x149, x155, 8),
                        bigint_add!(bigint_sub!(x126, bigint_mul!(x149, x124, 8), 8), x3, 8),
                        8
                    ),
                    8
                ),
                x3,
                8
            ),
            x3,
            8
        ),
        x16,
        8
    );
    let x157: BytePoly_9 = bigint_nondet_quot!(ctx, x156, x3, 9);
    let x158: BytePoly_4 = bigint_nondet_rem!(ctx, x156, x3, 4);
    let x159: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x152, bigint_mul!(x154, x3, 13), 13), x124, 13),
                    x137,
                    13
                ),
                x3,
                13
            ),
            x3,
            13
        ),
        x155,
        13
    );
    eqz(ctx, &x159, 73156, 4)?;
    let x160: BytePoly_13 = bigint_sub!(
        bigint_add!(bigint_mul!(x157, x3, 13), x158, 13),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x149, bigint_sub!(x124, x155, 4), 8), x126, 8),
                    x3,
                    8
                ),
                x3,
                8
            ),
            x16,
            8
        ),
        13
    );
    eqz(ctx, &x160, 73156, 4)?;
    let x161: BytePoly_5 = bigint_add!(bigint_mul!(x155, x141, 5), bigint_mul!(x124, x143, 5), 5);
    let x162: BytePoly_5 = bigint_add!(bigint_mul!(x158, x141, 5), bigint_mul!(x126, x143, 5), 5);
    let x163: BytePoly_6 = bigint_nondet_quot!(ctx, x161, x3, 6);
    let x164: BytePoly_4 = bigint_nondet_rem!(ctx, x161, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x163, x3, 10), x164, 10), x161, 10),
        48771,
        4,
    )?;
    let x165: BytePoly_6 = bigint_nondet_quot!(ctx, x162, x3, 6);
    let x166: BytePoly_4 = bigint_nondet_rem!(ctx, x162, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x165, x3, 10), x166, 10), x162, 10),
        48771,
        4,
    )?;
    let x167: BytePoly_8 = bigint_mul!(x137, x137, 8);
    let x168: BytePoly_8 = bigint_add!(bigint_add!(bigint_add!(x167, x167, 8), x167, 8), x2, 8);
    let x169: BytePoly_8 = bigint_add!(x48, x168, 8);
    let x170: BytePoly_4 = bigint_nondet_inv!(ctx, bigint_add!(x140, x140, 4), x3, 4);
    let x171: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x168, x170, 12), x3, 4);
    let x172: BytePoly_8 = bigint_mul!(x140, x171, 8);
    let x173: BytePoly_8 = bigint_add!(x172, x172, 8);
    let x174: BytePoly_9 = bigint_nondet_quot!(ctx, bigint_sub!(x169, x173, 8), x3, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x174, x3, 13), x173, 13), x169, 13),
        73156,
        4,
    )?;
    let x175: BytePoly_8 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x171, x171, 8), x3, 8), x3, 8),
            x137,
            8
        ),
        x137,
        8
    );
    let x176: BytePoly_9 = bigint_nondet_quot!(ctx, x175, x3, 9);
    let x177: BytePoly_4 = bigint_nondet_rem!(ctx, x175, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x176, x3, 13), x177, 13), x175, 13),
        73156,
        4,
    )?;
    let x178: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x171, x177, 8), 8), x3, 8),
            x140,
            8
        ),
        bigint_mul!(x171, x137, 8),
        8
    );
    let x179: BytePoly_9 = bigint_nondet_quot!(ctx, x178, x3, 9);
    let x180: BytePoly_4 = bigint_nondet_rem!(ctx, x178, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x179, x3, 13), x180, 13), x178, 13),
        73156,
        4,
    )?;
    let x181: BytePoly_1 = bigint_nondet_rem!(ctx, x142, x4, 1);
    let x182: BytePoly_4 = bigint_nondet_quot!(ctx, x142, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x182, x4, 5), x181, 5), x142, 5),
        32515,
        2,
    )?;
    let x183: BytePoly_1 = bigint_sub!(x5, x181, 1);
    eqz(ctx, &bigint_mul!(x181, x183, 2), 8131, 2)?;
    let x184: BytePoly_4 = bigint_add!(bigint_sub!(x180, x166, 4), x3, 4);
    let x185: BytePoly_4 = bigint_add!(bigint_sub!(x177, x164, 4), x3, 4);
    let x186: BytePoly_4 = bigint_nondet_inv!(ctx, x185, x3, 4);
    let x187: BytePoly_8 = bigint_mul!(x185, x186, 8);
    let x188: BytePoly_9 = bigint_nondet_quot!(ctx, x187, x3, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x187, bigint_mul!(x188, x3, 13), 13), x0, 13),
        73156,
        4,
    )?;
    let x189: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x184, x186, 8), x3, 4);
    let x190: BytePoly_8 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x189, x185, 8), x184, 8), x3, 8),
        x3,
        8
    );
    let x191: BytePoly_9 = bigint_nondet_quot!(ctx, x190, x3, 9);
    eqz(
        ctx,
        &bigint_sub!(x190, bigint_mul!(x191, x3, 13), 13),
        73156,
        4,
    )?;
    let x192: BytePoly_8 = bigint_mul!(x189, x189, 8);
    let x193: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x192, x164, 8), x3, 8), x177, 8),
        x3,
        8
    );
    let x194: BytePoly_9 = bigint_nondet_quot!(ctx, x193, x3, 9);
    let x195: BytePoly_4 = bigint_nondet_rem!(ctx, x193, x3, 4);
    let x196: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x189, x195, 8),
                        bigint_add!(bigint_sub!(x166, bigint_mul!(x189, x164, 8), 8), x3, 8),
                        8
                    ),
                    8
                ),
                x3,
                8
            ),
            x3,
            8
        ),
        x16,
        8
    );
    let x197: BytePoly_9 = bigint_nondet_quot!(ctx, x196, x3, 9);
    let x198: BytePoly_4 = bigint_nondet_rem!(ctx, x196, x3, 4);
    let x199: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x192, bigint_mul!(x194, x3, 13), 13), x164, 13),
                    x177,
                    13
                ),
                x3,
                13
            ),
            x3,
            13
        ),
        x195,
        13
    );
    eqz(ctx, &x199, 73156, 4)?;
    let x200: BytePoly_13 = bigint_sub!(
        bigint_add!(bigint_mul!(x197, x3, 13), x198, 13),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x189, bigint_sub!(x164, x195, 4), 8), x166, 8),
                    x3,
                    8
                ),
                x3,
                8
            ),
            x16,
            8
        ),
        13
    );
    eqz(ctx, &x200, 73156, 4)?;
    let x201: BytePoly_5 = bigint_add!(bigint_mul!(x195, x181, 5), bigint_mul!(x164, x183, 5), 5);
    let x202: BytePoly_5 = bigint_add!(bigint_mul!(x198, x181, 5), bigint_mul!(x166, x183, 5), 5);
    let x203: BytePoly_6 = bigint_nondet_quot!(ctx, x201, x3, 6);
    let x204: BytePoly_4 = bigint_nondet_rem!(ctx, x201, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x203, x3, 10), x204, 10), x201, 10),
        48771,
        4,
    )?;
    let x205: BytePoly_6 = bigint_nondet_quot!(ctx, x202, x3, 6);
    let x206: BytePoly_4 = bigint_nondet_rem!(ctx, x202, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x205, x3, 10), x206, 10), x202, 10),
        48771,
        4,
    )?;
    let x207: BytePoly_8 = bigint_mul!(x177, x177, 8);
    let x208: BytePoly_8 = bigint_add!(bigint_add!(bigint_add!(x207, x207, 8), x207, 8), x2, 8);
    let x209: BytePoly_8 = bigint_add!(x48, x208, 8);
    let x210: BytePoly_4 = bigint_nondet_inv!(ctx, bigint_add!(x180, x180, 4), x3, 4);
    let x211: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x208, x210, 12), x3, 4);
    let x212: BytePoly_8 = bigint_mul!(x180, x211, 8);
    let x213: BytePoly_8 = bigint_add!(x212, x212, 8);
    let x214: BytePoly_9 = bigint_nondet_quot!(ctx, bigint_sub!(x209, x213, 8), x3, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x214, x3, 13), x213, 13), x209, 13),
        73156,
        4,
    )?;
    let x215: BytePoly_8 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x211, x211, 8), x3, 8), x3, 8),
            x177,
            8
        ),
        x177,
        8
    );
    let x216: BytePoly_9 = bigint_nondet_quot!(ctx, x215, x3, 9);
    let x217: BytePoly_4 = bigint_nondet_rem!(ctx, x215, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x216, x3, 13), x217, 13), x215, 13),
        73156,
        4,
    )?;
    let x218: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x211, x217, 8), 8), x3, 8),
            x180,
            8
        ),
        bigint_mul!(x211, x177, 8),
        8
    );
    let x219: BytePoly_9 = bigint_nondet_quot!(ctx, x218, x3, 9);
    let x220: BytePoly_4 = bigint_nondet_rem!(ctx, x218, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x219, x3, 13), x220, 13), x218, 13),
        73156,
        4,
    )?;
    let x221: BytePoly_1 = bigint_nondet_rem!(ctx, x182, x4, 1);
    let x222: BytePoly_4 = bigint_nondet_quot!(ctx, x182, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x222, x4, 5), x221, 5), x182, 5),
        32515,
        2,
    )?;
    let x223: BytePoly_1 = bigint_sub!(x5, x221, 1);
    eqz(ctx, &bigint_mul!(x221, x223, 2), 8131, 2)?;
    let x224: BytePoly_4 = bigint_add!(bigint_sub!(x220, x206, 4), x3, 4);
    let x225: BytePoly_4 = bigint_add!(bigint_sub!(x217, x204, 4), x3, 4);
    let x226: BytePoly_4 = bigint_nondet_inv!(ctx, x225, x3, 4);
    let x227: BytePoly_8 = bigint_mul!(x225, x226, 8);
    let x228: BytePoly_9 = bigint_nondet_quot!(ctx, x227, x3, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x227, bigint_mul!(x228, x3, 13), 13), x0, 13),
        73156,
        4,
    )?;
    let x229: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x224, x226, 8), x3, 4);
    let x230: BytePoly_8 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x229, x225, 8), x224, 8), x3, 8),
        x3,
        8
    );
    let x231: BytePoly_9 = bigint_nondet_quot!(ctx, x230, x3, 9);
    eqz(
        ctx,
        &bigint_sub!(x230, bigint_mul!(x231, x3, 13), 13),
        73156,
        4,
    )?;
    let x232: BytePoly_8 = bigint_mul!(x229, x229, 8);
    let x233: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x232, x204, 8), x3, 8), x217, 8),
        x3,
        8
    );
    let x234: BytePoly_9 = bigint_nondet_quot!(ctx, x233, x3, 9);
    let x235: BytePoly_4 = bigint_nondet_rem!(ctx, x233, x3, 4);
    let x236: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x229, x235, 8),
                        bigint_add!(bigint_sub!(x206, bigint_mul!(x229, x204, 8), 8), x3, 8),
                        8
                    ),
                    8
                ),
                x3,
                8
            ),
            x3,
            8
        ),
        x16,
        8
    );
    let x237: BytePoly_9 = bigint_nondet_quot!(ctx, x236, x3, 9);
    let x238: BytePoly_4 = bigint_nondet_rem!(ctx, x236, x3, 4);
    let x239: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x232, bigint_mul!(x234, x3, 13), 13), x204, 13),
                    x217,
                    13
                ),
                x3,
                13
            ),
            x3,
            13
        ),
        x235,
        13
    );
    eqz(ctx, &x239, 73156, 4)?;
    let x240: BytePoly_13 = bigint_sub!(
        bigint_add!(bigint_mul!(x237, x3, 13), x238, 13),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x229, bigint_sub!(x204, x235, 4), 8), x206, 8),
                    x3,
                    8
                ),
                x3,
                8
            ),
            x16,
            8
        ),
        13
    );
    eqz(ctx, &x240, 73156, 4)?;
    let x241: BytePoly_5 = bigint_add!(bigint_mul!(x235, x221, 5), bigint_mul!(x204, x223, 5), 5);
    let x242: BytePoly_5 = bigint_add!(bigint_mul!(x238, x221, 5), bigint_mul!(x206, x223, 5), 5);
    let x243: BytePoly_6 = bigint_nondet_quot!(ctx, x241, x3, 6);
    let x244: BytePoly_4 = bigint_nondet_rem!(ctx, x241, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x243, x3, 10), x244, 10), x241, 10),
        48771,
        4,
    )?;
    let x245: BytePoly_6 = bigint_nondet_quot!(ctx, x242, x3, 6);
    let x246: BytePoly_4 = bigint_nondet_rem!(ctx, x242, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x245, x3, 10), x246, 10), x242, 10),
        48771,
        4,
    )?;
    let x247: BytePoly_8 = bigint_mul!(x217, x217, 8);
    let x248: BytePoly_8 = bigint_add!(bigint_add!(bigint_add!(x247, x247, 8), x247, 8), x2, 8);
    let x249: BytePoly_8 = bigint_add!(x48, x248, 8);
    let x250: BytePoly_4 = bigint_nondet_inv!(ctx, bigint_add!(x220, x220, 4), x3, 4);
    let x251: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x248, x250, 12), x3, 4);
    let x252: BytePoly_8 = bigint_mul!(x220, x251, 8);
    let x253: BytePoly_8 = bigint_add!(x252, x252, 8);
    let x254: BytePoly_9 = bigint_nondet_quot!(ctx, bigint_sub!(x249, x253, 8), x3, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x254, x3, 13), x253, 13), x249, 13),
        73156,
        4,
    )?;
    let x255: BytePoly_8 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x251, x251, 8), x3, 8), x3, 8),
            x217,
            8
        ),
        x217,
        8
    );
    let x256: BytePoly_9 = bigint_nondet_quot!(ctx, x255, x3, 9);
    let x257: BytePoly_4 = bigint_nondet_rem!(ctx, x255, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x256, x3, 13), x257, 13), x255, 13),
        73156,
        4,
    )?;
    let x258: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x251, x257, 8), 8), x3, 8),
            x220,
            8
        ),
        bigint_mul!(x251, x217, 8),
        8
    );
    let x259: BytePoly_9 = bigint_nondet_quot!(ctx, x258, x3, 9);
    let x260: BytePoly_4 = bigint_nondet_rem!(ctx, x258, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x259, x3, 13), x260, 13), x258, 13),
        73156,
        4,
    )?;
    let x261: BytePoly_1 = bigint_nondet_rem!(ctx, x222, x4, 1);
    let x262: BytePoly_4 = bigint_nondet_quot!(ctx, x222, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x262, x4, 5), x261, 5), x222, 5),
        32515,
        2,
    )?;
    let x263: BytePoly_1 = bigint_sub!(x5, x261, 1);
    eqz(ctx, &bigint_mul!(x261, x263, 2), 8131, 2)?;
    let x264: BytePoly_4 = bigint_add!(bigint_sub!(x260, x246, 4), x3, 4);
    let x265: BytePoly_4 = bigint_add!(bigint_sub!(x257, x244, 4), x3, 4);
    let x266: BytePoly_4 = bigint_nondet_inv!(ctx, x265, x3, 4);
    let x267: BytePoly_8 = bigint_mul!(x265, x266, 8);
    let x268: BytePoly_9 = bigint_nondet_quot!(ctx, x267, x3, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x267, bigint_mul!(x268, x3, 13), 13), x0, 13),
        73156,
        4,
    )?;
    let x269: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x264, x266, 8), x3, 4);
    let x270: BytePoly_8 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x269, x265, 8), x264, 8), x3, 8),
        x3,
        8
    );
    let x271: BytePoly_9 = bigint_nondet_quot!(ctx, x270, x3, 9);
    eqz(
        ctx,
        &bigint_sub!(x270, bigint_mul!(x271, x3, 13), 13),
        73156,
        4,
    )?;
    let x272: BytePoly_8 = bigint_mul!(x269, x269, 8);
    let x273: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x272, x244, 8), x3, 8), x257, 8),
        x3,
        8
    );
    let x274: BytePoly_9 = bigint_nondet_quot!(ctx, x273, x3, 9);
    let x275: BytePoly_4 = bigint_nondet_rem!(ctx, x273, x3, 4);
    let x276: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x269, x275, 8),
                        bigint_add!(bigint_sub!(x246, bigint_mul!(x269, x244, 8), 8), x3, 8),
                        8
                    ),
                    8
                ),
                x3,
                8
            ),
            x3,
            8
        ),
        x16,
        8
    );
    let x277: BytePoly_9 = bigint_nondet_quot!(ctx, x276, x3, 9);
    let x278: BytePoly_4 = bigint_nondet_rem!(ctx, x276, x3, 4);
    let x279: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x272, bigint_mul!(x274, x3, 13), 13), x244, 13),
                    x257,
                    13
                ),
                x3,
                13
            ),
            x3,
            13
        ),
        x275,
        13
    );
    eqz(ctx, &x279, 73156, 4)?;
    let x280: BytePoly_13 = bigint_sub!(
        bigint_add!(bigint_mul!(x277, x3, 13), x278, 13),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x269, bigint_sub!(x244, x275, 4), 8), x246, 8),
                    x3,
                    8
                ),
                x3,
                8
            ),
            x16,
            8
        ),
        13
    );
    eqz(ctx, &x280, 73156, 4)?;
    let x281: BytePoly_5 = bigint_add!(bigint_mul!(x275, x261, 5), bigint_mul!(x244, x263, 5), 5);
    let x282: BytePoly_5 = bigint_add!(bigint_mul!(x278, x261, 5), bigint_mul!(x246, x263, 5), 5);
    let x283: BytePoly_6 = bigint_nondet_quot!(ctx, x281, x3, 6);
    let x284: BytePoly_4 = bigint_nondet_rem!(ctx, x281, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x283, x3, 10), x284, 10), x281, 10),
        48771,
        4,
    )?;
    let x285: BytePoly_6 = bigint_nondet_quot!(ctx, x282, x3, 6);
    let x286: BytePoly_4 = bigint_nondet_rem!(ctx, x282, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x285, x3, 10), x286, 10), x282, 10),
        48771,
        4,
    )?;
    let x287: BytePoly_8 = bigint_mul!(x257, x257, 8);
    let x288: BytePoly_8 = bigint_add!(bigint_add!(bigint_add!(x287, x287, 8), x287, 8), x2, 8);
    let x289: BytePoly_8 = bigint_add!(x48, x288, 8);
    let x290: BytePoly_4 = bigint_nondet_inv!(ctx, bigint_add!(x260, x260, 4), x3, 4);
    let x291: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x288, x290, 12), x3, 4);
    let x292: BytePoly_8 = bigint_mul!(x260, x291, 8);
    let x293: BytePoly_8 = bigint_add!(x292, x292, 8);
    let x294: BytePoly_9 = bigint_nondet_quot!(ctx, bigint_sub!(x289, x293, 8), x3, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x294, x3, 13), x293, 13), x289, 13),
        73156,
        4,
    )?;
    let x295: BytePoly_8 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x291, x291, 8), x3, 8), x3, 8),
            x257,
            8
        ),
        x257,
        8
    );
    let x296: BytePoly_9 = bigint_nondet_quot!(ctx, x295, x3, 9);
    let x297: BytePoly_4 = bigint_nondet_rem!(ctx, x295, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x296, x3, 13), x297, 13), x295, 13),
        73156,
        4,
    )?;
    let x298: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x291, x297, 8), 8), x3, 8),
            x260,
            8
        ),
        bigint_mul!(x291, x257, 8),
        8
    );
    let x299: BytePoly_9 = bigint_nondet_quot!(ctx, x298, x3, 9);
    let x300: BytePoly_4 = bigint_nondet_rem!(ctx, x298, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x299, x3, 13), x300, 13), x298, 13),
        73156,
        4,
    )?;
    let x301: BytePoly_1 = bigint_nondet_rem!(ctx, x262, x4, 1);
    let x302: BytePoly_4 = bigint_nondet_quot!(ctx, x262, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x302, x4, 5), x301, 5), x262, 5),
        32515,
        2,
    )?;
    let x303: BytePoly_1 = bigint_sub!(x5, x301, 1);
    eqz(ctx, &bigint_mul!(x301, x303, 2), 8131, 2)?;
    let x304: BytePoly_4 = bigint_add!(bigint_sub!(x300, x286, 4), x3, 4);
    let x305: BytePoly_4 = bigint_add!(bigint_sub!(x297, x284, 4), x3, 4);
    let x306: BytePoly_4 = bigint_nondet_inv!(ctx, x305, x3, 4);
    let x307: BytePoly_8 = bigint_mul!(x305, x306, 8);
    let x308: BytePoly_9 = bigint_nondet_quot!(ctx, x307, x3, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x307, bigint_mul!(x308, x3, 13), 13), x0, 13),
        73156,
        4,
    )?;
    let x309: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x304, x306, 8), x3, 4);
    let x310: BytePoly_8 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x309, x305, 8), x304, 8), x3, 8),
        x3,
        8
    );
    let x311: BytePoly_9 = bigint_nondet_quot!(ctx, x310, x3, 9);
    eqz(
        ctx,
        &bigint_sub!(x310, bigint_mul!(x311, x3, 13), 13),
        73156,
        4,
    )?;
    let x312: BytePoly_8 = bigint_mul!(x309, x309, 8);
    let x313: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x312, x284, 8), x3, 8), x297, 8),
        x3,
        8
    );
    let x314: BytePoly_9 = bigint_nondet_quot!(ctx, x313, x3, 9);
    let x315: BytePoly_4 = bigint_nondet_rem!(ctx, x313, x3, 4);
    let x316: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x309, x315, 8),
                        bigint_add!(bigint_sub!(x286, bigint_mul!(x309, x284, 8), 8), x3, 8),
                        8
                    ),
                    8
                ),
                x3,
                8
            ),
            x3,
            8
        ),
        x16,
        8
    );
    let x317: BytePoly_9 = bigint_nondet_quot!(ctx, x316, x3, 9);
    let x318: BytePoly_4 = bigint_nondet_rem!(ctx, x316, x3, 4);
    let x319: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x312, bigint_mul!(x314, x3, 13), 13), x284, 13),
                    x297,
                    13
                ),
                x3,
                13
            ),
            x3,
            13
        ),
        x315,
        13
    );
    eqz(ctx, &x319, 73156, 4)?;
    let x320: BytePoly_13 = bigint_sub!(
        bigint_add!(bigint_mul!(x317, x3, 13), x318, 13),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x309, bigint_sub!(x284, x315, 4), 8), x286, 8),
                    x3,
                    8
                ),
                x3,
                8
            ),
            x16,
            8
        ),
        13
    );
    eqz(ctx, &x320, 73156, 4)?;
    let x321: BytePoly_5 = bigint_add!(bigint_mul!(x315, x301, 5), bigint_mul!(x284, x303, 5), 5);
    let x322: BytePoly_5 = bigint_add!(bigint_mul!(x318, x301, 5), bigint_mul!(x286, x303, 5), 5);
    let x323: BytePoly_6 = bigint_nondet_quot!(ctx, x321, x3, 6);
    let x324: BytePoly_4 = bigint_nondet_rem!(ctx, x321, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x323, x3, 10), x324, 10), x321, 10),
        48771,
        4,
    )?;
    let x325: BytePoly_6 = bigint_nondet_quot!(ctx, x322, x3, 6);
    let x326: BytePoly_4 = bigint_nondet_rem!(ctx, x322, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x325, x3, 10), x326, 10), x322, 10),
        48771,
        4,
    )?;
    let x327: BytePoly_8 = bigint_mul!(x297, x297, 8);
    let x328: BytePoly_8 = bigint_add!(bigint_add!(bigint_add!(x327, x327, 8), x327, 8), x2, 8);
    let x329: BytePoly_8 = bigint_add!(x48, x328, 8);
    let x330: BytePoly_4 = bigint_nondet_inv!(ctx, bigint_add!(x300, x300, 4), x3, 4);
    let x331: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x328, x330, 12), x3, 4);
    let x332: BytePoly_8 = bigint_mul!(x300, x331, 8);
    let x333: BytePoly_8 = bigint_add!(x332, x332, 8);
    let x334: BytePoly_9 = bigint_nondet_quot!(ctx, bigint_sub!(x329, x333, 8), x3, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x334, x3, 13), x333, 13), x329, 13),
        73156,
        4,
    )?;
    let x335: BytePoly_8 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x331, x331, 8), x3, 8), x3, 8),
            x297,
            8
        ),
        x297,
        8
    );
    let x336: BytePoly_9 = bigint_nondet_quot!(ctx, x335, x3, 9);
    let x337: BytePoly_4 = bigint_nondet_rem!(ctx, x335, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x336, x3, 13), x337, 13), x335, 13),
        73156,
        4,
    )?;
    let x338: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x331, x337, 8), 8), x3, 8),
            x300,
            8
        ),
        bigint_mul!(x331, x297, 8),
        8
    );
    let x339: BytePoly_9 = bigint_nondet_quot!(ctx, x338, x3, 9);
    let x340: BytePoly_4 = bigint_nondet_rem!(ctx, x338, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x339, x3, 13), x340, 13), x338, 13),
        73156,
        4,
    )?;
    let x341: BytePoly_1 = bigint_nondet_rem!(ctx, x302, x4, 1);
    let x342: BytePoly_4 = bigint_nondet_quot!(ctx, x302, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x342, x4, 5), x341, 5), x302, 5),
        32515,
        2,
    )?;
    let x343: BytePoly_1 = bigint_sub!(x5, x341, 1);
    eqz(ctx, &bigint_mul!(x341, x343, 2), 8131, 2)?;
    let x344: BytePoly_4 = bigint_add!(bigint_sub!(x340, x326, 4), x3, 4);
    let x345: BytePoly_4 = bigint_add!(bigint_sub!(x337, x324, 4), x3, 4);
    let x346: BytePoly_4 = bigint_nondet_inv!(ctx, x345, x3, 4);
    let x347: BytePoly_8 = bigint_mul!(x345, x346, 8);
    let x348: BytePoly_9 = bigint_nondet_quot!(ctx, x347, x3, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x347, bigint_mul!(x348, x3, 13), 13), x0, 13),
        73156,
        4,
    )?;
    let x349: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x344, x346, 8), x3, 4);
    let x350: BytePoly_8 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x349, x345, 8), x344, 8), x3, 8),
        x3,
        8
    );
    let x351: BytePoly_9 = bigint_nondet_quot!(ctx, x350, x3, 9);
    eqz(
        ctx,
        &bigint_sub!(x350, bigint_mul!(x351, x3, 13), 13),
        73156,
        4,
    )?;
    let x352: BytePoly_8 = bigint_mul!(x349, x349, 8);
    let x353: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x352, x324, 8), x3, 8), x337, 8),
        x3,
        8
    );
    let x354: BytePoly_9 = bigint_nondet_quot!(ctx, x353, x3, 9);
    let x355: BytePoly_4 = bigint_nondet_rem!(ctx, x353, x3, 4);
    let x356: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x349, x355, 8),
                        bigint_add!(bigint_sub!(x326, bigint_mul!(x349, x324, 8), 8), x3, 8),
                        8
                    ),
                    8
                ),
                x3,
                8
            ),
            x3,
            8
        ),
        x16,
        8
    );
    let x357: BytePoly_9 = bigint_nondet_quot!(ctx, x356, x3, 9);
    let x358: BytePoly_4 = bigint_nondet_rem!(ctx, x356, x3, 4);
    let x359: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x352, bigint_mul!(x354, x3, 13), 13), x324, 13),
                    x337,
                    13
                ),
                x3,
                13
            ),
            x3,
            13
        ),
        x355,
        13
    );
    eqz(ctx, &x359, 73156, 4)?;
    let x360: BytePoly_13 = bigint_sub!(
        bigint_add!(bigint_mul!(x357, x3, 13), x358, 13),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x349, bigint_sub!(x324, x355, 4), 8), x326, 8),
                    x3,
                    8
                ),
                x3,
                8
            ),
            x16,
            8
        ),
        13
    );
    eqz(ctx, &x360, 73156, 4)?;
    let x361: BytePoly_5 = bigint_add!(bigint_mul!(x355, x341, 5), bigint_mul!(x324, x343, 5), 5);
    let x362: BytePoly_5 = bigint_add!(bigint_mul!(x358, x341, 5), bigint_mul!(x326, x343, 5), 5);
    let x363: BytePoly_6 = bigint_nondet_quot!(ctx, x361, x3, 6);
    let x364: BytePoly_4 = bigint_nondet_rem!(ctx, x361, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x363, x3, 10), x364, 10), x361, 10),
        48771,
        4,
    )?;
    let x365: BytePoly_6 = bigint_nondet_quot!(ctx, x362, x3, 6);
    let x366: BytePoly_4 = bigint_nondet_rem!(ctx, x362, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x365, x3, 10), x366, 10), x362, 10),
        48771,
        4,
    )?;
    let x367: BytePoly_8 = bigint_mul!(x337, x337, 8);
    let x368: BytePoly_8 = bigint_add!(bigint_add!(bigint_add!(x367, x367, 8), x367, 8), x2, 8);
    let x369: BytePoly_8 = bigint_add!(x48, x368, 8);
    let x370: BytePoly_4 = bigint_nondet_inv!(ctx, bigint_add!(x340, x340, 4), x3, 4);
    let x371: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x368, x370, 12), x3, 4);
    let x372: BytePoly_8 = bigint_mul!(x340, x371, 8);
    let x373: BytePoly_8 = bigint_add!(x372, x372, 8);
    let x374: BytePoly_9 = bigint_nondet_quot!(ctx, bigint_sub!(x369, x373, 8), x3, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x374, x3, 13), x373, 13), x369, 13),
        73156,
        4,
    )?;
    let x375: BytePoly_8 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x371, x371, 8), x3, 8), x3, 8),
            x337,
            8
        ),
        x337,
        8
    );
    let x376: BytePoly_9 = bigint_nondet_quot!(ctx, x375, x3, 9);
    let x377: BytePoly_4 = bigint_nondet_rem!(ctx, x375, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x376, x3, 13), x377, 13), x375, 13),
        73156,
        4,
    )?;
    let x378: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x371, x377, 8), 8), x3, 8),
            x340,
            8
        ),
        bigint_mul!(x371, x337, 8),
        8
    );
    let x379: BytePoly_9 = bigint_nondet_quot!(ctx, x378, x3, 9);
    let x380: BytePoly_4 = bigint_nondet_rem!(ctx, x378, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x379, x3, 13), x380, 13), x378, 13),
        73156,
        4,
    )?;
    let x381: BytePoly_1 = bigint_nondet_rem!(ctx, x342, x4, 1);
    let x382: BytePoly_4 = bigint_nondet_quot!(ctx, x342, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x382, x4, 5), x381, 5), x342, 5),
        32515,
        2,
    )?;
    let x383: BytePoly_1 = bigint_sub!(x5, x381, 1);
    eqz(ctx, &bigint_mul!(x381, x383, 2), 8131, 2)?;
    let x384: BytePoly_4 = bigint_add!(bigint_sub!(x380, x366, 4), x3, 4);
    let x385: BytePoly_4 = bigint_add!(bigint_sub!(x377, x364, 4), x3, 4);
    let x386: BytePoly_4 = bigint_nondet_inv!(ctx, x385, x3, 4);
    let x387: BytePoly_8 = bigint_mul!(x385, x386, 8);
    let x388: BytePoly_9 = bigint_nondet_quot!(ctx, x387, x3, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x387, bigint_mul!(x388, x3, 13), 13), x0, 13),
        73156,
        4,
    )?;
    let x389: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x384, x386, 8), x3, 4);
    let x390: BytePoly_8 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x389, x385, 8), x384, 8), x3, 8),
        x3,
        8
    );
    let x391: BytePoly_9 = bigint_nondet_quot!(ctx, x390, x3, 9);
    eqz(
        ctx,
        &bigint_sub!(x390, bigint_mul!(x391, x3, 13), 13),
        73156,
        4,
    )?;
    let x392: BytePoly_8 = bigint_mul!(x389, x389, 8);
    let x393: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x392, x364, 8), x3, 8), x377, 8),
        x3,
        8
    );
    let x394: BytePoly_9 = bigint_nondet_quot!(ctx, x393, x3, 9);
    let x395: BytePoly_4 = bigint_nondet_rem!(ctx, x393, x3, 4);
    let x396: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x389, x395, 8),
                        bigint_add!(bigint_sub!(x366, bigint_mul!(x389, x364, 8), 8), x3, 8),
                        8
                    ),
                    8
                ),
                x3,
                8
            ),
            x3,
            8
        ),
        x16,
        8
    );
    let x397: BytePoly_9 = bigint_nondet_quot!(ctx, x396, x3, 9);
    let x398: BytePoly_4 = bigint_nondet_rem!(ctx, x396, x3, 4);
    let x399: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x392, bigint_mul!(x394, x3, 13), 13), x364, 13),
                    x377,
                    13
                ),
                x3,
                13
            ),
            x3,
            13
        ),
        x395,
        13
    );
    eqz(ctx, &x399, 73156, 4)?;
    let x400: BytePoly_13 = bigint_sub!(
        bigint_add!(bigint_mul!(x397, x3, 13), x398, 13),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x389, bigint_sub!(x364, x395, 4), 8), x366, 8),
                    x3,
                    8
                ),
                x3,
                8
            ),
            x16,
            8
        ),
        13
    );
    eqz(ctx, &x400, 73156, 4)?;
    let x401: BytePoly_5 = bigint_add!(bigint_mul!(x395, x381, 5), bigint_mul!(x364, x383, 5), 5);
    let x402: BytePoly_5 = bigint_add!(bigint_mul!(x398, x381, 5), bigint_mul!(x366, x383, 5), 5);
    let x403: BytePoly_6 = bigint_nondet_quot!(ctx, x401, x3, 6);
    let x404: BytePoly_4 = bigint_nondet_rem!(ctx, x401, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x403, x3, 10), x404, 10), x401, 10),
        48771,
        4,
    )?;
    let x405: BytePoly_6 = bigint_nondet_quot!(ctx, x402, x3, 6);
    let x406: BytePoly_4 = bigint_nondet_rem!(ctx, x402, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x405, x3, 10), x406, 10), x402, 10),
        48771,
        4,
    )?;
    let x407: BytePoly_8 = bigint_mul!(x377, x377, 8);
    let x408: BytePoly_8 = bigint_add!(bigint_add!(bigint_add!(x407, x407, 8), x407, 8), x2, 8);
    let x409: BytePoly_8 = bigint_add!(x48, x408, 8);
    let x410: BytePoly_4 = bigint_nondet_inv!(ctx, bigint_add!(x380, x380, 4), x3, 4);
    let x411: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x408, x410, 12), x3, 4);
    let x412: BytePoly_8 = bigint_mul!(x380, x411, 8);
    let x413: BytePoly_8 = bigint_add!(x412, x412, 8);
    let x414: BytePoly_9 = bigint_nondet_quot!(ctx, bigint_sub!(x409, x413, 8), x3, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x414, x3, 13), x413, 13), x409, 13),
        73156,
        4,
    )?;
    let x415: BytePoly_8 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x411, x411, 8), x3, 8), x3, 8),
            x377,
            8
        ),
        x377,
        8
    );
    let x416: BytePoly_9 = bigint_nondet_quot!(ctx, x415, x3, 9);
    let x417: BytePoly_4 = bigint_nondet_rem!(ctx, x415, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x416, x3, 13), x417, 13), x415, 13),
        73156,
        4,
    )?;
    let x418: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x411, x417, 8), 8), x3, 8),
            x380,
            8
        ),
        bigint_mul!(x411, x377, 8),
        8
    );
    let x419: BytePoly_9 = bigint_nondet_quot!(ctx, x418, x3, 9);
    let x420: BytePoly_4 = bigint_nondet_rem!(ctx, x418, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x419, x3, 13), x420, 13), x418, 13),
        73156,
        4,
    )?;
    let x421: BytePoly_1 = bigint_nondet_rem!(ctx, x382, x4, 1);
    let x422: BytePoly_4 = bigint_nondet_quot!(ctx, x382, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x422, x4, 5), x421, 5), x382, 5),
        32515,
        2,
    )?;
    let x423: BytePoly_1 = bigint_sub!(x5, x421, 1);
    eqz(ctx, &bigint_mul!(x421, x423, 2), 8131, 2)?;
    let x424: BytePoly_4 = bigint_add!(bigint_sub!(x420, x406, 4), x3, 4);
    let x425: BytePoly_4 = bigint_add!(bigint_sub!(x417, x404, 4), x3, 4);
    let x426: BytePoly_4 = bigint_nondet_inv!(ctx, x425, x3, 4);
    let x427: BytePoly_8 = bigint_mul!(x425, x426, 8);
    let x428: BytePoly_9 = bigint_nondet_quot!(ctx, x427, x3, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x427, bigint_mul!(x428, x3, 13), 13), x0, 13),
        73156,
        4,
    )?;
    let x429: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x424, x426, 8), x3, 4);
    let x430: BytePoly_8 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x429, x425, 8), x424, 8), x3, 8),
        x3,
        8
    );
    let x431: BytePoly_9 = bigint_nondet_quot!(ctx, x430, x3, 9);
    eqz(
        ctx,
        &bigint_sub!(x430, bigint_mul!(x431, x3, 13), 13),
        73156,
        4,
    )?;
    let x432: BytePoly_8 = bigint_mul!(x429, x429, 8);
    let x433: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x432, x404, 8), x3, 8), x417, 8),
        x3,
        8
    );
    let x434: BytePoly_9 = bigint_nondet_quot!(ctx, x433, x3, 9);
    let x435: BytePoly_4 = bigint_nondet_rem!(ctx, x433, x3, 4);
    let x436: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x429, x435, 8),
                        bigint_add!(bigint_sub!(x406, bigint_mul!(x429, x404, 8), 8), x3, 8),
                        8
                    ),
                    8
                ),
                x3,
                8
            ),
            x3,
            8
        ),
        x16,
        8
    );
    let x437: BytePoly_9 = bigint_nondet_quot!(ctx, x436, x3, 9);
    let x438: BytePoly_4 = bigint_nondet_rem!(ctx, x436, x3, 4);
    let x439: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x432, bigint_mul!(x434, x3, 13), 13), x404, 13),
                    x417,
                    13
                ),
                x3,
                13
            ),
            x3,
            13
        ),
        x435,
        13
    );
    eqz(ctx, &x439, 73156, 4)?;
    let x440: BytePoly_13 = bigint_sub!(
        bigint_add!(bigint_mul!(x437, x3, 13), x438, 13),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x429, bigint_sub!(x404, x435, 4), 8), x406, 8),
                    x3,
                    8
                ),
                x3,
                8
            ),
            x16,
            8
        ),
        13
    );
    eqz(ctx, &x440, 73156, 4)?;
    let x441: BytePoly_5 = bigint_add!(bigint_mul!(x435, x421, 5), bigint_mul!(x404, x423, 5), 5);
    let x442: BytePoly_5 = bigint_add!(bigint_mul!(x438, x421, 5), bigint_mul!(x406, x423, 5), 5);
    let x443: BytePoly_6 = bigint_nondet_quot!(ctx, x441, x3, 6);
    let x444: BytePoly_4 = bigint_nondet_rem!(ctx, x441, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x443, x3, 10), x444, 10), x441, 10),
        48771,
        4,
    )?;
    let x445: BytePoly_6 = bigint_nondet_quot!(ctx, x442, x3, 6);
    let x446: BytePoly_4 = bigint_nondet_rem!(ctx, x442, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x445, x3, 10), x446, 10), x442, 10),
        48771,
        4,
    )?;
    let x447: BytePoly_8 = bigint_mul!(x417, x417, 8);
    let x448: BytePoly_8 = bigint_add!(bigint_add!(bigint_add!(x447, x447, 8), x447, 8), x2, 8);
    let x449: BytePoly_8 = bigint_add!(x48, x448, 8);
    let x450: BytePoly_4 = bigint_nondet_inv!(ctx, bigint_add!(x420, x420, 4), x3, 4);
    let x451: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x448, x450, 12), x3, 4);
    let x452: BytePoly_8 = bigint_mul!(x420, x451, 8);
    let x453: BytePoly_8 = bigint_add!(x452, x452, 8);
    let x454: BytePoly_9 = bigint_nondet_quot!(ctx, bigint_sub!(x449, x453, 8), x3, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x454, x3, 13), x453, 13), x449, 13),
        73156,
        4,
    )?;
    let x455: BytePoly_8 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x451, x451, 8), x3, 8), x3, 8),
            x417,
            8
        ),
        x417,
        8
    );
    let x456: BytePoly_9 = bigint_nondet_quot!(ctx, x455, x3, 9);
    let x457: BytePoly_4 = bigint_nondet_rem!(ctx, x455, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x456, x3, 13), x457, 13), x455, 13),
        73156,
        4,
    )?;
    let x458: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x451, x457, 8), 8), x3, 8),
            x420,
            8
        ),
        bigint_mul!(x451, x417, 8),
        8
    );
    let x459: BytePoly_9 = bigint_nondet_quot!(ctx, x458, x3, 9);
    let x460: BytePoly_4 = bigint_nondet_rem!(ctx, x458, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x459, x3, 13), x460, 13), x458, 13),
        73156,
        4,
    )?;
    let x461: BytePoly_1 = bigint_nondet_rem!(ctx, x422, x4, 1);
    let x462: BytePoly_4 = bigint_nondet_quot!(ctx, x422, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x462, x4, 5), x461, 5), x422, 5),
        32515,
        2,
    )?;
    let x463: BytePoly_1 = bigint_sub!(x5, x461, 1);
    eqz(ctx, &bigint_mul!(x461, x463, 2), 8131, 2)?;
    let x464: BytePoly_4 = bigint_add!(bigint_sub!(x460, x446, 4), x3, 4);
    let x465: BytePoly_4 = bigint_add!(bigint_sub!(x457, x444, 4), x3, 4);
    let x466: BytePoly_4 = bigint_nondet_inv!(ctx, x465, x3, 4);
    let x467: BytePoly_8 = bigint_mul!(x465, x466, 8);
    let x468: BytePoly_9 = bigint_nondet_quot!(ctx, x467, x3, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x467, bigint_mul!(x468, x3, 13), 13), x0, 13),
        73156,
        4,
    )?;
    let x469: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x464, x466, 8), x3, 4);
    let x470: BytePoly_8 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x469, x465, 8), x464, 8), x3, 8),
        x3,
        8
    );
    let x471: BytePoly_9 = bigint_nondet_quot!(ctx, x470, x3, 9);
    eqz(
        ctx,
        &bigint_sub!(x470, bigint_mul!(x471, x3, 13), 13),
        73156,
        4,
    )?;
    let x472: BytePoly_8 = bigint_mul!(x469, x469, 8);
    let x473: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x472, x444, 8), x3, 8), x457, 8),
        x3,
        8
    );
    let x474: BytePoly_9 = bigint_nondet_quot!(ctx, x473, x3, 9);
    let x475: BytePoly_4 = bigint_nondet_rem!(ctx, x473, x3, 4);
    let x476: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x469, x475, 8),
                        bigint_add!(bigint_sub!(x446, bigint_mul!(x469, x444, 8), 8), x3, 8),
                        8
                    ),
                    8
                ),
                x3,
                8
            ),
            x3,
            8
        ),
        x16,
        8
    );
    let x477: BytePoly_9 = bigint_nondet_quot!(ctx, x476, x3, 9);
    let x478: BytePoly_4 = bigint_nondet_rem!(ctx, x476, x3, 4);
    let x479: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x472, bigint_mul!(x474, x3, 13), 13), x444, 13),
                    x457,
                    13
                ),
                x3,
                13
            ),
            x3,
            13
        ),
        x475,
        13
    );
    eqz(ctx, &x479, 73156, 4)?;
    let x480: BytePoly_13 = bigint_sub!(
        bigint_add!(bigint_mul!(x477, x3, 13), x478, 13),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x469, bigint_sub!(x444, x475, 4), 8), x446, 8),
                    x3,
                    8
                ),
                x3,
                8
            ),
            x16,
            8
        ),
        13
    );
    eqz(ctx, &x480, 73156, 4)?;
    let x481: BytePoly_5 = bigint_add!(bigint_mul!(x475, x461, 5), bigint_mul!(x444, x463, 5), 5);
    let x482: BytePoly_5 = bigint_add!(bigint_mul!(x478, x461, 5), bigint_mul!(x446, x463, 5), 5);
    let x483: BytePoly_6 = bigint_nondet_quot!(ctx, x481, x3, 6);
    let x484: BytePoly_4 = bigint_nondet_rem!(ctx, x481, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x483, x3, 10), x484, 10), x481, 10),
        48771,
        4,
    )?;
    let x485: BytePoly_6 = bigint_nondet_quot!(ctx, x482, x3, 6);
    let x486: BytePoly_4 = bigint_nondet_rem!(ctx, x482, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x485, x3, 10), x486, 10), x482, 10),
        48771,
        4,
    )?;
    let x487: BytePoly_8 = bigint_mul!(x457, x457, 8);
    let x488: BytePoly_8 = bigint_add!(bigint_add!(bigint_add!(x487, x487, 8), x487, 8), x2, 8);
    let x489: BytePoly_8 = bigint_add!(x48, x488, 8);
    let x490: BytePoly_4 = bigint_nondet_inv!(ctx, bigint_add!(x460, x460, 4), x3, 4);
    let x491: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x488, x490, 12), x3, 4);
    let x492: BytePoly_8 = bigint_mul!(x460, x491, 8);
    let x493: BytePoly_8 = bigint_add!(x492, x492, 8);
    let x494: BytePoly_9 = bigint_nondet_quot!(ctx, bigint_sub!(x489, x493, 8), x3, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x494, x3, 13), x493, 13), x489, 13),
        73156,
        4,
    )?;
    let x495: BytePoly_8 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x491, x491, 8), x3, 8), x3, 8),
            x457,
            8
        ),
        x457,
        8
    );
    let x496: BytePoly_9 = bigint_nondet_quot!(ctx, x495, x3, 9);
    let x497: BytePoly_4 = bigint_nondet_rem!(ctx, x495, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x496, x3, 13), x497, 13), x495, 13),
        73156,
        4,
    )?;
    let x498: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x491, x497, 8), 8), x3, 8),
            x460,
            8
        ),
        bigint_mul!(x491, x457, 8),
        8
    );
    let x499: BytePoly_9 = bigint_nondet_quot!(ctx, x498, x3, 9);
    let x500: BytePoly_4 = bigint_nondet_rem!(ctx, x498, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x499, x3, 13), x500, 13), x498, 13),
        73156,
        4,
    )?;
    let x501: BytePoly_1 = bigint_nondet_rem!(ctx, x462, x4, 1);
    let x502: BytePoly_4 = bigint_nondet_quot!(ctx, x462, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x502, x4, 5), x501, 5), x462, 5),
        32515,
        2,
    )?;
    let x503: BytePoly_1 = bigint_sub!(x5, x501, 1);
    eqz(ctx, &bigint_mul!(x501, x503, 2), 8131, 2)?;
    let x504: BytePoly_4 = bigint_add!(bigint_sub!(x500, x486, 4), x3, 4);
    let x505: BytePoly_4 = bigint_add!(bigint_sub!(x497, x484, 4), x3, 4);
    let x506: BytePoly_4 = bigint_nondet_inv!(ctx, x505, x3, 4);
    let x507: BytePoly_8 = bigint_mul!(x505, x506, 8);
    let x508: BytePoly_9 = bigint_nondet_quot!(ctx, x507, x3, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x507, bigint_mul!(x508, x3, 13), 13), x0, 13),
        73156,
        4,
    )?;
    let x509: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x504, x506, 8), x3, 4);
    let x510: BytePoly_8 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x509, x505, 8), x504, 8), x3, 8),
        x3,
        8
    );
    let x511: BytePoly_9 = bigint_nondet_quot!(ctx, x510, x3, 9);
    eqz(
        ctx,
        &bigint_sub!(x510, bigint_mul!(x511, x3, 13), 13),
        73156,
        4,
    )?;
    let x512: BytePoly_8 = bigint_mul!(x509, x509, 8);
    let x513: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x512, x484, 8), x3, 8), x497, 8),
        x3,
        8
    );
    let x514: BytePoly_9 = bigint_nondet_quot!(ctx, x513, x3, 9);
    let x515: BytePoly_4 = bigint_nondet_rem!(ctx, x513, x3, 4);
    let x516: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x509, x515, 8),
                        bigint_add!(bigint_sub!(x486, bigint_mul!(x509, x484, 8), 8), x3, 8),
                        8
                    ),
                    8
                ),
                x3,
                8
            ),
            x3,
            8
        ),
        x16,
        8
    );
    let x517: BytePoly_9 = bigint_nondet_quot!(ctx, x516, x3, 9);
    let x518: BytePoly_4 = bigint_nondet_rem!(ctx, x516, x3, 4);
    let x519: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x512, bigint_mul!(x514, x3, 13), 13), x484, 13),
                    x497,
                    13
                ),
                x3,
                13
            ),
            x3,
            13
        ),
        x515,
        13
    );
    eqz(ctx, &x519, 73156, 4)?;
    let x520: BytePoly_13 = bigint_sub!(
        bigint_add!(bigint_mul!(x517, x3, 13), x518, 13),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x509, bigint_sub!(x484, x515, 4), 8), x486, 8),
                    x3,
                    8
                ),
                x3,
                8
            ),
            x16,
            8
        ),
        13
    );
    eqz(ctx, &x520, 73156, 4)?;
    let x521: BytePoly_5 = bigint_add!(bigint_mul!(x515, x501, 5), bigint_mul!(x484, x503, 5), 5);
    let x522: BytePoly_5 = bigint_add!(bigint_mul!(x518, x501, 5), bigint_mul!(x486, x503, 5), 5);
    let x523: BytePoly_6 = bigint_nondet_quot!(ctx, x521, x3, 6);
    let x524: BytePoly_4 = bigint_nondet_rem!(ctx, x521, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x523, x3, 10), x524, 10), x521, 10),
        48771,
        4,
    )?;
    let x525: BytePoly_6 = bigint_nondet_quot!(ctx, x522, x3, 6);
    let x526: BytePoly_4 = bigint_nondet_rem!(ctx, x522, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x525, x3, 10), x526, 10), x522, 10),
        48771,
        4,
    )?;
    let x527: BytePoly_8 = bigint_mul!(x497, x497, 8);
    let x528: BytePoly_8 = bigint_add!(bigint_add!(bigint_add!(x527, x527, 8), x527, 8), x2, 8);
    let x529: BytePoly_8 = bigint_add!(x48, x528, 8);
    let x530: BytePoly_4 = bigint_nondet_inv!(ctx, bigint_add!(x500, x500, 4), x3, 4);
    let x531: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x528, x530, 12), x3, 4);
    let x532: BytePoly_8 = bigint_mul!(x500, x531, 8);
    let x533: BytePoly_8 = bigint_add!(x532, x532, 8);
    let x534: BytePoly_9 = bigint_nondet_quot!(ctx, bigint_sub!(x529, x533, 8), x3, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x534, x3, 13), x533, 13), x529, 13),
        73156,
        4,
    )?;
    let x535: BytePoly_8 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x531, x531, 8), x3, 8), x3, 8),
            x497,
            8
        ),
        x497,
        8
    );
    let x536: BytePoly_9 = bigint_nondet_quot!(ctx, x535, x3, 9);
    let x537: BytePoly_4 = bigint_nondet_rem!(ctx, x535, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x536, x3, 13), x537, 13), x535, 13),
        73156,
        4,
    )?;
    let x538: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x531, x537, 8), 8), x3, 8),
            x500,
            8
        ),
        bigint_mul!(x531, x497, 8),
        8
    );
    let x539: BytePoly_9 = bigint_nondet_quot!(ctx, x538, x3, 9);
    let x540: BytePoly_4 = bigint_nondet_rem!(ctx, x538, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x539, x3, 13), x540, 13), x538, 13),
        73156,
        4,
    )?;
    let x541: BytePoly_1 = bigint_nondet_rem!(ctx, x502, x4, 1);
    let x542: BytePoly_4 = bigint_nondet_quot!(ctx, x502, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x542, x4, 5), x541, 5), x502, 5),
        32515,
        2,
    )?;
    let x543: BytePoly_1 = bigint_sub!(x5, x541, 1);
    eqz(ctx, &bigint_mul!(x541, x543, 2), 8131, 2)?;
    let x544: BytePoly_4 = bigint_add!(bigint_sub!(x540, x526, 4), x3, 4);
    let x545: BytePoly_4 = bigint_add!(bigint_sub!(x537, x524, 4), x3, 4);
    let x546: BytePoly_4 = bigint_nondet_inv!(ctx, x545, x3, 4);
    let x547: BytePoly_8 = bigint_mul!(x545, x546, 8);
    let x548: BytePoly_9 = bigint_nondet_quot!(ctx, x547, x3, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x547, bigint_mul!(x548, x3, 13), 13), x0, 13),
        73156,
        4,
    )?;
    let x549: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x544, x546, 8), x3, 4);
    let x550: BytePoly_8 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x549, x545, 8), x544, 8), x3, 8),
        x3,
        8
    );
    let x551: BytePoly_9 = bigint_nondet_quot!(ctx, x550, x3, 9);
    eqz(
        ctx,
        &bigint_sub!(x550, bigint_mul!(x551, x3, 13), 13),
        73156,
        4,
    )?;
    let x552: BytePoly_8 = bigint_mul!(x549, x549, 8);
    let x553: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x552, x524, 8), x3, 8), x537, 8),
        x3,
        8
    );
    let x554: BytePoly_9 = bigint_nondet_quot!(ctx, x553, x3, 9);
    let x555: BytePoly_4 = bigint_nondet_rem!(ctx, x553, x3, 4);
    let x556: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x549, x555, 8),
                        bigint_add!(bigint_sub!(x526, bigint_mul!(x549, x524, 8), 8), x3, 8),
                        8
                    ),
                    8
                ),
                x3,
                8
            ),
            x3,
            8
        ),
        x16,
        8
    );
    let x557: BytePoly_9 = bigint_nondet_quot!(ctx, x556, x3, 9);
    let x558: BytePoly_4 = bigint_nondet_rem!(ctx, x556, x3, 4);
    let x559: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x552, bigint_mul!(x554, x3, 13), 13), x524, 13),
                    x537,
                    13
                ),
                x3,
                13
            ),
            x3,
            13
        ),
        x555,
        13
    );
    eqz(ctx, &x559, 73156, 4)?;
    let x560: BytePoly_13 = bigint_sub!(
        bigint_add!(bigint_mul!(x557, x3, 13), x558, 13),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x549, bigint_sub!(x524, x555, 4), 8), x526, 8),
                    x3,
                    8
                ),
                x3,
                8
            ),
            x16,
            8
        ),
        13
    );
    eqz(ctx, &x560, 73156, 4)?;
    let x561: BytePoly_5 = bigint_add!(bigint_mul!(x555, x541, 5), bigint_mul!(x524, x543, 5), 5);
    let x562: BytePoly_5 = bigint_add!(bigint_mul!(x558, x541, 5), bigint_mul!(x526, x543, 5), 5);
    let x563: BytePoly_6 = bigint_nondet_quot!(ctx, x561, x3, 6);
    let x564: BytePoly_4 = bigint_nondet_rem!(ctx, x561, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x563, x3, 10), x564, 10), x561, 10),
        48771,
        4,
    )?;
    let x565: BytePoly_6 = bigint_nondet_quot!(ctx, x562, x3, 6);
    let x566: BytePoly_4 = bigint_nondet_rem!(ctx, x562, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x565, x3, 10), x566, 10), x562, 10),
        48771,
        4,
    )?;
    let x567: BytePoly_8 = bigint_mul!(x537, x537, 8);
    let x568: BytePoly_8 = bigint_add!(bigint_add!(bigint_add!(x567, x567, 8), x567, 8), x2, 8);
    let x569: BytePoly_8 = bigint_add!(x48, x568, 8);
    let x570: BytePoly_4 = bigint_nondet_inv!(ctx, bigint_add!(x540, x540, 4), x3, 4);
    let x571: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x568, x570, 12), x3, 4);
    let x572: BytePoly_8 = bigint_mul!(x540, x571, 8);
    let x573: BytePoly_8 = bigint_add!(x572, x572, 8);
    let x574: BytePoly_9 = bigint_nondet_quot!(ctx, bigint_sub!(x569, x573, 8), x3, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x574, x3, 13), x573, 13), x569, 13),
        73156,
        4,
    )?;
    let x575: BytePoly_8 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x571, x571, 8), x3, 8), x3, 8),
            x537,
            8
        ),
        x537,
        8
    );
    let x576: BytePoly_9 = bigint_nondet_quot!(ctx, x575, x3, 9);
    let x577: BytePoly_4 = bigint_nondet_rem!(ctx, x575, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x576, x3, 13), x577, 13), x575, 13),
        73156,
        4,
    )?;
    let x578: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x571, x577, 8), 8), x3, 8),
            x540,
            8
        ),
        bigint_mul!(x571, x537, 8),
        8
    );
    let x579: BytePoly_9 = bigint_nondet_quot!(ctx, x578, x3, 9);
    let x580: BytePoly_4 = bigint_nondet_rem!(ctx, x578, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x579, x3, 13), x580, 13), x578, 13),
        73156,
        4,
    )?;
    let x581: BytePoly_1 = bigint_nondet_rem!(ctx, x542, x4, 1);
    let x582: BytePoly_4 = bigint_nondet_quot!(ctx, x542, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x582, x4, 5), x581, 5), x542, 5),
        32515,
        2,
    )?;
    let x583: BytePoly_1 = bigint_sub!(x5, x581, 1);
    eqz(ctx, &bigint_mul!(x581, x583, 2), 8131, 2)?;
    let x584: BytePoly_4 = bigint_add!(bigint_sub!(x580, x566, 4), x3, 4);
    let x585: BytePoly_4 = bigint_add!(bigint_sub!(x577, x564, 4), x3, 4);
    let x586: BytePoly_4 = bigint_nondet_inv!(ctx, x585, x3, 4);
    let x587: BytePoly_8 = bigint_mul!(x585, x586, 8);
    let x588: BytePoly_9 = bigint_nondet_quot!(ctx, x587, x3, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x587, bigint_mul!(x588, x3, 13), 13), x0, 13),
        73156,
        4,
    )?;
    let x589: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x584, x586, 8), x3, 4);
    let x590: BytePoly_8 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x589, x585, 8), x584, 8), x3, 8),
        x3,
        8
    );
    let x591: BytePoly_9 = bigint_nondet_quot!(ctx, x590, x3, 9);
    eqz(
        ctx,
        &bigint_sub!(x590, bigint_mul!(x591, x3, 13), 13),
        73156,
        4,
    )?;
    let x592: BytePoly_8 = bigint_mul!(x589, x589, 8);
    let x593: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x592, x564, 8), x3, 8), x577, 8),
        x3,
        8
    );
    let x594: BytePoly_9 = bigint_nondet_quot!(ctx, x593, x3, 9);
    let x595: BytePoly_4 = bigint_nondet_rem!(ctx, x593, x3, 4);
    let x596: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x589, x595, 8),
                        bigint_add!(bigint_sub!(x566, bigint_mul!(x589, x564, 8), 8), x3, 8),
                        8
                    ),
                    8
                ),
                x3,
                8
            ),
            x3,
            8
        ),
        x16,
        8
    );
    let x597: BytePoly_9 = bigint_nondet_quot!(ctx, x596, x3, 9);
    let x598: BytePoly_4 = bigint_nondet_rem!(ctx, x596, x3, 4);
    let x599: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x592, bigint_mul!(x594, x3, 13), 13), x564, 13),
                    x577,
                    13
                ),
                x3,
                13
            ),
            x3,
            13
        ),
        x595,
        13
    );
    eqz(ctx, &x599, 73156, 4)?;
    let x600: BytePoly_13 = bigint_sub!(
        bigint_add!(bigint_mul!(x597, x3, 13), x598, 13),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x589, bigint_sub!(x564, x595, 4), 8), x566, 8),
                    x3,
                    8
                ),
                x3,
                8
            ),
            x16,
            8
        ),
        13
    );
    eqz(ctx, &x600, 73156, 4)?;
    let x601: BytePoly_5 = bigint_add!(bigint_mul!(x595, x581, 5), bigint_mul!(x564, x583, 5), 5);
    let x602: BytePoly_5 = bigint_add!(bigint_mul!(x598, x581, 5), bigint_mul!(x566, x583, 5), 5);
    let x603: BytePoly_6 = bigint_nondet_quot!(ctx, x601, x3, 6);
    let x604: BytePoly_4 = bigint_nondet_rem!(ctx, x601, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x603, x3, 10), x604, 10), x601, 10),
        48771,
        4,
    )?;
    let x605: BytePoly_6 = bigint_nondet_quot!(ctx, x602, x3, 6);
    let x606: BytePoly_4 = bigint_nondet_rem!(ctx, x602, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x605, x3, 10), x606, 10), x602, 10),
        48771,
        4,
    )?;
    let x607: BytePoly_8 = bigint_mul!(x577, x577, 8);
    let x608: BytePoly_8 = bigint_add!(bigint_add!(bigint_add!(x607, x607, 8), x607, 8), x2, 8);
    let x609: BytePoly_8 = bigint_add!(x48, x608, 8);
    let x610: BytePoly_4 = bigint_nondet_inv!(ctx, bigint_add!(x580, x580, 4), x3, 4);
    let x611: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x608, x610, 12), x3, 4);
    let x612: BytePoly_8 = bigint_mul!(x580, x611, 8);
    let x613: BytePoly_8 = bigint_add!(x612, x612, 8);
    let x614: BytePoly_9 = bigint_nondet_quot!(ctx, bigint_sub!(x609, x613, 8), x3, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x614, x3, 13), x613, 13), x609, 13),
        73156,
        4,
    )?;
    let x615: BytePoly_8 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x611, x611, 8), x3, 8), x3, 8),
            x577,
            8
        ),
        x577,
        8
    );
    let x616: BytePoly_9 = bigint_nondet_quot!(ctx, x615, x3, 9);
    let x617: BytePoly_4 = bigint_nondet_rem!(ctx, x615, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x616, x3, 13), x617, 13), x615, 13),
        73156,
        4,
    )?;
    let x618: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x611, x617, 8), 8), x3, 8),
            x580,
            8
        ),
        bigint_mul!(x611, x577, 8),
        8
    );
    let x619: BytePoly_9 = bigint_nondet_quot!(ctx, x618, x3, 9);
    let x620: BytePoly_4 = bigint_nondet_rem!(ctx, x618, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x619, x3, 13), x620, 13), x618, 13),
        73156,
        4,
    )?;
    let x621: BytePoly_1 = bigint_nondet_rem!(ctx, x582, x4, 1);
    let x622: BytePoly_4 = bigint_nondet_quot!(ctx, x582, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x622, x4, 5), x621, 5), x582, 5),
        32515,
        2,
    )?;
    let x623: BytePoly_1 = bigint_sub!(x5, x621, 1);
    eqz(ctx, &bigint_mul!(x621, x623, 2), 8131, 2)?;
    let x624: BytePoly_4 = bigint_add!(bigint_sub!(x620, x606, 4), x3, 4);
    let x625: BytePoly_4 = bigint_add!(bigint_sub!(x617, x604, 4), x3, 4);
    let x626: BytePoly_4 = bigint_nondet_inv!(ctx, x625, x3, 4);
    let x627: BytePoly_8 = bigint_mul!(x625, x626, 8);
    let x628: BytePoly_9 = bigint_nondet_quot!(ctx, x627, x3, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x627, bigint_mul!(x628, x3, 13), 13), x0, 13),
        73156,
        4,
    )?;
    let x629: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x624, x626, 8), x3, 4);
    let x630: BytePoly_8 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x629, x625, 8), x624, 8), x3, 8),
        x3,
        8
    );
    let x631: BytePoly_9 = bigint_nondet_quot!(ctx, x630, x3, 9);
    eqz(
        ctx,
        &bigint_sub!(x630, bigint_mul!(x631, x3, 13), 13),
        73156,
        4,
    )?;
    let x632: BytePoly_8 = bigint_mul!(x629, x629, 8);
    let x633: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x632, x604, 8), x3, 8), x617, 8),
        x3,
        8
    );
    let x634: BytePoly_9 = bigint_nondet_quot!(ctx, x633, x3, 9);
    let x635: BytePoly_4 = bigint_nondet_rem!(ctx, x633, x3, 4);
    let x636: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x629, x635, 8),
                        bigint_add!(bigint_sub!(x606, bigint_mul!(x629, x604, 8), 8), x3, 8),
                        8
                    ),
                    8
                ),
                x3,
                8
            ),
            x3,
            8
        ),
        x16,
        8
    );
    let x637: BytePoly_9 = bigint_nondet_quot!(ctx, x636, x3, 9);
    let x638: BytePoly_4 = bigint_nondet_rem!(ctx, x636, x3, 4);
    let x639: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x632, bigint_mul!(x634, x3, 13), 13), x604, 13),
                    x617,
                    13
                ),
                x3,
                13
            ),
            x3,
            13
        ),
        x635,
        13
    );
    eqz(ctx, &x639, 73156, 4)?;
    let x640: BytePoly_13 = bigint_sub!(
        bigint_add!(bigint_mul!(x637, x3, 13), x638, 13),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x629, bigint_sub!(x604, x635, 4), 8), x606, 8),
                    x3,
                    8
                ),
                x3,
                8
            ),
            x16,
            8
        ),
        13
    );
    eqz(ctx, &x640, 73156, 4)?;
    let x641: BytePoly_5 = bigint_add!(bigint_mul!(x635, x621, 5), bigint_mul!(x604, x623, 5), 5);
    let x642: BytePoly_5 = bigint_add!(bigint_mul!(x638, x621, 5), bigint_mul!(x606, x623, 5), 5);
    let x643: BytePoly_6 = bigint_nondet_quot!(ctx, x641, x3, 6);
    let x644: BytePoly_4 = bigint_nondet_rem!(ctx, x641, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x643, x3, 10), x644, 10), x641, 10),
        48771,
        4,
    )?;
    let x645: BytePoly_6 = bigint_nondet_quot!(ctx, x642, x3, 6);
    let x646: BytePoly_4 = bigint_nondet_rem!(ctx, x642, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x645, x3, 10), x646, 10), x642, 10),
        48771,
        4,
    )?;
    let x647: BytePoly_8 = bigint_mul!(x617, x617, 8);
    let x648: BytePoly_8 = bigint_add!(bigint_add!(bigint_add!(x647, x647, 8), x647, 8), x2, 8);
    let x649: BytePoly_8 = bigint_add!(x48, x648, 8);
    let x650: BytePoly_4 = bigint_nondet_inv!(ctx, bigint_add!(x620, x620, 4), x3, 4);
    let x651: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x648, x650, 12), x3, 4);
    let x652: BytePoly_8 = bigint_mul!(x620, x651, 8);
    let x653: BytePoly_8 = bigint_add!(x652, x652, 8);
    let x654: BytePoly_9 = bigint_nondet_quot!(ctx, bigint_sub!(x649, x653, 8), x3, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x654, x3, 13), x653, 13), x649, 13),
        73156,
        4,
    )?;
    let x655: BytePoly_8 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x651, x651, 8), x3, 8), x3, 8),
            x617,
            8
        ),
        x617,
        8
    );
    let x656: BytePoly_9 = bigint_nondet_quot!(ctx, x655, x3, 9);
    let x657: BytePoly_4 = bigint_nondet_rem!(ctx, x655, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x656, x3, 13), x657, 13), x655, 13),
        73156,
        4,
    )?;
    let x658: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x651, x657, 8), 8), x3, 8),
            x620,
            8
        ),
        bigint_mul!(x651, x617, 8),
        8
    );
    let x659: BytePoly_9 = bigint_nondet_quot!(ctx, x658, x3, 9);
    let x660: BytePoly_4 = bigint_nondet_rem!(ctx, x658, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x659, x3, 13), x660, 13), x658, 13),
        73156,
        4,
    )?;
    let x661: BytePoly_1 = bigint_nondet_rem!(ctx, x622, x4, 1);
    let x662: BytePoly_4 = bigint_nondet_quot!(ctx, x622, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x662, x4, 5), x661, 5), x622, 5),
        32515,
        2,
    )?;
    let x663: BytePoly_1 = bigint_sub!(x5, x661, 1);
    eqz(ctx, &bigint_mul!(x661, x663, 2), 8131, 2)?;
    let x664: BytePoly_4 = bigint_add!(bigint_sub!(x660, x646, 4), x3, 4);
    let x665: BytePoly_4 = bigint_add!(bigint_sub!(x657, x644, 4), x3, 4);
    let x666: BytePoly_4 = bigint_nondet_inv!(ctx, x665, x3, 4);
    let x667: BytePoly_8 = bigint_mul!(x665, x666, 8);
    let x668: BytePoly_9 = bigint_nondet_quot!(ctx, x667, x3, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x667, bigint_mul!(x668, x3, 13), 13), x0, 13),
        73156,
        4,
    )?;
    let x669: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x664, x666, 8), x3, 4);
    let x670: BytePoly_8 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x669, x665, 8), x664, 8), x3, 8),
        x3,
        8
    );
    let x671: BytePoly_9 = bigint_nondet_quot!(ctx, x670, x3, 9);
    eqz(
        ctx,
        &bigint_sub!(x670, bigint_mul!(x671, x3, 13), 13),
        73156,
        4,
    )?;
    let x672: BytePoly_8 = bigint_mul!(x669, x669, 8);
    let x673: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x672, x644, 8), x3, 8), x657, 8),
        x3,
        8
    );
    let x674: BytePoly_9 = bigint_nondet_quot!(ctx, x673, x3, 9);
    let x675: BytePoly_4 = bigint_nondet_rem!(ctx, x673, x3, 4);
    let x676: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x669, x675, 8),
                        bigint_add!(bigint_sub!(x646, bigint_mul!(x669, x644, 8), 8), x3, 8),
                        8
                    ),
                    8
                ),
                x3,
                8
            ),
            x3,
            8
        ),
        x16,
        8
    );
    let x677: BytePoly_9 = bigint_nondet_quot!(ctx, x676, x3, 9);
    let x678: BytePoly_4 = bigint_nondet_rem!(ctx, x676, x3, 4);
    let x679: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x672, bigint_mul!(x674, x3, 13), 13), x644, 13),
                    x657,
                    13
                ),
                x3,
                13
            ),
            x3,
            13
        ),
        x675,
        13
    );
    eqz(ctx, &x679, 73156, 4)?;
    let x680: BytePoly_13 = bigint_sub!(
        bigint_add!(bigint_mul!(x677, x3, 13), x678, 13),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x669, bigint_sub!(x644, x675, 4), 8), x646, 8),
                    x3,
                    8
                ),
                x3,
                8
            ),
            x16,
            8
        ),
        13
    );
    eqz(ctx, &x680, 73156, 4)?;
    let x681: BytePoly_5 = bigint_add!(bigint_mul!(x675, x661, 5), bigint_mul!(x644, x663, 5), 5);
    let x682: BytePoly_5 = bigint_add!(bigint_mul!(x678, x661, 5), bigint_mul!(x646, x663, 5), 5);
    let x683: BytePoly_6 = bigint_nondet_quot!(ctx, x681, x3, 6);
    let x684: BytePoly_4 = bigint_nondet_rem!(ctx, x681, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x683, x3, 10), x684, 10), x681, 10),
        48771,
        4,
    )?;
    let x685: BytePoly_6 = bigint_nondet_quot!(ctx, x682, x3, 6);
    let x686: BytePoly_4 = bigint_nondet_rem!(ctx, x682, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x685, x3, 10), x686, 10), x682, 10),
        48771,
        4,
    )?;
    let x687: BytePoly_8 = bigint_mul!(x657, x657, 8);
    let x688: BytePoly_8 = bigint_add!(bigint_add!(bigint_add!(x687, x687, 8), x687, 8), x2, 8);
    let x689: BytePoly_8 = bigint_add!(x48, x688, 8);
    let x690: BytePoly_4 = bigint_nondet_inv!(ctx, bigint_add!(x660, x660, 4), x3, 4);
    let x691: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x688, x690, 12), x3, 4);
    let x692: BytePoly_8 = bigint_mul!(x660, x691, 8);
    let x693: BytePoly_8 = bigint_add!(x692, x692, 8);
    let x694: BytePoly_9 = bigint_nondet_quot!(ctx, bigint_sub!(x689, x693, 8), x3, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x694, x3, 13), x693, 13), x689, 13),
        73156,
        4,
    )?;
    let x695: BytePoly_8 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x691, x691, 8), x3, 8), x3, 8),
            x657,
            8
        ),
        x657,
        8
    );
    let x696: BytePoly_9 = bigint_nondet_quot!(ctx, x695, x3, 9);
    let x697: BytePoly_4 = bigint_nondet_rem!(ctx, x695, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x696, x3, 13), x697, 13), x695, 13),
        73156,
        4,
    )?;
    let x698: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x691, x697, 8), 8), x3, 8),
            x660,
            8
        ),
        bigint_mul!(x691, x657, 8),
        8
    );
    let x699: BytePoly_9 = bigint_nondet_quot!(ctx, x698, x3, 9);
    let x700: BytePoly_4 = bigint_nondet_rem!(ctx, x698, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x699, x3, 13), x700, 13), x698, 13),
        73156,
        4,
    )?;
    let x701: BytePoly_1 = bigint_nondet_rem!(ctx, x662, x4, 1);
    let x702: BytePoly_4 = bigint_nondet_quot!(ctx, x662, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x702, x4, 5), x701, 5), x662, 5),
        32515,
        2,
    )?;
    let x703: BytePoly_1 = bigint_sub!(x5, x701, 1);
    eqz(ctx, &bigint_mul!(x701, x703, 2), 8131, 2)?;
    let x704: BytePoly_4 = bigint_add!(bigint_sub!(x700, x686, 4), x3, 4);
    let x705: BytePoly_4 = bigint_add!(bigint_sub!(x697, x684, 4), x3, 4);
    let x706: BytePoly_4 = bigint_nondet_inv!(ctx, x705, x3, 4);
    let x707: BytePoly_8 = bigint_mul!(x705, x706, 8);
    let x708: BytePoly_9 = bigint_nondet_quot!(ctx, x707, x3, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x707, bigint_mul!(x708, x3, 13), 13), x0, 13),
        73156,
        4,
    )?;
    let x709: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x704, x706, 8), x3, 4);
    let x710: BytePoly_8 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x709, x705, 8), x704, 8), x3, 8),
        x3,
        8
    );
    let x711: BytePoly_9 = bigint_nondet_quot!(ctx, x710, x3, 9);
    eqz(
        ctx,
        &bigint_sub!(x710, bigint_mul!(x711, x3, 13), 13),
        73156,
        4,
    )?;
    let x712: BytePoly_8 = bigint_mul!(x709, x709, 8);
    let x713: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x712, x684, 8), x3, 8), x697, 8),
        x3,
        8
    );
    let x714: BytePoly_9 = bigint_nondet_quot!(ctx, x713, x3, 9);
    let x715: BytePoly_4 = bigint_nondet_rem!(ctx, x713, x3, 4);
    let x716: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x709, x715, 8),
                        bigint_add!(bigint_sub!(x686, bigint_mul!(x709, x684, 8), 8), x3, 8),
                        8
                    ),
                    8
                ),
                x3,
                8
            ),
            x3,
            8
        ),
        x16,
        8
    );
    let x717: BytePoly_9 = bigint_nondet_quot!(ctx, x716, x3, 9);
    let x718: BytePoly_4 = bigint_nondet_rem!(ctx, x716, x3, 4);
    let x719: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x712, bigint_mul!(x714, x3, 13), 13), x684, 13),
                    x697,
                    13
                ),
                x3,
                13
            ),
            x3,
            13
        ),
        x715,
        13
    );
    eqz(ctx, &x719, 73156, 4)?;
    let x720: BytePoly_13 = bigint_sub!(
        bigint_add!(bigint_mul!(x717, x3, 13), x718, 13),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x709, bigint_sub!(x684, x715, 4), 8), x686, 8),
                    x3,
                    8
                ),
                x3,
                8
            ),
            x16,
            8
        ),
        13
    );
    eqz(ctx, &x720, 73156, 4)?;
    let x721: BytePoly_5 = bigint_add!(bigint_mul!(x715, x701, 5), bigint_mul!(x684, x703, 5), 5);
    let x722: BytePoly_5 = bigint_add!(bigint_mul!(x718, x701, 5), bigint_mul!(x686, x703, 5), 5);
    let x723: BytePoly_6 = bigint_nondet_quot!(ctx, x721, x3, 6);
    let x724: BytePoly_4 = bigint_nondet_rem!(ctx, x721, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x723, x3, 10), x724, 10), x721, 10),
        48771,
        4,
    )?;
    let x725: BytePoly_6 = bigint_nondet_quot!(ctx, x722, x3, 6);
    let x726: BytePoly_4 = bigint_nondet_rem!(ctx, x722, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x725, x3, 10), x726, 10), x722, 10),
        48771,
        4,
    )?;
    let x727: BytePoly_8 = bigint_mul!(x697, x697, 8);
    let x728: BytePoly_8 = bigint_add!(bigint_add!(bigint_add!(x727, x727, 8), x727, 8), x2, 8);
    let x729: BytePoly_8 = bigint_add!(x48, x728, 8);
    let x730: BytePoly_4 = bigint_nondet_inv!(ctx, bigint_add!(x700, x700, 4), x3, 4);
    let x731: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x728, x730, 12), x3, 4);
    let x732: BytePoly_8 = bigint_mul!(x700, x731, 8);
    let x733: BytePoly_8 = bigint_add!(x732, x732, 8);
    let x734: BytePoly_9 = bigint_nondet_quot!(ctx, bigint_sub!(x729, x733, 8), x3, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x734, x3, 13), x733, 13), x729, 13),
        73156,
        4,
    )?;
    let x735: BytePoly_8 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x731, x731, 8), x3, 8), x3, 8),
            x697,
            8
        ),
        x697,
        8
    );
    let x736: BytePoly_9 = bigint_nondet_quot!(ctx, x735, x3, 9);
    let x737: BytePoly_4 = bigint_nondet_rem!(ctx, x735, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x736, x3, 13), x737, 13), x735, 13),
        73156,
        4,
    )?;
    let x738: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x731, x737, 8), 8), x3, 8),
            x700,
            8
        ),
        bigint_mul!(x731, x697, 8),
        8
    );
    let x739: BytePoly_9 = bigint_nondet_quot!(ctx, x738, x3, 9);
    let x740: BytePoly_4 = bigint_nondet_rem!(ctx, x738, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x739, x3, 13), x740, 13), x738, 13),
        73156,
        4,
    )?;
    let x741: BytePoly_1 = bigint_nondet_rem!(ctx, x702, x4, 1);
    let x742: BytePoly_4 = bigint_nondet_quot!(ctx, x702, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x742, x4, 5), x741, 5), x702, 5),
        32515,
        2,
    )?;
    let x743: BytePoly_1 = bigint_sub!(x5, x741, 1);
    eqz(ctx, &bigint_mul!(x741, x743, 2), 8131, 2)?;
    let x744: BytePoly_4 = bigint_add!(bigint_sub!(x740, x726, 4), x3, 4);
    let x745: BytePoly_4 = bigint_add!(bigint_sub!(x737, x724, 4), x3, 4);
    let x746: BytePoly_4 = bigint_nondet_inv!(ctx, x745, x3, 4);
    let x747: BytePoly_8 = bigint_mul!(x745, x746, 8);
    let x748: BytePoly_9 = bigint_nondet_quot!(ctx, x747, x3, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x747, bigint_mul!(x748, x3, 13), 13), x0, 13),
        73156,
        4,
    )?;
    let x749: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x744, x746, 8), x3, 4);
    let x750: BytePoly_8 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x749, x745, 8), x744, 8), x3, 8),
        x3,
        8
    );
    let x751: BytePoly_9 = bigint_nondet_quot!(ctx, x750, x3, 9);
    eqz(
        ctx,
        &bigint_sub!(x750, bigint_mul!(x751, x3, 13), 13),
        73156,
        4,
    )?;
    let x752: BytePoly_8 = bigint_mul!(x749, x749, 8);
    let x753: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x752, x724, 8), x3, 8), x737, 8),
        x3,
        8
    );
    let x754: BytePoly_9 = bigint_nondet_quot!(ctx, x753, x3, 9);
    let x755: BytePoly_4 = bigint_nondet_rem!(ctx, x753, x3, 4);
    let x756: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x749, x755, 8),
                        bigint_add!(bigint_sub!(x726, bigint_mul!(x749, x724, 8), 8), x3, 8),
                        8
                    ),
                    8
                ),
                x3,
                8
            ),
            x3,
            8
        ),
        x16,
        8
    );
    let x757: BytePoly_9 = bigint_nondet_quot!(ctx, x756, x3, 9);
    let x758: BytePoly_4 = bigint_nondet_rem!(ctx, x756, x3, 4);
    let x759: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x752, bigint_mul!(x754, x3, 13), 13), x724, 13),
                    x737,
                    13
                ),
                x3,
                13
            ),
            x3,
            13
        ),
        x755,
        13
    );
    eqz(ctx, &x759, 73156, 4)?;
    let x760: BytePoly_13 = bigint_sub!(
        bigint_add!(bigint_mul!(x757, x3, 13), x758, 13),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x749, bigint_sub!(x724, x755, 4), 8), x726, 8),
                    x3,
                    8
                ),
                x3,
                8
            ),
            x16,
            8
        ),
        13
    );
    eqz(ctx, &x760, 73156, 4)?;
    let x761: BytePoly_5 = bigint_add!(bigint_mul!(x755, x741, 5), bigint_mul!(x724, x743, 5), 5);
    let x762: BytePoly_5 = bigint_add!(bigint_mul!(x758, x741, 5), bigint_mul!(x726, x743, 5), 5);
    let x763: BytePoly_6 = bigint_nondet_quot!(ctx, x761, x3, 6);
    let x764: BytePoly_4 = bigint_nondet_rem!(ctx, x761, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x763, x3, 10), x764, 10), x761, 10),
        48771,
        4,
    )?;
    let x765: BytePoly_6 = bigint_nondet_quot!(ctx, x762, x3, 6);
    let x766: BytePoly_4 = bigint_nondet_rem!(ctx, x762, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x765, x3, 10), x766, 10), x762, 10),
        48771,
        4,
    )?;
    let x767: BytePoly_8 = bigint_mul!(x737, x737, 8);
    let x768: BytePoly_8 = bigint_add!(bigint_add!(bigint_add!(x767, x767, 8), x767, 8), x2, 8);
    let x769: BytePoly_8 = bigint_add!(x48, x768, 8);
    let x770: BytePoly_4 = bigint_nondet_inv!(ctx, bigint_add!(x740, x740, 4), x3, 4);
    let x771: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x768, x770, 12), x3, 4);
    let x772: BytePoly_8 = bigint_mul!(x740, x771, 8);
    let x773: BytePoly_8 = bigint_add!(x772, x772, 8);
    let x774: BytePoly_9 = bigint_nondet_quot!(ctx, bigint_sub!(x769, x773, 8), x3, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x774, x3, 13), x773, 13), x769, 13),
        73156,
        4,
    )?;
    let x775: BytePoly_8 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x771, x771, 8), x3, 8), x3, 8),
            x737,
            8
        ),
        x737,
        8
    );
    let x776: BytePoly_9 = bigint_nondet_quot!(ctx, x775, x3, 9);
    let x777: BytePoly_4 = bigint_nondet_rem!(ctx, x775, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x776, x3, 13), x777, 13), x775, 13),
        73156,
        4,
    )?;
    let x778: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x771, x777, 8), 8), x3, 8),
            x740,
            8
        ),
        bigint_mul!(x771, x737, 8),
        8
    );
    let x779: BytePoly_9 = bigint_nondet_quot!(ctx, x778, x3, 9);
    let x780: BytePoly_4 = bigint_nondet_rem!(ctx, x778, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x779, x3, 13), x780, 13), x778, 13),
        73156,
        4,
    )?;
    let x781: BytePoly_1 = bigint_nondet_rem!(ctx, x742, x4, 1);
    let x782: BytePoly_4 = bigint_nondet_quot!(ctx, x742, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x782, x4, 5), x781, 5), x742, 5),
        32515,
        2,
    )?;
    let x783: BytePoly_1 = bigint_sub!(x5, x781, 1);
    eqz(ctx, &bigint_mul!(x781, x783, 2), 8131, 2)?;
    let x784: BytePoly_4 = bigint_add!(bigint_sub!(x780, x766, 4), x3, 4);
    let x785: BytePoly_4 = bigint_add!(bigint_sub!(x777, x764, 4), x3, 4);
    let x786: BytePoly_4 = bigint_nondet_inv!(ctx, x785, x3, 4);
    let x787: BytePoly_8 = bigint_mul!(x785, x786, 8);
    let x788: BytePoly_9 = bigint_nondet_quot!(ctx, x787, x3, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x787, bigint_mul!(x788, x3, 13), 13), x0, 13),
        73156,
        4,
    )?;
    let x789: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x784, x786, 8), x3, 4);
    let x790: BytePoly_8 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x789, x785, 8), x784, 8), x3, 8),
        x3,
        8
    );
    let x791: BytePoly_9 = bigint_nondet_quot!(ctx, x790, x3, 9);
    eqz(
        ctx,
        &bigint_sub!(x790, bigint_mul!(x791, x3, 13), 13),
        73156,
        4,
    )?;
    let x792: BytePoly_8 = bigint_mul!(x789, x789, 8);
    let x793: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x792, x764, 8), x3, 8), x777, 8),
        x3,
        8
    );
    let x794: BytePoly_9 = bigint_nondet_quot!(ctx, x793, x3, 9);
    let x795: BytePoly_4 = bigint_nondet_rem!(ctx, x793, x3, 4);
    let x796: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x789, x795, 8),
                        bigint_add!(bigint_sub!(x766, bigint_mul!(x789, x764, 8), 8), x3, 8),
                        8
                    ),
                    8
                ),
                x3,
                8
            ),
            x3,
            8
        ),
        x16,
        8
    );
    let x797: BytePoly_9 = bigint_nondet_quot!(ctx, x796, x3, 9);
    let x798: BytePoly_4 = bigint_nondet_rem!(ctx, x796, x3, 4);
    let x799: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x792, bigint_mul!(x794, x3, 13), 13), x764, 13),
                    x777,
                    13
                ),
                x3,
                13
            ),
            x3,
            13
        ),
        x795,
        13
    );
    eqz(ctx, &x799, 73156, 4)?;
    let x800: BytePoly_13 = bigint_sub!(
        bigint_add!(bigint_mul!(x797, x3, 13), x798, 13),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x789, bigint_sub!(x764, x795, 4), 8), x766, 8),
                    x3,
                    8
                ),
                x3,
                8
            ),
            x16,
            8
        ),
        13
    );
    eqz(ctx, &x800, 73156, 4)?;
    let x801: BytePoly_5 = bigint_add!(bigint_mul!(x795, x781, 5), bigint_mul!(x764, x783, 5), 5);
    let x802: BytePoly_5 = bigint_add!(bigint_mul!(x798, x781, 5), bigint_mul!(x766, x783, 5), 5);
    let x803: BytePoly_6 = bigint_nondet_quot!(ctx, x801, x3, 6);
    let x804: BytePoly_4 = bigint_nondet_rem!(ctx, x801, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x803, x3, 10), x804, 10), x801, 10),
        48771,
        4,
    )?;
    let x805: BytePoly_6 = bigint_nondet_quot!(ctx, x802, x3, 6);
    let x806: BytePoly_4 = bigint_nondet_rem!(ctx, x802, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x805, x3, 10), x806, 10), x802, 10),
        48771,
        4,
    )?;
    let x807: BytePoly_8 = bigint_mul!(x777, x777, 8);
    let x808: BytePoly_8 = bigint_add!(bigint_add!(bigint_add!(x807, x807, 8), x807, 8), x2, 8);
    let x809: BytePoly_8 = bigint_add!(x48, x808, 8);
    let x810: BytePoly_4 = bigint_nondet_inv!(ctx, bigint_add!(x780, x780, 4), x3, 4);
    let x811: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x808, x810, 12), x3, 4);
    let x812: BytePoly_8 = bigint_mul!(x780, x811, 8);
    let x813: BytePoly_8 = bigint_add!(x812, x812, 8);
    let x814: BytePoly_9 = bigint_nondet_quot!(ctx, bigint_sub!(x809, x813, 8), x3, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x814, x3, 13), x813, 13), x809, 13),
        73156,
        4,
    )?;
    let x815: BytePoly_8 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x811, x811, 8), x3, 8), x3, 8),
            x777,
            8
        ),
        x777,
        8
    );
    let x816: BytePoly_9 = bigint_nondet_quot!(ctx, x815, x3, 9);
    let x817: BytePoly_4 = bigint_nondet_rem!(ctx, x815, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x816, x3, 13), x817, 13), x815, 13),
        73156,
        4,
    )?;
    let x818: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x811, x817, 8), 8), x3, 8),
            x780,
            8
        ),
        bigint_mul!(x811, x777, 8),
        8
    );
    let x819: BytePoly_9 = bigint_nondet_quot!(ctx, x818, x3, 9);
    let x820: BytePoly_4 = bigint_nondet_rem!(ctx, x818, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x819, x3, 13), x820, 13), x818, 13),
        73156,
        4,
    )?;
    let x821: BytePoly_1 = bigint_nondet_rem!(ctx, x782, x4, 1);
    let x822: BytePoly_4 = bigint_nondet_quot!(ctx, x782, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x822, x4, 5), x821, 5), x782, 5),
        32515,
        2,
    )?;
    let x823: BytePoly_1 = bigint_sub!(x5, x821, 1);
    eqz(ctx, &bigint_mul!(x821, x823, 2), 8131, 2)?;
    let x824: BytePoly_4 = bigint_add!(bigint_sub!(x820, x806, 4), x3, 4);
    let x825: BytePoly_4 = bigint_add!(bigint_sub!(x817, x804, 4), x3, 4);
    let x826: BytePoly_4 = bigint_nondet_inv!(ctx, x825, x3, 4);
    let x827: BytePoly_8 = bigint_mul!(x825, x826, 8);
    let x828: BytePoly_9 = bigint_nondet_quot!(ctx, x827, x3, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x827, bigint_mul!(x828, x3, 13), 13), x0, 13),
        73156,
        4,
    )?;
    let x829: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x824, x826, 8), x3, 4);
    let x830: BytePoly_8 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x829, x825, 8), x824, 8), x3, 8),
        x3,
        8
    );
    let x831: BytePoly_9 = bigint_nondet_quot!(ctx, x830, x3, 9);
    eqz(
        ctx,
        &bigint_sub!(x830, bigint_mul!(x831, x3, 13), 13),
        73156,
        4,
    )?;
    let x832: BytePoly_8 = bigint_mul!(x829, x829, 8);
    let x833: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x832, x804, 8), x3, 8), x817, 8),
        x3,
        8
    );
    let x834: BytePoly_9 = bigint_nondet_quot!(ctx, x833, x3, 9);
    let x835: BytePoly_4 = bigint_nondet_rem!(ctx, x833, x3, 4);
    let x836: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x829, x835, 8),
                        bigint_add!(bigint_sub!(x806, bigint_mul!(x829, x804, 8), 8), x3, 8),
                        8
                    ),
                    8
                ),
                x3,
                8
            ),
            x3,
            8
        ),
        x16,
        8
    );
    let x837: BytePoly_9 = bigint_nondet_quot!(ctx, x836, x3, 9);
    let x838: BytePoly_4 = bigint_nondet_rem!(ctx, x836, x3, 4);
    let x839: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x832, bigint_mul!(x834, x3, 13), 13), x804, 13),
                    x817,
                    13
                ),
                x3,
                13
            ),
            x3,
            13
        ),
        x835,
        13
    );
    eqz(ctx, &x839, 73156, 4)?;
    let x840: BytePoly_13 = bigint_sub!(
        bigint_add!(bigint_mul!(x837, x3, 13), x838, 13),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x829, bigint_sub!(x804, x835, 4), 8), x806, 8),
                    x3,
                    8
                ),
                x3,
                8
            ),
            x16,
            8
        ),
        13
    );
    eqz(ctx, &x840, 73156, 4)?;
    let x841: BytePoly_5 = bigint_add!(bigint_mul!(x835, x821, 5), bigint_mul!(x804, x823, 5), 5);
    let x842: BytePoly_5 = bigint_add!(bigint_mul!(x838, x821, 5), bigint_mul!(x806, x823, 5), 5);
    let x843: BytePoly_6 = bigint_nondet_quot!(ctx, x841, x3, 6);
    let x844: BytePoly_4 = bigint_nondet_rem!(ctx, x841, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x843, x3, 10), x844, 10), x841, 10),
        48771,
        4,
    )?;
    let x845: BytePoly_6 = bigint_nondet_quot!(ctx, x842, x3, 6);
    let x846: BytePoly_4 = bigint_nondet_rem!(ctx, x842, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x845, x3, 10), x846, 10), x842, 10),
        48771,
        4,
    )?;
    let x847: BytePoly_8 = bigint_mul!(x817, x817, 8);
    let x848: BytePoly_8 = bigint_add!(bigint_add!(bigint_add!(x847, x847, 8), x847, 8), x2, 8);
    let x849: BytePoly_8 = bigint_add!(x48, x848, 8);
    let x850: BytePoly_4 = bigint_nondet_inv!(ctx, bigint_add!(x820, x820, 4), x3, 4);
    let x851: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x848, x850, 12), x3, 4);
    let x852: BytePoly_8 = bigint_mul!(x820, x851, 8);
    let x853: BytePoly_8 = bigint_add!(x852, x852, 8);
    let x854: BytePoly_9 = bigint_nondet_quot!(ctx, bigint_sub!(x849, x853, 8), x3, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x854, x3, 13), x853, 13), x849, 13),
        73156,
        4,
    )?;
    let x855: BytePoly_8 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x851, x851, 8), x3, 8), x3, 8),
            x817,
            8
        ),
        x817,
        8
    );
    let x856: BytePoly_9 = bigint_nondet_quot!(ctx, x855, x3, 9);
    let x857: BytePoly_4 = bigint_nondet_rem!(ctx, x855, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x856, x3, 13), x857, 13), x855, 13),
        73156,
        4,
    )?;
    let x858: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x851, x857, 8), 8), x3, 8),
            x820,
            8
        ),
        bigint_mul!(x851, x817, 8),
        8
    );
    let x859: BytePoly_9 = bigint_nondet_quot!(ctx, x858, x3, 9);
    let x860: BytePoly_4 = bigint_nondet_rem!(ctx, x858, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x859, x3, 13), x860, 13), x858, 13),
        73156,
        4,
    )?;
    let x861: BytePoly_1 = bigint_nondet_rem!(ctx, x822, x4, 1);
    let x862: BytePoly_4 = bigint_nondet_quot!(ctx, x822, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x862, x4, 5), x861, 5), x822, 5),
        32515,
        2,
    )?;
    let x863: BytePoly_1 = bigint_sub!(x5, x861, 1);
    eqz(ctx, &bigint_mul!(x861, x863, 2), 8131, 2)?;
    let x864: BytePoly_4 = bigint_add!(bigint_sub!(x860, x846, 4), x3, 4);
    let x865: BytePoly_4 = bigint_add!(bigint_sub!(x857, x844, 4), x3, 4);
    let x866: BytePoly_4 = bigint_nondet_inv!(ctx, x865, x3, 4);
    let x867: BytePoly_8 = bigint_mul!(x865, x866, 8);
    let x868: BytePoly_9 = bigint_nondet_quot!(ctx, x867, x3, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x867, bigint_mul!(x868, x3, 13), 13), x0, 13),
        73156,
        4,
    )?;
    let x869: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x864, x866, 8), x3, 4);
    let x870: BytePoly_8 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x869, x865, 8), x864, 8), x3, 8),
        x3,
        8
    );
    let x871: BytePoly_9 = bigint_nondet_quot!(ctx, x870, x3, 9);
    eqz(
        ctx,
        &bigint_sub!(x870, bigint_mul!(x871, x3, 13), 13),
        73156,
        4,
    )?;
    let x872: BytePoly_8 = bigint_mul!(x869, x869, 8);
    let x873: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x872, x844, 8), x3, 8), x857, 8),
        x3,
        8
    );
    let x874: BytePoly_9 = bigint_nondet_quot!(ctx, x873, x3, 9);
    let x875: BytePoly_4 = bigint_nondet_rem!(ctx, x873, x3, 4);
    let x876: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x869, x875, 8),
                        bigint_add!(bigint_sub!(x846, bigint_mul!(x869, x844, 8), 8), x3, 8),
                        8
                    ),
                    8
                ),
                x3,
                8
            ),
            x3,
            8
        ),
        x16,
        8
    );
    let x877: BytePoly_9 = bigint_nondet_quot!(ctx, x876, x3, 9);
    let x878: BytePoly_4 = bigint_nondet_rem!(ctx, x876, x3, 4);
    let x879: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x872, bigint_mul!(x874, x3, 13), 13), x844, 13),
                    x857,
                    13
                ),
                x3,
                13
            ),
            x3,
            13
        ),
        x875,
        13
    );
    eqz(ctx, &x879, 73156, 4)?;
    let x880: BytePoly_13 = bigint_sub!(
        bigint_add!(bigint_mul!(x877, x3, 13), x878, 13),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x869, bigint_sub!(x844, x875, 4), 8), x846, 8),
                    x3,
                    8
                ),
                x3,
                8
            ),
            x16,
            8
        ),
        13
    );
    eqz(ctx, &x880, 73156, 4)?;
    let x881: BytePoly_5 = bigint_add!(bigint_mul!(x875, x861, 5), bigint_mul!(x844, x863, 5), 5);
    let x882: BytePoly_5 = bigint_add!(bigint_mul!(x878, x861, 5), bigint_mul!(x846, x863, 5), 5);
    let x883: BytePoly_6 = bigint_nondet_quot!(ctx, x881, x3, 6);
    let x884: BytePoly_4 = bigint_nondet_rem!(ctx, x881, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x883, x3, 10), x884, 10), x881, 10),
        48771,
        4,
    )?;
    let x885: BytePoly_6 = bigint_nondet_quot!(ctx, x882, x3, 6);
    let x886: BytePoly_4 = bigint_nondet_rem!(ctx, x882, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x885, x3, 10), x886, 10), x882, 10),
        48771,
        4,
    )?;
    let x887: BytePoly_8 = bigint_mul!(x857, x857, 8);
    let x888: BytePoly_8 = bigint_add!(bigint_add!(bigint_add!(x887, x887, 8), x887, 8), x2, 8);
    let x889: BytePoly_8 = bigint_add!(x48, x888, 8);
    let x890: BytePoly_4 = bigint_nondet_inv!(ctx, bigint_add!(x860, x860, 4), x3, 4);
    let x891: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x888, x890, 12), x3, 4);
    let x892: BytePoly_8 = bigint_mul!(x860, x891, 8);
    let x893: BytePoly_8 = bigint_add!(x892, x892, 8);
    let x894: BytePoly_9 = bigint_nondet_quot!(ctx, bigint_sub!(x889, x893, 8), x3, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x894, x3, 13), x893, 13), x889, 13),
        73156,
        4,
    )?;
    let x895: BytePoly_8 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x891, x891, 8), x3, 8), x3, 8),
            x857,
            8
        ),
        x857,
        8
    );
    let x896: BytePoly_9 = bigint_nondet_quot!(ctx, x895, x3, 9);
    let x897: BytePoly_4 = bigint_nondet_rem!(ctx, x895, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x896, x3, 13), x897, 13), x895, 13),
        73156,
        4,
    )?;
    let x898: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x891, x897, 8), 8), x3, 8),
            x860,
            8
        ),
        bigint_mul!(x891, x857, 8),
        8
    );
    let x899: BytePoly_9 = bigint_nondet_quot!(ctx, x898, x3, 9);
    let x900: BytePoly_4 = bigint_nondet_rem!(ctx, x898, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x899, x3, 13), x900, 13), x898, 13),
        73156,
        4,
    )?;
    let x901: BytePoly_1 = bigint_nondet_rem!(ctx, x862, x4, 1);
    let x902: BytePoly_4 = bigint_nondet_quot!(ctx, x862, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x902, x4, 5), x901, 5), x862, 5),
        32515,
        2,
    )?;
    let x903: BytePoly_1 = bigint_sub!(x5, x901, 1);
    eqz(ctx, &bigint_mul!(x901, x903, 2), 8131, 2)?;
    let x904: BytePoly_4 = bigint_add!(bigint_sub!(x900, x886, 4), x3, 4);
    let x905: BytePoly_4 = bigint_add!(bigint_sub!(x897, x884, 4), x3, 4);
    let x906: BytePoly_4 = bigint_nondet_inv!(ctx, x905, x3, 4);
    let x907: BytePoly_8 = bigint_mul!(x905, x906, 8);
    let x908: BytePoly_9 = bigint_nondet_quot!(ctx, x907, x3, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x907, bigint_mul!(x908, x3, 13), 13), x0, 13),
        73156,
        4,
    )?;
    let x909: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x904, x906, 8), x3, 4);
    let x910: BytePoly_8 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x909, x905, 8), x904, 8), x3, 8),
        x3,
        8
    );
    let x911: BytePoly_9 = bigint_nondet_quot!(ctx, x910, x3, 9);
    eqz(
        ctx,
        &bigint_sub!(x910, bigint_mul!(x911, x3, 13), 13),
        73156,
        4,
    )?;
    let x912: BytePoly_8 = bigint_mul!(x909, x909, 8);
    let x913: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x912, x884, 8), x3, 8), x897, 8),
        x3,
        8
    );
    let x914: BytePoly_9 = bigint_nondet_quot!(ctx, x913, x3, 9);
    let x915: BytePoly_4 = bigint_nondet_rem!(ctx, x913, x3, 4);
    let x916: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x909, x915, 8),
                        bigint_add!(bigint_sub!(x886, bigint_mul!(x909, x884, 8), 8), x3, 8),
                        8
                    ),
                    8
                ),
                x3,
                8
            ),
            x3,
            8
        ),
        x16,
        8
    );
    let x917: BytePoly_9 = bigint_nondet_quot!(ctx, x916, x3, 9);
    let x918: BytePoly_4 = bigint_nondet_rem!(ctx, x916, x3, 4);
    let x919: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x912, bigint_mul!(x914, x3, 13), 13), x884, 13),
                    x897,
                    13
                ),
                x3,
                13
            ),
            x3,
            13
        ),
        x915,
        13
    );
    eqz(ctx, &x919, 73156, 4)?;
    let x920: BytePoly_13 = bigint_sub!(
        bigint_add!(bigint_mul!(x917, x3, 13), x918, 13),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x909, bigint_sub!(x884, x915, 4), 8), x886, 8),
                    x3,
                    8
                ),
                x3,
                8
            ),
            x16,
            8
        ),
        13
    );
    eqz(ctx, &x920, 73156, 4)?;
    let x921: BytePoly_5 = bigint_add!(bigint_mul!(x915, x901, 5), bigint_mul!(x884, x903, 5), 5);
    let x922: BytePoly_5 = bigint_add!(bigint_mul!(x918, x901, 5), bigint_mul!(x886, x903, 5), 5);
    let x923: BytePoly_6 = bigint_nondet_quot!(ctx, x921, x3, 6);
    let x924: BytePoly_4 = bigint_nondet_rem!(ctx, x921, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x923, x3, 10), x924, 10), x921, 10),
        48771,
        4,
    )?;
    let x925: BytePoly_6 = bigint_nondet_quot!(ctx, x922, x3, 6);
    let x926: BytePoly_4 = bigint_nondet_rem!(ctx, x922, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x925, x3, 10), x926, 10), x922, 10),
        48771,
        4,
    )?;
    let x927: BytePoly_8 = bigint_mul!(x897, x897, 8);
    let x928: BytePoly_8 = bigint_add!(bigint_add!(bigint_add!(x927, x927, 8), x927, 8), x2, 8);
    let x929: BytePoly_8 = bigint_add!(x48, x928, 8);
    let x930: BytePoly_4 = bigint_nondet_inv!(ctx, bigint_add!(x900, x900, 4), x3, 4);
    let x931: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x928, x930, 12), x3, 4);
    let x932: BytePoly_8 = bigint_mul!(x900, x931, 8);
    let x933: BytePoly_8 = bigint_add!(x932, x932, 8);
    let x934: BytePoly_9 = bigint_nondet_quot!(ctx, bigint_sub!(x929, x933, 8), x3, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x934, x3, 13), x933, 13), x929, 13),
        73156,
        4,
    )?;
    let x935: BytePoly_8 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x931, x931, 8), x3, 8), x3, 8),
            x897,
            8
        ),
        x897,
        8
    );
    let x936: BytePoly_9 = bigint_nondet_quot!(ctx, x935, x3, 9);
    let x937: BytePoly_4 = bigint_nondet_rem!(ctx, x935, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x936, x3, 13), x937, 13), x935, 13),
        73156,
        4,
    )?;
    let x938: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x931, x937, 8), 8), x3, 8),
            x900,
            8
        ),
        bigint_mul!(x931, x897, 8),
        8
    );
    let x939: BytePoly_9 = bigint_nondet_quot!(ctx, x938, x3, 9);
    let x940: BytePoly_4 = bigint_nondet_rem!(ctx, x938, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x939, x3, 13), x940, 13), x938, 13),
        73156,
        4,
    )?;
    let x941: BytePoly_1 = bigint_nondet_rem!(ctx, x902, x4, 1);
    let x942: BytePoly_4 = bigint_nondet_quot!(ctx, x902, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x942, x4, 5), x941, 5), x902, 5),
        32515,
        2,
    )?;
    let x943: BytePoly_1 = bigint_sub!(x5, x941, 1);
    eqz(ctx, &bigint_mul!(x941, x943, 2), 8131, 2)?;
    let x944: BytePoly_4 = bigint_add!(bigint_sub!(x940, x926, 4), x3, 4);
    let x945: BytePoly_4 = bigint_add!(bigint_sub!(x937, x924, 4), x3, 4);
    let x946: BytePoly_4 = bigint_nondet_inv!(ctx, x945, x3, 4);
    let x947: BytePoly_8 = bigint_mul!(x945, x946, 8);
    let x948: BytePoly_9 = bigint_nondet_quot!(ctx, x947, x3, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x947, bigint_mul!(x948, x3, 13), 13), x0, 13),
        73156,
        4,
    )?;
    let x949: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x944, x946, 8), x3, 4);
    let x950: BytePoly_8 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x949, x945, 8), x944, 8), x3, 8),
        x3,
        8
    );
    let x951: BytePoly_9 = bigint_nondet_quot!(ctx, x950, x3, 9);
    eqz(
        ctx,
        &bigint_sub!(x950, bigint_mul!(x951, x3, 13), 13),
        73156,
        4,
    )?;
    let x952: BytePoly_8 = bigint_mul!(x949, x949, 8);
    let x953: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x952, x924, 8), x3, 8), x937, 8),
        x3,
        8
    );
    let x954: BytePoly_9 = bigint_nondet_quot!(ctx, x953, x3, 9);
    let x955: BytePoly_4 = bigint_nondet_rem!(ctx, x953, x3, 4);
    let x956: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x949, x955, 8),
                        bigint_add!(bigint_sub!(x926, bigint_mul!(x949, x924, 8), 8), x3, 8),
                        8
                    ),
                    8
                ),
                x3,
                8
            ),
            x3,
            8
        ),
        x16,
        8
    );
    let x957: BytePoly_9 = bigint_nondet_quot!(ctx, x956, x3, 9);
    let x958: BytePoly_4 = bigint_nondet_rem!(ctx, x956, x3, 4);
    let x959: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x952, bigint_mul!(x954, x3, 13), 13), x924, 13),
                    x937,
                    13
                ),
                x3,
                13
            ),
            x3,
            13
        ),
        x955,
        13
    );
    eqz(ctx, &x959, 73156, 4)?;
    let x960: BytePoly_13 = bigint_sub!(
        bigint_add!(bigint_mul!(x957, x3, 13), x958, 13),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x949, bigint_sub!(x924, x955, 4), 8), x926, 8),
                    x3,
                    8
                ),
                x3,
                8
            ),
            x16,
            8
        ),
        13
    );
    eqz(ctx, &x960, 73156, 4)?;
    let x961: BytePoly_5 = bigint_add!(bigint_mul!(x955, x941, 5), bigint_mul!(x924, x943, 5), 5);
    let x962: BytePoly_5 = bigint_add!(bigint_mul!(x958, x941, 5), bigint_mul!(x926, x943, 5), 5);
    let x963: BytePoly_6 = bigint_nondet_quot!(ctx, x961, x3, 6);
    let x964: BytePoly_4 = bigint_nondet_rem!(ctx, x961, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x963, x3, 10), x964, 10), x961, 10),
        48771,
        4,
    )?;
    let x965: BytePoly_6 = bigint_nondet_quot!(ctx, x962, x3, 6);
    let x966: BytePoly_4 = bigint_nondet_rem!(ctx, x962, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x965, x3, 10), x966, 10), x962, 10),
        48771,
        4,
    )?;
    let x967: BytePoly_8 = bigint_mul!(x937, x937, 8);
    let x968: BytePoly_8 = bigint_add!(bigint_add!(bigint_add!(x967, x967, 8), x967, 8), x2, 8);
    let x969: BytePoly_8 = bigint_add!(x48, x968, 8);
    let x970: BytePoly_4 = bigint_nondet_inv!(ctx, bigint_add!(x940, x940, 4), x3, 4);
    let x971: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x968, x970, 12), x3, 4);
    let x972: BytePoly_8 = bigint_mul!(x940, x971, 8);
    let x973: BytePoly_8 = bigint_add!(x972, x972, 8);
    let x974: BytePoly_9 = bigint_nondet_quot!(ctx, bigint_sub!(x969, x973, 8), x3, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x974, x3, 13), x973, 13), x969, 13),
        73156,
        4,
    )?;
    let x975: BytePoly_8 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x971, x971, 8), x3, 8), x3, 8),
            x937,
            8
        ),
        x937,
        8
    );
    let x976: BytePoly_9 = bigint_nondet_quot!(ctx, x975, x3, 9);
    let x977: BytePoly_4 = bigint_nondet_rem!(ctx, x975, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x976, x3, 13), x977, 13), x975, 13),
        73156,
        4,
    )?;
    let x978: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x971, x977, 8), 8), x3, 8),
            x940,
            8
        ),
        bigint_mul!(x971, x937, 8),
        8
    );
    let x979: BytePoly_9 = bigint_nondet_quot!(ctx, x978, x3, 9);
    let x980: BytePoly_4 = bigint_nondet_rem!(ctx, x978, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x979, x3, 13), x980, 13), x978, 13),
        73156,
        4,
    )?;
    let x981: BytePoly_1 = bigint_nondet_rem!(ctx, x942, x4, 1);
    let x982: BytePoly_4 = bigint_nondet_quot!(ctx, x942, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x982, x4, 5), x981, 5), x942, 5),
        32515,
        2,
    )?;
    let x983: BytePoly_1 = bigint_sub!(x5, x981, 1);
    eqz(ctx, &bigint_mul!(x981, x983, 2), 8131, 2)?;
    let x984: BytePoly_4 = bigint_add!(bigint_sub!(x980, x966, 4), x3, 4);
    let x985: BytePoly_4 = bigint_add!(bigint_sub!(x977, x964, 4), x3, 4);
    let x986: BytePoly_4 = bigint_nondet_inv!(ctx, x985, x3, 4);
    let x987: BytePoly_8 = bigint_mul!(x985, x986, 8);
    let x988: BytePoly_9 = bigint_nondet_quot!(ctx, x987, x3, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x987, bigint_mul!(x988, x3, 13), 13), x0, 13),
        73156,
        4,
    )?;
    let x989: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x984, x986, 8), x3, 4);
    let x990: BytePoly_8 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x989, x985, 8), x984, 8), x3, 8),
        x3,
        8
    );
    let x991: BytePoly_9 = bigint_nondet_quot!(ctx, x990, x3, 9);
    eqz(
        ctx,
        &bigint_sub!(x990, bigint_mul!(x991, x3, 13), 13),
        73156,
        4,
    )?;
    let x992: BytePoly_8 = bigint_mul!(x989, x989, 8);
    let x993: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x992, x964, 8), x3, 8), x977, 8),
        x3,
        8
    );
    let x994: BytePoly_9 = bigint_nondet_quot!(ctx, x993, x3, 9);
    let x995: BytePoly_4 = bigint_nondet_rem!(ctx, x993, x3, 4);
    let x996: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x989, x995, 8),
                        bigint_add!(bigint_sub!(x966, bigint_mul!(x989, x964, 8), 8), x3, 8),
                        8
                    ),
                    8
                ),
                x3,
                8
            ),
            x3,
            8
        ),
        x16,
        8
    );
    let x997: BytePoly_9 = bigint_nondet_quot!(ctx, x996, x3, 9);
    let x998: BytePoly_4 = bigint_nondet_rem!(ctx, x996, x3, 4);
    let x999: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x992, bigint_mul!(x994, x3, 13), 13), x964, 13),
                    x977,
                    13
                ),
                x3,
                13
            ),
            x3,
            13
        ),
        x995,
        13
    );
    eqz(ctx, &x999, 73156, 4)?;
    let x1000: BytePoly_13 = bigint_sub!(
        bigint_add!(bigint_mul!(x997, x3, 13), x998, 13),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x989, bigint_sub!(x964, x995, 4), 8), x966, 8),
                    x3,
                    8
                ),
                x3,
                8
            ),
            x16,
            8
        ),
        13
    );
    eqz(ctx, &x1000, 73156, 4)?;
    let x1001: BytePoly_5 = bigint_add!(bigint_mul!(x995, x981, 5), bigint_mul!(x964, x983, 5), 5);
    let x1002: BytePoly_5 = bigint_add!(bigint_mul!(x998, x981, 5), bigint_mul!(x966, x983, 5), 5);
    let x1003: BytePoly_6 = bigint_nondet_quot!(ctx, x1001, x3, 6);
    let x1004: BytePoly_4 = bigint_nondet_rem!(ctx, x1001, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1003, x3, 10), x1004, 10),
            x1001,
            10
        ),
        48771,
        4,
    )?;
    let x1005: BytePoly_6 = bigint_nondet_quot!(ctx, x1002, x3, 6);
    let x1006: BytePoly_4 = bigint_nondet_rem!(ctx, x1002, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1005, x3, 10), x1006, 10),
            x1002,
            10
        ),
        48771,
        4,
    )?;
    let x1007: BytePoly_8 = bigint_mul!(x977, x977, 8);
    let x1008: BytePoly_8 = bigint_add!(bigint_add!(bigint_add!(x1007, x1007, 8), x1007, 8), x2, 8);
    let x1009: BytePoly_8 = bigint_add!(x48, x1008, 8);
    let x1010: BytePoly_4 = bigint_nondet_inv!(ctx, bigint_add!(x980, x980, 4), x3, 4);
    let x1011: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x1008, x1010, 12), x3, 4);
    let x1012: BytePoly_8 = bigint_mul!(x980, x1011, 8);
    let x1013: BytePoly_8 = bigint_add!(x1012, x1012, 8);
    let x1014: BytePoly_9 = bigint_nondet_quot!(ctx, bigint_sub!(x1009, x1013, 8), x3, 9);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1014, x3, 13), x1013, 13),
            x1009,
            13
        ),
        73156,
        4,
    )?;
    let x1015: BytePoly_8 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1011, x1011, 8), x3, 8), x3, 8),
            x977,
            8
        ),
        x977,
        8
    );
    let x1016: BytePoly_9 = bigint_nondet_quot!(ctx, x1015, x3, 9);
    let x1017: BytePoly_4 = bigint_nondet_rem!(ctx, x1015, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1016, x3, 13), x1017, 13),
            x1015,
            13
        ),
        73156,
        4,
    )?;
    let x1018: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x1011, x1017, 8), 8), x3, 8),
            x980,
            8
        ),
        bigint_mul!(x1011, x977, 8),
        8
    );
    let x1019: BytePoly_9 = bigint_nondet_quot!(ctx, x1018, x3, 9);
    let x1020: BytePoly_4 = bigint_nondet_rem!(ctx, x1018, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1019, x3, 13), x1020, 13),
            x1018,
            13
        ),
        73156,
        4,
    )?;
    let x1021: BytePoly_1 = bigint_nondet_rem!(ctx, x982, x4, 1);
    let x1022: BytePoly_4 = bigint_nondet_quot!(ctx, x982, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1022, x4, 5), x1021, 5), x982, 5),
        32515,
        2,
    )?;
    let x1023: BytePoly_1 = bigint_sub!(x5, x1021, 1);
    eqz(ctx, &bigint_mul!(x1021, x1023, 2), 8131, 2)?;
    let x1024: BytePoly_4 = bigint_add!(bigint_sub!(x1020, x1006, 4), x3, 4);
    let x1025: BytePoly_4 = bigint_add!(bigint_sub!(x1017, x1004, 4), x3, 4);
    let x1026: BytePoly_4 = bigint_nondet_inv!(ctx, x1025, x3, 4);
    let x1027: BytePoly_8 = bigint_mul!(x1025, x1026, 8);
    let x1028: BytePoly_9 = bigint_nondet_quot!(ctx, x1027, x3, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1027, bigint_mul!(x1028, x3, 13), 13), x0, 13),
        73156,
        4,
    )?;
    let x1029: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x1024, x1026, 8), x3, 4);
    let x1030: BytePoly_8 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x1029, x1025, 8), x1024, 8), x3, 8),
        x3,
        8
    );
    let x1031: BytePoly_9 = bigint_nondet_quot!(ctx, x1030, x3, 9);
    eqz(
        ctx,
        &bigint_sub!(x1030, bigint_mul!(x1031, x3, 13), 13),
        73156,
        4,
    )?;
    let x1032: BytePoly_8 = bigint_mul!(x1029, x1029, 8);
    let x1033: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1032, x1004, 8), x3, 8), x1017, 8),
        x3,
        8
    );
    let x1034: BytePoly_9 = bigint_nondet_quot!(ctx, x1033, x3, 9);
    let x1035: BytePoly_4 = bigint_nondet_rem!(ctx, x1033, x3, 4);
    let x1036: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x1029, x1035, 8),
                        bigint_add!(bigint_sub!(x1006, bigint_mul!(x1029, x1004, 8), 8), x3, 8),
                        8
                    ),
                    8
                ),
                x3,
                8
            ),
            x3,
            8
        ),
        x16,
        8
    );
    let x1037: BytePoly_9 = bigint_nondet_quot!(ctx, x1036, x3, 9);
    let x1038: BytePoly_4 = bigint_nondet_rem!(ctx, x1036, x3, 4);
    let x1039: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1032, bigint_mul!(x1034, x3, 13), 13),
                        x1004,
                        13
                    ),
                    x1017,
                    13
                ),
                x3,
                13
            ),
            x3,
            13
        ),
        x1035,
        13
    );
    eqz(ctx, &x1039, 73156, 4)?;
    let x1040: BytePoly_13 = bigint_sub!(
        bigint_add!(bigint_mul!(x1037, x3, 13), x1038, 13),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1029, bigint_sub!(x1004, x1035, 4), 8),
                        x1006,
                        8
                    ),
                    x3,
                    8
                ),
                x3,
                8
            ),
            x16,
            8
        ),
        13
    );
    eqz(ctx, &x1040, 73156, 4)?;
    let x1041: BytePoly_5 = bigint_add!(
        bigint_mul!(x1035, x1021, 5),
        bigint_mul!(x1004, x1023, 5),
        5
    );
    let x1042: BytePoly_5 = bigint_add!(
        bigint_mul!(x1038, x1021, 5),
        bigint_mul!(x1006, x1023, 5),
        5
    );
    let x1043: BytePoly_6 = bigint_nondet_quot!(ctx, x1041, x3, 6);
    let x1044: BytePoly_4 = bigint_nondet_rem!(ctx, x1041, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1043, x3, 10), x1044, 10),
            x1041,
            10
        ),
        48771,
        4,
    )?;
    let x1045: BytePoly_6 = bigint_nondet_quot!(ctx, x1042, x3, 6);
    let x1046: BytePoly_4 = bigint_nondet_rem!(ctx, x1042, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1045, x3, 10), x1046, 10),
            x1042,
            10
        ),
        48771,
        4,
    )?;
    let x1047: BytePoly_8 = bigint_mul!(x1017, x1017, 8);
    let x1048: BytePoly_8 = bigint_add!(bigint_add!(bigint_add!(x1047, x1047, 8), x1047, 8), x2, 8);
    let x1049: BytePoly_8 = bigint_add!(x48, x1048, 8);
    let x1050: BytePoly_4 = bigint_nondet_inv!(ctx, bigint_add!(x1020, x1020, 4), x3, 4);
    let x1051: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x1048, x1050, 12), x3, 4);
    let x1052: BytePoly_8 = bigint_mul!(x1020, x1051, 8);
    let x1053: BytePoly_8 = bigint_add!(x1052, x1052, 8);
    let x1054: BytePoly_9 = bigint_nondet_quot!(ctx, bigint_sub!(x1049, x1053, 8), x3, 9);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1054, x3, 13), x1053, 13),
            x1049,
            13
        ),
        73156,
        4,
    )?;
    let x1055: BytePoly_8 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1051, x1051, 8), x3, 8), x3, 8),
            x1017,
            8
        ),
        x1017,
        8
    );
    let x1056: BytePoly_9 = bigint_nondet_quot!(ctx, x1055, x3, 9);
    let x1057: BytePoly_4 = bigint_nondet_rem!(ctx, x1055, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1056, x3, 13), x1057, 13),
            x1055,
            13
        ),
        73156,
        4,
    )?;
    let x1058: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x1051, x1057, 8), 8), x3, 8),
            x1020,
            8
        ),
        bigint_mul!(x1051, x1017, 8),
        8
    );
    let x1059: BytePoly_9 = bigint_nondet_quot!(ctx, x1058, x3, 9);
    let x1060: BytePoly_4 = bigint_nondet_rem!(ctx, x1058, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1059, x3, 13), x1060, 13),
            x1058,
            13
        ),
        73156,
        4,
    )?;
    let x1061: BytePoly_1 = bigint_nondet_rem!(ctx, x1022, x4, 1);
    let x1062: BytePoly_4 = bigint_nondet_quot!(ctx, x1022, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1062, x4, 5), x1061, 5), x1022, 5),
        32515,
        2,
    )?;
    let x1063: BytePoly_1 = bigint_sub!(x5, x1061, 1);
    eqz(ctx, &bigint_mul!(x1061, x1063, 2), 8131, 2)?;
    let x1064: BytePoly_4 = bigint_add!(bigint_sub!(x1060, x1046, 4), x3, 4);
    let x1065: BytePoly_4 = bigint_add!(bigint_sub!(x1057, x1044, 4), x3, 4);
    let x1066: BytePoly_4 = bigint_nondet_inv!(ctx, x1065, x3, 4);
    let x1067: BytePoly_8 = bigint_mul!(x1065, x1066, 8);
    let x1068: BytePoly_9 = bigint_nondet_quot!(ctx, x1067, x3, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1067, bigint_mul!(x1068, x3, 13), 13), x0, 13),
        73156,
        4,
    )?;
    let x1069: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x1064, x1066, 8), x3, 4);
    let x1070: BytePoly_8 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x1069, x1065, 8), x1064, 8), x3, 8),
        x3,
        8
    );
    let x1071: BytePoly_9 = bigint_nondet_quot!(ctx, x1070, x3, 9);
    eqz(
        ctx,
        &bigint_sub!(x1070, bigint_mul!(x1071, x3, 13), 13),
        73156,
        4,
    )?;
    let x1072: BytePoly_8 = bigint_mul!(x1069, x1069, 8);
    let x1073: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1072, x1044, 8), x3, 8), x1057, 8),
        x3,
        8
    );
    let x1074: BytePoly_9 = bigint_nondet_quot!(ctx, x1073, x3, 9);
    let x1075: BytePoly_4 = bigint_nondet_rem!(ctx, x1073, x3, 4);
    let x1076: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x1069, x1075, 8),
                        bigint_add!(bigint_sub!(x1046, bigint_mul!(x1069, x1044, 8), 8), x3, 8),
                        8
                    ),
                    8
                ),
                x3,
                8
            ),
            x3,
            8
        ),
        x16,
        8
    );
    let x1077: BytePoly_9 = bigint_nondet_quot!(ctx, x1076, x3, 9);
    let x1078: BytePoly_4 = bigint_nondet_rem!(ctx, x1076, x3, 4);
    let x1079: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1072, bigint_mul!(x1074, x3, 13), 13),
                        x1044,
                        13
                    ),
                    x1057,
                    13
                ),
                x3,
                13
            ),
            x3,
            13
        ),
        x1075,
        13
    );
    eqz(ctx, &x1079, 73156, 4)?;
    let x1080: BytePoly_13 = bigint_sub!(
        bigint_add!(bigint_mul!(x1077, x3, 13), x1078, 13),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1069, bigint_sub!(x1044, x1075, 4), 8),
                        x1046,
                        8
                    ),
                    x3,
                    8
                ),
                x3,
                8
            ),
            x16,
            8
        ),
        13
    );
    eqz(ctx, &x1080, 73156, 4)?;
    let x1081: BytePoly_5 = bigint_add!(
        bigint_mul!(x1075, x1061, 5),
        bigint_mul!(x1044, x1063, 5),
        5
    );
    let x1082: BytePoly_5 = bigint_add!(
        bigint_mul!(x1078, x1061, 5),
        bigint_mul!(x1046, x1063, 5),
        5
    );
    let x1083: BytePoly_6 = bigint_nondet_quot!(ctx, x1081, x3, 6);
    let x1084: BytePoly_4 = bigint_nondet_rem!(ctx, x1081, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1083, x3, 10), x1084, 10),
            x1081,
            10
        ),
        48771,
        4,
    )?;
    let x1085: BytePoly_6 = bigint_nondet_quot!(ctx, x1082, x3, 6);
    let x1086: BytePoly_4 = bigint_nondet_rem!(ctx, x1082, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1085, x3, 10), x1086, 10),
            x1082,
            10
        ),
        48771,
        4,
    )?;
    let x1087: BytePoly_8 = bigint_mul!(x1057, x1057, 8);
    let x1088: BytePoly_8 = bigint_add!(bigint_add!(bigint_add!(x1087, x1087, 8), x1087, 8), x2, 8);
    let x1089: BytePoly_8 = bigint_add!(x48, x1088, 8);
    let x1090: BytePoly_4 = bigint_nondet_inv!(ctx, bigint_add!(x1060, x1060, 4), x3, 4);
    let x1091: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x1088, x1090, 12), x3, 4);
    let x1092: BytePoly_8 = bigint_mul!(x1060, x1091, 8);
    let x1093: BytePoly_8 = bigint_add!(x1092, x1092, 8);
    let x1094: BytePoly_9 = bigint_nondet_quot!(ctx, bigint_sub!(x1089, x1093, 8), x3, 9);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1094, x3, 13), x1093, 13),
            x1089,
            13
        ),
        73156,
        4,
    )?;
    let x1095: BytePoly_8 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1091, x1091, 8), x3, 8), x3, 8),
            x1057,
            8
        ),
        x1057,
        8
    );
    let x1096: BytePoly_9 = bigint_nondet_quot!(ctx, x1095, x3, 9);
    let x1097: BytePoly_4 = bigint_nondet_rem!(ctx, x1095, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1096, x3, 13), x1097, 13),
            x1095,
            13
        ),
        73156,
        4,
    )?;
    let x1098: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x1091, x1097, 8), 8), x3, 8),
            x1060,
            8
        ),
        bigint_mul!(x1091, x1057, 8),
        8
    );
    let x1099: BytePoly_9 = bigint_nondet_quot!(ctx, x1098, x3, 9);
    let x1100: BytePoly_4 = bigint_nondet_rem!(ctx, x1098, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1099, x3, 13), x1100, 13),
            x1098,
            13
        ),
        73156,
        4,
    )?;
    let x1101: BytePoly_1 = bigint_nondet_rem!(ctx, x1062, x4, 1);
    let x1102: BytePoly_4 = bigint_nondet_quot!(ctx, x1062, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1102, x4, 5), x1101, 5), x1062, 5),
        32515,
        2,
    )?;
    let x1103: BytePoly_1 = bigint_sub!(x5, x1101, 1);
    eqz(ctx, &bigint_mul!(x1101, x1103, 2), 8131, 2)?;
    let x1104: BytePoly_4 = bigint_add!(bigint_sub!(x1100, x1086, 4), x3, 4);
    let x1105: BytePoly_4 = bigint_add!(bigint_sub!(x1097, x1084, 4), x3, 4);
    let x1106: BytePoly_4 = bigint_nondet_inv!(ctx, x1105, x3, 4);
    let x1107: BytePoly_8 = bigint_mul!(x1105, x1106, 8);
    let x1108: BytePoly_9 = bigint_nondet_quot!(ctx, x1107, x3, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1107, bigint_mul!(x1108, x3, 13), 13), x0, 13),
        73156,
        4,
    )?;
    let x1109: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x1104, x1106, 8), x3, 4);
    let x1110: BytePoly_8 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x1109, x1105, 8), x1104, 8), x3, 8),
        x3,
        8
    );
    let x1111: BytePoly_9 = bigint_nondet_quot!(ctx, x1110, x3, 9);
    eqz(
        ctx,
        &bigint_sub!(x1110, bigint_mul!(x1111, x3, 13), 13),
        73156,
        4,
    )?;
    let x1112: BytePoly_8 = bigint_mul!(x1109, x1109, 8);
    let x1113: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1112, x1084, 8), x3, 8), x1097, 8),
        x3,
        8
    );
    let x1114: BytePoly_9 = bigint_nondet_quot!(ctx, x1113, x3, 9);
    let x1115: BytePoly_4 = bigint_nondet_rem!(ctx, x1113, x3, 4);
    let x1116: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x1109, x1115, 8),
                        bigint_add!(bigint_sub!(x1086, bigint_mul!(x1109, x1084, 8), 8), x3, 8),
                        8
                    ),
                    8
                ),
                x3,
                8
            ),
            x3,
            8
        ),
        x16,
        8
    );
    let x1117: BytePoly_9 = bigint_nondet_quot!(ctx, x1116, x3, 9);
    let x1118: BytePoly_4 = bigint_nondet_rem!(ctx, x1116, x3, 4);
    let x1119: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1112, bigint_mul!(x1114, x3, 13), 13),
                        x1084,
                        13
                    ),
                    x1097,
                    13
                ),
                x3,
                13
            ),
            x3,
            13
        ),
        x1115,
        13
    );
    eqz(ctx, &x1119, 73156, 4)?;
    let x1120: BytePoly_13 = bigint_sub!(
        bigint_add!(bigint_mul!(x1117, x3, 13), x1118, 13),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1109, bigint_sub!(x1084, x1115, 4), 8),
                        x1086,
                        8
                    ),
                    x3,
                    8
                ),
                x3,
                8
            ),
            x16,
            8
        ),
        13
    );
    eqz(ctx, &x1120, 73156, 4)?;
    let x1121: BytePoly_5 = bigint_add!(
        bigint_mul!(x1115, x1101, 5),
        bigint_mul!(x1084, x1103, 5),
        5
    );
    let x1122: BytePoly_5 = bigint_add!(
        bigint_mul!(x1118, x1101, 5),
        bigint_mul!(x1086, x1103, 5),
        5
    );
    let x1123: BytePoly_6 = bigint_nondet_quot!(ctx, x1121, x3, 6);
    let x1124: BytePoly_4 = bigint_nondet_rem!(ctx, x1121, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1123, x3, 10), x1124, 10),
            x1121,
            10
        ),
        48771,
        4,
    )?;
    let x1125: BytePoly_6 = bigint_nondet_quot!(ctx, x1122, x3, 6);
    let x1126: BytePoly_4 = bigint_nondet_rem!(ctx, x1122, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1125, x3, 10), x1126, 10),
            x1122,
            10
        ),
        48771,
        4,
    )?;
    let x1127: BytePoly_8 = bigint_mul!(x1097, x1097, 8);
    let x1128: BytePoly_8 = bigint_add!(bigint_add!(bigint_add!(x1127, x1127, 8), x1127, 8), x2, 8);
    let x1129: BytePoly_8 = bigint_add!(x48, x1128, 8);
    let x1130: BytePoly_4 = bigint_nondet_inv!(ctx, bigint_add!(x1100, x1100, 4), x3, 4);
    let x1131: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x1128, x1130, 12), x3, 4);
    let x1132: BytePoly_8 = bigint_mul!(x1100, x1131, 8);
    let x1133: BytePoly_8 = bigint_add!(x1132, x1132, 8);
    let x1134: BytePoly_9 = bigint_nondet_quot!(ctx, bigint_sub!(x1129, x1133, 8), x3, 9);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1134, x3, 13), x1133, 13),
            x1129,
            13
        ),
        73156,
        4,
    )?;
    let x1135: BytePoly_8 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1131, x1131, 8), x3, 8), x3, 8),
            x1097,
            8
        ),
        x1097,
        8
    );
    let x1136: BytePoly_9 = bigint_nondet_quot!(ctx, x1135, x3, 9);
    let x1137: BytePoly_4 = bigint_nondet_rem!(ctx, x1135, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1136, x3, 13), x1137, 13),
            x1135,
            13
        ),
        73156,
        4,
    )?;
    let x1138: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x1131, x1137, 8), 8), x3, 8),
            x1100,
            8
        ),
        bigint_mul!(x1131, x1097, 8),
        8
    );
    let x1139: BytePoly_9 = bigint_nondet_quot!(ctx, x1138, x3, 9);
    let x1140: BytePoly_4 = bigint_nondet_rem!(ctx, x1138, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1139, x3, 13), x1140, 13),
            x1138,
            13
        ),
        73156,
        4,
    )?;
    let x1141: BytePoly_1 = bigint_nondet_rem!(ctx, x1102, x4, 1);
    let x1142: BytePoly_4 = bigint_nondet_quot!(ctx, x1102, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1142, x4, 5), x1141, 5), x1102, 5),
        32515,
        2,
    )?;
    let x1143: BytePoly_1 = bigint_sub!(x5, x1141, 1);
    eqz(ctx, &bigint_mul!(x1141, x1143, 2), 8131, 2)?;
    let x1144: BytePoly_4 = bigint_add!(bigint_sub!(x1140, x1126, 4), x3, 4);
    let x1145: BytePoly_4 = bigint_add!(bigint_sub!(x1137, x1124, 4), x3, 4);
    let x1146: BytePoly_4 = bigint_nondet_inv!(ctx, x1145, x3, 4);
    let x1147: BytePoly_8 = bigint_mul!(x1145, x1146, 8);
    let x1148: BytePoly_9 = bigint_nondet_quot!(ctx, x1147, x3, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1147, bigint_mul!(x1148, x3, 13), 13), x0, 13),
        73156,
        4,
    )?;
    let x1149: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x1144, x1146, 8), x3, 4);
    let x1150: BytePoly_8 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x1149, x1145, 8), x1144, 8), x3, 8),
        x3,
        8
    );
    let x1151: BytePoly_9 = bigint_nondet_quot!(ctx, x1150, x3, 9);
    eqz(
        ctx,
        &bigint_sub!(x1150, bigint_mul!(x1151, x3, 13), 13),
        73156,
        4,
    )?;
    let x1152: BytePoly_8 = bigint_mul!(x1149, x1149, 8);
    let x1153: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1152, x1124, 8), x3, 8), x1137, 8),
        x3,
        8
    );
    let x1154: BytePoly_9 = bigint_nondet_quot!(ctx, x1153, x3, 9);
    let x1155: BytePoly_4 = bigint_nondet_rem!(ctx, x1153, x3, 4);
    let x1156: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x1149, x1155, 8),
                        bigint_add!(bigint_sub!(x1126, bigint_mul!(x1149, x1124, 8), 8), x3, 8),
                        8
                    ),
                    8
                ),
                x3,
                8
            ),
            x3,
            8
        ),
        x16,
        8
    );
    let x1157: BytePoly_9 = bigint_nondet_quot!(ctx, x1156, x3, 9);
    let x1158: BytePoly_4 = bigint_nondet_rem!(ctx, x1156, x3, 4);
    let x1159: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1152, bigint_mul!(x1154, x3, 13), 13),
                        x1124,
                        13
                    ),
                    x1137,
                    13
                ),
                x3,
                13
            ),
            x3,
            13
        ),
        x1155,
        13
    );
    eqz(ctx, &x1159, 73156, 4)?;
    let x1160: BytePoly_13 = bigint_sub!(
        bigint_add!(bigint_mul!(x1157, x3, 13), x1158, 13),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1149, bigint_sub!(x1124, x1155, 4), 8),
                        x1126,
                        8
                    ),
                    x3,
                    8
                ),
                x3,
                8
            ),
            x16,
            8
        ),
        13
    );
    eqz(ctx, &x1160, 73156, 4)?;
    let x1161: BytePoly_5 = bigint_add!(
        bigint_mul!(x1155, x1141, 5),
        bigint_mul!(x1124, x1143, 5),
        5
    );
    let x1162: BytePoly_5 = bigint_add!(
        bigint_mul!(x1158, x1141, 5),
        bigint_mul!(x1126, x1143, 5),
        5
    );
    let x1163: BytePoly_6 = bigint_nondet_quot!(ctx, x1161, x3, 6);
    let x1164: BytePoly_4 = bigint_nondet_rem!(ctx, x1161, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1163, x3, 10), x1164, 10),
            x1161,
            10
        ),
        48771,
        4,
    )?;
    let x1165: BytePoly_6 = bigint_nondet_quot!(ctx, x1162, x3, 6);
    let x1166: BytePoly_4 = bigint_nondet_rem!(ctx, x1162, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1165, x3, 10), x1166, 10),
            x1162,
            10
        ),
        48771,
        4,
    )?;
    let x1167: BytePoly_8 = bigint_mul!(x1137, x1137, 8);
    let x1168: BytePoly_8 = bigint_add!(bigint_add!(bigint_add!(x1167, x1167, 8), x1167, 8), x2, 8);
    let x1169: BytePoly_8 = bigint_add!(x48, x1168, 8);
    let x1170: BytePoly_4 = bigint_nondet_inv!(ctx, bigint_add!(x1140, x1140, 4), x3, 4);
    let x1171: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x1168, x1170, 12), x3, 4);
    let x1172: BytePoly_8 = bigint_mul!(x1140, x1171, 8);
    let x1173: BytePoly_8 = bigint_add!(x1172, x1172, 8);
    let x1174: BytePoly_9 = bigint_nondet_quot!(ctx, bigint_sub!(x1169, x1173, 8), x3, 9);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1174, x3, 13), x1173, 13),
            x1169,
            13
        ),
        73156,
        4,
    )?;
    let x1175: BytePoly_8 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1171, x1171, 8), x3, 8), x3, 8),
            x1137,
            8
        ),
        x1137,
        8
    );
    let x1176: BytePoly_9 = bigint_nondet_quot!(ctx, x1175, x3, 9);
    let x1177: BytePoly_4 = bigint_nondet_rem!(ctx, x1175, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1176, x3, 13), x1177, 13),
            x1175,
            13
        ),
        73156,
        4,
    )?;
    let x1178: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x1171, x1177, 8), 8), x3, 8),
            x1140,
            8
        ),
        bigint_mul!(x1171, x1137, 8),
        8
    );
    let x1179: BytePoly_9 = bigint_nondet_quot!(ctx, x1178, x3, 9);
    let x1180: BytePoly_4 = bigint_nondet_rem!(ctx, x1178, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1179, x3, 13), x1180, 13),
            x1178,
            13
        ),
        73156,
        4,
    )?;
    let x1181: BytePoly_1 = bigint_nondet_rem!(ctx, x1142, x4, 1);
    let x1182: BytePoly_4 = bigint_nondet_quot!(ctx, x1142, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1182, x4, 5), x1181, 5), x1142, 5),
        32515,
        2,
    )?;
    let x1183: BytePoly_1 = bigint_sub!(x5, x1181, 1);
    eqz(ctx, &bigint_mul!(x1181, x1183, 2), 8131, 2)?;
    let x1184: BytePoly_4 = bigint_add!(bigint_sub!(x1180, x1166, 4), x3, 4);
    let x1185: BytePoly_4 = bigint_add!(bigint_sub!(x1177, x1164, 4), x3, 4);
    let x1186: BytePoly_4 = bigint_nondet_inv!(ctx, x1185, x3, 4);
    let x1187: BytePoly_8 = bigint_mul!(x1185, x1186, 8);
    let x1188: BytePoly_9 = bigint_nondet_quot!(ctx, x1187, x3, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1187, bigint_mul!(x1188, x3, 13), 13), x0, 13),
        73156,
        4,
    )?;
    let x1189: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x1184, x1186, 8), x3, 4);
    let x1190: BytePoly_8 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x1189, x1185, 8), x1184, 8), x3, 8),
        x3,
        8
    );
    let x1191: BytePoly_9 = bigint_nondet_quot!(ctx, x1190, x3, 9);
    eqz(
        ctx,
        &bigint_sub!(x1190, bigint_mul!(x1191, x3, 13), 13),
        73156,
        4,
    )?;
    let x1192: BytePoly_8 = bigint_mul!(x1189, x1189, 8);
    let x1193: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1192, x1164, 8), x3, 8), x1177, 8),
        x3,
        8
    );
    let x1194: BytePoly_9 = bigint_nondet_quot!(ctx, x1193, x3, 9);
    let x1195: BytePoly_4 = bigint_nondet_rem!(ctx, x1193, x3, 4);
    let x1196: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x1189, x1195, 8),
                        bigint_add!(bigint_sub!(x1166, bigint_mul!(x1189, x1164, 8), 8), x3, 8),
                        8
                    ),
                    8
                ),
                x3,
                8
            ),
            x3,
            8
        ),
        x16,
        8
    );
    let x1197: BytePoly_9 = bigint_nondet_quot!(ctx, x1196, x3, 9);
    let x1198: BytePoly_4 = bigint_nondet_rem!(ctx, x1196, x3, 4);
    let x1199: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1192, bigint_mul!(x1194, x3, 13), 13),
                        x1164,
                        13
                    ),
                    x1177,
                    13
                ),
                x3,
                13
            ),
            x3,
            13
        ),
        x1195,
        13
    );
    eqz(ctx, &x1199, 73156, 4)?;
    let x1200: BytePoly_13 = bigint_sub!(
        bigint_add!(bigint_mul!(x1197, x3, 13), x1198, 13),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1189, bigint_sub!(x1164, x1195, 4), 8),
                        x1166,
                        8
                    ),
                    x3,
                    8
                ),
                x3,
                8
            ),
            x16,
            8
        ),
        13
    );
    eqz(ctx, &x1200, 73156, 4)?;
    let x1201: BytePoly_5 = bigint_add!(
        bigint_mul!(x1195, x1181, 5),
        bigint_mul!(x1164, x1183, 5),
        5
    );
    let x1202: BytePoly_5 = bigint_add!(
        bigint_mul!(x1198, x1181, 5),
        bigint_mul!(x1166, x1183, 5),
        5
    );
    let x1203: BytePoly_6 = bigint_nondet_quot!(ctx, x1201, x3, 6);
    let x1204: BytePoly_4 = bigint_nondet_rem!(ctx, x1201, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1203, x3, 10), x1204, 10),
            x1201,
            10
        ),
        48771,
        4,
    )?;
    let x1205: BytePoly_6 = bigint_nondet_quot!(ctx, x1202, x3, 6);
    let x1206: BytePoly_4 = bigint_nondet_rem!(ctx, x1202, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1205, x3, 10), x1206, 10),
            x1202,
            10
        ),
        48771,
        4,
    )?;
    let x1207: BytePoly_8 = bigint_mul!(x1177, x1177, 8);
    let x1208: BytePoly_8 = bigint_add!(bigint_add!(bigint_add!(x1207, x1207, 8), x1207, 8), x2, 8);
    let x1209: BytePoly_8 = bigint_add!(x48, x1208, 8);
    let x1210: BytePoly_4 = bigint_nondet_inv!(ctx, bigint_add!(x1180, x1180, 4), x3, 4);
    let x1211: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x1208, x1210, 12), x3, 4);
    let x1212: BytePoly_8 = bigint_mul!(x1180, x1211, 8);
    let x1213: BytePoly_8 = bigint_add!(x1212, x1212, 8);
    let x1214: BytePoly_9 = bigint_nondet_quot!(ctx, bigint_sub!(x1209, x1213, 8), x3, 9);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1214, x3, 13), x1213, 13),
            x1209,
            13
        ),
        73156,
        4,
    )?;
    let x1215: BytePoly_8 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1211, x1211, 8), x3, 8), x3, 8),
            x1177,
            8
        ),
        x1177,
        8
    );
    let x1216: BytePoly_9 = bigint_nondet_quot!(ctx, x1215, x3, 9);
    let x1217: BytePoly_4 = bigint_nondet_rem!(ctx, x1215, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1216, x3, 13), x1217, 13),
            x1215,
            13
        ),
        73156,
        4,
    )?;
    let x1218: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x1211, x1217, 8), 8), x3, 8),
            x1180,
            8
        ),
        bigint_mul!(x1211, x1177, 8),
        8
    );
    let x1219: BytePoly_9 = bigint_nondet_quot!(ctx, x1218, x3, 9);
    let x1220: BytePoly_4 = bigint_nondet_rem!(ctx, x1218, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1219, x3, 13), x1220, 13),
            x1218,
            13
        ),
        73156,
        4,
    )?;
    let x1221: BytePoly_1 = bigint_nondet_rem!(ctx, x1182, x4, 1);
    let x1222: BytePoly_4 = bigint_nondet_quot!(ctx, x1182, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1222, x4, 5), x1221, 5), x1182, 5),
        32515,
        2,
    )?;
    let x1223: BytePoly_1 = bigint_sub!(x5, x1221, 1);
    eqz(ctx, &bigint_mul!(x1221, x1223, 2), 8131, 2)?;
    let x1224: BytePoly_4 = bigint_add!(bigint_sub!(x1220, x1206, 4), x3, 4);
    let x1225: BytePoly_4 = bigint_add!(bigint_sub!(x1217, x1204, 4), x3, 4);
    let x1226: BytePoly_4 = bigint_nondet_inv!(ctx, x1225, x3, 4);
    let x1227: BytePoly_8 = bigint_mul!(x1225, x1226, 8);
    let x1228: BytePoly_9 = bigint_nondet_quot!(ctx, x1227, x3, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1227, bigint_mul!(x1228, x3, 13), 13), x0, 13),
        73156,
        4,
    )?;
    let x1229: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x1224, x1226, 8), x3, 4);
    let x1230: BytePoly_8 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x1229, x1225, 8), x1224, 8), x3, 8),
        x3,
        8
    );
    let x1231: BytePoly_9 = bigint_nondet_quot!(ctx, x1230, x3, 9);
    eqz(
        ctx,
        &bigint_sub!(x1230, bigint_mul!(x1231, x3, 13), 13),
        73156,
        4,
    )?;
    let x1232: BytePoly_8 = bigint_mul!(x1229, x1229, 8);
    let x1233: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1232, x1204, 8), x3, 8), x1217, 8),
        x3,
        8
    );
    let x1234: BytePoly_9 = bigint_nondet_quot!(ctx, x1233, x3, 9);
    let x1235: BytePoly_4 = bigint_nondet_rem!(ctx, x1233, x3, 4);
    let x1236: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x1229, x1235, 8),
                        bigint_add!(bigint_sub!(x1206, bigint_mul!(x1229, x1204, 8), 8), x3, 8),
                        8
                    ),
                    8
                ),
                x3,
                8
            ),
            x3,
            8
        ),
        x16,
        8
    );
    let x1237: BytePoly_9 = bigint_nondet_quot!(ctx, x1236, x3, 9);
    let x1238: BytePoly_4 = bigint_nondet_rem!(ctx, x1236, x3, 4);
    let x1239: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1232, bigint_mul!(x1234, x3, 13), 13),
                        x1204,
                        13
                    ),
                    x1217,
                    13
                ),
                x3,
                13
            ),
            x3,
            13
        ),
        x1235,
        13
    );
    eqz(ctx, &x1239, 73156, 4)?;
    let x1240: BytePoly_13 = bigint_sub!(
        bigint_add!(bigint_mul!(x1237, x3, 13), x1238, 13),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1229, bigint_sub!(x1204, x1235, 4), 8),
                        x1206,
                        8
                    ),
                    x3,
                    8
                ),
                x3,
                8
            ),
            x16,
            8
        ),
        13
    );
    eqz(ctx, &x1240, 73156, 4)?;
    let x1241: BytePoly_5 = bigint_add!(
        bigint_mul!(x1235, x1221, 5),
        bigint_mul!(x1204, x1223, 5),
        5
    );
    let x1242: BytePoly_5 = bigint_add!(
        bigint_mul!(x1238, x1221, 5),
        bigint_mul!(x1206, x1223, 5),
        5
    );
    let x1243: BytePoly_6 = bigint_nondet_quot!(ctx, x1241, x3, 6);
    let x1244: BytePoly_4 = bigint_nondet_rem!(ctx, x1241, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1243, x3, 10), x1244, 10),
            x1241,
            10
        ),
        48771,
        4,
    )?;
    let x1245: BytePoly_6 = bigint_nondet_quot!(ctx, x1242, x3, 6);
    let x1246: BytePoly_4 = bigint_nondet_rem!(ctx, x1242, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1245, x3, 10), x1246, 10),
            x1242,
            10
        ),
        48771,
        4,
    )?;
    let x1247: BytePoly_8 = bigint_mul!(x1217, x1217, 8);
    let x1248: BytePoly_8 = bigint_add!(bigint_add!(bigint_add!(x1247, x1247, 8), x1247, 8), x2, 8);
    let x1249: BytePoly_8 = bigint_add!(x48, x1248, 8);
    let x1250: BytePoly_4 = bigint_nondet_inv!(ctx, bigint_add!(x1220, x1220, 4), x3, 4);
    let x1251: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x1248, x1250, 12), x3, 4);
    let x1252: BytePoly_8 = bigint_mul!(x1220, x1251, 8);
    let x1253: BytePoly_8 = bigint_add!(x1252, x1252, 8);
    let x1254: BytePoly_9 = bigint_nondet_quot!(ctx, bigint_sub!(x1249, x1253, 8), x3, 9);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1254, x3, 13), x1253, 13),
            x1249,
            13
        ),
        73156,
        4,
    )?;
    let x1255: BytePoly_8 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1251, x1251, 8), x3, 8), x3, 8),
            x1217,
            8
        ),
        x1217,
        8
    );
    let x1256: BytePoly_9 = bigint_nondet_quot!(ctx, x1255, x3, 9);
    let x1257: BytePoly_4 = bigint_nondet_rem!(ctx, x1255, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1256, x3, 13), x1257, 13),
            x1255,
            13
        ),
        73156,
        4,
    )?;
    let x1258: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x1251, x1257, 8), 8), x3, 8),
            x1220,
            8
        ),
        bigint_mul!(x1251, x1217, 8),
        8
    );
    let x1259: BytePoly_9 = bigint_nondet_quot!(ctx, x1258, x3, 9);
    let x1260: BytePoly_4 = bigint_nondet_rem!(ctx, x1258, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1259, x3, 13), x1260, 13),
            x1258,
            13
        ),
        73156,
        4,
    )?;
    let x1261: BytePoly_1 = bigint_nondet_rem!(ctx, x1222, x4, 1);
    let x1262: BytePoly_4 = bigint_nondet_quot!(ctx, x1222, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1262, x4, 5), x1261, 5), x1222, 5),
        32515,
        2,
    )?;
    let x1263: BytePoly_1 = bigint_sub!(x5, x1261, 1);
    eqz(ctx, &bigint_mul!(x1261, x1263, 2), 8131, 2)?;
    let x1264: BytePoly_4 = bigint_add!(bigint_sub!(x1260, x1246, 4), x3, 4);
    let x1265: BytePoly_4 = bigint_add!(bigint_sub!(x1257, x1244, 4), x3, 4);
    let x1266: BytePoly_4 = bigint_nondet_inv!(ctx, x1265, x3, 4);
    let x1267: BytePoly_8 = bigint_mul!(x1265, x1266, 8);
    let x1268: BytePoly_9 = bigint_nondet_quot!(ctx, x1267, x3, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1267, bigint_mul!(x1268, x3, 13), 13), x0, 13),
        73156,
        4,
    )?;
    let x1269: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x1264, x1266, 8), x3, 4);
    let x1270: BytePoly_8 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x1269, x1265, 8), x1264, 8), x3, 8),
        x3,
        8
    );
    let x1271: BytePoly_9 = bigint_nondet_quot!(ctx, x1270, x3, 9);
    eqz(
        ctx,
        &bigint_sub!(x1270, bigint_mul!(x1271, x3, 13), 13),
        73156,
        4,
    )?;
    let x1272: BytePoly_8 = bigint_mul!(x1269, x1269, 8);
    let x1273: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1272, x1244, 8), x3, 8), x1257, 8),
        x3,
        8
    );
    let x1274: BytePoly_9 = bigint_nondet_quot!(ctx, x1273, x3, 9);
    let x1275: BytePoly_4 = bigint_nondet_rem!(ctx, x1273, x3, 4);
    let x1276: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x1269, x1275, 8),
                        bigint_add!(bigint_sub!(x1246, bigint_mul!(x1269, x1244, 8), 8), x3, 8),
                        8
                    ),
                    8
                ),
                x3,
                8
            ),
            x3,
            8
        ),
        x16,
        8
    );
    let x1277: BytePoly_9 = bigint_nondet_quot!(ctx, x1276, x3, 9);
    let x1278: BytePoly_4 = bigint_nondet_rem!(ctx, x1276, x3, 4);
    let x1279: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1272, bigint_mul!(x1274, x3, 13), 13),
                        x1244,
                        13
                    ),
                    x1257,
                    13
                ),
                x3,
                13
            ),
            x3,
            13
        ),
        x1275,
        13
    );
    eqz(ctx, &x1279, 73156, 4)?;
    let x1280: BytePoly_13 = bigint_sub!(
        bigint_add!(bigint_mul!(x1277, x3, 13), x1278, 13),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1269, bigint_sub!(x1244, x1275, 4), 8),
                        x1246,
                        8
                    ),
                    x3,
                    8
                ),
                x3,
                8
            ),
            x16,
            8
        ),
        13
    );
    eqz(ctx, &x1280, 73156, 4)?;
    let x1281: BytePoly_5 = bigint_add!(
        bigint_mul!(x1275, x1261, 5),
        bigint_mul!(x1244, x1263, 5),
        5
    );
    let x1282: BytePoly_5 = bigint_add!(
        bigint_mul!(x1278, x1261, 5),
        bigint_mul!(x1246, x1263, 5),
        5
    );
    let x1283: BytePoly_6 = bigint_nondet_quot!(ctx, x1281, x3, 6);
    let x1284: BytePoly_4 = bigint_nondet_rem!(ctx, x1281, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1283, x3, 10), x1284, 10),
            x1281,
            10
        ),
        48771,
        4,
    )?;
    let x1285: BytePoly_6 = bigint_nondet_quot!(ctx, x1282, x3, 6);
    let x1286: BytePoly_4 = bigint_nondet_rem!(ctx, x1282, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1285, x3, 10), x1286, 10),
            x1282,
            10
        ),
        48771,
        4,
    )?;
    let x1287: BytePoly_8 = bigint_mul!(x1257, x1257, 8);
    let x1288: BytePoly_8 = bigint_add!(bigint_add!(bigint_add!(x1287, x1287, 8), x1287, 8), x2, 8);
    let x1289: BytePoly_8 = bigint_add!(x48, x1288, 8);
    let x1290: BytePoly_4 = bigint_nondet_inv!(ctx, bigint_add!(x1260, x1260, 4), x3, 4);
    let x1291: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x1288, x1290, 12), x3, 4);
    let x1292: BytePoly_8 = bigint_mul!(x1260, x1291, 8);
    let x1293: BytePoly_8 = bigint_add!(x1292, x1292, 8);
    let x1294: BytePoly_9 = bigint_nondet_quot!(ctx, bigint_sub!(x1289, x1293, 8), x3, 9);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1294, x3, 13), x1293, 13),
            x1289,
            13
        ),
        73156,
        4,
    )?;
    let x1295: BytePoly_8 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1291, x1291, 8), x3, 8), x3, 8),
            x1257,
            8
        ),
        x1257,
        8
    );
    let x1296: BytePoly_9 = bigint_nondet_quot!(ctx, x1295, x3, 9);
    let x1297: BytePoly_4 = bigint_nondet_rem!(ctx, x1295, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1296, x3, 13), x1297, 13),
            x1295,
            13
        ),
        73156,
        4,
    )?;
    let x1298: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x1291, x1297, 8), 8), x3, 8),
            x1260,
            8
        ),
        bigint_mul!(x1291, x1257, 8),
        8
    );
    let x1299: BytePoly_9 = bigint_nondet_quot!(ctx, x1298, x3, 9);
    let x1300: BytePoly_4 = bigint_nondet_rem!(ctx, x1298, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1299, x3, 13), x1300, 13),
            x1298,
            13
        ),
        73156,
        4,
    )?;
    let x1301: BytePoly_4 = bigint_add!(bigint_sub!(bigint_sub!(x3, x10, 4), x1286, 4), x3, 4);
    let x1302: BytePoly_4 = bigint_add!(bigint_sub!(x9, x1284, 4), x3, 4);
    let x1303: BytePoly_4 = bigint_nondet_inv!(ctx, x1302, x3, 4);
    let x1304: BytePoly_8 = bigint_mul!(x1302, x1303, 8);
    let x1305: BytePoly_9 = bigint_nondet_quot!(ctx, x1304, x3, 9);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1304, bigint_mul!(x1305, x3, 13), 13), x0, 13),
        73156,
        4,
    )?;
    let x1306: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x1301, x1303, 8), x3, 4);
    let x1307: BytePoly_8 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x1306, x1302, 8), x1301, 8), x3, 8),
        x3,
        8
    );
    let x1308: BytePoly_9 = bigint_nondet_quot!(ctx, x1307, x3, 9);
    eqz(
        ctx,
        &bigint_sub!(x1307, bigint_mul!(x1308, x3, 13), 13),
        73156,
        4,
    )?;
    let x1309: BytePoly_8 = bigint_mul!(x1306, x1306, 8);
    let x1310: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1309, x1284, 8), x3, 8), x9, 8),
        x3,
        8
    );
    let x1311: BytePoly_9 = bigint_nondet_quot!(ctx, x1310, x3, 9);
    let x1312: BytePoly_4 = bigint_nondet_rem!(ctx, x1310, x3, 4);
    let x1313: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x1306, x1312, 8),
                        bigint_add!(bigint_sub!(x1286, bigint_mul!(x1306, x1284, 8), 8), x3, 8),
                        8
                    ),
                    8
                ),
                x3,
                8
            ),
            x3,
            8
        ),
        x16,
        8
    );
    let x1314: BytePoly_9 = bigint_nondet_quot!(ctx, x1313, x3, 9);
    let x1315: BytePoly_4 = bigint_nondet_rem!(ctx, x1313, x3, 4);
    let x1316: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1309, bigint_mul!(x1311, x3, 13), 13),
                        x1284,
                        13
                    ),
                    x9,
                    13
                ),
                x3,
                13
            ),
            x3,
            13
        ),
        x1312,
        13
    );
    eqz(ctx, &x1316, 73156, 4)?;
    let x1317: BytePoly_13 = bigint_sub!(
        bigint_add!(bigint_mul!(x1314, x3, 13), x1315, 13),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1306, bigint_sub!(x1284, x1312, 4), 8),
                        x1286,
                        8
                    ),
                    x3,
                    8
                ),
                x3,
                8
            ),
            x16,
            8
        ),
        13
    );
    eqz(ctx, &x1317, 73156, 4)?;
    eqz(ctx, &bigint_sub!(x1312, x11, 4), 34, 1)?;
    eqz(ctx, &bigint_sub!(x1315, x12, 4), 34, 1)?;
    return Ok(());
}
pub fn ec_mul_rz8test1(ctx: &mut BigIntContext) -> Result<()> {
    let x0: BytePoly_1 = bigint_const!(ctx, 12);
    let x1: BytePoly_1 = bigint_const!(ctx, 1);
    let x2: BytePoly_1 = bigint_const!(ctx, 179);
    let x3: BytePoly_1 = bigint_const!(ctx, 2);
    let x4: BytePoly_1 = bigint_const!(ctx, 1);
    let x5: BytePoly_1 = bigint_def!(ctx, 1, 0, 1);
    let x6: BytePoly_1 = bigint_def!(ctx, 1, 1, 1);
    let x7: BytePoly_1 = bigint_def!(ctx, 1, 2, 1);
    let x8: BytePoly_1 = bigint_def!(ctx, 1, 3, 1);
    let x9: BytePoly_1 = bigint_def!(ctx, 1, 4, 1);
    let x10: BytePoly_1 = bigint_def!(ctx, 1, 5, 1);
    let x11: BytePoly_1 = bigint_def!(ctx, 1, 6, 1);
    eqz(ctx, &bigint_sub!(x5, x5, 1), 34, 1)?;
    eqz(ctx, &bigint_sub!(x6, x6, 1), 34, 1)?;
    eqz(ctx, &bigint_sub!(x7, x7, 1), 34, 1)?;
    eqz(ctx, &bigint_sub!(x8, x8, 1), 34, 1)?;
    eqz(ctx, &bigint_sub!(x9, x9, 1), 34, 1)?;
    eqz(ctx, &bigint_sub!(x10, x10, 1), 34, 1)?;
    eqz(ctx, &bigint_sub!(x11, x11, 1), 34, 1)?;
    let x12: BytePoly_2 = bigint_mul!(x8, x8, 2);
    let x13: BytePoly_3 = bigint_nondet_quot!(ctx, x12, x2, 3);
    let x14: BytePoly_1 = bigint_nondet_rem!(ctx, x12, x2, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x13, x2, 4), x14, 4), x12, 4),
        24387,
        2,
    )?;
    let x15: BytePoly_2 = bigint_mul!(x2, x2, 2);
    let x16: BytePoly_2 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_add!(bigint_mul!(x8, x14, 2), bigint_mul!(x8, x1, 2), 2),
                x0,
                2
            ),
            bigint_mul!(x9, x9, 2),
            2
        ),
        x15,
        2
    );
    let x17: BytePoly_3 = bigint_nondet_quot!(ctx, x16, x2, 3);
    let x18: BytePoly_1 = bigint_nondet_rem!(ctx, x16, x2, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x17, x2, 4), x18, 4), x16, 4),
        24387,
        2,
    )?;
    eqz(ctx, &x18, 34, 1)?;
    let x19: BytePoly_1 = bigint_nondet_rem!(ctx, x7, x3, 1);
    let x20: BytePoly_1 = bigint_nondet_quot!(ctx, x7, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x20, x3, 2), x19, 2), x7, 2),
        8131,
        2,
    )?;
    let x21: BytePoly_1 = bigint_sub!(x4, x19, 1);
    eqz(ctx, &bigint_mul!(x19, x21, 2), 8131, 2)?;
    let x22: BytePoly_1 = bigint_add!(bigint_sub!(x6, x9, 1), x2, 1);
    let x23: BytePoly_1 = bigint_add!(bigint_sub!(x5, x8, 1), x2, 1);
    let x24: BytePoly_1 = bigint_nondet_inv!(ctx, x23, x2, 1);
    let x25: BytePoly_2 = bigint_mul!(x23, x24, 2);
    let x26: BytePoly_3 = bigint_nondet_quot!(ctx, x25, x2, 3);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x25, bigint_mul!(x26, x2, 4), 4), x1, 4),
        24387,
        2,
    )?;
    let x27: BytePoly_1 = bigint_nondet_rem!(ctx, bigint_mul!(x22, x24, 2), x2, 1);
    let x28: BytePoly_2 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x27, x23, 2), x22, 2), x2, 2),
        x2,
        2
    );
    let x29: BytePoly_3 = bigint_nondet_quot!(ctx, x28, x2, 3);
    eqz(ctx, &bigint_sub!(x28, bigint_mul!(x29, x2, 4), 4), 24387, 2)?;
    let x30: BytePoly_2 = bigint_mul!(x27, x27, 2);
    let x31: BytePoly_2 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x30, x8, 2), x2, 2), x5, 2),
        x2,
        2
    );
    let x32: BytePoly_3 = bigint_nondet_quot!(ctx, x31, x2, 3);
    let x33: BytePoly_1 = bigint_nondet_rem!(ctx, x31, x2, 1);
    let x34: BytePoly_2 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x2,
                    bigint_add!(
                        bigint_mul!(x27, x33, 2),
                        bigint_add!(bigint_sub!(x9, bigint_mul!(x27, x8, 2), 2), x2, 2),
                        2
                    ),
                    2
                ),
                x2,
                2
            ),
            x2,
            2
        ),
        x15,
        2
    );
    let x35: BytePoly_3 = bigint_nondet_quot!(ctx, x34, x2, 3);
    let x36: BytePoly_1 = bigint_nondet_rem!(ctx, x34, x2, 1);
    let x37: BytePoly_4 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x30, bigint_mul!(x32, x2, 4), 4), x8, 4),
                    x5,
                    4
                ),
                x2,
                4
            ),
            x2,
            4
        ),
        x33,
        4
    );
    eqz(ctx, &x37, 24387, 2)?;
    let x38: BytePoly_4 = bigint_sub!(
        bigint_add!(bigint_mul!(x35, x2, 4), x36, 4),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x27, bigint_sub!(x8, x33, 1), 2), x9, 2),
                    x2,
                    2
                ),
                x2,
                2
            ),
            x15,
            2
        ),
        4
    );
    eqz(ctx, &x38, 24387, 2)?;
    let x39: BytePoly_2 = bigint_add!(bigint_mul!(x33, x19, 2), bigint_mul!(x8, x21, 2), 2);
    let x40: BytePoly_2 = bigint_add!(bigint_mul!(x36, x19, 2), bigint_mul!(x9, x21, 2), 2);
    let x41: BytePoly_3 = bigint_nondet_quot!(ctx, x39, x2, 3);
    let x42: BytePoly_1 = bigint_nondet_rem!(ctx, x39, x2, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x41, x2, 4), x42, 4), x39, 4),
        24387,
        2,
    )?;
    let x43: BytePoly_3 = bigint_nondet_quot!(ctx, x40, x2, 3);
    let x44: BytePoly_1 = bigint_nondet_rem!(ctx, x40, x2, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x43, x2, 4), x44, 4), x40, 4),
        24387,
        2,
    )?;
    let x45: BytePoly_2 = bigint_mul!(x5, x5, 2);
    let x46: BytePoly_2 = bigint_add!(bigint_add!(bigint_add!(x45, x45, 2), x45, 2), x1, 2);
    let x47: BytePoly_2 = bigint_add!(x15, x15, 2);
    let x48: BytePoly_2 = bigint_add!(x47, x46, 2);
    let x49: BytePoly_1 = bigint_nondet_inv!(ctx, bigint_add!(x6, x6, 1), x2, 1);
    let x50: BytePoly_1 = bigint_nondet_rem!(ctx, bigint_mul!(x46, x49, 3), x2, 1);
    let x51: BytePoly_2 = bigint_mul!(x6, x50, 2);
    let x52: BytePoly_2 = bigint_add!(x51, x51, 2);
    let x53: BytePoly_3 = bigint_nondet_quot!(ctx, bigint_sub!(x48, x52, 2), x2, 3);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x53, x2, 4), x52, 4), x48, 4),
        24387,
        2,
    )?;
    let x54: BytePoly_2 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x50, x50, 2), x2, 2), x2, 2),
            x5,
            2
        ),
        x5,
        2
    );
    let x55: BytePoly_3 = bigint_nondet_quot!(ctx, x54, x2, 3);
    let x56: BytePoly_1 = bigint_nondet_rem!(ctx, x54, x2, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x55, x2, 4), x56, 4), x54, 4),
        24387,
        2,
    )?;
    let x57: BytePoly_2 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x15, bigint_mul!(x50, x56, 2), 2), x2, 2),
            x6,
            2
        ),
        bigint_mul!(x50, x5, 2),
        2
    );
    let x58: BytePoly_3 = bigint_nondet_quot!(ctx, x57, x2, 3);
    let x59: BytePoly_1 = bigint_nondet_rem!(ctx, x57, x2, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x58, x2, 4), x59, 4), x57, 4),
        24387,
        2,
    )?;
    let x60: BytePoly_1 = bigint_nondet_rem!(ctx, x20, x3, 1);
    let x61: BytePoly_1 = bigint_nondet_quot!(ctx, x20, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x61, x3, 2), x60, 2), x20, 2),
        8131,
        2,
    )?;
    let x62: BytePoly_1 = bigint_sub!(x4, x60, 1);
    eqz(ctx, &bigint_mul!(x60, x62, 2), 8131, 2)?;
    let x63: BytePoly_1 = bigint_add!(bigint_sub!(x59, x44, 1), x2, 1);
    let x64: BytePoly_1 = bigint_add!(bigint_sub!(x56, x42, 1), x2, 1);
    let x65: BytePoly_1 = bigint_nondet_inv!(ctx, x64, x2, 1);
    let x66: BytePoly_2 = bigint_mul!(x64, x65, 2);
    let x67: BytePoly_3 = bigint_nondet_quot!(ctx, x66, x2, 3);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x66, bigint_mul!(x67, x2, 4), 4), x1, 4),
        24387,
        2,
    )?;
    let x68: BytePoly_1 = bigint_nondet_rem!(ctx, bigint_mul!(x63, x65, 2), x2, 1);
    let x69: BytePoly_2 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x68, x64, 2), x63, 2), x2, 2),
        x2,
        2
    );
    let x70: BytePoly_3 = bigint_nondet_quot!(ctx, x69, x2, 3);
    eqz(ctx, &bigint_sub!(x69, bigint_mul!(x70, x2, 4), 4), 24387, 2)?;
    let x71: BytePoly_2 = bigint_mul!(x68, x68, 2);
    let x72: BytePoly_2 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x71, x42, 2), x2, 2), x56, 2),
        x2,
        2
    );
    let x73: BytePoly_3 = bigint_nondet_quot!(ctx, x72, x2, 3);
    let x74: BytePoly_1 = bigint_nondet_rem!(ctx, x72, x2, 1);
    let x75: BytePoly_2 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x2,
                    bigint_add!(
                        bigint_mul!(x68, x74, 2),
                        bigint_add!(bigint_sub!(x44, bigint_mul!(x68, x42, 2), 2), x2, 2),
                        2
                    ),
                    2
                ),
                x2,
                2
            ),
            x2,
            2
        ),
        x15,
        2
    );
    let x76: BytePoly_3 = bigint_nondet_quot!(ctx, x75, x2, 3);
    let x77: BytePoly_1 = bigint_nondet_rem!(ctx, x75, x2, 1);
    let x78: BytePoly_4 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x71, bigint_mul!(x73, x2, 4), 4), x42, 4),
                    x56,
                    4
                ),
                x2,
                4
            ),
            x2,
            4
        ),
        x74,
        4
    );
    eqz(ctx, &x78, 24387, 2)?;
    let x79: BytePoly_4 = bigint_sub!(
        bigint_add!(bigint_mul!(x76, x2, 4), x77, 4),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x68, bigint_sub!(x42, x74, 1), 2), x44, 2),
                    x2,
                    2
                ),
                x2,
                2
            ),
            x15,
            2
        ),
        4
    );
    eqz(ctx, &x79, 24387, 2)?;
    let x80: BytePoly_2 = bigint_add!(bigint_mul!(x74, x60, 2), bigint_mul!(x42, x62, 2), 2);
    let x81: BytePoly_2 = bigint_add!(bigint_mul!(x77, x60, 2), bigint_mul!(x44, x62, 2), 2);
    let x82: BytePoly_3 = bigint_nondet_quot!(ctx, x80, x2, 3);
    let x83: BytePoly_1 = bigint_nondet_rem!(ctx, x80, x2, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x82, x2, 4), x83, 4), x80, 4),
        24387,
        2,
    )?;
    let x84: BytePoly_3 = bigint_nondet_quot!(ctx, x81, x2, 3);
    let x85: BytePoly_1 = bigint_nondet_rem!(ctx, x81, x2, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x84, x2, 4), x85, 4), x81, 4),
        24387,
        2,
    )?;
    let x86: BytePoly_2 = bigint_mul!(x56, x56, 2);
    let x87: BytePoly_2 = bigint_add!(bigint_add!(bigint_add!(x86, x86, 2), x86, 2), x1, 2);
    let x88: BytePoly_2 = bigint_add!(x47, x87, 2);
    let x89: BytePoly_1 = bigint_nondet_inv!(ctx, bigint_add!(x59, x59, 1), x2, 1);
    let x90: BytePoly_1 = bigint_nondet_rem!(ctx, bigint_mul!(x87, x89, 3), x2, 1);
    let x91: BytePoly_2 = bigint_mul!(x59, x90, 2);
    let x92: BytePoly_2 = bigint_add!(x91, x91, 2);
    let x93: BytePoly_3 = bigint_nondet_quot!(ctx, bigint_sub!(x88, x92, 2), x2, 3);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x93, x2, 4), x92, 4), x88, 4),
        24387,
        2,
    )?;
    let x94: BytePoly_2 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x90, x90, 2), x2, 2), x2, 2),
            x56,
            2
        ),
        x56,
        2
    );
    let x95: BytePoly_3 = bigint_nondet_quot!(ctx, x94, x2, 3);
    let x96: BytePoly_1 = bigint_nondet_rem!(ctx, x94, x2, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x95, x2, 4), x96, 4), x94, 4),
        24387,
        2,
    )?;
    let x97: BytePoly_2 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x15, bigint_mul!(x90, x96, 2), 2), x2, 2),
            x59,
            2
        ),
        bigint_mul!(x90, x56, 2),
        2
    );
    let x98: BytePoly_3 = bigint_nondet_quot!(ctx, x97, x2, 3);
    let x99: BytePoly_1 = bigint_nondet_rem!(ctx, x97, x2, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x98, x2, 4), x99, 4), x97, 4),
        24387,
        2,
    )?;
    let x100: BytePoly_1 = bigint_nondet_rem!(ctx, x61, x3, 1);
    let x101: BytePoly_1 = bigint_nondet_quot!(ctx, x61, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x101, x3, 2), x100, 2), x61, 2),
        8131,
        2,
    )?;
    let x102: BytePoly_1 = bigint_sub!(x4, x100, 1);
    eqz(ctx, &bigint_mul!(x100, x102, 2), 8131, 2)?;
    let x103: BytePoly_1 = bigint_add!(bigint_sub!(x99, x85, 1), x2, 1);
    let x104: BytePoly_1 = bigint_add!(bigint_sub!(x96, x83, 1), x2, 1);
    let x105: BytePoly_1 = bigint_nondet_inv!(ctx, x104, x2, 1);
    let x106: BytePoly_2 = bigint_mul!(x104, x105, 2);
    let x107: BytePoly_3 = bigint_nondet_quot!(ctx, x106, x2, 3);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x106, bigint_mul!(x107, x2, 4), 4), x1, 4),
        24387,
        2,
    )?;
    let x108: BytePoly_1 = bigint_nondet_rem!(ctx, bigint_mul!(x103, x105, 2), x2, 1);
    let x109: BytePoly_2 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x108, x104, 2), x103, 2), x2, 2),
        x2,
        2
    );
    let x110: BytePoly_3 = bigint_nondet_quot!(ctx, x109, x2, 3);
    eqz(
        ctx,
        &bigint_sub!(x109, bigint_mul!(x110, x2, 4), 4),
        24387,
        2,
    )?;
    let x111: BytePoly_2 = bigint_mul!(x108, x108, 2);
    let x112: BytePoly_2 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x111, x83, 2), x2, 2), x96, 2),
        x2,
        2
    );
    let x113: BytePoly_3 = bigint_nondet_quot!(ctx, x112, x2, 3);
    let x114: BytePoly_1 = bigint_nondet_rem!(ctx, x112, x2, 1);
    let x115: BytePoly_2 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x2,
                    bigint_add!(
                        bigint_mul!(x108, x114, 2),
                        bigint_add!(bigint_sub!(x85, bigint_mul!(x108, x83, 2), 2), x2, 2),
                        2
                    ),
                    2
                ),
                x2,
                2
            ),
            x2,
            2
        ),
        x15,
        2
    );
    let x116: BytePoly_3 = bigint_nondet_quot!(ctx, x115, x2, 3);
    let x117: BytePoly_1 = bigint_nondet_rem!(ctx, x115, x2, 1);
    let x118: BytePoly_4 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x111, bigint_mul!(x113, x2, 4), 4), x83, 4),
                    x96,
                    4
                ),
                x2,
                4
            ),
            x2,
            4
        ),
        x114,
        4
    );
    eqz(ctx, &x118, 24387, 2)?;
    let x119: BytePoly_4 = bigint_sub!(
        bigint_add!(bigint_mul!(x116, x2, 4), x117, 4),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x108, bigint_sub!(x83, x114, 1), 2), x85, 2),
                    x2,
                    2
                ),
                x2,
                2
            ),
            x15,
            2
        ),
        4
    );
    eqz(ctx, &x119, 24387, 2)?;
    let x120: BytePoly_2 = bigint_add!(bigint_mul!(x114, x100, 2), bigint_mul!(x83, x102, 2), 2);
    let x121: BytePoly_2 = bigint_add!(bigint_mul!(x117, x100, 2), bigint_mul!(x85, x102, 2), 2);
    let x122: BytePoly_3 = bigint_nondet_quot!(ctx, x120, x2, 3);
    let x123: BytePoly_1 = bigint_nondet_rem!(ctx, x120, x2, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x122, x2, 4), x123, 4), x120, 4),
        24387,
        2,
    )?;
    let x124: BytePoly_3 = bigint_nondet_quot!(ctx, x121, x2, 3);
    let x125: BytePoly_1 = bigint_nondet_rem!(ctx, x121, x2, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x124, x2, 4), x125, 4), x121, 4),
        24387,
        2,
    )?;
    let x126: BytePoly_2 = bigint_mul!(x96, x96, 2);
    let x127: BytePoly_2 = bigint_add!(bigint_add!(bigint_add!(x126, x126, 2), x126, 2), x1, 2);
    let x128: BytePoly_2 = bigint_add!(x47, x127, 2);
    let x129: BytePoly_1 = bigint_nondet_inv!(ctx, bigint_add!(x99, x99, 1), x2, 1);
    let x130: BytePoly_1 = bigint_nondet_rem!(ctx, bigint_mul!(x127, x129, 3), x2, 1);
    let x131: BytePoly_2 = bigint_mul!(x99, x130, 2);
    let x132: BytePoly_2 = bigint_add!(x131, x131, 2);
    let x133: BytePoly_3 = bigint_nondet_quot!(ctx, bigint_sub!(x128, x132, 2), x2, 3);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x133, x2, 4), x132, 4), x128, 4),
        24387,
        2,
    )?;
    let x134: BytePoly_2 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x130, x130, 2), x2, 2), x2, 2),
            x96,
            2
        ),
        x96,
        2
    );
    let x135: BytePoly_3 = bigint_nondet_quot!(ctx, x134, x2, 3);
    let x136: BytePoly_1 = bigint_nondet_rem!(ctx, x134, x2, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x135, x2, 4), x136, 4), x134, 4),
        24387,
        2,
    )?;
    let x137: BytePoly_2 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x15, bigint_mul!(x130, x136, 2), 2), x2, 2),
            x99,
            2
        ),
        bigint_mul!(x130, x96, 2),
        2
    );
    let x138: BytePoly_3 = bigint_nondet_quot!(ctx, x137, x2, 3);
    let x139: BytePoly_1 = bigint_nondet_rem!(ctx, x137, x2, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x138, x2, 4), x139, 4), x137, 4),
        24387,
        2,
    )?;
    let x140: BytePoly_1 = bigint_nondet_rem!(ctx, x101, x3, 1);
    let x141: BytePoly_1 = bigint_nondet_quot!(ctx, x101, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x141, x3, 2), x140, 2), x101, 2),
        8131,
        2,
    )?;
    let x142: BytePoly_1 = bigint_sub!(x4, x140, 1);
    eqz(ctx, &bigint_mul!(x140, x142, 2), 8131, 2)?;
    let x143: BytePoly_1 = bigint_add!(bigint_sub!(x139, x125, 1), x2, 1);
    let x144: BytePoly_1 = bigint_add!(bigint_sub!(x136, x123, 1), x2, 1);
    let x145: BytePoly_1 = bigint_nondet_inv!(ctx, x144, x2, 1);
    let x146: BytePoly_2 = bigint_mul!(x144, x145, 2);
    let x147: BytePoly_3 = bigint_nondet_quot!(ctx, x146, x2, 3);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x146, bigint_mul!(x147, x2, 4), 4), x1, 4),
        24387,
        2,
    )?;
    let x148: BytePoly_1 = bigint_nondet_rem!(ctx, bigint_mul!(x143, x145, 2), x2, 1);
    let x149: BytePoly_2 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x148, x144, 2), x143, 2), x2, 2),
        x2,
        2
    );
    let x150: BytePoly_3 = bigint_nondet_quot!(ctx, x149, x2, 3);
    eqz(
        ctx,
        &bigint_sub!(x149, bigint_mul!(x150, x2, 4), 4),
        24387,
        2,
    )?;
    let x151: BytePoly_2 = bigint_mul!(x148, x148, 2);
    let x152: BytePoly_2 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x151, x123, 2), x2, 2), x136, 2),
        x2,
        2
    );
    let x153: BytePoly_3 = bigint_nondet_quot!(ctx, x152, x2, 3);
    let x154: BytePoly_1 = bigint_nondet_rem!(ctx, x152, x2, 1);
    let x155: BytePoly_2 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x2,
                    bigint_add!(
                        bigint_mul!(x148, x154, 2),
                        bigint_add!(bigint_sub!(x125, bigint_mul!(x148, x123, 2), 2), x2, 2),
                        2
                    ),
                    2
                ),
                x2,
                2
            ),
            x2,
            2
        ),
        x15,
        2
    );
    let x156: BytePoly_3 = bigint_nondet_quot!(ctx, x155, x2, 3);
    let x157: BytePoly_1 = bigint_nondet_rem!(ctx, x155, x2, 1);
    let x158: BytePoly_4 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x151, bigint_mul!(x153, x2, 4), 4), x123, 4),
                    x136,
                    4
                ),
                x2,
                4
            ),
            x2,
            4
        ),
        x154,
        4
    );
    eqz(ctx, &x158, 24387, 2)?;
    let x159: BytePoly_4 = bigint_sub!(
        bigint_add!(bigint_mul!(x156, x2, 4), x157, 4),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x148, bigint_sub!(x123, x154, 1), 2), x125, 2),
                    x2,
                    2
                ),
                x2,
                2
            ),
            x15,
            2
        ),
        4
    );
    eqz(ctx, &x159, 24387, 2)?;
    let x160: BytePoly_2 = bigint_add!(bigint_mul!(x154, x140, 2), bigint_mul!(x123, x142, 2), 2);
    let x161: BytePoly_2 = bigint_add!(bigint_mul!(x157, x140, 2), bigint_mul!(x125, x142, 2), 2);
    let x162: BytePoly_3 = bigint_nondet_quot!(ctx, x160, x2, 3);
    let x163: BytePoly_1 = bigint_nondet_rem!(ctx, x160, x2, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x162, x2, 4), x163, 4), x160, 4),
        24387,
        2,
    )?;
    let x164: BytePoly_3 = bigint_nondet_quot!(ctx, x161, x2, 3);
    let x165: BytePoly_1 = bigint_nondet_rem!(ctx, x161, x2, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x164, x2, 4), x165, 4), x161, 4),
        24387,
        2,
    )?;
    let x166: BytePoly_2 = bigint_mul!(x136, x136, 2);
    let x167: BytePoly_2 = bigint_add!(bigint_add!(bigint_add!(x166, x166, 2), x166, 2), x1, 2);
    let x168: BytePoly_2 = bigint_add!(x47, x167, 2);
    let x169: BytePoly_1 = bigint_nondet_inv!(ctx, bigint_add!(x139, x139, 1), x2, 1);
    let x170: BytePoly_1 = bigint_nondet_rem!(ctx, bigint_mul!(x167, x169, 3), x2, 1);
    let x171: BytePoly_2 = bigint_mul!(x139, x170, 2);
    let x172: BytePoly_2 = bigint_add!(x171, x171, 2);
    let x173: BytePoly_3 = bigint_nondet_quot!(ctx, bigint_sub!(x168, x172, 2), x2, 3);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x173, x2, 4), x172, 4), x168, 4),
        24387,
        2,
    )?;
    let x174: BytePoly_2 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x170, x170, 2), x2, 2), x2, 2),
            x136,
            2
        ),
        x136,
        2
    );
    let x175: BytePoly_3 = bigint_nondet_quot!(ctx, x174, x2, 3);
    let x176: BytePoly_1 = bigint_nondet_rem!(ctx, x174, x2, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x175, x2, 4), x176, 4), x174, 4),
        24387,
        2,
    )?;
    let x177: BytePoly_2 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x15, bigint_mul!(x170, x176, 2), 2), x2, 2),
            x139,
            2
        ),
        bigint_mul!(x170, x136, 2),
        2
    );
    let x178: BytePoly_3 = bigint_nondet_quot!(ctx, x177, x2, 3);
    let x179: BytePoly_1 = bigint_nondet_rem!(ctx, x177, x2, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x178, x2, 4), x179, 4), x177, 4),
        24387,
        2,
    )?;
    let x180: BytePoly_1 = bigint_nondet_rem!(ctx, x141, x3, 1);
    let x181: BytePoly_1 = bigint_nondet_quot!(ctx, x141, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x181, x3, 2), x180, 2), x141, 2),
        8131,
        2,
    )?;
    let x182: BytePoly_1 = bigint_sub!(x4, x180, 1);
    eqz(ctx, &bigint_mul!(x180, x182, 2), 8131, 2)?;
    let x183: BytePoly_1 = bigint_add!(bigint_sub!(x179, x165, 1), x2, 1);
    let x184: BytePoly_1 = bigint_add!(bigint_sub!(x176, x163, 1), x2, 1);
    let x185: BytePoly_1 = bigint_nondet_inv!(ctx, x184, x2, 1);
    let x186: BytePoly_2 = bigint_mul!(x184, x185, 2);
    let x187: BytePoly_3 = bigint_nondet_quot!(ctx, x186, x2, 3);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x186, bigint_mul!(x187, x2, 4), 4), x1, 4),
        24387,
        2,
    )?;
    let x188: BytePoly_1 = bigint_nondet_rem!(ctx, bigint_mul!(x183, x185, 2), x2, 1);
    let x189: BytePoly_2 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x188, x184, 2), x183, 2), x2, 2),
        x2,
        2
    );
    let x190: BytePoly_3 = bigint_nondet_quot!(ctx, x189, x2, 3);
    eqz(
        ctx,
        &bigint_sub!(x189, bigint_mul!(x190, x2, 4), 4),
        24387,
        2,
    )?;
    let x191: BytePoly_2 = bigint_mul!(x188, x188, 2);
    let x192: BytePoly_2 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x191, x163, 2), x2, 2), x176, 2),
        x2,
        2
    );
    let x193: BytePoly_3 = bigint_nondet_quot!(ctx, x192, x2, 3);
    let x194: BytePoly_1 = bigint_nondet_rem!(ctx, x192, x2, 1);
    let x195: BytePoly_2 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x2,
                    bigint_add!(
                        bigint_mul!(x188, x194, 2),
                        bigint_add!(bigint_sub!(x165, bigint_mul!(x188, x163, 2), 2), x2, 2),
                        2
                    ),
                    2
                ),
                x2,
                2
            ),
            x2,
            2
        ),
        x15,
        2
    );
    let x196: BytePoly_3 = bigint_nondet_quot!(ctx, x195, x2, 3);
    let x197: BytePoly_1 = bigint_nondet_rem!(ctx, x195, x2, 1);
    let x198: BytePoly_4 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x191, bigint_mul!(x193, x2, 4), 4), x163, 4),
                    x176,
                    4
                ),
                x2,
                4
            ),
            x2,
            4
        ),
        x194,
        4
    );
    eqz(ctx, &x198, 24387, 2)?;
    let x199: BytePoly_4 = bigint_sub!(
        bigint_add!(bigint_mul!(x196, x2, 4), x197, 4),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x188, bigint_sub!(x163, x194, 1), 2), x165, 2),
                    x2,
                    2
                ),
                x2,
                2
            ),
            x15,
            2
        ),
        4
    );
    eqz(ctx, &x199, 24387, 2)?;
    let x200: BytePoly_2 = bigint_add!(bigint_mul!(x194, x180, 2), bigint_mul!(x163, x182, 2), 2);
    let x201: BytePoly_2 = bigint_add!(bigint_mul!(x197, x180, 2), bigint_mul!(x165, x182, 2), 2);
    let x202: BytePoly_3 = bigint_nondet_quot!(ctx, x200, x2, 3);
    let x203: BytePoly_1 = bigint_nondet_rem!(ctx, x200, x2, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x202, x2, 4), x203, 4), x200, 4),
        24387,
        2,
    )?;
    let x204: BytePoly_3 = bigint_nondet_quot!(ctx, x201, x2, 3);
    let x205: BytePoly_1 = bigint_nondet_rem!(ctx, x201, x2, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x204, x2, 4), x205, 4), x201, 4),
        24387,
        2,
    )?;
    let x206: BytePoly_2 = bigint_mul!(x176, x176, 2);
    let x207: BytePoly_2 = bigint_add!(bigint_add!(bigint_add!(x206, x206, 2), x206, 2), x1, 2);
    let x208: BytePoly_2 = bigint_add!(x47, x207, 2);
    let x209: BytePoly_1 = bigint_nondet_inv!(ctx, bigint_add!(x179, x179, 1), x2, 1);
    let x210: BytePoly_1 = bigint_nondet_rem!(ctx, bigint_mul!(x207, x209, 3), x2, 1);
    let x211: BytePoly_2 = bigint_mul!(x179, x210, 2);
    let x212: BytePoly_2 = bigint_add!(x211, x211, 2);
    let x213: BytePoly_3 = bigint_nondet_quot!(ctx, bigint_sub!(x208, x212, 2), x2, 3);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x213, x2, 4), x212, 4), x208, 4),
        24387,
        2,
    )?;
    let x214: BytePoly_2 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x210, x210, 2), x2, 2), x2, 2),
            x176,
            2
        ),
        x176,
        2
    );
    let x215: BytePoly_3 = bigint_nondet_quot!(ctx, x214, x2, 3);
    let x216: BytePoly_1 = bigint_nondet_rem!(ctx, x214, x2, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x215, x2, 4), x216, 4), x214, 4),
        24387,
        2,
    )?;
    let x217: BytePoly_2 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x15, bigint_mul!(x210, x216, 2), 2), x2, 2),
            x179,
            2
        ),
        bigint_mul!(x210, x176, 2),
        2
    );
    let x218: BytePoly_3 = bigint_nondet_quot!(ctx, x217, x2, 3);
    let x219: BytePoly_1 = bigint_nondet_rem!(ctx, x217, x2, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x218, x2, 4), x219, 4), x217, 4),
        24387,
        2,
    )?;
    let x220: BytePoly_1 = bigint_nondet_rem!(ctx, x181, x3, 1);
    let x221: BytePoly_1 = bigint_nondet_quot!(ctx, x181, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x221, x3, 2), x220, 2), x181, 2),
        8131,
        2,
    )?;
    let x222: BytePoly_1 = bigint_sub!(x4, x220, 1);
    eqz(ctx, &bigint_mul!(x220, x222, 2), 8131, 2)?;
    let x223: BytePoly_1 = bigint_add!(bigint_sub!(x219, x205, 1), x2, 1);
    let x224: BytePoly_1 = bigint_add!(bigint_sub!(x216, x203, 1), x2, 1);
    let x225: BytePoly_1 = bigint_nondet_inv!(ctx, x224, x2, 1);
    let x226: BytePoly_2 = bigint_mul!(x224, x225, 2);
    let x227: BytePoly_3 = bigint_nondet_quot!(ctx, x226, x2, 3);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x226, bigint_mul!(x227, x2, 4), 4), x1, 4),
        24387,
        2,
    )?;
    let x228: BytePoly_1 = bigint_nondet_rem!(ctx, bigint_mul!(x223, x225, 2), x2, 1);
    let x229: BytePoly_2 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x228, x224, 2), x223, 2), x2, 2),
        x2,
        2
    );
    let x230: BytePoly_3 = bigint_nondet_quot!(ctx, x229, x2, 3);
    eqz(
        ctx,
        &bigint_sub!(x229, bigint_mul!(x230, x2, 4), 4),
        24387,
        2,
    )?;
    let x231: BytePoly_2 = bigint_mul!(x228, x228, 2);
    let x232: BytePoly_2 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x231, x203, 2), x2, 2), x216, 2),
        x2,
        2
    );
    let x233: BytePoly_3 = bigint_nondet_quot!(ctx, x232, x2, 3);
    let x234: BytePoly_1 = bigint_nondet_rem!(ctx, x232, x2, 1);
    let x235: BytePoly_2 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x2,
                    bigint_add!(
                        bigint_mul!(x228, x234, 2),
                        bigint_add!(bigint_sub!(x205, bigint_mul!(x228, x203, 2), 2), x2, 2),
                        2
                    ),
                    2
                ),
                x2,
                2
            ),
            x2,
            2
        ),
        x15,
        2
    );
    let x236: BytePoly_3 = bigint_nondet_quot!(ctx, x235, x2, 3);
    let x237: BytePoly_1 = bigint_nondet_rem!(ctx, x235, x2, 1);
    let x238: BytePoly_4 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x231, bigint_mul!(x233, x2, 4), 4), x203, 4),
                    x216,
                    4
                ),
                x2,
                4
            ),
            x2,
            4
        ),
        x234,
        4
    );
    eqz(ctx, &x238, 24387, 2)?;
    let x239: BytePoly_4 = bigint_sub!(
        bigint_add!(bigint_mul!(x236, x2, 4), x237, 4),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x228, bigint_sub!(x203, x234, 1), 2), x205, 2),
                    x2,
                    2
                ),
                x2,
                2
            ),
            x15,
            2
        ),
        4
    );
    eqz(ctx, &x239, 24387, 2)?;
    let x240: BytePoly_2 = bigint_add!(bigint_mul!(x234, x220, 2), bigint_mul!(x203, x222, 2), 2);
    let x241: BytePoly_2 = bigint_add!(bigint_mul!(x237, x220, 2), bigint_mul!(x205, x222, 2), 2);
    let x242: BytePoly_3 = bigint_nondet_quot!(ctx, x240, x2, 3);
    let x243: BytePoly_1 = bigint_nondet_rem!(ctx, x240, x2, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x242, x2, 4), x243, 4), x240, 4),
        24387,
        2,
    )?;
    let x244: BytePoly_3 = bigint_nondet_quot!(ctx, x241, x2, 3);
    let x245: BytePoly_1 = bigint_nondet_rem!(ctx, x241, x2, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x244, x2, 4), x245, 4), x241, 4),
        24387,
        2,
    )?;
    let x246: BytePoly_2 = bigint_mul!(x216, x216, 2);
    let x247: BytePoly_2 = bigint_add!(bigint_add!(bigint_add!(x246, x246, 2), x246, 2), x1, 2);
    let x248: BytePoly_2 = bigint_add!(x47, x247, 2);
    let x249: BytePoly_1 = bigint_nondet_inv!(ctx, bigint_add!(x219, x219, 1), x2, 1);
    let x250: BytePoly_1 = bigint_nondet_rem!(ctx, bigint_mul!(x247, x249, 3), x2, 1);
    let x251: BytePoly_2 = bigint_mul!(x219, x250, 2);
    let x252: BytePoly_2 = bigint_add!(x251, x251, 2);
    let x253: BytePoly_3 = bigint_nondet_quot!(ctx, bigint_sub!(x248, x252, 2), x2, 3);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x253, x2, 4), x252, 4), x248, 4),
        24387,
        2,
    )?;
    let x254: BytePoly_2 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x250, x250, 2), x2, 2), x2, 2),
            x216,
            2
        ),
        x216,
        2
    );
    let x255: BytePoly_3 = bigint_nondet_quot!(ctx, x254, x2, 3);
    let x256: BytePoly_1 = bigint_nondet_rem!(ctx, x254, x2, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x255, x2, 4), x256, 4), x254, 4),
        24387,
        2,
    )?;
    let x257: BytePoly_2 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x15, bigint_mul!(x250, x256, 2), 2), x2, 2),
            x219,
            2
        ),
        bigint_mul!(x250, x216, 2),
        2
    );
    let x258: BytePoly_3 = bigint_nondet_quot!(ctx, x257, x2, 3);
    let x259: BytePoly_1 = bigint_nondet_rem!(ctx, x257, x2, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x258, x2, 4), x259, 4), x257, 4),
        24387,
        2,
    )?;
    let x260: BytePoly_1 = bigint_nondet_rem!(ctx, x221, x3, 1);
    let x261: BytePoly_1 = bigint_nondet_quot!(ctx, x221, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x261, x3, 2), x260, 2), x221, 2),
        8131,
        2,
    )?;
    let x262: BytePoly_1 = bigint_sub!(x4, x260, 1);
    eqz(ctx, &bigint_mul!(x260, x262, 2), 8131, 2)?;
    let x263: BytePoly_1 = bigint_add!(bigint_sub!(x259, x245, 1), x2, 1);
    let x264: BytePoly_1 = bigint_add!(bigint_sub!(x256, x243, 1), x2, 1);
    let x265: BytePoly_1 = bigint_nondet_inv!(ctx, x264, x2, 1);
    let x266: BytePoly_2 = bigint_mul!(x264, x265, 2);
    let x267: BytePoly_3 = bigint_nondet_quot!(ctx, x266, x2, 3);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x266, bigint_mul!(x267, x2, 4), 4), x1, 4),
        24387,
        2,
    )?;
    let x268: BytePoly_1 = bigint_nondet_rem!(ctx, bigint_mul!(x263, x265, 2), x2, 1);
    let x269: BytePoly_2 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x268, x264, 2), x263, 2), x2, 2),
        x2,
        2
    );
    let x270: BytePoly_3 = bigint_nondet_quot!(ctx, x269, x2, 3);
    eqz(
        ctx,
        &bigint_sub!(x269, bigint_mul!(x270, x2, 4), 4),
        24387,
        2,
    )?;
    let x271: BytePoly_2 = bigint_mul!(x268, x268, 2);
    let x272: BytePoly_2 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x271, x243, 2), x2, 2), x256, 2),
        x2,
        2
    );
    let x273: BytePoly_3 = bigint_nondet_quot!(ctx, x272, x2, 3);
    let x274: BytePoly_1 = bigint_nondet_rem!(ctx, x272, x2, 1);
    let x275: BytePoly_2 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x2,
                    bigint_add!(
                        bigint_mul!(x268, x274, 2),
                        bigint_add!(bigint_sub!(x245, bigint_mul!(x268, x243, 2), 2), x2, 2),
                        2
                    ),
                    2
                ),
                x2,
                2
            ),
            x2,
            2
        ),
        x15,
        2
    );
    let x276: BytePoly_3 = bigint_nondet_quot!(ctx, x275, x2, 3);
    let x277: BytePoly_1 = bigint_nondet_rem!(ctx, x275, x2, 1);
    let x278: BytePoly_4 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x271, bigint_mul!(x273, x2, 4), 4), x243, 4),
                    x256,
                    4
                ),
                x2,
                4
            ),
            x2,
            4
        ),
        x274,
        4
    );
    eqz(ctx, &x278, 24387, 2)?;
    let x279: BytePoly_4 = bigint_sub!(
        bigint_add!(bigint_mul!(x276, x2, 4), x277, 4),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x268, bigint_sub!(x243, x274, 1), 2), x245, 2),
                    x2,
                    2
                ),
                x2,
                2
            ),
            x15,
            2
        ),
        4
    );
    eqz(ctx, &x279, 24387, 2)?;
    let x280: BytePoly_2 = bigint_add!(bigint_mul!(x274, x260, 2), bigint_mul!(x243, x262, 2), 2);
    let x281: BytePoly_2 = bigint_add!(bigint_mul!(x277, x260, 2), bigint_mul!(x245, x262, 2), 2);
    let x282: BytePoly_3 = bigint_nondet_quot!(ctx, x280, x2, 3);
    let x283: BytePoly_1 = bigint_nondet_rem!(ctx, x280, x2, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x282, x2, 4), x283, 4), x280, 4),
        24387,
        2,
    )?;
    let x284: BytePoly_3 = bigint_nondet_quot!(ctx, x281, x2, 3);
    let x285: BytePoly_1 = bigint_nondet_rem!(ctx, x281, x2, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x284, x2, 4), x285, 4), x281, 4),
        24387,
        2,
    )?;
    let x286: BytePoly_2 = bigint_mul!(x256, x256, 2);
    let x287: BytePoly_2 = bigint_add!(bigint_add!(bigint_add!(x286, x286, 2), x286, 2), x1, 2);
    let x288: BytePoly_2 = bigint_add!(x47, x287, 2);
    let x289: BytePoly_1 = bigint_nondet_inv!(ctx, bigint_add!(x259, x259, 1), x2, 1);
    let x290: BytePoly_1 = bigint_nondet_rem!(ctx, bigint_mul!(x287, x289, 3), x2, 1);
    let x291: BytePoly_2 = bigint_mul!(x259, x290, 2);
    let x292: BytePoly_2 = bigint_add!(x291, x291, 2);
    let x293: BytePoly_3 = bigint_nondet_quot!(ctx, bigint_sub!(x288, x292, 2), x2, 3);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x293, x2, 4), x292, 4), x288, 4),
        24387,
        2,
    )?;
    let x294: BytePoly_2 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x290, x290, 2), x2, 2), x2, 2),
            x256,
            2
        ),
        x256,
        2
    );
    let x295: BytePoly_3 = bigint_nondet_quot!(ctx, x294, x2, 3);
    let x296: BytePoly_1 = bigint_nondet_rem!(ctx, x294, x2, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x295, x2, 4), x296, 4), x294, 4),
        24387,
        2,
    )?;
    let x297: BytePoly_2 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x15, bigint_mul!(x290, x296, 2), 2), x2, 2),
            x259,
            2
        ),
        bigint_mul!(x290, x256, 2),
        2
    );
    let x298: BytePoly_3 = bigint_nondet_quot!(ctx, x297, x2, 3);
    let x299: BytePoly_1 = bigint_nondet_rem!(ctx, x297, x2, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x298, x2, 4), x299, 4), x297, 4),
        24387,
        2,
    )?;
    let x300: BytePoly_1 = bigint_nondet_rem!(ctx, x261, x3, 1);
    let x301: BytePoly_1 = bigint_nondet_quot!(ctx, x261, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x301, x3, 2), x300, 2), x261, 2),
        8131,
        2,
    )?;
    let x302: BytePoly_1 = bigint_sub!(x4, x300, 1);
    eqz(ctx, &bigint_mul!(x300, x302, 2), 8131, 2)?;
    let x303: BytePoly_1 = bigint_add!(bigint_sub!(x299, x285, 1), x2, 1);
    let x304: BytePoly_1 = bigint_add!(bigint_sub!(x296, x283, 1), x2, 1);
    let x305: BytePoly_1 = bigint_nondet_inv!(ctx, x304, x2, 1);
    let x306: BytePoly_2 = bigint_mul!(x304, x305, 2);
    let x307: BytePoly_3 = bigint_nondet_quot!(ctx, x306, x2, 3);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x306, bigint_mul!(x307, x2, 4), 4), x1, 4),
        24387,
        2,
    )?;
    let x308: BytePoly_1 = bigint_nondet_rem!(ctx, bigint_mul!(x303, x305, 2), x2, 1);
    let x309: BytePoly_2 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x308, x304, 2), x303, 2), x2, 2),
        x2,
        2
    );
    let x310: BytePoly_3 = bigint_nondet_quot!(ctx, x309, x2, 3);
    eqz(
        ctx,
        &bigint_sub!(x309, bigint_mul!(x310, x2, 4), 4),
        24387,
        2,
    )?;
    let x311: BytePoly_2 = bigint_mul!(x308, x308, 2);
    let x312: BytePoly_2 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x311, x283, 2), x2, 2), x296, 2),
        x2,
        2
    );
    let x313: BytePoly_3 = bigint_nondet_quot!(ctx, x312, x2, 3);
    let x314: BytePoly_1 = bigint_nondet_rem!(ctx, x312, x2, 1);
    let x315: BytePoly_2 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x2,
                    bigint_add!(
                        bigint_mul!(x308, x314, 2),
                        bigint_add!(bigint_sub!(x285, bigint_mul!(x308, x283, 2), 2), x2, 2),
                        2
                    ),
                    2
                ),
                x2,
                2
            ),
            x2,
            2
        ),
        x15,
        2
    );
    let x316: BytePoly_3 = bigint_nondet_quot!(ctx, x315, x2, 3);
    let x317: BytePoly_1 = bigint_nondet_rem!(ctx, x315, x2, 1);
    let x318: BytePoly_4 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x311, bigint_mul!(x313, x2, 4), 4), x283, 4),
                    x296,
                    4
                ),
                x2,
                4
            ),
            x2,
            4
        ),
        x314,
        4
    );
    eqz(ctx, &x318, 24387, 2)?;
    let x319: BytePoly_4 = bigint_sub!(
        bigint_add!(bigint_mul!(x316, x2, 4), x317, 4),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x308, bigint_sub!(x283, x314, 1), 2), x285, 2),
                    x2,
                    2
                ),
                x2,
                2
            ),
            x15,
            2
        ),
        4
    );
    eqz(ctx, &x319, 24387, 2)?;
    let x320: BytePoly_2 = bigint_add!(bigint_mul!(x314, x300, 2), bigint_mul!(x283, x302, 2), 2);
    let x321: BytePoly_2 = bigint_add!(bigint_mul!(x317, x300, 2), bigint_mul!(x285, x302, 2), 2);
    let x322: BytePoly_3 = bigint_nondet_quot!(ctx, x320, x2, 3);
    let x323: BytePoly_1 = bigint_nondet_rem!(ctx, x320, x2, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x322, x2, 4), x323, 4), x320, 4),
        24387,
        2,
    )?;
    let x324: BytePoly_3 = bigint_nondet_quot!(ctx, x321, x2, 3);
    let x325: BytePoly_1 = bigint_nondet_rem!(ctx, x321, x2, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x324, x2, 4), x325, 4), x321, 4),
        24387,
        2,
    )?;
    let x326: BytePoly_2 = bigint_mul!(x296, x296, 2);
    let x327: BytePoly_2 = bigint_add!(bigint_add!(bigint_add!(x326, x326, 2), x326, 2), x1, 2);
    let x328: BytePoly_2 = bigint_add!(x47, x327, 2);
    let x329: BytePoly_1 = bigint_nondet_inv!(ctx, bigint_add!(x299, x299, 1), x2, 1);
    let x330: BytePoly_1 = bigint_nondet_rem!(ctx, bigint_mul!(x327, x329, 3), x2, 1);
    let x331: BytePoly_2 = bigint_mul!(x299, x330, 2);
    let x332: BytePoly_2 = bigint_add!(x331, x331, 2);
    let x333: BytePoly_3 = bigint_nondet_quot!(ctx, bigint_sub!(x328, x332, 2), x2, 3);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x333, x2, 4), x332, 4), x328, 4),
        24387,
        2,
    )?;
    let x334: BytePoly_2 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x330, x330, 2), x2, 2), x2, 2),
            x296,
            2
        ),
        x296,
        2
    );
    let x335: BytePoly_3 = bigint_nondet_quot!(ctx, x334, x2, 3);
    let x336: BytePoly_1 = bigint_nondet_rem!(ctx, x334, x2, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x335, x2, 4), x336, 4), x334, 4),
        24387,
        2,
    )?;
    let x337: BytePoly_2 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x15, bigint_mul!(x330, x336, 2), 2), x2, 2),
            x299,
            2
        ),
        bigint_mul!(x330, x296, 2),
        2
    );
    let x338: BytePoly_3 = bigint_nondet_quot!(ctx, x337, x2, 3);
    let x339: BytePoly_1 = bigint_nondet_rem!(ctx, x337, x2, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x338, x2, 4), x339, 4), x337, 4),
        24387,
        2,
    )?;
    let x340: BytePoly_1 = bigint_add!(bigint_sub!(bigint_sub!(x2, x9, 1), x325, 1), x2, 1);
    let x341: BytePoly_1 = bigint_add!(bigint_sub!(x8, x323, 1), x2, 1);
    let x342: BytePoly_1 = bigint_nondet_inv!(ctx, x341, x2, 1);
    let x343: BytePoly_2 = bigint_mul!(x341, x342, 2);
    let x344: BytePoly_3 = bigint_nondet_quot!(ctx, x343, x2, 3);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x343, bigint_mul!(x344, x2, 4), 4), x1, 4),
        24387,
        2,
    )?;
    let x345: BytePoly_1 = bigint_nondet_rem!(ctx, bigint_mul!(x340, x342, 2), x2, 1);
    let x346: BytePoly_2 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x345, x341, 2), x340, 2), x2, 2),
        x2,
        2
    );
    let x347: BytePoly_3 = bigint_nondet_quot!(ctx, x346, x2, 3);
    eqz(
        ctx,
        &bigint_sub!(x346, bigint_mul!(x347, x2, 4), 4),
        24387,
        2,
    )?;
    let x348: BytePoly_2 = bigint_mul!(x345, x345, 2);
    let x349: BytePoly_2 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x348, x323, 2), x2, 2), x8, 2),
        x2,
        2
    );
    let x350: BytePoly_3 = bigint_nondet_quot!(ctx, x349, x2, 3);
    let x351: BytePoly_1 = bigint_nondet_rem!(ctx, x349, x2, 1);
    let x352: BytePoly_2 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x2,
                    bigint_add!(
                        bigint_mul!(x345, x351, 2),
                        bigint_add!(bigint_sub!(x325, bigint_mul!(x345, x323, 2), 2), x2, 2),
                        2
                    ),
                    2
                ),
                x2,
                2
            ),
            x2,
            2
        ),
        x15,
        2
    );
    let x353: BytePoly_3 = bigint_nondet_quot!(ctx, x352, x2, 3);
    let x354: BytePoly_1 = bigint_nondet_rem!(ctx, x352, x2, 1);
    let x355: BytePoly_4 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x348, bigint_mul!(x350, x2, 4), 4), x323, 4),
                    x8,
                    4
                ),
                x2,
                4
            ),
            x2,
            4
        ),
        x351,
        4
    );
    eqz(ctx, &x355, 24387, 2)?;
    let x356: BytePoly_4 = bigint_sub!(
        bigint_add!(bigint_mul!(x353, x2, 4), x354, 4),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x345, bigint_sub!(x323, x351, 1), 2), x325, 2),
                    x2,
                    2
                ),
                x2,
                2
            ),
            x15,
            2
        ),
        4
    );
    eqz(ctx, &x356, 24387, 2)?;
    eqz(ctx, &bigint_sub!(x351, x10, 1), 34, 1)?;
    eqz(ctx, &bigint_sub!(x354, x11, 1), 34, 1)?;
    return Ok(());
}
pub fn ec_mul_secp256k1(ctx: &mut BigIntContext) -> Result<()> {
    let x0: BytePoly_1 = bigint_const!(ctx, 1);
    let x1: BytePoly_1 = bigint_const!(ctx, 7);
    let x2: BytePoly_1 = bigint_const!(ctx, 0);
    let x3: BytePoly_32 = bigint_const!(
        ctx, 47, 252, 255, 255, 254, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
        255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255
    );
    let x4: BytePoly_1 = bigint_const!(ctx, 2);
    let x5: BytePoly_1 = bigint_const!(ctx, 1);
    let x6: BytePoly_32 = bigint_def!(ctx, 32, 0, 1);
    let x7: BytePoly_32 = bigint_def!(ctx, 32, 1, 1);
    let x8: BytePoly_32 = bigint_def!(ctx, 32, 2, 1);
    let x9: BytePoly_32 = bigint_def!(ctx, 32, 3, 1);
    let x10: BytePoly_32 = bigint_def!(ctx, 32, 4, 1);
    let x11: BytePoly_32 = bigint_def!(ctx, 32, 5, 1);
    let x12: BytePoly_32 = bigint_def!(ctx, 32, 6, 1);
    eqz(ctx, &bigint_sub!(x6, x6, 32), 34, 1)?;
    eqz(ctx, &bigint_sub!(x7, x7, 32), 34, 1)?;
    eqz(ctx, &bigint_sub!(x8, x8, 32), 34, 1)?;
    eqz(ctx, &bigint_sub!(x9, x9, 32), 34, 1)?;
    eqz(ctx, &bigint_sub!(x10, x10, 32), 34, 1)?;
    eqz(ctx, &bigint_sub!(x11, x11, 32), 34, 1)?;
    eqz(ctx, &bigint_sub!(x12, x12, 32), 34, 1)?;
    let x13: BytePoly_64 = bigint_mul!(x9, x9, 64);
    let x14: BytePoly_34 = bigint_nondet_quot!(ctx, x13, x3, 34);
    let x15: BytePoly_32 = bigint_nondet_rem!(ctx, x13, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x14, x3, 66), x15, 66), x13, 66),
        276359,
        4,
    )?;
    let x16: BytePoly_64 = bigint_mul!(x3, x3, 64);
    let x17: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_add!(bigint_mul!(x9, x15, 64), bigint_mul!(x9, x2, 33), 64),
                x1,
                64
            ),
            bigint_mul!(x10, x10, 64),
            64
        ),
        x16,
        64
    );
    let x18: BytePoly_34 = bigint_nondet_quot!(ctx, x17, x3, 34);
    let x19: BytePoly_32 = bigint_nondet_rem!(ctx, x17, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x18, x3, 66), x19, 66), x17, 66),
        276359,
        4,
    )?;
    eqz(ctx, &x19, 34, 1)?;
    let x20: BytePoly_1 = bigint_nondet_rem!(ctx, x8, x4, 1);
    let x21: BytePoly_32 = bigint_nondet_quot!(ctx, x8, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x21, x4, 33), x20, 33), x8, 33),
        260103,
        4,
    )?;
    let x22: BytePoly_1 = bigint_sub!(x5, x20, 1);
    eqz(ctx, &bigint_mul!(x20, x22, 2), 8131, 2)?;
    let x23: BytePoly_32 = bigint_add!(bigint_sub!(x7, x10, 32), x3, 32);
    let x24: BytePoly_32 = bigint_add!(bigint_sub!(x6, x9, 32), x3, 32);
    let x25: BytePoly_32 = bigint_nondet_inv!(ctx, x24, x3, 32);
    let x26: BytePoly_64 = bigint_mul!(x24, x25, 64);
    let x27: BytePoly_34 = bigint_nondet_quot!(ctx, x26, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x26, bigint_mul!(x27, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x28: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x23, x25, 64), x3, 32);
    let x29: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x28, x24, 64), x23, 64), x3, 64),
        x3,
        64
    );
    let x30: BytePoly_34 = bigint_nondet_quot!(ctx, x29, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x29, bigint_mul!(x30, x3, 66), 66),
        276359,
        4,
    )?;
    let x31: BytePoly_64 = bigint_mul!(x28, x28, 64);
    let x32: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x31, x9, 64), x3, 64), x6, 64),
        x3,
        64
    );
    let x33: BytePoly_34 = bigint_nondet_quot!(ctx, x32, x3, 34);
    let x34: BytePoly_32 = bigint_nondet_rem!(ctx, x32, x3, 32);
    let x35: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x28, x34, 64),
                        bigint_add!(bigint_sub!(x10, bigint_mul!(x28, x9, 64), 64), x3, 64),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x36: BytePoly_34 = bigint_nondet_quot!(ctx, x35, x3, 34);
    let x37: BytePoly_32 = bigint_nondet_rem!(ctx, x35, x3, 32);
    let x38: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x31, bigint_mul!(x33, x3, 66), 66), x9, 66),
                    x6,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x34,
        66
    );
    eqz(ctx, &x38, 276359, 4)?;
    let x39: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x36, x3, 66), x37, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x28, bigint_sub!(x9, x34, 32), 64), x10, 64),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x39, 276359, 4)?;
    let x40: BytePoly_33 = bigint_add!(bigint_mul!(x34, x20, 33), bigint_mul!(x9, x22, 33), 33);
    let x41: BytePoly_33 = bigint_add!(bigint_mul!(x37, x20, 33), bigint_mul!(x10, x22, 33), 33);
    let x42: BytePoly_3 = bigint_nondet_quot!(ctx, x40, x3, 3);
    let x43: BytePoly_32 = bigint_nondet_rem!(ctx, x40, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x42, x3, 35), x43, 35), x40, 35),
        260103,
        4,
    )?;
    let x44: BytePoly_3 = bigint_nondet_quot!(ctx, x41, x3, 3);
    let x45: BytePoly_32 = bigint_nondet_rem!(ctx, x41, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x44, x3, 35), x45, 35), x41, 35),
        260103,
        4,
    )?;
    let x46: BytePoly_64 = bigint_mul!(x6, x6, 64);
    let x47: BytePoly_64 = bigint_add!(bigint_add!(bigint_add!(x46, x46, 64), x46, 64), x2, 64);
    let x48: BytePoly_64 = bigint_add!(x16, x16, 64);
    let x49: BytePoly_64 = bigint_add!(x48, x47, 64);
    let x50: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x7, x7, 32), x3, 32);
    let x51: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x47, x50, 96), x3, 32);
    let x52: BytePoly_64 = bigint_mul!(x7, x51, 64);
    let x53: BytePoly_64 = bigint_add!(x52, x52, 64);
    let x54: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x49, x53, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x54, x3, 66), x53, 66), x49, 66),
        276359,
        4,
    )?;
    let x55: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x51, x51, 64), x3, 64), x3, 64),
            x6,
            64
        ),
        x6,
        64
    );
    let x56: BytePoly_34 = bigint_nondet_quot!(ctx, x55, x3, 34);
    let x57: BytePoly_32 = bigint_nondet_rem!(ctx, x55, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x56, x3, 66), x57, 66), x55, 66),
        276359,
        4,
    )?;
    let x58: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x51, x57, 64), 64), x3, 64),
            x7,
            64
        ),
        bigint_mul!(x51, x6, 64),
        64
    );
    let x59: BytePoly_34 = bigint_nondet_quot!(ctx, x58, x3, 34);
    let x60: BytePoly_32 = bigint_nondet_rem!(ctx, x58, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x59, x3, 66), x60, 66), x58, 66),
        276359,
        4,
    )?;
    let x61: BytePoly_1 = bigint_nondet_rem!(ctx, x21, x4, 1);
    let x62: BytePoly_32 = bigint_nondet_quot!(ctx, x21, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x62, x4, 33), x61, 33), x21, 33),
        260103,
        4,
    )?;
    let x63: BytePoly_1 = bigint_sub!(x5, x61, 1);
    eqz(ctx, &bigint_mul!(x61, x63, 2), 8131, 2)?;
    let x64: BytePoly_32 = bigint_add!(bigint_sub!(x60, x45, 32), x3, 32);
    let x65: BytePoly_32 = bigint_add!(bigint_sub!(x57, x43, 32), x3, 32);
    let x66: BytePoly_32 = bigint_nondet_inv!(ctx, x65, x3, 32);
    let x67: BytePoly_64 = bigint_mul!(x65, x66, 64);
    let x68: BytePoly_34 = bigint_nondet_quot!(ctx, x67, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x67, bigint_mul!(x68, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x69: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x64, x66, 64), x3, 32);
    let x70: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x69, x65, 64), x64, 64), x3, 64),
        x3,
        64
    );
    let x71: BytePoly_34 = bigint_nondet_quot!(ctx, x70, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x70, bigint_mul!(x71, x3, 66), 66),
        276359,
        4,
    )?;
    let x72: BytePoly_64 = bigint_mul!(x69, x69, 64);
    let x73: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x72, x43, 64), x3, 64), x57, 64),
        x3,
        64
    );
    let x74: BytePoly_34 = bigint_nondet_quot!(ctx, x73, x3, 34);
    let x75: BytePoly_32 = bigint_nondet_rem!(ctx, x73, x3, 32);
    let x76: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x69, x75, 64),
                        bigint_add!(bigint_sub!(x45, bigint_mul!(x69, x43, 64), 64), x3, 64),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x77: BytePoly_34 = bigint_nondet_quot!(ctx, x76, x3, 34);
    let x78: BytePoly_32 = bigint_nondet_rem!(ctx, x76, x3, 32);
    let x79: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x72, bigint_mul!(x74, x3, 66), 66), x43, 66),
                    x57,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x75,
        66
    );
    eqz(ctx, &x79, 276359, 4)?;
    let x80: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x77, x3, 66), x78, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x69, bigint_sub!(x43, x75, 32), 64), x45, 64),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x80, 276359, 4)?;
    let x81: BytePoly_33 = bigint_add!(bigint_mul!(x75, x61, 33), bigint_mul!(x43, x63, 33), 33);
    let x82: BytePoly_33 = bigint_add!(bigint_mul!(x78, x61, 33), bigint_mul!(x45, x63, 33), 33);
    let x83: BytePoly_3 = bigint_nondet_quot!(ctx, x81, x3, 3);
    let x84: BytePoly_32 = bigint_nondet_rem!(ctx, x81, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x83, x3, 35), x84, 35), x81, 35),
        260103,
        4,
    )?;
    let x85: BytePoly_3 = bigint_nondet_quot!(ctx, x82, x3, 3);
    let x86: BytePoly_32 = bigint_nondet_rem!(ctx, x82, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x85, x3, 35), x86, 35), x82, 35),
        260103,
        4,
    )?;
    let x87: BytePoly_64 = bigint_mul!(x57, x57, 64);
    let x88: BytePoly_64 = bigint_add!(bigint_add!(bigint_add!(x87, x87, 64), x87, 64), x2, 64);
    let x89: BytePoly_64 = bigint_add!(x48, x88, 64);
    let x90: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x60, x60, 32), x3, 32);
    let x91: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x88, x90, 96), x3, 32);
    let x92: BytePoly_64 = bigint_mul!(x60, x91, 64);
    let x93: BytePoly_64 = bigint_add!(x92, x92, 64);
    let x94: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x89, x93, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x94, x3, 66), x93, 66), x89, 66),
        276359,
        4,
    )?;
    let x95: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x91, x91, 64), x3, 64), x3, 64),
            x57,
            64
        ),
        x57,
        64
    );
    let x96: BytePoly_34 = bigint_nondet_quot!(ctx, x95, x3, 34);
    let x97: BytePoly_32 = bigint_nondet_rem!(ctx, x95, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x96, x3, 66), x97, 66), x95, 66),
        276359,
        4,
    )?;
    let x98: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x91, x97, 64), 64), x3, 64),
            x60,
            64
        ),
        bigint_mul!(x91, x57, 64),
        64
    );
    let x99: BytePoly_34 = bigint_nondet_quot!(ctx, x98, x3, 34);
    let x100: BytePoly_32 = bigint_nondet_rem!(ctx, x98, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x99, x3, 66), x100, 66), x98, 66),
        276359,
        4,
    )?;
    let x101: BytePoly_1 = bigint_nondet_rem!(ctx, x62, x4, 1);
    let x102: BytePoly_32 = bigint_nondet_quot!(ctx, x62, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x102, x4, 33), x101, 33), x62, 33),
        260103,
        4,
    )?;
    let x103: BytePoly_1 = bigint_sub!(x5, x101, 1);
    eqz(ctx, &bigint_mul!(x101, x103, 2), 8131, 2)?;
    let x104: BytePoly_32 = bigint_add!(bigint_sub!(x100, x86, 32), x3, 32);
    let x105: BytePoly_32 = bigint_add!(bigint_sub!(x97, x84, 32), x3, 32);
    let x106: BytePoly_32 = bigint_nondet_inv!(ctx, x105, x3, 32);
    let x107: BytePoly_64 = bigint_mul!(x105, x106, 64);
    let x108: BytePoly_34 = bigint_nondet_quot!(ctx, x107, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x107, bigint_mul!(x108, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x109: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x104, x106, 64), x3, 32);
    let x110: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x109, x105, 64), x104, 64), x3, 64),
        x3,
        64
    );
    let x111: BytePoly_34 = bigint_nondet_quot!(ctx, x110, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x110, bigint_mul!(x111, x3, 66), 66),
        276359,
        4,
    )?;
    let x112: BytePoly_64 = bigint_mul!(x109, x109, 64);
    let x113: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x112, x84, 64), x3, 64), x97, 64),
        x3,
        64
    );
    let x114: BytePoly_34 = bigint_nondet_quot!(ctx, x113, x3, 34);
    let x115: BytePoly_32 = bigint_nondet_rem!(ctx, x113, x3, 32);
    let x116: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x109, x115, 64),
                        bigint_add!(bigint_sub!(x86, bigint_mul!(x109, x84, 64), 64), x3, 64),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x117: BytePoly_34 = bigint_nondet_quot!(ctx, x116, x3, 34);
    let x118: BytePoly_32 = bigint_nondet_rem!(ctx, x116, x3, 32);
    let x119: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x112, bigint_mul!(x114, x3, 66), 66), x84, 66),
                    x97,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x115,
        66
    );
    eqz(ctx, &x119, 276359, 4)?;
    let x120: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x117, x3, 66), x118, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x109, bigint_sub!(x84, x115, 32), 64), x86, 64),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x120, 276359, 4)?;
    let x121: BytePoly_33 =
        bigint_add!(bigint_mul!(x115, x101, 33), bigint_mul!(x84, x103, 33), 33);
    let x122: BytePoly_33 =
        bigint_add!(bigint_mul!(x118, x101, 33), bigint_mul!(x86, x103, 33), 33);
    let x123: BytePoly_3 = bigint_nondet_quot!(ctx, x121, x3, 3);
    let x124: BytePoly_32 = bigint_nondet_rem!(ctx, x121, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x123, x3, 35), x124, 35), x121, 35),
        260103,
        4,
    )?;
    let x125: BytePoly_3 = bigint_nondet_quot!(ctx, x122, x3, 3);
    let x126: BytePoly_32 = bigint_nondet_rem!(ctx, x122, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x125, x3, 35), x126, 35), x122, 35),
        260103,
        4,
    )?;
    let x127: BytePoly_64 = bigint_mul!(x97, x97, 64);
    let x128: BytePoly_64 = bigint_add!(bigint_add!(bigint_add!(x127, x127, 64), x127, 64), x2, 64);
    let x129: BytePoly_64 = bigint_add!(x48, x128, 64);
    let x130: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x100, x100, 32), x3, 32);
    let x131: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x128, x130, 96), x3, 32);
    let x132: BytePoly_64 = bigint_mul!(x100, x131, 64);
    let x133: BytePoly_64 = bigint_add!(x132, x132, 64);
    let x134: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x129, x133, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x134, x3, 66), x133, 66), x129, 66),
        276359,
        4,
    )?;
    let x135: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x131, x131, 64), x3, 64), x3, 64),
            x97,
            64
        ),
        x97,
        64
    );
    let x136: BytePoly_34 = bigint_nondet_quot!(ctx, x135, x3, 34);
    let x137: BytePoly_32 = bigint_nondet_rem!(ctx, x135, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x136, x3, 66), x137, 66), x135, 66),
        276359,
        4,
    )?;
    let x138: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x131, x137, 64), 64), x3, 64),
            x100,
            64
        ),
        bigint_mul!(x131, x97, 64),
        64
    );
    let x139: BytePoly_34 = bigint_nondet_quot!(ctx, x138, x3, 34);
    let x140: BytePoly_32 = bigint_nondet_rem!(ctx, x138, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x139, x3, 66), x140, 66), x138, 66),
        276359,
        4,
    )?;
    let x141: BytePoly_1 = bigint_nondet_rem!(ctx, x102, x4, 1);
    let x142: BytePoly_32 = bigint_nondet_quot!(ctx, x102, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x142, x4, 33), x141, 33), x102, 33),
        260103,
        4,
    )?;
    let x143: BytePoly_1 = bigint_sub!(x5, x141, 1);
    eqz(ctx, &bigint_mul!(x141, x143, 2), 8131, 2)?;
    let x144: BytePoly_32 = bigint_add!(bigint_sub!(x140, x126, 32), x3, 32);
    let x145: BytePoly_32 = bigint_add!(bigint_sub!(x137, x124, 32), x3, 32);
    let x146: BytePoly_32 = bigint_nondet_inv!(ctx, x145, x3, 32);
    let x147: BytePoly_64 = bigint_mul!(x145, x146, 64);
    let x148: BytePoly_34 = bigint_nondet_quot!(ctx, x147, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x147, bigint_mul!(x148, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x149: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x144, x146, 64), x3, 32);
    let x150: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x149, x145, 64), x144, 64), x3, 64),
        x3,
        64
    );
    let x151: BytePoly_34 = bigint_nondet_quot!(ctx, x150, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x150, bigint_mul!(x151, x3, 66), 66),
        276359,
        4,
    )?;
    let x152: BytePoly_64 = bigint_mul!(x149, x149, 64);
    let x153: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x152, x124, 64), x3, 64), x137, 64),
        x3,
        64
    );
    let x154: BytePoly_34 = bigint_nondet_quot!(ctx, x153, x3, 34);
    let x155: BytePoly_32 = bigint_nondet_rem!(ctx, x153, x3, 32);
    let x156: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x149, x155, 64),
                        bigint_add!(bigint_sub!(x126, bigint_mul!(x149, x124, 64), 64), x3, 64),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x157: BytePoly_34 = bigint_nondet_quot!(ctx, x156, x3, 34);
    let x158: BytePoly_32 = bigint_nondet_rem!(ctx, x156, x3, 32);
    let x159: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x152, bigint_mul!(x154, x3, 66), 66), x124, 66),
                    x137,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x155,
        66
    );
    eqz(ctx, &x159, 276359, 4)?;
    let x160: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x157, x3, 66), x158, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x149, bigint_sub!(x124, x155, 32), 64), x126, 64),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x160, 276359, 4)?;
    let x161: BytePoly_33 =
        bigint_add!(bigint_mul!(x155, x141, 33), bigint_mul!(x124, x143, 33), 33);
    let x162: BytePoly_33 =
        bigint_add!(bigint_mul!(x158, x141, 33), bigint_mul!(x126, x143, 33), 33);
    let x163: BytePoly_3 = bigint_nondet_quot!(ctx, x161, x3, 3);
    let x164: BytePoly_32 = bigint_nondet_rem!(ctx, x161, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x163, x3, 35), x164, 35), x161, 35),
        260103,
        4,
    )?;
    let x165: BytePoly_3 = bigint_nondet_quot!(ctx, x162, x3, 3);
    let x166: BytePoly_32 = bigint_nondet_rem!(ctx, x162, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x165, x3, 35), x166, 35), x162, 35),
        260103,
        4,
    )?;
    let x167: BytePoly_64 = bigint_mul!(x137, x137, 64);
    let x168: BytePoly_64 = bigint_add!(bigint_add!(bigint_add!(x167, x167, 64), x167, 64), x2, 64);
    let x169: BytePoly_64 = bigint_add!(x48, x168, 64);
    let x170: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x140, x140, 32), x3, 32);
    let x171: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x168, x170, 96), x3, 32);
    let x172: BytePoly_64 = bigint_mul!(x140, x171, 64);
    let x173: BytePoly_64 = bigint_add!(x172, x172, 64);
    let x174: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x169, x173, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x174, x3, 66), x173, 66), x169, 66),
        276359,
        4,
    )?;
    let x175: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x171, x171, 64), x3, 64), x3, 64),
            x137,
            64
        ),
        x137,
        64
    );
    let x176: BytePoly_34 = bigint_nondet_quot!(ctx, x175, x3, 34);
    let x177: BytePoly_32 = bigint_nondet_rem!(ctx, x175, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x176, x3, 66), x177, 66), x175, 66),
        276359,
        4,
    )?;
    let x178: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x171, x177, 64), 64), x3, 64),
            x140,
            64
        ),
        bigint_mul!(x171, x137, 64),
        64
    );
    let x179: BytePoly_34 = bigint_nondet_quot!(ctx, x178, x3, 34);
    let x180: BytePoly_32 = bigint_nondet_rem!(ctx, x178, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x179, x3, 66), x180, 66), x178, 66),
        276359,
        4,
    )?;
    let x181: BytePoly_1 = bigint_nondet_rem!(ctx, x142, x4, 1);
    let x182: BytePoly_32 = bigint_nondet_quot!(ctx, x142, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x182, x4, 33), x181, 33), x142, 33),
        260103,
        4,
    )?;
    let x183: BytePoly_1 = bigint_sub!(x5, x181, 1);
    eqz(ctx, &bigint_mul!(x181, x183, 2), 8131, 2)?;
    let x184: BytePoly_32 = bigint_add!(bigint_sub!(x180, x166, 32), x3, 32);
    let x185: BytePoly_32 = bigint_add!(bigint_sub!(x177, x164, 32), x3, 32);
    let x186: BytePoly_32 = bigint_nondet_inv!(ctx, x185, x3, 32);
    let x187: BytePoly_64 = bigint_mul!(x185, x186, 64);
    let x188: BytePoly_34 = bigint_nondet_quot!(ctx, x187, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x187, bigint_mul!(x188, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x189: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x184, x186, 64), x3, 32);
    let x190: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x189, x185, 64), x184, 64), x3, 64),
        x3,
        64
    );
    let x191: BytePoly_34 = bigint_nondet_quot!(ctx, x190, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x190, bigint_mul!(x191, x3, 66), 66),
        276359,
        4,
    )?;
    let x192: BytePoly_64 = bigint_mul!(x189, x189, 64);
    let x193: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x192, x164, 64), x3, 64), x177, 64),
        x3,
        64
    );
    let x194: BytePoly_34 = bigint_nondet_quot!(ctx, x193, x3, 34);
    let x195: BytePoly_32 = bigint_nondet_rem!(ctx, x193, x3, 32);
    let x196: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x189, x195, 64),
                        bigint_add!(bigint_sub!(x166, bigint_mul!(x189, x164, 64), 64), x3, 64),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x197: BytePoly_34 = bigint_nondet_quot!(ctx, x196, x3, 34);
    let x198: BytePoly_32 = bigint_nondet_rem!(ctx, x196, x3, 32);
    let x199: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x192, bigint_mul!(x194, x3, 66), 66), x164, 66),
                    x177,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x195,
        66
    );
    eqz(ctx, &x199, 276359, 4)?;
    let x200: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x197, x3, 66), x198, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x189, bigint_sub!(x164, x195, 32), 64), x166, 64),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x200, 276359, 4)?;
    let x201: BytePoly_33 =
        bigint_add!(bigint_mul!(x195, x181, 33), bigint_mul!(x164, x183, 33), 33);
    let x202: BytePoly_33 =
        bigint_add!(bigint_mul!(x198, x181, 33), bigint_mul!(x166, x183, 33), 33);
    let x203: BytePoly_3 = bigint_nondet_quot!(ctx, x201, x3, 3);
    let x204: BytePoly_32 = bigint_nondet_rem!(ctx, x201, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x203, x3, 35), x204, 35), x201, 35),
        260103,
        4,
    )?;
    let x205: BytePoly_3 = bigint_nondet_quot!(ctx, x202, x3, 3);
    let x206: BytePoly_32 = bigint_nondet_rem!(ctx, x202, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x205, x3, 35), x206, 35), x202, 35),
        260103,
        4,
    )?;
    let x207: BytePoly_64 = bigint_mul!(x177, x177, 64);
    let x208: BytePoly_64 = bigint_add!(bigint_add!(bigint_add!(x207, x207, 64), x207, 64), x2, 64);
    let x209: BytePoly_64 = bigint_add!(x48, x208, 64);
    let x210: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x180, x180, 32), x3, 32);
    let x211: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x208, x210, 96), x3, 32);
    let x212: BytePoly_64 = bigint_mul!(x180, x211, 64);
    let x213: BytePoly_64 = bigint_add!(x212, x212, 64);
    let x214: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x209, x213, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x214, x3, 66), x213, 66), x209, 66),
        276359,
        4,
    )?;
    let x215: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x211, x211, 64), x3, 64), x3, 64),
            x177,
            64
        ),
        x177,
        64
    );
    let x216: BytePoly_34 = bigint_nondet_quot!(ctx, x215, x3, 34);
    let x217: BytePoly_32 = bigint_nondet_rem!(ctx, x215, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x216, x3, 66), x217, 66), x215, 66),
        276359,
        4,
    )?;
    let x218: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x211, x217, 64), 64), x3, 64),
            x180,
            64
        ),
        bigint_mul!(x211, x177, 64),
        64
    );
    let x219: BytePoly_34 = bigint_nondet_quot!(ctx, x218, x3, 34);
    let x220: BytePoly_32 = bigint_nondet_rem!(ctx, x218, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x219, x3, 66), x220, 66), x218, 66),
        276359,
        4,
    )?;
    let x221: BytePoly_1 = bigint_nondet_rem!(ctx, x182, x4, 1);
    let x222: BytePoly_32 = bigint_nondet_quot!(ctx, x182, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x222, x4, 33), x221, 33), x182, 33),
        260103,
        4,
    )?;
    let x223: BytePoly_1 = bigint_sub!(x5, x221, 1);
    eqz(ctx, &bigint_mul!(x221, x223, 2), 8131, 2)?;
    let x224: BytePoly_32 = bigint_add!(bigint_sub!(x220, x206, 32), x3, 32);
    let x225: BytePoly_32 = bigint_add!(bigint_sub!(x217, x204, 32), x3, 32);
    let x226: BytePoly_32 = bigint_nondet_inv!(ctx, x225, x3, 32);
    let x227: BytePoly_64 = bigint_mul!(x225, x226, 64);
    let x228: BytePoly_34 = bigint_nondet_quot!(ctx, x227, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x227, bigint_mul!(x228, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x229: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x224, x226, 64), x3, 32);
    let x230: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x229, x225, 64), x224, 64), x3, 64),
        x3,
        64
    );
    let x231: BytePoly_34 = bigint_nondet_quot!(ctx, x230, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x230, bigint_mul!(x231, x3, 66), 66),
        276359,
        4,
    )?;
    let x232: BytePoly_64 = bigint_mul!(x229, x229, 64);
    let x233: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x232, x204, 64), x3, 64), x217, 64),
        x3,
        64
    );
    let x234: BytePoly_34 = bigint_nondet_quot!(ctx, x233, x3, 34);
    let x235: BytePoly_32 = bigint_nondet_rem!(ctx, x233, x3, 32);
    let x236: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x229, x235, 64),
                        bigint_add!(bigint_sub!(x206, bigint_mul!(x229, x204, 64), 64), x3, 64),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x237: BytePoly_34 = bigint_nondet_quot!(ctx, x236, x3, 34);
    let x238: BytePoly_32 = bigint_nondet_rem!(ctx, x236, x3, 32);
    let x239: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x232, bigint_mul!(x234, x3, 66), 66), x204, 66),
                    x217,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x235,
        66
    );
    eqz(ctx, &x239, 276359, 4)?;
    let x240: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x237, x3, 66), x238, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x229, bigint_sub!(x204, x235, 32), 64), x206, 64),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x240, 276359, 4)?;
    let x241: BytePoly_33 =
        bigint_add!(bigint_mul!(x235, x221, 33), bigint_mul!(x204, x223, 33), 33);
    let x242: BytePoly_33 =
        bigint_add!(bigint_mul!(x238, x221, 33), bigint_mul!(x206, x223, 33), 33);
    let x243: BytePoly_3 = bigint_nondet_quot!(ctx, x241, x3, 3);
    let x244: BytePoly_32 = bigint_nondet_rem!(ctx, x241, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x243, x3, 35), x244, 35), x241, 35),
        260103,
        4,
    )?;
    let x245: BytePoly_3 = bigint_nondet_quot!(ctx, x242, x3, 3);
    let x246: BytePoly_32 = bigint_nondet_rem!(ctx, x242, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x245, x3, 35), x246, 35), x242, 35),
        260103,
        4,
    )?;
    let x247: BytePoly_64 = bigint_mul!(x217, x217, 64);
    let x248: BytePoly_64 = bigint_add!(bigint_add!(bigint_add!(x247, x247, 64), x247, 64), x2, 64);
    let x249: BytePoly_64 = bigint_add!(x48, x248, 64);
    let x250: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x220, x220, 32), x3, 32);
    let x251: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x248, x250, 96), x3, 32);
    let x252: BytePoly_64 = bigint_mul!(x220, x251, 64);
    let x253: BytePoly_64 = bigint_add!(x252, x252, 64);
    let x254: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x249, x253, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x254, x3, 66), x253, 66), x249, 66),
        276359,
        4,
    )?;
    let x255: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x251, x251, 64), x3, 64), x3, 64),
            x217,
            64
        ),
        x217,
        64
    );
    let x256: BytePoly_34 = bigint_nondet_quot!(ctx, x255, x3, 34);
    let x257: BytePoly_32 = bigint_nondet_rem!(ctx, x255, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x256, x3, 66), x257, 66), x255, 66),
        276359,
        4,
    )?;
    let x258: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x251, x257, 64), 64), x3, 64),
            x220,
            64
        ),
        bigint_mul!(x251, x217, 64),
        64
    );
    let x259: BytePoly_34 = bigint_nondet_quot!(ctx, x258, x3, 34);
    let x260: BytePoly_32 = bigint_nondet_rem!(ctx, x258, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x259, x3, 66), x260, 66), x258, 66),
        276359,
        4,
    )?;
    let x261: BytePoly_1 = bigint_nondet_rem!(ctx, x222, x4, 1);
    let x262: BytePoly_32 = bigint_nondet_quot!(ctx, x222, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x262, x4, 33), x261, 33), x222, 33),
        260103,
        4,
    )?;
    let x263: BytePoly_1 = bigint_sub!(x5, x261, 1);
    eqz(ctx, &bigint_mul!(x261, x263, 2), 8131, 2)?;
    let x264: BytePoly_32 = bigint_add!(bigint_sub!(x260, x246, 32), x3, 32);
    let x265: BytePoly_32 = bigint_add!(bigint_sub!(x257, x244, 32), x3, 32);
    let x266: BytePoly_32 = bigint_nondet_inv!(ctx, x265, x3, 32);
    let x267: BytePoly_64 = bigint_mul!(x265, x266, 64);
    let x268: BytePoly_34 = bigint_nondet_quot!(ctx, x267, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x267, bigint_mul!(x268, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x269: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x264, x266, 64), x3, 32);
    let x270: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x269, x265, 64), x264, 64), x3, 64),
        x3,
        64
    );
    let x271: BytePoly_34 = bigint_nondet_quot!(ctx, x270, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x270, bigint_mul!(x271, x3, 66), 66),
        276359,
        4,
    )?;
    let x272: BytePoly_64 = bigint_mul!(x269, x269, 64);
    let x273: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x272, x244, 64), x3, 64), x257, 64),
        x3,
        64
    );
    let x274: BytePoly_34 = bigint_nondet_quot!(ctx, x273, x3, 34);
    let x275: BytePoly_32 = bigint_nondet_rem!(ctx, x273, x3, 32);
    let x276: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x269, x275, 64),
                        bigint_add!(bigint_sub!(x246, bigint_mul!(x269, x244, 64), 64), x3, 64),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x277: BytePoly_34 = bigint_nondet_quot!(ctx, x276, x3, 34);
    let x278: BytePoly_32 = bigint_nondet_rem!(ctx, x276, x3, 32);
    let x279: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x272, bigint_mul!(x274, x3, 66), 66), x244, 66),
                    x257,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x275,
        66
    );
    eqz(ctx, &x279, 276359, 4)?;
    let x280: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x277, x3, 66), x278, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x269, bigint_sub!(x244, x275, 32), 64), x246, 64),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x280, 276359, 4)?;
    let x281: BytePoly_33 =
        bigint_add!(bigint_mul!(x275, x261, 33), bigint_mul!(x244, x263, 33), 33);
    let x282: BytePoly_33 =
        bigint_add!(bigint_mul!(x278, x261, 33), bigint_mul!(x246, x263, 33), 33);
    let x283: BytePoly_3 = bigint_nondet_quot!(ctx, x281, x3, 3);
    let x284: BytePoly_32 = bigint_nondet_rem!(ctx, x281, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x283, x3, 35), x284, 35), x281, 35),
        260103,
        4,
    )?;
    let x285: BytePoly_3 = bigint_nondet_quot!(ctx, x282, x3, 3);
    let x286: BytePoly_32 = bigint_nondet_rem!(ctx, x282, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x285, x3, 35), x286, 35), x282, 35),
        260103,
        4,
    )?;
    let x287: BytePoly_64 = bigint_mul!(x257, x257, 64);
    let x288: BytePoly_64 = bigint_add!(bigint_add!(bigint_add!(x287, x287, 64), x287, 64), x2, 64);
    let x289: BytePoly_64 = bigint_add!(x48, x288, 64);
    let x290: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x260, x260, 32), x3, 32);
    let x291: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x288, x290, 96), x3, 32);
    let x292: BytePoly_64 = bigint_mul!(x260, x291, 64);
    let x293: BytePoly_64 = bigint_add!(x292, x292, 64);
    let x294: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x289, x293, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x294, x3, 66), x293, 66), x289, 66),
        276359,
        4,
    )?;
    let x295: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x291, x291, 64), x3, 64), x3, 64),
            x257,
            64
        ),
        x257,
        64
    );
    let x296: BytePoly_34 = bigint_nondet_quot!(ctx, x295, x3, 34);
    let x297: BytePoly_32 = bigint_nondet_rem!(ctx, x295, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x296, x3, 66), x297, 66), x295, 66),
        276359,
        4,
    )?;
    let x298: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x291, x297, 64), 64), x3, 64),
            x260,
            64
        ),
        bigint_mul!(x291, x257, 64),
        64
    );
    let x299: BytePoly_34 = bigint_nondet_quot!(ctx, x298, x3, 34);
    let x300: BytePoly_32 = bigint_nondet_rem!(ctx, x298, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x299, x3, 66), x300, 66), x298, 66),
        276359,
        4,
    )?;
    let x301: BytePoly_1 = bigint_nondet_rem!(ctx, x262, x4, 1);
    let x302: BytePoly_32 = bigint_nondet_quot!(ctx, x262, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x302, x4, 33), x301, 33), x262, 33),
        260103,
        4,
    )?;
    let x303: BytePoly_1 = bigint_sub!(x5, x301, 1);
    eqz(ctx, &bigint_mul!(x301, x303, 2), 8131, 2)?;
    let x304: BytePoly_32 = bigint_add!(bigint_sub!(x300, x286, 32), x3, 32);
    let x305: BytePoly_32 = bigint_add!(bigint_sub!(x297, x284, 32), x3, 32);
    let x306: BytePoly_32 = bigint_nondet_inv!(ctx, x305, x3, 32);
    let x307: BytePoly_64 = bigint_mul!(x305, x306, 64);
    let x308: BytePoly_34 = bigint_nondet_quot!(ctx, x307, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x307, bigint_mul!(x308, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x309: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x304, x306, 64), x3, 32);
    let x310: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x309, x305, 64), x304, 64), x3, 64),
        x3,
        64
    );
    let x311: BytePoly_34 = bigint_nondet_quot!(ctx, x310, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x310, bigint_mul!(x311, x3, 66), 66),
        276359,
        4,
    )?;
    let x312: BytePoly_64 = bigint_mul!(x309, x309, 64);
    let x313: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x312, x284, 64), x3, 64), x297, 64),
        x3,
        64
    );
    let x314: BytePoly_34 = bigint_nondet_quot!(ctx, x313, x3, 34);
    let x315: BytePoly_32 = bigint_nondet_rem!(ctx, x313, x3, 32);
    let x316: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x309, x315, 64),
                        bigint_add!(bigint_sub!(x286, bigint_mul!(x309, x284, 64), 64), x3, 64),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x317: BytePoly_34 = bigint_nondet_quot!(ctx, x316, x3, 34);
    let x318: BytePoly_32 = bigint_nondet_rem!(ctx, x316, x3, 32);
    let x319: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x312, bigint_mul!(x314, x3, 66), 66), x284, 66),
                    x297,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x315,
        66
    );
    eqz(ctx, &x319, 276359, 4)?;
    let x320: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x317, x3, 66), x318, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x309, bigint_sub!(x284, x315, 32), 64), x286, 64),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x320, 276359, 4)?;
    let x321: BytePoly_33 =
        bigint_add!(bigint_mul!(x315, x301, 33), bigint_mul!(x284, x303, 33), 33);
    let x322: BytePoly_33 =
        bigint_add!(bigint_mul!(x318, x301, 33), bigint_mul!(x286, x303, 33), 33);
    let x323: BytePoly_3 = bigint_nondet_quot!(ctx, x321, x3, 3);
    let x324: BytePoly_32 = bigint_nondet_rem!(ctx, x321, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x323, x3, 35), x324, 35), x321, 35),
        260103,
        4,
    )?;
    let x325: BytePoly_3 = bigint_nondet_quot!(ctx, x322, x3, 3);
    let x326: BytePoly_32 = bigint_nondet_rem!(ctx, x322, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x325, x3, 35), x326, 35), x322, 35),
        260103,
        4,
    )?;
    let x327: BytePoly_64 = bigint_mul!(x297, x297, 64);
    let x328: BytePoly_64 = bigint_add!(bigint_add!(bigint_add!(x327, x327, 64), x327, 64), x2, 64);
    let x329: BytePoly_64 = bigint_add!(x48, x328, 64);
    let x330: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x300, x300, 32), x3, 32);
    let x331: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x328, x330, 96), x3, 32);
    let x332: BytePoly_64 = bigint_mul!(x300, x331, 64);
    let x333: BytePoly_64 = bigint_add!(x332, x332, 64);
    let x334: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x329, x333, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x334, x3, 66), x333, 66), x329, 66),
        276359,
        4,
    )?;
    let x335: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x331, x331, 64), x3, 64), x3, 64),
            x297,
            64
        ),
        x297,
        64
    );
    let x336: BytePoly_34 = bigint_nondet_quot!(ctx, x335, x3, 34);
    let x337: BytePoly_32 = bigint_nondet_rem!(ctx, x335, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x336, x3, 66), x337, 66), x335, 66),
        276359,
        4,
    )?;
    let x338: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x331, x337, 64), 64), x3, 64),
            x300,
            64
        ),
        bigint_mul!(x331, x297, 64),
        64
    );
    let x339: BytePoly_34 = bigint_nondet_quot!(ctx, x338, x3, 34);
    let x340: BytePoly_32 = bigint_nondet_rem!(ctx, x338, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x339, x3, 66), x340, 66), x338, 66),
        276359,
        4,
    )?;
    let x341: BytePoly_1 = bigint_nondet_rem!(ctx, x302, x4, 1);
    let x342: BytePoly_32 = bigint_nondet_quot!(ctx, x302, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x342, x4, 33), x341, 33), x302, 33),
        260103,
        4,
    )?;
    let x343: BytePoly_1 = bigint_sub!(x5, x341, 1);
    eqz(ctx, &bigint_mul!(x341, x343, 2), 8131, 2)?;
    let x344: BytePoly_32 = bigint_add!(bigint_sub!(x340, x326, 32), x3, 32);
    let x345: BytePoly_32 = bigint_add!(bigint_sub!(x337, x324, 32), x3, 32);
    let x346: BytePoly_32 = bigint_nondet_inv!(ctx, x345, x3, 32);
    let x347: BytePoly_64 = bigint_mul!(x345, x346, 64);
    let x348: BytePoly_34 = bigint_nondet_quot!(ctx, x347, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x347, bigint_mul!(x348, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x349: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x344, x346, 64), x3, 32);
    let x350: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x349, x345, 64), x344, 64), x3, 64),
        x3,
        64
    );
    let x351: BytePoly_34 = bigint_nondet_quot!(ctx, x350, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x350, bigint_mul!(x351, x3, 66), 66),
        276359,
        4,
    )?;
    let x352: BytePoly_64 = bigint_mul!(x349, x349, 64);
    let x353: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x352, x324, 64), x3, 64), x337, 64),
        x3,
        64
    );
    let x354: BytePoly_34 = bigint_nondet_quot!(ctx, x353, x3, 34);
    let x355: BytePoly_32 = bigint_nondet_rem!(ctx, x353, x3, 32);
    let x356: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x349, x355, 64),
                        bigint_add!(bigint_sub!(x326, bigint_mul!(x349, x324, 64), 64), x3, 64),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x357: BytePoly_34 = bigint_nondet_quot!(ctx, x356, x3, 34);
    let x358: BytePoly_32 = bigint_nondet_rem!(ctx, x356, x3, 32);
    let x359: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x352, bigint_mul!(x354, x3, 66), 66), x324, 66),
                    x337,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x355,
        66
    );
    eqz(ctx, &x359, 276359, 4)?;
    let x360: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x357, x3, 66), x358, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x349, bigint_sub!(x324, x355, 32), 64), x326, 64),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x360, 276359, 4)?;
    let x361: BytePoly_33 =
        bigint_add!(bigint_mul!(x355, x341, 33), bigint_mul!(x324, x343, 33), 33);
    let x362: BytePoly_33 =
        bigint_add!(bigint_mul!(x358, x341, 33), bigint_mul!(x326, x343, 33), 33);
    let x363: BytePoly_3 = bigint_nondet_quot!(ctx, x361, x3, 3);
    let x364: BytePoly_32 = bigint_nondet_rem!(ctx, x361, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x363, x3, 35), x364, 35), x361, 35),
        260103,
        4,
    )?;
    let x365: BytePoly_3 = bigint_nondet_quot!(ctx, x362, x3, 3);
    let x366: BytePoly_32 = bigint_nondet_rem!(ctx, x362, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x365, x3, 35), x366, 35), x362, 35),
        260103,
        4,
    )?;
    let x367: BytePoly_64 = bigint_mul!(x337, x337, 64);
    let x368: BytePoly_64 = bigint_add!(bigint_add!(bigint_add!(x367, x367, 64), x367, 64), x2, 64);
    let x369: BytePoly_64 = bigint_add!(x48, x368, 64);
    let x370: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x340, x340, 32), x3, 32);
    let x371: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x368, x370, 96), x3, 32);
    let x372: BytePoly_64 = bigint_mul!(x340, x371, 64);
    let x373: BytePoly_64 = bigint_add!(x372, x372, 64);
    let x374: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x369, x373, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x374, x3, 66), x373, 66), x369, 66),
        276359,
        4,
    )?;
    let x375: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x371, x371, 64), x3, 64), x3, 64),
            x337,
            64
        ),
        x337,
        64
    );
    let x376: BytePoly_34 = bigint_nondet_quot!(ctx, x375, x3, 34);
    let x377: BytePoly_32 = bigint_nondet_rem!(ctx, x375, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x376, x3, 66), x377, 66), x375, 66),
        276359,
        4,
    )?;
    let x378: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x371, x377, 64), 64), x3, 64),
            x340,
            64
        ),
        bigint_mul!(x371, x337, 64),
        64
    );
    let x379: BytePoly_34 = bigint_nondet_quot!(ctx, x378, x3, 34);
    let x380: BytePoly_32 = bigint_nondet_rem!(ctx, x378, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x379, x3, 66), x380, 66), x378, 66),
        276359,
        4,
    )?;
    let x381: BytePoly_1 = bigint_nondet_rem!(ctx, x342, x4, 1);
    let x382: BytePoly_32 = bigint_nondet_quot!(ctx, x342, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x382, x4, 33), x381, 33), x342, 33),
        260103,
        4,
    )?;
    let x383: BytePoly_1 = bigint_sub!(x5, x381, 1);
    eqz(ctx, &bigint_mul!(x381, x383, 2), 8131, 2)?;
    let x384: BytePoly_32 = bigint_add!(bigint_sub!(x380, x366, 32), x3, 32);
    let x385: BytePoly_32 = bigint_add!(bigint_sub!(x377, x364, 32), x3, 32);
    let x386: BytePoly_32 = bigint_nondet_inv!(ctx, x385, x3, 32);
    let x387: BytePoly_64 = bigint_mul!(x385, x386, 64);
    let x388: BytePoly_34 = bigint_nondet_quot!(ctx, x387, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x387, bigint_mul!(x388, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x389: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x384, x386, 64), x3, 32);
    let x390: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x389, x385, 64), x384, 64), x3, 64),
        x3,
        64
    );
    let x391: BytePoly_34 = bigint_nondet_quot!(ctx, x390, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x390, bigint_mul!(x391, x3, 66), 66),
        276359,
        4,
    )?;
    let x392: BytePoly_64 = bigint_mul!(x389, x389, 64);
    let x393: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x392, x364, 64), x3, 64), x377, 64),
        x3,
        64
    );
    let x394: BytePoly_34 = bigint_nondet_quot!(ctx, x393, x3, 34);
    let x395: BytePoly_32 = bigint_nondet_rem!(ctx, x393, x3, 32);
    let x396: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x389, x395, 64),
                        bigint_add!(bigint_sub!(x366, bigint_mul!(x389, x364, 64), 64), x3, 64),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x397: BytePoly_34 = bigint_nondet_quot!(ctx, x396, x3, 34);
    let x398: BytePoly_32 = bigint_nondet_rem!(ctx, x396, x3, 32);
    let x399: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x392, bigint_mul!(x394, x3, 66), 66), x364, 66),
                    x377,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x395,
        66
    );
    eqz(ctx, &x399, 276359, 4)?;
    let x400: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x397, x3, 66), x398, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x389, bigint_sub!(x364, x395, 32), 64), x366, 64),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x400, 276359, 4)?;
    let x401: BytePoly_33 =
        bigint_add!(bigint_mul!(x395, x381, 33), bigint_mul!(x364, x383, 33), 33);
    let x402: BytePoly_33 =
        bigint_add!(bigint_mul!(x398, x381, 33), bigint_mul!(x366, x383, 33), 33);
    let x403: BytePoly_3 = bigint_nondet_quot!(ctx, x401, x3, 3);
    let x404: BytePoly_32 = bigint_nondet_rem!(ctx, x401, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x403, x3, 35), x404, 35), x401, 35),
        260103,
        4,
    )?;
    let x405: BytePoly_3 = bigint_nondet_quot!(ctx, x402, x3, 3);
    let x406: BytePoly_32 = bigint_nondet_rem!(ctx, x402, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x405, x3, 35), x406, 35), x402, 35),
        260103,
        4,
    )?;
    let x407: BytePoly_64 = bigint_mul!(x377, x377, 64);
    let x408: BytePoly_64 = bigint_add!(bigint_add!(bigint_add!(x407, x407, 64), x407, 64), x2, 64);
    let x409: BytePoly_64 = bigint_add!(x48, x408, 64);
    let x410: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x380, x380, 32), x3, 32);
    let x411: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x408, x410, 96), x3, 32);
    let x412: BytePoly_64 = bigint_mul!(x380, x411, 64);
    let x413: BytePoly_64 = bigint_add!(x412, x412, 64);
    let x414: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x409, x413, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x414, x3, 66), x413, 66), x409, 66),
        276359,
        4,
    )?;
    let x415: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x411, x411, 64), x3, 64), x3, 64),
            x377,
            64
        ),
        x377,
        64
    );
    let x416: BytePoly_34 = bigint_nondet_quot!(ctx, x415, x3, 34);
    let x417: BytePoly_32 = bigint_nondet_rem!(ctx, x415, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x416, x3, 66), x417, 66), x415, 66),
        276359,
        4,
    )?;
    let x418: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x411, x417, 64), 64), x3, 64),
            x380,
            64
        ),
        bigint_mul!(x411, x377, 64),
        64
    );
    let x419: BytePoly_34 = bigint_nondet_quot!(ctx, x418, x3, 34);
    let x420: BytePoly_32 = bigint_nondet_rem!(ctx, x418, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x419, x3, 66), x420, 66), x418, 66),
        276359,
        4,
    )?;
    let x421: BytePoly_1 = bigint_nondet_rem!(ctx, x382, x4, 1);
    let x422: BytePoly_32 = bigint_nondet_quot!(ctx, x382, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x422, x4, 33), x421, 33), x382, 33),
        260103,
        4,
    )?;
    let x423: BytePoly_1 = bigint_sub!(x5, x421, 1);
    eqz(ctx, &bigint_mul!(x421, x423, 2), 8131, 2)?;
    let x424: BytePoly_32 = bigint_add!(bigint_sub!(x420, x406, 32), x3, 32);
    let x425: BytePoly_32 = bigint_add!(bigint_sub!(x417, x404, 32), x3, 32);
    let x426: BytePoly_32 = bigint_nondet_inv!(ctx, x425, x3, 32);
    let x427: BytePoly_64 = bigint_mul!(x425, x426, 64);
    let x428: BytePoly_34 = bigint_nondet_quot!(ctx, x427, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x427, bigint_mul!(x428, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x429: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x424, x426, 64), x3, 32);
    let x430: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x429, x425, 64), x424, 64), x3, 64),
        x3,
        64
    );
    let x431: BytePoly_34 = bigint_nondet_quot!(ctx, x430, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x430, bigint_mul!(x431, x3, 66), 66),
        276359,
        4,
    )?;
    let x432: BytePoly_64 = bigint_mul!(x429, x429, 64);
    let x433: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x432, x404, 64), x3, 64), x417, 64),
        x3,
        64
    );
    let x434: BytePoly_34 = bigint_nondet_quot!(ctx, x433, x3, 34);
    let x435: BytePoly_32 = bigint_nondet_rem!(ctx, x433, x3, 32);
    let x436: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x429, x435, 64),
                        bigint_add!(bigint_sub!(x406, bigint_mul!(x429, x404, 64), 64), x3, 64),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x437: BytePoly_34 = bigint_nondet_quot!(ctx, x436, x3, 34);
    let x438: BytePoly_32 = bigint_nondet_rem!(ctx, x436, x3, 32);
    let x439: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x432, bigint_mul!(x434, x3, 66), 66), x404, 66),
                    x417,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x435,
        66
    );
    eqz(ctx, &x439, 276359, 4)?;
    let x440: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x437, x3, 66), x438, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x429, bigint_sub!(x404, x435, 32), 64), x406, 64),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x440, 276359, 4)?;
    let x441: BytePoly_33 =
        bigint_add!(bigint_mul!(x435, x421, 33), bigint_mul!(x404, x423, 33), 33);
    let x442: BytePoly_33 =
        bigint_add!(bigint_mul!(x438, x421, 33), bigint_mul!(x406, x423, 33), 33);
    let x443: BytePoly_3 = bigint_nondet_quot!(ctx, x441, x3, 3);
    let x444: BytePoly_32 = bigint_nondet_rem!(ctx, x441, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x443, x3, 35), x444, 35), x441, 35),
        260103,
        4,
    )?;
    let x445: BytePoly_3 = bigint_nondet_quot!(ctx, x442, x3, 3);
    let x446: BytePoly_32 = bigint_nondet_rem!(ctx, x442, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x445, x3, 35), x446, 35), x442, 35),
        260103,
        4,
    )?;
    let x447: BytePoly_64 = bigint_mul!(x417, x417, 64);
    let x448: BytePoly_64 = bigint_add!(bigint_add!(bigint_add!(x447, x447, 64), x447, 64), x2, 64);
    let x449: BytePoly_64 = bigint_add!(x48, x448, 64);
    let x450: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x420, x420, 32), x3, 32);
    let x451: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x448, x450, 96), x3, 32);
    let x452: BytePoly_64 = bigint_mul!(x420, x451, 64);
    let x453: BytePoly_64 = bigint_add!(x452, x452, 64);
    let x454: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x449, x453, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x454, x3, 66), x453, 66), x449, 66),
        276359,
        4,
    )?;
    let x455: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x451, x451, 64), x3, 64), x3, 64),
            x417,
            64
        ),
        x417,
        64
    );
    let x456: BytePoly_34 = bigint_nondet_quot!(ctx, x455, x3, 34);
    let x457: BytePoly_32 = bigint_nondet_rem!(ctx, x455, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x456, x3, 66), x457, 66), x455, 66),
        276359,
        4,
    )?;
    let x458: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x451, x457, 64), 64), x3, 64),
            x420,
            64
        ),
        bigint_mul!(x451, x417, 64),
        64
    );
    let x459: BytePoly_34 = bigint_nondet_quot!(ctx, x458, x3, 34);
    let x460: BytePoly_32 = bigint_nondet_rem!(ctx, x458, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x459, x3, 66), x460, 66), x458, 66),
        276359,
        4,
    )?;
    let x461: BytePoly_1 = bigint_nondet_rem!(ctx, x422, x4, 1);
    let x462: BytePoly_32 = bigint_nondet_quot!(ctx, x422, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x462, x4, 33), x461, 33), x422, 33),
        260103,
        4,
    )?;
    let x463: BytePoly_1 = bigint_sub!(x5, x461, 1);
    eqz(ctx, &bigint_mul!(x461, x463, 2), 8131, 2)?;
    let x464: BytePoly_32 = bigint_add!(bigint_sub!(x460, x446, 32), x3, 32);
    let x465: BytePoly_32 = bigint_add!(bigint_sub!(x457, x444, 32), x3, 32);
    let x466: BytePoly_32 = bigint_nondet_inv!(ctx, x465, x3, 32);
    let x467: BytePoly_64 = bigint_mul!(x465, x466, 64);
    let x468: BytePoly_34 = bigint_nondet_quot!(ctx, x467, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x467, bigint_mul!(x468, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x469: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x464, x466, 64), x3, 32);
    let x470: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x469, x465, 64), x464, 64), x3, 64),
        x3,
        64
    );
    let x471: BytePoly_34 = bigint_nondet_quot!(ctx, x470, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x470, bigint_mul!(x471, x3, 66), 66),
        276359,
        4,
    )?;
    let x472: BytePoly_64 = bigint_mul!(x469, x469, 64);
    let x473: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x472, x444, 64), x3, 64), x457, 64),
        x3,
        64
    );
    let x474: BytePoly_34 = bigint_nondet_quot!(ctx, x473, x3, 34);
    let x475: BytePoly_32 = bigint_nondet_rem!(ctx, x473, x3, 32);
    let x476: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x469, x475, 64),
                        bigint_add!(bigint_sub!(x446, bigint_mul!(x469, x444, 64), 64), x3, 64),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x477: BytePoly_34 = bigint_nondet_quot!(ctx, x476, x3, 34);
    let x478: BytePoly_32 = bigint_nondet_rem!(ctx, x476, x3, 32);
    let x479: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x472, bigint_mul!(x474, x3, 66), 66), x444, 66),
                    x457,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x475,
        66
    );
    eqz(ctx, &x479, 276359, 4)?;
    let x480: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x477, x3, 66), x478, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x469, bigint_sub!(x444, x475, 32), 64), x446, 64),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x480, 276359, 4)?;
    let x481: BytePoly_33 =
        bigint_add!(bigint_mul!(x475, x461, 33), bigint_mul!(x444, x463, 33), 33);
    let x482: BytePoly_33 =
        bigint_add!(bigint_mul!(x478, x461, 33), bigint_mul!(x446, x463, 33), 33);
    let x483: BytePoly_3 = bigint_nondet_quot!(ctx, x481, x3, 3);
    let x484: BytePoly_32 = bigint_nondet_rem!(ctx, x481, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x483, x3, 35), x484, 35), x481, 35),
        260103,
        4,
    )?;
    let x485: BytePoly_3 = bigint_nondet_quot!(ctx, x482, x3, 3);
    let x486: BytePoly_32 = bigint_nondet_rem!(ctx, x482, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x485, x3, 35), x486, 35), x482, 35),
        260103,
        4,
    )?;
    let x487: BytePoly_64 = bigint_mul!(x457, x457, 64);
    let x488: BytePoly_64 = bigint_add!(bigint_add!(bigint_add!(x487, x487, 64), x487, 64), x2, 64);
    let x489: BytePoly_64 = bigint_add!(x48, x488, 64);
    let x490: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x460, x460, 32), x3, 32);
    let x491: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x488, x490, 96), x3, 32);
    let x492: BytePoly_64 = bigint_mul!(x460, x491, 64);
    let x493: BytePoly_64 = bigint_add!(x492, x492, 64);
    let x494: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x489, x493, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x494, x3, 66), x493, 66), x489, 66),
        276359,
        4,
    )?;
    let x495: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x491, x491, 64), x3, 64), x3, 64),
            x457,
            64
        ),
        x457,
        64
    );
    let x496: BytePoly_34 = bigint_nondet_quot!(ctx, x495, x3, 34);
    let x497: BytePoly_32 = bigint_nondet_rem!(ctx, x495, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x496, x3, 66), x497, 66), x495, 66),
        276359,
        4,
    )?;
    let x498: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x491, x497, 64), 64), x3, 64),
            x460,
            64
        ),
        bigint_mul!(x491, x457, 64),
        64
    );
    let x499: BytePoly_34 = bigint_nondet_quot!(ctx, x498, x3, 34);
    let x500: BytePoly_32 = bigint_nondet_rem!(ctx, x498, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x499, x3, 66), x500, 66), x498, 66),
        276359,
        4,
    )?;
    let x501: BytePoly_1 = bigint_nondet_rem!(ctx, x462, x4, 1);
    let x502: BytePoly_32 = bigint_nondet_quot!(ctx, x462, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x502, x4, 33), x501, 33), x462, 33),
        260103,
        4,
    )?;
    let x503: BytePoly_1 = bigint_sub!(x5, x501, 1);
    eqz(ctx, &bigint_mul!(x501, x503, 2), 8131, 2)?;
    let x504: BytePoly_32 = bigint_add!(bigint_sub!(x500, x486, 32), x3, 32);
    let x505: BytePoly_32 = bigint_add!(bigint_sub!(x497, x484, 32), x3, 32);
    let x506: BytePoly_32 = bigint_nondet_inv!(ctx, x505, x3, 32);
    let x507: BytePoly_64 = bigint_mul!(x505, x506, 64);
    let x508: BytePoly_34 = bigint_nondet_quot!(ctx, x507, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x507, bigint_mul!(x508, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x509: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x504, x506, 64), x3, 32);
    let x510: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x509, x505, 64), x504, 64), x3, 64),
        x3,
        64
    );
    let x511: BytePoly_34 = bigint_nondet_quot!(ctx, x510, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x510, bigint_mul!(x511, x3, 66), 66),
        276359,
        4,
    )?;
    let x512: BytePoly_64 = bigint_mul!(x509, x509, 64);
    let x513: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x512, x484, 64), x3, 64), x497, 64),
        x3,
        64
    );
    let x514: BytePoly_34 = bigint_nondet_quot!(ctx, x513, x3, 34);
    let x515: BytePoly_32 = bigint_nondet_rem!(ctx, x513, x3, 32);
    let x516: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x509, x515, 64),
                        bigint_add!(bigint_sub!(x486, bigint_mul!(x509, x484, 64), 64), x3, 64),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x517: BytePoly_34 = bigint_nondet_quot!(ctx, x516, x3, 34);
    let x518: BytePoly_32 = bigint_nondet_rem!(ctx, x516, x3, 32);
    let x519: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x512, bigint_mul!(x514, x3, 66), 66), x484, 66),
                    x497,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x515,
        66
    );
    eqz(ctx, &x519, 276359, 4)?;
    let x520: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x517, x3, 66), x518, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x509, bigint_sub!(x484, x515, 32), 64), x486, 64),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x520, 276359, 4)?;
    let x521: BytePoly_33 =
        bigint_add!(bigint_mul!(x515, x501, 33), bigint_mul!(x484, x503, 33), 33);
    let x522: BytePoly_33 =
        bigint_add!(bigint_mul!(x518, x501, 33), bigint_mul!(x486, x503, 33), 33);
    let x523: BytePoly_3 = bigint_nondet_quot!(ctx, x521, x3, 3);
    let x524: BytePoly_32 = bigint_nondet_rem!(ctx, x521, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x523, x3, 35), x524, 35), x521, 35),
        260103,
        4,
    )?;
    let x525: BytePoly_3 = bigint_nondet_quot!(ctx, x522, x3, 3);
    let x526: BytePoly_32 = bigint_nondet_rem!(ctx, x522, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x525, x3, 35), x526, 35), x522, 35),
        260103,
        4,
    )?;
    let x527: BytePoly_64 = bigint_mul!(x497, x497, 64);
    let x528: BytePoly_64 = bigint_add!(bigint_add!(bigint_add!(x527, x527, 64), x527, 64), x2, 64);
    let x529: BytePoly_64 = bigint_add!(x48, x528, 64);
    let x530: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x500, x500, 32), x3, 32);
    let x531: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x528, x530, 96), x3, 32);
    let x532: BytePoly_64 = bigint_mul!(x500, x531, 64);
    let x533: BytePoly_64 = bigint_add!(x532, x532, 64);
    let x534: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x529, x533, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x534, x3, 66), x533, 66), x529, 66),
        276359,
        4,
    )?;
    let x535: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x531, x531, 64), x3, 64), x3, 64),
            x497,
            64
        ),
        x497,
        64
    );
    let x536: BytePoly_34 = bigint_nondet_quot!(ctx, x535, x3, 34);
    let x537: BytePoly_32 = bigint_nondet_rem!(ctx, x535, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x536, x3, 66), x537, 66), x535, 66),
        276359,
        4,
    )?;
    let x538: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x531, x537, 64), 64), x3, 64),
            x500,
            64
        ),
        bigint_mul!(x531, x497, 64),
        64
    );
    let x539: BytePoly_34 = bigint_nondet_quot!(ctx, x538, x3, 34);
    let x540: BytePoly_32 = bigint_nondet_rem!(ctx, x538, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x539, x3, 66), x540, 66), x538, 66),
        276359,
        4,
    )?;
    let x541: BytePoly_1 = bigint_nondet_rem!(ctx, x502, x4, 1);
    let x542: BytePoly_32 = bigint_nondet_quot!(ctx, x502, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x542, x4, 33), x541, 33), x502, 33),
        260103,
        4,
    )?;
    let x543: BytePoly_1 = bigint_sub!(x5, x541, 1);
    eqz(ctx, &bigint_mul!(x541, x543, 2), 8131, 2)?;
    let x544: BytePoly_32 = bigint_add!(bigint_sub!(x540, x526, 32), x3, 32);
    let x545: BytePoly_32 = bigint_add!(bigint_sub!(x537, x524, 32), x3, 32);
    let x546: BytePoly_32 = bigint_nondet_inv!(ctx, x545, x3, 32);
    let x547: BytePoly_64 = bigint_mul!(x545, x546, 64);
    let x548: BytePoly_34 = bigint_nondet_quot!(ctx, x547, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x547, bigint_mul!(x548, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x549: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x544, x546, 64), x3, 32);
    let x550: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x549, x545, 64), x544, 64), x3, 64),
        x3,
        64
    );
    let x551: BytePoly_34 = bigint_nondet_quot!(ctx, x550, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x550, bigint_mul!(x551, x3, 66), 66),
        276359,
        4,
    )?;
    let x552: BytePoly_64 = bigint_mul!(x549, x549, 64);
    let x553: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x552, x524, 64), x3, 64), x537, 64),
        x3,
        64
    );
    let x554: BytePoly_34 = bigint_nondet_quot!(ctx, x553, x3, 34);
    let x555: BytePoly_32 = bigint_nondet_rem!(ctx, x553, x3, 32);
    let x556: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x549, x555, 64),
                        bigint_add!(bigint_sub!(x526, bigint_mul!(x549, x524, 64), 64), x3, 64),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x557: BytePoly_34 = bigint_nondet_quot!(ctx, x556, x3, 34);
    let x558: BytePoly_32 = bigint_nondet_rem!(ctx, x556, x3, 32);
    let x559: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x552, bigint_mul!(x554, x3, 66), 66), x524, 66),
                    x537,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x555,
        66
    );
    eqz(ctx, &x559, 276359, 4)?;
    let x560: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x557, x3, 66), x558, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x549, bigint_sub!(x524, x555, 32), 64), x526, 64),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x560, 276359, 4)?;
    let x561: BytePoly_33 =
        bigint_add!(bigint_mul!(x555, x541, 33), bigint_mul!(x524, x543, 33), 33);
    let x562: BytePoly_33 =
        bigint_add!(bigint_mul!(x558, x541, 33), bigint_mul!(x526, x543, 33), 33);
    let x563: BytePoly_3 = bigint_nondet_quot!(ctx, x561, x3, 3);
    let x564: BytePoly_32 = bigint_nondet_rem!(ctx, x561, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x563, x3, 35), x564, 35), x561, 35),
        260103,
        4,
    )?;
    let x565: BytePoly_3 = bigint_nondet_quot!(ctx, x562, x3, 3);
    let x566: BytePoly_32 = bigint_nondet_rem!(ctx, x562, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x565, x3, 35), x566, 35), x562, 35),
        260103,
        4,
    )?;
    let x567: BytePoly_64 = bigint_mul!(x537, x537, 64);
    let x568: BytePoly_64 = bigint_add!(bigint_add!(bigint_add!(x567, x567, 64), x567, 64), x2, 64);
    let x569: BytePoly_64 = bigint_add!(x48, x568, 64);
    let x570: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x540, x540, 32), x3, 32);
    let x571: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x568, x570, 96), x3, 32);
    let x572: BytePoly_64 = bigint_mul!(x540, x571, 64);
    let x573: BytePoly_64 = bigint_add!(x572, x572, 64);
    let x574: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x569, x573, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x574, x3, 66), x573, 66), x569, 66),
        276359,
        4,
    )?;
    let x575: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x571, x571, 64), x3, 64), x3, 64),
            x537,
            64
        ),
        x537,
        64
    );
    let x576: BytePoly_34 = bigint_nondet_quot!(ctx, x575, x3, 34);
    let x577: BytePoly_32 = bigint_nondet_rem!(ctx, x575, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x576, x3, 66), x577, 66), x575, 66),
        276359,
        4,
    )?;
    let x578: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x571, x577, 64), 64), x3, 64),
            x540,
            64
        ),
        bigint_mul!(x571, x537, 64),
        64
    );
    let x579: BytePoly_34 = bigint_nondet_quot!(ctx, x578, x3, 34);
    let x580: BytePoly_32 = bigint_nondet_rem!(ctx, x578, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x579, x3, 66), x580, 66), x578, 66),
        276359,
        4,
    )?;
    let x581: BytePoly_1 = bigint_nondet_rem!(ctx, x542, x4, 1);
    let x582: BytePoly_32 = bigint_nondet_quot!(ctx, x542, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x582, x4, 33), x581, 33), x542, 33),
        260103,
        4,
    )?;
    let x583: BytePoly_1 = bigint_sub!(x5, x581, 1);
    eqz(ctx, &bigint_mul!(x581, x583, 2), 8131, 2)?;
    let x584: BytePoly_32 = bigint_add!(bigint_sub!(x580, x566, 32), x3, 32);
    let x585: BytePoly_32 = bigint_add!(bigint_sub!(x577, x564, 32), x3, 32);
    let x586: BytePoly_32 = bigint_nondet_inv!(ctx, x585, x3, 32);
    let x587: BytePoly_64 = bigint_mul!(x585, x586, 64);
    let x588: BytePoly_34 = bigint_nondet_quot!(ctx, x587, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x587, bigint_mul!(x588, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x589: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x584, x586, 64), x3, 32);
    let x590: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x589, x585, 64), x584, 64), x3, 64),
        x3,
        64
    );
    let x591: BytePoly_34 = bigint_nondet_quot!(ctx, x590, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x590, bigint_mul!(x591, x3, 66), 66),
        276359,
        4,
    )?;
    let x592: BytePoly_64 = bigint_mul!(x589, x589, 64);
    let x593: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x592, x564, 64), x3, 64), x577, 64),
        x3,
        64
    );
    let x594: BytePoly_34 = bigint_nondet_quot!(ctx, x593, x3, 34);
    let x595: BytePoly_32 = bigint_nondet_rem!(ctx, x593, x3, 32);
    let x596: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x589, x595, 64),
                        bigint_add!(bigint_sub!(x566, bigint_mul!(x589, x564, 64), 64), x3, 64),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x597: BytePoly_34 = bigint_nondet_quot!(ctx, x596, x3, 34);
    let x598: BytePoly_32 = bigint_nondet_rem!(ctx, x596, x3, 32);
    let x599: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x592, bigint_mul!(x594, x3, 66), 66), x564, 66),
                    x577,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x595,
        66
    );
    eqz(ctx, &x599, 276359, 4)?;
    let x600: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x597, x3, 66), x598, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x589, bigint_sub!(x564, x595, 32), 64), x566, 64),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x600, 276359, 4)?;
    let x601: BytePoly_33 =
        bigint_add!(bigint_mul!(x595, x581, 33), bigint_mul!(x564, x583, 33), 33);
    let x602: BytePoly_33 =
        bigint_add!(bigint_mul!(x598, x581, 33), bigint_mul!(x566, x583, 33), 33);
    let x603: BytePoly_3 = bigint_nondet_quot!(ctx, x601, x3, 3);
    let x604: BytePoly_32 = bigint_nondet_rem!(ctx, x601, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x603, x3, 35), x604, 35), x601, 35),
        260103,
        4,
    )?;
    let x605: BytePoly_3 = bigint_nondet_quot!(ctx, x602, x3, 3);
    let x606: BytePoly_32 = bigint_nondet_rem!(ctx, x602, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x605, x3, 35), x606, 35), x602, 35),
        260103,
        4,
    )?;
    let x607: BytePoly_64 = bigint_mul!(x577, x577, 64);
    let x608: BytePoly_64 = bigint_add!(bigint_add!(bigint_add!(x607, x607, 64), x607, 64), x2, 64);
    let x609: BytePoly_64 = bigint_add!(x48, x608, 64);
    let x610: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x580, x580, 32), x3, 32);
    let x611: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x608, x610, 96), x3, 32);
    let x612: BytePoly_64 = bigint_mul!(x580, x611, 64);
    let x613: BytePoly_64 = bigint_add!(x612, x612, 64);
    let x614: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x609, x613, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x614, x3, 66), x613, 66), x609, 66),
        276359,
        4,
    )?;
    let x615: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x611, x611, 64), x3, 64), x3, 64),
            x577,
            64
        ),
        x577,
        64
    );
    let x616: BytePoly_34 = bigint_nondet_quot!(ctx, x615, x3, 34);
    let x617: BytePoly_32 = bigint_nondet_rem!(ctx, x615, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x616, x3, 66), x617, 66), x615, 66),
        276359,
        4,
    )?;
    let x618: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x611, x617, 64), 64), x3, 64),
            x580,
            64
        ),
        bigint_mul!(x611, x577, 64),
        64
    );
    let x619: BytePoly_34 = bigint_nondet_quot!(ctx, x618, x3, 34);
    let x620: BytePoly_32 = bigint_nondet_rem!(ctx, x618, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x619, x3, 66), x620, 66), x618, 66),
        276359,
        4,
    )?;
    let x621: BytePoly_1 = bigint_nondet_rem!(ctx, x582, x4, 1);
    let x622: BytePoly_32 = bigint_nondet_quot!(ctx, x582, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x622, x4, 33), x621, 33), x582, 33),
        260103,
        4,
    )?;
    let x623: BytePoly_1 = bigint_sub!(x5, x621, 1);
    eqz(ctx, &bigint_mul!(x621, x623, 2), 8131, 2)?;
    let x624: BytePoly_32 = bigint_add!(bigint_sub!(x620, x606, 32), x3, 32);
    let x625: BytePoly_32 = bigint_add!(bigint_sub!(x617, x604, 32), x3, 32);
    let x626: BytePoly_32 = bigint_nondet_inv!(ctx, x625, x3, 32);
    let x627: BytePoly_64 = bigint_mul!(x625, x626, 64);
    let x628: BytePoly_34 = bigint_nondet_quot!(ctx, x627, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x627, bigint_mul!(x628, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x629: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x624, x626, 64), x3, 32);
    let x630: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x629, x625, 64), x624, 64), x3, 64),
        x3,
        64
    );
    let x631: BytePoly_34 = bigint_nondet_quot!(ctx, x630, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x630, bigint_mul!(x631, x3, 66), 66),
        276359,
        4,
    )?;
    let x632: BytePoly_64 = bigint_mul!(x629, x629, 64);
    let x633: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x632, x604, 64), x3, 64), x617, 64),
        x3,
        64
    );
    let x634: BytePoly_34 = bigint_nondet_quot!(ctx, x633, x3, 34);
    let x635: BytePoly_32 = bigint_nondet_rem!(ctx, x633, x3, 32);
    let x636: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x629, x635, 64),
                        bigint_add!(bigint_sub!(x606, bigint_mul!(x629, x604, 64), 64), x3, 64),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x637: BytePoly_34 = bigint_nondet_quot!(ctx, x636, x3, 34);
    let x638: BytePoly_32 = bigint_nondet_rem!(ctx, x636, x3, 32);
    let x639: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x632, bigint_mul!(x634, x3, 66), 66), x604, 66),
                    x617,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x635,
        66
    );
    eqz(ctx, &x639, 276359, 4)?;
    let x640: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x637, x3, 66), x638, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x629, bigint_sub!(x604, x635, 32), 64), x606, 64),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x640, 276359, 4)?;
    let x641: BytePoly_33 =
        bigint_add!(bigint_mul!(x635, x621, 33), bigint_mul!(x604, x623, 33), 33);
    let x642: BytePoly_33 =
        bigint_add!(bigint_mul!(x638, x621, 33), bigint_mul!(x606, x623, 33), 33);
    let x643: BytePoly_3 = bigint_nondet_quot!(ctx, x641, x3, 3);
    let x644: BytePoly_32 = bigint_nondet_rem!(ctx, x641, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x643, x3, 35), x644, 35), x641, 35),
        260103,
        4,
    )?;
    let x645: BytePoly_3 = bigint_nondet_quot!(ctx, x642, x3, 3);
    let x646: BytePoly_32 = bigint_nondet_rem!(ctx, x642, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x645, x3, 35), x646, 35), x642, 35),
        260103,
        4,
    )?;
    let x647: BytePoly_64 = bigint_mul!(x617, x617, 64);
    let x648: BytePoly_64 = bigint_add!(bigint_add!(bigint_add!(x647, x647, 64), x647, 64), x2, 64);
    let x649: BytePoly_64 = bigint_add!(x48, x648, 64);
    let x650: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x620, x620, 32), x3, 32);
    let x651: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x648, x650, 96), x3, 32);
    let x652: BytePoly_64 = bigint_mul!(x620, x651, 64);
    let x653: BytePoly_64 = bigint_add!(x652, x652, 64);
    let x654: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x649, x653, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x654, x3, 66), x653, 66), x649, 66),
        276359,
        4,
    )?;
    let x655: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x651, x651, 64), x3, 64), x3, 64),
            x617,
            64
        ),
        x617,
        64
    );
    let x656: BytePoly_34 = bigint_nondet_quot!(ctx, x655, x3, 34);
    let x657: BytePoly_32 = bigint_nondet_rem!(ctx, x655, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x656, x3, 66), x657, 66), x655, 66),
        276359,
        4,
    )?;
    let x658: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x651, x657, 64), 64), x3, 64),
            x620,
            64
        ),
        bigint_mul!(x651, x617, 64),
        64
    );
    let x659: BytePoly_34 = bigint_nondet_quot!(ctx, x658, x3, 34);
    let x660: BytePoly_32 = bigint_nondet_rem!(ctx, x658, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x659, x3, 66), x660, 66), x658, 66),
        276359,
        4,
    )?;
    let x661: BytePoly_1 = bigint_nondet_rem!(ctx, x622, x4, 1);
    let x662: BytePoly_32 = bigint_nondet_quot!(ctx, x622, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x662, x4, 33), x661, 33), x622, 33),
        260103,
        4,
    )?;
    let x663: BytePoly_1 = bigint_sub!(x5, x661, 1);
    eqz(ctx, &bigint_mul!(x661, x663, 2), 8131, 2)?;
    let x664: BytePoly_32 = bigint_add!(bigint_sub!(x660, x646, 32), x3, 32);
    let x665: BytePoly_32 = bigint_add!(bigint_sub!(x657, x644, 32), x3, 32);
    let x666: BytePoly_32 = bigint_nondet_inv!(ctx, x665, x3, 32);
    let x667: BytePoly_64 = bigint_mul!(x665, x666, 64);
    let x668: BytePoly_34 = bigint_nondet_quot!(ctx, x667, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x667, bigint_mul!(x668, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x669: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x664, x666, 64), x3, 32);
    let x670: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x669, x665, 64), x664, 64), x3, 64),
        x3,
        64
    );
    let x671: BytePoly_34 = bigint_nondet_quot!(ctx, x670, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x670, bigint_mul!(x671, x3, 66), 66),
        276359,
        4,
    )?;
    let x672: BytePoly_64 = bigint_mul!(x669, x669, 64);
    let x673: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x672, x644, 64), x3, 64), x657, 64),
        x3,
        64
    );
    let x674: BytePoly_34 = bigint_nondet_quot!(ctx, x673, x3, 34);
    let x675: BytePoly_32 = bigint_nondet_rem!(ctx, x673, x3, 32);
    let x676: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x669, x675, 64),
                        bigint_add!(bigint_sub!(x646, bigint_mul!(x669, x644, 64), 64), x3, 64),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x677: BytePoly_34 = bigint_nondet_quot!(ctx, x676, x3, 34);
    let x678: BytePoly_32 = bigint_nondet_rem!(ctx, x676, x3, 32);
    let x679: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x672, bigint_mul!(x674, x3, 66), 66), x644, 66),
                    x657,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x675,
        66
    );
    eqz(ctx, &x679, 276359, 4)?;
    let x680: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x677, x3, 66), x678, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x669, bigint_sub!(x644, x675, 32), 64), x646, 64),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x680, 276359, 4)?;
    let x681: BytePoly_33 =
        bigint_add!(bigint_mul!(x675, x661, 33), bigint_mul!(x644, x663, 33), 33);
    let x682: BytePoly_33 =
        bigint_add!(bigint_mul!(x678, x661, 33), bigint_mul!(x646, x663, 33), 33);
    let x683: BytePoly_3 = bigint_nondet_quot!(ctx, x681, x3, 3);
    let x684: BytePoly_32 = bigint_nondet_rem!(ctx, x681, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x683, x3, 35), x684, 35), x681, 35),
        260103,
        4,
    )?;
    let x685: BytePoly_3 = bigint_nondet_quot!(ctx, x682, x3, 3);
    let x686: BytePoly_32 = bigint_nondet_rem!(ctx, x682, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x685, x3, 35), x686, 35), x682, 35),
        260103,
        4,
    )?;
    let x687: BytePoly_64 = bigint_mul!(x657, x657, 64);
    let x688: BytePoly_64 = bigint_add!(bigint_add!(bigint_add!(x687, x687, 64), x687, 64), x2, 64);
    let x689: BytePoly_64 = bigint_add!(x48, x688, 64);
    let x690: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x660, x660, 32), x3, 32);
    let x691: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x688, x690, 96), x3, 32);
    let x692: BytePoly_64 = bigint_mul!(x660, x691, 64);
    let x693: BytePoly_64 = bigint_add!(x692, x692, 64);
    let x694: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x689, x693, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x694, x3, 66), x693, 66), x689, 66),
        276359,
        4,
    )?;
    let x695: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x691, x691, 64), x3, 64), x3, 64),
            x657,
            64
        ),
        x657,
        64
    );
    let x696: BytePoly_34 = bigint_nondet_quot!(ctx, x695, x3, 34);
    let x697: BytePoly_32 = bigint_nondet_rem!(ctx, x695, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x696, x3, 66), x697, 66), x695, 66),
        276359,
        4,
    )?;
    let x698: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x691, x697, 64), 64), x3, 64),
            x660,
            64
        ),
        bigint_mul!(x691, x657, 64),
        64
    );
    let x699: BytePoly_34 = bigint_nondet_quot!(ctx, x698, x3, 34);
    let x700: BytePoly_32 = bigint_nondet_rem!(ctx, x698, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x699, x3, 66), x700, 66), x698, 66),
        276359,
        4,
    )?;
    let x701: BytePoly_1 = bigint_nondet_rem!(ctx, x662, x4, 1);
    let x702: BytePoly_32 = bigint_nondet_quot!(ctx, x662, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x702, x4, 33), x701, 33), x662, 33),
        260103,
        4,
    )?;
    let x703: BytePoly_1 = bigint_sub!(x5, x701, 1);
    eqz(ctx, &bigint_mul!(x701, x703, 2), 8131, 2)?;
    let x704: BytePoly_32 = bigint_add!(bigint_sub!(x700, x686, 32), x3, 32);
    let x705: BytePoly_32 = bigint_add!(bigint_sub!(x697, x684, 32), x3, 32);
    let x706: BytePoly_32 = bigint_nondet_inv!(ctx, x705, x3, 32);
    let x707: BytePoly_64 = bigint_mul!(x705, x706, 64);
    let x708: BytePoly_34 = bigint_nondet_quot!(ctx, x707, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x707, bigint_mul!(x708, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x709: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x704, x706, 64), x3, 32);
    let x710: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x709, x705, 64), x704, 64), x3, 64),
        x3,
        64
    );
    let x711: BytePoly_34 = bigint_nondet_quot!(ctx, x710, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x710, bigint_mul!(x711, x3, 66), 66),
        276359,
        4,
    )?;
    let x712: BytePoly_64 = bigint_mul!(x709, x709, 64);
    let x713: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x712, x684, 64), x3, 64), x697, 64),
        x3,
        64
    );
    let x714: BytePoly_34 = bigint_nondet_quot!(ctx, x713, x3, 34);
    let x715: BytePoly_32 = bigint_nondet_rem!(ctx, x713, x3, 32);
    let x716: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x709, x715, 64),
                        bigint_add!(bigint_sub!(x686, bigint_mul!(x709, x684, 64), 64), x3, 64),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x717: BytePoly_34 = bigint_nondet_quot!(ctx, x716, x3, 34);
    let x718: BytePoly_32 = bigint_nondet_rem!(ctx, x716, x3, 32);
    let x719: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x712, bigint_mul!(x714, x3, 66), 66), x684, 66),
                    x697,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x715,
        66
    );
    eqz(ctx, &x719, 276359, 4)?;
    let x720: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x717, x3, 66), x718, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x709, bigint_sub!(x684, x715, 32), 64), x686, 64),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x720, 276359, 4)?;
    let x721: BytePoly_33 =
        bigint_add!(bigint_mul!(x715, x701, 33), bigint_mul!(x684, x703, 33), 33);
    let x722: BytePoly_33 =
        bigint_add!(bigint_mul!(x718, x701, 33), bigint_mul!(x686, x703, 33), 33);
    let x723: BytePoly_3 = bigint_nondet_quot!(ctx, x721, x3, 3);
    let x724: BytePoly_32 = bigint_nondet_rem!(ctx, x721, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x723, x3, 35), x724, 35), x721, 35),
        260103,
        4,
    )?;
    let x725: BytePoly_3 = bigint_nondet_quot!(ctx, x722, x3, 3);
    let x726: BytePoly_32 = bigint_nondet_rem!(ctx, x722, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x725, x3, 35), x726, 35), x722, 35),
        260103,
        4,
    )?;
    let x727: BytePoly_64 = bigint_mul!(x697, x697, 64);
    let x728: BytePoly_64 = bigint_add!(bigint_add!(bigint_add!(x727, x727, 64), x727, 64), x2, 64);
    let x729: BytePoly_64 = bigint_add!(x48, x728, 64);
    let x730: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x700, x700, 32), x3, 32);
    let x731: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x728, x730, 96), x3, 32);
    let x732: BytePoly_64 = bigint_mul!(x700, x731, 64);
    let x733: BytePoly_64 = bigint_add!(x732, x732, 64);
    let x734: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x729, x733, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x734, x3, 66), x733, 66), x729, 66),
        276359,
        4,
    )?;
    let x735: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x731, x731, 64), x3, 64), x3, 64),
            x697,
            64
        ),
        x697,
        64
    );
    let x736: BytePoly_34 = bigint_nondet_quot!(ctx, x735, x3, 34);
    let x737: BytePoly_32 = bigint_nondet_rem!(ctx, x735, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x736, x3, 66), x737, 66), x735, 66),
        276359,
        4,
    )?;
    let x738: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x731, x737, 64), 64), x3, 64),
            x700,
            64
        ),
        bigint_mul!(x731, x697, 64),
        64
    );
    let x739: BytePoly_34 = bigint_nondet_quot!(ctx, x738, x3, 34);
    let x740: BytePoly_32 = bigint_nondet_rem!(ctx, x738, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x739, x3, 66), x740, 66), x738, 66),
        276359,
        4,
    )?;
    let x741: BytePoly_1 = bigint_nondet_rem!(ctx, x702, x4, 1);
    let x742: BytePoly_32 = bigint_nondet_quot!(ctx, x702, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x742, x4, 33), x741, 33), x702, 33),
        260103,
        4,
    )?;
    let x743: BytePoly_1 = bigint_sub!(x5, x741, 1);
    eqz(ctx, &bigint_mul!(x741, x743, 2), 8131, 2)?;
    let x744: BytePoly_32 = bigint_add!(bigint_sub!(x740, x726, 32), x3, 32);
    let x745: BytePoly_32 = bigint_add!(bigint_sub!(x737, x724, 32), x3, 32);
    let x746: BytePoly_32 = bigint_nondet_inv!(ctx, x745, x3, 32);
    let x747: BytePoly_64 = bigint_mul!(x745, x746, 64);
    let x748: BytePoly_34 = bigint_nondet_quot!(ctx, x747, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x747, bigint_mul!(x748, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x749: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x744, x746, 64), x3, 32);
    let x750: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x749, x745, 64), x744, 64), x3, 64),
        x3,
        64
    );
    let x751: BytePoly_34 = bigint_nondet_quot!(ctx, x750, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x750, bigint_mul!(x751, x3, 66), 66),
        276359,
        4,
    )?;
    let x752: BytePoly_64 = bigint_mul!(x749, x749, 64);
    let x753: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x752, x724, 64), x3, 64), x737, 64),
        x3,
        64
    );
    let x754: BytePoly_34 = bigint_nondet_quot!(ctx, x753, x3, 34);
    let x755: BytePoly_32 = bigint_nondet_rem!(ctx, x753, x3, 32);
    let x756: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x749, x755, 64),
                        bigint_add!(bigint_sub!(x726, bigint_mul!(x749, x724, 64), 64), x3, 64),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x757: BytePoly_34 = bigint_nondet_quot!(ctx, x756, x3, 34);
    let x758: BytePoly_32 = bigint_nondet_rem!(ctx, x756, x3, 32);
    let x759: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x752, bigint_mul!(x754, x3, 66), 66), x724, 66),
                    x737,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x755,
        66
    );
    eqz(ctx, &x759, 276359, 4)?;
    let x760: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x757, x3, 66), x758, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x749, bigint_sub!(x724, x755, 32), 64), x726, 64),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x760, 276359, 4)?;
    let x761: BytePoly_33 =
        bigint_add!(bigint_mul!(x755, x741, 33), bigint_mul!(x724, x743, 33), 33);
    let x762: BytePoly_33 =
        bigint_add!(bigint_mul!(x758, x741, 33), bigint_mul!(x726, x743, 33), 33);
    let x763: BytePoly_3 = bigint_nondet_quot!(ctx, x761, x3, 3);
    let x764: BytePoly_32 = bigint_nondet_rem!(ctx, x761, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x763, x3, 35), x764, 35), x761, 35),
        260103,
        4,
    )?;
    let x765: BytePoly_3 = bigint_nondet_quot!(ctx, x762, x3, 3);
    let x766: BytePoly_32 = bigint_nondet_rem!(ctx, x762, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x765, x3, 35), x766, 35), x762, 35),
        260103,
        4,
    )?;
    let x767: BytePoly_64 = bigint_mul!(x737, x737, 64);
    let x768: BytePoly_64 = bigint_add!(bigint_add!(bigint_add!(x767, x767, 64), x767, 64), x2, 64);
    let x769: BytePoly_64 = bigint_add!(x48, x768, 64);
    let x770: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x740, x740, 32), x3, 32);
    let x771: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x768, x770, 96), x3, 32);
    let x772: BytePoly_64 = bigint_mul!(x740, x771, 64);
    let x773: BytePoly_64 = bigint_add!(x772, x772, 64);
    let x774: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x769, x773, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x774, x3, 66), x773, 66), x769, 66),
        276359,
        4,
    )?;
    let x775: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x771, x771, 64), x3, 64), x3, 64),
            x737,
            64
        ),
        x737,
        64
    );
    let x776: BytePoly_34 = bigint_nondet_quot!(ctx, x775, x3, 34);
    let x777: BytePoly_32 = bigint_nondet_rem!(ctx, x775, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x776, x3, 66), x777, 66), x775, 66),
        276359,
        4,
    )?;
    let x778: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x771, x777, 64), 64), x3, 64),
            x740,
            64
        ),
        bigint_mul!(x771, x737, 64),
        64
    );
    let x779: BytePoly_34 = bigint_nondet_quot!(ctx, x778, x3, 34);
    let x780: BytePoly_32 = bigint_nondet_rem!(ctx, x778, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x779, x3, 66), x780, 66), x778, 66),
        276359,
        4,
    )?;
    let x781: BytePoly_1 = bigint_nondet_rem!(ctx, x742, x4, 1);
    let x782: BytePoly_32 = bigint_nondet_quot!(ctx, x742, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x782, x4, 33), x781, 33), x742, 33),
        260103,
        4,
    )?;
    let x783: BytePoly_1 = bigint_sub!(x5, x781, 1);
    eqz(ctx, &bigint_mul!(x781, x783, 2), 8131, 2)?;
    let x784: BytePoly_32 = bigint_add!(bigint_sub!(x780, x766, 32), x3, 32);
    let x785: BytePoly_32 = bigint_add!(bigint_sub!(x777, x764, 32), x3, 32);
    let x786: BytePoly_32 = bigint_nondet_inv!(ctx, x785, x3, 32);
    let x787: BytePoly_64 = bigint_mul!(x785, x786, 64);
    let x788: BytePoly_34 = bigint_nondet_quot!(ctx, x787, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x787, bigint_mul!(x788, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x789: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x784, x786, 64), x3, 32);
    let x790: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x789, x785, 64), x784, 64), x3, 64),
        x3,
        64
    );
    let x791: BytePoly_34 = bigint_nondet_quot!(ctx, x790, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x790, bigint_mul!(x791, x3, 66), 66),
        276359,
        4,
    )?;
    let x792: BytePoly_64 = bigint_mul!(x789, x789, 64);
    let x793: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x792, x764, 64), x3, 64), x777, 64),
        x3,
        64
    );
    let x794: BytePoly_34 = bigint_nondet_quot!(ctx, x793, x3, 34);
    let x795: BytePoly_32 = bigint_nondet_rem!(ctx, x793, x3, 32);
    let x796: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x789, x795, 64),
                        bigint_add!(bigint_sub!(x766, bigint_mul!(x789, x764, 64), 64), x3, 64),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x797: BytePoly_34 = bigint_nondet_quot!(ctx, x796, x3, 34);
    let x798: BytePoly_32 = bigint_nondet_rem!(ctx, x796, x3, 32);
    let x799: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x792, bigint_mul!(x794, x3, 66), 66), x764, 66),
                    x777,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x795,
        66
    );
    eqz(ctx, &x799, 276359, 4)?;
    let x800: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x797, x3, 66), x798, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x789, bigint_sub!(x764, x795, 32), 64), x766, 64),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x800, 276359, 4)?;
    let x801: BytePoly_33 =
        bigint_add!(bigint_mul!(x795, x781, 33), bigint_mul!(x764, x783, 33), 33);
    let x802: BytePoly_33 =
        bigint_add!(bigint_mul!(x798, x781, 33), bigint_mul!(x766, x783, 33), 33);
    let x803: BytePoly_3 = bigint_nondet_quot!(ctx, x801, x3, 3);
    let x804: BytePoly_32 = bigint_nondet_rem!(ctx, x801, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x803, x3, 35), x804, 35), x801, 35),
        260103,
        4,
    )?;
    let x805: BytePoly_3 = bigint_nondet_quot!(ctx, x802, x3, 3);
    let x806: BytePoly_32 = bigint_nondet_rem!(ctx, x802, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x805, x3, 35), x806, 35), x802, 35),
        260103,
        4,
    )?;
    let x807: BytePoly_64 = bigint_mul!(x777, x777, 64);
    let x808: BytePoly_64 = bigint_add!(bigint_add!(bigint_add!(x807, x807, 64), x807, 64), x2, 64);
    let x809: BytePoly_64 = bigint_add!(x48, x808, 64);
    let x810: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x780, x780, 32), x3, 32);
    let x811: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x808, x810, 96), x3, 32);
    let x812: BytePoly_64 = bigint_mul!(x780, x811, 64);
    let x813: BytePoly_64 = bigint_add!(x812, x812, 64);
    let x814: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x809, x813, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x814, x3, 66), x813, 66), x809, 66),
        276359,
        4,
    )?;
    let x815: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x811, x811, 64), x3, 64), x3, 64),
            x777,
            64
        ),
        x777,
        64
    );
    let x816: BytePoly_34 = bigint_nondet_quot!(ctx, x815, x3, 34);
    let x817: BytePoly_32 = bigint_nondet_rem!(ctx, x815, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x816, x3, 66), x817, 66), x815, 66),
        276359,
        4,
    )?;
    let x818: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x811, x817, 64), 64), x3, 64),
            x780,
            64
        ),
        bigint_mul!(x811, x777, 64),
        64
    );
    let x819: BytePoly_34 = bigint_nondet_quot!(ctx, x818, x3, 34);
    let x820: BytePoly_32 = bigint_nondet_rem!(ctx, x818, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x819, x3, 66), x820, 66), x818, 66),
        276359,
        4,
    )?;
    let x821: BytePoly_1 = bigint_nondet_rem!(ctx, x782, x4, 1);
    let x822: BytePoly_32 = bigint_nondet_quot!(ctx, x782, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x822, x4, 33), x821, 33), x782, 33),
        260103,
        4,
    )?;
    let x823: BytePoly_1 = bigint_sub!(x5, x821, 1);
    eqz(ctx, &bigint_mul!(x821, x823, 2), 8131, 2)?;
    let x824: BytePoly_32 = bigint_add!(bigint_sub!(x820, x806, 32), x3, 32);
    let x825: BytePoly_32 = bigint_add!(bigint_sub!(x817, x804, 32), x3, 32);
    let x826: BytePoly_32 = bigint_nondet_inv!(ctx, x825, x3, 32);
    let x827: BytePoly_64 = bigint_mul!(x825, x826, 64);
    let x828: BytePoly_34 = bigint_nondet_quot!(ctx, x827, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x827, bigint_mul!(x828, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x829: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x824, x826, 64), x3, 32);
    let x830: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x829, x825, 64), x824, 64), x3, 64),
        x3,
        64
    );
    let x831: BytePoly_34 = bigint_nondet_quot!(ctx, x830, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x830, bigint_mul!(x831, x3, 66), 66),
        276359,
        4,
    )?;
    let x832: BytePoly_64 = bigint_mul!(x829, x829, 64);
    let x833: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x832, x804, 64), x3, 64), x817, 64),
        x3,
        64
    );
    let x834: BytePoly_34 = bigint_nondet_quot!(ctx, x833, x3, 34);
    let x835: BytePoly_32 = bigint_nondet_rem!(ctx, x833, x3, 32);
    let x836: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x829, x835, 64),
                        bigint_add!(bigint_sub!(x806, bigint_mul!(x829, x804, 64), 64), x3, 64),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x837: BytePoly_34 = bigint_nondet_quot!(ctx, x836, x3, 34);
    let x838: BytePoly_32 = bigint_nondet_rem!(ctx, x836, x3, 32);
    let x839: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x832, bigint_mul!(x834, x3, 66), 66), x804, 66),
                    x817,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x835,
        66
    );
    eqz(ctx, &x839, 276359, 4)?;
    let x840: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x837, x3, 66), x838, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x829, bigint_sub!(x804, x835, 32), 64), x806, 64),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x840, 276359, 4)?;
    let x841: BytePoly_33 =
        bigint_add!(bigint_mul!(x835, x821, 33), bigint_mul!(x804, x823, 33), 33);
    let x842: BytePoly_33 =
        bigint_add!(bigint_mul!(x838, x821, 33), bigint_mul!(x806, x823, 33), 33);
    let x843: BytePoly_3 = bigint_nondet_quot!(ctx, x841, x3, 3);
    let x844: BytePoly_32 = bigint_nondet_rem!(ctx, x841, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x843, x3, 35), x844, 35), x841, 35),
        260103,
        4,
    )?;
    let x845: BytePoly_3 = bigint_nondet_quot!(ctx, x842, x3, 3);
    let x846: BytePoly_32 = bigint_nondet_rem!(ctx, x842, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x845, x3, 35), x846, 35), x842, 35),
        260103,
        4,
    )?;
    let x847: BytePoly_64 = bigint_mul!(x817, x817, 64);
    let x848: BytePoly_64 = bigint_add!(bigint_add!(bigint_add!(x847, x847, 64), x847, 64), x2, 64);
    let x849: BytePoly_64 = bigint_add!(x48, x848, 64);
    let x850: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x820, x820, 32), x3, 32);
    let x851: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x848, x850, 96), x3, 32);
    let x852: BytePoly_64 = bigint_mul!(x820, x851, 64);
    let x853: BytePoly_64 = bigint_add!(x852, x852, 64);
    let x854: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x849, x853, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x854, x3, 66), x853, 66), x849, 66),
        276359,
        4,
    )?;
    let x855: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x851, x851, 64), x3, 64), x3, 64),
            x817,
            64
        ),
        x817,
        64
    );
    let x856: BytePoly_34 = bigint_nondet_quot!(ctx, x855, x3, 34);
    let x857: BytePoly_32 = bigint_nondet_rem!(ctx, x855, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x856, x3, 66), x857, 66), x855, 66),
        276359,
        4,
    )?;
    let x858: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x851, x857, 64), 64), x3, 64),
            x820,
            64
        ),
        bigint_mul!(x851, x817, 64),
        64
    );
    let x859: BytePoly_34 = bigint_nondet_quot!(ctx, x858, x3, 34);
    let x860: BytePoly_32 = bigint_nondet_rem!(ctx, x858, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x859, x3, 66), x860, 66), x858, 66),
        276359,
        4,
    )?;
    let x861: BytePoly_1 = bigint_nondet_rem!(ctx, x822, x4, 1);
    let x862: BytePoly_32 = bigint_nondet_quot!(ctx, x822, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x862, x4, 33), x861, 33), x822, 33),
        260103,
        4,
    )?;
    let x863: BytePoly_1 = bigint_sub!(x5, x861, 1);
    eqz(ctx, &bigint_mul!(x861, x863, 2), 8131, 2)?;
    let x864: BytePoly_32 = bigint_add!(bigint_sub!(x860, x846, 32), x3, 32);
    let x865: BytePoly_32 = bigint_add!(bigint_sub!(x857, x844, 32), x3, 32);
    let x866: BytePoly_32 = bigint_nondet_inv!(ctx, x865, x3, 32);
    let x867: BytePoly_64 = bigint_mul!(x865, x866, 64);
    let x868: BytePoly_34 = bigint_nondet_quot!(ctx, x867, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x867, bigint_mul!(x868, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x869: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x864, x866, 64), x3, 32);
    let x870: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x869, x865, 64), x864, 64), x3, 64),
        x3,
        64
    );
    let x871: BytePoly_34 = bigint_nondet_quot!(ctx, x870, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x870, bigint_mul!(x871, x3, 66), 66),
        276359,
        4,
    )?;
    let x872: BytePoly_64 = bigint_mul!(x869, x869, 64);
    let x873: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x872, x844, 64), x3, 64), x857, 64),
        x3,
        64
    );
    let x874: BytePoly_34 = bigint_nondet_quot!(ctx, x873, x3, 34);
    let x875: BytePoly_32 = bigint_nondet_rem!(ctx, x873, x3, 32);
    let x876: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x869, x875, 64),
                        bigint_add!(bigint_sub!(x846, bigint_mul!(x869, x844, 64), 64), x3, 64),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x877: BytePoly_34 = bigint_nondet_quot!(ctx, x876, x3, 34);
    let x878: BytePoly_32 = bigint_nondet_rem!(ctx, x876, x3, 32);
    let x879: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x872, bigint_mul!(x874, x3, 66), 66), x844, 66),
                    x857,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x875,
        66
    );
    eqz(ctx, &x879, 276359, 4)?;
    let x880: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x877, x3, 66), x878, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x869, bigint_sub!(x844, x875, 32), 64), x846, 64),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x880, 276359, 4)?;
    let x881: BytePoly_33 =
        bigint_add!(bigint_mul!(x875, x861, 33), bigint_mul!(x844, x863, 33), 33);
    let x882: BytePoly_33 =
        bigint_add!(bigint_mul!(x878, x861, 33), bigint_mul!(x846, x863, 33), 33);
    let x883: BytePoly_3 = bigint_nondet_quot!(ctx, x881, x3, 3);
    let x884: BytePoly_32 = bigint_nondet_rem!(ctx, x881, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x883, x3, 35), x884, 35), x881, 35),
        260103,
        4,
    )?;
    let x885: BytePoly_3 = bigint_nondet_quot!(ctx, x882, x3, 3);
    let x886: BytePoly_32 = bigint_nondet_rem!(ctx, x882, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x885, x3, 35), x886, 35), x882, 35),
        260103,
        4,
    )?;
    let x887: BytePoly_64 = bigint_mul!(x857, x857, 64);
    let x888: BytePoly_64 = bigint_add!(bigint_add!(bigint_add!(x887, x887, 64), x887, 64), x2, 64);
    let x889: BytePoly_64 = bigint_add!(x48, x888, 64);
    let x890: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x860, x860, 32), x3, 32);
    let x891: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x888, x890, 96), x3, 32);
    let x892: BytePoly_64 = bigint_mul!(x860, x891, 64);
    let x893: BytePoly_64 = bigint_add!(x892, x892, 64);
    let x894: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x889, x893, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x894, x3, 66), x893, 66), x889, 66),
        276359,
        4,
    )?;
    let x895: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x891, x891, 64), x3, 64), x3, 64),
            x857,
            64
        ),
        x857,
        64
    );
    let x896: BytePoly_34 = bigint_nondet_quot!(ctx, x895, x3, 34);
    let x897: BytePoly_32 = bigint_nondet_rem!(ctx, x895, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x896, x3, 66), x897, 66), x895, 66),
        276359,
        4,
    )?;
    let x898: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x891, x897, 64), 64), x3, 64),
            x860,
            64
        ),
        bigint_mul!(x891, x857, 64),
        64
    );
    let x899: BytePoly_34 = bigint_nondet_quot!(ctx, x898, x3, 34);
    let x900: BytePoly_32 = bigint_nondet_rem!(ctx, x898, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x899, x3, 66), x900, 66), x898, 66),
        276359,
        4,
    )?;
    let x901: BytePoly_1 = bigint_nondet_rem!(ctx, x862, x4, 1);
    let x902: BytePoly_32 = bigint_nondet_quot!(ctx, x862, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x902, x4, 33), x901, 33), x862, 33),
        260103,
        4,
    )?;
    let x903: BytePoly_1 = bigint_sub!(x5, x901, 1);
    eqz(ctx, &bigint_mul!(x901, x903, 2), 8131, 2)?;
    let x904: BytePoly_32 = bigint_add!(bigint_sub!(x900, x886, 32), x3, 32);
    let x905: BytePoly_32 = bigint_add!(bigint_sub!(x897, x884, 32), x3, 32);
    let x906: BytePoly_32 = bigint_nondet_inv!(ctx, x905, x3, 32);
    let x907: BytePoly_64 = bigint_mul!(x905, x906, 64);
    let x908: BytePoly_34 = bigint_nondet_quot!(ctx, x907, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x907, bigint_mul!(x908, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x909: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x904, x906, 64), x3, 32);
    let x910: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x909, x905, 64), x904, 64), x3, 64),
        x3,
        64
    );
    let x911: BytePoly_34 = bigint_nondet_quot!(ctx, x910, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x910, bigint_mul!(x911, x3, 66), 66),
        276359,
        4,
    )?;
    let x912: BytePoly_64 = bigint_mul!(x909, x909, 64);
    let x913: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x912, x884, 64), x3, 64), x897, 64),
        x3,
        64
    );
    let x914: BytePoly_34 = bigint_nondet_quot!(ctx, x913, x3, 34);
    let x915: BytePoly_32 = bigint_nondet_rem!(ctx, x913, x3, 32);
    let x916: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x909, x915, 64),
                        bigint_add!(bigint_sub!(x886, bigint_mul!(x909, x884, 64), 64), x3, 64),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x917: BytePoly_34 = bigint_nondet_quot!(ctx, x916, x3, 34);
    let x918: BytePoly_32 = bigint_nondet_rem!(ctx, x916, x3, 32);
    let x919: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x912, bigint_mul!(x914, x3, 66), 66), x884, 66),
                    x897,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x915,
        66
    );
    eqz(ctx, &x919, 276359, 4)?;
    let x920: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x917, x3, 66), x918, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x909, bigint_sub!(x884, x915, 32), 64), x886, 64),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x920, 276359, 4)?;
    let x921: BytePoly_33 =
        bigint_add!(bigint_mul!(x915, x901, 33), bigint_mul!(x884, x903, 33), 33);
    let x922: BytePoly_33 =
        bigint_add!(bigint_mul!(x918, x901, 33), bigint_mul!(x886, x903, 33), 33);
    let x923: BytePoly_3 = bigint_nondet_quot!(ctx, x921, x3, 3);
    let x924: BytePoly_32 = bigint_nondet_rem!(ctx, x921, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x923, x3, 35), x924, 35), x921, 35),
        260103,
        4,
    )?;
    let x925: BytePoly_3 = bigint_nondet_quot!(ctx, x922, x3, 3);
    let x926: BytePoly_32 = bigint_nondet_rem!(ctx, x922, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x925, x3, 35), x926, 35), x922, 35),
        260103,
        4,
    )?;
    let x927: BytePoly_64 = bigint_mul!(x897, x897, 64);
    let x928: BytePoly_64 = bigint_add!(bigint_add!(bigint_add!(x927, x927, 64), x927, 64), x2, 64);
    let x929: BytePoly_64 = bigint_add!(x48, x928, 64);
    let x930: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x900, x900, 32), x3, 32);
    let x931: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x928, x930, 96), x3, 32);
    let x932: BytePoly_64 = bigint_mul!(x900, x931, 64);
    let x933: BytePoly_64 = bigint_add!(x932, x932, 64);
    let x934: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x929, x933, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x934, x3, 66), x933, 66), x929, 66),
        276359,
        4,
    )?;
    let x935: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x931, x931, 64), x3, 64), x3, 64),
            x897,
            64
        ),
        x897,
        64
    );
    let x936: BytePoly_34 = bigint_nondet_quot!(ctx, x935, x3, 34);
    let x937: BytePoly_32 = bigint_nondet_rem!(ctx, x935, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x936, x3, 66), x937, 66), x935, 66),
        276359,
        4,
    )?;
    let x938: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x931, x937, 64), 64), x3, 64),
            x900,
            64
        ),
        bigint_mul!(x931, x897, 64),
        64
    );
    let x939: BytePoly_34 = bigint_nondet_quot!(ctx, x938, x3, 34);
    let x940: BytePoly_32 = bigint_nondet_rem!(ctx, x938, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x939, x3, 66), x940, 66), x938, 66),
        276359,
        4,
    )?;
    let x941: BytePoly_1 = bigint_nondet_rem!(ctx, x902, x4, 1);
    let x942: BytePoly_32 = bigint_nondet_quot!(ctx, x902, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x942, x4, 33), x941, 33), x902, 33),
        260103,
        4,
    )?;
    let x943: BytePoly_1 = bigint_sub!(x5, x941, 1);
    eqz(ctx, &bigint_mul!(x941, x943, 2), 8131, 2)?;
    let x944: BytePoly_32 = bigint_add!(bigint_sub!(x940, x926, 32), x3, 32);
    let x945: BytePoly_32 = bigint_add!(bigint_sub!(x937, x924, 32), x3, 32);
    let x946: BytePoly_32 = bigint_nondet_inv!(ctx, x945, x3, 32);
    let x947: BytePoly_64 = bigint_mul!(x945, x946, 64);
    let x948: BytePoly_34 = bigint_nondet_quot!(ctx, x947, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x947, bigint_mul!(x948, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x949: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x944, x946, 64), x3, 32);
    let x950: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x949, x945, 64), x944, 64), x3, 64),
        x3,
        64
    );
    let x951: BytePoly_34 = bigint_nondet_quot!(ctx, x950, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x950, bigint_mul!(x951, x3, 66), 66),
        276359,
        4,
    )?;
    let x952: BytePoly_64 = bigint_mul!(x949, x949, 64);
    let x953: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x952, x924, 64), x3, 64), x937, 64),
        x3,
        64
    );
    let x954: BytePoly_34 = bigint_nondet_quot!(ctx, x953, x3, 34);
    let x955: BytePoly_32 = bigint_nondet_rem!(ctx, x953, x3, 32);
    let x956: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x949, x955, 64),
                        bigint_add!(bigint_sub!(x926, bigint_mul!(x949, x924, 64), 64), x3, 64),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x957: BytePoly_34 = bigint_nondet_quot!(ctx, x956, x3, 34);
    let x958: BytePoly_32 = bigint_nondet_rem!(ctx, x956, x3, 32);
    let x959: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x952, bigint_mul!(x954, x3, 66), 66), x924, 66),
                    x937,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x955,
        66
    );
    eqz(ctx, &x959, 276359, 4)?;
    let x960: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x957, x3, 66), x958, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x949, bigint_sub!(x924, x955, 32), 64), x926, 64),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x960, 276359, 4)?;
    let x961: BytePoly_33 =
        bigint_add!(bigint_mul!(x955, x941, 33), bigint_mul!(x924, x943, 33), 33);
    let x962: BytePoly_33 =
        bigint_add!(bigint_mul!(x958, x941, 33), bigint_mul!(x926, x943, 33), 33);
    let x963: BytePoly_3 = bigint_nondet_quot!(ctx, x961, x3, 3);
    let x964: BytePoly_32 = bigint_nondet_rem!(ctx, x961, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x963, x3, 35), x964, 35), x961, 35),
        260103,
        4,
    )?;
    let x965: BytePoly_3 = bigint_nondet_quot!(ctx, x962, x3, 3);
    let x966: BytePoly_32 = bigint_nondet_rem!(ctx, x962, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x965, x3, 35), x966, 35), x962, 35),
        260103,
        4,
    )?;
    let x967: BytePoly_64 = bigint_mul!(x937, x937, 64);
    let x968: BytePoly_64 = bigint_add!(bigint_add!(bigint_add!(x967, x967, 64), x967, 64), x2, 64);
    let x969: BytePoly_64 = bigint_add!(x48, x968, 64);
    let x970: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x940, x940, 32), x3, 32);
    let x971: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x968, x970, 96), x3, 32);
    let x972: BytePoly_64 = bigint_mul!(x940, x971, 64);
    let x973: BytePoly_64 = bigint_add!(x972, x972, 64);
    let x974: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x969, x973, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x974, x3, 66), x973, 66), x969, 66),
        276359,
        4,
    )?;
    let x975: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x971, x971, 64), x3, 64), x3, 64),
            x937,
            64
        ),
        x937,
        64
    );
    let x976: BytePoly_34 = bigint_nondet_quot!(ctx, x975, x3, 34);
    let x977: BytePoly_32 = bigint_nondet_rem!(ctx, x975, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x976, x3, 66), x977, 66), x975, 66),
        276359,
        4,
    )?;
    let x978: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x971, x977, 64), 64), x3, 64),
            x940,
            64
        ),
        bigint_mul!(x971, x937, 64),
        64
    );
    let x979: BytePoly_34 = bigint_nondet_quot!(ctx, x978, x3, 34);
    let x980: BytePoly_32 = bigint_nondet_rem!(ctx, x978, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x979, x3, 66), x980, 66), x978, 66),
        276359,
        4,
    )?;
    let x981: BytePoly_1 = bigint_nondet_rem!(ctx, x942, x4, 1);
    let x982: BytePoly_32 = bigint_nondet_quot!(ctx, x942, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x982, x4, 33), x981, 33), x942, 33),
        260103,
        4,
    )?;
    let x983: BytePoly_1 = bigint_sub!(x5, x981, 1);
    eqz(ctx, &bigint_mul!(x981, x983, 2), 8131, 2)?;
    let x984: BytePoly_32 = bigint_add!(bigint_sub!(x980, x966, 32), x3, 32);
    let x985: BytePoly_32 = bigint_add!(bigint_sub!(x977, x964, 32), x3, 32);
    let x986: BytePoly_32 = bigint_nondet_inv!(ctx, x985, x3, 32);
    let x987: BytePoly_64 = bigint_mul!(x985, x986, 64);
    let x988: BytePoly_34 = bigint_nondet_quot!(ctx, x987, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x987, bigint_mul!(x988, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x989: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x984, x986, 64), x3, 32);
    let x990: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x989, x985, 64), x984, 64), x3, 64),
        x3,
        64
    );
    let x991: BytePoly_34 = bigint_nondet_quot!(ctx, x990, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x990, bigint_mul!(x991, x3, 66), 66),
        276359,
        4,
    )?;
    let x992: BytePoly_64 = bigint_mul!(x989, x989, 64);
    let x993: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x992, x964, 64), x3, 64), x977, 64),
        x3,
        64
    );
    let x994: BytePoly_34 = bigint_nondet_quot!(ctx, x993, x3, 34);
    let x995: BytePoly_32 = bigint_nondet_rem!(ctx, x993, x3, 32);
    let x996: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x989, x995, 64),
                        bigint_add!(bigint_sub!(x966, bigint_mul!(x989, x964, 64), 64), x3, 64),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x997: BytePoly_34 = bigint_nondet_quot!(ctx, x996, x3, 34);
    let x998: BytePoly_32 = bigint_nondet_rem!(ctx, x996, x3, 32);
    let x999: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x992, bigint_mul!(x994, x3, 66), 66), x964, 66),
                    x977,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x995,
        66
    );
    eqz(ctx, &x999, 276359, 4)?;
    let x1000: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x997, x3, 66), x998, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x989, bigint_sub!(x964, x995, 32), 64), x966, 64),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x1000, 276359, 4)?;
    let x1001: BytePoly_33 =
        bigint_add!(bigint_mul!(x995, x981, 33), bigint_mul!(x964, x983, 33), 33);
    let x1002: BytePoly_33 =
        bigint_add!(bigint_mul!(x998, x981, 33), bigint_mul!(x966, x983, 33), 33);
    let x1003: BytePoly_3 = bigint_nondet_quot!(ctx, x1001, x3, 3);
    let x1004: BytePoly_32 = bigint_nondet_rem!(ctx, x1001, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1003, x3, 35), x1004, 35),
            x1001,
            35
        ),
        260103,
        4,
    )?;
    let x1005: BytePoly_3 = bigint_nondet_quot!(ctx, x1002, x3, 3);
    let x1006: BytePoly_32 = bigint_nondet_rem!(ctx, x1002, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1005, x3, 35), x1006, 35),
            x1002,
            35
        ),
        260103,
        4,
    )?;
    let x1007: BytePoly_64 = bigint_mul!(x977, x977, 64);
    let x1008: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x1007, x1007, 64), x1007, 64),
        x2,
        64
    );
    let x1009: BytePoly_64 = bigint_add!(x48, x1008, 64);
    let x1010: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x980, x980, 32), x3, 32);
    let x1011: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1008, x1010, 96), x3, 32);
    let x1012: BytePoly_64 = bigint_mul!(x980, x1011, 64);
    let x1013: BytePoly_64 = bigint_add!(x1012, x1012, 64);
    let x1014: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x1009, x1013, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1014, x3, 66), x1013, 66),
            x1009,
            66
        ),
        276359,
        4,
    )?;
    let x1015: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1011, x1011, 64), x3, 64), x3, 64),
            x977,
            64
        ),
        x977,
        64
    );
    let x1016: BytePoly_34 = bigint_nondet_quot!(ctx, x1015, x3, 34);
    let x1017: BytePoly_32 = bigint_nondet_rem!(ctx, x1015, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1016, x3, 66), x1017, 66),
            x1015,
            66
        ),
        276359,
        4,
    )?;
    let x1018: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x1011, x1017, 64), 64), x3, 64),
            x980,
            64
        ),
        bigint_mul!(x1011, x977, 64),
        64
    );
    let x1019: BytePoly_34 = bigint_nondet_quot!(ctx, x1018, x3, 34);
    let x1020: BytePoly_32 = bigint_nondet_rem!(ctx, x1018, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1019, x3, 66), x1020, 66),
            x1018,
            66
        ),
        276359,
        4,
    )?;
    let x1021: BytePoly_1 = bigint_nondet_rem!(ctx, x982, x4, 1);
    let x1022: BytePoly_32 = bigint_nondet_quot!(ctx, x982, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1022, x4, 33), x1021, 33), x982, 33),
        260103,
        4,
    )?;
    let x1023: BytePoly_1 = bigint_sub!(x5, x1021, 1);
    eqz(ctx, &bigint_mul!(x1021, x1023, 2), 8131, 2)?;
    let x1024: BytePoly_32 = bigint_add!(bigint_sub!(x1020, x1006, 32), x3, 32);
    let x1025: BytePoly_32 = bigint_add!(bigint_sub!(x1017, x1004, 32), x3, 32);
    let x1026: BytePoly_32 = bigint_nondet_inv!(ctx, x1025, x3, 32);
    let x1027: BytePoly_64 = bigint_mul!(x1025, x1026, 64);
    let x1028: BytePoly_34 = bigint_nondet_quot!(ctx, x1027, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1027, bigint_mul!(x1028, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x1029: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1024, x1026, 64), x3, 32);
    let x1030: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x1029, x1025, 64), x1024, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x1031: BytePoly_34 = bigint_nondet_quot!(ctx, x1030, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x1030, bigint_mul!(x1031, x3, 66), 66),
        276359,
        4,
    )?;
    let x1032: BytePoly_64 = bigint_mul!(x1029, x1029, 64);
    let x1033: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x1032, x1004, 64), x3, 64),
            x1017,
            64
        ),
        x3,
        64
    );
    let x1034: BytePoly_34 = bigint_nondet_quot!(ctx, x1033, x3, 34);
    let x1035: BytePoly_32 = bigint_nondet_rem!(ctx, x1033, x3, 32);
    let x1036: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x1029, x1035, 64),
                        bigint_add!(
                            bigint_sub!(x1006, bigint_mul!(x1029, x1004, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x1037: BytePoly_34 = bigint_nondet_quot!(ctx, x1036, x3, 34);
    let x1038: BytePoly_32 = bigint_nondet_rem!(ctx, x1036, x3, 32);
    let x1039: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1032, bigint_mul!(x1034, x3, 66), 66),
                        x1004,
                        66
                    ),
                    x1017,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x1035,
        66
    );
    eqz(ctx, &x1039, 276359, 4)?;
    let x1040: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x1037, x3, 66), x1038, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1029, bigint_sub!(x1004, x1035, 32), 64),
                        x1006,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x1040, 276359, 4)?;
    let x1041: BytePoly_33 = bigint_add!(
        bigint_mul!(x1035, x1021, 33),
        bigint_mul!(x1004, x1023, 33),
        33
    );
    let x1042: BytePoly_33 = bigint_add!(
        bigint_mul!(x1038, x1021, 33),
        bigint_mul!(x1006, x1023, 33),
        33
    );
    let x1043: BytePoly_3 = bigint_nondet_quot!(ctx, x1041, x3, 3);
    let x1044: BytePoly_32 = bigint_nondet_rem!(ctx, x1041, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1043, x3, 35), x1044, 35),
            x1041,
            35
        ),
        260103,
        4,
    )?;
    let x1045: BytePoly_3 = bigint_nondet_quot!(ctx, x1042, x3, 3);
    let x1046: BytePoly_32 = bigint_nondet_rem!(ctx, x1042, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1045, x3, 35), x1046, 35),
            x1042,
            35
        ),
        260103,
        4,
    )?;
    let x1047: BytePoly_64 = bigint_mul!(x1017, x1017, 64);
    let x1048: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x1047, x1047, 64), x1047, 64),
        x2,
        64
    );
    let x1049: BytePoly_64 = bigint_add!(x48, x1048, 64);
    let x1050: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x1020, x1020, 32), x3, 32);
    let x1051: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1048, x1050, 96), x3, 32);
    let x1052: BytePoly_64 = bigint_mul!(x1020, x1051, 64);
    let x1053: BytePoly_64 = bigint_add!(x1052, x1052, 64);
    let x1054: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x1049, x1053, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1054, x3, 66), x1053, 66),
            x1049,
            66
        ),
        276359,
        4,
    )?;
    let x1055: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1051, x1051, 64), x3, 64), x3, 64),
            x1017,
            64
        ),
        x1017,
        64
    );
    let x1056: BytePoly_34 = bigint_nondet_quot!(ctx, x1055, x3, 34);
    let x1057: BytePoly_32 = bigint_nondet_rem!(ctx, x1055, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1056, x3, 66), x1057, 66),
            x1055,
            66
        ),
        276359,
        4,
    )?;
    let x1058: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x1051, x1057, 64), 64), x3, 64),
            x1020,
            64
        ),
        bigint_mul!(x1051, x1017, 64),
        64
    );
    let x1059: BytePoly_34 = bigint_nondet_quot!(ctx, x1058, x3, 34);
    let x1060: BytePoly_32 = bigint_nondet_rem!(ctx, x1058, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1059, x3, 66), x1060, 66),
            x1058,
            66
        ),
        276359,
        4,
    )?;
    let x1061: BytePoly_1 = bigint_nondet_rem!(ctx, x1022, x4, 1);
    let x1062: BytePoly_32 = bigint_nondet_quot!(ctx, x1022, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1062, x4, 33), x1061, 33),
            x1022,
            33
        ),
        260103,
        4,
    )?;
    let x1063: BytePoly_1 = bigint_sub!(x5, x1061, 1);
    eqz(ctx, &bigint_mul!(x1061, x1063, 2), 8131, 2)?;
    let x1064: BytePoly_32 = bigint_add!(bigint_sub!(x1060, x1046, 32), x3, 32);
    let x1065: BytePoly_32 = bigint_add!(bigint_sub!(x1057, x1044, 32), x3, 32);
    let x1066: BytePoly_32 = bigint_nondet_inv!(ctx, x1065, x3, 32);
    let x1067: BytePoly_64 = bigint_mul!(x1065, x1066, 64);
    let x1068: BytePoly_34 = bigint_nondet_quot!(ctx, x1067, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1067, bigint_mul!(x1068, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x1069: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1064, x1066, 64), x3, 32);
    let x1070: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x1069, x1065, 64), x1064, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x1071: BytePoly_34 = bigint_nondet_quot!(ctx, x1070, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x1070, bigint_mul!(x1071, x3, 66), 66),
        276359,
        4,
    )?;
    let x1072: BytePoly_64 = bigint_mul!(x1069, x1069, 64);
    let x1073: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x1072, x1044, 64), x3, 64),
            x1057,
            64
        ),
        x3,
        64
    );
    let x1074: BytePoly_34 = bigint_nondet_quot!(ctx, x1073, x3, 34);
    let x1075: BytePoly_32 = bigint_nondet_rem!(ctx, x1073, x3, 32);
    let x1076: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x1069, x1075, 64),
                        bigint_add!(
                            bigint_sub!(x1046, bigint_mul!(x1069, x1044, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x1077: BytePoly_34 = bigint_nondet_quot!(ctx, x1076, x3, 34);
    let x1078: BytePoly_32 = bigint_nondet_rem!(ctx, x1076, x3, 32);
    let x1079: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1072, bigint_mul!(x1074, x3, 66), 66),
                        x1044,
                        66
                    ),
                    x1057,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x1075,
        66
    );
    eqz(ctx, &x1079, 276359, 4)?;
    let x1080: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x1077, x3, 66), x1078, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1069, bigint_sub!(x1044, x1075, 32), 64),
                        x1046,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x1080, 276359, 4)?;
    let x1081: BytePoly_33 = bigint_add!(
        bigint_mul!(x1075, x1061, 33),
        bigint_mul!(x1044, x1063, 33),
        33
    );
    let x1082: BytePoly_33 = bigint_add!(
        bigint_mul!(x1078, x1061, 33),
        bigint_mul!(x1046, x1063, 33),
        33
    );
    let x1083: BytePoly_3 = bigint_nondet_quot!(ctx, x1081, x3, 3);
    let x1084: BytePoly_32 = bigint_nondet_rem!(ctx, x1081, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1083, x3, 35), x1084, 35),
            x1081,
            35
        ),
        260103,
        4,
    )?;
    let x1085: BytePoly_3 = bigint_nondet_quot!(ctx, x1082, x3, 3);
    let x1086: BytePoly_32 = bigint_nondet_rem!(ctx, x1082, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1085, x3, 35), x1086, 35),
            x1082,
            35
        ),
        260103,
        4,
    )?;
    let x1087: BytePoly_64 = bigint_mul!(x1057, x1057, 64);
    let x1088: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x1087, x1087, 64), x1087, 64),
        x2,
        64
    );
    let x1089: BytePoly_64 = bigint_add!(x48, x1088, 64);
    let x1090: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x1060, x1060, 32), x3, 32);
    let x1091: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1088, x1090, 96), x3, 32);
    let x1092: BytePoly_64 = bigint_mul!(x1060, x1091, 64);
    let x1093: BytePoly_64 = bigint_add!(x1092, x1092, 64);
    let x1094: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x1089, x1093, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1094, x3, 66), x1093, 66),
            x1089,
            66
        ),
        276359,
        4,
    )?;
    let x1095: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1091, x1091, 64), x3, 64), x3, 64),
            x1057,
            64
        ),
        x1057,
        64
    );
    let x1096: BytePoly_34 = bigint_nondet_quot!(ctx, x1095, x3, 34);
    let x1097: BytePoly_32 = bigint_nondet_rem!(ctx, x1095, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1096, x3, 66), x1097, 66),
            x1095,
            66
        ),
        276359,
        4,
    )?;
    let x1098: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x1091, x1097, 64), 64), x3, 64),
            x1060,
            64
        ),
        bigint_mul!(x1091, x1057, 64),
        64
    );
    let x1099: BytePoly_34 = bigint_nondet_quot!(ctx, x1098, x3, 34);
    let x1100: BytePoly_32 = bigint_nondet_rem!(ctx, x1098, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1099, x3, 66), x1100, 66),
            x1098,
            66
        ),
        276359,
        4,
    )?;
    let x1101: BytePoly_1 = bigint_nondet_rem!(ctx, x1062, x4, 1);
    let x1102: BytePoly_32 = bigint_nondet_quot!(ctx, x1062, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1102, x4, 33), x1101, 33),
            x1062,
            33
        ),
        260103,
        4,
    )?;
    let x1103: BytePoly_1 = bigint_sub!(x5, x1101, 1);
    eqz(ctx, &bigint_mul!(x1101, x1103, 2), 8131, 2)?;
    let x1104: BytePoly_32 = bigint_add!(bigint_sub!(x1100, x1086, 32), x3, 32);
    let x1105: BytePoly_32 = bigint_add!(bigint_sub!(x1097, x1084, 32), x3, 32);
    let x1106: BytePoly_32 = bigint_nondet_inv!(ctx, x1105, x3, 32);
    let x1107: BytePoly_64 = bigint_mul!(x1105, x1106, 64);
    let x1108: BytePoly_34 = bigint_nondet_quot!(ctx, x1107, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1107, bigint_mul!(x1108, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x1109: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1104, x1106, 64), x3, 32);
    let x1110: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x1109, x1105, 64), x1104, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x1111: BytePoly_34 = bigint_nondet_quot!(ctx, x1110, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x1110, bigint_mul!(x1111, x3, 66), 66),
        276359,
        4,
    )?;
    let x1112: BytePoly_64 = bigint_mul!(x1109, x1109, 64);
    let x1113: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x1112, x1084, 64), x3, 64),
            x1097,
            64
        ),
        x3,
        64
    );
    let x1114: BytePoly_34 = bigint_nondet_quot!(ctx, x1113, x3, 34);
    let x1115: BytePoly_32 = bigint_nondet_rem!(ctx, x1113, x3, 32);
    let x1116: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x1109, x1115, 64),
                        bigint_add!(
                            bigint_sub!(x1086, bigint_mul!(x1109, x1084, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x1117: BytePoly_34 = bigint_nondet_quot!(ctx, x1116, x3, 34);
    let x1118: BytePoly_32 = bigint_nondet_rem!(ctx, x1116, x3, 32);
    let x1119: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1112, bigint_mul!(x1114, x3, 66), 66),
                        x1084,
                        66
                    ),
                    x1097,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x1115,
        66
    );
    eqz(ctx, &x1119, 276359, 4)?;
    let x1120: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x1117, x3, 66), x1118, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1109, bigint_sub!(x1084, x1115, 32), 64),
                        x1086,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x1120, 276359, 4)?;
    let x1121: BytePoly_33 = bigint_add!(
        bigint_mul!(x1115, x1101, 33),
        bigint_mul!(x1084, x1103, 33),
        33
    );
    let x1122: BytePoly_33 = bigint_add!(
        bigint_mul!(x1118, x1101, 33),
        bigint_mul!(x1086, x1103, 33),
        33
    );
    let x1123: BytePoly_3 = bigint_nondet_quot!(ctx, x1121, x3, 3);
    let x1124: BytePoly_32 = bigint_nondet_rem!(ctx, x1121, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1123, x3, 35), x1124, 35),
            x1121,
            35
        ),
        260103,
        4,
    )?;
    let x1125: BytePoly_3 = bigint_nondet_quot!(ctx, x1122, x3, 3);
    let x1126: BytePoly_32 = bigint_nondet_rem!(ctx, x1122, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1125, x3, 35), x1126, 35),
            x1122,
            35
        ),
        260103,
        4,
    )?;
    let x1127: BytePoly_64 = bigint_mul!(x1097, x1097, 64);
    let x1128: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x1127, x1127, 64), x1127, 64),
        x2,
        64
    );
    let x1129: BytePoly_64 = bigint_add!(x48, x1128, 64);
    let x1130: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x1100, x1100, 32), x3, 32);
    let x1131: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1128, x1130, 96), x3, 32);
    let x1132: BytePoly_64 = bigint_mul!(x1100, x1131, 64);
    let x1133: BytePoly_64 = bigint_add!(x1132, x1132, 64);
    let x1134: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x1129, x1133, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1134, x3, 66), x1133, 66),
            x1129,
            66
        ),
        276359,
        4,
    )?;
    let x1135: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1131, x1131, 64), x3, 64), x3, 64),
            x1097,
            64
        ),
        x1097,
        64
    );
    let x1136: BytePoly_34 = bigint_nondet_quot!(ctx, x1135, x3, 34);
    let x1137: BytePoly_32 = bigint_nondet_rem!(ctx, x1135, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1136, x3, 66), x1137, 66),
            x1135,
            66
        ),
        276359,
        4,
    )?;
    let x1138: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x1131, x1137, 64), 64), x3, 64),
            x1100,
            64
        ),
        bigint_mul!(x1131, x1097, 64),
        64
    );
    let x1139: BytePoly_34 = bigint_nondet_quot!(ctx, x1138, x3, 34);
    let x1140: BytePoly_32 = bigint_nondet_rem!(ctx, x1138, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1139, x3, 66), x1140, 66),
            x1138,
            66
        ),
        276359,
        4,
    )?;
    let x1141: BytePoly_1 = bigint_nondet_rem!(ctx, x1102, x4, 1);
    let x1142: BytePoly_32 = bigint_nondet_quot!(ctx, x1102, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1142, x4, 33), x1141, 33),
            x1102,
            33
        ),
        260103,
        4,
    )?;
    let x1143: BytePoly_1 = bigint_sub!(x5, x1141, 1);
    eqz(ctx, &bigint_mul!(x1141, x1143, 2), 8131, 2)?;
    let x1144: BytePoly_32 = bigint_add!(bigint_sub!(x1140, x1126, 32), x3, 32);
    let x1145: BytePoly_32 = bigint_add!(bigint_sub!(x1137, x1124, 32), x3, 32);
    let x1146: BytePoly_32 = bigint_nondet_inv!(ctx, x1145, x3, 32);
    let x1147: BytePoly_64 = bigint_mul!(x1145, x1146, 64);
    let x1148: BytePoly_34 = bigint_nondet_quot!(ctx, x1147, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1147, bigint_mul!(x1148, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x1149: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1144, x1146, 64), x3, 32);
    let x1150: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x1149, x1145, 64), x1144, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x1151: BytePoly_34 = bigint_nondet_quot!(ctx, x1150, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x1150, bigint_mul!(x1151, x3, 66), 66),
        276359,
        4,
    )?;
    let x1152: BytePoly_64 = bigint_mul!(x1149, x1149, 64);
    let x1153: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x1152, x1124, 64), x3, 64),
            x1137,
            64
        ),
        x3,
        64
    );
    let x1154: BytePoly_34 = bigint_nondet_quot!(ctx, x1153, x3, 34);
    let x1155: BytePoly_32 = bigint_nondet_rem!(ctx, x1153, x3, 32);
    let x1156: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x1149, x1155, 64),
                        bigint_add!(
                            bigint_sub!(x1126, bigint_mul!(x1149, x1124, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x1157: BytePoly_34 = bigint_nondet_quot!(ctx, x1156, x3, 34);
    let x1158: BytePoly_32 = bigint_nondet_rem!(ctx, x1156, x3, 32);
    let x1159: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1152, bigint_mul!(x1154, x3, 66), 66),
                        x1124,
                        66
                    ),
                    x1137,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x1155,
        66
    );
    eqz(ctx, &x1159, 276359, 4)?;
    let x1160: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x1157, x3, 66), x1158, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1149, bigint_sub!(x1124, x1155, 32), 64),
                        x1126,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x1160, 276359, 4)?;
    let x1161: BytePoly_33 = bigint_add!(
        bigint_mul!(x1155, x1141, 33),
        bigint_mul!(x1124, x1143, 33),
        33
    );
    let x1162: BytePoly_33 = bigint_add!(
        bigint_mul!(x1158, x1141, 33),
        bigint_mul!(x1126, x1143, 33),
        33
    );
    let x1163: BytePoly_3 = bigint_nondet_quot!(ctx, x1161, x3, 3);
    let x1164: BytePoly_32 = bigint_nondet_rem!(ctx, x1161, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1163, x3, 35), x1164, 35),
            x1161,
            35
        ),
        260103,
        4,
    )?;
    let x1165: BytePoly_3 = bigint_nondet_quot!(ctx, x1162, x3, 3);
    let x1166: BytePoly_32 = bigint_nondet_rem!(ctx, x1162, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1165, x3, 35), x1166, 35),
            x1162,
            35
        ),
        260103,
        4,
    )?;
    let x1167: BytePoly_64 = bigint_mul!(x1137, x1137, 64);
    let x1168: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x1167, x1167, 64), x1167, 64),
        x2,
        64
    );
    let x1169: BytePoly_64 = bigint_add!(x48, x1168, 64);
    let x1170: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x1140, x1140, 32), x3, 32);
    let x1171: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1168, x1170, 96), x3, 32);
    let x1172: BytePoly_64 = bigint_mul!(x1140, x1171, 64);
    let x1173: BytePoly_64 = bigint_add!(x1172, x1172, 64);
    let x1174: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x1169, x1173, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1174, x3, 66), x1173, 66),
            x1169,
            66
        ),
        276359,
        4,
    )?;
    let x1175: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1171, x1171, 64), x3, 64), x3, 64),
            x1137,
            64
        ),
        x1137,
        64
    );
    let x1176: BytePoly_34 = bigint_nondet_quot!(ctx, x1175, x3, 34);
    let x1177: BytePoly_32 = bigint_nondet_rem!(ctx, x1175, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1176, x3, 66), x1177, 66),
            x1175,
            66
        ),
        276359,
        4,
    )?;
    let x1178: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x1171, x1177, 64), 64), x3, 64),
            x1140,
            64
        ),
        bigint_mul!(x1171, x1137, 64),
        64
    );
    let x1179: BytePoly_34 = bigint_nondet_quot!(ctx, x1178, x3, 34);
    let x1180: BytePoly_32 = bigint_nondet_rem!(ctx, x1178, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1179, x3, 66), x1180, 66),
            x1178,
            66
        ),
        276359,
        4,
    )?;
    let x1181: BytePoly_1 = bigint_nondet_rem!(ctx, x1142, x4, 1);
    let x1182: BytePoly_32 = bigint_nondet_quot!(ctx, x1142, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1182, x4, 33), x1181, 33),
            x1142,
            33
        ),
        260103,
        4,
    )?;
    let x1183: BytePoly_1 = bigint_sub!(x5, x1181, 1);
    eqz(ctx, &bigint_mul!(x1181, x1183, 2), 8131, 2)?;
    let x1184: BytePoly_32 = bigint_add!(bigint_sub!(x1180, x1166, 32), x3, 32);
    let x1185: BytePoly_32 = bigint_add!(bigint_sub!(x1177, x1164, 32), x3, 32);
    let x1186: BytePoly_32 = bigint_nondet_inv!(ctx, x1185, x3, 32);
    let x1187: BytePoly_64 = bigint_mul!(x1185, x1186, 64);
    let x1188: BytePoly_34 = bigint_nondet_quot!(ctx, x1187, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1187, bigint_mul!(x1188, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x1189: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1184, x1186, 64), x3, 32);
    let x1190: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x1189, x1185, 64), x1184, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x1191: BytePoly_34 = bigint_nondet_quot!(ctx, x1190, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x1190, bigint_mul!(x1191, x3, 66), 66),
        276359,
        4,
    )?;
    let x1192: BytePoly_64 = bigint_mul!(x1189, x1189, 64);
    let x1193: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x1192, x1164, 64), x3, 64),
            x1177,
            64
        ),
        x3,
        64
    );
    let x1194: BytePoly_34 = bigint_nondet_quot!(ctx, x1193, x3, 34);
    let x1195: BytePoly_32 = bigint_nondet_rem!(ctx, x1193, x3, 32);
    let x1196: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x1189, x1195, 64),
                        bigint_add!(
                            bigint_sub!(x1166, bigint_mul!(x1189, x1164, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x1197: BytePoly_34 = bigint_nondet_quot!(ctx, x1196, x3, 34);
    let x1198: BytePoly_32 = bigint_nondet_rem!(ctx, x1196, x3, 32);
    let x1199: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1192, bigint_mul!(x1194, x3, 66), 66),
                        x1164,
                        66
                    ),
                    x1177,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x1195,
        66
    );
    eqz(ctx, &x1199, 276359, 4)?;
    let x1200: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x1197, x3, 66), x1198, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1189, bigint_sub!(x1164, x1195, 32), 64),
                        x1166,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x1200, 276359, 4)?;
    let x1201: BytePoly_33 = bigint_add!(
        bigint_mul!(x1195, x1181, 33),
        bigint_mul!(x1164, x1183, 33),
        33
    );
    let x1202: BytePoly_33 = bigint_add!(
        bigint_mul!(x1198, x1181, 33),
        bigint_mul!(x1166, x1183, 33),
        33
    );
    let x1203: BytePoly_3 = bigint_nondet_quot!(ctx, x1201, x3, 3);
    let x1204: BytePoly_32 = bigint_nondet_rem!(ctx, x1201, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1203, x3, 35), x1204, 35),
            x1201,
            35
        ),
        260103,
        4,
    )?;
    let x1205: BytePoly_3 = bigint_nondet_quot!(ctx, x1202, x3, 3);
    let x1206: BytePoly_32 = bigint_nondet_rem!(ctx, x1202, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1205, x3, 35), x1206, 35),
            x1202,
            35
        ),
        260103,
        4,
    )?;
    let x1207: BytePoly_64 = bigint_mul!(x1177, x1177, 64);
    let x1208: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x1207, x1207, 64), x1207, 64),
        x2,
        64
    );
    let x1209: BytePoly_64 = bigint_add!(x48, x1208, 64);
    let x1210: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x1180, x1180, 32), x3, 32);
    let x1211: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1208, x1210, 96), x3, 32);
    let x1212: BytePoly_64 = bigint_mul!(x1180, x1211, 64);
    let x1213: BytePoly_64 = bigint_add!(x1212, x1212, 64);
    let x1214: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x1209, x1213, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1214, x3, 66), x1213, 66),
            x1209,
            66
        ),
        276359,
        4,
    )?;
    let x1215: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1211, x1211, 64), x3, 64), x3, 64),
            x1177,
            64
        ),
        x1177,
        64
    );
    let x1216: BytePoly_34 = bigint_nondet_quot!(ctx, x1215, x3, 34);
    let x1217: BytePoly_32 = bigint_nondet_rem!(ctx, x1215, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1216, x3, 66), x1217, 66),
            x1215,
            66
        ),
        276359,
        4,
    )?;
    let x1218: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x1211, x1217, 64), 64), x3, 64),
            x1180,
            64
        ),
        bigint_mul!(x1211, x1177, 64),
        64
    );
    let x1219: BytePoly_34 = bigint_nondet_quot!(ctx, x1218, x3, 34);
    let x1220: BytePoly_32 = bigint_nondet_rem!(ctx, x1218, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1219, x3, 66), x1220, 66),
            x1218,
            66
        ),
        276359,
        4,
    )?;
    let x1221: BytePoly_1 = bigint_nondet_rem!(ctx, x1182, x4, 1);
    let x1222: BytePoly_32 = bigint_nondet_quot!(ctx, x1182, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1222, x4, 33), x1221, 33),
            x1182,
            33
        ),
        260103,
        4,
    )?;
    let x1223: BytePoly_1 = bigint_sub!(x5, x1221, 1);
    eqz(ctx, &bigint_mul!(x1221, x1223, 2), 8131, 2)?;
    let x1224: BytePoly_32 = bigint_add!(bigint_sub!(x1220, x1206, 32), x3, 32);
    let x1225: BytePoly_32 = bigint_add!(bigint_sub!(x1217, x1204, 32), x3, 32);
    let x1226: BytePoly_32 = bigint_nondet_inv!(ctx, x1225, x3, 32);
    let x1227: BytePoly_64 = bigint_mul!(x1225, x1226, 64);
    let x1228: BytePoly_34 = bigint_nondet_quot!(ctx, x1227, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1227, bigint_mul!(x1228, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x1229: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1224, x1226, 64), x3, 32);
    let x1230: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x1229, x1225, 64), x1224, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x1231: BytePoly_34 = bigint_nondet_quot!(ctx, x1230, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x1230, bigint_mul!(x1231, x3, 66), 66),
        276359,
        4,
    )?;
    let x1232: BytePoly_64 = bigint_mul!(x1229, x1229, 64);
    let x1233: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x1232, x1204, 64), x3, 64),
            x1217,
            64
        ),
        x3,
        64
    );
    let x1234: BytePoly_34 = bigint_nondet_quot!(ctx, x1233, x3, 34);
    let x1235: BytePoly_32 = bigint_nondet_rem!(ctx, x1233, x3, 32);
    let x1236: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x1229, x1235, 64),
                        bigint_add!(
                            bigint_sub!(x1206, bigint_mul!(x1229, x1204, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x1237: BytePoly_34 = bigint_nondet_quot!(ctx, x1236, x3, 34);
    let x1238: BytePoly_32 = bigint_nondet_rem!(ctx, x1236, x3, 32);
    let x1239: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1232, bigint_mul!(x1234, x3, 66), 66),
                        x1204,
                        66
                    ),
                    x1217,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x1235,
        66
    );
    eqz(ctx, &x1239, 276359, 4)?;
    let x1240: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x1237, x3, 66), x1238, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1229, bigint_sub!(x1204, x1235, 32), 64),
                        x1206,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x1240, 276359, 4)?;
    let x1241: BytePoly_33 = bigint_add!(
        bigint_mul!(x1235, x1221, 33),
        bigint_mul!(x1204, x1223, 33),
        33
    );
    let x1242: BytePoly_33 = bigint_add!(
        bigint_mul!(x1238, x1221, 33),
        bigint_mul!(x1206, x1223, 33),
        33
    );
    let x1243: BytePoly_3 = bigint_nondet_quot!(ctx, x1241, x3, 3);
    let x1244: BytePoly_32 = bigint_nondet_rem!(ctx, x1241, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1243, x3, 35), x1244, 35),
            x1241,
            35
        ),
        260103,
        4,
    )?;
    let x1245: BytePoly_3 = bigint_nondet_quot!(ctx, x1242, x3, 3);
    let x1246: BytePoly_32 = bigint_nondet_rem!(ctx, x1242, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1245, x3, 35), x1246, 35),
            x1242,
            35
        ),
        260103,
        4,
    )?;
    let x1247: BytePoly_64 = bigint_mul!(x1217, x1217, 64);
    let x1248: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x1247, x1247, 64), x1247, 64),
        x2,
        64
    );
    let x1249: BytePoly_64 = bigint_add!(x48, x1248, 64);
    let x1250: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x1220, x1220, 32), x3, 32);
    let x1251: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1248, x1250, 96), x3, 32);
    let x1252: BytePoly_64 = bigint_mul!(x1220, x1251, 64);
    let x1253: BytePoly_64 = bigint_add!(x1252, x1252, 64);
    let x1254: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x1249, x1253, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1254, x3, 66), x1253, 66),
            x1249,
            66
        ),
        276359,
        4,
    )?;
    let x1255: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1251, x1251, 64), x3, 64), x3, 64),
            x1217,
            64
        ),
        x1217,
        64
    );
    let x1256: BytePoly_34 = bigint_nondet_quot!(ctx, x1255, x3, 34);
    let x1257: BytePoly_32 = bigint_nondet_rem!(ctx, x1255, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1256, x3, 66), x1257, 66),
            x1255,
            66
        ),
        276359,
        4,
    )?;
    let x1258: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x1251, x1257, 64), 64), x3, 64),
            x1220,
            64
        ),
        bigint_mul!(x1251, x1217, 64),
        64
    );
    let x1259: BytePoly_34 = bigint_nondet_quot!(ctx, x1258, x3, 34);
    let x1260: BytePoly_32 = bigint_nondet_rem!(ctx, x1258, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1259, x3, 66), x1260, 66),
            x1258,
            66
        ),
        276359,
        4,
    )?;
    let x1261: BytePoly_1 = bigint_nondet_rem!(ctx, x1222, x4, 1);
    let x1262: BytePoly_32 = bigint_nondet_quot!(ctx, x1222, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1262, x4, 33), x1261, 33),
            x1222,
            33
        ),
        260103,
        4,
    )?;
    let x1263: BytePoly_1 = bigint_sub!(x5, x1261, 1);
    eqz(ctx, &bigint_mul!(x1261, x1263, 2), 8131, 2)?;
    let x1264: BytePoly_32 = bigint_add!(bigint_sub!(x1260, x1246, 32), x3, 32);
    let x1265: BytePoly_32 = bigint_add!(bigint_sub!(x1257, x1244, 32), x3, 32);
    let x1266: BytePoly_32 = bigint_nondet_inv!(ctx, x1265, x3, 32);
    let x1267: BytePoly_64 = bigint_mul!(x1265, x1266, 64);
    let x1268: BytePoly_34 = bigint_nondet_quot!(ctx, x1267, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1267, bigint_mul!(x1268, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x1269: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1264, x1266, 64), x3, 32);
    let x1270: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x1269, x1265, 64), x1264, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x1271: BytePoly_34 = bigint_nondet_quot!(ctx, x1270, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x1270, bigint_mul!(x1271, x3, 66), 66),
        276359,
        4,
    )?;
    let x1272: BytePoly_64 = bigint_mul!(x1269, x1269, 64);
    let x1273: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x1272, x1244, 64), x3, 64),
            x1257,
            64
        ),
        x3,
        64
    );
    let x1274: BytePoly_34 = bigint_nondet_quot!(ctx, x1273, x3, 34);
    let x1275: BytePoly_32 = bigint_nondet_rem!(ctx, x1273, x3, 32);
    let x1276: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x1269, x1275, 64),
                        bigint_add!(
                            bigint_sub!(x1246, bigint_mul!(x1269, x1244, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x1277: BytePoly_34 = bigint_nondet_quot!(ctx, x1276, x3, 34);
    let x1278: BytePoly_32 = bigint_nondet_rem!(ctx, x1276, x3, 32);
    let x1279: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1272, bigint_mul!(x1274, x3, 66), 66),
                        x1244,
                        66
                    ),
                    x1257,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x1275,
        66
    );
    eqz(ctx, &x1279, 276359, 4)?;
    let x1280: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x1277, x3, 66), x1278, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1269, bigint_sub!(x1244, x1275, 32), 64),
                        x1246,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x1280, 276359, 4)?;
    let x1281: BytePoly_33 = bigint_add!(
        bigint_mul!(x1275, x1261, 33),
        bigint_mul!(x1244, x1263, 33),
        33
    );
    let x1282: BytePoly_33 = bigint_add!(
        bigint_mul!(x1278, x1261, 33),
        bigint_mul!(x1246, x1263, 33),
        33
    );
    let x1283: BytePoly_3 = bigint_nondet_quot!(ctx, x1281, x3, 3);
    let x1284: BytePoly_32 = bigint_nondet_rem!(ctx, x1281, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1283, x3, 35), x1284, 35),
            x1281,
            35
        ),
        260103,
        4,
    )?;
    let x1285: BytePoly_3 = bigint_nondet_quot!(ctx, x1282, x3, 3);
    let x1286: BytePoly_32 = bigint_nondet_rem!(ctx, x1282, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1285, x3, 35), x1286, 35),
            x1282,
            35
        ),
        260103,
        4,
    )?;
    let x1287: BytePoly_64 = bigint_mul!(x1257, x1257, 64);
    let x1288: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x1287, x1287, 64), x1287, 64),
        x2,
        64
    );
    let x1289: BytePoly_64 = bigint_add!(x48, x1288, 64);
    let x1290: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x1260, x1260, 32), x3, 32);
    let x1291: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1288, x1290, 96), x3, 32);
    let x1292: BytePoly_64 = bigint_mul!(x1260, x1291, 64);
    let x1293: BytePoly_64 = bigint_add!(x1292, x1292, 64);
    let x1294: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x1289, x1293, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1294, x3, 66), x1293, 66),
            x1289,
            66
        ),
        276359,
        4,
    )?;
    let x1295: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1291, x1291, 64), x3, 64), x3, 64),
            x1257,
            64
        ),
        x1257,
        64
    );
    let x1296: BytePoly_34 = bigint_nondet_quot!(ctx, x1295, x3, 34);
    let x1297: BytePoly_32 = bigint_nondet_rem!(ctx, x1295, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1296, x3, 66), x1297, 66),
            x1295,
            66
        ),
        276359,
        4,
    )?;
    let x1298: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x1291, x1297, 64), 64), x3, 64),
            x1260,
            64
        ),
        bigint_mul!(x1291, x1257, 64),
        64
    );
    let x1299: BytePoly_34 = bigint_nondet_quot!(ctx, x1298, x3, 34);
    let x1300: BytePoly_32 = bigint_nondet_rem!(ctx, x1298, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1299, x3, 66), x1300, 66),
            x1298,
            66
        ),
        276359,
        4,
    )?;
    let x1301: BytePoly_1 = bigint_nondet_rem!(ctx, x1262, x4, 1);
    let x1302: BytePoly_32 = bigint_nondet_quot!(ctx, x1262, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1302, x4, 33), x1301, 33),
            x1262,
            33
        ),
        260103,
        4,
    )?;
    let x1303: BytePoly_1 = bigint_sub!(x5, x1301, 1);
    eqz(ctx, &bigint_mul!(x1301, x1303, 2), 8131, 2)?;
    let x1304: BytePoly_32 = bigint_add!(bigint_sub!(x1300, x1286, 32), x3, 32);
    let x1305: BytePoly_32 = bigint_add!(bigint_sub!(x1297, x1284, 32), x3, 32);
    let x1306: BytePoly_32 = bigint_nondet_inv!(ctx, x1305, x3, 32);
    let x1307: BytePoly_64 = bigint_mul!(x1305, x1306, 64);
    let x1308: BytePoly_34 = bigint_nondet_quot!(ctx, x1307, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1307, bigint_mul!(x1308, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x1309: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1304, x1306, 64), x3, 32);
    let x1310: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x1309, x1305, 64), x1304, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x1311: BytePoly_34 = bigint_nondet_quot!(ctx, x1310, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x1310, bigint_mul!(x1311, x3, 66), 66),
        276359,
        4,
    )?;
    let x1312: BytePoly_64 = bigint_mul!(x1309, x1309, 64);
    let x1313: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x1312, x1284, 64), x3, 64),
            x1297,
            64
        ),
        x3,
        64
    );
    let x1314: BytePoly_34 = bigint_nondet_quot!(ctx, x1313, x3, 34);
    let x1315: BytePoly_32 = bigint_nondet_rem!(ctx, x1313, x3, 32);
    let x1316: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x1309, x1315, 64),
                        bigint_add!(
                            bigint_sub!(x1286, bigint_mul!(x1309, x1284, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x1317: BytePoly_34 = bigint_nondet_quot!(ctx, x1316, x3, 34);
    let x1318: BytePoly_32 = bigint_nondet_rem!(ctx, x1316, x3, 32);
    let x1319: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1312, bigint_mul!(x1314, x3, 66), 66),
                        x1284,
                        66
                    ),
                    x1297,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x1315,
        66
    );
    eqz(ctx, &x1319, 276359, 4)?;
    let x1320: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x1317, x3, 66), x1318, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1309, bigint_sub!(x1284, x1315, 32), 64),
                        x1286,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x1320, 276359, 4)?;
    let x1321: BytePoly_33 = bigint_add!(
        bigint_mul!(x1315, x1301, 33),
        bigint_mul!(x1284, x1303, 33),
        33
    );
    let x1322: BytePoly_33 = bigint_add!(
        bigint_mul!(x1318, x1301, 33),
        bigint_mul!(x1286, x1303, 33),
        33
    );
    let x1323: BytePoly_3 = bigint_nondet_quot!(ctx, x1321, x3, 3);
    let x1324: BytePoly_32 = bigint_nondet_rem!(ctx, x1321, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1323, x3, 35), x1324, 35),
            x1321,
            35
        ),
        260103,
        4,
    )?;
    let x1325: BytePoly_3 = bigint_nondet_quot!(ctx, x1322, x3, 3);
    let x1326: BytePoly_32 = bigint_nondet_rem!(ctx, x1322, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1325, x3, 35), x1326, 35),
            x1322,
            35
        ),
        260103,
        4,
    )?;
    let x1327: BytePoly_64 = bigint_mul!(x1297, x1297, 64);
    let x1328: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x1327, x1327, 64), x1327, 64),
        x2,
        64
    );
    let x1329: BytePoly_64 = bigint_add!(x48, x1328, 64);
    let x1330: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x1300, x1300, 32), x3, 32);
    let x1331: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1328, x1330, 96), x3, 32);
    let x1332: BytePoly_64 = bigint_mul!(x1300, x1331, 64);
    let x1333: BytePoly_64 = bigint_add!(x1332, x1332, 64);
    let x1334: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x1329, x1333, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1334, x3, 66), x1333, 66),
            x1329,
            66
        ),
        276359,
        4,
    )?;
    let x1335: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1331, x1331, 64), x3, 64), x3, 64),
            x1297,
            64
        ),
        x1297,
        64
    );
    let x1336: BytePoly_34 = bigint_nondet_quot!(ctx, x1335, x3, 34);
    let x1337: BytePoly_32 = bigint_nondet_rem!(ctx, x1335, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1336, x3, 66), x1337, 66),
            x1335,
            66
        ),
        276359,
        4,
    )?;
    let x1338: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x1331, x1337, 64), 64), x3, 64),
            x1300,
            64
        ),
        bigint_mul!(x1331, x1297, 64),
        64
    );
    let x1339: BytePoly_34 = bigint_nondet_quot!(ctx, x1338, x3, 34);
    let x1340: BytePoly_32 = bigint_nondet_rem!(ctx, x1338, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1339, x3, 66), x1340, 66),
            x1338,
            66
        ),
        276359,
        4,
    )?;
    let x1341: BytePoly_1 = bigint_nondet_rem!(ctx, x1302, x4, 1);
    let x1342: BytePoly_32 = bigint_nondet_quot!(ctx, x1302, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1342, x4, 33), x1341, 33),
            x1302,
            33
        ),
        260103,
        4,
    )?;
    let x1343: BytePoly_1 = bigint_sub!(x5, x1341, 1);
    eqz(ctx, &bigint_mul!(x1341, x1343, 2), 8131, 2)?;
    let x1344: BytePoly_32 = bigint_add!(bigint_sub!(x1340, x1326, 32), x3, 32);
    let x1345: BytePoly_32 = bigint_add!(bigint_sub!(x1337, x1324, 32), x3, 32);
    let x1346: BytePoly_32 = bigint_nondet_inv!(ctx, x1345, x3, 32);
    let x1347: BytePoly_64 = bigint_mul!(x1345, x1346, 64);
    let x1348: BytePoly_34 = bigint_nondet_quot!(ctx, x1347, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1347, bigint_mul!(x1348, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x1349: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1344, x1346, 64), x3, 32);
    let x1350: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x1349, x1345, 64), x1344, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x1351: BytePoly_34 = bigint_nondet_quot!(ctx, x1350, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x1350, bigint_mul!(x1351, x3, 66), 66),
        276359,
        4,
    )?;
    let x1352: BytePoly_64 = bigint_mul!(x1349, x1349, 64);
    let x1353: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x1352, x1324, 64), x3, 64),
            x1337,
            64
        ),
        x3,
        64
    );
    let x1354: BytePoly_34 = bigint_nondet_quot!(ctx, x1353, x3, 34);
    let x1355: BytePoly_32 = bigint_nondet_rem!(ctx, x1353, x3, 32);
    let x1356: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x1349, x1355, 64),
                        bigint_add!(
                            bigint_sub!(x1326, bigint_mul!(x1349, x1324, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x1357: BytePoly_34 = bigint_nondet_quot!(ctx, x1356, x3, 34);
    let x1358: BytePoly_32 = bigint_nondet_rem!(ctx, x1356, x3, 32);
    let x1359: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1352, bigint_mul!(x1354, x3, 66), 66),
                        x1324,
                        66
                    ),
                    x1337,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x1355,
        66
    );
    eqz(ctx, &x1359, 276359, 4)?;
    let x1360: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x1357, x3, 66), x1358, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1349, bigint_sub!(x1324, x1355, 32), 64),
                        x1326,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x1360, 276359, 4)?;
    let x1361: BytePoly_33 = bigint_add!(
        bigint_mul!(x1355, x1341, 33),
        bigint_mul!(x1324, x1343, 33),
        33
    );
    let x1362: BytePoly_33 = bigint_add!(
        bigint_mul!(x1358, x1341, 33),
        bigint_mul!(x1326, x1343, 33),
        33
    );
    let x1363: BytePoly_3 = bigint_nondet_quot!(ctx, x1361, x3, 3);
    let x1364: BytePoly_32 = bigint_nondet_rem!(ctx, x1361, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1363, x3, 35), x1364, 35),
            x1361,
            35
        ),
        260103,
        4,
    )?;
    let x1365: BytePoly_3 = bigint_nondet_quot!(ctx, x1362, x3, 3);
    let x1366: BytePoly_32 = bigint_nondet_rem!(ctx, x1362, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1365, x3, 35), x1366, 35),
            x1362,
            35
        ),
        260103,
        4,
    )?;
    let x1367: BytePoly_64 = bigint_mul!(x1337, x1337, 64);
    let x1368: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x1367, x1367, 64), x1367, 64),
        x2,
        64
    );
    let x1369: BytePoly_64 = bigint_add!(x48, x1368, 64);
    let x1370: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x1340, x1340, 32), x3, 32);
    let x1371: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1368, x1370, 96), x3, 32);
    let x1372: BytePoly_64 = bigint_mul!(x1340, x1371, 64);
    let x1373: BytePoly_64 = bigint_add!(x1372, x1372, 64);
    let x1374: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x1369, x1373, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1374, x3, 66), x1373, 66),
            x1369,
            66
        ),
        276359,
        4,
    )?;
    let x1375: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1371, x1371, 64), x3, 64), x3, 64),
            x1337,
            64
        ),
        x1337,
        64
    );
    let x1376: BytePoly_34 = bigint_nondet_quot!(ctx, x1375, x3, 34);
    let x1377: BytePoly_32 = bigint_nondet_rem!(ctx, x1375, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1376, x3, 66), x1377, 66),
            x1375,
            66
        ),
        276359,
        4,
    )?;
    let x1378: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x1371, x1377, 64), 64), x3, 64),
            x1340,
            64
        ),
        bigint_mul!(x1371, x1337, 64),
        64
    );
    let x1379: BytePoly_34 = bigint_nondet_quot!(ctx, x1378, x3, 34);
    let x1380: BytePoly_32 = bigint_nondet_rem!(ctx, x1378, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1379, x3, 66), x1380, 66),
            x1378,
            66
        ),
        276359,
        4,
    )?;
    let x1381: BytePoly_1 = bigint_nondet_rem!(ctx, x1342, x4, 1);
    let x1382: BytePoly_32 = bigint_nondet_quot!(ctx, x1342, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1382, x4, 33), x1381, 33),
            x1342,
            33
        ),
        260103,
        4,
    )?;
    let x1383: BytePoly_1 = bigint_sub!(x5, x1381, 1);
    eqz(ctx, &bigint_mul!(x1381, x1383, 2), 8131, 2)?;
    let x1384: BytePoly_32 = bigint_add!(bigint_sub!(x1380, x1366, 32), x3, 32);
    let x1385: BytePoly_32 = bigint_add!(bigint_sub!(x1377, x1364, 32), x3, 32);
    let x1386: BytePoly_32 = bigint_nondet_inv!(ctx, x1385, x3, 32);
    let x1387: BytePoly_64 = bigint_mul!(x1385, x1386, 64);
    let x1388: BytePoly_34 = bigint_nondet_quot!(ctx, x1387, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1387, bigint_mul!(x1388, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x1389: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1384, x1386, 64), x3, 32);
    let x1390: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x1389, x1385, 64), x1384, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x1391: BytePoly_34 = bigint_nondet_quot!(ctx, x1390, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x1390, bigint_mul!(x1391, x3, 66), 66),
        276359,
        4,
    )?;
    let x1392: BytePoly_64 = bigint_mul!(x1389, x1389, 64);
    let x1393: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x1392, x1364, 64), x3, 64),
            x1377,
            64
        ),
        x3,
        64
    );
    let x1394: BytePoly_34 = bigint_nondet_quot!(ctx, x1393, x3, 34);
    let x1395: BytePoly_32 = bigint_nondet_rem!(ctx, x1393, x3, 32);
    let x1396: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x1389, x1395, 64),
                        bigint_add!(
                            bigint_sub!(x1366, bigint_mul!(x1389, x1364, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x1397: BytePoly_34 = bigint_nondet_quot!(ctx, x1396, x3, 34);
    let x1398: BytePoly_32 = bigint_nondet_rem!(ctx, x1396, x3, 32);
    let x1399: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1392, bigint_mul!(x1394, x3, 66), 66),
                        x1364,
                        66
                    ),
                    x1377,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x1395,
        66
    );
    eqz(ctx, &x1399, 276359, 4)?;
    let x1400: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x1397, x3, 66), x1398, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1389, bigint_sub!(x1364, x1395, 32), 64),
                        x1366,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x1400, 276359, 4)?;
    let x1401: BytePoly_33 = bigint_add!(
        bigint_mul!(x1395, x1381, 33),
        bigint_mul!(x1364, x1383, 33),
        33
    );
    let x1402: BytePoly_33 = bigint_add!(
        bigint_mul!(x1398, x1381, 33),
        bigint_mul!(x1366, x1383, 33),
        33
    );
    let x1403: BytePoly_3 = bigint_nondet_quot!(ctx, x1401, x3, 3);
    let x1404: BytePoly_32 = bigint_nondet_rem!(ctx, x1401, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1403, x3, 35), x1404, 35),
            x1401,
            35
        ),
        260103,
        4,
    )?;
    let x1405: BytePoly_3 = bigint_nondet_quot!(ctx, x1402, x3, 3);
    let x1406: BytePoly_32 = bigint_nondet_rem!(ctx, x1402, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1405, x3, 35), x1406, 35),
            x1402,
            35
        ),
        260103,
        4,
    )?;
    let x1407: BytePoly_64 = bigint_mul!(x1377, x1377, 64);
    let x1408: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x1407, x1407, 64), x1407, 64),
        x2,
        64
    );
    let x1409: BytePoly_64 = bigint_add!(x48, x1408, 64);
    let x1410: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x1380, x1380, 32), x3, 32);
    let x1411: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1408, x1410, 96), x3, 32);
    let x1412: BytePoly_64 = bigint_mul!(x1380, x1411, 64);
    let x1413: BytePoly_64 = bigint_add!(x1412, x1412, 64);
    let x1414: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x1409, x1413, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1414, x3, 66), x1413, 66),
            x1409,
            66
        ),
        276359,
        4,
    )?;
    let x1415: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1411, x1411, 64), x3, 64), x3, 64),
            x1377,
            64
        ),
        x1377,
        64
    );
    let x1416: BytePoly_34 = bigint_nondet_quot!(ctx, x1415, x3, 34);
    let x1417: BytePoly_32 = bigint_nondet_rem!(ctx, x1415, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1416, x3, 66), x1417, 66),
            x1415,
            66
        ),
        276359,
        4,
    )?;
    let x1418: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x1411, x1417, 64), 64), x3, 64),
            x1380,
            64
        ),
        bigint_mul!(x1411, x1377, 64),
        64
    );
    let x1419: BytePoly_34 = bigint_nondet_quot!(ctx, x1418, x3, 34);
    let x1420: BytePoly_32 = bigint_nondet_rem!(ctx, x1418, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1419, x3, 66), x1420, 66),
            x1418,
            66
        ),
        276359,
        4,
    )?;
    let x1421: BytePoly_1 = bigint_nondet_rem!(ctx, x1382, x4, 1);
    let x1422: BytePoly_32 = bigint_nondet_quot!(ctx, x1382, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1422, x4, 33), x1421, 33),
            x1382,
            33
        ),
        260103,
        4,
    )?;
    let x1423: BytePoly_1 = bigint_sub!(x5, x1421, 1);
    eqz(ctx, &bigint_mul!(x1421, x1423, 2), 8131, 2)?;
    let x1424: BytePoly_32 = bigint_add!(bigint_sub!(x1420, x1406, 32), x3, 32);
    let x1425: BytePoly_32 = bigint_add!(bigint_sub!(x1417, x1404, 32), x3, 32);
    let x1426: BytePoly_32 = bigint_nondet_inv!(ctx, x1425, x3, 32);
    let x1427: BytePoly_64 = bigint_mul!(x1425, x1426, 64);
    let x1428: BytePoly_34 = bigint_nondet_quot!(ctx, x1427, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1427, bigint_mul!(x1428, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x1429: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1424, x1426, 64), x3, 32);
    let x1430: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x1429, x1425, 64), x1424, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x1431: BytePoly_34 = bigint_nondet_quot!(ctx, x1430, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x1430, bigint_mul!(x1431, x3, 66), 66),
        276359,
        4,
    )?;
    let x1432: BytePoly_64 = bigint_mul!(x1429, x1429, 64);
    let x1433: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x1432, x1404, 64), x3, 64),
            x1417,
            64
        ),
        x3,
        64
    );
    let x1434: BytePoly_34 = bigint_nondet_quot!(ctx, x1433, x3, 34);
    let x1435: BytePoly_32 = bigint_nondet_rem!(ctx, x1433, x3, 32);
    let x1436: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x1429, x1435, 64),
                        bigint_add!(
                            bigint_sub!(x1406, bigint_mul!(x1429, x1404, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x1437: BytePoly_34 = bigint_nondet_quot!(ctx, x1436, x3, 34);
    let x1438: BytePoly_32 = bigint_nondet_rem!(ctx, x1436, x3, 32);
    let x1439: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1432, bigint_mul!(x1434, x3, 66), 66),
                        x1404,
                        66
                    ),
                    x1417,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x1435,
        66
    );
    eqz(ctx, &x1439, 276359, 4)?;
    let x1440: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x1437, x3, 66), x1438, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1429, bigint_sub!(x1404, x1435, 32), 64),
                        x1406,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x1440, 276359, 4)?;
    let x1441: BytePoly_33 = bigint_add!(
        bigint_mul!(x1435, x1421, 33),
        bigint_mul!(x1404, x1423, 33),
        33
    );
    let x1442: BytePoly_33 = bigint_add!(
        bigint_mul!(x1438, x1421, 33),
        bigint_mul!(x1406, x1423, 33),
        33
    );
    let x1443: BytePoly_3 = bigint_nondet_quot!(ctx, x1441, x3, 3);
    let x1444: BytePoly_32 = bigint_nondet_rem!(ctx, x1441, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1443, x3, 35), x1444, 35),
            x1441,
            35
        ),
        260103,
        4,
    )?;
    let x1445: BytePoly_3 = bigint_nondet_quot!(ctx, x1442, x3, 3);
    let x1446: BytePoly_32 = bigint_nondet_rem!(ctx, x1442, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1445, x3, 35), x1446, 35),
            x1442,
            35
        ),
        260103,
        4,
    )?;
    let x1447: BytePoly_64 = bigint_mul!(x1417, x1417, 64);
    let x1448: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x1447, x1447, 64), x1447, 64),
        x2,
        64
    );
    let x1449: BytePoly_64 = bigint_add!(x48, x1448, 64);
    let x1450: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x1420, x1420, 32), x3, 32);
    let x1451: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1448, x1450, 96), x3, 32);
    let x1452: BytePoly_64 = bigint_mul!(x1420, x1451, 64);
    let x1453: BytePoly_64 = bigint_add!(x1452, x1452, 64);
    let x1454: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x1449, x1453, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1454, x3, 66), x1453, 66),
            x1449,
            66
        ),
        276359,
        4,
    )?;
    let x1455: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1451, x1451, 64), x3, 64), x3, 64),
            x1417,
            64
        ),
        x1417,
        64
    );
    let x1456: BytePoly_34 = bigint_nondet_quot!(ctx, x1455, x3, 34);
    let x1457: BytePoly_32 = bigint_nondet_rem!(ctx, x1455, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1456, x3, 66), x1457, 66),
            x1455,
            66
        ),
        276359,
        4,
    )?;
    let x1458: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x1451, x1457, 64), 64), x3, 64),
            x1420,
            64
        ),
        bigint_mul!(x1451, x1417, 64),
        64
    );
    let x1459: BytePoly_34 = bigint_nondet_quot!(ctx, x1458, x3, 34);
    let x1460: BytePoly_32 = bigint_nondet_rem!(ctx, x1458, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1459, x3, 66), x1460, 66),
            x1458,
            66
        ),
        276359,
        4,
    )?;
    let x1461: BytePoly_1 = bigint_nondet_rem!(ctx, x1422, x4, 1);
    let x1462: BytePoly_32 = bigint_nondet_quot!(ctx, x1422, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1462, x4, 33), x1461, 33),
            x1422,
            33
        ),
        260103,
        4,
    )?;
    let x1463: BytePoly_1 = bigint_sub!(x5, x1461, 1);
    eqz(ctx, &bigint_mul!(x1461, x1463, 2), 8131, 2)?;
    let x1464: BytePoly_32 = bigint_add!(bigint_sub!(x1460, x1446, 32), x3, 32);
    let x1465: BytePoly_32 = bigint_add!(bigint_sub!(x1457, x1444, 32), x3, 32);
    let x1466: BytePoly_32 = bigint_nondet_inv!(ctx, x1465, x3, 32);
    let x1467: BytePoly_64 = bigint_mul!(x1465, x1466, 64);
    let x1468: BytePoly_34 = bigint_nondet_quot!(ctx, x1467, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1467, bigint_mul!(x1468, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x1469: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1464, x1466, 64), x3, 32);
    let x1470: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x1469, x1465, 64), x1464, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x1471: BytePoly_34 = bigint_nondet_quot!(ctx, x1470, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x1470, bigint_mul!(x1471, x3, 66), 66),
        276359,
        4,
    )?;
    let x1472: BytePoly_64 = bigint_mul!(x1469, x1469, 64);
    let x1473: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x1472, x1444, 64), x3, 64),
            x1457,
            64
        ),
        x3,
        64
    );
    let x1474: BytePoly_34 = bigint_nondet_quot!(ctx, x1473, x3, 34);
    let x1475: BytePoly_32 = bigint_nondet_rem!(ctx, x1473, x3, 32);
    let x1476: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x1469, x1475, 64),
                        bigint_add!(
                            bigint_sub!(x1446, bigint_mul!(x1469, x1444, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x1477: BytePoly_34 = bigint_nondet_quot!(ctx, x1476, x3, 34);
    let x1478: BytePoly_32 = bigint_nondet_rem!(ctx, x1476, x3, 32);
    let x1479: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1472, bigint_mul!(x1474, x3, 66), 66),
                        x1444,
                        66
                    ),
                    x1457,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x1475,
        66
    );
    eqz(ctx, &x1479, 276359, 4)?;
    let x1480: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x1477, x3, 66), x1478, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1469, bigint_sub!(x1444, x1475, 32), 64),
                        x1446,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x1480, 276359, 4)?;
    let x1481: BytePoly_33 = bigint_add!(
        bigint_mul!(x1475, x1461, 33),
        bigint_mul!(x1444, x1463, 33),
        33
    );
    let x1482: BytePoly_33 = bigint_add!(
        bigint_mul!(x1478, x1461, 33),
        bigint_mul!(x1446, x1463, 33),
        33
    );
    let x1483: BytePoly_3 = bigint_nondet_quot!(ctx, x1481, x3, 3);
    let x1484: BytePoly_32 = bigint_nondet_rem!(ctx, x1481, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1483, x3, 35), x1484, 35),
            x1481,
            35
        ),
        260103,
        4,
    )?;
    let x1485: BytePoly_3 = bigint_nondet_quot!(ctx, x1482, x3, 3);
    let x1486: BytePoly_32 = bigint_nondet_rem!(ctx, x1482, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1485, x3, 35), x1486, 35),
            x1482,
            35
        ),
        260103,
        4,
    )?;
    let x1487: BytePoly_64 = bigint_mul!(x1457, x1457, 64);
    let x1488: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x1487, x1487, 64), x1487, 64),
        x2,
        64
    );
    let x1489: BytePoly_64 = bigint_add!(x48, x1488, 64);
    let x1490: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x1460, x1460, 32), x3, 32);
    let x1491: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1488, x1490, 96), x3, 32);
    let x1492: BytePoly_64 = bigint_mul!(x1460, x1491, 64);
    let x1493: BytePoly_64 = bigint_add!(x1492, x1492, 64);
    let x1494: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x1489, x1493, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1494, x3, 66), x1493, 66),
            x1489,
            66
        ),
        276359,
        4,
    )?;
    let x1495: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1491, x1491, 64), x3, 64), x3, 64),
            x1457,
            64
        ),
        x1457,
        64
    );
    let x1496: BytePoly_34 = bigint_nondet_quot!(ctx, x1495, x3, 34);
    let x1497: BytePoly_32 = bigint_nondet_rem!(ctx, x1495, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1496, x3, 66), x1497, 66),
            x1495,
            66
        ),
        276359,
        4,
    )?;
    let x1498: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x1491, x1497, 64), 64), x3, 64),
            x1460,
            64
        ),
        bigint_mul!(x1491, x1457, 64),
        64
    );
    let x1499: BytePoly_34 = bigint_nondet_quot!(ctx, x1498, x3, 34);
    let x1500: BytePoly_32 = bigint_nondet_rem!(ctx, x1498, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1499, x3, 66), x1500, 66),
            x1498,
            66
        ),
        276359,
        4,
    )?;
    let x1501: BytePoly_1 = bigint_nondet_rem!(ctx, x1462, x4, 1);
    let x1502: BytePoly_32 = bigint_nondet_quot!(ctx, x1462, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1502, x4, 33), x1501, 33),
            x1462,
            33
        ),
        260103,
        4,
    )?;
    let x1503: BytePoly_1 = bigint_sub!(x5, x1501, 1);
    eqz(ctx, &bigint_mul!(x1501, x1503, 2), 8131, 2)?;
    let x1504: BytePoly_32 = bigint_add!(bigint_sub!(x1500, x1486, 32), x3, 32);
    let x1505: BytePoly_32 = bigint_add!(bigint_sub!(x1497, x1484, 32), x3, 32);
    let x1506: BytePoly_32 = bigint_nondet_inv!(ctx, x1505, x3, 32);
    let x1507: BytePoly_64 = bigint_mul!(x1505, x1506, 64);
    let x1508: BytePoly_34 = bigint_nondet_quot!(ctx, x1507, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1507, bigint_mul!(x1508, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x1509: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1504, x1506, 64), x3, 32);
    let x1510: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x1509, x1505, 64), x1504, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x1511: BytePoly_34 = bigint_nondet_quot!(ctx, x1510, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x1510, bigint_mul!(x1511, x3, 66), 66),
        276359,
        4,
    )?;
    let x1512: BytePoly_64 = bigint_mul!(x1509, x1509, 64);
    let x1513: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x1512, x1484, 64), x3, 64),
            x1497,
            64
        ),
        x3,
        64
    );
    let x1514: BytePoly_34 = bigint_nondet_quot!(ctx, x1513, x3, 34);
    let x1515: BytePoly_32 = bigint_nondet_rem!(ctx, x1513, x3, 32);
    let x1516: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x1509, x1515, 64),
                        bigint_add!(
                            bigint_sub!(x1486, bigint_mul!(x1509, x1484, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x1517: BytePoly_34 = bigint_nondet_quot!(ctx, x1516, x3, 34);
    let x1518: BytePoly_32 = bigint_nondet_rem!(ctx, x1516, x3, 32);
    let x1519: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1512, bigint_mul!(x1514, x3, 66), 66),
                        x1484,
                        66
                    ),
                    x1497,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x1515,
        66
    );
    eqz(ctx, &x1519, 276359, 4)?;
    let x1520: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x1517, x3, 66), x1518, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1509, bigint_sub!(x1484, x1515, 32), 64),
                        x1486,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x1520, 276359, 4)?;
    let x1521: BytePoly_33 = bigint_add!(
        bigint_mul!(x1515, x1501, 33),
        bigint_mul!(x1484, x1503, 33),
        33
    );
    let x1522: BytePoly_33 = bigint_add!(
        bigint_mul!(x1518, x1501, 33),
        bigint_mul!(x1486, x1503, 33),
        33
    );
    let x1523: BytePoly_3 = bigint_nondet_quot!(ctx, x1521, x3, 3);
    let x1524: BytePoly_32 = bigint_nondet_rem!(ctx, x1521, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1523, x3, 35), x1524, 35),
            x1521,
            35
        ),
        260103,
        4,
    )?;
    let x1525: BytePoly_3 = bigint_nondet_quot!(ctx, x1522, x3, 3);
    let x1526: BytePoly_32 = bigint_nondet_rem!(ctx, x1522, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1525, x3, 35), x1526, 35),
            x1522,
            35
        ),
        260103,
        4,
    )?;
    let x1527: BytePoly_64 = bigint_mul!(x1497, x1497, 64);
    let x1528: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x1527, x1527, 64), x1527, 64),
        x2,
        64
    );
    let x1529: BytePoly_64 = bigint_add!(x48, x1528, 64);
    let x1530: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x1500, x1500, 32), x3, 32);
    let x1531: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1528, x1530, 96), x3, 32);
    let x1532: BytePoly_64 = bigint_mul!(x1500, x1531, 64);
    let x1533: BytePoly_64 = bigint_add!(x1532, x1532, 64);
    let x1534: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x1529, x1533, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1534, x3, 66), x1533, 66),
            x1529,
            66
        ),
        276359,
        4,
    )?;
    let x1535: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1531, x1531, 64), x3, 64), x3, 64),
            x1497,
            64
        ),
        x1497,
        64
    );
    let x1536: BytePoly_34 = bigint_nondet_quot!(ctx, x1535, x3, 34);
    let x1537: BytePoly_32 = bigint_nondet_rem!(ctx, x1535, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1536, x3, 66), x1537, 66),
            x1535,
            66
        ),
        276359,
        4,
    )?;
    let x1538: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x1531, x1537, 64), 64), x3, 64),
            x1500,
            64
        ),
        bigint_mul!(x1531, x1497, 64),
        64
    );
    let x1539: BytePoly_34 = bigint_nondet_quot!(ctx, x1538, x3, 34);
    let x1540: BytePoly_32 = bigint_nondet_rem!(ctx, x1538, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1539, x3, 66), x1540, 66),
            x1538,
            66
        ),
        276359,
        4,
    )?;
    let x1541: BytePoly_1 = bigint_nondet_rem!(ctx, x1502, x4, 1);
    let x1542: BytePoly_32 = bigint_nondet_quot!(ctx, x1502, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1542, x4, 33), x1541, 33),
            x1502,
            33
        ),
        260103,
        4,
    )?;
    let x1543: BytePoly_1 = bigint_sub!(x5, x1541, 1);
    eqz(ctx, &bigint_mul!(x1541, x1543, 2), 8131, 2)?;
    let x1544: BytePoly_32 = bigint_add!(bigint_sub!(x1540, x1526, 32), x3, 32);
    let x1545: BytePoly_32 = bigint_add!(bigint_sub!(x1537, x1524, 32), x3, 32);
    let x1546: BytePoly_32 = bigint_nondet_inv!(ctx, x1545, x3, 32);
    let x1547: BytePoly_64 = bigint_mul!(x1545, x1546, 64);
    let x1548: BytePoly_34 = bigint_nondet_quot!(ctx, x1547, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1547, bigint_mul!(x1548, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x1549: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1544, x1546, 64), x3, 32);
    let x1550: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x1549, x1545, 64), x1544, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x1551: BytePoly_34 = bigint_nondet_quot!(ctx, x1550, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x1550, bigint_mul!(x1551, x3, 66), 66),
        276359,
        4,
    )?;
    let x1552: BytePoly_64 = bigint_mul!(x1549, x1549, 64);
    let x1553: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x1552, x1524, 64), x3, 64),
            x1537,
            64
        ),
        x3,
        64
    );
    let x1554: BytePoly_34 = bigint_nondet_quot!(ctx, x1553, x3, 34);
    let x1555: BytePoly_32 = bigint_nondet_rem!(ctx, x1553, x3, 32);
    let x1556: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x1549, x1555, 64),
                        bigint_add!(
                            bigint_sub!(x1526, bigint_mul!(x1549, x1524, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x1557: BytePoly_34 = bigint_nondet_quot!(ctx, x1556, x3, 34);
    let x1558: BytePoly_32 = bigint_nondet_rem!(ctx, x1556, x3, 32);
    let x1559: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1552, bigint_mul!(x1554, x3, 66), 66),
                        x1524,
                        66
                    ),
                    x1537,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x1555,
        66
    );
    eqz(ctx, &x1559, 276359, 4)?;
    let x1560: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x1557, x3, 66), x1558, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1549, bigint_sub!(x1524, x1555, 32), 64),
                        x1526,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x1560, 276359, 4)?;
    let x1561: BytePoly_33 = bigint_add!(
        bigint_mul!(x1555, x1541, 33),
        bigint_mul!(x1524, x1543, 33),
        33
    );
    let x1562: BytePoly_33 = bigint_add!(
        bigint_mul!(x1558, x1541, 33),
        bigint_mul!(x1526, x1543, 33),
        33
    );
    let x1563: BytePoly_3 = bigint_nondet_quot!(ctx, x1561, x3, 3);
    let x1564: BytePoly_32 = bigint_nondet_rem!(ctx, x1561, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1563, x3, 35), x1564, 35),
            x1561,
            35
        ),
        260103,
        4,
    )?;
    let x1565: BytePoly_3 = bigint_nondet_quot!(ctx, x1562, x3, 3);
    let x1566: BytePoly_32 = bigint_nondet_rem!(ctx, x1562, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1565, x3, 35), x1566, 35),
            x1562,
            35
        ),
        260103,
        4,
    )?;
    let x1567: BytePoly_64 = bigint_mul!(x1537, x1537, 64);
    let x1568: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x1567, x1567, 64), x1567, 64),
        x2,
        64
    );
    let x1569: BytePoly_64 = bigint_add!(x48, x1568, 64);
    let x1570: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x1540, x1540, 32), x3, 32);
    let x1571: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1568, x1570, 96), x3, 32);
    let x1572: BytePoly_64 = bigint_mul!(x1540, x1571, 64);
    let x1573: BytePoly_64 = bigint_add!(x1572, x1572, 64);
    let x1574: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x1569, x1573, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1574, x3, 66), x1573, 66),
            x1569,
            66
        ),
        276359,
        4,
    )?;
    let x1575: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1571, x1571, 64), x3, 64), x3, 64),
            x1537,
            64
        ),
        x1537,
        64
    );
    let x1576: BytePoly_34 = bigint_nondet_quot!(ctx, x1575, x3, 34);
    let x1577: BytePoly_32 = bigint_nondet_rem!(ctx, x1575, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1576, x3, 66), x1577, 66),
            x1575,
            66
        ),
        276359,
        4,
    )?;
    let x1578: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x1571, x1577, 64), 64), x3, 64),
            x1540,
            64
        ),
        bigint_mul!(x1571, x1537, 64),
        64
    );
    let x1579: BytePoly_34 = bigint_nondet_quot!(ctx, x1578, x3, 34);
    let x1580: BytePoly_32 = bigint_nondet_rem!(ctx, x1578, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1579, x3, 66), x1580, 66),
            x1578,
            66
        ),
        276359,
        4,
    )?;
    let x1581: BytePoly_1 = bigint_nondet_rem!(ctx, x1542, x4, 1);
    let x1582: BytePoly_32 = bigint_nondet_quot!(ctx, x1542, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1582, x4, 33), x1581, 33),
            x1542,
            33
        ),
        260103,
        4,
    )?;
    let x1583: BytePoly_1 = bigint_sub!(x5, x1581, 1);
    eqz(ctx, &bigint_mul!(x1581, x1583, 2), 8131, 2)?;
    let x1584: BytePoly_32 = bigint_add!(bigint_sub!(x1580, x1566, 32), x3, 32);
    let x1585: BytePoly_32 = bigint_add!(bigint_sub!(x1577, x1564, 32), x3, 32);
    let x1586: BytePoly_32 = bigint_nondet_inv!(ctx, x1585, x3, 32);
    let x1587: BytePoly_64 = bigint_mul!(x1585, x1586, 64);
    let x1588: BytePoly_34 = bigint_nondet_quot!(ctx, x1587, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1587, bigint_mul!(x1588, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x1589: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1584, x1586, 64), x3, 32);
    let x1590: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x1589, x1585, 64), x1584, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x1591: BytePoly_34 = bigint_nondet_quot!(ctx, x1590, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x1590, bigint_mul!(x1591, x3, 66), 66),
        276359,
        4,
    )?;
    let x1592: BytePoly_64 = bigint_mul!(x1589, x1589, 64);
    let x1593: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x1592, x1564, 64), x3, 64),
            x1577,
            64
        ),
        x3,
        64
    );
    let x1594: BytePoly_34 = bigint_nondet_quot!(ctx, x1593, x3, 34);
    let x1595: BytePoly_32 = bigint_nondet_rem!(ctx, x1593, x3, 32);
    let x1596: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x1589, x1595, 64),
                        bigint_add!(
                            bigint_sub!(x1566, bigint_mul!(x1589, x1564, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x1597: BytePoly_34 = bigint_nondet_quot!(ctx, x1596, x3, 34);
    let x1598: BytePoly_32 = bigint_nondet_rem!(ctx, x1596, x3, 32);
    let x1599: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1592, bigint_mul!(x1594, x3, 66), 66),
                        x1564,
                        66
                    ),
                    x1577,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x1595,
        66
    );
    eqz(ctx, &x1599, 276359, 4)?;
    let x1600: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x1597, x3, 66), x1598, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1589, bigint_sub!(x1564, x1595, 32), 64),
                        x1566,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x1600, 276359, 4)?;
    let x1601: BytePoly_33 = bigint_add!(
        bigint_mul!(x1595, x1581, 33),
        bigint_mul!(x1564, x1583, 33),
        33
    );
    let x1602: BytePoly_33 = bigint_add!(
        bigint_mul!(x1598, x1581, 33),
        bigint_mul!(x1566, x1583, 33),
        33
    );
    let x1603: BytePoly_3 = bigint_nondet_quot!(ctx, x1601, x3, 3);
    let x1604: BytePoly_32 = bigint_nondet_rem!(ctx, x1601, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1603, x3, 35), x1604, 35),
            x1601,
            35
        ),
        260103,
        4,
    )?;
    let x1605: BytePoly_3 = bigint_nondet_quot!(ctx, x1602, x3, 3);
    let x1606: BytePoly_32 = bigint_nondet_rem!(ctx, x1602, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1605, x3, 35), x1606, 35),
            x1602,
            35
        ),
        260103,
        4,
    )?;
    let x1607: BytePoly_64 = bigint_mul!(x1577, x1577, 64);
    let x1608: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x1607, x1607, 64), x1607, 64),
        x2,
        64
    );
    let x1609: BytePoly_64 = bigint_add!(x48, x1608, 64);
    let x1610: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x1580, x1580, 32), x3, 32);
    let x1611: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1608, x1610, 96), x3, 32);
    let x1612: BytePoly_64 = bigint_mul!(x1580, x1611, 64);
    let x1613: BytePoly_64 = bigint_add!(x1612, x1612, 64);
    let x1614: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x1609, x1613, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1614, x3, 66), x1613, 66),
            x1609,
            66
        ),
        276359,
        4,
    )?;
    let x1615: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1611, x1611, 64), x3, 64), x3, 64),
            x1577,
            64
        ),
        x1577,
        64
    );
    let x1616: BytePoly_34 = bigint_nondet_quot!(ctx, x1615, x3, 34);
    let x1617: BytePoly_32 = bigint_nondet_rem!(ctx, x1615, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1616, x3, 66), x1617, 66),
            x1615,
            66
        ),
        276359,
        4,
    )?;
    let x1618: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x1611, x1617, 64), 64), x3, 64),
            x1580,
            64
        ),
        bigint_mul!(x1611, x1577, 64),
        64
    );
    let x1619: BytePoly_34 = bigint_nondet_quot!(ctx, x1618, x3, 34);
    let x1620: BytePoly_32 = bigint_nondet_rem!(ctx, x1618, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1619, x3, 66), x1620, 66),
            x1618,
            66
        ),
        276359,
        4,
    )?;
    let x1621: BytePoly_1 = bigint_nondet_rem!(ctx, x1582, x4, 1);
    let x1622: BytePoly_32 = bigint_nondet_quot!(ctx, x1582, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1622, x4, 33), x1621, 33),
            x1582,
            33
        ),
        260103,
        4,
    )?;
    let x1623: BytePoly_1 = bigint_sub!(x5, x1621, 1);
    eqz(ctx, &bigint_mul!(x1621, x1623, 2), 8131, 2)?;
    let x1624: BytePoly_32 = bigint_add!(bigint_sub!(x1620, x1606, 32), x3, 32);
    let x1625: BytePoly_32 = bigint_add!(bigint_sub!(x1617, x1604, 32), x3, 32);
    let x1626: BytePoly_32 = bigint_nondet_inv!(ctx, x1625, x3, 32);
    let x1627: BytePoly_64 = bigint_mul!(x1625, x1626, 64);
    let x1628: BytePoly_34 = bigint_nondet_quot!(ctx, x1627, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1627, bigint_mul!(x1628, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x1629: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1624, x1626, 64), x3, 32);
    let x1630: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x1629, x1625, 64), x1624, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x1631: BytePoly_34 = bigint_nondet_quot!(ctx, x1630, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x1630, bigint_mul!(x1631, x3, 66), 66),
        276359,
        4,
    )?;
    let x1632: BytePoly_64 = bigint_mul!(x1629, x1629, 64);
    let x1633: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x1632, x1604, 64), x3, 64),
            x1617,
            64
        ),
        x3,
        64
    );
    let x1634: BytePoly_34 = bigint_nondet_quot!(ctx, x1633, x3, 34);
    let x1635: BytePoly_32 = bigint_nondet_rem!(ctx, x1633, x3, 32);
    let x1636: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x1629, x1635, 64),
                        bigint_add!(
                            bigint_sub!(x1606, bigint_mul!(x1629, x1604, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x1637: BytePoly_34 = bigint_nondet_quot!(ctx, x1636, x3, 34);
    let x1638: BytePoly_32 = bigint_nondet_rem!(ctx, x1636, x3, 32);
    let x1639: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1632, bigint_mul!(x1634, x3, 66), 66),
                        x1604,
                        66
                    ),
                    x1617,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x1635,
        66
    );
    eqz(ctx, &x1639, 276359, 4)?;
    let x1640: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x1637, x3, 66), x1638, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1629, bigint_sub!(x1604, x1635, 32), 64),
                        x1606,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x1640, 276359, 4)?;
    let x1641: BytePoly_33 = bigint_add!(
        bigint_mul!(x1635, x1621, 33),
        bigint_mul!(x1604, x1623, 33),
        33
    );
    let x1642: BytePoly_33 = bigint_add!(
        bigint_mul!(x1638, x1621, 33),
        bigint_mul!(x1606, x1623, 33),
        33
    );
    let x1643: BytePoly_3 = bigint_nondet_quot!(ctx, x1641, x3, 3);
    let x1644: BytePoly_32 = bigint_nondet_rem!(ctx, x1641, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1643, x3, 35), x1644, 35),
            x1641,
            35
        ),
        260103,
        4,
    )?;
    let x1645: BytePoly_3 = bigint_nondet_quot!(ctx, x1642, x3, 3);
    let x1646: BytePoly_32 = bigint_nondet_rem!(ctx, x1642, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1645, x3, 35), x1646, 35),
            x1642,
            35
        ),
        260103,
        4,
    )?;
    let x1647: BytePoly_64 = bigint_mul!(x1617, x1617, 64);
    let x1648: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x1647, x1647, 64), x1647, 64),
        x2,
        64
    );
    let x1649: BytePoly_64 = bigint_add!(x48, x1648, 64);
    let x1650: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x1620, x1620, 32), x3, 32);
    let x1651: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1648, x1650, 96), x3, 32);
    let x1652: BytePoly_64 = bigint_mul!(x1620, x1651, 64);
    let x1653: BytePoly_64 = bigint_add!(x1652, x1652, 64);
    let x1654: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x1649, x1653, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1654, x3, 66), x1653, 66),
            x1649,
            66
        ),
        276359,
        4,
    )?;
    let x1655: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1651, x1651, 64), x3, 64), x3, 64),
            x1617,
            64
        ),
        x1617,
        64
    );
    let x1656: BytePoly_34 = bigint_nondet_quot!(ctx, x1655, x3, 34);
    let x1657: BytePoly_32 = bigint_nondet_rem!(ctx, x1655, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1656, x3, 66), x1657, 66),
            x1655,
            66
        ),
        276359,
        4,
    )?;
    let x1658: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x1651, x1657, 64), 64), x3, 64),
            x1620,
            64
        ),
        bigint_mul!(x1651, x1617, 64),
        64
    );
    let x1659: BytePoly_34 = bigint_nondet_quot!(ctx, x1658, x3, 34);
    let x1660: BytePoly_32 = bigint_nondet_rem!(ctx, x1658, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1659, x3, 66), x1660, 66),
            x1658,
            66
        ),
        276359,
        4,
    )?;
    let x1661: BytePoly_1 = bigint_nondet_rem!(ctx, x1622, x4, 1);
    let x1662: BytePoly_32 = bigint_nondet_quot!(ctx, x1622, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1662, x4, 33), x1661, 33),
            x1622,
            33
        ),
        260103,
        4,
    )?;
    let x1663: BytePoly_1 = bigint_sub!(x5, x1661, 1);
    eqz(ctx, &bigint_mul!(x1661, x1663, 2), 8131, 2)?;
    let x1664: BytePoly_32 = bigint_add!(bigint_sub!(x1660, x1646, 32), x3, 32);
    let x1665: BytePoly_32 = bigint_add!(bigint_sub!(x1657, x1644, 32), x3, 32);
    let x1666: BytePoly_32 = bigint_nondet_inv!(ctx, x1665, x3, 32);
    let x1667: BytePoly_64 = bigint_mul!(x1665, x1666, 64);
    let x1668: BytePoly_34 = bigint_nondet_quot!(ctx, x1667, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1667, bigint_mul!(x1668, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x1669: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1664, x1666, 64), x3, 32);
    let x1670: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x1669, x1665, 64), x1664, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x1671: BytePoly_34 = bigint_nondet_quot!(ctx, x1670, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x1670, bigint_mul!(x1671, x3, 66), 66),
        276359,
        4,
    )?;
    let x1672: BytePoly_64 = bigint_mul!(x1669, x1669, 64);
    let x1673: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x1672, x1644, 64), x3, 64),
            x1657,
            64
        ),
        x3,
        64
    );
    let x1674: BytePoly_34 = bigint_nondet_quot!(ctx, x1673, x3, 34);
    let x1675: BytePoly_32 = bigint_nondet_rem!(ctx, x1673, x3, 32);
    let x1676: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x1669, x1675, 64),
                        bigint_add!(
                            bigint_sub!(x1646, bigint_mul!(x1669, x1644, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x1677: BytePoly_34 = bigint_nondet_quot!(ctx, x1676, x3, 34);
    let x1678: BytePoly_32 = bigint_nondet_rem!(ctx, x1676, x3, 32);
    let x1679: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1672, bigint_mul!(x1674, x3, 66), 66),
                        x1644,
                        66
                    ),
                    x1657,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x1675,
        66
    );
    eqz(ctx, &x1679, 276359, 4)?;
    let x1680: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x1677, x3, 66), x1678, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1669, bigint_sub!(x1644, x1675, 32), 64),
                        x1646,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x1680, 276359, 4)?;
    let x1681: BytePoly_33 = bigint_add!(
        bigint_mul!(x1675, x1661, 33),
        bigint_mul!(x1644, x1663, 33),
        33
    );
    let x1682: BytePoly_33 = bigint_add!(
        bigint_mul!(x1678, x1661, 33),
        bigint_mul!(x1646, x1663, 33),
        33
    );
    let x1683: BytePoly_3 = bigint_nondet_quot!(ctx, x1681, x3, 3);
    let x1684: BytePoly_32 = bigint_nondet_rem!(ctx, x1681, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1683, x3, 35), x1684, 35),
            x1681,
            35
        ),
        260103,
        4,
    )?;
    let x1685: BytePoly_3 = bigint_nondet_quot!(ctx, x1682, x3, 3);
    let x1686: BytePoly_32 = bigint_nondet_rem!(ctx, x1682, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1685, x3, 35), x1686, 35),
            x1682,
            35
        ),
        260103,
        4,
    )?;
    let x1687: BytePoly_64 = bigint_mul!(x1657, x1657, 64);
    let x1688: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x1687, x1687, 64), x1687, 64),
        x2,
        64
    );
    let x1689: BytePoly_64 = bigint_add!(x48, x1688, 64);
    let x1690: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x1660, x1660, 32), x3, 32);
    let x1691: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1688, x1690, 96), x3, 32);
    let x1692: BytePoly_64 = bigint_mul!(x1660, x1691, 64);
    let x1693: BytePoly_64 = bigint_add!(x1692, x1692, 64);
    let x1694: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x1689, x1693, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1694, x3, 66), x1693, 66),
            x1689,
            66
        ),
        276359,
        4,
    )?;
    let x1695: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1691, x1691, 64), x3, 64), x3, 64),
            x1657,
            64
        ),
        x1657,
        64
    );
    let x1696: BytePoly_34 = bigint_nondet_quot!(ctx, x1695, x3, 34);
    let x1697: BytePoly_32 = bigint_nondet_rem!(ctx, x1695, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1696, x3, 66), x1697, 66),
            x1695,
            66
        ),
        276359,
        4,
    )?;
    let x1698: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x1691, x1697, 64), 64), x3, 64),
            x1660,
            64
        ),
        bigint_mul!(x1691, x1657, 64),
        64
    );
    let x1699: BytePoly_34 = bigint_nondet_quot!(ctx, x1698, x3, 34);
    let x1700: BytePoly_32 = bigint_nondet_rem!(ctx, x1698, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1699, x3, 66), x1700, 66),
            x1698,
            66
        ),
        276359,
        4,
    )?;
    let x1701: BytePoly_1 = bigint_nondet_rem!(ctx, x1662, x4, 1);
    let x1702: BytePoly_32 = bigint_nondet_quot!(ctx, x1662, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1702, x4, 33), x1701, 33),
            x1662,
            33
        ),
        260103,
        4,
    )?;
    let x1703: BytePoly_1 = bigint_sub!(x5, x1701, 1);
    eqz(ctx, &bigint_mul!(x1701, x1703, 2), 8131, 2)?;
    let x1704: BytePoly_32 = bigint_add!(bigint_sub!(x1700, x1686, 32), x3, 32);
    let x1705: BytePoly_32 = bigint_add!(bigint_sub!(x1697, x1684, 32), x3, 32);
    let x1706: BytePoly_32 = bigint_nondet_inv!(ctx, x1705, x3, 32);
    let x1707: BytePoly_64 = bigint_mul!(x1705, x1706, 64);
    let x1708: BytePoly_34 = bigint_nondet_quot!(ctx, x1707, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1707, bigint_mul!(x1708, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x1709: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1704, x1706, 64), x3, 32);
    let x1710: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x1709, x1705, 64), x1704, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x1711: BytePoly_34 = bigint_nondet_quot!(ctx, x1710, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x1710, bigint_mul!(x1711, x3, 66), 66),
        276359,
        4,
    )?;
    let x1712: BytePoly_64 = bigint_mul!(x1709, x1709, 64);
    let x1713: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x1712, x1684, 64), x3, 64),
            x1697,
            64
        ),
        x3,
        64
    );
    let x1714: BytePoly_34 = bigint_nondet_quot!(ctx, x1713, x3, 34);
    let x1715: BytePoly_32 = bigint_nondet_rem!(ctx, x1713, x3, 32);
    let x1716: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x1709, x1715, 64),
                        bigint_add!(
                            bigint_sub!(x1686, bigint_mul!(x1709, x1684, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x1717: BytePoly_34 = bigint_nondet_quot!(ctx, x1716, x3, 34);
    let x1718: BytePoly_32 = bigint_nondet_rem!(ctx, x1716, x3, 32);
    let x1719: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1712, bigint_mul!(x1714, x3, 66), 66),
                        x1684,
                        66
                    ),
                    x1697,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x1715,
        66
    );
    eqz(ctx, &x1719, 276359, 4)?;
    let x1720: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x1717, x3, 66), x1718, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1709, bigint_sub!(x1684, x1715, 32), 64),
                        x1686,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x1720, 276359, 4)?;
    let x1721: BytePoly_33 = bigint_add!(
        bigint_mul!(x1715, x1701, 33),
        bigint_mul!(x1684, x1703, 33),
        33
    );
    let x1722: BytePoly_33 = bigint_add!(
        bigint_mul!(x1718, x1701, 33),
        bigint_mul!(x1686, x1703, 33),
        33
    );
    let x1723: BytePoly_3 = bigint_nondet_quot!(ctx, x1721, x3, 3);
    let x1724: BytePoly_32 = bigint_nondet_rem!(ctx, x1721, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1723, x3, 35), x1724, 35),
            x1721,
            35
        ),
        260103,
        4,
    )?;
    let x1725: BytePoly_3 = bigint_nondet_quot!(ctx, x1722, x3, 3);
    let x1726: BytePoly_32 = bigint_nondet_rem!(ctx, x1722, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1725, x3, 35), x1726, 35),
            x1722,
            35
        ),
        260103,
        4,
    )?;
    let x1727: BytePoly_64 = bigint_mul!(x1697, x1697, 64);
    let x1728: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x1727, x1727, 64), x1727, 64),
        x2,
        64
    );
    let x1729: BytePoly_64 = bigint_add!(x48, x1728, 64);
    let x1730: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x1700, x1700, 32), x3, 32);
    let x1731: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1728, x1730, 96), x3, 32);
    let x1732: BytePoly_64 = bigint_mul!(x1700, x1731, 64);
    let x1733: BytePoly_64 = bigint_add!(x1732, x1732, 64);
    let x1734: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x1729, x1733, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1734, x3, 66), x1733, 66),
            x1729,
            66
        ),
        276359,
        4,
    )?;
    let x1735: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1731, x1731, 64), x3, 64), x3, 64),
            x1697,
            64
        ),
        x1697,
        64
    );
    let x1736: BytePoly_34 = bigint_nondet_quot!(ctx, x1735, x3, 34);
    let x1737: BytePoly_32 = bigint_nondet_rem!(ctx, x1735, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1736, x3, 66), x1737, 66),
            x1735,
            66
        ),
        276359,
        4,
    )?;
    let x1738: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x1731, x1737, 64), 64), x3, 64),
            x1700,
            64
        ),
        bigint_mul!(x1731, x1697, 64),
        64
    );
    let x1739: BytePoly_34 = bigint_nondet_quot!(ctx, x1738, x3, 34);
    let x1740: BytePoly_32 = bigint_nondet_rem!(ctx, x1738, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1739, x3, 66), x1740, 66),
            x1738,
            66
        ),
        276359,
        4,
    )?;
    let x1741: BytePoly_1 = bigint_nondet_rem!(ctx, x1702, x4, 1);
    let x1742: BytePoly_32 = bigint_nondet_quot!(ctx, x1702, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1742, x4, 33), x1741, 33),
            x1702,
            33
        ),
        260103,
        4,
    )?;
    let x1743: BytePoly_1 = bigint_sub!(x5, x1741, 1);
    eqz(ctx, &bigint_mul!(x1741, x1743, 2), 8131, 2)?;
    let x1744: BytePoly_32 = bigint_add!(bigint_sub!(x1740, x1726, 32), x3, 32);
    let x1745: BytePoly_32 = bigint_add!(bigint_sub!(x1737, x1724, 32), x3, 32);
    let x1746: BytePoly_32 = bigint_nondet_inv!(ctx, x1745, x3, 32);
    let x1747: BytePoly_64 = bigint_mul!(x1745, x1746, 64);
    let x1748: BytePoly_34 = bigint_nondet_quot!(ctx, x1747, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1747, bigint_mul!(x1748, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x1749: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1744, x1746, 64), x3, 32);
    let x1750: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x1749, x1745, 64), x1744, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x1751: BytePoly_34 = bigint_nondet_quot!(ctx, x1750, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x1750, bigint_mul!(x1751, x3, 66), 66),
        276359,
        4,
    )?;
    let x1752: BytePoly_64 = bigint_mul!(x1749, x1749, 64);
    let x1753: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x1752, x1724, 64), x3, 64),
            x1737,
            64
        ),
        x3,
        64
    );
    let x1754: BytePoly_34 = bigint_nondet_quot!(ctx, x1753, x3, 34);
    let x1755: BytePoly_32 = bigint_nondet_rem!(ctx, x1753, x3, 32);
    let x1756: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x1749, x1755, 64),
                        bigint_add!(
                            bigint_sub!(x1726, bigint_mul!(x1749, x1724, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x1757: BytePoly_34 = bigint_nondet_quot!(ctx, x1756, x3, 34);
    let x1758: BytePoly_32 = bigint_nondet_rem!(ctx, x1756, x3, 32);
    let x1759: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1752, bigint_mul!(x1754, x3, 66), 66),
                        x1724,
                        66
                    ),
                    x1737,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x1755,
        66
    );
    eqz(ctx, &x1759, 276359, 4)?;
    let x1760: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x1757, x3, 66), x1758, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1749, bigint_sub!(x1724, x1755, 32), 64),
                        x1726,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x1760, 276359, 4)?;
    let x1761: BytePoly_33 = bigint_add!(
        bigint_mul!(x1755, x1741, 33),
        bigint_mul!(x1724, x1743, 33),
        33
    );
    let x1762: BytePoly_33 = bigint_add!(
        bigint_mul!(x1758, x1741, 33),
        bigint_mul!(x1726, x1743, 33),
        33
    );
    let x1763: BytePoly_3 = bigint_nondet_quot!(ctx, x1761, x3, 3);
    let x1764: BytePoly_32 = bigint_nondet_rem!(ctx, x1761, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1763, x3, 35), x1764, 35),
            x1761,
            35
        ),
        260103,
        4,
    )?;
    let x1765: BytePoly_3 = bigint_nondet_quot!(ctx, x1762, x3, 3);
    let x1766: BytePoly_32 = bigint_nondet_rem!(ctx, x1762, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1765, x3, 35), x1766, 35),
            x1762,
            35
        ),
        260103,
        4,
    )?;
    let x1767: BytePoly_64 = bigint_mul!(x1737, x1737, 64);
    let x1768: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x1767, x1767, 64), x1767, 64),
        x2,
        64
    );
    let x1769: BytePoly_64 = bigint_add!(x48, x1768, 64);
    let x1770: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x1740, x1740, 32), x3, 32);
    let x1771: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1768, x1770, 96), x3, 32);
    let x1772: BytePoly_64 = bigint_mul!(x1740, x1771, 64);
    let x1773: BytePoly_64 = bigint_add!(x1772, x1772, 64);
    let x1774: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x1769, x1773, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1774, x3, 66), x1773, 66),
            x1769,
            66
        ),
        276359,
        4,
    )?;
    let x1775: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1771, x1771, 64), x3, 64), x3, 64),
            x1737,
            64
        ),
        x1737,
        64
    );
    let x1776: BytePoly_34 = bigint_nondet_quot!(ctx, x1775, x3, 34);
    let x1777: BytePoly_32 = bigint_nondet_rem!(ctx, x1775, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1776, x3, 66), x1777, 66),
            x1775,
            66
        ),
        276359,
        4,
    )?;
    let x1778: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x1771, x1777, 64), 64), x3, 64),
            x1740,
            64
        ),
        bigint_mul!(x1771, x1737, 64),
        64
    );
    let x1779: BytePoly_34 = bigint_nondet_quot!(ctx, x1778, x3, 34);
    let x1780: BytePoly_32 = bigint_nondet_rem!(ctx, x1778, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1779, x3, 66), x1780, 66),
            x1778,
            66
        ),
        276359,
        4,
    )?;
    let x1781: BytePoly_1 = bigint_nondet_rem!(ctx, x1742, x4, 1);
    let x1782: BytePoly_32 = bigint_nondet_quot!(ctx, x1742, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1782, x4, 33), x1781, 33),
            x1742,
            33
        ),
        260103,
        4,
    )?;
    let x1783: BytePoly_1 = bigint_sub!(x5, x1781, 1);
    eqz(ctx, &bigint_mul!(x1781, x1783, 2), 8131, 2)?;
    let x1784: BytePoly_32 = bigint_add!(bigint_sub!(x1780, x1766, 32), x3, 32);
    let x1785: BytePoly_32 = bigint_add!(bigint_sub!(x1777, x1764, 32), x3, 32);
    let x1786: BytePoly_32 = bigint_nondet_inv!(ctx, x1785, x3, 32);
    let x1787: BytePoly_64 = bigint_mul!(x1785, x1786, 64);
    let x1788: BytePoly_34 = bigint_nondet_quot!(ctx, x1787, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1787, bigint_mul!(x1788, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x1789: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1784, x1786, 64), x3, 32);
    let x1790: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x1789, x1785, 64), x1784, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x1791: BytePoly_34 = bigint_nondet_quot!(ctx, x1790, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x1790, bigint_mul!(x1791, x3, 66), 66),
        276359,
        4,
    )?;
    let x1792: BytePoly_64 = bigint_mul!(x1789, x1789, 64);
    let x1793: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x1792, x1764, 64), x3, 64),
            x1777,
            64
        ),
        x3,
        64
    );
    let x1794: BytePoly_34 = bigint_nondet_quot!(ctx, x1793, x3, 34);
    let x1795: BytePoly_32 = bigint_nondet_rem!(ctx, x1793, x3, 32);
    let x1796: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x1789, x1795, 64),
                        bigint_add!(
                            bigint_sub!(x1766, bigint_mul!(x1789, x1764, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x1797: BytePoly_34 = bigint_nondet_quot!(ctx, x1796, x3, 34);
    let x1798: BytePoly_32 = bigint_nondet_rem!(ctx, x1796, x3, 32);
    let x1799: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1792, bigint_mul!(x1794, x3, 66), 66),
                        x1764,
                        66
                    ),
                    x1777,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x1795,
        66
    );
    eqz(ctx, &x1799, 276359, 4)?;
    let x1800: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x1797, x3, 66), x1798, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1789, bigint_sub!(x1764, x1795, 32), 64),
                        x1766,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x1800, 276359, 4)?;
    let x1801: BytePoly_33 = bigint_add!(
        bigint_mul!(x1795, x1781, 33),
        bigint_mul!(x1764, x1783, 33),
        33
    );
    let x1802: BytePoly_33 = bigint_add!(
        bigint_mul!(x1798, x1781, 33),
        bigint_mul!(x1766, x1783, 33),
        33
    );
    let x1803: BytePoly_3 = bigint_nondet_quot!(ctx, x1801, x3, 3);
    let x1804: BytePoly_32 = bigint_nondet_rem!(ctx, x1801, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1803, x3, 35), x1804, 35),
            x1801,
            35
        ),
        260103,
        4,
    )?;
    let x1805: BytePoly_3 = bigint_nondet_quot!(ctx, x1802, x3, 3);
    let x1806: BytePoly_32 = bigint_nondet_rem!(ctx, x1802, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1805, x3, 35), x1806, 35),
            x1802,
            35
        ),
        260103,
        4,
    )?;
    let x1807: BytePoly_64 = bigint_mul!(x1777, x1777, 64);
    let x1808: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x1807, x1807, 64), x1807, 64),
        x2,
        64
    );
    let x1809: BytePoly_64 = bigint_add!(x48, x1808, 64);
    let x1810: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x1780, x1780, 32), x3, 32);
    let x1811: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1808, x1810, 96), x3, 32);
    let x1812: BytePoly_64 = bigint_mul!(x1780, x1811, 64);
    let x1813: BytePoly_64 = bigint_add!(x1812, x1812, 64);
    let x1814: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x1809, x1813, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1814, x3, 66), x1813, 66),
            x1809,
            66
        ),
        276359,
        4,
    )?;
    let x1815: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1811, x1811, 64), x3, 64), x3, 64),
            x1777,
            64
        ),
        x1777,
        64
    );
    let x1816: BytePoly_34 = bigint_nondet_quot!(ctx, x1815, x3, 34);
    let x1817: BytePoly_32 = bigint_nondet_rem!(ctx, x1815, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1816, x3, 66), x1817, 66),
            x1815,
            66
        ),
        276359,
        4,
    )?;
    let x1818: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x1811, x1817, 64), 64), x3, 64),
            x1780,
            64
        ),
        bigint_mul!(x1811, x1777, 64),
        64
    );
    let x1819: BytePoly_34 = bigint_nondet_quot!(ctx, x1818, x3, 34);
    let x1820: BytePoly_32 = bigint_nondet_rem!(ctx, x1818, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1819, x3, 66), x1820, 66),
            x1818,
            66
        ),
        276359,
        4,
    )?;
    let x1821: BytePoly_1 = bigint_nondet_rem!(ctx, x1782, x4, 1);
    let x1822: BytePoly_32 = bigint_nondet_quot!(ctx, x1782, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1822, x4, 33), x1821, 33),
            x1782,
            33
        ),
        260103,
        4,
    )?;
    let x1823: BytePoly_1 = bigint_sub!(x5, x1821, 1);
    eqz(ctx, &bigint_mul!(x1821, x1823, 2), 8131, 2)?;
    let x1824: BytePoly_32 = bigint_add!(bigint_sub!(x1820, x1806, 32), x3, 32);
    let x1825: BytePoly_32 = bigint_add!(bigint_sub!(x1817, x1804, 32), x3, 32);
    let x1826: BytePoly_32 = bigint_nondet_inv!(ctx, x1825, x3, 32);
    let x1827: BytePoly_64 = bigint_mul!(x1825, x1826, 64);
    let x1828: BytePoly_34 = bigint_nondet_quot!(ctx, x1827, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1827, bigint_mul!(x1828, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x1829: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1824, x1826, 64), x3, 32);
    let x1830: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x1829, x1825, 64), x1824, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x1831: BytePoly_34 = bigint_nondet_quot!(ctx, x1830, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x1830, bigint_mul!(x1831, x3, 66), 66),
        276359,
        4,
    )?;
    let x1832: BytePoly_64 = bigint_mul!(x1829, x1829, 64);
    let x1833: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x1832, x1804, 64), x3, 64),
            x1817,
            64
        ),
        x3,
        64
    );
    let x1834: BytePoly_34 = bigint_nondet_quot!(ctx, x1833, x3, 34);
    let x1835: BytePoly_32 = bigint_nondet_rem!(ctx, x1833, x3, 32);
    let x1836: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x1829, x1835, 64),
                        bigint_add!(
                            bigint_sub!(x1806, bigint_mul!(x1829, x1804, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x1837: BytePoly_34 = bigint_nondet_quot!(ctx, x1836, x3, 34);
    let x1838: BytePoly_32 = bigint_nondet_rem!(ctx, x1836, x3, 32);
    let x1839: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1832, bigint_mul!(x1834, x3, 66), 66),
                        x1804,
                        66
                    ),
                    x1817,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x1835,
        66
    );
    eqz(ctx, &x1839, 276359, 4)?;
    let x1840: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x1837, x3, 66), x1838, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1829, bigint_sub!(x1804, x1835, 32), 64),
                        x1806,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x1840, 276359, 4)?;
    let x1841: BytePoly_33 = bigint_add!(
        bigint_mul!(x1835, x1821, 33),
        bigint_mul!(x1804, x1823, 33),
        33
    );
    let x1842: BytePoly_33 = bigint_add!(
        bigint_mul!(x1838, x1821, 33),
        bigint_mul!(x1806, x1823, 33),
        33
    );
    let x1843: BytePoly_3 = bigint_nondet_quot!(ctx, x1841, x3, 3);
    let x1844: BytePoly_32 = bigint_nondet_rem!(ctx, x1841, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1843, x3, 35), x1844, 35),
            x1841,
            35
        ),
        260103,
        4,
    )?;
    let x1845: BytePoly_3 = bigint_nondet_quot!(ctx, x1842, x3, 3);
    let x1846: BytePoly_32 = bigint_nondet_rem!(ctx, x1842, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1845, x3, 35), x1846, 35),
            x1842,
            35
        ),
        260103,
        4,
    )?;
    let x1847: BytePoly_64 = bigint_mul!(x1817, x1817, 64);
    let x1848: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x1847, x1847, 64), x1847, 64),
        x2,
        64
    );
    let x1849: BytePoly_64 = bigint_add!(x48, x1848, 64);
    let x1850: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x1820, x1820, 32), x3, 32);
    let x1851: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1848, x1850, 96), x3, 32);
    let x1852: BytePoly_64 = bigint_mul!(x1820, x1851, 64);
    let x1853: BytePoly_64 = bigint_add!(x1852, x1852, 64);
    let x1854: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x1849, x1853, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1854, x3, 66), x1853, 66),
            x1849,
            66
        ),
        276359,
        4,
    )?;
    let x1855: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1851, x1851, 64), x3, 64), x3, 64),
            x1817,
            64
        ),
        x1817,
        64
    );
    let x1856: BytePoly_34 = bigint_nondet_quot!(ctx, x1855, x3, 34);
    let x1857: BytePoly_32 = bigint_nondet_rem!(ctx, x1855, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1856, x3, 66), x1857, 66),
            x1855,
            66
        ),
        276359,
        4,
    )?;
    let x1858: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x1851, x1857, 64), 64), x3, 64),
            x1820,
            64
        ),
        bigint_mul!(x1851, x1817, 64),
        64
    );
    let x1859: BytePoly_34 = bigint_nondet_quot!(ctx, x1858, x3, 34);
    let x1860: BytePoly_32 = bigint_nondet_rem!(ctx, x1858, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1859, x3, 66), x1860, 66),
            x1858,
            66
        ),
        276359,
        4,
    )?;
    let x1861: BytePoly_1 = bigint_nondet_rem!(ctx, x1822, x4, 1);
    let x1862: BytePoly_32 = bigint_nondet_quot!(ctx, x1822, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1862, x4, 33), x1861, 33),
            x1822,
            33
        ),
        260103,
        4,
    )?;
    let x1863: BytePoly_1 = bigint_sub!(x5, x1861, 1);
    eqz(ctx, &bigint_mul!(x1861, x1863, 2), 8131, 2)?;
    let x1864: BytePoly_32 = bigint_add!(bigint_sub!(x1860, x1846, 32), x3, 32);
    let x1865: BytePoly_32 = bigint_add!(bigint_sub!(x1857, x1844, 32), x3, 32);
    let x1866: BytePoly_32 = bigint_nondet_inv!(ctx, x1865, x3, 32);
    let x1867: BytePoly_64 = bigint_mul!(x1865, x1866, 64);
    let x1868: BytePoly_34 = bigint_nondet_quot!(ctx, x1867, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1867, bigint_mul!(x1868, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x1869: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1864, x1866, 64), x3, 32);
    let x1870: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x1869, x1865, 64), x1864, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x1871: BytePoly_34 = bigint_nondet_quot!(ctx, x1870, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x1870, bigint_mul!(x1871, x3, 66), 66),
        276359,
        4,
    )?;
    let x1872: BytePoly_64 = bigint_mul!(x1869, x1869, 64);
    let x1873: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x1872, x1844, 64), x3, 64),
            x1857,
            64
        ),
        x3,
        64
    );
    let x1874: BytePoly_34 = bigint_nondet_quot!(ctx, x1873, x3, 34);
    let x1875: BytePoly_32 = bigint_nondet_rem!(ctx, x1873, x3, 32);
    let x1876: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x1869, x1875, 64),
                        bigint_add!(
                            bigint_sub!(x1846, bigint_mul!(x1869, x1844, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x1877: BytePoly_34 = bigint_nondet_quot!(ctx, x1876, x3, 34);
    let x1878: BytePoly_32 = bigint_nondet_rem!(ctx, x1876, x3, 32);
    let x1879: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1872, bigint_mul!(x1874, x3, 66), 66),
                        x1844,
                        66
                    ),
                    x1857,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x1875,
        66
    );
    eqz(ctx, &x1879, 276359, 4)?;
    let x1880: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x1877, x3, 66), x1878, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1869, bigint_sub!(x1844, x1875, 32), 64),
                        x1846,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x1880, 276359, 4)?;
    let x1881: BytePoly_33 = bigint_add!(
        bigint_mul!(x1875, x1861, 33),
        bigint_mul!(x1844, x1863, 33),
        33
    );
    let x1882: BytePoly_33 = bigint_add!(
        bigint_mul!(x1878, x1861, 33),
        bigint_mul!(x1846, x1863, 33),
        33
    );
    let x1883: BytePoly_3 = bigint_nondet_quot!(ctx, x1881, x3, 3);
    let x1884: BytePoly_32 = bigint_nondet_rem!(ctx, x1881, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1883, x3, 35), x1884, 35),
            x1881,
            35
        ),
        260103,
        4,
    )?;
    let x1885: BytePoly_3 = bigint_nondet_quot!(ctx, x1882, x3, 3);
    let x1886: BytePoly_32 = bigint_nondet_rem!(ctx, x1882, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1885, x3, 35), x1886, 35),
            x1882,
            35
        ),
        260103,
        4,
    )?;
    let x1887: BytePoly_64 = bigint_mul!(x1857, x1857, 64);
    let x1888: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x1887, x1887, 64), x1887, 64),
        x2,
        64
    );
    let x1889: BytePoly_64 = bigint_add!(x48, x1888, 64);
    let x1890: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x1860, x1860, 32), x3, 32);
    let x1891: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1888, x1890, 96), x3, 32);
    let x1892: BytePoly_64 = bigint_mul!(x1860, x1891, 64);
    let x1893: BytePoly_64 = bigint_add!(x1892, x1892, 64);
    let x1894: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x1889, x1893, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1894, x3, 66), x1893, 66),
            x1889,
            66
        ),
        276359,
        4,
    )?;
    let x1895: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1891, x1891, 64), x3, 64), x3, 64),
            x1857,
            64
        ),
        x1857,
        64
    );
    let x1896: BytePoly_34 = bigint_nondet_quot!(ctx, x1895, x3, 34);
    let x1897: BytePoly_32 = bigint_nondet_rem!(ctx, x1895, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1896, x3, 66), x1897, 66),
            x1895,
            66
        ),
        276359,
        4,
    )?;
    let x1898: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x1891, x1897, 64), 64), x3, 64),
            x1860,
            64
        ),
        bigint_mul!(x1891, x1857, 64),
        64
    );
    let x1899: BytePoly_34 = bigint_nondet_quot!(ctx, x1898, x3, 34);
    let x1900: BytePoly_32 = bigint_nondet_rem!(ctx, x1898, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1899, x3, 66), x1900, 66),
            x1898,
            66
        ),
        276359,
        4,
    )?;
    let x1901: BytePoly_1 = bigint_nondet_rem!(ctx, x1862, x4, 1);
    let x1902: BytePoly_32 = bigint_nondet_quot!(ctx, x1862, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1902, x4, 33), x1901, 33),
            x1862,
            33
        ),
        260103,
        4,
    )?;
    let x1903: BytePoly_1 = bigint_sub!(x5, x1901, 1);
    eqz(ctx, &bigint_mul!(x1901, x1903, 2), 8131, 2)?;
    let x1904: BytePoly_32 = bigint_add!(bigint_sub!(x1900, x1886, 32), x3, 32);
    let x1905: BytePoly_32 = bigint_add!(bigint_sub!(x1897, x1884, 32), x3, 32);
    let x1906: BytePoly_32 = bigint_nondet_inv!(ctx, x1905, x3, 32);
    let x1907: BytePoly_64 = bigint_mul!(x1905, x1906, 64);
    let x1908: BytePoly_34 = bigint_nondet_quot!(ctx, x1907, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1907, bigint_mul!(x1908, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x1909: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1904, x1906, 64), x3, 32);
    let x1910: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x1909, x1905, 64), x1904, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x1911: BytePoly_34 = bigint_nondet_quot!(ctx, x1910, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x1910, bigint_mul!(x1911, x3, 66), 66),
        276359,
        4,
    )?;
    let x1912: BytePoly_64 = bigint_mul!(x1909, x1909, 64);
    let x1913: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x1912, x1884, 64), x3, 64),
            x1897,
            64
        ),
        x3,
        64
    );
    let x1914: BytePoly_34 = bigint_nondet_quot!(ctx, x1913, x3, 34);
    let x1915: BytePoly_32 = bigint_nondet_rem!(ctx, x1913, x3, 32);
    let x1916: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x1909, x1915, 64),
                        bigint_add!(
                            bigint_sub!(x1886, bigint_mul!(x1909, x1884, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x1917: BytePoly_34 = bigint_nondet_quot!(ctx, x1916, x3, 34);
    let x1918: BytePoly_32 = bigint_nondet_rem!(ctx, x1916, x3, 32);
    let x1919: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1912, bigint_mul!(x1914, x3, 66), 66),
                        x1884,
                        66
                    ),
                    x1897,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x1915,
        66
    );
    eqz(ctx, &x1919, 276359, 4)?;
    let x1920: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x1917, x3, 66), x1918, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1909, bigint_sub!(x1884, x1915, 32), 64),
                        x1886,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x1920, 276359, 4)?;
    let x1921: BytePoly_33 = bigint_add!(
        bigint_mul!(x1915, x1901, 33),
        bigint_mul!(x1884, x1903, 33),
        33
    );
    let x1922: BytePoly_33 = bigint_add!(
        bigint_mul!(x1918, x1901, 33),
        bigint_mul!(x1886, x1903, 33),
        33
    );
    let x1923: BytePoly_3 = bigint_nondet_quot!(ctx, x1921, x3, 3);
    let x1924: BytePoly_32 = bigint_nondet_rem!(ctx, x1921, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1923, x3, 35), x1924, 35),
            x1921,
            35
        ),
        260103,
        4,
    )?;
    let x1925: BytePoly_3 = bigint_nondet_quot!(ctx, x1922, x3, 3);
    let x1926: BytePoly_32 = bigint_nondet_rem!(ctx, x1922, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1925, x3, 35), x1926, 35),
            x1922,
            35
        ),
        260103,
        4,
    )?;
    let x1927: BytePoly_64 = bigint_mul!(x1897, x1897, 64);
    let x1928: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x1927, x1927, 64), x1927, 64),
        x2,
        64
    );
    let x1929: BytePoly_64 = bigint_add!(x48, x1928, 64);
    let x1930: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x1900, x1900, 32), x3, 32);
    let x1931: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1928, x1930, 96), x3, 32);
    let x1932: BytePoly_64 = bigint_mul!(x1900, x1931, 64);
    let x1933: BytePoly_64 = bigint_add!(x1932, x1932, 64);
    let x1934: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x1929, x1933, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1934, x3, 66), x1933, 66),
            x1929,
            66
        ),
        276359,
        4,
    )?;
    let x1935: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1931, x1931, 64), x3, 64), x3, 64),
            x1897,
            64
        ),
        x1897,
        64
    );
    let x1936: BytePoly_34 = bigint_nondet_quot!(ctx, x1935, x3, 34);
    let x1937: BytePoly_32 = bigint_nondet_rem!(ctx, x1935, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1936, x3, 66), x1937, 66),
            x1935,
            66
        ),
        276359,
        4,
    )?;
    let x1938: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x1931, x1937, 64), 64), x3, 64),
            x1900,
            64
        ),
        bigint_mul!(x1931, x1897, 64),
        64
    );
    let x1939: BytePoly_34 = bigint_nondet_quot!(ctx, x1938, x3, 34);
    let x1940: BytePoly_32 = bigint_nondet_rem!(ctx, x1938, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1939, x3, 66), x1940, 66),
            x1938,
            66
        ),
        276359,
        4,
    )?;
    let x1941: BytePoly_1 = bigint_nondet_rem!(ctx, x1902, x4, 1);
    let x1942: BytePoly_32 = bigint_nondet_quot!(ctx, x1902, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1942, x4, 33), x1941, 33),
            x1902,
            33
        ),
        260103,
        4,
    )?;
    let x1943: BytePoly_1 = bigint_sub!(x5, x1941, 1);
    eqz(ctx, &bigint_mul!(x1941, x1943, 2), 8131, 2)?;
    let x1944: BytePoly_32 = bigint_add!(bigint_sub!(x1940, x1926, 32), x3, 32);
    let x1945: BytePoly_32 = bigint_add!(bigint_sub!(x1937, x1924, 32), x3, 32);
    let x1946: BytePoly_32 = bigint_nondet_inv!(ctx, x1945, x3, 32);
    let x1947: BytePoly_64 = bigint_mul!(x1945, x1946, 64);
    let x1948: BytePoly_34 = bigint_nondet_quot!(ctx, x1947, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1947, bigint_mul!(x1948, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x1949: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1944, x1946, 64), x3, 32);
    let x1950: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x1949, x1945, 64), x1944, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x1951: BytePoly_34 = bigint_nondet_quot!(ctx, x1950, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x1950, bigint_mul!(x1951, x3, 66), 66),
        276359,
        4,
    )?;
    let x1952: BytePoly_64 = bigint_mul!(x1949, x1949, 64);
    let x1953: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x1952, x1924, 64), x3, 64),
            x1937,
            64
        ),
        x3,
        64
    );
    let x1954: BytePoly_34 = bigint_nondet_quot!(ctx, x1953, x3, 34);
    let x1955: BytePoly_32 = bigint_nondet_rem!(ctx, x1953, x3, 32);
    let x1956: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x1949, x1955, 64),
                        bigint_add!(
                            bigint_sub!(x1926, bigint_mul!(x1949, x1924, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x1957: BytePoly_34 = bigint_nondet_quot!(ctx, x1956, x3, 34);
    let x1958: BytePoly_32 = bigint_nondet_rem!(ctx, x1956, x3, 32);
    let x1959: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1952, bigint_mul!(x1954, x3, 66), 66),
                        x1924,
                        66
                    ),
                    x1937,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x1955,
        66
    );
    eqz(ctx, &x1959, 276359, 4)?;
    let x1960: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x1957, x3, 66), x1958, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1949, bigint_sub!(x1924, x1955, 32), 64),
                        x1926,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x1960, 276359, 4)?;
    let x1961: BytePoly_33 = bigint_add!(
        bigint_mul!(x1955, x1941, 33),
        bigint_mul!(x1924, x1943, 33),
        33
    );
    let x1962: BytePoly_33 = bigint_add!(
        bigint_mul!(x1958, x1941, 33),
        bigint_mul!(x1926, x1943, 33),
        33
    );
    let x1963: BytePoly_3 = bigint_nondet_quot!(ctx, x1961, x3, 3);
    let x1964: BytePoly_32 = bigint_nondet_rem!(ctx, x1961, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1963, x3, 35), x1964, 35),
            x1961,
            35
        ),
        260103,
        4,
    )?;
    let x1965: BytePoly_3 = bigint_nondet_quot!(ctx, x1962, x3, 3);
    let x1966: BytePoly_32 = bigint_nondet_rem!(ctx, x1962, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1965, x3, 35), x1966, 35),
            x1962,
            35
        ),
        260103,
        4,
    )?;
    let x1967: BytePoly_64 = bigint_mul!(x1937, x1937, 64);
    let x1968: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x1967, x1967, 64), x1967, 64),
        x2,
        64
    );
    let x1969: BytePoly_64 = bigint_add!(x48, x1968, 64);
    let x1970: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x1940, x1940, 32), x3, 32);
    let x1971: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1968, x1970, 96), x3, 32);
    let x1972: BytePoly_64 = bigint_mul!(x1940, x1971, 64);
    let x1973: BytePoly_64 = bigint_add!(x1972, x1972, 64);
    let x1974: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x1969, x1973, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1974, x3, 66), x1973, 66),
            x1969,
            66
        ),
        276359,
        4,
    )?;
    let x1975: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1971, x1971, 64), x3, 64), x3, 64),
            x1937,
            64
        ),
        x1937,
        64
    );
    let x1976: BytePoly_34 = bigint_nondet_quot!(ctx, x1975, x3, 34);
    let x1977: BytePoly_32 = bigint_nondet_rem!(ctx, x1975, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1976, x3, 66), x1977, 66),
            x1975,
            66
        ),
        276359,
        4,
    )?;
    let x1978: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x1971, x1977, 64), 64), x3, 64),
            x1940,
            64
        ),
        bigint_mul!(x1971, x1937, 64),
        64
    );
    let x1979: BytePoly_34 = bigint_nondet_quot!(ctx, x1978, x3, 34);
    let x1980: BytePoly_32 = bigint_nondet_rem!(ctx, x1978, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1979, x3, 66), x1980, 66),
            x1978,
            66
        ),
        276359,
        4,
    )?;
    let x1981: BytePoly_1 = bigint_nondet_rem!(ctx, x1942, x4, 1);
    let x1982: BytePoly_32 = bigint_nondet_quot!(ctx, x1942, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1982, x4, 33), x1981, 33),
            x1942,
            33
        ),
        260103,
        4,
    )?;
    let x1983: BytePoly_1 = bigint_sub!(x5, x1981, 1);
    eqz(ctx, &bigint_mul!(x1981, x1983, 2), 8131, 2)?;
    let x1984: BytePoly_32 = bigint_add!(bigint_sub!(x1980, x1966, 32), x3, 32);
    let x1985: BytePoly_32 = bigint_add!(bigint_sub!(x1977, x1964, 32), x3, 32);
    let x1986: BytePoly_32 = bigint_nondet_inv!(ctx, x1985, x3, 32);
    let x1987: BytePoly_64 = bigint_mul!(x1985, x1986, 64);
    let x1988: BytePoly_34 = bigint_nondet_quot!(ctx, x1987, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1987, bigint_mul!(x1988, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x1989: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1984, x1986, 64), x3, 32);
    let x1990: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x1989, x1985, 64), x1984, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x1991: BytePoly_34 = bigint_nondet_quot!(ctx, x1990, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x1990, bigint_mul!(x1991, x3, 66), 66),
        276359,
        4,
    )?;
    let x1992: BytePoly_64 = bigint_mul!(x1989, x1989, 64);
    let x1993: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x1992, x1964, 64), x3, 64),
            x1977,
            64
        ),
        x3,
        64
    );
    let x1994: BytePoly_34 = bigint_nondet_quot!(ctx, x1993, x3, 34);
    let x1995: BytePoly_32 = bigint_nondet_rem!(ctx, x1993, x3, 32);
    let x1996: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x1989, x1995, 64),
                        bigint_add!(
                            bigint_sub!(x1966, bigint_mul!(x1989, x1964, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x1997: BytePoly_34 = bigint_nondet_quot!(ctx, x1996, x3, 34);
    let x1998: BytePoly_32 = bigint_nondet_rem!(ctx, x1996, x3, 32);
    let x1999: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1992, bigint_mul!(x1994, x3, 66), 66),
                        x1964,
                        66
                    ),
                    x1977,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x1995,
        66
    );
    eqz(ctx, &x1999, 276359, 4)?;
    let x2000: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x1997, x3, 66), x1998, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1989, bigint_sub!(x1964, x1995, 32), 64),
                        x1966,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x2000, 276359, 4)?;
    let x2001: BytePoly_33 = bigint_add!(
        bigint_mul!(x1995, x1981, 33),
        bigint_mul!(x1964, x1983, 33),
        33
    );
    let x2002: BytePoly_33 = bigint_add!(
        bigint_mul!(x1998, x1981, 33),
        bigint_mul!(x1966, x1983, 33),
        33
    );
    let x2003: BytePoly_3 = bigint_nondet_quot!(ctx, x2001, x3, 3);
    let x2004: BytePoly_32 = bigint_nondet_rem!(ctx, x2001, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2003, x3, 35), x2004, 35),
            x2001,
            35
        ),
        260103,
        4,
    )?;
    let x2005: BytePoly_3 = bigint_nondet_quot!(ctx, x2002, x3, 3);
    let x2006: BytePoly_32 = bigint_nondet_rem!(ctx, x2002, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2005, x3, 35), x2006, 35),
            x2002,
            35
        ),
        260103,
        4,
    )?;
    let x2007: BytePoly_64 = bigint_mul!(x1977, x1977, 64);
    let x2008: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x2007, x2007, 64), x2007, 64),
        x2,
        64
    );
    let x2009: BytePoly_64 = bigint_add!(x48, x2008, 64);
    let x2010: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x1980, x1980, 32), x3, 32);
    let x2011: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2008, x2010, 96), x3, 32);
    let x2012: BytePoly_64 = bigint_mul!(x1980, x2011, 64);
    let x2013: BytePoly_64 = bigint_add!(x2012, x2012, 64);
    let x2014: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x2009, x2013, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2014, x3, 66), x2013, 66),
            x2009,
            66
        ),
        276359,
        4,
    )?;
    let x2015: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2011, x2011, 64), x3, 64), x3, 64),
            x1977,
            64
        ),
        x1977,
        64
    );
    let x2016: BytePoly_34 = bigint_nondet_quot!(ctx, x2015, x3, 34);
    let x2017: BytePoly_32 = bigint_nondet_rem!(ctx, x2015, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2016, x3, 66), x2017, 66),
            x2015,
            66
        ),
        276359,
        4,
    )?;
    let x2018: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x2011, x2017, 64), 64), x3, 64),
            x1980,
            64
        ),
        bigint_mul!(x2011, x1977, 64),
        64
    );
    let x2019: BytePoly_34 = bigint_nondet_quot!(ctx, x2018, x3, 34);
    let x2020: BytePoly_32 = bigint_nondet_rem!(ctx, x2018, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2019, x3, 66), x2020, 66),
            x2018,
            66
        ),
        276359,
        4,
    )?;
    let x2021: BytePoly_1 = bigint_nondet_rem!(ctx, x1982, x4, 1);
    let x2022: BytePoly_32 = bigint_nondet_quot!(ctx, x1982, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2022, x4, 33), x2021, 33),
            x1982,
            33
        ),
        260103,
        4,
    )?;
    let x2023: BytePoly_1 = bigint_sub!(x5, x2021, 1);
    eqz(ctx, &bigint_mul!(x2021, x2023, 2), 8131, 2)?;
    let x2024: BytePoly_32 = bigint_add!(bigint_sub!(x2020, x2006, 32), x3, 32);
    let x2025: BytePoly_32 = bigint_add!(bigint_sub!(x2017, x2004, 32), x3, 32);
    let x2026: BytePoly_32 = bigint_nondet_inv!(ctx, x2025, x3, 32);
    let x2027: BytePoly_64 = bigint_mul!(x2025, x2026, 64);
    let x2028: BytePoly_34 = bigint_nondet_quot!(ctx, x2027, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x2027, bigint_mul!(x2028, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x2029: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2024, x2026, 64), x3, 32);
    let x2030: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x2029, x2025, 64), x2024, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x2031: BytePoly_34 = bigint_nondet_quot!(ctx, x2030, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x2030, bigint_mul!(x2031, x3, 66), 66),
        276359,
        4,
    )?;
    let x2032: BytePoly_64 = bigint_mul!(x2029, x2029, 64);
    let x2033: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x2032, x2004, 64), x3, 64),
            x2017,
            64
        ),
        x3,
        64
    );
    let x2034: BytePoly_34 = bigint_nondet_quot!(ctx, x2033, x3, 34);
    let x2035: BytePoly_32 = bigint_nondet_rem!(ctx, x2033, x3, 32);
    let x2036: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x2029, x2035, 64),
                        bigint_add!(
                            bigint_sub!(x2006, bigint_mul!(x2029, x2004, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x2037: BytePoly_34 = bigint_nondet_quot!(ctx, x2036, x3, 34);
    let x2038: BytePoly_32 = bigint_nondet_rem!(ctx, x2036, x3, 32);
    let x2039: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2032, bigint_mul!(x2034, x3, 66), 66),
                        x2004,
                        66
                    ),
                    x2017,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x2035,
        66
    );
    eqz(ctx, &x2039, 276359, 4)?;
    let x2040: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x2037, x3, 66), x2038, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2029, bigint_sub!(x2004, x2035, 32), 64),
                        x2006,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x2040, 276359, 4)?;
    let x2041: BytePoly_33 = bigint_add!(
        bigint_mul!(x2035, x2021, 33),
        bigint_mul!(x2004, x2023, 33),
        33
    );
    let x2042: BytePoly_33 = bigint_add!(
        bigint_mul!(x2038, x2021, 33),
        bigint_mul!(x2006, x2023, 33),
        33
    );
    let x2043: BytePoly_3 = bigint_nondet_quot!(ctx, x2041, x3, 3);
    let x2044: BytePoly_32 = bigint_nondet_rem!(ctx, x2041, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2043, x3, 35), x2044, 35),
            x2041,
            35
        ),
        260103,
        4,
    )?;
    let x2045: BytePoly_3 = bigint_nondet_quot!(ctx, x2042, x3, 3);
    let x2046: BytePoly_32 = bigint_nondet_rem!(ctx, x2042, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2045, x3, 35), x2046, 35),
            x2042,
            35
        ),
        260103,
        4,
    )?;
    let x2047: BytePoly_64 = bigint_mul!(x2017, x2017, 64);
    let x2048: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x2047, x2047, 64), x2047, 64),
        x2,
        64
    );
    let x2049: BytePoly_64 = bigint_add!(x48, x2048, 64);
    let x2050: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x2020, x2020, 32), x3, 32);
    let x2051: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2048, x2050, 96), x3, 32);
    let x2052: BytePoly_64 = bigint_mul!(x2020, x2051, 64);
    let x2053: BytePoly_64 = bigint_add!(x2052, x2052, 64);
    let x2054: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x2049, x2053, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2054, x3, 66), x2053, 66),
            x2049,
            66
        ),
        276359,
        4,
    )?;
    let x2055: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2051, x2051, 64), x3, 64), x3, 64),
            x2017,
            64
        ),
        x2017,
        64
    );
    let x2056: BytePoly_34 = bigint_nondet_quot!(ctx, x2055, x3, 34);
    let x2057: BytePoly_32 = bigint_nondet_rem!(ctx, x2055, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2056, x3, 66), x2057, 66),
            x2055,
            66
        ),
        276359,
        4,
    )?;
    let x2058: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x2051, x2057, 64), 64), x3, 64),
            x2020,
            64
        ),
        bigint_mul!(x2051, x2017, 64),
        64
    );
    let x2059: BytePoly_34 = bigint_nondet_quot!(ctx, x2058, x3, 34);
    let x2060: BytePoly_32 = bigint_nondet_rem!(ctx, x2058, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2059, x3, 66), x2060, 66),
            x2058,
            66
        ),
        276359,
        4,
    )?;
    let x2061: BytePoly_1 = bigint_nondet_rem!(ctx, x2022, x4, 1);
    let x2062: BytePoly_32 = bigint_nondet_quot!(ctx, x2022, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2062, x4, 33), x2061, 33),
            x2022,
            33
        ),
        260103,
        4,
    )?;
    let x2063: BytePoly_1 = bigint_sub!(x5, x2061, 1);
    eqz(ctx, &bigint_mul!(x2061, x2063, 2), 8131, 2)?;
    let x2064: BytePoly_32 = bigint_add!(bigint_sub!(x2060, x2046, 32), x3, 32);
    let x2065: BytePoly_32 = bigint_add!(bigint_sub!(x2057, x2044, 32), x3, 32);
    let x2066: BytePoly_32 = bigint_nondet_inv!(ctx, x2065, x3, 32);
    let x2067: BytePoly_64 = bigint_mul!(x2065, x2066, 64);
    let x2068: BytePoly_34 = bigint_nondet_quot!(ctx, x2067, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x2067, bigint_mul!(x2068, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x2069: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2064, x2066, 64), x3, 32);
    let x2070: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x2069, x2065, 64), x2064, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x2071: BytePoly_34 = bigint_nondet_quot!(ctx, x2070, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x2070, bigint_mul!(x2071, x3, 66), 66),
        276359,
        4,
    )?;
    let x2072: BytePoly_64 = bigint_mul!(x2069, x2069, 64);
    let x2073: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x2072, x2044, 64), x3, 64),
            x2057,
            64
        ),
        x3,
        64
    );
    let x2074: BytePoly_34 = bigint_nondet_quot!(ctx, x2073, x3, 34);
    let x2075: BytePoly_32 = bigint_nondet_rem!(ctx, x2073, x3, 32);
    let x2076: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x2069, x2075, 64),
                        bigint_add!(
                            bigint_sub!(x2046, bigint_mul!(x2069, x2044, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x2077: BytePoly_34 = bigint_nondet_quot!(ctx, x2076, x3, 34);
    let x2078: BytePoly_32 = bigint_nondet_rem!(ctx, x2076, x3, 32);
    let x2079: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2072, bigint_mul!(x2074, x3, 66), 66),
                        x2044,
                        66
                    ),
                    x2057,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x2075,
        66
    );
    eqz(ctx, &x2079, 276359, 4)?;
    let x2080: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x2077, x3, 66), x2078, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2069, bigint_sub!(x2044, x2075, 32), 64),
                        x2046,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x2080, 276359, 4)?;
    let x2081: BytePoly_33 = bigint_add!(
        bigint_mul!(x2075, x2061, 33),
        bigint_mul!(x2044, x2063, 33),
        33
    );
    let x2082: BytePoly_33 = bigint_add!(
        bigint_mul!(x2078, x2061, 33),
        bigint_mul!(x2046, x2063, 33),
        33
    );
    let x2083: BytePoly_3 = bigint_nondet_quot!(ctx, x2081, x3, 3);
    let x2084: BytePoly_32 = bigint_nondet_rem!(ctx, x2081, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2083, x3, 35), x2084, 35),
            x2081,
            35
        ),
        260103,
        4,
    )?;
    let x2085: BytePoly_3 = bigint_nondet_quot!(ctx, x2082, x3, 3);
    let x2086: BytePoly_32 = bigint_nondet_rem!(ctx, x2082, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2085, x3, 35), x2086, 35),
            x2082,
            35
        ),
        260103,
        4,
    )?;
    let x2087: BytePoly_64 = bigint_mul!(x2057, x2057, 64);
    let x2088: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x2087, x2087, 64), x2087, 64),
        x2,
        64
    );
    let x2089: BytePoly_64 = bigint_add!(x48, x2088, 64);
    let x2090: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x2060, x2060, 32), x3, 32);
    let x2091: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2088, x2090, 96), x3, 32);
    let x2092: BytePoly_64 = bigint_mul!(x2060, x2091, 64);
    let x2093: BytePoly_64 = bigint_add!(x2092, x2092, 64);
    let x2094: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x2089, x2093, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2094, x3, 66), x2093, 66),
            x2089,
            66
        ),
        276359,
        4,
    )?;
    let x2095: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2091, x2091, 64), x3, 64), x3, 64),
            x2057,
            64
        ),
        x2057,
        64
    );
    let x2096: BytePoly_34 = bigint_nondet_quot!(ctx, x2095, x3, 34);
    let x2097: BytePoly_32 = bigint_nondet_rem!(ctx, x2095, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2096, x3, 66), x2097, 66),
            x2095,
            66
        ),
        276359,
        4,
    )?;
    let x2098: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x2091, x2097, 64), 64), x3, 64),
            x2060,
            64
        ),
        bigint_mul!(x2091, x2057, 64),
        64
    );
    let x2099: BytePoly_34 = bigint_nondet_quot!(ctx, x2098, x3, 34);
    let x2100: BytePoly_32 = bigint_nondet_rem!(ctx, x2098, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2099, x3, 66), x2100, 66),
            x2098,
            66
        ),
        276359,
        4,
    )?;
    let x2101: BytePoly_1 = bigint_nondet_rem!(ctx, x2062, x4, 1);
    let x2102: BytePoly_32 = bigint_nondet_quot!(ctx, x2062, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2102, x4, 33), x2101, 33),
            x2062,
            33
        ),
        260103,
        4,
    )?;
    let x2103: BytePoly_1 = bigint_sub!(x5, x2101, 1);
    eqz(ctx, &bigint_mul!(x2101, x2103, 2), 8131, 2)?;
    let x2104: BytePoly_32 = bigint_add!(bigint_sub!(x2100, x2086, 32), x3, 32);
    let x2105: BytePoly_32 = bigint_add!(bigint_sub!(x2097, x2084, 32), x3, 32);
    let x2106: BytePoly_32 = bigint_nondet_inv!(ctx, x2105, x3, 32);
    let x2107: BytePoly_64 = bigint_mul!(x2105, x2106, 64);
    let x2108: BytePoly_34 = bigint_nondet_quot!(ctx, x2107, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x2107, bigint_mul!(x2108, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x2109: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2104, x2106, 64), x3, 32);
    let x2110: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x2109, x2105, 64), x2104, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x2111: BytePoly_34 = bigint_nondet_quot!(ctx, x2110, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x2110, bigint_mul!(x2111, x3, 66), 66),
        276359,
        4,
    )?;
    let x2112: BytePoly_64 = bigint_mul!(x2109, x2109, 64);
    let x2113: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x2112, x2084, 64), x3, 64),
            x2097,
            64
        ),
        x3,
        64
    );
    let x2114: BytePoly_34 = bigint_nondet_quot!(ctx, x2113, x3, 34);
    let x2115: BytePoly_32 = bigint_nondet_rem!(ctx, x2113, x3, 32);
    let x2116: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x2109, x2115, 64),
                        bigint_add!(
                            bigint_sub!(x2086, bigint_mul!(x2109, x2084, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x2117: BytePoly_34 = bigint_nondet_quot!(ctx, x2116, x3, 34);
    let x2118: BytePoly_32 = bigint_nondet_rem!(ctx, x2116, x3, 32);
    let x2119: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2112, bigint_mul!(x2114, x3, 66), 66),
                        x2084,
                        66
                    ),
                    x2097,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x2115,
        66
    );
    eqz(ctx, &x2119, 276359, 4)?;
    let x2120: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x2117, x3, 66), x2118, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2109, bigint_sub!(x2084, x2115, 32), 64),
                        x2086,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x2120, 276359, 4)?;
    let x2121: BytePoly_33 = bigint_add!(
        bigint_mul!(x2115, x2101, 33),
        bigint_mul!(x2084, x2103, 33),
        33
    );
    let x2122: BytePoly_33 = bigint_add!(
        bigint_mul!(x2118, x2101, 33),
        bigint_mul!(x2086, x2103, 33),
        33
    );
    let x2123: BytePoly_3 = bigint_nondet_quot!(ctx, x2121, x3, 3);
    let x2124: BytePoly_32 = bigint_nondet_rem!(ctx, x2121, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2123, x3, 35), x2124, 35),
            x2121,
            35
        ),
        260103,
        4,
    )?;
    let x2125: BytePoly_3 = bigint_nondet_quot!(ctx, x2122, x3, 3);
    let x2126: BytePoly_32 = bigint_nondet_rem!(ctx, x2122, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2125, x3, 35), x2126, 35),
            x2122,
            35
        ),
        260103,
        4,
    )?;
    let x2127: BytePoly_64 = bigint_mul!(x2097, x2097, 64);
    let x2128: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x2127, x2127, 64), x2127, 64),
        x2,
        64
    );
    let x2129: BytePoly_64 = bigint_add!(x48, x2128, 64);
    let x2130: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x2100, x2100, 32), x3, 32);
    let x2131: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2128, x2130, 96), x3, 32);
    let x2132: BytePoly_64 = bigint_mul!(x2100, x2131, 64);
    let x2133: BytePoly_64 = bigint_add!(x2132, x2132, 64);
    let x2134: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x2129, x2133, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2134, x3, 66), x2133, 66),
            x2129,
            66
        ),
        276359,
        4,
    )?;
    let x2135: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2131, x2131, 64), x3, 64), x3, 64),
            x2097,
            64
        ),
        x2097,
        64
    );
    let x2136: BytePoly_34 = bigint_nondet_quot!(ctx, x2135, x3, 34);
    let x2137: BytePoly_32 = bigint_nondet_rem!(ctx, x2135, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2136, x3, 66), x2137, 66),
            x2135,
            66
        ),
        276359,
        4,
    )?;
    let x2138: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x2131, x2137, 64), 64), x3, 64),
            x2100,
            64
        ),
        bigint_mul!(x2131, x2097, 64),
        64
    );
    let x2139: BytePoly_34 = bigint_nondet_quot!(ctx, x2138, x3, 34);
    let x2140: BytePoly_32 = bigint_nondet_rem!(ctx, x2138, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2139, x3, 66), x2140, 66),
            x2138,
            66
        ),
        276359,
        4,
    )?;
    let x2141: BytePoly_1 = bigint_nondet_rem!(ctx, x2102, x4, 1);
    let x2142: BytePoly_32 = bigint_nondet_quot!(ctx, x2102, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2142, x4, 33), x2141, 33),
            x2102,
            33
        ),
        260103,
        4,
    )?;
    let x2143: BytePoly_1 = bigint_sub!(x5, x2141, 1);
    eqz(ctx, &bigint_mul!(x2141, x2143, 2), 8131, 2)?;
    let x2144: BytePoly_32 = bigint_add!(bigint_sub!(x2140, x2126, 32), x3, 32);
    let x2145: BytePoly_32 = bigint_add!(bigint_sub!(x2137, x2124, 32), x3, 32);
    let x2146: BytePoly_32 = bigint_nondet_inv!(ctx, x2145, x3, 32);
    let x2147: BytePoly_64 = bigint_mul!(x2145, x2146, 64);
    let x2148: BytePoly_34 = bigint_nondet_quot!(ctx, x2147, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x2147, bigint_mul!(x2148, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x2149: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2144, x2146, 64), x3, 32);
    let x2150: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x2149, x2145, 64), x2144, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x2151: BytePoly_34 = bigint_nondet_quot!(ctx, x2150, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x2150, bigint_mul!(x2151, x3, 66), 66),
        276359,
        4,
    )?;
    let x2152: BytePoly_64 = bigint_mul!(x2149, x2149, 64);
    let x2153: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x2152, x2124, 64), x3, 64),
            x2137,
            64
        ),
        x3,
        64
    );
    let x2154: BytePoly_34 = bigint_nondet_quot!(ctx, x2153, x3, 34);
    let x2155: BytePoly_32 = bigint_nondet_rem!(ctx, x2153, x3, 32);
    let x2156: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x2149, x2155, 64),
                        bigint_add!(
                            bigint_sub!(x2126, bigint_mul!(x2149, x2124, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x2157: BytePoly_34 = bigint_nondet_quot!(ctx, x2156, x3, 34);
    let x2158: BytePoly_32 = bigint_nondet_rem!(ctx, x2156, x3, 32);
    let x2159: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2152, bigint_mul!(x2154, x3, 66), 66),
                        x2124,
                        66
                    ),
                    x2137,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x2155,
        66
    );
    eqz(ctx, &x2159, 276359, 4)?;
    let x2160: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x2157, x3, 66), x2158, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2149, bigint_sub!(x2124, x2155, 32), 64),
                        x2126,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x2160, 276359, 4)?;
    let x2161: BytePoly_33 = bigint_add!(
        bigint_mul!(x2155, x2141, 33),
        bigint_mul!(x2124, x2143, 33),
        33
    );
    let x2162: BytePoly_33 = bigint_add!(
        bigint_mul!(x2158, x2141, 33),
        bigint_mul!(x2126, x2143, 33),
        33
    );
    let x2163: BytePoly_3 = bigint_nondet_quot!(ctx, x2161, x3, 3);
    let x2164: BytePoly_32 = bigint_nondet_rem!(ctx, x2161, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2163, x3, 35), x2164, 35),
            x2161,
            35
        ),
        260103,
        4,
    )?;
    let x2165: BytePoly_3 = bigint_nondet_quot!(ctx, x2162, x3, 3);
    let x2166: BytePoly_32 = bigint_nondet_rem!(ctx, x2162, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2165, x3, 35), x2166, 35),
            x2162,
            35
        ),
        260103,
        4,
    )?;
    let x2167: BytePoly_64 = bigint_mul!(x2137, x2137, 64);
    let x2168: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x2167, x2167, 64), x2167, 64),
        x2,
        64
    );
    let x2169: BytePoly_64 = bigint_add!(x48, x2168, 64);
    let x2170: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x2140, x2140, 32), x3, 32);
    let x2171: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2168, x2170, 96), x3, 32);
    let x2172: BytePoly_64 = bigint_mul!(x2140, x2171, 64);
    let x2173: BytePoly_64 = bigint_add!(x2172, x2172, 64);
    let x2174: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x2169, x2173, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2174, x3, 66), x2173, 66),
            x2169,
            66
        ),
        276359,
        4,
    )?;
    let x2175: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2171, x2171, 64), x3, 64), x3, 64),
            x2137,
            64
        ),
        x2137,
        64
    );
    let x2176: BytePoly_34 = bigint_nondet_quot!(ctx, x2175, x3, 34);
    let x2177: BytePoly_32 = bigint_nondet_rem!(ctx, x2175, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2176, x3, 66), x2177, 66),
            x2175,
            66
        ),
        276359,
        4,
    )?;
    let x2178: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x2171, x2177, 64), 64), x3, 64),
            x2140,
            64
        ),
        bigint_mul!(x2171, x2137, 64),
        64
    );
    let x2179: BytePoly_34 = bigint_nondet_quot!(ctx, x2178, x3, 34);
    let x2180: BytePoly_32 = bigint_nondet_rem!(ctx, x2178, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2179, x3, 66), x2180, 66),
            x2178,
            66
        ),
        276359,
        4,
    )?;
    let x2181: BytePoly_1 = bigint_nondet_rem!(ctx, x2142, x4, 1);
    let x2182: BytePoly_32 = bigint_nondet_quot!(ctx, x2142, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2182, x4, 33), x2181, 33),
            x2142,
            33
        ),
        260103,
        4,
    )?;
    let x2183: BytePoly_1 = bigint_sub!(x5, x2181, 1);
    eqz(ctx, &bigint_mul!(x2181, x2183, 2), 8131, 2)?;
    let x2184: BytePoly_32 = bigint_add!(bigint_sub!(x2180, x2166, 32), x3, 32);
    let x2185: BytePoly_32 = bigint_add!(bigint_sub!(x2177, x2164, 32), x3, 32);
    let x2186: BytePoly_32 = bigint_nondet_inv!(ctx, x2185, x3, 32);
    let x2187: BytePoly_64 = bigint_mul!(x2185, x2186, 64);
    let x2188: BytePoly_34 = bigint_nondet_quot!(ctx, x2187, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x2187, bigint_mul!(x2188, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x2189: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2184, x2186, 64), x3, 32);
    let x2190: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x2189, x2185, 64), x2184, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x2191: BytePoly_34 = bigint_nondet_quot!(ctx, x2190, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x2190, bigint_mul!(x2191, x3, 66), 66),
        276359,
        4,
    )?;
    let x2192: BytePoly_64 = bigint_mul!(x2189, x2189, 64);
    let x2193: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x2192, x2164, 64), x3, 64),
            x2177,
            64
        ),
        x3,
        64
    );
    let x2194: BytePoly_34 = bigint_nondet_quot!(ctx, x2193, x3, 34);
    let x2195: BytePoly_32 = bigint_nondet_rem!(ctx, x2193, x3, 32);
    let x2196: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x2189, x2195, 64),
                        bigint_add!(
                            bigint_sub!(x2166, bigint_mul!(x2189, x2164, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x2197: BytePoly_34 = bigint_nondet_quot!(ctx, x2196, x3, 34);
    let x2198: BytePoly_32 = bigint_nondet_rem!(ctx, x2196, x3, 32);
    let x2199: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2192, bigint_mul!(x2194, x3, 66), 66),
                        x2164,
                        66
                    ),
                    x2177,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x2195,
        66
    );
    eqz(ctx, &x2199, 276359, 4)?;
    let x2200: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x2197, x3, 66), x2198, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2189, bigint_sub!(x2164, x2195, 32), 64),
                        x2166,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x2200, 276359, 4)?;
    let x2201: BytePoly_33 = bigint_add!(
        bigint_mul!(x2195, x2181, 33),
        bigint_mul!(x2164, x2183, 33),
        33
    );
    let x2202: BytePoly_33 = bigint_add!(
        bigint_mul!(x2198, x2181, 33),
        bigint_mul!(x2166, x2183, 33),
        33
    );
    let x2203: BytePoly_3 = bigint_nondet_quot!(ctx, x2201, x3, 3);
    let x2204: BytePoly_32 = bigint_nondet_rem!(ctx, x2201, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2203, x3, 35), x2204, 35),
            x2201,
            35
        ),
        260103,
        4,
    )?;
    let x2205: BytePoly_3 = bigint_nondet_quot!(ctx, x2202, x3, 3);
    let x2206: BytePoly_32 = bigint_nondet_rem!(ctx, x2202, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2205, x3, 35), x2206, 35),
            x2202,
            35
        ),
        260103,
        4,
    )?;
    let x2207: BytePoly_64 = bigint_mul!(x2177, x2177, 64);
    let x2208: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x2207, x2207, 64), x2207, 64),
        x2,
        64
    );
    let x2209: BytePoly_64 = bigint_add!(x48, x2208, 64);
    let x2210: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x2180, x2180, 32), x3, 32);
    let x2211: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2208, x2210, 96), x3, 32);
    let x2212: BytePoly_64 = bigint_mul!(x2180, x2211, 64);
    let x2213: BytePoly_64 = bigint_add!(x2212, x2212, 64);
    let x2214: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x2209, x2213, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2214, x3, 66), x2213, 66),
            x2209,
            66
        ),
        276359,
        4,
    )?;
    let x2215: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2211, x2211, 64), x3, 64), x3, 64),
            x2177,
            64
        ),
        x2177,
        64
    );
    let x2216: BytePoly_34 = bigint_nondet_quot!(ctx, x2215, x3, 34);
    let x2217: BytePoly_32 = bigint_nondet_rem!(ctx, x2215, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2216, x3, 66), x2217, 66),
            x2215,
            66
        ),
        276359,
        4,
    )?;
    let x2218: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x2211, x2217, 64), 64), x3, 64),
            x2180,
            64
        ),
        bigint_mul!(x2211, x2177, 64),
        64
    );
    let x2219: BytePoly_34 = bigint_nondet_quot!(ctx, x2218, x3, 34);
    let x2220: BytePoly_32 = bigint_nondet_rem!(ctx, x2218, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2219, x3, 66), x2220, 66),
            x2218,
            66
        ),
        276359,
        4,
    )?;
    let x2221: BytePoly_1 = bigint_nondet_rem!(ctx, x2182, x4, 1);
    let x2222: BytePoly_32 = bigint_nondet_quot!(ctx, x2182, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2222, x4, 33), x2221, 33),
            x2182,
            33
        ),
        260103,
        4,
    )?;
    let x2223: BytePoly_1 = bigint_sub!(x5, x2221, 1);
    eqz(ctx, &bigint_mul!(x2221, x2223, 2), 8131, 2)?;
    let x2224: BytePoly_32 = bigint_add!(bigint_sub!(x2220, x2206, 32), x3, 32);
    let x2225: BytePoly_32 = bigint_add!(bigint_sub!(x2217, x2204, 32), x3, 32);
    let x2226: BytePoly_32 = bigint_nondet_inv!(ctx, x2225, x3, 32);
    let x2227: BytePoly_64 = bigint_mul!(x2225, x2226, 64);
    let x2228: BytePoly_34 = bigint_nondet_quot!(ctx, x2227, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x2227, bigint_mul!(x2228, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x2229: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2224, x2226, 64), x3, 32);
    let x2230: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x2229, x2225, 64), x2224, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x2231: BytePoly_34 = bigint_nondet_quot!(ctx, x2230, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x2230, bigint_mul!(x2231, x3, 66), 66),
        276359,
        4,
    )?;
    let x2232: BytePoly_64 = bigint_mul!(x2229, x2229, 64);
    let x2233: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x2232, x2204, 64), x3, 64),
            x2217,
            64
        ),
        x3,
        64
    );
    let x2234: BytePoly_34 = bigint_nondet_quot!(ctx, x2233, x3, 34);
    let x2235: BytePoly_32 = bigint_nondet_rem!(ctx, x2233, x3, 32);
    let x2236: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x2229, x2235, 64),
                        bigint_add!(
                            bigint_sub!(x2206, bigint_mul!(x2229, x2204, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x2237: BytePoly_34 = bigint_nondet_quot!(ctx, x2236, x3, 34);
    let x2238: BytePoly_32 = bigint_nondet_rem!(ctx, x2236, x3, 32);
    let x2239: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2232, bigint_mul!(x2234, x3, 66), 66),
                        x2204,
                        66
                    ),
                    x2217,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x2235,
        66
    );
    eqz(ctx, &x2239, 276359, 4)?;
    let x2240: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x2237, x3, 66), x2238, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2229, bigint_sub!(x2204, x2235, 32), 64),
                        x2206,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x2240, 276359, 4)?;
    let x2241: BytePoly_33 = bigint_add!(
        bigint_mul!(x2235, x2221, 33),
        bigint_mul!(x2204, x2223, 33),
        33
    );
    let x2242: BytePoly_33 = bigint_add!(
        bigint_mul!(x2238, x2221, 33),
        bigint_mul!(x2206, x2223, 33),
        33
    );
    let x2243: BytePoly_3 = bigint_nondet_quot!(ctx, x2241, x3, 3);
    let x2244: BytePoly_32 = bigint_nondet_rem!(ctx, x2241, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2243, x3, 35), x2244, 35),
            x2241,
            35
        ),
        260103,
        4,
    )?;
    let x2245: BytePoly_3 = bigint_nondet_quot!(ctx, x2242, x3, 3);
    let x2246: BytePoly_32 = bigint_nondet_rem!(ctx, x2242, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2245, x3, 35), x2246, 35),
            x2242,
            35
        ),
        260103,
        4,
    )?;
    let x2247: BytePoly_64 = bigint_mul!(x2217, x2217, 64);
    let x2248: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x2247, x2247, 64), x2247, 64),
        x2,
        64
    );
    let x2249: BytePoly_64 = bigint_add!(x48, x2248, 64);
    let x2250: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x2220, x2220, 32), x3, 32);
    let x2251: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2248, x2250, 96), x3, 32);
    let x2252: BytePoly_64 = bigint_mul!(x2220, x2251, 64);
    let x2253: BytePoly_64 = bigint_add!(x2252, x2252, 64);
    let x2254: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x2249, x2253, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2254, x3, 66), x2253, 66),
            x2249,
            66
        ),
        276359,
        4,
    )?;
    let x2255: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2251, x2251, 64), x3, 64), x3, 64),
            x2217,
            64
        ),
        x2217,
        64
    );
    let x2256: BytePoly_34 = bigint_nondet_quot!(ctx, x2255, x3, 34);
    let x2257: BytePoly_32 = bigint_nondet_rem!(ctx, x2255, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2256, x3, 66), x2257, 66),
            x2255,
            66
        ),
        276359,
        4,
    )?;
    let x2258: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x2251, x2257, 64), 64), x3, 64),
            x2220,
            64
        ),
        bigint_mul!(x2251, x2217, 64),
        64
    );
    let x2259: BytePoly_34 = bigint_nondet_quot!(ctx, x2258, x3, 34);
    let x2260: BytePoly_32 = bigint_nondet_rem!(ctx, x2258, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2259, x3, 66), x2260, 66),
            x2258,
            66
        ),
        276359,
        4,
    )?;
    let x2261: BytePoly_1 = bigint_nondet_rem!(ctx, x2222, x4, 1);
    let x2262: BytePoly_32 = bigint_nondet_quot!(ctx, x2222, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2262, x4, 33), x2261, 33),
            x2222,
            33
        ),
        260103,
        4,
    )?;
    let x2263: BytePoly_1 = bigint_sub!(x5, x2261, 1);
    eqz(ctx, &bigint_mul!(x2261, x2263, 2), 8131, 2)?;
    let x2264: BytePoly_32 = bigint_add!(bigint_sub!(x2260, x2246, 32), x3, 32);
    let x2265: BytePoly_32 = bigint_add!(bigint_sub!(x2257, x2244, 32), x3, 32);
    let x2266: BytePoly_32 = bigint_nondet_inv!(ctx, x2265, x3, 32);
    let x2267: BytePoly_64 = bigint_mul!(x2265, x2266, 64);
    let x2268: BytePoly_34 = bigint_nondet_quot!(ctx, x2267, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x2267, bigint_mul!(x2268, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x2269: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2264, x2266, 64), x3, 32);
    let x2270: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x2269, x2265, 64), x2264, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x2271: BytePoly_34 = bigint_nondet_quot!(ctx, x2270, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x2270, bigint_mul!(x2271, x3, 66), 66),
        276359,
        4,
    )?;
    let x2272: BytePoly_64 = bigint_mul!(x2269, x2269, 64);
    let x2273: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x2272, x2244, 64), x3, 64),
            x2257,
            64
        ),
        x3,
        64
    );
    let x2274: BytePoly_34 = bigint_nondet_quot!(ctx, x2273, x3, 34);
    let x2275: BytePoly_32 = bigint_nondet_rem!(ctx, x2273, x3, 32);
    let x2276: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x2269, x2275, 64),
                        bigint_add!(
                            bigint_sub!(x2246, bigint_mul!(x2269, x2244, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x2277: BytePoly_34 = bigint_nondet_quot!(ctx, x2276, x3, 34);
    let x2278: BytePoly_32 = bigint_nondet_rem!(ctx, x2276, x3, 32);
    let x2279: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2272, bigint_mul!(x2274, x3, 66), 66),
                        x2244,
                        66
                    ),
                    x2257,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x2275,
        66
    );
    eqz(ctx, &x2279, 276359, 4)?;
    let x2280: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x2277, x3, 66), x2278, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2269, bigint_sub!(x2244, x2275, 32), 64),
                        x2246,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x2280, 276359, 4)?;
    let x2281: BytePoly_33 = bigint_add!(
        bigint_mul!(x2275, x2261, 33),
        bigint_mul!(x2244, x2263, 33),
        33
    );
    let x2282: BytePoly_33 = bigint_add!(
        bigint_mul!(x2278, x2261, 33),
        bigint_mul!(x2246, x2263, 33),
        33
    );
    let x2283: BytePoly_3 = bigint_nondet_quot!(ctx, x2281, x3, 3);
    let x2284: BytePoly_32 = bigint_nondet_rem!(ctx, x2281, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2283, x3, 35), x2284, 35),
            x2281,
            35
        ),
        260103,
        4,
    )?;
    let x2285: BytePoly_3 = bigint_nondet_quot!(ctx, x2282, x3, 3);
    let x2286: BytePoly_32 = bigint_nondet_rem!(ctx, x2282, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2285, x3, 35), x2286, 35),
            x2282,
            35
        ),
        260103,
        4,
    )?;
    let x2287: BytePoly_64 = bigint_mul!(x2257, x2257, 64);
    let x2288: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x2287, x2287, 64), x2287, 64),
        x2,
        64
    );
    let x2289: BytePoly_64 = bigint_add!(x48, x2288, 64);
    let x2290: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x2260, x2260, 32), x3, 32);
    let x2291: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2288, x2290, 96), x3, 32);
    let x2292: BytePoly_64 = bigint_mul!(x2260, x2291, 64);
    let x2293: BytePoly_64 = bigint_add!(x2292, x2292, 64);
    let x2294: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x2289, x2293, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2294, x3, 66), x2293, 66),
            x2289,
            66
        ),
        276359,
        4,
    )?;
    let x2295: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2291, x2291, 64), x3, 64), x3, 64),
            x2257,
            64
        ),
        x2257,
        64
    );
    let x2296: BytePoly_34 = bigint_nondet_quot!(ctx, x2295, x3, 34);
    let x2297: BytePoly_32 = bigint_nondet_rem!(ctx, x2295, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2296, x3, 66), x2297, 66),
            x2295,
            66
        ),
        276359,
        4,
    )?;
    let x2298: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x2291, x2297, 64), 64), x3, 64),
            x2260,
            64
        ),
        bigint_mul!(x2291, x2257, 64),
        64
    );
    let x2299: BytePoly_34 = bigint_nondet_quot!(ctx, x2298, x3, 34);
    let x2300: BytePoly_32 = bigint_nondet_rem!(ctx, x2298, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2299, x3, 66), x2300, 66),
            x2298,
            66
        ),
        276359,
        4,
    )?;
    let x2301: BytePoly_1 = bigint_nondet_rem!(ctx, x2262, x4, 1);
    let x2302: BytePoly_32 = bigint_nondet_quot!(ctx, x2262, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2302, x4, 33), x2301, 33),
            x2262,
            33
        ),
        260103,
        4,
    )?;
    let x2303: BytePoly_1 = bigint_sub!(x5, x2301, 1);
    eqz(ctx, &bigint_mul!(x2301, x2303, 2), 8131, 2)?;
    let x2304: BytePoly_32 = bigint_add!(bigint_sub!(x2300, x2286, 32), x3, 32);
    let x2305: BytePoly_32 = bigint_add!(bigint_sub!(x2297, x2284, 32), x3, 32);
    let x2306: BytePoly_32 = bigint_nondet_inv!(ctx, x2305, x3, 32);
    let x2307: BytePoly_64 = bigint_mul!(x2305, x2306, 64);
    let x2308: BytePoly_34 = bigint_nondet_quot!(ctx, x2307, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x2307, bigint_mul!(x2308, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x2309: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2304, x2306, 64), x3, 32);
    let x2310: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x2309, x2305, 64), x2304, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x2311: BytePoly_34 = bigint_nondet_quot!(ctx, x2310, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x2310, bigint_mul!(x2311, x3, 66), 66),
        276359,
        4,
    )?;
    let x2312: BytePoly_64 = bigint_mul!(x2309, x2309, 64);
    let x2313: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x2312, x2284, 64), x3, 64),
            x2297,
            64
        ),
        x3,
        64
    );
    let x2314: BytePoly_34 = bigint_nondet_quot!(ctx, x2313, x3, 34);
    let x2315: BytePoly_32 = bigint_nondet_rem!(ctx, x2313, x3, 32);
    let x2316: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x2309, x2315, 64),
                        bigint_add!(
                            bigint_sub!(x2286, bigint_mul!(x2309, x2284, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x2317: BytePoly_34 = bigint_nondet_quot!(ctx, x2316, x3, 34);
    let x2318: BytePoly_32 = bigint_nondet_rem!(ctx, x2316, x3, 32);
    let x2319: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2312, bigint_mul!(x2314, x3, 66), 66),
                        x2284,
                        66
                    ),
                    x2297,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x2315,
        66
    );
    eqz(ctx, &x2319, 276359, 4)?;
    let x2320: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x2317, x3, 66), x2318, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2309, bigint_sub!(x2284, x2315, 32), 64),
                        x2286,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x2320, 276359, 4)?;
    let x2321: BytePoly_33 = bigint_add!(
        bigint_mul!(x2315, x2301, 33),
        bigint_mul!(x2284, x2303, 33),
        33
    );
    let x2322: BytePoly_33 = bigint_add!(
        bigint_mul!(x2318, x2301, 33),
        bigint_mul!(x2286, x2303, 33),
        33
    );
    let x2323: BytePoly_3 = bigint_nondet_quot!(ctx, x2321, x3, 3);
    let x2324: BytePoly_32 = bigint_nondet_rem!(ctx, x2321, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2323, x3, 35), x2324, 35),
            x2321,
            35
        ),
        260103,
        4,
    )?;
    let x2325: BytePoly_3 = bigint_nondet_quot!(ctx, x2322, x3, 3);
    let x2326: BytePoly_32 = bigint_nondet_rem!(ctx, x2322, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2325, x3, 35), x2326, 35),
            x2322,
            35
        ),
        260103,
        4,
    )?;
    let x2327: BytePoly_64 = bigint_mul!(x2297, x2297, 64);
    let x2328: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x2327, x2327, 64), x2327, 64),
        x2,
        64
    );
    let x2329: BytePoly_64 = bigint_add!(x48, x2328, 64);
    let x2330: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x2300, x2300, 32), x3, 32);
    let x2331: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2328, x2330, 96), x3, 32);
    let x2332: BytePoly_64 = bigint_mul!(x2300, x2331, 64);
    let x2333: BytePoly_64 = bigint_add!(x2332, x2332, 64);
    let x2334: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x2329, x2333, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2334, x3, 66), x2333, 66),
            x2329,
            66
        ),
        276359,
        4,
    )?;
    let x2335: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2331, x2331, 64), x3, 64), x3, 64),
            x2297,
            64
        ),
        x2297,
        64
    );
    let x2336: BytePoly_34 = bigint_nondet_quot!(ctx, x2335, x3, 34);
    let x2337: BytePoly_32 = bigint_nondet_rem!(ctx, x2335, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2336, x3, 66), x2337, 66),
            x2335,
            66
        ),
        276359,
        4,
    )?;
    let x2338: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x2331, x2337, 64), 64), x3, 64),
            x2300,
            64
        ),
        bigint_mul!(x2331, x2297, 64),
        64
    );
    let x2339: BytePoly_34 = bigint_nondet_quot!(ctx, x2338, x3, 34);
    let x2340: BytePoly_32 = bigint_nondet_rem!(ctx, x2338, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2339, x3, 66), x2340, 66),
            x2338,
            66
        ),
        276359,
        4,
    )?;
    let x2341: BytePoly_1 = bigint_nondet_rem!(ctx, x2302, x4, 1);
    let x2342: BytePoly_32 = bigint_nondet_quot!(ctx, x2302, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2342, x4, 33), x2341, 33),
            x2302,
            33
        ),
        260103,
        4,
    )?;
    let x2343: BytePoly_1 = bigint_sub!(x5, x2341, 1);
    eqz(ctx, &bigint_mul!(x2341, x2343, 2), 8131, 2)?;
    let x2344: BytePoly_32 = bigint_add!(bigint_sub!(x2340, x2326, 32), x3, 32);
    let x2345: BytePoly_32 = bigint_add!(bigint_sub!(x2337, x2324, 32), x3, 32);
    let x2346: BytePoly_32 = bigint_nondet_inv!(ctx, x2345, x3, 32);
    let x2347: BytePoly_64 = bigint_mul!(x2345, x2346, 64);
    let x2348: BytePoly_34 = bigint_nondet_quot!(ctx, x2347, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x2347, bigint_mul!(x2348, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x2349: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2344, x2346, 64), x3, 32);
    let x2350: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x2349, x2345, 64), x2344, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x2351: BytePoly_34 = bigint_nondet_quot!(ctx, x2350, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x2350, bigint_mul!(x2351, x3, 66), 66),
        276359,
        4,
    )?;
    let x2352: BytePoly_64 = bigint_mul!(x2349, x2349, 64);
    let x2353: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x2352, x2324, 64), x3, 64),
            x2337,
            64
        ),
        x3,
        64
    );
    let x2354: BytePoly_34 = bigint_nondet_quot!(ctx, x2353, x3, 34);
    let x2355: BytePoly_32 = bigint_nondet_rem!(ctx, x2353, x3, 32);
    let x2356: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x2349, x2355, 64),
                        bigint_add!(
                            bigint_sub!(x2326, bigint_mul!(x2349, x2324, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x2357: BytePoly_34 = bigint_nondet_quot!(ctx, x2356, x3, 34);
    let x2358: BytePoly_32 = bigint_nondet_rem!(ctx, x2356, x3, 32);
    let x2359: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2352, bigint_mul!(x2354, x3, 66), 66),
                        x2324,
                        66
                    ),
                    x2337,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x2355,
        66
    );
    eqz(ctx, &x2359, 276359, 4)?;
    let x2360: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x2357, x3, 66), x2358, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2349, bigint_sub!(x2324, x2355, 32), 64),
                        x2326,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x2360, 276359, 4)?;
    let x2361: BytePoly_33 = bigint_add!(
        bigint_mul!(x2355, x2341, 33),
        bigint_mul!(x2324, x2343, 33),
        33
    );
    let x2362: BytePoly_33 = bigint_add!(
        bigint_mul!(x2358, x2341, 33),
        bigint_mul!(x2326, x2343, 33),
        33
    );
    let x2363: BytePoly_3 = bigint_nondet_quot!(ctx, x2361, x3, 3);
    let x2364: BytePoly_32 = bigint_nondet_rem!(ctx, x2361, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2363, x3, 35), x2364, 35),
            x2361,
            35
        ),
        260103,
        4,
    )?;
    let x2365: BytePoly_3 = bigint_nondet_quot!(ctx, x2362, x3, 3);
    let x2366: BytePoly_32 = bigint_nondet_rem!(ctx, x2362, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2365, x3, 35), x2366, 35),
            x2362,
            35
        ),
        260103,
        4,
    )?;
    let x2367: BytePoly_64 = bigint_mul!(x2337, x2337, 64);
    let x2368: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x2367, x2367, 64), x2367, 64),
        x2,
        64
    );
    let x2369: BytePoly_64 = bigint_add!(x48, x2368, 64);
    let x2370: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x2340, x2340, 32), x3, 32);
    let x2371: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2368, x2370, 96), x3, 32);
    let x2372: BytePoly_64 = bigint_mul!(x2340, x2371, 64);
    let x2373: BytePoly_64 = bigint_add!(x2372, x2372, 64);
    let x2374: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x2369, x2373, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2374, x3, 66), x2373, 66),
            x2369,
            66
        ),
        276359,
        4,
    )?;
    let x2375: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2371, x2371, 64), x3, 64), x3, 64),
            x2337,
            64
        ),
        x2337,
        64
    );
    let x2376: BytePoly_34 = bigint_nondet_quot!(ctx, x2375, x3, 34);
    let x2377: BytePoly_32 = bigint_nondet_rem!(ctx, x2375, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2376, x3, 66), x2377, 66),
            x2375,
            66
        ),
        276359,
        4,
    )?;
    let x2378: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x2371, x2377, 64), 64), x3, 64),
            x2340,
            64
        ),
        bigint_mul!(x2371, x2337, 64),
        64
    );
    let x2379: BytePoly_34 = bigint_nondet_quot!(ctx, x2378, x3, 34);
    let x2380: BytePoly_32 = bigint_nondet_rem!(ctx, x2378, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2379, x3, 66), x2380, 66),
            x2378,
            66
        ),
        276359,
        4,
    )?;
    let x2381: BytePoly_1 = bigint_nondet_rem!(ctx, x2342, x4, 1);
    let x2382: BytePoly_32 = bigint_nondet_quot!(ctx, x2342, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2382, x4, 33), x2381, 33),
            x2342,
            33
        ),
        260103,
        4,
    )?;
    let x2383: BytePoly_1 = bigint_sub!(x5, x2381, 1);
    eqz(ctx, &bigint_mul!(x2381, x2383, 2), 8131, 2)?;
    let x2384: BytePoly_32 = bigint_add!(bigint_sub!(x2380, x2366, 32), x3, 32);
    let x2385: BytePoly_32 = bigint_add!(bigint_sub!(x2377, x2364, 32), x3, 32);
    let x2386: BytePoly_32 = bigint_nondet_inv!(ctx, x2385, x3, 32);
    let x2387: BytePoly_64 = bigint_mul!(x2385, x2386, 64);
    let x2388: BytePoly_34 = bigint_nondet_quot!(ctx, x2387, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x2387, bigint_mul!(x2388, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x2389: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2384, x2386, 64), x3, 32);
    let x2390: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x2389, x2385, 64), x2384, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x2391: BytePoly_34 = bigint_nondet_quot!(ctx, x2390, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x2390, bigint_mul!(x2391, x3, 66), 66),
        276359,
        4,
    )?;
    let x2392: BytePoly_64 = bigint_mul!(x2389, x2389, 64);
    let x2393: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x2392, x2364, 64), x3, 64),
            x2377,
            64
        ),
        x3,
        64
    );
    let x2394: BytePoly_34 = bigint_nondet_quot!(ctx, x2393, x3, 34);
    let x2395: BytePoly_32 = bigint_nondet_rem!(ctx, x2393, x3, 32);
    let x2396: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x2389, x2395, 64),
                        bigint_add!(
                            bigint_sub!(x2366, bigint_mul!(x2389, x2364, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x2397: BytePoly_34 = bigint_nondet_quot!(ctx, x2396, x3, 34);
    let x2398: BytePoly_32 = bigint_nondet_rem!(ctx, x2396, x3, 32);
    let x2399: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2392, bigint_mul!(x2394, x3, 66), 66),
                        x2364,
                        66
                    ),
                    x2377,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x2395,
        66
    );
    eqz(ctx, &x2399, 276359, 4)?;
    let x2400: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x2397, x3, 66), x2398, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2389, bigint_sub!(x2364, x2395, 32), 64),
                        x2366,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x2400, 276359, 4)?;
    let x2401: BytePoly_33 = bigint_add!(
        bigint_mul!(x2395, x2381, 33),
        bigint_mul!(x2364, x2383, 33),
        33
    );
    let x2402: BytePoly_33 = bigint_add!(
        bigint_mul!(x2398, x2381, 33),
        bigint_mul!(x2366, x2383, 33),
        33
    );
    let x2403: BytePoly_3 = bigint_nondet_quot!(ctx, x2401, x3, 3);
    let x2404: BytePoly_32 = bigint_nondet_rem!(ctx, x2401, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2403, x3, 35), x2404, 35),
            x2401,
            35
        ),
        260103,
        4,
    )?;
    let x2405: BytePoly_3 = bigint_nondet_quot!(ctx, x2402, x3, 3);
    let x2406: BytePoly_32 = bigint_nondet_rem!(ctx, x2402, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2405, x3, 35), x2406, 35),
            x2402,
            35
        ),
        260103,
        4,
    )?;
    let x2407: BytePoly_64 = bigint_mul!(x2377, x2377, 64);
    let x2408: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x2407, x2407, 64), x2407, 64),
        x2,
        64
    );
    let x2409: BytePoly_64 = bigint_add!(x48, x2408, 64);
    let x2410: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x2380, x2380, 32), x3, 32);
    let x2411: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2408, x2410, 96), x3, 32);
    let x2412: BytePoly_64 = bigint_mul!(x2380, x2411, 64);
    let x2413: BytePoly_64 = bigint_add!(x2412, x2412, 64);
    let x2414: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x2409, x2413, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2414, x3, 66), x2413, 66),
            x2409,
            66
        ),
        276359,
        4,
    )?;
    let x2415: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2411, x2411, 64), x3, 64), x3, 64),
            x2377,
            64
        ),
        x2377,
        64
    );
    let x2416: BytePoly_34 = bigint_nondet_quot!(ctx, x2415, x3, 34);
    let x2417: BytePoly_32 = bigint_nondet_rem!(ctx, x2415, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2416, x3, 66), x2417, 66),
            x2415,
            66
        ),
        276359,
        4,
    )?;
    let x2418: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x2411, x2417, 64), 64), x3, 64),
            x2380,
            64
        ),
        bigint_mul!(x2411, x2377, 64),
        64
    );
    let x2419: BytePoly_34 = bigint_nondet_quot!(ctx, x2418, x3, 34);
    let x2420: BytePoly_32 = bigint_nondet_rem!(ctx, x2418, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2419, x3, 66), x2420, 66),
            x2418,
            66
        ),
        276359,
        4,
    )?;
    let x2421: BytePoly_1 = bigint_nondet_rem!(ctx, x2382, x4, 1);
    let x2422: BytePoly_32 = bigint_nondet_quot!(ctx, x2382, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2422, x4, 33), x2421, 33),
            x2382,
            33
        ),
        260103,
        4,
    )?;
    let x2423: BytePoly_1 = bigint_sub!(x5, x2421, 1);
    eqz(ctx, &bigint_mul!(x2421, x2423, 2), 8131, 2)?;
    let x2424: BytePoly_32 = bigint_add!(bigint_sub!(x2420, x2406, 32), x3, 32);
    let x2425: BytePoly_32 = bigint_add!(bigint_sub!(x2417, x2404, 32), x3, 32);
    let x2426: BytePoly_32 = bigint_nondet_inv!(ctx, x2425, x3, 32);
    let x2427: BytePoly_64 = bigint_mul!(x2425, x2426, 64);
    let x2428: BytePoly_34 = bigint_nondet_quot!(ctx, x2427, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x2427, bigint_mul!(x2428, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x2429: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2424, x2426, 64), x3, 32);
    let x2430: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x2429, x2425, 64), x2424, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x2431: BytePoly_34 = bigint_nondet_quot!(ctx, x2430, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x2430, bigint_mul!(x2431, x3, 66), 66),
        276359,
        4,
    )?;
    let x2432: BytePoly_64 = bigint_mul!(x2429, x2429, 64);
    let x2433: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x2432, x2404, 64), x3, 64),
            x2417,
            64
        ),
        x3,
        64
    );
    let x2434: BytePoly_34 = bigint_nondet_quot!(ctx, x2433, x3, 34);
    let x2435: BytePoly_32 = bigint_nondet_rem!(ctx, x2433, x3, 32);
    let x2436: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x2429, x2435, 64),
                        bigint_add!(
                            bigint_sub!(x2406, bigint_mul!(x2429, x2404, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x2437: BytePoly_34 = bigint_nondet_quot!(ctx, x2436, x3, 34);
    let x2438: BytePoly_32 = bigint_nondet_rem!(ctx, x2436, x3, 32);
    let x2439: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2432, bigint_mul!(x2434, x3, 66), 66),
                        x2404,
                        66
                    ),
                    x2417,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x2435,
        66
    );
    eqz(ctx, &x2439, 276359, 4)?;
    let x2440: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x2437, x3, 66), x2438, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2429, bigint_sub!(x2404, x2435, 32), 64),
                        x2406,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x2440, 276359, 4)?;
    let x2441: BytePoly_33 = bigint_add!(
        bigint_mul!(x2435, x2421, 33),
        bigint_mul!(x2404, x2423, 33),
        33
    );
    let x2442: BytePoly_33 = bigint_add!(
        bigint_mul!(x2438, x2421, 33),
        bigint_mul!(x2406, x2423, 33),
        33
    );
    let x2443: BytePoly_3 = bigint_nondet_quot!(ctx, x2441, x3, 3);
    let x2444: BytePoly_32 = bigint_nondet_rem!(ctx, x2441, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2443, x3, 35), x2444, 35),
            x2441,
            35
        ),
        260103,
        4,
    )?;
    let x2445: BytePoly_3 = bigint_nondet_quot!(ctx, x2442, x3, 3);
    let x2446: BytePoly_32 = bigint_nondet_rem!(ctx, x2442, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2445, x3, 35), x2446, 35),
            x2442,
            35
        ),
        260103,
        4,
    )?;
    let x2447: BytePoly_64 = bigint_mul!(x2417, x2417, 64);
    let x2448: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x2447, x2447, 64), x2447, 64),
        x2,
        64
    );
    let x2449: BytePoly_64 = bigint_add!(x48, x2448, 64);
    let x2450: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x2420, x2420, 32), x3, 32);
    let x2451: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2448, x2450, 96), x3, 32);
    let x2452: BytePoly_64 = bigint_mul!(x2420, x2451, 64);
    let x2453: BytePoly_64 = bigint_add!(x2452, x2452, 64);
    let x2454: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x2449, x2453, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2454, x3, 66), x2453, 66),
            x2449,
            66
        ),
        276359,
        4,
    )?;
    let x2455: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2451, x2451, 64), x3, 64), x3, 64),
            x2417,
            64
        ),
        x2417,
        64
    );
    let x2456: BytePoly_34 = bigint_nondet_quot!(ctx, x2455, x3, 34);
    let x2457: BytePoly_32 = bigint_nondet_rem!(ctx, x2455, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2456, x3, 66), x2457, 66),
            x2455,
            66
        ),
        276359,
        4,
    )?;
    let x2458: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x2451, x2457, 64), 64), x3, 64),
            x2420,
            64
        ),
        bigint_mul!(x2451, x2417, 64),
        64
    );
    let x2459: BytePoly_34 = bigint_nondet_quot!(ctx, x2458, x3, 34);
    let x2460: BytePoly_32 = bigint_nondet_rem!(ctx, x2458, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2459, x3, 66), x2460, 66),
            x2458,
            66
        ),
        276359,
        4,
    )?;
    let x2461: BytePoly_1 = bigint_nondet_rem!(ctx, x2422, x4, 1);
    let x2462: BytePoly_32 = bigint_nondet_quot!(ctx, x2422, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2462, x4, 33), x2461, 33),
            x2422,
            33
        ),
        260103,
        4,
    )?;
    let x2463: BytePoly_1 = bigint_sub!(x5, x2461, 1);
    eqz(ctx, &bigint_mul!(x2461, x2463, 2), 8131, 2)?;
    let x2464: BytePoly_32 = bigint_add!(bigint_sub!(x2460, x2446, 32), x3, 32);
    let x2465: BytePoly_32 = bigint_add!(bigint_sub!(x2457, x2444, 32), x3, 32);
    let x2466: BytePoly_32 = bigint_nondet_inv!(ctx, x2465, x3, 32);
    let x2467: BytePoly_64 = bigint_mul!(x2465, x2466, 64);
    let x2468: BytePoly_34 = bigint_nondet_quot!(ctx, x2467, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x2467, bigint_mul!(x2468, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x2469: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2464, x2466, 64), x3, 32);
    let x2470: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x2469, x2465, 64), x2464, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x2471: BytePoly_34 = bigint_nondet_quot!(ctx, x2470, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x2470, bigint_mul!(x2471, x3, 66), 66),
        276359,
        4,
    )?;
    let x2472: BytePoly_64 = bigint_mul!(x2469, x2469, 64);
    let x2473: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x2472, x2444, 64), x3, 64),
            x2457,
            64
        ),
        x3,
        64
    );
    let x2474: BytePoly_34 = bigint_nondet_quot!(ctx, x2473, x3, 34);
    let x2475: BytePoly_32 = bigint_nondet_rem!(ctx, x2473, x3, 32);
    let x2476: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x2469, x2475, 64),
                        bigint_add!(
                            bigint_sub!(x2446, bigint_mul!(x2469, x2444, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x2477: BytePoly_34 = bigint_nondet_quot!(ctx, x2476, x3, 34);
    let x2478: BytePoly_32 = bigint_nondet_rem!(ctx, x2476, x3, 32);
    let x2479: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2472, bigint_mul!(x2474, x3, 66), 66),
                        x2444,
                        66
                    ),
                    x2457,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x2475,
        66
    );
    eqz(ctx, &x2479, 276359, 4)?;
    let x2480: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x2477, x3, 66), x2478, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2469, bigint_sub!(x2444, x2475, 32), 64),
                        x2446,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x2480, 276359, 4)?;
    let x2481: BytePoly_33 = bigint_add!(
        bigint_mul!(x2475, x2461, 33),
        bigint_mul!(x2444, x2463, 33),
        33
    );
    let x2482: BytePoly_33 = bigint_add!(
        bigint_mul!(x2478, x2461, 33),
        bigint_mul!(x2446, x2463, 33),
        33
    );
    let x2483: BytePoly_3 = bigint_nondet_quot!(ctx, x2481, x3, 3);
    let x2484: BytePoly_32 = bigint_nondet_rem!(ctx, x2481, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2483, x3, 35), x2484, 35),
            x2481,
            35
        ),
        260103,
        4,
    )?;
    let x2485: BytePoly_3 = bigint_nondet_quot!(ctx, x2482, x3, 3);
    let x2486: BytePoly_32 = bigint_nondet_rem!(ctx, x2482, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2485, x3, 35), x2486, 35),
            x2482,
            35
        ),
        260103,
        4,
    )?;
    let x2487: BytePoly_64 = bigint_mul!(x2457, x2457, 64);
    let x2488: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x2487, x2487, 64), x2487, 64),
        x2,
        64
    );
    let x2489: BytePoly_64 = bigint_add!(x48, x2488, 64);
    let x2490: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x2460, x2460, 32), x3, 32);
    let x2491: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2488, x2490, 96), x3, 32);
    let x2492: BytePoly_64 = bigint_mul!(x2460, x2491, 64);
    let x2493: BytePoly_64 = bigint_add!(x2492, x2492, 64);
    let x2494: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x2489, x2493, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2494, x3, 66), x2493, 66),
            x2489,
            66
        ),
        276359,
        4,
    )?;
    let x2495: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2491, x2491, 64), x3, 64), x3, 64),
            x2457,
            64
        ),
        x2457,
        64
    );
    let x2496: BytePoly_34 = bigint_nondet_quot!(ctx, x2495, x3, 34);
    let x2497: BytePoly_32 = bigint_nondet_rem!(ctx, x2495, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2496, x3, 66), x2497, 66),
            x2495,
            66
        ),
        276359,
        4,
    )?;
    let x2498: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x2491, x2497, 64), 64), x3, 64),
            x2460,
            64
        ),
        bigint_mul!(x2491, x2457, 64),
        64
    );
    let x2499: BytePoly_34 = bigint_nondet_quot!(ctx, x2498, x3, 34);
    let x2500: BytePoly_32 = bigint_nondet_rem!(ctx, x2498, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2499, x3, 66), x2500, 66),
            x2498,
            66
        ),
        276359,
        4,
    )?;
    let x2501: BytePoly_1 = bigint_nondet_rem!(ctx, x2462, x4, 1);
    let x2502: BytePoly_32 = bigint_nondet_quot!(ctx, x2462, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2502, x4, 33), x2501, 33),
            x2462,
            33
        ),
        260103,
        4,
    )?;
    let x2503: BytePoly_1 = bigint_sub!(x5, x2501, 1);
    eqz(ctx, &bigint_mul!(x2501, x2503, 2), 8131, 2)?;
    let x2504: BytePoly_32 = bigint_add!(bigint_sub!(x2500, x2486, 32), x3, 32);
    let x2505: BytePoly_32 = bigint_add!(bigint_sub!(x2497, x2484, 32), x3, 32);
    let x2506: BytePoly_32 = bigint_nondet_inv!(ctx, x2505, x3, 32);
    let x2507: BytePoly_64 = bigint_mul!(x2505, x2506, 64);
    let x2508: BytePoly_34 = bigint_nondet_quot!(ctx, x2507, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x2507, bigint_mul!(x2508, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x2509: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2504, x2506, 64), x3, 32);
    let x2510: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x2509, x2505, 64), x2504, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x2511: BytePoly_34 = bigint_nondet_quot!(ctx, x2510, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x2510, bigint_mul!(x2511, x3, 66), 66),
        276359,
        4,
    )?;
    let x2512: BytePoly_64 = bigint_mul!(x2509, x2509, 64);
    let x2513: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x2512, x2484, 64), x3, 64),
            x2497,
            64
        ),
        x3,
        64
    );
    let x2514: BytePoly_34 = bigint_nondet_quot!(ctx, x2513, x3, 34);
    let x2515: BytePoly_32 = bigint_nondet_rem!(ctx, x2513, x3, 32);
    let x2516: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x2509, x2515, 64),
                        bigint_add!(
                            bigint_sub!(x2486, bigint_mul!(x2509, x2484, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x2517: BytePoly_34 = bigint_nondet_quot!(ctx, x2516, x3, 34);
    let x2518: BytePoly_32 = bigint_nondet_rem!(ctx, x2516, x3, 32);
    let x2519: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2512, bigint_mul!(x2514, x3, 66), 66),
                        x2484,
                        66
                    ),
                    x2497,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x2515,
        66
    );
    eqz(ctx, &x2519, 276359, 4)?;
    let x2520: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x2517, x3, 66), x2518, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2509, bigint_sub!(x2484, x2515, 32), 64),
                        x2486,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x2520, 276359, 4)?;
    let x2521: BytePoly_33 = bigint_add!(
        bigint_mul!(x2515, x2501, 33),
        bigint_mul!(x2484, x2503, 33),
        33
    );
    let x2522: BytePoly_33 = bigint_add!(
        bigint_mul!(x2518, x2501, 33),
        bigint_mul!(x2486, x2503, 33),
        33
    );
    let x2523: BytePoly_3 = bigint_nondet_quot!(ctx, x2521, x3, 3);
    let x2524: BytePoly_32 = bigint_nondet_rem!(ctx, x2521, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2523, x3, 35), x2524, 35),
            x2521,
            35
        ),
        260103,
        4,
    )?;
    let x2525: BytePoly_3 = bigint_nondet_quot!(ctx, x2522, x3, 3);
    let x2526: BytePoly_32 = bigint_nondet_rem!(ctx, x2522, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2525, x3, 35), x2526, 35),
            x2522,
            35
        ),
        260103,
        4,
    )?;
    let x2527: BytePoly_64 = bigint_mul!(x2497, x2497, 64);
    let x2528: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x2527, x2527, 64), x2527, 64),
        x2,
        64
    );
    let x2529: BytePoly_64 = bigint_add!(x48, x2528, 64);
    let x2530: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x2500, x2500, 32), x3, 32);
    let x2531: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2528, x2530, 96), x3, 32);
    let x2532: BytePoly_64 = bigint_mul!(x2500, x2531, 64);
    let x2533: BytePoly_64 = bigint_add!(x2532, x2532, 64);
    let x2534: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x2529, x2533, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2534, x3, 66), x2533, 66),
            x2529,
            66
        ),
        276359,
        4,
    )?;
    let x2535: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2531, x2531, 64), x3, 64), x3, 64),
            x2497,
            64
        ),
        x2497,
        64
    );
    let x2536: BytePoly_34 = bigint_nondet_quot!(ctx, x2535, x3, 34);
    let x2537: BytePoly_32 = bigint_nondet_rem!(ctx, x2535, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2536, x3, 66), x2537, 66),
            x2535,
            66
        ),
        276359,
        4,
    )?;
    let x2538: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x2531, x2537, 64), 64), x3, 64),
            x2500,
            64
        ),
        bigint_mul!(x2531, x2497, 64),
        64
    );
    let x2539: BytePoly_34 = bigint_nondet_quot!(ctx, x2538, x3, 34);
    let x2540: BytePoly_32 = bigint_nondet_rem!(ctx, x2538, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2539, x3, 66), x2540, 66),
            x2538,
            66
        ),
        276359,
        4,
    )?;
    let x2541: BytePoly_1 = bigint_nondet_rem!(ctx, x2502, x4, 1);
    let x2542: BytePoly_32 = bigint_nondet_quot!(ctx, x2502, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2542, x4, 33), x2541, 33),
            x2502,
            33
        ),
        260103,
        4,
    )?;
    let x2543: BytePoly_1 = bigint_sub!(x5, x2541, 1);
    eqz(ctx, &bigint_mul!(x2541, x2543, 2), 8131, 2)?;
    let x2544: BytePoly_32 = bigint_add!(bigint_sub!(x2540, x2526, 32), x3, 32);
    let x2545: BytePoly_32 = bigint_add!(bigint_sub!(x2537, x2524, 32), x3, 32);
    let x2546: BytePoly_32 = bigint_nondet_inv!(ctx, x2545, x3, 32);
    let x2547: BytePoly_64 = bigint_mul!(x2545, x2546, 64);
    let x2548: BytePoly_34 = bigint_nondet_quot!(ctx, x2547, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x2547, bigint_mul!(x2548, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x2549: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2544, x2546, 64), x3, 32);
    let x2550: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x2549, x2545, 64), x2544, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x2551: BytePoly_34 = bigint_nondet_quot!(ctx, x2550, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x2550, bigint_mul!(x2551, x3, 66), 66),
        276359,
        4,
    )?;
    let x2552: BytePoly_64 = bigint_mul!(x2549, x2549, 64);
    let x2553: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x2552, x2524, 64), x3, 64),
            x2537,
            64
        ),
        x3,
        64
    );
    let x2554: BytePoly_34 = bigint_nondet_quot!(ctx, x2553, x3, 34);
    let x2555: BytePoly_32 = bigint_nondet_rem!(ctx, x2553, x3, 32);
    let x2556: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x2549, x2555, 64),
                        bigint_add!(
                            bigint_sub!(x2526, bigint_mul!(x2549, x2524, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x2557: BytePoly_34 = bigint_nondet_quot!(ctx, x2556, x3, 34);
    let x2558: BytePoly_32 = bigint_nondet_rem!(ctx, x2556, x3, 32);
    let x2559: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2552, bigint_mul!(x2554, x3, 66), 66),
                        x2524,
                        66
                    ),
                    x2537,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x2555,
        66
    );
    eqz(ctx, &x2559, 276359, 4)?;
    let x2560: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x2557, x3, 66), x2558, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2549, bigint_sub!(x2524, x2555, 32), 64),
                        x2526,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x2560, 276359, 4)?;
    let x2561: BytePoly_33 = bigint_add!(
        bigint_mul!(x2555, x2541, 33),
        bigint_mul!(x2524, x2543, 33),
        33
    );
    let x2562: BytePoly_33 = bigint_add!(
        bigint_mul!(x2558, x2541, 33),
        bigint_mul!(x2526, x2543, 33),
        33
    );
    let x2563: BytePoly_3 = bigint_nondet_quot!(ctx, x2561, x3, 3);
    let x2564: BytePoly_32 = bigint_nondet_rem!(ctx, x2561, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2563, x3, 35), x2564, 35),
            x2561,
            35
        ),
        260103,
        4,
    )?;
    let x2565: BytePoly_3 = bigint_nondet_quot!(ctx, x2562, x3, 3);
    let x2566: BytePoly_32 = bigint_nondet_rem!(ctx, x2562, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2565, x3, 35), x2566, 35),
            x2562,
            35
        ),
        260103,
        4,
    )?;
    let x2567: BytePoly_64 = bigint_mul!(x2537, x2537, 64);
    let x2568: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x2567, x2567, 64), x2567, 64),
        x2,
        64
    );
    let x2569: BytePoly_64 = bigint_add!(x48, x2568, 64);
    let x2570: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x2540, x2540, 32), x3, 32);
    let x2571: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2568, x2570, 96), x3, 32);
    let x2572: BytePoly_64 = bigint_mul!(x2540, x2571, 64);
    let x2573: BytePoly_64 = bigint_add!(x2572, x2572, 64);
    let x2574: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x2569, x2573, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2574, x3, 66), x2573, 66),
            x2569,
            66
        ),
        276359,
        4,
    )?;
    let x2575: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2571, x2571, 64), x3, 64), x3, 64),
            x2537,
            64
        ),
        x2537,
        64
    );
    let x2576: BytePoly_34 = bigint_nondet_quot!(ctx, x2575, x3, 34);
    let x2577: BytePoly_32 = bigint_nondet_rem!(ctx, x2575, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2576, x3, 66), x2577, 66),
            x2575,
            66
        ),
        276359,
        4,
    )?;
    let x2578: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x2571, x2577, 64), 64), x3, 64),
            x2540,
            64
        ),
        bigint_mul!(x2571, x2537, 64),
        64
    );
    let x2579: BytePoly_34 = bigint_nondet_quot!(ctx, x2578, x3, 34);
    let x2580: BytePoly_32 = bigint_nondet_rem!(ctx, x2578, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2579, x3, 66), x2580, 66),
            x2578,
            66
        ),
        276359,
        4,
    )?;
    let x2581: BytePoly_1 = bigint_nondet_rem!(ctx, x2542, x4, 1);
    let x2582: BytePoly_32 = bigint_nondet_quot!(ctx, x2542, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2582, x4, 33), x2581, 33),
            x2542,
            33
        ),
        260103,
        4,
    )?;
    let x2583: BytePoly_1 = bigint_sub!(x5, x2581, 1);
    eqz(ctx, &bigint_mul!(x2581, x2583, 2), 8131, 2)?;
    let x2584: BytePoly_32 = bigint_add!(bigint_sub!(x2580, x2566, 32), x3, 32);
    let x2585: BytePoly_32 = bigint_add!(bigint_sub!(x2577, x2564, 32), x3, 32);
    let x2586: BytePoly_32 = bigint_nondet_inv!(ctx, x2585, x3, 32);
    let x2587: BytePoly_64 = bigint_mul!(x2585, x2586, 64);
    let x2588: BytePoly_34 = bigint_nondet_quot!(ctx, x2587, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x2587, bigint_mul!(x2588, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x2589: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2584, x2586, 64), x3, 32);
    let x2590: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x2589, x2585, 64), x2584, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x2591: BytePoly_34 = bigint_nondet_quot!(ctx, x2590, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x2590, bigint_mul!(x2591, x3, 66), 66),
        276359,
        4,
    )?;
    let x2592: BytePoly_64 = bigint_mul!(x2589, x2589, 64);
    let x2593: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x2592, x2564, 64), x3, 64),
            x2577,
            64
        ),
        x3,
        64
    );
    let x2594: BytePoly_34 = bigint_nondet_quot!(ctx, x2593, x3, 34);
    let x2595: BytePoly_32 = bigint_nondet_rem!(ctx, x2593, x3, 32);
    let x2596: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x2589, x2595, 64),
                        bigint_add!(
                            bigint_sub!(x2566, bigint_mul!(x2589, x2564, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x2597: BytePoly_34 = bigint_nondet_quot!(ctx, x2596, x3, 34);
    let x2598: BytePoly_32 = bigint_nondet_rem!(ctx, x2596, x3, 32);
    let x2599: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2592, bigint_mul!(x2594, x3, 66), 66),
                        x2564,
                        66
                    ),
                    x2577,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x2595,
        66
    );
    eqz(ctx, &x2599, 276359, 4)?;
    let x2600: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x2597, x3, 66), x2598, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2589, bigint_sub!(x2564, x2595, 32), 64),
                        x2566,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x2600, 276359, 4)?;
    let x2601: BytePoly_33 = bigint_add!(
        bigint_mul!(x2595, x2581, 33),
        bigint_mul!(x2564, x2583, 33),
        33
    );
    let x2602: BytePoly_33 = bigint_add!(
        bigint_mul!(x2598, x2581, 33),
        bigint_mul!(x2566, x2583, 33),
        33
    );
    let x2603: BytePoly_3 = bigint_nondet_quot!(ctx, x2601, x3, 3);
    let x2604: BytePoly_32 = bigint_nondet_rem!(ctx, x2601, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2603, x3, 35), x2604, 35),
            x2601,
            35
        ),
        260103,
        4,
    )?;
    let x2605: BytePoly_3 = bigint_nondet_quot!(ctx, x2602, x3, 3);
    let x2606: BytePoly_32 = bigint_nondet_rem!(ctx, x2602, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2605, x3, 35), x2606, 35),
            x2602,
            35
        ),
        260103,
        4,
    )?;
    let x2607: BytePoly_64 = bigint_mul!(x2577, x2577, 64);
    let x2608: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x2607, x2607, 64), x2607, 64),
        x2,
        64
    );
    let x2609: BytePoly_64 = bigint_add!(x48, x2608, 64);
    let x2610: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x2580, x2580, 32), x3, 32);
    let x2611: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2608, x2610, 96), x3, 32);
    let x2612: BytePoly_64 = bigint_mul!(x2580, x2611, 64);
    let x2613: BytePoly_64 = bigint_add!(x2612, x2612, 64);
    let x2614: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x2609, x2613, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2614, x3, 66), x2613, 66),
            x2609,
            66
        ),
        276359,
        4,
    )?;
    let x2615: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2611, x2611, 64), x3, 64), x3, 64),
            x2577,
            64
        ),
        x2577,
        64
    );
    let x2616: BytePoly_34 = bigint_nondet_quot!(ctx, x2615, x3, 34);
    let x2617: BytePoly_32 = bigint_nondet_rem!(ctx, x2615, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2616, x3, 66), x2617, 66),
            x2615,
            66
        ),
        276359,
        4,
    )?;
    let x2618: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x2611, x2617, 64), 64), x3, 64),
            x2580,
            64
        ),
        bigint_mul!(x2611, x2577, 64),
        64
    );
    let x2619: BytePoly_34 = bigint_nondet_quot!(ctx, x2618, x3, 34);
    let x2620: BytePoly_32 = bigint_nondet_rem!(ctx, x2618, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2619, x3, 66), x2620, 66),
            x2618,
            66
        ),
        276359,
        4,
    )?;
    let x2621: BytePoly_1 = bigint_nondet_rem!(ctx, x2582, x4, 1);
    let x2622: BytePoly_32 = bigint_nondet_quot!(ctx, x2582, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2622, x4, 33), x2621, 33),
            x2582,
            33
        ),
        260103,
        4,
    )?;
    let x2623: BytePoly_1 = bigint_sub!(x5, x2621, 1);
    eqz(ctx, &bigint_mul!(x2621, x2623, 2), 8131, 2)?;
    let x2624: BytePoly_32 = bigint_add!(bigint_sub!(x2620, x2606, 32), x3, 32);
    let x2625: BytePoly_32 = bigint_add!(bigint_sub!(x2617, x2604, 32), x3, 32);
    let x2626: BytePoly_32 = bigint_nondet_inv!(ctx, x2625, x3, 32);
    let x2627: BytePoly_64 = bigint_mul!(x2625, x2626, 64);
    let x2628: BytePoly_34 = bigint_nondet_quot!(ctx, x2627, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x2627, bigint_mul!(x2628, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x2629: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2624, x2626, 64), x3, 32);
    let x2630: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x2629, x2625, 64), x2624, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x2631: BytePoly_34 = bigint_nondet_quot!(ctx, x2630, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x2630, bigint_mul!(x2631, x3, 66), 66),
        276359,
        4,
    )?;
    let x2632: BytePoly_64 = bigint_mul!(x2629, x2629, 64);
    let x2633: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x2632, x2604, 64), x3, 64),
            x2617,
            64
        ),
        x3,
        64
    );
    let x2634: BytePoly_34 = bigint_nondet_quot!(ctx, x2633, x3, 34);
    let x2635: BytePoly_32 = bigint_nondet_rem!(ctx, x2633, x3, 32);
    let x2636: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x2629, x2635, 64),
                        bigint_add!(
                            bigint_sub!(x2606, bigint_mul!(x2629, x2604, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x2637: BytePoly_34 = bigint_nondet_quot!(ctx, x2636, x3, 34);
    let x2638: BytePoly_32 = bigint_nondet_rem!(ctx, x2636, x3, 32);
    let x2639: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2632, bigint_mul!(x2634, x3, 66), 66),
                        x2604,
                        66
                    ),
                    x2617,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x2635,
        66
    );
    eqz(ctx, &x2639, 276359, 4)?;
    let x2640: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x2637, x3, 66), x2638, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2629, bigint_sub!(x2604, x2635, 32), 64),
                        x2606,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x2640, 276359, 4)?;
    let x2641: BytePoly_33 = bigint_add!(
        bigint_mul!(x2635, x2621, 33),
        bigint_mul!(x2604, x2623, 33),
        33
    );
    let x2642: BytePoly_33 = bigint_add!(
        bigint_mul!(x2638, x2621, 33),
        bigint_mul!(x2606, x2623, 33),
        33
    );
    let x2643: BytePoly_3 = bigint_nondet_quot!(ctx, x2641, x3, 3);
    let x2644: BytePoly_32 = bigint_nondet_rem!(ctx, x2641, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2643, x3, 35), x2644, 35),
            x2641,
            35
        ),
        260103,
        4,
    )?;
    let x2645: BytePoly_3 = bigint_nondet_quot!(ctx, x2642, x3, 3);
    let x2646: BytePoly_32 = bigint_nondet_rem!(ctx, x2642, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2645, x3, 35), x2646, 35),
            x2642,
            35
        ),
        260103,
        4,
    )?;
    let x2647: BytePoly_64 = bigint_mul!(x2617, x2617, 64);
    let x2648: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x2647, x2647, 64), x2647, 64),
        x2,
        64
    );
    let x2649: BytePoly_64 = bigint_add!(x48, x2648, 64);
    let x2650: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x2620, x2620, 32), x3, 32);
    let x2651: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2648, x2650, 96), x3, 32);
    let x2652: BytePoly_64 = bigint_mul!(x2620, x2651, 64);
    let x2653: BytePoly_64 = bigint_add!(x2652, x2652, 64);
    let x2654: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x2649, x2653, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2654, x3, 66), x2653, 66),
            x2649,
            66
        ),
        276359,
        4,
    )?;
    let x2655: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2651, x2651, 64), x3, 64), x3, 64),
            x2617,
            64
        ),
        x2617,
        64
    );
    let x2656: BytePoly_34 = bigint_nondet_quot!(ctx, x2655, x3, 34);
    let x2657: BytePoly_32 = bigint_nondet_rem!(ctx, x2655, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2656, x3, 66), x2657, 66),
            x2655,
            66
        ),
        276359,
        4,
    )?;
    let x2658: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x2651, x2657, 64), 64), x3, 64),
            x2620,
            64
        ),
        bigint_mul!(x2651, x2617, 64),
        64
    );
    let x2659: BytePoly_34 = bigint_nondet_quot!(ctx, x2658, x3, 34);
    let x2660: BytePoly_32 = bigint_nondet_rem!(ctx, x2658, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2659, x3, 66), x2660, 66),
            x2658,
            66
        ),
        276359,
        4,
    )?;
    let x2661: BytePoly_1 = bigint_nondet_rem!(ctx, x2622, x4, 1);
    let x2662: BytePoly_32 = bigint_nondet_quot!(ctx, x2622, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2662, x4, 33), x2661, 33),
            x2622,
            33
        ),
        260103,
        4,
    )?;
    let x2663: BytePoly_1 = bigint_sub!(x5, x2661, 1);
    eqz(ctx, &bigint_mul!(x2661, x2663, 2), 8131, 2)?;
    let x2664: BytePoly_32 = bigint_add!(bigint_sub!(x2660, x2646, 32), x3, 32);
    let x2665: BytePoly_32 = bigint_add!(bigint_sub!(x2657, x2644, 32), x3, 32);
    let x2666: BytePoly_32 = bigint_nondet_inv!(ctx, x2665, x3, 32);
    let x2667: BytePoly_64 = bigint_mul!(x2665, x2666, 64);
    let x2668: BytePoly_34 = bigint_nondet_quot!(ctx, x2667, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x2667, bigint_mul!(x2668, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x2669: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2664, x2666, 64), x3, 32);
    let x2670: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x2669, x2665, 64), x2664, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x2671: BytePoly_34 = bigint_nondet_quot!(ctx, x2670, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x2670, bigint_mul!(x2671, x3, 66), 66),
        276359,
        4,
    )?;
    let x2672: BytePoly_64 = bigint_mul!(x2669, x2669, 64);
    let x2673: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x2672, x2644, 64), x3, 64),
            x2657,
            64
        ),
        x3,
        64
    );
    let x2674: BytePoly_34 = bigint_nondet_quot!(ctx, x2673, x3, 34);
    let x2675: BytePoly_32 = bigint_nondet_rem!(ctx, x2673, x3, 32);
    let x2676: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x2669, x2675, 64),
                        bigint_add!(
                            bigint_sub!(x2646, bigint_mul!(x2669, x2644, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x2677: BytePoly_34 = bigint_nondet_quot!(ctx, x2676, x3, 34);
    let x2678: BytePoly_32 = bigint_nondet_rem!(ctx, x2676, x3, 32);
    let x2679: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2672, bigint_mul!(x2674, x3, 66), 66),
                        x2644,
                        66
                    ),
                    x2657,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x2675,
        66
    );
    eqz(ctx, &x2679, 276359, 4)?;
    let x2680: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x2677, x3, 66), x2678, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2669, bigint_sub!(x2644, x2675, 32), 64),
                        x2646,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x2680, 276359, 4)?;
    let x2681: BytePoly_33 = bigint_add!(
        bigint_mul!(x2675, x2661, 33),
        bigint_mul!(x2644, x2663, 33),
        33
    );
    let x2682: BytePoly_33 = bigint_add!(
        bigint_mul!(x2678, x2661, 33),
        bigint_mul!(x2646, x2663, 33),
        33
    );
    let x2683: BytePoly_3 = bigint_nondet_quot!(ctx, x2681, x3, 3);
    let x2684: BytePoly_32 = bigint_nondet_rem!(ctx, x2681, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2683, x3, 35), x2684, 35),
            x2681,
            35
        ),
        260103,
        4,
    )?;
    let x2685: BytePoly_3 = bigint_nondet_quot!(ctx, x2682, x3, 3);
    let x2686: BytePoly_32 = bigint_nondet_rem!(ctx, x2682, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2685, x3, 35), x2686, 35),
            x2682,
            35
        ),
        260103,
        4,
    )?;
    let x2687: BytePoly_64 = bigint_mul!(x2657, x2657, 64);
    let x2688: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x2687, x2687, 64), x2687, 64),
        x2,
        64
    );
    let x2689: BytePoly_64 = bigint_add!(x48, x2688, 64);
    let x2690: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x2660, x2660, 32), x3, 32);
    let x2691: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2688, x2690, 96), x3, 32);
    let x2692: BytePoly_64 = bigint_mul!(x2660, x2691, 64);
    let x2693: BytePoly_64 = bigint_add!(x2692, x2692, 64);
    let x2694: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x2689, x2693, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2694, x3, 66), x2693, 66),
            x2689,
            66
        ),
        276359,
        4,
    )?;
    let x2695: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2691, x2691, 64), x3, 64), x3, 64),
            x2657,
            64
        ),
        x2657,
        64
    );
    let x2696: BytePoly_34 = bigint_nondet_quot!(ctx, x2695, x3, 34);
    let x2697: BytePoly_32 = bigint_nondet_rem!(ctx, x2695, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2696, x3, 66), x2697, 66),
            x2695,
            66
        ),
        276359,
        4,
    )?;
    let x2698: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x2691, x2697, 64), 64), x3, 64),
            x2660,
            64
        ),
        bigint_mul!(x2691, x2657, 64),
        64
    );
    let x2699: BytePoly_34 = bigint_nondet_quot!(ctx, x2698, x3, 34);
    let x2700: BytePoly_32 = bigint_nondet_rem!(ctx, x2698, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2699, x3, 66), x2700, 66),
            x2698,
            66
        ),
        276359,
        4,
    )?;
    let x2701: BytePoly_1 = bigint_nondet_rem!(ctx, x2662, x4, 1);
    let x2702: BytePoly_32 = bigint_nondet_quot!(ctx, x2662, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2702, x4, 33), x2701, 33),
            x2662,
            33
        ),
        260103,
        4,
    )?;
    let x2703: BytePoly_1 = bigint_sub!(x5, x2701, 1);
    eqz(ctx, &bigint_mul!(x2701, x2703, 2), 8131, 2)?;
    let x2704: BytePoly_32 = bigint_add!(bigint_sub!(x2700, x2686, 32), x3, 32);
    let x2705: BytePoly_32 = bigint_add!(bigint_sub!(x2697, x2684, 32), x3, 32);
    let x2706: BytePoly_32 = bigint_nondet_inv!(ctx, x2705, x3, 32);
    let x2707: BytePoly_64 = bigint_mul!(x2705, x2706, 64);
    let x2708: BytePoly_34 = bigint_nondet_quot!(ctx, x2707, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x2707, bigint_mul!(x2708, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x2709: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2704, x2706, 64), x3, 32);
    let x2710: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x2709, x2705, 64), x2704, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x2711: BytePoly_34 = bigint_nondet_quot!(ctx, x2710, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x2710, bigint_mul!(x2711, x3, 66), 66),
        276359,
        4,
    )?;
    let x2712: BytePoly_64 = bigint_mul!(x2709, x2709, 64);
    let x2713: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x2712, x2684, 64), x3, 64),
            x2697,
            64
        ),
        x3,
        64
    );
    let x2714: BytePoly_34 = bigint_nondet_quot!(ctx, x2713, x3, 34);
    let x2715: BytePoly_32 = bigint_nondet_rem!(ctx, x2713, x3, 32);
    let x2716: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x2709, x2715, 64),
                        bigint_add!(
                            bigint_sub!(x2686, bigint_mul!(x2709, x2684, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x2717: BytePoly_34 = bigint_nondet_quot!(ctx, x2716, x3, 34);
    let x2718: BytePoly_32 = bigint_nondet_rem!(ctx, x2716, x3, 32);
    let x2719: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2712, bigint_mul!(x2714, x3, 66), 66),
                        x2684,
                        66
                    ),
                    x2697,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x2715,
        66
    );
    eqz(ctx, &x2719, 276359, 4)?;
    let x2720: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x2717, x3, 66), x2718, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2709, bigint_sub!(x2684, x2715, 32), 64),
                        x2686,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x2720, 276359, 4)?;
    let x2721: BytePoly_33 = bigint_add!(
        bigint_mul!(x2715, x2701, 33),
        bigint_mul!(x2684, x2703, 33),
        33
    );
    let x2722: BytePoly_33 = bigint_add!(
        bigint_mul!(x2718, x2701, 33),
        bigint_mul!(x2686, x2703, 33),
        33
    );
    let x2723: BytePoly_3 = bigint_nondet_quot!(ctx, x2721, x3, 3);
    let x2724: BytePoly_32 = bigint_nondet_rem!(ctx, x2721, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2723, x3, 35), x2724, 35),
            x2721,
            35
        ),
        260103,
        4,
    )?;
    let x2725: BytePoly_3 = bigint_nondet_quot!(ctx, x2722, x3, 3);
    let x2726: BytePoly_32 = bigint_nondet_rem!(ctx, x2722, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2725, x3, 35), x2726, 35),
            x2722,
            35
        ),
        260103,
        4,
    )?;
    let x2727: BytePoly_64 = bigint_mul!(x2697, x2697, 64);
    let x2728: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x2727, x2727, 64), x2727, 64),
        x2,
        64
    );
    let x2729: BytePoly_64 = bigint_add!(x48, x2728, 64);
    let x2730: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x2700, x2700, 32), x3, 32);
    let x2731: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2728, x2730, 96), x3, 32);
    let x2732: BytePoly_64 = bigint_mul!(x2700, x2731, 64);
    let x2733: BytePoly_64 = bigint_add!(x2732, x2732, 64);
    let x2734: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x2729, x2733, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2734, x3, 66), x2733, 66),
            x2729,
            66
        ),
        276359,
        4,
    )?;
    let x2735: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2731, x2731, 64), x3, 64), x3, 64),
            x2697,
            64
        ),
        x2697,
        64
    );
    let x2736: BytePoly_34 = bigint_nondet_quot!(ctx, x2735, x3, 34);
    let x2737: BytePoly_32 = bigint_nondet_rem!(ctx, x2735, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2736, x3, 66), x2737, 66),
            x2735,
            66
        ),
        276359,
        4,
    )?;
    let x2738: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x2731, x2737, 64), 64), x3, 64),
            x2700,
            64
        ),
        bigint_mul!(x2731, x2697, 64),
        64
    );
    let x2739: BytePoly_34 = bigint_nondet_quot!(ctx, x2738, x3, 34);
    let x2740: BytePoly_32 = bigint_nondet_rem!(ctx, x2738, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2739, x3, 66), x2740, 66),
            x2738,
            66
        ),
        276359,
        4,
    )?;
    let x2741: BytePoly_1 = bigint_nondet_rem!(ctx, x2702, x4, 1);
    let x2742: BytePoly_32 = bigint_nondet_quot!(ctx, x2702, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2742, x4, 33), x2741, 33),
            x2702,
            33
        ),
        260103,
        4,
    )?;
    let x2743: BytePoly_1 = bigint_sub!(x5, x2741, 1);
    eqz(ctx, &bigint_mul!(x2741, x2743, 2), 8131, 2)?;
    let x2744: BytePoly_32 = bigint_add!(bigint_sub!(x2740, x2726, 32), x3, 32);
    let x2745: BytePoly_32 = bigint_add!(bigint_sub!(x2737, x2724, 32), x3, 32);
    let x2746: BytePoly_32 = bigint_nondet_inv!(ctx, x2745, x3, 32);
    let x2747: BytePoly_64 = bigint_mul!(x2745, x2746, 64);
    let x2748: BytePoly_34 = bigint_nondet_quot!(ctx, x2747, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x2747, bigint_mul!(x2748, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x2749: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2744, x2746, 64), x3, 32);
    let x2750: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x2749, x2745, 64), x2744, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x2751: BytePoly_34 = bigint_nondet_quot!(ctx, x2750, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x2750, bigint_mul!(x2751, x3, 66), 66),
        276359,
        4,
    )?;
    let x2752: BytePoly_64 = bigint_mul!(x2749, x2749, 64);
    let x2753: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x2752, x2724, 64), x3, 64),
            x2737,
            64
        ),
        x3,
        64
    );
    let x2754: BytePoly_34 = bigint_nondet_quot!(ctx, x2753, x3, 34);
    let x2755: BytePoly_32 = bigint_nondet_rem!(ctx, x2753, x3, 32);
    let x2756: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x2749, x2755, 64),
                        bigint_add!(
                            bigint_sub!(x2726, bigint_mul!(x2749, x2724, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x2757: BytePoly_34 = bigint_nondet_quot!(ctx, x2756, x3, 34);
    let x2758: BytePoly_32 = bigint_nondet_rem!(ctx, x2756, x3, 32);
    let x2759: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2752, bigint_mul!(x2754, x3, 66), 66),
                        x2724,
                        66
                    ),
                    x2737,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x2755,
        66
    );
    eqz(ctx, &x2759, 276359, 4)?;
    let x2760: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x2757, x3, 66), x2758, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2749, bigint_sub!(x2724, x2755, 32), 64),
                        x2726,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x2760, 276359, 4)?;
    let x2761: BytePoly_33 = bigint_add!(
        bigint_mul!(x2755, x2741, 33),
        bigint_mul!(x2724, x2743, 33),
        33
    );
    let x2762: BytePoly_33 = bigint_add!(
        bigint_mul!(x2758, x2741, 33),
        bigint_mul!(x2726, x2743, 33),
        33
    );
    let x2763: BytePoly_3 = bigint_nondet_quot!(ctx, x2761, x3, 3);
    let x2764: BytePoly_32 = bigint_nondet_rem!(ctx, x2761, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2763, x3, 35), x2764, 35),
            x2761,
            35
        ),
        260103,
        4,
    )?;
    let x2765: BytePoly_3 = bigint_nondet_quot!(ctx, x2762, x3, 3);
    let x2766: BytePoly_32 = bigint_nondet_rem!(ctx, x2762, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2765, x3, 35), x2766, 35),
            x2762,
            35
        ),
        260103,
        4,
    )?;
    let x2767: BytePoly_64 = bigint_mul!(x2737, x2737, 64);
    let x2768: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x2767, x2767, 64), x2767, 64),
        x2,
        64
    );
    let x2769: BytePoly_64 = bigint_add!(x48, x2768, 64);
    let x2770: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x2740, x2740, 32), x3, 32);
    let x2771: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2768, x2770, 96), x3, 32);
    let x2772: BytePoly_64 = bigint_mul!(x2740, x2771, 64);
    let x2773: BytePoly_64 = bigint_add!(x2772, x2772, 64);
    let x2774: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x2769, x2773, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2774, x3, 66), x2773, 66),
            x2769,
            66
        ),
        276359,
        4,
    )?;
    let x2775: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2771, x2771, 64), x3, 64), x3, 64),
            x2737,
            64
        ),
        x2737,
        64
    );
    let x2776: BytePoly_34 = bigint_nondet_quot!(ctx, x2775, x3, 34);
    let x2777: BytePoly_32 = bigint_nondet_rem!(ctx, x2775, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2776, x3, 66), x2777, 66),
            x2775,
            66
        ),
        276359,
        4,
    )?;
    let x2778: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x2771, x2777, 64), 64), x3, 64),
            x2740,
            64
        ),
        bigint_mul!(x2771, x2737, 64),
        64
    );
    let x2779: BytePoly_34 = bigint_nondet_quot!(ctx, x2778, x3, 34);
    let x2780: BytePoly_32 = bigint_nondet_rem!(ctx, x2778, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2779, x3, 66), x2780, 66),
            x2778,
            66
        ),
        276359,
        4,
    )?;
    let x2781: BytePoly_1 = bigint_nondet_rem!(ctx, x2742, x4, 1);
    let x2782: BytePoly_32 = bigint_nondet_quot!(ctx, x2742, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2782, x4, 33), x2781, 33),
            x2742,
            33
        ),
        260103,
        4,
    )?;
    let x2783: BytePoly_1 = bigint_sub!(x5, x2781, 1);
    eqz(ctx, &bigint_mul!(x2781, x2783, 2), 8131, 2)?;
    let x2784: BytePoly_32 = bigint_add!(bigint_sub!(x2780, x2766, 32), x3, 32);
    let x2785: BytePoly_32 = bigint_add!(bigint_sub!(x2777, x2764, 32), x3, 32);
    let x2786: BytePoly_32 = bigint_nondet_inv!(ctx, x2785, x3, 32);
    let x2787: BytePoly_64 = bigint_mul!(x2785, x2786, 64);
    let x2788: BytePoly_34 = bigint_nondet_quot!(ctx, x2787, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x2787, bigint_mul!(x2788, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x2789: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2784, x2786, 64), x3, 32);
    let x2790: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x2789, x2785, 64), x2784, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x2791: BytePoly_34 = bigint_nondet_quot!(ctx, x2790, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x2790, bigint_mul!(x2791, x3, 66), 66),
        276359,
        4,
    )?;
    let x2792: BytePoly_64 = bigint_mul!(x2789, x2789, 64);
    let x2793: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x2792, x2764, 64), x3, 64),
            x2777,
            64
        ),
        x3,
        64
    );
    let x2794: BytePoly_34 = bigint_nondet_quot!(ctx, x2793, x3, 34);
    let x2795: BytePoly_32 = bigint_nondet_rem!(ctx, x2793, x3, 32);
    let x2796: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x2789, x2795, 64),
                        bigint_add!(
                            bigint_sub!(x2766, bigint_mul!(x2789, x2764, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x2797: BytePoly_34 = bigint_nondet_quot!(ctx, x2796, x3, 34);
    let x2798: BytePoly_32 = bigint_nondet_rem!(ctx, x2796, x3, 32);
    let x2799: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2792, bigint_mul!(x2794, x3, 66), 66),
                        x2764,
                        66
                    ),
                    x2777,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x2795,
        66
    );
    eqz(ctx, &x2799, 276359, 4)?;
    let x2800: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x2797, x3, 66), x2798, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2789, bigint_sub!(x2764, x2795, 32), 64),
                        x2766,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x2800, 276359, 4)?;
    let x2801: BytePoly_33 = bigint_add!(
        bigint_mul!(x2795, x2781, 33),
        bigint_mul!(x2764, x2783, 33),
        33
    );
    let x2802: BytePoly_33 = bigint_add!(
        bigint_mul!(x2798, x2781, 33),
        bigint_mul!(x2766, x2783, 33),
        33
    );
    let x2803: BytePoly_3 = bigint_nondet_quot!(ctx, x2801, x3, 3);
    let x2804: BytePoly_32 = bigint_nondet_rem!(ctx, x2801, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2803, x3, 35), x2804, 35),
            x2801,
            35
        ),
        260103,
        4,
    )?;
    let x2805: BytePoly_3 = bigint_nondet_quot!(ctx, x2802, x3, 3);
    let x2806: BytePoly_32 = bigint_nondet_rem!(ctx, x2802, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2805, x3, 35), x2806, 35),
            x2802,
            35
        ),
        260103,
        4,
    )?;
    let x2807: BytePoly_64 = bigint_mul!(x2777, x2777, 64);
    let x2808: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x2807, x2807, 64), x2807, 64),
        x2,
        64
    );
    let x2809: BytePoly_64 = bigint_add!(x48, x2808, 64);
    let x2810: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x2780, x2780, 32), x3, 32);
    let x2811: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2808, x2810, 96), x3, 32);
    let x2812: BytePoly_64 = bigint_mul!(x2780, x2811, 64);
    let x2813: BytePoly_64 = bigint_add!(x2812, x2812, 64);
    let x2814: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x2809, x2813, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2814, x3, 66), x2813, 66),
            x2809,
            66
        ),
        276359,
        4,
    )?;
    let x2815: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2811, x2811, 64), x3, 64), x3, 64),
            x2777,
            64
        ),
        x2777,
        64
    );
    let x2816: BytePoly_34 = bigint_nondet_quot!(ctx, x2815, x3, 34);
    let x2817: BytePoly_32 = bigint_nondet_rem!(ctx, x2815, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2816, x3, 66), x2817, 66),
            x2815,
            66
        ),
        276359,
        4,
    )?;
    let x2818: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x2811, x2817, 64), 64), x3, 64),
            x2780,
            64
        ),
        bigint_mul!(x2811, x2777, 64),
        64
    );
    let x2819: BytePoly_34 = bigint_nondet_quot!(ctx, x2818, x3, 34);
    let x2820: BytePoly_32 = bigint_nondet_rem!(ctx, x2818, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2819, x3, 66), x2820, 66),
            x2818,
            66
        ),
        276359,
        4,
    )?;
    let x2821: BytePoly_1 = bigint_nondet_rem!(ctx, x2782, x4, 1);
    let x2822: BytePoly_32 = bigint_nondet_quot!(ctx, x2782, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2822, x4, 33), x2821, 33),
            x2782,
            33
        ),
        260103,
        4,
    )?;
    let x2823: BytePoly_1 = bigint_sub!(x5, x2821, 1);
    eqz(ctx, &bigint_mul!(x2821, x2823, 2), 8131, 2)?;
    let x2824: BytePoly_32 = bigint_add!(bigint_sub!(x2820, x2806, 32), x3, 32);
    let x2825: BytePoly_32 = bigint_add!(bigint_sub!(x2817, x2804, 32), x3, 32);
    let x2826: BytePoly_32 = bigint_nondet_inv!(ctx, x2825, x3, 32);
    let x2827: BytePoly_64 = bigint_mul!(x2825, x2826, 64);
    let x2828: BytePoly_34 = bigint_nondet_quot!(ctx, x2827, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x2827, bigint_mul!(x2828, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x2829: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2824, x2826, 64), x3, 32);
    let x2830: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x2829, x2825, 64), x2824, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x2831: BytePoly_34 = bigint_nondet_quot!(ctx, x2830, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x2830, bigint_mul!(x2831, x3, 66), 66),
        276359,
        4,
    )?;
    let x2832: BytePoly_64 = bigint_mul!(x2829, x2829, 64);
    let x2833: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x2832, x2804, 64), x3, 64),
            x2817,
            64
        ),
        x3,
        64
    );
    let x2834: BytePoly_34 = bigint_nondet_quot!(ctx, x2833, x3, 34);
    let x2835: BytePoly_32 = bigint_nondet_rem!(ctx, x2833, x3, 32);
    let x2836: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x2829, x2835, 64),
                        bigint_add!(
                            bigint_sub!(x2806, bigint_mul!(x2829, x2804, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x2837: BytePoly_34 = bigint_nondet_quot!(ctx, x2836, x3, 34);
    let x2838: BytePoly_32 = bigint_nondet_rem!(ctx, x2836, x3, 32);
    let x2839: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2832, bigint_mul!(x2834, x3, 66), 66),
                        x2804,
                        66
                    ),
                    x2817,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x2835,
        66
    );
    eqz(ctx, &x2839, 276359, 4)?;
    let x2840: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x2837, x3, 66), x2838, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2829, bigint_sub!(x2804, x2835, 32), 64),
                        x2806,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x2840, 276359, 4)?;
    let x2841: BytePoly_33 = bigint_add!(
        bigint_mul!(x2835, x2821, 33),
        bigint_mul!(x2804, x2823, 33),
        33
    );
    let x2842: BytePoly_33 = bigint_add!(
        bigint_mul!(x2838, x2821, 33),
        bigint_mul!(x2806, x2823, 33),
        33
    );
    let x2843: BytePoly_3 = bigint_nondet_quot!(ctx, x2841, x3, 3);
    let x2844: BytePoly_32 = bigint_nondet_rem!(ctx, x2841, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2843, x3, 35), x2844, 35),
            x2841,
            35
        ),
        260103,
        4,
    )?;
    let x2845: BytePoly_3 = bigint_nondet_quot!(ctx, x2842, x3, 3);
    let x2846: BytePoly_32 = bigint_nondet_rem!(ctx, x2842, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2845, x3, 35), x2846, 35),
            x2842,
            35
        ),
        260103,
        4,
    )?;
    let x2847: BytePoly_64 = bigint_mul!(x2817, x2817, 64);
    let x2848: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x2847, x2847, 64), x2847, 64),
        x2,
        64
    );
    let x2849: BytePoly_64 = bigint_add!(x48, x2848, 64);
    let x2850: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x2820, x2820, 32), x3, 32);
    let x2851: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2848, x2850, 96), x3, 32);
    let x2852: BytePoly_64 = bigint_mul!(x2820, x2851, 64);
    let x2853: BytePoly_64 = bigint_add!(x2852, x2852, 64);
    let x2854: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x2849, x2853, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2854, x3, 66), x2853, 66),
            x2849,
            66
        ),
        276359,
        4,
    )?;
    let x2855: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2851, x2851, 64), x3, 64), x3, 64),
            x2817,
            64
        ),
        x2817,
        64
    );
    let x2856: BytePoly_34 = bigint_nondet_quot!(ctx, x2855, x3, 34);
    let x2857: BytePoly_32 = bigint_nondet_rem!(ctx, x2855, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2856, x3, 66), x2857, 66),
            x2855,
            66
        ),
        276359,
        4,
    )?;
    let x2858: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x2851, x2857, 64), 64), x3, 64),
            x2820,
            64
        ),
        bigint_mul!(x2851, x2817, 64),
        64
    );
    let x2859: BytePoly_34 = bigint_nondet_quot!(ctx, x2858, x3, 34);
    let x2860: BytePoly_32 = bigint_nondet_rem!(ctx, x2858, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2859, x3, 66), x2860, 66),
            x2858,
            66
        ),
        276359,
        4,
    )?;
    let x2861: BytePoly_1 = bigint_nondet_rem!(ctx, x2822, x4, 1);
    let x2862: BytePoly_32 = bigint_nondet_quot!(ctx, x2822, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2862, x4, 33), x2861, 33),
            x2822,
            33
        ),
        260103,
        4,
    )?;
    let x2863: BytePoly_1 = bigint_sub!(x5, x2861, 1);
    eqz(ctx, &bigint_mul!(x2861, x2863, 2), 8131, 2)?;
    let x2864: BytePoly_32 = bigint_add!(bigint_sub!(x2860, x2846, 32), x3, 32);
    let x2865: BytePoly_32 = bigint_add!(bigint_sub!(x2857, x2844, 32), x3, 32);
    let x2866: BytePoly_32 = bigint_nondet_inv!(ctx, x2865, x3, 32);
    let x2867: BytePoly_64 = bigint_mul!(x2865, x2866, 64);
    let x2868: BytePoly_34 = bigint_nondet_quot!(ctx, x2867, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x2867, bigint_mul!(x2868, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x2869: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2864, x2866, 64), x3, 32);
    let x2870: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x2869, x2865, 64), x2864, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x2871: BytePoly_34 = bigint_nondet_quot!(ctx, x2870, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x2870, bigint_mul!(x2871, x3, 66), 66),
        276359,
        4,
    )?;
    let x2872: BytePoly_64 = bigint_mul!(x2869, x2869, 64);
    let x2873: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x2872, x2844, 64), x3, 64),
            x2857,
            64
        ),
        x3,
        64
    );
    let x2874: BytePoly_34 = bigint_nondet_quot!(ctx, x2873, x3, 34);
    let x2875: BytePoly_32 = bigint_nondet_rem!(ctx, x2873, x3, 32);
    let x2876: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x2869, x2875, 64),
                        bigint_add!(
                            bigint_sub!(x2846, bigint_mul!(x2869, x2844, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x2877: BytePoly_34 = bigint_nondet_quot!(ctx, x2876, x3, 34);
    let x2878: BytePoly_32 = bigint_nondet_rem!(ctx, x2876, x3, 32);
    let x2879: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2872, bigint_mul!(x2874, x3, 66), 66),
                        x2844,
                        66
                    ),
                    x2857,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x2875,
        66
    );
    eqz(ctx, &x2879, 276359, 4)?;
    let x2880: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x2877, x3, 66), x2878, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2869, bigint_sub!(x2844, x2875, 32), 64),
                        x2846,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x2880, 276359, 4)?;
    let x2881: BytePoly_33 = bigint_add!(
        bigint_mul!(x2875, x2861, 33),
        bigint_mul!(x2844, x2863, 33),
        33
    );
    let x2882: BytePoly_33 = bigint_add!(
        bigint_mul!(x2878, x2861, 33),
        bigint_mul!(x2846, x2863, 33),
        33
    );
    let x2883: BytePoly_3 = bigint_nondet_quot!(ctx, x2881, x3, 3);
    let x2884: BytePoly_32 = bigint_nondet_rem!(ctx, x2881, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2883, x3, 35), x2884, 35),
            x2881,
            35
        ),
        260103,
        4,
    )?;
    let x2885: BytePoly_3 = bigint_nondet_quot!(ctx, x2882, x3, 3);
    let x2886: BytePoly_32 = bigint_nondet_rem!(ctx, x2882, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2885, x3, 35), x2886, 35),
            x2882,
            35
        ),
        260103,
        4,
    )?;
    let x2887: BytePoly_64 = bigint_mul!(x2857, x2857, 64);
    let x2888: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x2887, x2887, 64), x2887, 64),
        x2,
        64
    );
    let x2889: BytePoly_64 = bigint_add!(x48, x2888, 64);
    let x2890: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x2860, x2860, 32), x3, 32);
    let x2891: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2888, x2890, 96), x3, 32);
    let x2892: BytePoly_64 = bigint_mul!(x2860, x2891, 64);
    let x2893: BytePoly_64 = bigint_add!(x2892, x2892, 64);
    let x2894: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x2889, x2893, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2894, x3, 66), x2893, 66),
            x2889,
            66
        ),
        276359,
        4,
    )?;
    let x2895: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2891, x2891, 64), x3, 64), x3, 64),
            x2857,
            64
        ),
        x2857,
        64
    );
    let x2896: BytePoly_34 = bigint_nondet_quot!(ctx, x2895, x3, 34);
    let x2897: BytePoly_32 = bigint_nondet_rem!(ctx, x2895, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2896, x3, 66), x2897, 66),
            x2895,
            66
        ),
        276359,
        4,
    )?;
    let x2898: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x2891, x2897, 64), 64), x3, 64),
            x2860,
            64
        ),
        bigint_mul!(x2891, x2857, 64),
        64
    );
    let x2899: BytePoly_34 = bigint_nondet_quot!(ctx, x2898, x3, 34);
    let x2900: BytePoly_32 = bigint_nondet_rem!(ctx, x2898, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2899, x3, 66), x2900, 66),
            x2898,
            66
        ),
        276359,
        4,
    )?;
    let x2901: BytePoly_1 = bigint_nondet_rem!(ctx, x2862, x4, 1);
    let x2902: BytePoly_32 = bigint_nondet_quot!(ctx, x2862, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2902, x4, 33), x2901, 33),
            x2862,
            33
        ),
        260103,
        4,
    )?;
    let x2903: BytePoly_1 = bigint_sub!(x5, x2901, 1);
    eqz(ctx, &bigint_mul!(x2901, x2903, 2), 8131, 2)?;
    let x2904: BytePoly_32 = bigint_add!(bigint_sub!(x2900, x2886, 32), x3, 32);
    let x2905: BytePoly_32 = bigint_add!(bigint_sub!(x2897, x2884, 32), x3, 32);
    let x2906: BytePoly_32 = bigint_nondet_inv!(ctx, x2905, x3, 32);
    let x2907: BytePoly_64 = bigint_mul!(x2905, x2906, 64);
    let x2908: BytePoly_34 = bigint_nondet_quot!(ctx, x2907, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x2907, bigint_mul!(x2908, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x2909: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2904, x2906, 64), x3, 32);
    let x2910: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x2909, x2905, 64), x2904, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x2911: BytePoly_34 = bigint_nondet_quot!(ctx, x2910, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x2910, bigint_mul!(x2911, x3, 66), 66),
        276359,
        4,
    )?;
    let x2912: BytePoly_64 = bigint_mul!(x2909, x2909, 64);
    let x2913: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x2912, x2884, 64), x3, 64),
            x2897,
            64
        ),
        x3,
        64
    );
    let x2914: BytePoly_34 = bigint_nondet_quot!(ctx, x2913, x3, 34);
    let x2915: BytePoly_32 = bigint_nondet_rem!(ctx, x2913, x3, 32);
    let x2916: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x2909, x2915, 64),
                        bigint_add!(
                            bigint_sub!(x2886, bigint_mul!(x2909, x2884, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x2917: BytePoly_34 = bigint_nondet_quot!(ctx, x2916, x3, 34);
    let x2918: BytePoly_32 = bigint_nondet_rem!(ctx, x2916, x3, 32);
    let x2919: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2912, bigint_mul!(x2914, x3, 66), 66),
                        x2884,
                        66
                    ),
                    x2897,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x2915,
        66
    );
    eqz(ctx, &x2919, 276359, 4)?;
    let x2920: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x2917, x3, 66), x2918, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2909, bigint_sub!(x2884, x2915, 32), 64),
                        x2886,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x2920, 276359, 4)?;
    let x2921: BytePoly_33 = bigint_add!(
        bigint_mul!(x2915, x2901, 33),
        bigint_mul!(x2884, x2903, 33),
        33
    );
    let x2922: BytePoly_33 = bigint_add!(
        bigint_mul!(x2918, x2901, 33),
        bigint_mul!(x2886, x2903, 33),
        33
    );
    let x2923: BytePoly_3 = bigint_nondet_quot!(ctx, x2921, x3, 3);
    let x2924: BytePoly_32 = bigint_nondet_rem!(ctx, x2921, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2923, x3, 35), x2924, 35),
            x2921,
            35
        ),
        260103,
        4,
    )?;
    let x2925: BytePoly_3 = bigint_nondet_quot!(ctx, x2922, x3, 3);
    let x2926: BytePoly_32 = bigint_nondet_rem!(ctx, x2922, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2925, x3, 35), x2926, 35),
            x2922,
            35
        ),
        260103,
        4,
    )?;
    let x2927: BytePoly_64 = bigint_mul!(x2897, x2897, 64);
    let x2928: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x2927, x2927, 64), x2927, 64),
        x2,
        64
    );
    let x2929: BytePoly_64 = bigint_add!(x48, x2928, 64);
    let x2930: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x2900, x2900, 32), x3, 32);
    let x2931: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2928, x2930, 96), x3, 32);
    let x2932: BytePoly_64 = bigint_mul!(x2900, x2931, 64);
    let x2933: BytePoly_64 = bigint_add!(x2932, x2932, 64);
    let x2934: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x2929, x2933, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2934, x3, 66), x2933, 66),
            x2929,
            66
        ),
        276359,
        4,
    )?;
    let x2935: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2931, x2931, 64), x3, 64), x3, 64),
            x2897,
            64
        ),
        x2897,
        64
    );
    let x2936: BytePoly_34 = bigint_nondet_quot!(ctx, x2935, x3, 34);
    let x2937: BytePoly_32 = bigint_nondet_rem!(ctx, x2935, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2936, x3, 66), x2937, 66),
            x2935,
            66
        ),
        276359,
        4,
    )?;
    let x2938: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x2931, x2937, 64), 64), x3, 64),
            x2900,
            64
        ),
        bigint_mul!(x2931, x2897, 64),
        64
    );
    let x2939: BytePoly_34 = bigint_nondet_quot!(ctx, x2938, x3, 34);
    let x2940: BytePoly_32 = bigint_nondet_rem!(ctx, x2938, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2939, x3, 66), x2940, 66),
            x2938,
            66
        ),
        276359,
        4,
    )?;
    let x2941: BytePoly_1 = bigint_nondet_rem!(ctx, x2902, x4, 1);
    let x2942: BytePoly_32 = bigint_nondet_quot!(ctx, x2902, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2942, x4, 33), x2941, 33),
            x2902,
            33
        ),
        260103,
        4,
    )?;
    let x2943: BytePoly_1 = bigint_sub!(x5, x2941, 1);
    eqz(ctx, &bigint_mul!(x2941, x2943, 2), 8131, 2)?;
    let x2944: BytePoly_32 = bigint_add!(bigint_sub!(x2940, x2926, 32), x3, 32);
    let x2945: BytePoly_32 = bigint_add!(bigint_sub!(x2937, x2924, 32), x3, 32);
    let x2946: BytePoly_32 = bigint_nondet_inv!(ctx, x2945, x3, 32);
    let x2947: BytePoly_64 = bigint_mul!(x2945, x2946, 64);
    let x2948: BytePoly_34 = bigint_nondet_quot!(ctx, x2947, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x2947, bigint_mul!(x2948, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x2949: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2944, x2946, 64), x3, 32);
    let x2950: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x2949, x2945, 64), x2944, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x2951: BytePoly_34 = bigint_nondet_quot!(ctx, x2950, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x2950, bigint_mul!(x2951, x3, 66), 66),
        276359,
        4,
    )?;
    let x2952: BytePoly_64 = bigint_mul!(x2949, x2949, 64);
    let x2953: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x2952, x2924, 64), x3, 64),
            x2937,
            64
        ),
        x3,
        64
    );
    let x2954: BytePoly_34 = bigint_nondet_quot!(ctx, x2953, x3, 34);
    let x2955: BytePoly_32 = bigint_nondet_rem!(ctx, x2953, x3, 32);
    let x2956: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x2949, x2955, 64),
                        bigint_add!(
                            bigint_sub!(x2926, bigint_mul!(x2949, x2924, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x2957: BytePoly_34 = bigint_nondet_quot!(ctx, x2956, x3, 34);
    let x2958: BytePoly_32 = bigint_nondet_rem!(ctx, x2956, x3, 32);
    let x2959: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2952, bigint_mul!(x2954, x3, 66), 66),
                        x2924,
                        66
                    ),
                    x2937,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x2955,
        66
    );
    eqz(ctx, &x2959, 276359, 4)?;
    let x2960: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x2957, x3, 66), x2958, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2949, bigint_sub!(x2924, x2955, 32), 64),
                        x2926,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x2960, 276359, 4)?;
    let x2961: BytePoly_33 = bigint_add!(
        bigint_mul!(x2955, x2941, 33),
        bigint_mul!(x2924, x2943, 33),
        33
    );
    let x2962: BytePoly_33 = bigint_add!(
        bigint_mul!(x2958, x2941, 33),
        bigint_mul!(x2926, x2943, 33),
        33
    );
    let x2963: BytePoly_3 = bigint_nondet_quot!(ctx, x2961, x3, 3);
    let x2964: BytePoly_32 = bigint_nondet_rem!(ctx, x2961, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2963, x3, 35), x2964, 35),
            x2961,
            35
        ),
        260103,
        4,
    )?;
    let x2965: BytePoly_3 = bigint_nondet_quot!(ctx, x2962, x3, 3);
    let x2966: BytePoly_32 = bigint_nondet_rem!(ctx, x2962, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2965, x3, 35), x2966, 35),
            x2962,
            35
        ),
        260103,
        4,
    )?;
    let x2967: BytePoly_64 = bigint_mul!(x2937, x2937, 64);
    let x2968: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x2967, x2967, 64), x2967, 64),
        x2,
        64
    );
    let x2969: BytePoly_64 = bigint_add!(x48, x2968, 64);
    let x2970: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x2940, x2940, 32), x3, 32);
    let x2971: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2968, x2970, 96), x3, 32);
    let x2972: BytePoly_64 = bigint_mul!(x2940, x2971, 64);
    let x2973: BytePoly_64 = bigint_add!(x2972, x2972, 64);
    let x2974: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x2969, x2973, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2974, x3, 66), x2973, 66),
            x2969,
            66
        ),
        276359,
        4,
    )?;
    let x2975: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2971, x2971, 64), x3, 64), x3, 64),
            x2937,
            64
        ),
        x2937,
        64
    );
    let x2976: BytePoly_34 = bigint_nondet_quot!(ctx, x2975, x3, 34);
    let x2977: BytePoly_32 = bigint_nondet_rem!(ctx, x2975, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2976, x3, 66), x2977, 66),
            x2975,
            66
        ),
        276359,
        4,
    )?;
    let x2978: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x2971, x2977, 64), 64), x3, 64),
            x2940,
            64
        ),
        bigint_mul!(x2971, x2937, 64),
        64
    );
    let x2979: BytePoly_34 = bigint_nondet_quot!(ctx, x2978, x3, 34);
    let x2980: BytePoly_32 = bigint_nondet_rem!(ctx, x2978, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2979, x3, 66), x2980, 66),
            x2978,
            66
        ),
        276359,
        4,
    )?;
    let x2981: BytePoly_1 = bigint_nondet_rem!(ctx, x2942, x4, 1);
    let x2982: BytePoly_32 = bigint_nondet_quot!(ctx, x2942, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2982, x4, 33), x2981, 33),
            x2942,
            33
        ),
        260103,
        4,
    )?;
    let x2983: BytePoly_1 = bigint_sub!(x5, x2981, 1);
    eqz(ctx, &bigint_mul!(x2981, x2983, 2), 8131, 2)?;
    let x2984: BytePoly_32 = bigint_add!(bigint_sub!(x2980, x2966, 32), x3, 32);
    let x2985: BytePoly_32 = bigint_add!(bigint_sub!(x2977, x2964, 32), x3, 32);
    let x2986: BytePoly_32 = bigint_nondet_inv!(ctx, x2985, x3, 32);
    let x2987: BytePoly_64 = bigint_mul!(x2985, x2986, 64);
    let x2988: BytePoly_34 = bigint_nondet_quot!(ctx, x2987, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x2987, bigint_mul!(x2988, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x2989: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2984, x2986, 64), x3, 32);
    let x2990: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x2989, x2985, 64), x2984, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x2991: BytePoly_34 = bigint_nondet_quot!(ctx, x2990, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x2990, bigint_mul!(x2991, x3, 66), 66),
        276359,
        4,
    )?;
    let x2992: BytePoly_64 = bigint_mul!(x2989, x2989, 64);
    let x2993: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x2992, x2964, 64), x3, 64),
            x2977,
            64
        ),
        x3,
        64
    );
    let x2994: BytePoly_34 = bigint_nondet_quot!(ctx, x2993, x3, 34);
    let x2995: BytePoly_32 = bigint_nondet_rem!(ctx, x2993, x3, 32);
    let x2996: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x2989, x2995, 64),
                        bigint_add!(
                            bigint_sub!(x2966, bigint_mul!(x2989, x2964, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x2997: BytePoly_34 = bigint_nondet_quot!(ctx, x2996, x3, 34);
    let x2998: BytePoly_32 = bigint_nondet_rem!(ctx, x2996, x3, 32);
    let x2999: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2992, bigint_mul!(x2994, x3, 66), 66),
                        x2964,
                        66
                    ),
                    x2977,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x2995,
        66
    );
    eqz(ctx, &x2999, 276359, 4)?;
    let x3000: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x2997, x3, 66), x2998, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2989, bigint_sub!(x2964, x2995, 32), 64),
                        x2966,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x3000, 276359, 4)?;
    let x3001: BytePoly_33 = bigint_add!(
        bigint_mul!(x2995, x2981, 33),
        bigint_mul!(x2964, x2983, 33),
        33
    );
    let x3002: BytePoly_33 = bigint_add!(
        bigint_mul!(x2998, x2981, 33),
        bigint_mul!(x2966, x2983, 33),
        33
    );
    let x3003: BytePoly_3 = bigint_nondet_quot!(ctx, x3001, x3, 3);
    let x3004: BytePoly_32 = bigint_nondet_rem!(ctx, x3001, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3003, x3, 35), x3004, 35),
            x3001,
            35
        ),
        260103,
        4,
    )?;
    let x3005: BytePoly_3 = bigint_nondet_quot!(ctx, x3002, x3, 3);
    let x3006: BytePoly_32 = bigint_nondet_rem!(ctx, x3002, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3005, x3, 35), x3006, 35),
            x3002,
            35
        ),
        260103,
        4,
    )?;
    let x3007: BytePoly_64 = bigint_mul!(x2977, x2977, 64);
    let x3008: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x3007, x3007, 64), x3007, 64),
        x2,
        64
    );
    let x3009: BytePoly_64 = bigint_add!(x48, x3008, 64);
    let x3010: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x2980, x2980, 32), x3, 32);
    let x3011: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3008, x3010, 96), x3, 32);
    let x3012: BytePoly_64 = bigint_mul!(x2980, x3011, 64);
    let x3013: BytePoly_64 = bigint_add!(x3012, x3012, 64);
    let x3014: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x3009, x3013, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3014, x3, 66), x3013, 66),
            x3009,
            66
        ),
        276359,
        4,
    )?;
    let x3015: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x3011, x3011, 64), x3, 64), x3, 64),
            x2977,
            64
        ),
        x2977,
        64
    );
    let x3016: BytePoly_34 = bigint_nondet_quot!(ctx, x3015, x3, 34);
    let x3017: BytePoly_32 = bigint_nondet_rem!(ctx, x3015, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3016, x3, 66), x3017, 66),
            x3015,
            66
        ),
        276359,
        4,
    )?;
    let x3018: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x3011, x3017, 64), 64), x3, 64),
            x2980,
            64
        ),
        bigint_mul!(x3011, x2977, 64),
        64
    );
    let x3019: BytePoly_34 = bigint_nondet_quot!(ctx, x3018, x3, 34);
    let x3020: BytePoly_32 = bigint_nondet_rem!(ctx, x3018, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3019, x3, 66), x3020, 66),
            x3018,
            66
        ),
        276359,
        4,
    )?;
    let x3021: BytePoly_1 = bigint_nondet_rem!(ctx, x2982, x4, 1);
    let x3022: BytePoly_32 = bigint_nondet_quot!(ctx, x2982, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3022, x4, 33), x3021, 33),
            x2982,
            33
        ),
        260103,
        4,
    )?;
    let x3023: BytePoly_1 = bigint_sub!(x5, x3021, 1);
    eqz(ctx, &bigint_mul!(x3021, x3023, 2), 8131, 2)?;
    let x3024: BytePoly_32 = bigint_add!(bigint_sub!(x3020, x3006, 32), x3, 32);
    let x3025: BytePoly_32 = bigint_add!(bigint_sub!(x3017, x3004, 32), x3, 32);
    let x3026: BytePoly_32 = bigint_nondet_inv!(ctx, x3025, x3, 32);
    let x3027: BytePoly_64 = bigint_mul!(x3025, x3026, 64);
    let x3028: BytePoly_34 = bigint_nondet_quot!(ctx, x3027, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x3027, bigint_mul!(x3028, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x3029: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3024, x3026, 64), x3, 32);
    let x3030: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x3029, x3025, 64), x3024, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x3031: BytePoly_34 = bigint_nondet_quot!(ctx, x3030, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x3030, bigint_mul!(x3031, x3, 66), 66),
        276359,
        4,
    )?;
    let x3032: BytePoly_64 = bigint_mul!(x3029, x3029, 64);
    let x3033: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x3032, x3004, 64), x3, 64),
            x3017,
            64
        ),
        x3,
        64
    );
    let x3034: BytePoly_34 = bigint_nondet_quot!(ctx, x3033, x3, 34);
    let x3035: BytePoly_32 = bigint_nondet_rem!(ctx, x3033, x3, 32);
    let x3036: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x3029, x3035, 64),
                        bigint_add!(
                            bigint_sub!(x3006, bigint_mul!(x3029, x3004, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x3037: BytePoly_34 = bigint_nondet_quot!(ctx, x3036, x3, 34);
    let x3038: BytePoly_32 = bigint_nondet_rem!(ctx, x3036, x3, 32);
    let x3039: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3032, bigint_mul!(x3034, x3, 66), 66),
                        x3004,
                        66
                    ),
                    x3017,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x3035,
        66
    );
    eqz(ctx, &x3039, 276359, 4)?;
    let x3040: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x3037, x3, 66), x3038, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3029, bigint_sub!(x3004, x3035, 32), 64),
                        x3006,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x3040, 276359, 4)?;
    let x3041: BytePoly_33 = bigint_add!(
        bigint_mul!(x3035, x3021, 33),
        bigint_mul!(x3004, x3023, 33),
        33
    );
    let x3042: BytePoly_33 = bigint_add!(
        bigint_mul!(x3038, x3021, 33),
        bigint_mul!(x3006, x3023, 33),
        33
    );
    let x3043: BytePoly_3 = bigint_nondet_quot!(ctx, x3041, x3, 3);
    let x3044: BytePoly_32 = bigint_nondet_rem!(ctx, x3041, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3043, x3, 35), x3044, 35),
            x3041,
            35
        ),
        260103,
        4,
    )?;
    let x3045: BytePoly_3 = bigint_nondet_quot!(ctx, x3042, x3, 3);
    let x3046: BytePoly_32 = bigint_nondet_rem!(ctx, x3042, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3045, x3, 35), x3046, 35),
            x3042,
            35
        ),
        260103,
        4,
    )?;
    let x3047: BytePoly_64 = bigint_mul!(x3017, x3017, 64);
    let x3048: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x3047, x3047, 64), x3047, 64),
        x2,
        64
    );
    let x3049: BytePoly_64 = bigint_add!(x48, x3048, 64);
    let x3050: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x3020, x3020, 32), x3, 32);
    let x3051: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3048, x3050, 96), x3, 32);
    let x3052: BytePoly_64 = bigint_mul!(x3020, x3051, 64);
    let x3053: BytePoly_64 = bigint_add!(x3052, x3052, 64);
    let x3054: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x3049, x3053, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3054, x3, 66), x3053, 66),
            x3049,
            66
        ),
        276359,
        4,
    )?;
    let x3055: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x3051, x3051, 64), x3, 64), x3, 64),
            x3017,
            64
        ),
        x3017,
        64
    );
    let x3056: BytePoly_34 = bigint_nondet_quot!(ctx, x3055, x3, 34);
    let x3057: BytePoly_32 = bigint_nondet_rem!(ctx, x3055, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3056, x3, 66), x3057, 66),
            x3055,
            66
        ),
        276359,
        4,
    )?;
    let x3058: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x3051, x3057, 64), 64), x3, 64),
            x3020,
            64
        ),
        bigint_mul!(x3051, x3017, 64),
        64
    );
    let x3059: BytePoly_34 = bigint_nondet_quot!(ctx, x3058, x3, 34);
    let x3060: BytePoly_32 = bigint_nondet_rem!(ctx, x3058, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3059, x3, 66), x3060, 66),
            x3058,
            66
        ),
        276359,
        4,
    )?;
    let x3061: BytePoly_1 = bigint_nondet_rem!(ctx, x3022, x4, 1);
    let x3062: BytePoly_32 = bigint_nondet_quot!(ctx, x3022, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3062, x4, 33), x3061, 33),
            x3022,
            33
        ),
        260103,
        4,
    )?;
    let x3063: BytePoly_1 = bigint_sub!(x5, x3061, 1);
    eqz(ctx, &bigint_mul!(x3061, x3063, 2), 8131, 2)?;
    let x3064: BytePoly_32 = bigint_add!(bigint_sub!(x3060, x3046, 32), x3, 32);
    let x3065: BytePoly_32 = bigint_add!(bigint_sub!(x3057, x3044, 32), x3, 32);
    let x3066: BytePoly_32 = bigint_nondet_inv!(ctx, x3065, x3, 32);
    let x3067: BytePoly_64 = bigint_mul!(x3065, x3066, 64);
    let x3068: BytePoly_34 = bigint_nondet_quot!(ctx, x3067, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x3067, bigint_mul!(x3068, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x3069: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3064, x3066, 64), x3, 32);
    let x3070: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x3069, x3065, 64), x3064, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x3071: BytePoly_34 = bigint_nondet_quot!(ctx, x3070, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x3070, bigint_mul!(x3071, x3, 66), 66),
        276359,
        4,
    )?;
    let x3072: BytePoly_64 = bigint_mul!(x3069, x3069, 64);
    let x3073: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x3072, x3044, 64), x3, 64),
            x3057,
            64
        ),
        x3,
        64
    );
    let x3074: BytePoly_34 = bigint_nondet_quot!(ctx, x3073, x3, 34);
    let x3075: BytePoly_32 = bigint_nondet_rem!(ctx, x3073, x3, 32);
    let x3076: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x3069, x3075, 64),
                        bigint_add!(
                            bigint_sub!(x3046, bigint_mul!(x3069, x3044, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x3077: BytePoly_34 = bigint_nondet_quot!(ctx, x3076, x3, 34);
    let x3078: BytePoly_32 = bigint_nondet_rem!(ctx, x3076, x3, 32);
    let x3079: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3072, bigint_mul!(x3074, x3, 66), 66),
                        x3044,
                        66
                    ),
                    x3057,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x3075,
        66
    );
    eqz(ctx, &x3079, 276359, 4)?;
    let x3080: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x3077, x3, 66), x3078, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3069, bigint_sub!(x3044, x3075, 32), 64),
                        x3046,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x3080, 276359, 4)?;
    let x3081: BytePoly_33 = bigint_add!(
        bigint_mul!(x3075, x3061, 33),
        bigint_mul!(x3044, x3063, 33),
        33
    );
    let x3082: BytePoly_33 = bigint_add!(
        bigint_mul!(x3078, x3061, 33),
        bigint_mul!(x3046, x3063, 33),
        33
    );
    let x3083: BytePoly_3 = bigint_nondet_quot!(ctx, x3081, x3, 3);
    let x3084: BytePoly_32 = bigint_nondet_rem!(ctx, x3081, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3083, x3, 35), x3084, 35),
            x3081,
            35
        ),
        260103,
        4,
    )?;
    let x3085: BytePoly_3 = bigint_nondet_quot!(ctx, x3082, x3, 3);
    let x3086: BytePoly_32 = bigint_nondet_rem!(ctx, x3082, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3085, x3, 35), x3086, 35),
            x3082,
            35
        ),
        260103,
        4,
    )?;
    let x3087: BytePoly_64 = bigint_mul!(x3057, x3057, 64);
    let x3088: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x3087, x3087, 64), x3087, 64),
        x2,
        64
    );
    let x3089: BytePoly_64 = bigint_add!(x48, x3088, 64);
    let x3090: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x3060, x3060, 32), x3, 32);
    let x3091: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3088, x3090, 96), x3, 32);
    let x3092: BytePoly_64 = bigint_mul!(x3060, x3091, 64);
    let x3093: BytePoly_64 = bigint_add!(x3092, x3092, 64);
    let x3094: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x3089, x3093, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3094, x3, 66), x3093, 66),
            x3089,
            66
        ),
        276359,
        4,
    )?;
    let x3095: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x3091, x3091, 64), x3, 64), x3, 64),
            x3057,
            64
        ),
        x3057,
        64
    );
    let x3096: BytePoly_34 = bigint_nondet_quot!(ctx, x3095, x3, 34);
    let x3097: BytePoly_32 = bigint_nondet_rem!(ctx, x3095, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3096, x3, 66), x3097, 66),
            x3095,
            66
        ),
        276359,
        4,
    )?;
    let x3098: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x3091, x3097, 64), 64), x3, 64),
            x3060,
            64
        ),
        bigint_mul!(x3091, x3057, 64),
        64
    );
    let x3099: BytePoly_34 = bigint_nondet_quot!(ctx, x3098, x3, 34);
    let x3100: BytePoly_32 = bigint_nondet_rem!(ctx, x3098, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3099, x3, 66), x3100, 66),
            x3098,
            66
        ),
        276359,
        4,
    )?;
    let x3101: BytePoly_1 = bigint_nondet_rem!(ctx, x3062, x4, 1);
    let x3102: BytePoly_32 = bigint_nondet_quot!(ctx, x3062, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3102, x4, 33), x3101, 33),
            x3062,
            33
        ),
        260103,
        4,
    )?;
    let x3103: BytePoly_1 = bigint_sub!(x5, x3101, 1);
    eqz(ctx, &bigint_mul!(x3101, x3103, 2), 8131, 2)?;
    let x3104: BytePoly_32 = bigint_add!(bigint_sub!(x3100, x3086, 32), x3, 32);
    let x3105: BytePoly_32 = bigint_add!(bigint_sub!(x3097, x3084, 32), x3, 32);
    let x3106: BytePoly_32 = bigint_nondet_inv!(ctx, x3105, x3, 32);
    let x3107: BytePoly_64 = bigint_mul!(x3105, x3106, 64);
    let x3108: BytePoly_34 = bigint_nondet_quot!(ctx, x3107, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x3107, bigint_mul!(x3108, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x3109: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3104, x3106, 64), x3, 32);
    let x3110: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x3109, x3105, 64), x3104, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x3111: BytePoly_34 = bigint_nondet_quot!(ctx, x3110, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x3110, bigint_mul!(x3111, x3, 66), 66),
        276359,
        4,
    )?;
    let x3112: BytePoly_64 = bigint_mul!(x3109, x3109, 64);
    let x3113: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x3112, x3084, 64), x3, 64),
            x3097,
            64
        ),
        x3,
        64
    );
    let x3114: BytePoly_34 = bigint_nondet_quot!(ctx, x3113, x3, 34);
    let x3115: BytePoly_32 = bigint_nondet_rem!(ctx, x3113, x3, 32);
    let x3116: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x3109, x3115, 64),
                        bigint_add!(
                            bigint_sub!(x3086, bigint_mul!(x3109, x3084, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x3117: BytePoly_34 = bigint_nondet_quot!(ctx, x3116, x3, 34);
    let x3118: BytePoly_32 = bigint_nondet_rem!(ctx, x3116, x3, 32);
    let x3119: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3112, bigint_mul!(x3114, x3, 66), 66),
                        x3084,
                        66
                    ),
                    x3097,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x3115,
        66
    );
    eqz(ctx, &x3119, 276359, 4)?;
    let x3120: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x3117, x3, 66), x3118, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3109, bigint_sub!(x3084, x3115, 32), 64),
                        x3086,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x3120, 276359, 4)?;
    let x3121: BytePoly_33 = bigint_add!(
        bigint_mul!(x3115, x3101, 33),
        bigint_mul!(x3084, x3103, 33),
        33
    );
    let x3122: BytePoly_33 = bigint_add!(
        bigint_mul!(x3118, x3101, 33),
        bigint_mul!(x3086, x3103, 33),
        33
    );
    let x3123: BytePoly_3 = bigint_nondet_quot!(ctx, x3121, x3, 3);
    let x3124: BytePoly_32 = bigint_nondet_rem!(ctx, x3121, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3123, x3, 35), x3124, 35),
            x3121,
            35
        ),
        260103,
        4,
    )?;
    let x3125: BytePoly_3 = bigint_nondet_quot!(ctx, x3122, x3, 3);
    let x3126: BytePoly_32 = bigint_nondet_rem!(ctx, x3122, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3125, x3, 35), x3126, 35),
            x3122,
            35
        ),
        260103,
        4,
    )?;
    let x3127: BytePoly_64 = bigint_mul!(x3097, x3097, 64);
    let x3128: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x3127, x3127, 64), x3127, 64),
        x2,
        64
    );
    let x3129: BytePoly_64 = bigint_add!(x48, x3128, 64);
    let x3130: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x3100, x3100, 32), x3, 32);
    let x3131: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3128, x3130, 96), x3, 32);
    let x3132: BytePoly_64 = bigint_mul!(x3100, x3131, 64);
    let x3133: BytePoly_64 = bigint_add!(x3132, x3132, 64);
    let x3134: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x3129, x3133, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3134, x3, 66), x3133, 66),
            x3129,
            66
        ),
        276359,
        4,
    )?;
    let x3135: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x3131, x3131, 64), x3, 64), x3, 64),
            x3097,
            64
        ),
        x3097,
        64
    );
    let x3136: BytePoly_34 = bigint_nondet_quot!(ctx, x3135, x3, 34);
    let x3137: BytePoly_32 = bigint_nondet_rem!(ctx, x3135, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3136, x3, 66), x3137, 66),
            x3135,
            66
        ),
        276359,
        4,
    )?;
    let x3138: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x3131, x3137, 64), 64), x3, 64),
            x3100,
            64
        ),
        bigint_mul!(x3131, x3097, 64),
        64
    );
    let x3139: BytePoly_34 = bigint_nondet_quot!(ctx, x3138, x3, 34);
    let x3140: BytePoly_32 = bigint_nondet_rem!(ctx, x3138, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3139, x3, 66), x3140, 66),
            x3138,
            66
        ),
        276359,
        4,
    )?;
    let x3141: BytePoly_1 = bigint_nondet_rem!(ctx, x3102, x4, 1);
    let x3142: BytePoly_32 = bigint_nondet_quot!(ctx, x3102, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3142, x4, 33), x3141, 33),
            x3102,
            33
        ),
        260103,
        4,
    )?;
    let x3143: BytePoly_1 = bigint_sub!(x5, x3141, 1);
    eqz(ctx, &bigint_mul!(x3141, x3143, 2), 8131, 2)?;
    let x3144: BytePoly_32 = bigint_add!(bigint_sub!(x3140, x3126, 32), x3, 32);
    let x3145: BytePoly_32 = bigint_add!(bigint_sub!(x3137, x3124, 32), x3, 32);
    let x3146: BytePoly_32 = bigint_nondet_inv!(ctx, x3145, x3, 32);
    let x3147: BytePoly_64 = bigint_mul!(x3145, x3146, 64);
    let x3148: BytePoly_34 = bigint_nondet_quot!(ctx, x3147, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x3147, bigint_mul!(x3148, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x3149: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3144, x3146, 64), x3, 32);
    let x3150: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x3149, x3145, 64), x3144, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x3151: BytePoly_34 = bigint_nondet_quot!(ctx, x3150, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x3150, bigint_mul!(x3151, x3, 66), 66),
        276359,
        4,
    )?;
    let x3152: BytePoly_64 = bigint_mul!(x3149, x3149, 64);
    let x3153: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x3152, x3124, 64), x3, 64),
            x3137,
            64
        ),
        x3,
        64
    );
    let x3154: BytePoly_34 = bigint_nondet_quot!(ctx, x3153, x3, 34);
    let x3155: BytePoly_32 = bigint_nondet_rem!(ctx, x3153, x3, 32);
    let x3156: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x3149, x3155, 64),
                        bigint_add!(
                            bigint_sub!(x3126, bigint_mul!(x3149, x3124, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x3157: BytePoly_34 = bigint_nondet_quot!(ctx, x3156, x3, 34);
    let x3158: BytePoly_32 = bigint_nondet_rem!(ctx, x3156, x3, 32);
    let x3159: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3152, bigint_mul!(x3154, x3, 66), 66),
                        x3124,
                        66
                    ),
                    x3137,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x3155,
        66
    );
    eqz(ctx, &x3159, 276359, 4)?;
    let x3160: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x3157, x3, 66), x3158, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3149, bigint_sub!(x3124, x3155, 32), 64),
                        x3126,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x3160, 276359, 4)?;
    let x3161: BytePoly_33 = bigint_add!(
        bigint_mul!(x3155, x3141, 33),
        bigint_mul!(x3124, x3143, 33),
        33
    );
    let x3162: BytePoly_33 = bigint_add!(
        bigint_mul!(x3158, x3141, 33),
        bigint_mul!(x3126, x3143, 33),
        33
    );
    let x3163: BytePoly_3 = bigint_nondet_quot!(ctx, x3161, x3, 3);
    let x3164: BytePoly_32 = bigint_nondet_rem!(ctx, x3161, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3163, x3, 35), x3164, 35),
            x3161,
            35
        ),
        260103,
        4,
    )?;
    let x3165: BytePoly_3 = bigint_nondet_quot!(ctx, x3162, x3, 3);
    let x3166: BytePoly_32 = bigint_nondet_rem!(ctx, x3162, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3165, x3, 35), x3166, 35),
            x3162,
            35
        ),
        260103,
        4,
    )?;
    let x3167: BytePoly_64 = bigint_mul!(x3137, x3137, 64);
    let x3168: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x3167, x3167, 64), x3167, 64),
        x2,
        64
    );
    let x3169: BytePoly_64 = bigint_add!(x48, x3168, 64);
    let x3170: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x3140, x3140, 32), x3, 32);
    let x3171: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3168, x3170, 96), x3, 32);
    let x3172: BytePoly_64 = bigint_mul!(x3140, x3171, 64);
    let x3173: BytePoly_64 = bigint_add!(x3172, x3172, 64);
    let x3174: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x3169, x3173, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3174, x3, 66), x3173, 66),
            x3169,
            66
        ),
        276359,
        4,
    )?;
    let x3175: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x3171, x3171, 64), x3, 64), x3, 64),
            x3137,
            64
        ),
        x3137,
        64
    );
    let x3176: BytePoly_34 = bigint_nondet_quot!(ctx, x3175, x3, 34);
    let x3177: BytePoly_32 = bigint_nondet_rem!(ctx, x3175, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3176, x3, 66), x3177, 66),
            x3175,
            66
        ),
        276359,
        4,
    )?;
    let x3178: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x3171, x3177, 64), 64), x3, 64),
            x3140,
            64
        ),
        bigint_mul!(x3171, x3137, 64),
        64
    );
    let x3179: BytePoly_34 = bigint_nondet_quot!(ctx, x3178, x3, 34);
    let x3180: BytePoly_32 = bigint_nondet_rem!(ctx, x3178, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3179, x3, 66), x3180, 66),
            x3178,
            66
        ),
        276359,
        4,
    )?;
    let x3181: BytePoly_1 = bigint_nondet_rem!(ctx, x3142, x4, 1);
    let x3182: BytePoly_32 = bigint_nondet_quot!(ctx, x3142, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3182, x4, 33), x3181, 33),
            x3142,
            33
        ),
        260103,
        4,
    )?;
    let x3183: BytePoly_1 = bigint_sub!(x5, x3181, 1);
    eqz(ctx, &bigint_mul!(x3181, x3183, 2), 8131, 2)?;
    let x3184: BytePoly_32 = bigint_add!(bigint_sub!(x3180, x3166, 32), x3, 32);
    let x3185: BytePoly_32 = bigint_add!(bigint_sub!(x3177, x3164, 32), x3, 32);
    let x3186: BytePoly_32 = bigint_nondet_inv!(ctx, x3185, x3, 32);
    let x3187: BytePoly_64 = bigint_mul!(x3185, x3186, 64);
    let x3188: BytePoly_34 = bigint_nondet_quot!(ctx, x3187, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x3187, bigint_mul!(x3188, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x3189: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3184, x3186, 64), x3, 32);
    let x3190: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x3189, x3185, 64), x3184, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x3191: BytePoly_34 = bigint_nondet_quot!(ctx, x3190, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x3190, bigint_mul!(x3191, x3, 66), 66),
        276359,
        4,
    )?;
    let x3192: BytePoly_64 = bigint_mul!(x3189, x3189, 64);
    let x3193: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x3192, x3164, 64), x3, 64),
            x3177,
            64
        ),
        x3,
        64
    );
    let x3194: BytePoly_34 = bigint_nondet_quot!(ctx, x3193, x3, 34);
    let x3195: BytePoly_32 = bigint_nondet_rem!(ctx, x3193, x3, 32);
    let x3196: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x3189, x3195, 64),
                        bigint_add!(
                            bigint_sub!(x3166, bigint_mul!(x3189, x3164, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x3197: BytePoly_34 = bigint_nondet_quot!(ctx, x3196, x3, 34);
    let x3198: BytePoly_32 = bigint_nondet_rem!(ctx, x3196, x3, 32);
    let x3199: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3192, bigint_mul!(x3194, x3, 66), 66),
                        x3164,
                        66
                    ),
                    x3177,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x3195,
        66
    );
    eqz(ctx, &x3199, 276359, 4)?;
    let x3200: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x3197, x3, 66), x3198, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3189, bigint_sub!(x3164, x3195, 32), 64),
                        x3166,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x3200, 276359, 4)?;
    let x3201: BytePoly_33 = bigint_add!(
        bigint_mul!(x3195, x3181, 33),
        bigint_mul!(x3164, x3183, 33),
        33
    );
    let x3202: BytePoly_33 = bigint_add!(
        bigint_mul!(x3198, x3181, 33),
        bigint_mul!(x3166, x3183, 33),
        33
    );
    let x3203: BytePoly_3 = bigint_nondet_quot!(ctx, x3201, x3, 3);
    let x3204: BytePoly_32 = bigint_nondet_rem!(ctx, x3201, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3203, x3, 35), x3204, 35),
            x3201,
            35
        ),
        260103,
        4,
    )?;
    let x3205: BytePoly_3 = bigint_nondet_quot!(ctx, x3202, x3, 3);
    let x3206: BytePoly_32 = bigint_nondet_rem!(ctx, x3202, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3205, x3, 35), x3206, 35),
            x3202,
            35
        ),
        260103,
        4,
    )?;
    let x3207: BytePoly_64 = bigint_mul!(x3177, x3177, 64);
    let x3208: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x3207, x3207, 64), x3207, 64),
        x2,
        64
    );
    let x3209: BytePoly_64 = bigint_add!(x48, x3208, 64);
    let x3210: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x3180, x3180, 32), x3, 32);
    let x3211: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3208, x3210, 96), x3, 32);
    let x3212: BytePoly_64 = bigint_mul!(x3180, x3211, 64);
    let x3213: BytePoly_64 = bigint_add!(x3212, x3212, 64);
    let x3214: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x3209, x3213, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3214, x3, 66), x3213, 66),
            x3209,
            66
        ),
        276359,
        4,
    )?;
    let x3215: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x3211, x3211, 64), x3, 64), x3, 64),
            x3177,
            64
        ),
        x3177,
        64
    );
    let x3216: BytePoly_34 = bigint_nondet_quot!(ctx, x3215, x3, 34);
    let x3217: BytePoly_32 = bigint_nondet_rem!(ctx, x3215, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3216, x3, 66), x3217, 66),
            x3215,
            66
        ),
        276359,
        4,
    )?;
    let x3218: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x3211, x3217, 64), 64), x3, 64),
            x3180,
            64
        ),
        bigint_mul!(x3211, x3177, 64),
        64
    );
    let x3219: BytePoly_34 = bigint_nondet_quot!(ctx, x3218, x3, 34);
    let x3220: BytePoly_32 = bigint_nondet_rem!(ctx, x3218, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3219, x3, 66), x3220, 66),
            x3218,
            66
        ),
        276359,
        4,
    )?;
    let x3221: BytePoly_1 = bigint_nondet_rem!(ctx, x3182, x4, 1);
    let x3222: BytePoly_32 = bigint_nondet_quot!(ctx, x3182, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3222, x4, 33), x3221, 33),
            x3182,
            33
        ),
        260103,
        4,
    )?;
    let x3223: BytePoly_1 = bigint_sub!(x5, x3221, 1);
    eqz(ctx, &bigint_mul!(x3221, x3223, 2), 8131, 2)?;
    let x3224: BytePoly_32 = bigint_add!(bigint_sub!(x3220, x3206, 32), x3, 32);
    let x3225: BytePoly_32 = bigint_add!(bigint_sub!(x3217, x3204, 32), x3, 32);
    let x3226: BytePoly_32 = bigint_nondet_inv!(ctx, x3225, x3, 32);
    let x3227: BytePoly_64 = bigint_mul!(x3225, x3226, 64);
    let x3228: BytePoly_34 = bigint_nondet_quot!(ctx, x3227, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x3227, bigint_mul!(x3228, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x3229: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3224, x3226, 64), x3, 32);
    let x3230: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x3229, x3225, 64), x3224, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x3231: BytePoly_34 = bigint_nondet_quot!(ctx, x3230, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x3230, bigint_mul!(x3231, x3, 66), 66),
        276359,
        4,
    )?;
    let x3232: BytePoly_64 = bigint_mul!(x3229, x3229, 64);
    let x3233: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x3232, x3204, 64), x3, 64),
            x3217,
            64
        ),
        x3,
        64
    );
    let x3234: BytePoly_34 = bigint_nondet_quot!(ctx, x3233, x3, 34);
    let x3235: BytePoly_32 = bigint_nondet_rem!(ctx, x3233, x3, 32);
    let x3236: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x3229, x3235, 64),
                        bigint_add!(
                            bigint_sub!(x3206, bigint_mul!(x3229, x3204, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x3237: BytePoly_34 = bigint_nondet_quot!(ctx, x3236, x3, 34);
    let x3238: BytePoly_32 = bigint_nondet_rem!(ctx, x3236, x3, 32);
    let x3239: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3232, bigint_mul!(x3234, x3, 66), 66),
                        x3204,
                        66
                    ),
                    x3217,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x3235,
        66
    );
    eqz(ctx, &x3239, 276359, 4)?;
    let x3240: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x3237, x3, 66), x3238, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3229, bigint_sub!(x3204, x3235, 32), 64),
                        x3206,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x3240, 276359, 4)?;
    let x3241: BytePoly_33 = bigint_add!(
        bigint_mul!(x3235, x3221, 33),
        bigint_mul!(x3204, x3223, 33),
        33
    );
    let x3242: BytePoly_33 = bigint_add!(
        bigint_mul!(x3238, x3221, 33),
        bigint_mul!(x3206, x3223, 33),
        33
    );
    let x3243: BytePoly_3 = bigint_nondet_quot!(ctx, x3241, x3, 3);
    let x3244: BytePoly_32 = bigint_nondet_rem!(ctx, x3241, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3243, x3, 35), x3244, 35),
            x3241,
            35
        ),
        260103,
        4,
    )?;
    let x3245: BytePoly_3 = bigint_nondet_quot!(ctx, x3242, x3, 3);
    let x3246: BytePoly_32 = bigint_nondet_rem!(ctx, x3242, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3245, x3, 35), x3246, 35),
            x3242,
            35
        ),
        260103,
        4,
    )?;
    let x3247: BytePoly_64 = bigint_mul!(x3217, x3217, 64);
    let x3248: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x3247, x3247, 64), x3247, 64),
        x2,
        64
    );
    let x3249: BytePoly_64 = bigint_add!(x48, x3248, 64);
    let x3250: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x3220, x3220, 32), x3, 32);
    let x3251: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3248, x3250, 96), x3, 32);
    let x3252: BytePoly_64 = bigint_mul!(x3220, x3251, 64);
    let x3253: BytePoly_64 = bigint_add!(x3252, x3252, 64);
    let x3254: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x3249, x3253, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3254, x3, 66), x3253, 66),
            x3249,
            66
        ),
        276359,
        4,
    )?;
    let x3255: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x3251, x3251, 64), x3, 64), x3, 64),
            x3217,
            64
        ),
        x3217,
        64
    );
    let x3256: BytePoly_34 = bigint_nondet_quot!(ctx, x3255, x3, 34);
    let x3257: BytePoly_32 = bigint_nondet_rem!(ctx, x3255, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3256, x3, 66), x3257, 66),
            x3255,
            66
        ),
        276359,
        4,
    )?;
    let x3258: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x3251, x3257, 64), 64), x3, 64),
            x3220,
            64
        ),
        bigint_mul!(x3251, x3217, 64),
        64
    );
    let x3259: BytePoly_34 = bigint_nondet_quot!(ctx, x3258, x3, 34);
    let x3260: BytePoly_32 = bigint_nondet_rem!(ctx, x3258, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3259, x3, 66), x3260, 66),
            x3258,
            66
        ),
        276359,
        4,
    )?;
    let x3261: BytePoly_1 = bigint_nondet_rem!(ctx, x3222, x4, 1);
    let x3262: BytePoly_32 = bigint_nondet_quot!(ctx, x3222, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3262, x4, 33), x3261, 33),
            x3222,
            33
        ),
        260103,
        4,
    )?;
    let x3263: BytePoly_1 = bigint_sub!(x5, x3261, 1);
    eqz(ctx, &bigint_mul!(x3261, x3263, 2), 8131, 2)?;
    let x3264: BytePoly_32 = bigint_add!(bigint_sub!(x3260, x3246, 32), x3, 32);
    let x3265: BytePoly_32 = bigint_add!(bigint_sub!(x3257, x3244, 32), x3, 32);
    let x3266: BytePoly_32 = bigint_nondet_inv!(ctx, x3265, x3, 32);
    let x3267: BytePoly_64 = bigint_mul!(x3265, x3266, 64);
    let x3268: BytePoly_34 = bigint_nondet_quot!(ctx, x3267, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x3267, bigint_mul!(x3268, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x3269: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3264, x3266, 64), x3, 32);
    let x3270: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x3269, x3265, 64), x3264, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x3271: BytePoly_34 = bigint_nondet_quot!(ctx, x3270, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x3270, bigint_mul!(x3271, x3, 66), 66),
        276359,
        4,
    )?;
    let x3272: BytePoly_64 = bigint_mul!(x3269, x3269, 64);
    let x3273: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x3272, x3244, 64), x3, 64),
            x3257,
            64
        ),
        x3,
        64
    );
    let x3274: BytePoly_34 = bigint_nondet_quot!(ctx, x3273, x3, 34);
    let x3275: BytePoly_32 = bigint_nondet_rem!(ctx, x3273, x3, 32);
    let x3276: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x3269, x3275, 64),
                        bigint_add!(
                            bigint_sub!(x3246, bigint_mul!(x3269, x3244, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x3277: BytePoly_34 = bigint_nondet_quot!(ctx, x3276, x3, 34);
    let x3278: BytePoly_32 = bigint_nondet_rem!(ctx, x3276, x3, 32);
    let x3279: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3272, bigint_mul!(x3274, x3, 66), 66),
                        x3244,
                        66
                    ),
                    x3257,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x3275,
        66
    );
    eqz(ctx, &x3279, 276359, 4)?;
    let x3280: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x3277, x3, 66), x3278, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3269, bigint_sub!(x3244, x3275, 32), 64),
                        x3246,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x3280, 276359, 4)?;
    let x3281: BytePoly_33 = bigint_add!(
        bigint_mul!(x3275, x3261, 33),
        bigint_mul!(x3244, x3263, 33),
        33
    );
    let x3282: BytePoly_33 = bigint_add!(
        bigint_mul!(x3278, x3261, 33),
        bigint_mul!(x3246, x3263, 33),
        33
    );
    let x3283: BytePoly_3 = bigint_nondet_quot!(ctx, x3281, x3, 3);
    let x3284: BytePoly_32 = bigint_nondet_rem!(ctx, x3281, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3283, x3, 35), x3284, 35),
            x3281,
            35
        ),
        260103,
        4,
    )?;
    let x3285: BytePoly_3 = bigint_nondet_quot!(ctx, x3282, x3, 3);
    let x3286: BytePoly_32 = bigint_nondet_rem!(ctx, x3282, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3285, x3, 35), x3286, 35),
            x3282,
            35
        ),
        260103,
        4,
    )?;
    let x3287: BytePoly_64 = bigint_mul!(x3257, x3257, 64);
    let x3288: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x3287, x3287, 64), x3287, 64),
        x2,
        64
    );
    let x3289: BytePoly_64 = bigint_add!(x48, x3288, 64);
    let x3290: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x3260, x3260, 32), x3, 32);
    let x3291: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3288, x3290, 96), x3, 32);
    let x3292: BytePoly_64 = bigint_mul!(x3260, x3291, 64);
    let x3293: BytePoly_64 = bigint_add!(x3292, x3292, 64);
    let x3294: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x3289, x3293, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3294, x3, 66), x3293, 66),
            x3289,
            66
        ),
        276359,
        4,
    )?;
    let x3295: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x3291, x3291, 64), x3, 64), x3, 64),
            x3257,
            64
        ),
        x3257,
        64
    );
    let x3296: BytePoly_34 = bigint_nondet_quot!(ctx, x3295, x3, 34);
    let x3297: BytePoly_32 = bigint_nondet_rem!(ctx, x3295, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3296, x3, 66), x3297, 66),
            x3295,
            66
        ),
        276359,
        4,
    )?;
    let x3298: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x3291, x3297, 64), 64), x3, 64),
            x3260,
            64
        ),
        bigint_mul!(x3291, x3257, 64),
        64
    );
    let x3299: BytePoly_34 = bigint_nondet_quot!(ctx, x3298, x3, 34);
    let x3300: BytePoly_32 = bigint_nondet_rem!(ctx, x3298, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3299, x3, 66), x3300, 66),
            x3298,
            66
        ),
        276359,
        4,
    )?;
    let x3301: BytePoly_1 = bigint_nondet_rem!(ctx, x3262, x4, 1);
    let x3302: BytePoly_32 = bigint_nondet_quot!(ctx, x3262, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3302, x4, 33), x3301, 33),
            x3262,
            33
        ),
        260103,
        4,
    )?;
    let x3303: BytePoly_1 = bigint_sub!(x5, x3301, 1);
    eqz(ctx, &bigint_mul!(x3301, x3303, 2), 8131, 2)?;
    let x3304: BytePoly_32 = bigint_add!(bigint_sub!(x3300, x3286, 32), x3, 32);
    let x3305: BytePoly_32 = bigint_add!(bigint_sub!(x3297, x3284, 32), x3, 32);
    let x3306: BytePoly_32 = bigint_nondet_inv!(ctx, x3305, x3, 32);
    let x3307: BytePoly_64 = bigint_mul!(x3305, x3306, 64);
    let x3308: BytePoly_34 = bigint_nondet_quot!(ctx, x3307, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x3307, bigint_mul!(x3308, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x3309: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3304, x3306, 64), x3, 32);
    let x3310: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x3309, x3305, 64), x3304, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x3311: BytePoly_34 = bigint_nondet_quot!(ctx, x3310, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x3310, bigint_mul!(x3311, x3, 66), 66),
        276359,
        4,
    )?;
    let x3312: BytePoly_64 = bigint_mul!(x3309, x3309, 64);
    let x3313: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x3312, x3284, 64), x3, 64),
            x3297,
            64
        ),
        x3,
        64
    );
    let x3314: BytePoly_34 = bigint_nondet_quot!(ctx, x3313, x3, 34);
    let x3315: BytePoly_32 = bigint_nondet_rem!(ctx, x3313, x3, 32);
    let x3316: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x3309, x3315, 64),
                        bigint_add!(
                            bigint_sub!(x3286, bigint_mul!(x3309, x3284, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x3317: BytePoly_34 = bigint_nondet_quot!(ctx, x3316, x3, 34);
    let x3318: BytePoly_32 = bigint_nondet_rem!(ctx, x3316, x3, 32);
    let x3319: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3312, bigint_mul!(x3314, x3, 66), 66),
                        x3284,
                        66
                    ),
                    x3297,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x3315,
        66
    );
    eqz(ctx, &x3319, 276359, 4)?;
    let x3320: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x3317, x3, 66), x3318, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3309, bigint_sub!(x3284, x3315, 32), 64),
                        x3286,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x3320, 276359, 4)?;
    let x3321: BytePoly_33 = bigint_add!(
        bigint_mul!(x3315, x3301, 33),
        bigint_mul!(x3284, x3303, 33),
        33
    );
    let x3322: BytePoly_33 = bigint_add!(
        bigint_mul!(x3318, x3301, 33),
        bigint_mul!(x3286, x3303, 33),
        33
    );
    let x3323: BytePoly_3 = bigint_nondet_quot!(ctx, x3321, x3, 3);
    let x3324: BytePoly_32 = bigint_nondet_rem!(ctx, x3321, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3323, x3, 35), x3324, 35),
            x3321,
            35
        ),
        260103,
        4,
    )?;
    let x3325: BytePoly_3 = bigint_nondet_quot!(ctx, x3322, x3, 3);
    let x3326: BytePoly_32 = bigint_nondet_rem!(ctx, x3322, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3325, x3, 35), x3326, 35),
            x3322,
            35
        ),
        260103,
        4,
    )?;
    let x3327: BytePoly_64 = bigint_mul!(x3297, x3297, 64);
    let x3328: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x3327, x3327, 64), x3327, 64),
        x2,
        64
    );
    let x3329: BytePoly_64 = bigint_add!(x48, x3328, 64);
    let x3330: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x3300, x3300, 32), x3, 32);
    let x3331: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3328, x3330, 96), x3, 32);
    let x3332: BytePoly_64 = bigint_mul!(x3300, x3331, 64);
    let x3333: BytePoly_64 = bigint_add!(x3332, x3332, 64);
    let x3334: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x3329, x3333, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3334, x3, 66), x3333, 66),
            x3329,
            66
        ),
        276359,
        4,
    )?;
    let x3335: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x3331, x3331, 64), x3, 64), x3, 64),
            x3297,
            64
        ),
        x3297,
        64
    );
    let x3336: BytePoly_34 = bigint_nondet_quot!(ctx, x3335, x3, 34);
    let x3337: BytePoly_32 = bigint_nondet_rem!(ctx, x3335, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3336, x3, 66), x3337, 66),
            x3335,
            66
        ),
        276359,
        4,
    )?;
    let x3338: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x3331, x3337, 64), 64), x3, 64),
            x3300,
            64
        ),
        bigint_mul!(x3331, x3297, 64),
        64
    );
    let x3339: BytePoly_34 = bigint_nondet_quot!(ctx, x3338, x3, 34);
    let x3340: BytePoly_32 = bigint_nondet_rem!(ctx, x3338, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3339, x3, 66), x3340, 66),
            x3338,
            66
        ),
        276359,
        4,
    )?;
    let x3341: BytePoly_1 = bigint_nondet_rem!(ctx, x3302, x4, 1);
    let x3342: BytePoly_32 = bigint_nondet_quot!(ctx, x3302, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3342, x4, 33), x3341, 33),
            x3302,
            33
        ),
        260103,
        4,
    )?;
    let x3343: BytePoly_1 = bigint_sub!(x5, x3341, 1);
    eqz(ctx, &bigint_mul!(x3341, x3343, 2), 8131, 2)?;
    let x3344: BytePoly_32 = bigint_add!(bigint_sub!(x3340, x3326, 32), x3, 32);
    let x3345: BytePoly_32 = bigint_add!(bigint_sub!(x3337, x3324, 32), x3, 32);
    let x3346: BytePoly_32 = bigint_nondet_inv!(ctx, x3345, x3, 32);
    let x3347: BytePoly_64 = bigint_mul!(x3345, x3346, 64);
    let x3348: BytePoly_34 = bigint_nondet_quot!(ctx, x3347, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x3347, bigint_mul!(x3348, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x3349: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3344, x3346, 64), x3, 32);
    let x3350: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x3349, x3345, 64), x3344, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x3351: BytePoly_34 = bigint_nondet_quot!(ctx, x3350, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x3350, bigint_mul!(x3351, x3, 66), 66),
        276359,
        4,
    )?;
    let x3352: BytePoly_64 = bigint_mul!(x3349, x3349, 64);
    let x3353: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x3352, x3324, 64), x3, 64),
            x3337,
            64
        ),
        x3,
        64
    );
    let x3354: BytePoly_34 = bigint_nondet_quot!(ctx, x3353, x3, 34);
    let x3355: BytePoly_32 = bigint_nondet_rem!(ctx, x3353, x3, 32);
    let x3356: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x3349, x3355, 64),
                        bigint_add!(
                            bigint_sub!(x3326, bigint_mul!(x3349, x3324, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x3357: BytePoly_34 = bigint_nondet_quot!(ctx, x3356, x3, 34);
    let x3358: BytePoly_32 = bigint_nondet_rem!(ctx, x3356, x3, 32);
    let x3359: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3352, bigint_mul!(x3354, x3, 66), 66),
                        x3324,
                        66
                    ),
                    x3337,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x3355,
        66
    );
    eqz(ctx, &x3359, 276359, 4)?;
    let x3360: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x3357, x3, 66), x3358, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3349, bigint_sub!(x3324, x3355, 32), 64),
                        x3326,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x3360, 276359, 4)?;
    let x3361: BytePoly_33 = bigint_add!(
        bigint_mul!(x3355, x3341, 33),
        bigint_mul!(x3324, x3343, 33),
        33
    );
    let x3362: BytePoly_33 = bigint_add!(
        bigint_mul!(x3358, x3341, 33),
        bigint_mul!(x3326, x3343, 33),
        33
    );
    let x3363: BytePoly_3 = bigint_nondet_quot!(ctx, x3361, x3, 3);
    let x3364: BytePoly_32 = bigint_nondet_rem!(ctx, x3361, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3363, x3, 35), x3364, 35),
            x3361,
            35
        ),
        260103,
        4,
    )?;
    let x3365: BytePoly_3 = bigint_nondet_quot!(ctx, x3362, x3, 3);
    let x3366: BytePoly_32 = bigint_nondet_rem!(ctx, x3362, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3365, x3, 35), x3366, 35),
            x3362,
            35
        ),
        260103,
        4,
    )?;
    let x3367: BytePoly_64 = bigint_mul!(x3337, x3337, 64);
    let x3368: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x3367, x3367, 64), x3367, 64),
        x2,
        64
    );
    let x3369: BytePoly_64 = bigint_add!(x48, x3368, 64);
    let x3370: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x3340, x3340, 32), x3, 32);
    let x3371: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3368, x3370, 96), x3, 32);
    let x3372: BytePoly_64 = bigint_mul!(x3340, x3371, 64);
    let x3373: BytePoly_64 = bigint_add!(x3372, x3372, 64);
    let x3374: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x3369, x3373, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3374, x3, 66), x3373, 66),
            x3369,
            66
        ),
        276359,
        4,
    )?;
    let x3375: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x3371, x3371, 64), x3, 64), x3, 64),
            x3337,
            64
        ),
        x3337,
        64
    );
    let x3376: BytePoly_34 = bigint_nondet_quot!(ctx, x3375, x3, 34);
    let x3377: BytePoly_32 = bigint_nondet_rem!(ctx, x3375, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3376, x3, 66), x3377, 66),
            x3375,
            66
        ),
        276359,
        4,
    )?;
    let x3378: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x3371, x3377, 64), 64), x3, 64),
            x3340,
            64
        ),
        bigint_mul!(x3371, x3337, 64),
        64
    );
    let x3379: BytePoly_34 = bigint_nondet_quot!(ctx, x3378, x3, 34);
    let x3380: BytePoly_32 = bigint_nondet_rem!(ctx, x3378, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3379, x3, 66), x3380, 66),
            x3378,
            66
        ),
        276359,
        4,
    )?;
    let x3381: BytePoly_1 = bigint_nondet_rem!(ctx, x3342, x4, 1);
    let x3382: BytePoly_32 = bigint_nondet_quot!(ctx, x3342, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3382, x4, 33), x3381, 33),
            x3342,
            33
        ),
        260103,
        4,
    )?;
    let x3383: BytePoly_1 = bigint_sub!(x5, x3381, 1);
    eqz(ctx, &bigint_mul!(x3381, x3383, 2), 8131, 2)?;
    let x3384: BytePoly_32 = bigint_add!(bigint_sub!(x3380, x3366, 32), x3, 32);
    let x3385: BytePoly_32 = bigint_add!(bigint_sub!(x3377, x3364, 32), x3, 32);
    let x3386: BytePoly_32 = bigint_nondet_inv!(ctx, x3385, x3, 32);
    let x3387: BytePoly_64 = bigint_mul!(x3385, x3386, 64);
    let x3388: BytePoly_34 = bigint_nondet_quot!(ctx, x3387, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x3387, bigint_mul!(x3388, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x3389: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3384, x3386, 64), x3, 32);
    let x3390: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x3389, x3385, 64), x3384, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x3391: BytePoly_34 = bigint_nondet_quot!(ctx, x3390, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x3390, bigint_mul!(x3391, x3, 66), 66),
        276359,
        4,
    )?;
    let x3392: BytePoly_64 = bigint_mul!(x3389, x3389, 64);
    let x3393: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x3392, x3364, 64), x3, 64),
            x3377,
            64
        ),
        x3,
        64
    );
    let x3394: BytePoly_34 = bigint_nondet_quot!(ctx, x3393, x3, 34);
    let x3395: BytePoly_32 = bigint_nondet_rem!(ctx, x3393, x3, 32);
    let x3396: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x3389, x3395, 64),
                        bigint_add!(
                            bigint_sub!(x3366, bigint_mul!(x3389, x3364, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x3397: BytePoly_34 = bigint_nondet_quot!(ctx, x3396, x3, 34);
    let x3398: BytePoly_32 = bigint_nondet_rem!(ctx, x3396, x3, 32);
    let x3399: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3392, bigint_mul!(x3394, x3, 66), 66),
                        x3364,
                        66
                    ),
                    x3377,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x3395,
        66
    );
    eqz(ctx, &x3399, 276359, 4)?;
    let x3400: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x3397, x3, 66), x3398, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3389, bigint_sub!(x3364, x3395, 32), 64),
                        x3366,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x3400, 276359, 4)?;
    let x3401: BytePoly_33 = bigint_add!(
        bigint_mul!(x3395, x3381, 33),
        bigint_mul!(x3364, x3383, 33),
        33
    );
    let x3402: BytePoly_33 = bigint_add!(
        bigint_mul!(x3398, x3381, 33),
        bigint_mul!(x3366, x3383, 33),
        33
    );
    let x3403: BytePoly_3 = bigint_nondet_quot!(ctx, x3401, x3, 3);
    let x3404: BytePoly_32 = bigint_nondet_rem!(ctx, x3401, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3403, x3, 35), x3404, 35),
            x3401,
            35
        ),
        260103,
        4,
    )?;
    let x3405: BytePoly_3 = bigint_nondet_quot!(ctx, x3402, x3, 3);
    let x3406: BytePoly_32 = bigint_nondet_rem!(ctx, x3402, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3405, x3, 35), x3406, 35),
            x3402,
            35
        ),
        260103,
        4,
    )?;
    let x3407: BytePoly_64 = bigint_mul!(x3377, x3377, 64);
    let x3408: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x3407, x3407, 64), x3407, 64),
        x2,
        64
    );
    let x3409: BytePoly_64 = bigint_add!(x48, x3408, 64);
    let x3410: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x3380, x3380, 32), x3, 32);
    let x3411: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3408, x3410, 96), x3, 32);
    let x3412: BytePoly_64 = bigint_mul!(x3380, x3411, 64);
    let x3413: BytePoly_64 = bigint_add!(x3412, x3412, 64);
    let x3414: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x3409, x3413, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3414, x3, 66), x3413, 66),
            x3409,
            66
        ),
        276359,
        4,
    )?;
    let x3415: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x3411, x3411, 64), x3, 64), x3, 64),
            x3377,
            64
        ),
        x3377,
        64
    );
    let x3416: BytePoly_34 = bigint_nondet_quot!(ctx, x3415, x3, 34);
    let x3417: BytePoly_32 = bigint_nondet_rem!(ctx, x3415, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3416, x3, 66), x3417, 66),
            x3415,
            66
        ),
        276359,
        4,
    )?;
    let x3418: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x3411, x3417, 64), 64), x3, 64),
            x3380,
            64
        ),
        bigint_mul!(x3411, x3377, 64),
        64
    );
    let x3419: BytePoly_34 = bigint_nondet_quot!(ctx, x3418, x3, 34);
    let x3420: BytePoly_32 = bigint_nondet_rem!(ctx, x3418, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3419, x3, 66), x3420, 66),
            x3418,
            66
        ),
        276359,
        4,
    )?;
    let x3421: BytePoly_1 = bigint_nondet_rem!(ctx, x3382, x4, 1);
    let x3422: BytePoly_32 = bigint_nondet_quot!(ctx, x3382, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3422, x4, 33), x3421, 33),
            x3382,
            33
        ),
        260103,
        4,
    )?;
    let x3423: BytePoly_1 = bigint_sub!(x5, x3421, 1);
    eqz(ctx, &bigint_mul!(x3421, x3423, 2), 8131, 2)?;
    let x3424: BytePoly_32 = bigint_add!(bigint_sub!(x3420, x3406, 32), x3, 32);
    let x3425: BytePoly_32 = bigint_add!(bigint_sub!(x3417, x3404, 32), x3, 32);
    let x3426: BytePoly_32 = bigint_nondet_inv!(ctx, x3425, x3, 32);
    let x3427: BytePoly_64 = bigint_mul!(x3425, x3426, 64);
    let x3428: BytePoly_34 = bigint_nondet_quot!(ctx, x3427, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x3427, bigint_mul!(x3428, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x3429: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3424, x3426, 64), x3, 32);
    let x3430: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x3429, x3425, 64), x3424, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x3431: BytePoly_34 = bigint_nondet_quot!(ctx, x3430, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x3430, bigint_mul!(x3431, x3, 66), 66),
        276359,
        4,
    )?;
    let x3432: BytePoly_64 = bigint_mul!(x3429, x3429, 64);
    let x3433: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x3432, x3404, 64), x3, 64),
            x3417,
            64
        ),
        x3,
        64
    );
    let x3434: BytePoly_34 = bigint_nondet_quot!(ctx, x3433, x3, 34);
    let x3435: BytePoly_32 = bigint_nondet_rem!(ctx, x3433, x3, 32);
    let x3436: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x3429, x3435, 64),
                        bigint_add!(
                            bigint_sub!(x3406, bigint_mul!(x3429, x3404, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x3437: BytePoly_34 = bigint_nondet_quot!(ctx, x3436, x3, 34);
    let x3438: BytePoly_32 = bigint_nondet_rem!(ctx, x3436, x3, 32);
    let x3439: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3432, bigint_mul!(x3434, x3, 66), 66),
                        x3404,
                        66
                    ),
                    x3417,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x3435,
        66
    );
    eqz(ctx, &x3439, 276359, 4)?;
    let x3440: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x3437, x3, 66), x3438, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3429, bigint_sub!(x3404, x3435, 32), 64),
                        x3406,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x3440, 276359, 4)?;
    let x3441: BytePoly_33 = bigint_add!(
        bigint_mul!(x3435, x3421, 33),
        bigint_mul!(x3404, x3423, 33),
        33
    );
    let x3442: BytePoly_33 = bigint_add!(
        bigint_mul!(x3438, x3421, 33),
        bigint_mul!(x3406, x3423, 33),
        33
    );
    let x3443: BytePoly_3 = bigint_nondet_quot!(ctx, x3441, x3, 3);
    let x3444: BytePoly_32 = bigint_nondet_rem!(ctx, x3441, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3443, x3, 35), x3444, 35),
            x3441,
            35
        ),
        260103,
        4,
    )?;
    let x3445: BytePoly_3 = bigint_nondet_quot!(ctx, x3442, x3, 3);
    let x3446: BytePoly_32 = bigint_nondet_rem!(ctx, x3442, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3445, x3, 35), x3446, 35),
            x3442,
            35
        ),
        260103,
        4,
    )?;
    let x3447: BytePoly_64 = bigint_mul!(x3417, x3417, 64);
    let x3448: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x3447, x3447, 64), x3447, 64),
        x2,
        64
    );
    let x3449: BytePoly_64 = bigint_add!(x48, x3448, 64);
    let x3450: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x3420, x3420, 32), x3, 32);
    let x3451: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3448, x3450, 96), x3, 32);
    let x3452: BytePoly_64 = bigint_mul!(x3420, x3451, 64);
    let x3453: BytePoly_64 = bigint_add!(x3452, x3452, 64);
    let x3454: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x3449, x3453, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3454, x3, 66), x3453, 66),
            x3449,
            66
        ),
        276359,
        4,
    )?;
    let x3455: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x3451, x3451, 64), x3, 64), x3, 64),
            x3417,
            64
        ),
        x3417,
        64
    );
    let x3456: BytePoly_34 = bigint_nondet_quot!(ctx, x3455, x3, 34);
    let x3457: BytePoly_32 = bigint_nondet_rem!(ctx, x3455, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3456, x3, 66), x3457, 66),
            x3455,
            66
        ),
        276359,
        4,
    )?;
    let x3458: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x3451, x3457, 64), 64), x3, 64),
            x3420,
            64
        ),
        bigint_mul!(x3451, x3417, 64),
        64
    );
    let x3459: BytePoly_34 = bigint_nondet_quot!(ctx, x3458, x3, 34);
    let x3460: BytePoly_32 = bigint_nondet_rem!(ctx, x3458, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3459, x3, 66), x3460, 66),
            x3458,
            66
        ),
        276359,
        4,
    )?;
    let x3461: BytePoly_1 = bigint_nondet_rem!(ctx, x3422, x4, 1);
    let x3462: BytePoly_32 = bigint_nondet_quot!(ctx, x3422, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3462, x4, 33), x3461, 33),
            x3422,
            33
        ),
        260103,
        4,
    )?;
    let x3463: BytePoly_1 = bigint_sub!(x5, x3461, 1);
    eqz(ctx, &bigint_mul!(x3461, x3463, 2), 8131, 2)?;
    let x3464: BytePoly_32 = bigint_add!(bigint_sub!(x3460, x3446, 32), x3, 32);
    let x3465: BytePoly_32 = bigint_add!(bigint_sub!(x3457, x3444, 32), x3, 32);
    let x3466: BytePoly_32 = bigint_nondet_inv!(ctx, x3465, x3, 32);
    let x3467: BytePoly_64 = bigint_mul!(x3465, x3466, 64);
    let x3468: BytePoly_34 = bigint_nondet_quot!(ctx, x3467, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x3467, bigint_mul!(x3468, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x3469: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3464, x3466, 64), x3, 32);
    let x3470: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x3469, x3465, 64), x3464, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x3471: BytePoly_34 = bigint_nondet_quot!(ctx, x3470, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x3470, bigint_mul!(x3471, x3, 66), 66),
        276359,
        4,
    )?;
    let x3472: BytePoly_64 = bigint_mul!(x3469, x3469, 64);
    let x3473: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x3472, x3444, 64), x3, 64),
            x3457,
            64
        ),
        x3,
        64
    );
    let x3474: BytePoly_34 = bigint_nondet_quot!(ctx, x3473, x3, 34);
    let x3475: BytePoly_32 = bigint_nondet_rem!(ctx, x3473, x3, 32);
    let x3476: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x3469, x3475, 64),
                        bigint_add!(
                            bigint_sub!(x3446, bigint_mul!(x3469, x3444, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x3477: BytePoly_34 = bigint_nondet_quot!(ctx, x3476, x3, 34);
    let x3478: BytePoly_32 = bigint_nondet_rem!(ctx, x3476, x3, 32);
    let x3479: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3472, bigint_mul!(x3474, x3, 66), 66),
                        x3444,
                        66
                    ),
                    x3457,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x3475,
        66
    );
    eqz(ctx, &x3479, 276359, 4)?;
    let x3480: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x3477, x3, 66), x3478, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3469, bigint_sub!(x3444, x3475, 32), 64),
                        x3446,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x3480, 276359, 4)?;
    let x3481: BytePoly_33 = bigint_add!(
        bigint_mul!(x3475, x3461, 33),
        bigint_mul!(x3444, x3463, 33),
        33
    );
    let x3482: BytePoly_33 = bigint_add!(
        bigint_mul!(x3478, x3461, 33),
        bigint_mul!(x3446, x3463, 33),
        33
    );
    let x3483: BytePoly_3 = bigint_nondet_quot!(ctx, x3481, x3, 3);
    let x3484: BytePoly_32 = bigint_nondet_rem!(ctx, x3481, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3483, x3, 35), x3484, 35),
            x3481,
            35
        ),
        260103,
        4,
    )?;
    let x3485: BytePoly_3 = bigint_nondet_quot!(ctx, x3482, x3, 3);
    let x3486: BytePoly_32 = bigint_nondet_rem!(ctx, x3482, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3485, x3, 35), x3486, 35),
            x3482,
            35
        ),
        260103,
        4,
    )?;
    let x3487: BytePoly_64 = bigint_mul!(x3457, x3457, 64);
    let x3488: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x3487, x3487, 64), x3487, 64),
        x2,
        64
    );
    let x3489: BytePoly_64 = bigint_add!(x48, x3488, 64);
    let x3490: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x3460, x3460, 32), x3, 32);
    let x3491: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3488, x3490, 96), x3, 32);
    let x3492: BytePoly_64 = bigint_mul!(x3460, x3491, 64);
    let x3493: BytePoly_64 = bigint_add!(x3492, x3492, 64);
    let x3494: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x3489, x3493, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3494, x3, 66), x3493, 66),
            x3489,
            66
        ),
        276359,
        4,
    )?;
    let x3495: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x3491, x3491, 64), x3, 64), x3, 64),
            x3457,
            64
        ),
        x3457,
        64
    );
    let x3496: BytePoly_34 = bigint_nondet_quot!(ctx, x3495, x3, 34);
    let x3497: BytePoly_32 = bigint_nondet_rem!(ctx, x3495, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3496, x3, 66), x3497, 66),
            x3495,
            66
        ),
        276359,
        4,
    )?;
    let x3498: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x3491, x3497, 64), 64), x3, 64),
            x3460,
            64
        ),
        bigint_mul!(x3491, x3457, 64),
        64
    );
    let x3499: BytePoly_34 = bigint_nondet_quot!(ctx, x3498, x3, 34);
    let x3500: BytePoly_32 = bigint_nondet_rem!(ctx, x3498, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3499, x3, 66), x3500, 66),
            x3498,
            66
        ),
        276359,
        4,
    )?;
    let x3501: BytePoly_1 = bigint_nondet_rem!(ctx, x3462, x4, 1);
    let x3502: BytePoly_32 = bigint_nondet_quot!(ctx, x3462, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3502, x4, 33), x3501, 33),
            x3462,
            33
        ),
        260103,
        4,
    )?;
    let x3503: BytePoly_1 = bigint_sub!(x5, x3501, 1);
    eqz(ctx, &bigint_mul!(x3501, x3503, 2), 8131, 2)?;
    let x3504: BytePoly_32 = bigint_add!(bigint_sub!(x3500, x3486, 32), x3, 32);
    let x3505: BytePoly_32 = bigint_add!(bigint_sub!(x3497, x3484, 32), x3, 32);
    let x3506: BytePoly_32 = bigint_nondet_inv!(ctx, x3505, x3, 32);
    let x3507: BytePoly_64 = bigint_mul!(x3505, x3506, 64);
    let x3508: BytePoly_34 = bigint_nondet_quot!(ctx, x3507, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x3507, bigint_mul!(x3508, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x3509: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3504, x3506, 64), x3, 32);
    let x3510: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x3509, x3505, 64), x3504, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x3511: BytePoly_34 = bigint_nondet_quot!(ctx, x3510, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x3510, bigint_mul!(x3511, x3, 66), 66),
        276359,
        4,
    )?;
    let x3512: BytePoly_64 = bigint_mul!(x3509, x3509, 64);
    let x3513: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x3512, x3484, 64), x3, 64),
            x3497,
            64
        ),
        x3,
        64
    );
    let x3514: BytePoly_34 = bigint_nondet_quot!(ctx, x3513, x3, 34);
    let x3515: BytePoly_32 = bigint_nondet_rem!(ctx, x3513, x3, 32);
    let x3516: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x3509, x3515, 64),
                        bigint_add!(
                            bigint_sub!(x3486, bigint_mul!(x3509, x3484, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x3517: BytePoly_34 = bigint_nondet_quot!(ctx, x3516, x3, 34);
    let x3518: BytePoly_32 = bigint_nondet_rem!(ctx, x3516, x3, 32);
    let x3519: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3512, bigint_mul!(x3514, x3, 66), 66),
                        x3484,
                        66
                    ),
                    x3497,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x3515,
        66
    );
    eqz(ctx, &x3519, 276359, 4)?;
    let x3520: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x3517, x3, 66), x3518, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3509, bigint_sub!(x3484, x3515, 32), 64),
                        x3486,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x3520, 276359, 4)?;
    let x3521: BytePoly_33 = bigint_add!(
        bigint_mul!(x3515, x3501, 33),
        bigint_mul!(x3484, x3503, 33),
        33
    );
    let x3522: BytePoly_33 = bigint_add!(
        bigint_mul!(x3518, x3501, 33),
        bigint_mul!(x3486, x3503, 33),
        33
    );
    let x3523: BytePoly_3 = bigint_nondet_quot!(ctx, x3521, x3, 3);
    let x3524: BytePoly_32 = bigint_nondet_rem!(ctx, x3521, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3523, x3, 35), x3524, 35),
            x3521,
            35
        ),
        260103,
        4,
    )?;
    let x3525: BytePoly_3 = bigint_nondet_quot!(ctx, x3522, x3, 3);
    let x3526: BytePoly_32 = bigint_nondet_rem!(ctx, x3522, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3525, x3, 35), x3526, 35),
            x3522,
            35
        ),
        260103,
        4,
    )?;
    let x3527: BytePoly_64 = bigint_mul!(x3497, x3497, 64);
    let x3528: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x3527, x3527, 64), x3527, 64),
        x2,
        64
    );
    let x3529: BytePoly_64 = bigint_add!(x48, x3528, 64);
    let x3530: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x3500, x3500, 32), x3, 32);
    let x3531: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3528, x3530, 96), x3, 32);
    let x3532: BytePoly_64 = bigint_mul!(x3500, x3531, 64);
    let x3533: BytePoly_64 = bigint_add!(x3532, x3532, 64);
    let x3534: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x3529, x3533, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3534, x3, 66), x3533, 66),
            x3529,
            66
        ),
        276359,
        4,
    )?;
    let x3535: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x3531, x3531, 64), x3, 64), x3, 64),
            x3497,
            64
        ),
        x3497,
        64
    );
    let x3536: BytePoly_34 = bigint_nondet_quot!(ctx, x3535, x3, 34);
    let x3537: BytePoly_32 = bigint_nondet_rem!(ctx, x3535, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3536, x3, 66), x3537, 66),
            x3535,
            66
        ),
        276359,
        4,
    )?;
    let x3538: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x3531, x3537, 64), 64), x3, 64),
            x3500,
            64
        ),
        bigint_mul!(x3531, x3497, 64),
        64
    );
    let x3539: BytePoly_34 = bigint_nondet_quot!(ctx, x3538, x3, 34);
    let x3540: BytePoly_32 = bigint_nondet_rem!(ctx, x3538, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3539, x3, 66), x3540, 66),
            x3538,
            66
        ),
        276359,
        4,
    )?;
    let x3541: BytePoly_1 = bigint_nondet_rem!(ctx, x3502, x4, 1);
    let x3542: BytePoly_32 = bigint_nondet_quot!(ctx, x3502, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3542, x4, 33), x3541, 33),
            x3502,
            33
        ),
        260103,
        4,
    )?;
    let x3543: BytePoly_1 = bigint_sub!(x5, x3541, 1);
    eqz(ctx, &bigint_mul!(x3541, x3543, 2), 8131, 2)?;
    let x3544: BytePoly_32 = bigint_add!(bigint_sub!(x3540, x3526, 32), x3, 32);
    let x3545: BytePoly_32 = bigint_add!(bigint_sub!(x3537, x3524, 32), x3, 32);
    let x3546: BytePoly_32 = bigint_nondet_inv!(ctx, x3545, x3, 32);
    let x3547: BytePoly_64 = bigint_mul!(x3545, x3546, 64);
    let x3548: BytePoly_34 = bigint_nondet_quot!(ctx, x3547, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x3547, bigint_mul!(x3548, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x3549: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3544, x3546, 64), x3, 32);
    let x3550: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x3549, x3545, 64), x3544, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x3551: BytePoly_34 = bigint_nondet_quot!(ctx, x3550, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x3550, bigint_mul!(x3551, x3, 66), 66),
        276359,
        4,
    )?;
    let x3552: BytePoly_64 = bigint_mul!(x3549, x3549, 64);
    let x3553: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x3552, x3524, 64), x3, 64),
            x3537,
            64
        ),
        x3,
        64
    );
    let x3554: BytePoly_34 = bigint_nondet_quot!(ctx, x3553, x3, 34);
    let x3555: BytePoly_32 = bigint_nondet_rem!(ctx, x3553, x3, 32);
    let x3556: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x3549, x3555, 64),
                        bigint_add!(
                            bigint_sub!(x3526, bigint_mul!(x3549, x3524, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x3557: BytePoly_34 = bigint_nondet_quot!(ctx, x3556, x3, 34);
    let x3558: BytePoly_32 = bigint_nondet_rem!(ctx, x3556, x3, 32);
    let x3559: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3552, bigint_mul!(x3554, x3, 66), 66),
                        x3524,
                        66
                    ),
                    x3537,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x3555,
        66
    );
    eqz(ctx, &x3559, 276359, 4)?;
    let x3560: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x3557, x3, 66), x3558, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3549, bigint_sub!(x3524, x3555, 32), 64),
                        x3526,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x3560, 276359, 4)?;
    let x3561: BytePoly_33 = bigint_add!(
        bigint_mul!(x3555, x3541, 33),
        bigint_mul!(x3524, x3543, 33),
        33
    );
    let x3562: BytePoly_33 = bigint_add!(
        bigint_mul!(x3558, x3541, 33),
        bigint_mul!(x3526, x3543, 33),
        33
    );
    let x3563: BytePoly_3 = bigint_nondet_quot!(ctx, x3561, x3, 3);
    let x3564: BytePoly_32 = bigint_nondet_rem!(ctx, x3561, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3563, x3, 35), x3564, 35),
            x3561,
            35
        ),
        260103,
        4,
    )?;
    let x3565: BytePoly_3 = bigint_nondet_quot!(ctx, x3562, x3, 3);
    let x3566: BytePoly_32 = bigint_nondet_rem!(ctx, x3562, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3565, x3, 35), x3566, 35),
            x3562,
            35
        ),
        260103,
        4,
    )?;
    let x3567: BytePoly_64 = bigint_mul!(x3537, x3537, 64);
    let x3568: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x3567, x3567, 64), x3567, 64),
        x2,
        64
    );
    let x3569: BytePoly_64 = bigint_add!(x48, x3568, 64);
    let x3570: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x3540, x3540, 32), x3, 32);
    let x3571: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3568, x3570, 96), x3, 32);
    let x3572: BytePoly_64 = bigint_mul!(x3540, x3571, 64);
    let x3573: BytePoly_64 = bigint_add!(x3572, x3572, 64);
    let x3574: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x3569, x3573, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3574, x3, 66), x3573, 66),
            x3569,
            66
        ),
        276359,
        4,
    )?;
    let x3575: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x3571, x3571, 64), x3, 64), x3, 64),
            x3537,
            64
        ),
        x3537,
        64
    );
    let x3576: BytePoly_34 = bigint_nondet_quot!(ctx, x3575, x3, 34);
    let x3577: BytePoly_32 = bigint_nondet_rem!(ctx, x3575, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3576, x3, 66), x3577, 66),
            x3575,
            66
        ),
        276359,
        4,
    )?;
    let x3578: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x3571, x3577, 64), 64), x3, 64),
            x3540,
            64
        ),
        bigint_mul!(x3571, x3537, 64),
        64
    );
    let x3579: BytePoly_34 = bigint_nondet_quot!(ctx, x3578, x3, 34);
    let x3580: BytePoly_32 = bigint_nondet_rem!(ctx, x3578, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3579, x3, 66), x3580, 66),
            x3578,
            66
        ),
        276359,
        4,
    )?;
    let x3581: BytePoly_1 = bigint_nondet_rem!(ctx, x3542, x4, 1);
    let x3582: BytePoly_32 = bigint_nondet_quot!(ctx, x3542, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3582, x4, 33), x3581, 33),
            x3542,
            33
        ),
        260103,
        4,
    )?;
    let x3583: BytePoly_1 = bigint_sub!(x5, x3581, 1);
    eqz(ctx, &bigint_mul!(x3581, x3583, 2), 8131, 2)?;
    let x3584: BytePoly_32 = bigint_add!(bigint_sub!(x3580, x3566, 32), x3, 32);
    let x3585: BytePoly_32 = bigint_add!(bigint_sub!(x3577, x3564, 32), x3, 32);
    let x3586: BytePoly_32 = bigint_nondet_inv!(ctx, x3585, x3, 32);
    let x3587: BytePoly_64 = bigint_mul!(x3585, x3586, 64);
    let x3588: BytePoly_34 = bigint_nondet_quot!(ctx, x3587, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x3587, bigint_mul!(x3588, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x3589: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3584, x3586, 64), x3, 32);
    let x3590: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x3589, x3585, 64), x3584, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x3591: BytePoly_34 = bigint_nondet_quot!(ctx, x3590, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x3590, bigint_mul!(x3591, x3, 66), 66),
        276359,
        4,
    )?;
    let x3592: BytePoly_64 = bigint_mul!(x3589, x3589, 64);
    let x3593: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x3592, x3564, 64), x3, 64),
            x3577,
            64
        ),
        x3,
        64
    );
    let x3594: BytePoly_34 = bigint_nondet_quot!(ctx, x3593, x3, 34);
    let x3595: BytePoly_32 = bigint_nondet_rem!(ctx, x3593, x3, 32);
    let x3596: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x3589, x3595, 64),
                        bigint_add!(
                            bigint_sub!(x3566, bigint_mul!(x3589, x3564, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x3597: BytePoly_34 = bigint_nondet_quot!(ctx, x3596, x3, 34);
    let x3598: BytePoly_32 = bigint_nondet_rem!(ctx, x3596, x3, 32);
    let x3599: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3592, bigint_mul!(x3594, x3, 66), 66),
                        x3564,
                        66
                    ),
                    x3577,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x3595,
        66
    );
    eqz(ctx, &x3599, 276359, 4)?;
    let x3600: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x3597, x3, 66), x3598, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3589, bigint_sub!(x3564, x3595, 32), 64),
                        x3566,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x3600, 276359, 4)?;
    let x3601: BytePoly_33 = bigint_add!(
        bigint_mul!(x3595, x3581, 33),
        bigint_mul!(x3564, x3583, 33),
        33
    );
    let x3602: BytePoly_33 = bigint_add!(
        bigint_mul!(x3598, x3581, 33),
        bigint_mul!(x3566, x3583, 33),
        33
    );
    let x3603: BytePoly_3 = bigint_nondet_quot!(ctx, x3601, x3, 3);
    let x3604: BytePoly_32 = bigint_nondet_rem!(ctx, x3601, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3603, x3, 35), x3604, 35),
            x3601,
            35
        ),
        260103,
        4,
    )?;
    let x3605: BytePoly_3 = bigint_nondet_quot!(ctx, x3602, x3, 3);
    let x3606: BytePoly_32 = bigint_nondet_rem!(ctx, x3602, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3605, x3, 35), x3606, 35),
            x3602,
            35
        ),
        260103,
        4,
    )?;
    let x3607: BytePoly_64 = bigint_mul!(x3577, x3577, 64);
    let x3608: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x3607, x3607, 64), x3607, 64),
        x2,
        64
    );
    let x3609: BytePoly_64 = bigint_add!(x48, x3608, 64);
    let x3610: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x3580, x3580, 32), x3, 32);
    let x3611: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3608, x3610, 96), x3, 32);
    let x3612: BytePoly_64 = bigint_mul!(x3580, x3611, 64);
    let x3613: BytePoly_64 = bigint_add!(x3612, x3612, 64);
    let x3614: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x3609, x3613, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3614, x3, 66), x3613, 66),
            x3609,
            66
        ),
        276359,
        4,
    )?;
    let x3615: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x3611, x3611, 64), x3, 64), x3, 64),
            x3577,
            64
        ),
        x3577,
        64
    );
    let x3616: BytePoly_34 = bigint_nondet_quot!(ctx, x3615, x3, 34);
    let x3617: BytePoly_32 = bigint_nondet_rem!(ctx, x3615, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3616, x3, 66), x3617, 66),
            x3615,
            66
        ),
        276359,
        4,
    )?;
    let x3618: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x3611, x3617, 64), 64), x3, 64),
            x3580,
            64
        ),
        bigint_mul!(x3611, x3577, 64),
        64
    );
    let x3619: BytePoly_34 = bigint_nondet_quot!(ctx, x3618, x3, 34);
    let x3620: BytePoly_32 = bigint_nondet_rem!(ctx, x3618, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3619, x3, 66), x3620, 66),
            x3618,
            66
        ),
        276359,
        4,
    )?;
    let x3621: BytePoly_1 = bigint_nondet_rem!(ctx, x3582, x4, 1);
    let x3622: BytePoly_32 = bigint_nondet_quot!(ctx, x3582, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3622, x4, 33), x3621, 33),
            x3582,
            33
        ),
        260103,
        4,
    )?;
    let x3623: BytePoly_1 = bigint_sub!(x5, x3621, 1);
    eqz(ctx, &bigint_mul!(x3621, x3623, 2), 8131, 2)?;
    let x3624: BytePoly_32 = bigint_add!(bigint_sub!(x3620, x3606, 32), x3, 32);
    let x3625: BytePoly_32 = bigint_add!(bigint_sub!(x3617, x3604, 32), x3, 32);
    let x3626: BytePoly_32 = bigint_nondet_inv!(ctx, x3625, x3, 32);
    let x3627: BytePoly_64 = bigint_mul!(x3625, x3626, 64);
    let x3628: BytePoly_34 = bigint_nondet_quot!(ctx, x3627, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x3627, bigint_mul!(x3628, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x3629: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3624, x3626, 64), x3, 32);
    let x3630: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x3629, x3625, 64), x3624, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x3631: BytePoly_34 = bigint_nondet_quot!(ctx, x3630, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x3630, bigint_mul!(x3631, x3, 66), 66),
        276359,
        4,
    )?;
    let x3632: BytePoly_64 = bigint_mul!(x3629, x3629, 64);
    let x3633: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x3632, x3604, 64), x3, 64),
            x3617,
            64
        ),
        x3,
        64
    );
    let x3634: BytePoly_34 = bigint_nondet_quot!(ctx, x3633, x3, 34);
    let x3635: BytePoly_32 = bigint_nondet_rem!(ctx, x3633, x3, 32);
    let x3636: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x3629, x3635, 64),
                        bigint_add!(
                            bigint_sub!(x3606, bigint_mul!(x3629, x3604, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x3637: BytePoly_34 = bigint_nondet_quot!(ctx, x3636, x3, 34);
    let x3638: BytePoly_32 = bigint_nondet_rem!(ctx, x3636, x3, 32);
    let x3639: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3632, bigint_mul!(x3634, x3, 66), 66),
                        x3604,
                        66
                    ),
                    x3617,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x3635,
        66
    );
    eqz(ctx, &x3639, 276359, 4)?;
    let x3640: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x3637, x3, 66), x3638, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3629, bigint_sub!(x3604, x3635, 32), 64),
                        x3606,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x3640, 276359, 4)?;
    let x3641: BytePoly_33 = bigint_add!(
        bigint_mul!(x3635, x3621, 33),
        bigint_mul!(x3604, x3623, 33),
        33
    );
    let x3642: BytePoly_33 = bigint_add!(
        bigint_mul!(x3638, x3621, 33),
        bigint_mul!(x3606, x3623, 33),
        33
    );
    let x3643: BytePoly_3 = bigint_nondet_quot!(ctx, x3641, x3, 3);
    let x3644: BytePoly_32 = bigint_nondet_rem!(ctx, x3641, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3643, x3, 35), x3644, 35),
            x3641,
            35
        ),
        260103,
        4,
    )?;
    let x3645: BytePoly_3 = bigint_nondet_quot!(ctx, x3642, x3, 3);
    let x3646: BytePoly_32 = bigint_nondet_rem!(ctx, x3642, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3645, x3, 35), x3646, 35),
            x3642,
            35
        ),
        260103,
        4,
    )?;
    let x3647: BytePoly_64 = bigint_mul!(x3617, x3617, 64);
    let x3648: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x3647, x3647, 64), x3647, 64),
        x2,
        64
    );
    let x3649: BytePoly_64 = bigint_add!(x48, x3648, 64);
    let x3650: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x3620, x3620, 32), x3, 32);
    let x3651: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3648, x3650, 96), x3, 32);
    let x3652: BytePoly_64 = bigint_mul!(x3620, x3651, 64);
    let x3653: BytePoly_64 = bigint_add!(x3652, x3652, 64);
    let x3654: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x3649, x3653, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3654, x3, 66), x3653, 66),
            x3649,
            66
        ),
        276359,
        4,
    )?;
    let x3655: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x3651, x3651, 64), x3, 64), x3, 64),
            x3617,
            64
        ),
        x3617,
        64
    );
    let x3656: BytePoly_34 = bigint_nondet_quot!(ctx, x3655, x3, 34);
    let x3657: BytePoly_32 = bigint_nondet_rem!(ctx, x3655, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3656, x3, 66), x3657, 66),
            x3655,
            66
        ),
        276359,
        4,
    )?;
    let x3658: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x3651, x3657, 64), 64), x3, 64),
            x3620,
            64
        ),
        bigint_mul!(x3651, x3617, 64),
        64
    );
    let x3659: BytePoly_34 = bigint_nondet_quot!(ctx, x3658, x3, 34);
    let x3660: BytePoly_32 = bigint_nondet_rem!(ctx, x3658, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3659, x3, 66), x3660, 66),
            x3658,
            66
        ),
        276359,
        4,
    )?;
    let x3661: BytePoly_1 = bigint_nondet_rem!(ctx, x3622, x4, 1);
    let x3662: BytePoly_32 = bigint_nondet_quot!(ctx, x3622, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3662, x4, 33), x3661, 33),
            x3622,
            33
        ),
        260103,
        4,
    )?;
    let x3663: BytePoly_1 = bigint_sub!(x5, x3661, 1);
    eqz(ctx, &bigint_mul!(x3661, x3663, 2), 8131, 2)?;
    let x3664: BytePoly_32 = bigint_add!(bigint_sub!(x3660, x3646, 32), x3, 32);
    let x3665: BytePoly_32 = bigint_add!(bigint_sub!(x3657, x3644, 32), x3, 32);
    let x3666: BytePoly_32 = bigint_nondet_inv!(ctx, x3665, x3, 32);
    let x3667: BytePoly_64 = bigint_mul!(x3665, x3666, 64);
    let x3668: BytePoly_34 = bigint_nondet_quot!(ctx, x3667, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x3667, bigint_mul!(x3668, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x3669: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3664, x3666, 64), x3, 32);
    let x3670: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x3669, x3665, 64), x3664, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x3671: BytePoly_34 = bigint_nondet_quot!(ctx, x3670, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x3670, bigint_mul!(x3671, x3, 66), 66),
        276359,
        4,
    )?;
    let x3672: BytePoly_64 = bigint_mul!(x3669, x3669, 64);
    let x3673: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x3672, x3644, 64), x3, 64),
            x3657,
            64
        ),
        x3,
        64
    );
    let x3674: BytePoly_34 = bigint_nondet_quot!(ctx, x3673, x3, 34);
    let x3675: BytePoly_32 = bigint_nondet_rem!(ctx, x3673, x3, 32);
    let x3676: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x3669, x3675, 64),
                        bigint_add!(
                            bigint_sub!(x3646, bigint_mul!(x3669, x3644, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x3677: BytePoly_34 = bigint_nondet_quot!(ctx, x3676, x3, 34);
    let x3678: BytePoly_32 = bigint_nondet_rem!(ctx, x3676, x3, 32);
    let x3679: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3672, bigint_mul!(x3674, x3, 66), 66),
                        x3644,
                        66
                    ),
                    x3657,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x3675,
        66
    );
    eqz(ctx, &x3679, 276359, 4)?;
    let x3680: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x3677, x3, 66), x3678, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3669, bigint_sub!(x3644, x3675, 32), 64),
                        x3646,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x3680, 276359, 4)?;
    let x3681: BytePoly_33 = bigint_add!(
        bigint_mul!(x3675, x3661, 33),
        bigint_mul!(x3644, x3663, 33),
        33
    );
    let x3682: BytePoly_33 = bigint_add!(
        bigint_mul!(x3678, x3661, 33),
        bigint_mul!(x3646, x3663, 33),
        33
    );
    let x3683: BytePoly_3 = bigint_nondet_quot!(ctx, x3681, x3, 3);
    let x3684: BytePoly_32 = bigint_nondet_rem!(ctx, x3681, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3683, x3, 35), x3684, 35),
            x3681,
            35
        ),
        260103,
        4,
    )?;
    let x3685: BytePoly_3 = bigint_nondet_quot!(ctx, x3682, x3, 3);
    let x3686: BytePoly_32 = bigint_nondet_rem!(ctx, x3682, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3685, x3, 35), x3686, 35),
            x3682,
            35
        ),
        260103,
        4,
    )?;
    let x3687: BytePoly_64 = bigint_mul!(x3657, x3657, 64);
    let x3688: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x3687, x3687, 64), x3687, 64),
        x2,
        64
    );
    let x3689: BytePoly_64 = bigint_add!(x48, x3688, 64);
    let x3690: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x3660, x3660, 32), x3, 32);
    let x3691: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3688, x3690, 96), x3, 32);
    let x3692: BytePoly_64 = bigint_mul!(x3660, x3691, 64);
    let x3693: BytePoly_64 = bigint_add!(x3692, x3692, 64);
    let x3694: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x3689, x3693, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3694, x3, 66), x3693, 66),
            x3689,
            66
        ),
        276359,
        4,
    )?;
    let x3695: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x3691, x3691, 64), x3, 64), x3, 64),
            x3657,
            64
        ),
        x3657,
        64
    );
    let x3696: BytePoly_34 = bigint_nondet_quot!(ctx, x3695, x3, 34);
    let x3697: BytePoly_32 = bigint_nondet_rem!(ctx, x3695, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3696, x3, 66), x3697, 66),
            x3695,
            66
        ),
        276359,
        4,
    )?;
    let x3698: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x3691, x3697, 64), 64), x3, 64),
            x3660,
            64
        ),
        bigint_mul!(x3691, x3657, 64),
        64
    );
    let x3699: BytePoly_34 = bigint_nondet_quot!(ctx, x3698, x3, 34);
    let x3700: BytePoly_32 = bigint_nondet_rem!(ctx, x3698, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3699, x3, 66), x3700, 66),
            x3698,
            66
        ),
        276359,
        4,
    )?;
    let x3701: BytePoly_1 = bigint_nondet_rem!(ctx, x3662, x4, 1);
    let x3702: BytePoly_32 = bigint_nondet_quot!(ctx, x3662, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3702, x4, 33), x3701, 33),
            x3662,
            33
        ),
        260103,
        4,
    )?;
    let x3703: BytePoly_1 = bigint_sub!(x5, x3701, 1);
    eqz(ctx, &bigint_mul!(x3701, x3703, 2), 8131, 2)?;
    let x3704: BytePoly_32 = bigint_add!(bigint_sub!(x3700, x3686, 32), x3, 32);
    let x3705: BytePoly_32 = bigint_add!(bigint_sub!(x3697, x3684, 32), x3, 32);
    let x3706: BytePoly_32 = bigint_nondet_inv!(ctx, x3705, x3, 32);
    let x3707: BytePoly_64 = bigint_mul!(x3705, x3706, 64);
    let x3708: BytePoly_34 = bigint_nondet_quot!(ctx, x3707, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x3707, bigint_mul!(x3708, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x3709: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3704, x3706, 64), x3, 32);
    let x3710: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x3709, x3705, 64), x3704, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x3711: BytePoly_34 = bigint_nondet_quot!(ctx, x3710, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x3710, bigint_mul!(x3711, x3, 66), 66),
        276359,
        4,
    )?;
    let x3712: BytePoly_64 = bigint_mul!(x3709, x3709, 64);
    let x3713: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x3712, x3684, 64), x3, 64),
            x3697,
            64
        ),
        x3,
        64
    );
    let x3714: BytePoly_34 = bigint_nondet_quot!(ctx, x3713, x3, 34);
    let x3715: BytePoly_32 = bigint_nondet_rem!(ctx, x3713, x3, 32);
    let x3716: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x3709, x3715, 64),
                        bigint_add!(
                            bigint_sub!(x3686, bigint_mul!(x3709, x3684, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x3717: BytePoly_34 = bigint_nondet_quot!(ctx, x3716, x3, 34);
    let x3718: BytePoly_32 = bigint_nondet_rem!(ctx, x3716, x3, 32);
    let x3719: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3712, bigint_mul!(x3714, x3, 66), 66),
                        x3684,
                        66
                    ),
                    x3697,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x3715,
        66
    );
    eqz(ctx, &x3719, 276359, 4)?;
    let x3720: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x3717, x3, 66), x3718, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3709, bigint_sub!(x3684, x3715, 32), 64),
                        x3686,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x3720, 276359, 4)?;
    let x3721: BytePoly_33 = bigint_add!(
        bigint_mul!(x3715, x3701, 33),
        bigint_mul!(x3684, x3703, 33),
        33
    );
    let x3722: BytePoly_33 = bigint_add!(
        bigint_mul!(x3718, x3701, 33),
        bigint_mul!(x3686, x3703, 33),
        33
    );
    let x3723: BytePoly_3 = bigint_nondet_quot!(ctx, x3721, x3, 3);
    let x3724: BytePoly_32 = bigint_nondet_rem!(ctx, x3721, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3723, x3, 35), x3724, 35),
            x3721,
            35
        ),
        260103,
        4,
    )?;
    let x3725: BytePoly_3 = bigint_nondet_quot!(ctx, x3722, x3, 3);
    let x3726: BytePoly_32 = bigint_nondet_rem!(ctx, x3722, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3725, x3, 35), x3726, 35),
            x3722,
            35
        ),
        260103,
        4,
    )?;
    let x3727: BytePoly_64 = bigint_mul!(x3697, x3697, 64);
    let x3728: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x3727, x3727, 64), x3727, 64),
        x2,
        64
    );
    let x3729: BytePoly_64 = bigint_add!(x48, x3728, 64);
    let x3730: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x3700, x3700, 32), x3, 32);
    let x3731: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3728, x3730, 96), x3, 32);
    let x3732: BytePoly_64 = bigint_mul!(x3700, x3731, 64);
    let x3733: BytePoly_64 = bigint_add!(x3732, x3732, 64);
    let x3734: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x3729, x3733, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3734, x3, 66), x3733, 66),
            x3729,
            66
        ),
        276359,
        4,
    )?;
    let x3735: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x3731, x3731, 64), x3, 64), x3, 64),
            x3697,
            64
        ),
        x3697,
        64
    );
    let x3736: BytePoly_34 = bigint_nondet_quot!(ctx, x3735, x3, 34);
    let x3737: BytePoly_32 = bigint_nondet_rem!(ctx, x3735, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3736, x3, 66), x3737, 66),
            x3735,
            66
        ),
        276359,
        4,
    )?;
    let x3738: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x3731, x3737, 64), 64), x3, 64),
            x3700,
            64
        ),
        bigint_mul!(x3731, x3697, 64),
        64
    );
    let x3739: BytePoly_34 = bigint_nondet_quot!(ctx, x3738, x3, 34);
    let x3740: BytePoly_32 = bigint_nondet_rem!(ctx, x3738, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3739, x3, 66), x3740, 66),
            x3738,
            66
        ),
        276359,
        4,
    )?;
    let x3741: BytePoly_1 = bigint_nondet_rem!(ctx, x3702, x4, 1);
    let x3742: BytePoly_32 = bigint_nondet_quot!(ctx, x3702, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3742, x4, 33), x3741, 33),
            x3702,
            33
        ),
        260103,
        4,
    )?;
    let x3743: BytePoly_1 = bigint_sub!(x5, x3741, 1);
    eqz(ctx, &bigint_mul!(x3741, x3743, 2), 8131, 2)?;
    let x3744: BytePoly_32 = bigint_add!(bigint_sub!(x3740, x3726, 32), x3, 32);
    let x3745: BytePoly_32 = bigint_add!(bigint_sub!(x3737, x3724, 32), x3, 32);
    let x3746: BytePoly_32 = bigint_nondet_inv!(ctx, x3745, x3, 32);
    let x3747: BytePoly_64 = bigint_mul!(x3745, x3746, 64);
    let x3748: BytePoly_34 = bigint_nondet_quot!(ctx, x3747, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x3747, bigint_mul!(x3748, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x3749: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3744, x3746, 64), x3, 32);
    let x3750: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x3749, x3745, 64), x3744, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x3751: BytePoly_34 = bigint_nondet_quot!(ctx, x3750, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x3750, bigint_mul!(x3751, x3, 66), 66),
        276359,
        4,
    )?;
    let x3752: BytePoly_64 = bigint_mul!(x3749, x3749, 64);
    let x3753: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x3752, x3724, 64), x3, 64),
            x3737,
            64
        ),
        x3,
        64
    );
    let x3754: BytePoly_34 = bigint_nondet_quot!(ctx, x3753, x3, 34);
    let x3755: BytePoly_32 = bigint_nondet_rem!(ctx, x3753, x3, 32);
    let x3756: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x3749, x3755, 64),
                        bigint_add!(
                            bigint_sub!(x3726, bigint_mul!(x3749, x3724, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x3757: BytePoly_34 = bigint_nondet_quot!(ctx, x3756, x3, 34);
    let x3758: BytePoly_32 = bigint_nondet_rem!(ctx, x3756, x3, 32);
    let x3759: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3752, bigint_mul!(x3754, x3, 66), 66),
                        x3724,
                        66
                    ),
                    x3737,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x3755,
        66
    );
    eqz(ctx, &x3759, 276359, 4)?;
    let x3760: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x3757, x3, 66), x3758, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3749, bigint_sub!(x3724, x3755, 32), 64),
                        x3726,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x3760, 276359, 4)?;
    let x3761: BytePoly_33 = bigint_add!(
        bigint_mul!(x3755, x3741, 33),
        bigint_mul!(x3724, x3743, 33),
        33
    );
    let x3762: BytePoly_33 = bigint_add!(
        bigint_mul!(x3758, x3741, 33),
        bigint_mul!(x3726, x3743, 33),
        33
    );
    let x3763: BytePoly_3 = bigint_nondet_quot!(ctx, x3761, x3, 3);
    let x3764: BytePoly_32 = bigint_nondet_rem!(ctx, x3761, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3763, x3, 35), x3764, 35),
            x3761,
            35
        ),
        260103,
        4,
    )?;
    let x3765: BytePoly_3 = bigint_nondet_quot!(ctx, x3762, x3, 3);
    let x3766: BytePoly_32 = bigint_nondet_rem!(ctx, x3762, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3765, x3, 35), x3766, 35),
            x3762,
            35
        ),
        260103,
        4,
    )?;
    let x3767: BytePoly_64 = bigint_mul!(x3737, x3737, 64);
    let x3768: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x3767, x3767, 64), x3767, 64),
        x2,
        64
    );
    let x3769: BytePoly_64 = bigint_add!(x48, x3768, 64);
    let x3770: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x3740, x3740, 32), x3, 32);
    let x3771: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3768, x3770, 96), x3, 32);
    let x3772: BytePoly_64 = bigint_mul!(x3740, x3771, 64);
    let x3773: BytePoly_64 = bigint_add!(x3772, x3772, 64);
    let x3774: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x3769, x3773, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3774, x3, 66), x3773, 66),
            x3769,
            66
        ),
        276359,
        4,
    )?;
    let x3775: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x3771, x3771, 64), x3, 64), x3, 64),
            x3737,
            64
        ),
        x3737,
        64
    );
    let x3776: BytePoly_34 = bigint_nondet_quot!(ctx, x3775, x3, 34);
    let x3777: BytePoly_32 = bigint_nondet_rem!(ctx, x3775, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3776, x3, 66), x3777, 66),
            x3775,
            66
        ),
        276359,
        4,
    )?;
    let x3778: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x3771, x3777, 64), 64), x3, 64),
            x3740,
            64
        ),
        bigint_mul!(x3771, x3737, 64),
        64
    );
    let x3779: BytePoly_34 = bigint_nondet_quot!(ctx, x3778, x3, 34);
    let x3780: BytePoly_32 = bigint_nondet_rem!(ctx, x3778, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3779, x3, 66), x3780, 66),
            x3778,
            66
        ),
        276359,
        4,
    )?;
    let x3781: BytePoly_1 = bigint_nondet_rem!(ctx, x3742, x4, 1);
    let x3782: BytePoly_32 = bigint_nondet_quot!(ctx, x3742, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3782, x4, 33), x3781, 33),
            x3742,
            33
        ),
        260103,
        4,
    )?;
    let x3783: BytePoly_1 = bigint_sub!(x5, x3781, 1);
    eqz(ctx, &bigint_mul!(x3781, x3783, 2), 8131, 2)?;
    let x3784: BytePoly_32 = bigint_add!(bigint_sub!(x3780, x3766, 32), x3, 32);
    let x3785: BytePoly_32 = bigint_add!(bigint_sub!(x3777, x3764, 32), x3, 32);
    let x3786: BytePoly_32 = bigint_nondet_inv!(ctx, x3785, x3, 32);
    let x3787: BytePoly_64 = bigint_mul!(x3785, x3786, 64);
    let x3788: BytePoly_34 = bigint_nondet_quot!(ctx, x3787, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x3787, bigint_mul!(x3788, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x3789: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3784, x3786, 64), x3, 32);
    let x3790: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x3789, x3785, 64), x3784, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x3791: BytePoly_34 = bigint_nondet_quot!(ctx, x3790, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x3790, bigint_mul!(x3791, x3, 66), 66),
        276359,
        4,
    )?;
    let x3792: BytePoly_64 = bigint_mul!(x3789, x3789, 64);
    let x3793: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x3792, x3764, 64), x3, 64),
            x3777,
            64
        ),
        x3,
        64
    );
    let x3794: BytePoly_34 = bigint_nondet_quot!(ctx, x3793, x3, 34);
    let x3795: BytePoly_32 = bigint_nondet_rem!(ctx, x3793, x3, 32);
    let x3796: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x3789, x3795, 64),
                        bigint_add!(
                            bigint_sub!(x3766, bigint_mul!(x3789, x3764, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x3797: BytePoly_34 = bigint_nondet_quot!(ctx, x3796, x3, 34);
    let x3798: BytePoly_32 = bigint_nondet_rem!(ctx, x3796, x3, 32);
    let x3799: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3792, bigint_mul!(x3794, x3, 66), 66),
                        x3764,
                        66
                    ),
                    x3777,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x3795,
        66
    );
    eqz(ctx, &x3799, 276359, 4)?;
    let x3800: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x3797, x3, 66), x3798, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3789, bigint_sub!(x3764, x3795, 32), 64),
                        x3766,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x3800, 276359, 4)?;
    let x3801: BytePoly_33 = bigint_add!(
        bigint_mul!(x3795, x3781, 33),
        bigint_mul!(x3764, x3783, 33),
        33
    );
    let x3802: BytePoly_33 = bigint_add!(
        bigint_mul!(x3798, x3781, 33),
        bigint_mul!(x3766, x3783, 33),
        33
    );
    let x3803: BytePoly_3 = bigint_nondet_quot!(ctx, x3801, x3, 3);
    let x3804: BytePoly_32 = bigint_nondet_rem!(ctx, x3801, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3803, x3, 35), x3804, 35),
            x3801,
            35
        ),
        260103,
        4,
    )?;
    let x3805: BytePoly_3 = bigint_nondet_quot!(ctx, x3802, x3, 3);
    let x3806: BytePoly_32 = bigint_nondet_rem!(ctx, x3802, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3805, x3, 35), x3806, 35),
            x3802,
            35
        ),
        260103,
        4,
    )?;
    let x3807: BytePoly_64 = bigint_mul!(x3777, x3777, 64);
    let x3808: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x3807, x3807, 64), x3807, 64),
        x2,
        64
    );
    let x3809: BytePoly_64 = bigint_add!(x48, x3808, 64);
    let x3810: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x3780, x3780, 32), x3, 32);
    let x3811: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3808, x3810, 96), x3, 32);
    let x3812: BytePoly_64 = bigint_mul!(x3780, x3811, 64);
    let x3813: BytePoly_64 = bigint_add!(x3812, x3812, 64);
    let x3814: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x3809, x3813, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3814, x3, 66), x3813, 66),
            x3809,
            66
        ),
        276359,
        4,
    )?;
    let x3815: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x3811, x3811, 64), x3, 64), x3, 64),
            x3777,
            64
        ),
        x3777,
        64
    );
    let x3816: BytePoly_34 = bigint_nondet_quot!(ctx, x3815, x3, 34);
    let x3817: BytePoly_32 = bigint_nondet_rem!(ctx, x3815, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3816, x3, 66), x3817, 66),
            x3815,
            66
        ),
        276359,
        4,
    )?;
    let x3818: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x3811, x3817, 64), 64), x3, 64),
            x3780,
            64
        ),
        bigint_mul!(x3811, x3777, 64),
        64
    );
    let x3819: BytePoly_34 = bigint_nondet_quot!(ctx, x3818, x3, 34);
    let x3820: BytePoly_32 = bigint_nondet_rem!(ctx, x3818, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3819, x3, 66), x3820, 66),
            x3818,
            66
        ),
        276359,
        4,
    )?;
    let x3821: BytePoly_1 = bigint_nondet_rem!(ctx, x3782, x4, 1);
    let x3822: BytePoly_32 = bigint_nondet_quot!(ctx, x3782, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3822, x4, 33), x3821, 33),
            x3782,
            33
        ),
        260103,
        4,
    )?;
    let x3823: BytePoly_1 = bigint_sub!(x5, x3821, 1);
    eqz(ctx, &bigint_mul!(x3821, x3823, 2), 8131, 2)?;
    let x3824: BytePoly_32 = bigint_add!(bigint_sub!(x3820, x3806, 32), x3, 32);
    let x3825: BytePoly_32 = bigint_add!(bigint_sub!(x3817, x3804, 32), x3, 32);
    let x3826: BytePoly_32 = bigint_nondet_inv!(ctx, x3825, x3, 32);
    let x3827: BytePoly_64 = bigint_mul!(x3825, x3826, 64);
    let x3828: BytePoly_34 = bigint_nondet_quot!(ctx, x3827, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x3827, bigint_mul!(x3828, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x3829: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3824, x3826, 64), x3, 32);
    let x3830: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x3829, x3825, 64), x3824, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x3831: BytePoly_34 = bigint_nondet_quot!(ctx, x3830, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x3830, bigint_mul!(x3831, x3, 66), 66),
        276359,
        4,
    )?;
    let x3832: BytePoly_64 = bigint_mul!(x3829, x3829, 64);
    let x3833: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x3832, x3804, 64), x3, 64),
            x3817,
            64
        ),
        x3,
        64
    );
    let x3834: BytePoly_34 = bigint_nondet_quot!(ctx, x3833, x3, 34);
    let x3835: BytePoly_32 = bigint_nondet_rem!(ctx, x3833, x3, 32);
    let x3836: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x3829, x3835, 64),
                        bigint_add!(
                            bigint_sub!(x3806, bigint_mul!(x3829, x3804, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x3837: BytePoly_34 = bigint_nondet_quot!(ctx, x3836, x3, 34);
    let x3838: BytePoly_32 = bigint_nondet_rem!(ctx, x3836, x3, 32);
    let x3839: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3832, bigint_mul!(x3834, x3, 66), 66),
                        x3804,
                        66
                    ),
                    x3817,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x3835,
        66
    );
    eqz(ctx, &x3839, 276359, 4)?;
    let x3840: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x3837, x3, 66), x3838, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3829, bigint_sub!(x3804, x3835, 32), 64),
                        x3806,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x3840, 276359, 4)?;
    let x3841: BytePoly_33 = bigint_add!(
        bigint_mul!(x3835, x3821, 33),
        bigint_mul!(x3804, x3823, 33),
        33
    );
    let x3842: BytePoly_33 = bigint_add!(
        bigint_mul!(x3838, x3821, 33),
        bigint_mul!(x3806, x3823, 33),
        33
    );
    let x3843: BytePoly_3 = bigint_nondet_quot!(ctx, x3841, x3, 3);
    let x3844: BytePoly_32 = bigint_nondet_rem!(ctx, x3841, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3843, x3, 35), x3844, 35),
            x3841,
            35
        ),
        260103,
        4,
    )?;
    let x3845: BytePoly_3 = bigint_nondet_quot!(ctx, x3842, x3, 3);
    let x3846: BytePoly_32 = bigint_nondet_rem!(ctx, x3842, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3845, x3, 35), x3846, 35),
            x3842,
            35
        ),
        260103,
        4,
    )?;
    let x3847: BytePoly_64 = bigint_mul!(x3817, x3817, 64);
    let x3848: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x3847, x3847, 64), x3847, 64),
        x2,
        64
    );
    let x3849: BytePoly_64 = bigint_add!(x48, x3848, 64);
    let x3850: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x3820, x3820, 32), x3, 32);
    let x3851: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3848, x3850, 96), x3, 32);
    let x3852: BytePoly_64 = bigint_mul!(x3820, x3851, 64);
    let x3853: BytePoly_64 = bigint_add!(x3852, x3852, 64);
    let x3854: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x3849, x3853, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3854, x3, 66), x3853, 66),
            x3849,
            66
        ),
        276359,
        4,
    )?;
    let x3855: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x3851, x3851, 64), x3, 64), x3, 64),
            x3817,
            64
        ),
        x3817,
        64
    );
    let x3856: BytePoly_34 = bigint_nondet_quot!(ctx, x3855, x3, 34);
    let x3857: BytePoly_32 = bigint_nondet_rem!(ctx, x3855, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3856, x3, 66), x3857, 66),
            x3855,
            66
        ),
        276359,
        4,
    )?;
    let x3858: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x3851, x3857, 64), 64), x3, 64),
            x3820,
            64
        ),
        bigint_mul!(x3851, x3817, 64),
        64
    );
    let x3859: BytePoly_34 = bigint_nondet_quot!(ctx, x3858, x3, 34);
    let x3860: BytePoly_32 = bigint_nondet_rem!(ctx, x3858, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3859, x3, 66), x3860, 66),
            x3858,
            66
        ),
        276359,
        4,
    )?;
    let x3861: BytePoly_1 = bigint_nondet_rem!(ctx, x3822, x4, 1);
    let x3862: BytePoly_32 = bigint_nondet_quot!(ctx, x3822, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3862, x4, 33), x3861, 33),
            x3822,
            33
        ),
        260103,
        4,
    )?;
    let x3863: BytePoly_1 = bigint_sub!(x5, x3861, 1);
    eqz(ctx, &bigint_mul!(x3861, x3863, 2), 8131, 2)?;
    let x3864: BytePoly_32 = bigint_add!(bigint_sub!(x3860, x3846, 32), x3, 32);
    let x3865: BytePoly_32 = bigint_add!(bigint_sub!(x3857, x3844, 32), x3, 32);
    let x3866: BytePoly_32 = bigint_nondet_inv!(ctx, x3865, x3, 32);
    let x3867: BytePoly_64 = bigint_mul!(x3865, x3866, 64);
    let x3868: BytePoly_34 = bigint_nondet_quot!(ctx, x3867, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x3867, bigint_mul!(x3868, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x3869: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3864, x3866, 64), x3, 32);
    let x3870: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x3869, x3865, 64), x3864, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x3871: BytePoly_34 = bigint_nondet_quot!(ctx, x3870, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x3870, bigint_mul!(x3871, x3, 66), 66),
        276359,
        4,
    )?;
    let x3872: BytePoly_64 = bigint_mul!(x3869, x3869, 64);
    let x3873: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x3872, x3844, 64), x3, 64),
            x3857,
            64
        ),
        x3,
        64
    );
    let x3874: BytePoly_34 = bigint_nondet_quot!(ctx, x3873, x3, 34);
    let x3875: BytePoly_32 = bigint_nondet_rem!(ctx, x3873, x3, 32);
    let x3876: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x3869, x3875, 64),
                        bigint_add!(
                            bigint_sub!(x3846, bigint_mul!(x3869, x3844, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x3877: BytePoly_34 = bigint_nondet_quot!(ctx, x3876, x3, 34);
    let x3878: BytePoly_32 = bigint_nondet_rem!(ctx, x3876, x3, 32);
    let x3879: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3872, bigint_mul!(x3874, x3, 66), 66),
                        x3844,
                        66
                    ),
                    x3857,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x3875,
        66
    );
    eqz(ctx, &x3879, 276359, 4)?;
    let x3880: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x3877, x3, 66), x3878, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3869, bigint_sub!(x3844, x3875, 32), 64),
                        x3846,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x3880, 276359, 4)?;
    let x3881: BytePoly_33 = bigint_add!(
        bigint_mul!(x3875, x3861, 33),
        bigint_mul!(x3844, x3863, 33),
        33
    );
    let x3882: BytePoly_33 = bigint_add!(
        bigint_mul!(x3878, x3861, 33),
        bigint_mul!(x3846, x3863, 33),
        33
    );
    let x3883: BytePoly_3 = bigint_nondet_quot!(ctx, x3881, x3, 3);
    let x3884: BytePoly_32 = bigint_nondet_rem!(ctx, x3881, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3883, x3, 35), x3884, 35),
            x3881,
            35
        ),
        260103,
        4,
    )?;
    let x3885: BytePoly_3 = bigint_nondet_quot!(ctx, x3882, x3, 3);
    let x3886: BytePoly_32 = bigint_nondet_rem!(ctx, x3882, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3885, x3, 35), x3886, 35),
            x3882,
            35
        ),
        260103,
        4,
    )?;
    let x3887: BytePoly_64 = bigint_mul!(x3857, x3857, 64);
    let x3888: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x3887, x3887, 64), x3887, 64),
        x2,
        64
    );
    let x3889: BytePoly_64 = bigint_add!(x48, x3888, 64);
    let x3890: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x3860, x3860, 32), x3, 32);
    let x3891: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3888, x3890, 96), x3, 32);
    let x3892: BytePoly_64 = bigint_mul!(x3860, x3891, 64);
    let x3893: BytePoly_64 = bigint_add!(x3892, x3892, 64);
    let x3894: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x3889, x3893, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3894, x3, 66), x3893, 66),
            x3889,
            66
        ),
        276359,
        4,
    )?;
    let x3895: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x3891, x3891, 64), x3, 64), x3, 64),
            x3857,
            64
        ),
        x3857,
        64
    );
    let x3896: BytePoly_34 = bigint_nondet_quot!(ctx, x3895, x3, 34);
    let x3897: BytePoly_32 = bigint_nondet_rem!(ctx, x3895, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3896, x3, 66), x3897, 66),
            x3895,
            66
        ),
        276359,
        4,
    )?;
    let x3898: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x3891, x3897, 64), 64), x3, 64),
            x3860,
            64
        ),
        bigint_mul!(x3891, x3857, 64),
        64
    );
    let x3899: BytePoly_34 = bigint_nondet_quot!(ctx, x3898, x3, 34);
    let x3900: BytePoly_32 = bigint_nondet_rem!(ctx, x3898, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3899, x3, 66), x3900, 66),
            x3898,
            66
        ),
        276359,
        4,
    )?;
    let x3901: BytePoly_1 = bigint_nondet_rem!(ctx, x3862, x4, 1);
    let x3902: BytePoly_32 = bigint_nondet_quot!(ctx, x3862, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3902, x4, 33), x3901, 33),
            x3862,
            33
        ),
        260103,
        4,
    )?;
    let x3903: BytePoly_1 = bigint_sub!(x5, x3901, 1);
    eqz(ctx, &bigint_mul!(x3901, x3903, 2), 8131, 2)?;
    let x3904: BytePoly_32 = bigint_add!(bigint_sub!(x3900, x3886, 32), x3, 32);
    let x3905: BytePoly_32 = bigint_add!(bigint_sub!(x3897, x3884, 32), x3, 32);
    let x3906: BytePoly_32 = bigint_nondet_inv!(ctx, x3905, x3, 32);
    let x3907: BytePoly_64 = bigint_mul!(x3905, x3906, 64);
    let x3908: BytePoly_34 = bigint_nondet_quot!(ctx, x3907, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x3907, bigint_mul!(x3908, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x3909: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3904, x3906, 64), x3, 32);
    let x3910: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x3909, x3905, 64), x3904, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x3911: BytePoly_34 = bigint_nondet_quot!(ctx, x3910, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x3910, bigint_mul!(x3911, x3, 66), 66),
        276359,
        4,
    )?;
    let x3912: BytePoly_64 = bigint_mul!(x3909, x3909, 64);
    let x3913: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x3912, x3884, 64), x3, 64),
            x3897,
            64
        ),
        x3,
        64
    );
    let x3914: BytePoly_34 = bigint_nondet_quot!(ctx, x3913, x3, 34);
    let x3915: BytePoly_32 = bigint_nondet_rem!(ctx, x3913, x3, 32);
    let x3916: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x3909, x3915, 64),
                        bigint_add!(
                            bigint_sub!(x3886, bigint_mul!(x3909, x3884, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x3917: BytePoly_34 = bigint_nondet_quot!(ctx, x3916, x3, 34);
    let x3918: BytePoly_32 = bigint_nondet_rem!(ctx, x3916, x3, 32);
    let x3919: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3912, bigint_mul!(x3914, x3, 66), 66),
                        x3884,
                        66
                    ),
                    x3897,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x3915,
        66
    );
    eqz(ctx, &x3919, 276359, 4)?;
    let x3920: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x3917, x3, 66), x3918, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3909, bigint_sub!(x3884, x3915, 32), 64),
                        x3886,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x3920, 276359, 4)?;
    let x3921: BytePoly_33 = bigint_add!(
        bigint_mul!(x3915, x3901, 33),
        bigint_mul!(x3884, x3903, 33),
        33
    );
    let x3922: BytePoly_33 = bigint_add!(
        bigint_mul!(x3918, x3901, 33),
        bigint_mul!(x3886, x3903, 33),
        33
    );
    let x3923: BytePoly_3 = bigint_nondet_quot!(ctx, x3921, x3, 3);
    let x3924: BytePoly_32 = bigint_nondet_rem!(ctx, x3921, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3923, x3, 35), x3924, 35),
            x3921,
            35
        ),
        260103,
        4,
    )?;
    let x3925: BytePoly_3 = bigint_nondet_quot!(ctx, x3922, x3, 3);
    let x3926: BytePoly_32 = bigint_nondet_rem!(ctx, x3922, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3925, x3, 35), x3926, 35),
            x3922,
            35
        ),
        260103,
        4,
    )?;
    let x3927: BytePoly_64 = bigint_mul!(x3897, x3897, 64);
    let x3928: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x3927, x3927, 64), x3927, 64),
        x2,
        64
    );
    let x3929: BytePoly_64 = bigint_add!(x48, x3928, 64);
    let x3930: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x3900, x3900, 32), x3, 32);
    let x3931: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3928, x3930, 96), x3, 32);
    let x3932: BytePoly_64 = bigint_mul!(x3900, x3931, 64);
    let x3933: BytePoly_64 = bigint_add!(x3932, x3932, 64);
    let x3934: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x3929, x3933, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3934, x3, 66), x3933, 66),
            x3929,
            66
        ),
        276359,
        4,
    )?;
    let x3935: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x3931, x3931, 64), x3, 64), x3, 64),
            x3897,
            64
        ),
        x3897,
        64
    );
    let x3936: BytePoly_34 = bigint_nondet_quot!(ctx, x3935, x3, 34);
    let x3937: BytePoly_32 = bigint_nondet_rem!(ctx, x3935, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3936, x3, 66), x3937, 66),
            x3935,
            66
        ),
        276359,
        4,
    )?;
    let x3938: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x3931, x3937, 64), 64), x3, 64),
            x3900,
            64
        ),
        bigint_mul!(x3931, x3897, 64),
        64
    );
    let x3939: BytePoly_34 = bigint_nondet_quot!(ctx, x3938, x3, 34);
    let x3940: BytePoly_32 = bigint_nondet_rem!(ctx, x3938, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3939, x3, 66), x3940, 66),
            x3938,
            66
        ),
        276359,
        4,
    )?;
    let x3941: BytePoly_1 = bigint_nondet_rem!(ctx, x3902, x4, 1);
    let x3942: BytePoly_32 = bigint_nondet_quot!(ctx, x3902, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3942, x4, 33), x3941, 33),
            x3902,
            33
        ),
        260103,
        4,
    )?;
    let x3943: BytePoly_1 = bigint_sub!(x5, x3941, 1);
    eqz(ctx, &bigint_mul!(x3941, x3943, 2), 8131, 2)?;
    let x3944: BytePoly_32 = bigint_add!(bigint_sub!(x3940, x3926, 32), x3, 32);
    let x3945: BytePoly_32 = bigint_add!(bigint_sub!(x3937, x3924, 32), x3, 32);
    let x3946: BytePoly_32 = bigint_nondet_inv!(ctx, x3945, x3, 32);
    let x3947: BytePoly_64 = bigint_mul!(x3945, x3946, 64);
    let x3948: BytePoly_34 = bigint_nondet_quot!(ctx, x3947, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x3947, bigint_mul!(x3948, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x3949: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3944, x3946, 64), x3, 32);
    let x3950: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x3949, x3945, 64), x3944, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x3951: BytePoly_34 = bigint_nondet_quot!(ctx, x3950, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x3950, bigint_mul!(x3951, x3, 66), 66),
        276359,
        4,
    )?;
    let x3952: BytePoly_64 = bigint_mul!(x3949, x3949, 64);
    let x3953: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x3952, x3924, 64), x3, 64),
            x3937,
            64
        ),
        x3,
        64
    );
    let x3954: BytePoly_34 = bigint_nondet_quot!(ctx, x3953, x3, 34);
    let x3955: BytePoly_32 = bigint_nondet_rem!(ctx, x3953, x3, 32);
    let x3956: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x3949, x3955, 64),
                        bigint_add!(
                            bigint_sub!(x3926, bigint_mul!(x3949, x3924, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x3957: BytePoly_34 = bigint_nondet_quot!(ctx, x3956, x3, 34);
    let x3958: BytePoly_32 = bigint_nondet_rem!(ctx, x3956, x3, 32);
    let x3959: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3952, bigint_mul!(x3954, x3, 66), 66),
                        x3924,
                        66
                    ),
                    x3937,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x3955,
        66
    );
    eqz(ctx, &x3959, 276359, 4)?;
    let x3960: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x3957, x3, 66), x3958, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3949, bigint_sub!(x3924, x3955, 32), 64),
                        x3926,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x3960, 276359, 4)?;
    let x3961: BytePoly_33 = bigint_add!(
        bigint_mul!(x3955, x3941, 33),
        bigint_mul!(x3924, x3943, 33),
        33
    );
    let x3962: BytePoly_33 = bigint_add!(
        bigint_mul!(x3958, x3941, 33),
        bigint_mul!(x3926, x3943, 33),
        33
    );
    let x3963: BytePoly_3 = bigint_nondet_quot!(ctx, x3961, x3, 3);
    let x3964: BytePoly_32 = bigint_nondet_rem!(ctx, x3961, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3963, x3, 35), x3964, 35),
            x3961,
            35
        ),
        260103,
        4,
    )?;
    let x3965: BytePoly_3 = bigint_nondet_quot!(ctx, x3962, x3, 3);
    let x3966: BytePoly_32 = bigint_nondet_rem!(ctx, x3962, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3965, x3, 35), x3966, 35),
            x3962,
            35
        ),
        260103,
        4,
    )?;
    let x3967: BytePoly_64 = bigint_mul!(x3937, x3937, 64);
    let x3968: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x3967, x3967, 64), x3967, 64),
        x2,
        64
    );
    let x3969: BytePoly_64 = bigint_add!(x48, x3968, 64);
    let x3970: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x3940, x3940, 32), x3, 32);
    let x3971: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3968, x3970, 96), x3, 32);
    let x3972: BytePoly_64 = bigint_mul!(x3940, x3971, 64);
    let x3973: BytePoly_64 = bigint_add!(x3972, x3972, 64);
    let x3974: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x3969, x3973, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3974, x3, 66), x3973, 66),
            x3969,
            66
        ),
        276359,
        4,
    )?;
    let x3975: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x3971, x3971, 64), x3, 64), x3, 64),
            x3937,
            64
        ),
        x3937,
        64
    );
    let x3976: BytePoly_34 = bigint_nondet_quot!(ctx, x3975, x3, 34);
    let x3977: BytePoly_32 = bigint_nondet_rem!(ctx, x3975, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3976, x3, 66), x3977, 66),
            x3975,
            66
        ),
        276359,
        4,
    )?;
    let x3978: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x3971, x3977, 64), 64), x3, 64),
            x3940,
            64
        ),
        bigint_mul!(x3971, x3937, 64),
        64
    );
    let x3979: BytePoly_34 = bigint_nondet_quot!(ctx, x3978, x3, 34);
    let x3980: BytePoly_32 = bigint_nondet_rem!(ctx, x3978, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3979, x3, 66), x3980, 66),
            x3978,
            66
        ),
        276359,
        4,
    )?;
    let x3981: BytePoly_1 = bigint_nondet_rem!(ctx, x3942, x4, 1);
    let x3982: BytePoly_32 = bigint_nondet_quot!(ctx, x3942, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3982, x4, 33), x3981, 33),
            x3942,
            33
        ),
        260103,
        4,
    )?;
    let x3983: BytePoly_1 = bigint_sub!(x5, x3981, 1);
    eqz(ctx, &bigint_mul!(x3981, x3983, 2), 8131, 2)?;
    let x3984: BytePoly_32 = bigint_add!(bigint_sub!(x3980, x3966, 32), x3, 32);
    let x3985: BytePoly_32 = bigint_add!(bigint_sub!(x3977, x3964, 32), x3, 32);
    let x3986: BytePoly_32 = bigint_nondet_inv!(ctx, x3985, x3, 32);
    let x3987: BytePoly_64 = bigint_mul!(x3985, x3986, 64);
    let x3988: BytePoly_34 = bigint_nondet_quot!(ctx, x3987, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x3987, bigint_mul!(x3988, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x3989: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3984, x3986, 64), x3, 32);
    let x3990: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x3989, x3985, 64), x3984, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x3991: BytePoly_34 = bigint_nondet_quot!(ctx, x3990, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x3990, bigint_mul!(x3991, x3, 66), 66),
        276359,
        4,
    )?;
    let x3992: BytePoly_64 = bigint_mul!(x3989, x3989, 64);
    let x3993: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x3992, x3964, 64), x3, 64),
            x3977,
            64
        ),
        x3,
        64
    );
    let x3994: BytePoly_34 = bigint_nondet_quot!(ctx, x3993, x3, 34);
    let x3995: BytePoly_32 = bigint_nondet_rem!(ctx, x3993, x3, 32);
    let x3996: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x3989, x3995, 64),
                        bigint_add!(
                            bigint_sub!(x3966, bigint_mul!(x3989, x3964, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x3997: BytePoly_34 = bigint_nondet_quot!(ctx, x3996, x3, 34);
    let x3998: BytePoly_32 = bigint_nondet_rem!(ctx, x3996, x3, 32);
    let x3999: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3992, bigint_mul!(x3994, x3, 66), 66),
                        x3964,
                        66
                    ),
                    x3977,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x3995,
        66
    );
    eqz(ctx, &x3999, 276359, 4)?;
    let x4000: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x3997, x3, 66), x3998, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3989, bigint_sub!(x3964, x3995, 32), 64),
                        x3966,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x4000, 276359, 4)?;
    let x4001: BytePoly_33 = bigint_add!(
        bigint_mul!(x3995, x3981, 33),
        bigint_mul!(x3964, x3983, 33),
        33
    );
    let x4002: BytePoly_33 = bigint_add!(
        bigint_mul!(x3998, x3981, 33),
        bigint_mul!(x3966, x3983, 33),
        33
    );
    let x4003: BytePoly_3 = bigint_nondet_quot!(ctx, x4001, x3, 3);
    let x4004: BytePoly_32 = bigint_nondet_rem!(ctx, x4001, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4003, x3, 35), x4004, 35),
            x4001,
            35
        ),
        260103,
        4,
    )?;
    let x4005: BytePoly_3 = bigint_nondet_quot!(ctx, x4002, x3, 3);
    let x4006: BytePoly_32 = bigint_nondet_rem!(ctx, x4002, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4005, x3, 35), x4006, 35),
            x4002,
            35
        ),
        260103,
        4,
    )?;
    let x4007: BytePoly_64 = bigint_mul!(x3977, x3977, 64);
    let x4008: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x4007, x4007, 64), x4007, 64),
        x2,
        64
    );
    let x4009: BytePoly_64 = bigint_add!(x48, x4008, 64);
    let x4010: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x3980, x3980, 32), x3, 32);
    let x4011: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x4008, x4010, 96), x3, 32);
    let x4012: BytePoly_64 = bigint_mul!(x3980, x4011, 64);
    let x4013: BytePoly_64 = bigint_add!(x4012, x4012, 64);
    let x4014: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x4009, x4013, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4014, x3, 66), x4013, 66),
            x4009,
            66
        ),
        276359,
        4,
    )?;
    let x4015: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x4011, x4011, 64), x3, 64), x3, 64),
            x3977,
            64
        ),
        x3977,
        64
    );
    let x4016: BytePoly_34 = bigint_nondet_quot!(ctx, x4015, x3, 34);
    let x4017: BytePoly_32 = bigint_nondet_rem!(ctx, x4015, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4016, x3, 66), x4017, 66),
            x4015,
            66
        ),
        276359,
        4,
    )?;
    let x4018: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x4011, x4017, 64), 64), x3, 64),
            x3980,
            64
        ),
        bigint_mul!(x4011, x3977, 64),
        64
    );
    let x4019: BytePoly_34 = bigint_nondet_quot!(ctx, x4018, x3, 34);
    let x4020: BytePoly_32 = bigint_nondet_rem!(ctx, x4018, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4019, x3, 66), x4020, 66),
            x4018,
            66
        ),
        276359,
        4,
    )?;
    let x4021: BytePoly_1 = bigint_nondet_rem!(ctx, x3982, x4, 1);
    let x4022: BytePoly_32 = bigint_nondet_quot!(ctx, x3982, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4022, x4, 33), x4021, 33),
            x3982,
            33
        ),
        260103,
        4,
    )?;
    let x4023: BytePoly_1 = bigint_sub!(x5, x4021, 1);
    eqz(ctx, &bigint_mul!(x4021, x4023, 2), 8131, 2)?;
    let x4024: BytePoly_32 = bigint_add!(bigint_sub!(x4020, x4006, 32), x3, 32);
    let x4025: BytePoly_32 = bigint_add!(bigint_sub!(x4017, x4004, 32), x3, 32);
    let x4026: BytePoly_32 = bigint_nondet_inv!(ctx, x4025, x3, 32);
    let x4027: BytePoly_64 = bigint_mul!(x4025, x4026, 64);
    let x4028: BytePoly_34 = bigint_nondet_quot!(ctx, x4027, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x4027, bigint_mul!(x4028, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x4029: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x4024, x4026, 64), x3, 32);
    let x4030: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x4029, x4025, 64), x4024, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x4031: BytePoly_34 = bigint_nondet_quot!(ctx, x4030, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x4030, bigint_mul!(x4031, x3, 66), 66),
        276359,
        4,
    )?;
    let x4032: BytePoly_64 = bigint_mul!(x4029, x4029, 64);
    let x4033: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x4032, x4004, 64), x3, 64),
            x4017,
            64
        ),
        x3,
        64
    );
    let x4034: BytePoly_34 = bigint_nondet_quot!(ctx, x4033, x3, 34);
    let x4035: BytePoly_32 = bigint_nondet_rem!(ctx, x4033, x3, 32);
    let x4036: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x4029, x4035, 64),
                        bigint_add!(
                            bigint_sub!(x4006, bigint_mul!(x4029, x4004, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x4037: BytePoly_34 = bigint_nondet_quot!(ctx, x4036, x3, 34);
    let x4038: BytePoly_32 = bigint_nondet_rem!(ctx, x4036, x3, 32);
    let x4039: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x4032, bigint_mul!(x4034, x3, 66), 66),
                        x4004,
                        66
                    ),
                    x4017,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x4035,
        66
    );
    eqz(ctx, &x4039, 276359, 4)?;
    let x4040: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x4037, x3, 66), x4038, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x4029, bigint_sub!(x4004, x4035, 32), 64),
                        x4006,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x4040, 276359, 4)?;
    let x4041: BytePoly_33 = bigint_add!(
        bigint_mul!(x4035, x4021, 33),
        bigint_mul!(x4004, x4023, 33),
        33
    );
    let x4042: BytePoly_33 = bigint_add!(
        bigint_mul!(x4038, x4021, 33),
        bigint_mul!(x4006, x4023, 33),
        33
    );
    let x4043: BytePoly_3 = bigint_nondet_quot!(ctx, x4041, x3, 3);
    let x4044: BytePoly_32 = bigint_nondet_rem!(ctx, x4041, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4043, x3, 35), x4044, 35),
            x4041,
            35
        ),
        260103,
        4,
    )?;
    let x4045: BytePoly_3 = bigint_nondet_quot!(ctx, x4042, x3, 3);
    let x4046: BytePoly_32 = bigint_nondet_rem!(ctx, x4042, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4045, x3, 35), x4046, 35),
            x4042,
            35
        ),
        260103,
        4,
    )?;
    let x4047: BytePoly_64 = bigint_mul!(x4017, x4017, 64);
    let x4048: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x4047, x4047, 64), x4047, 64),
        x2,
        64
    );
    let x4049: BytePoly_64 = bigint_add!(x48, x4048, 64);
    let x4050: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x4020, x4020, 32), x3, 32);
    let x4051: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x4048, x4050, 96), x3, 32);
    let x4052: BytePoly_64 = bigint_mul!(x4020, x4051, 64);
    let x4053: BytePoly_64 = bigint_add!(x4052, x4052, 64);
    let x4054: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x4049, x4053, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4054, x3, 66), x4053, 66),
            x4049,
            66
        ),
        276359,
        4,
    )?;
    let x4055: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x4051, x4051, 64), x3, 64), x3, 64),
            x4017,
            64
        ),
        x4017,
        64
    );
    let x4056: BytePoly_34 = bigint_nondet_quot!(ctx, x4055, x3, 34);
    let x4057: BytePoly_32 = bigint_nondet_rem!(ctx, x4055, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4056, x3, 66), x4057, 66),
            x4055,
            66
        ),
        276359,
        4,
    )?;
    let x4058: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x4051, x4057, 64), 64), x3, 64),
            x4020,
            64
        ),
        bigint_mul!(x4051, x4017, 64),
        64
    );
    let x4059: BytePoly_34 = bigint_nondet_quot!(ctx, x4058, x3, 34);
    let x4060: BytePoly_32 = bigint_nondet_rem!(ctx, x4058, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4059, x3, 66), x4060, 66),
            x4058,
            66
        ),
        276359,
        4,
    )?;
    let x4061: BytePoly_1 = bigint_nondet_rem!(ctx, x4022, x4, 1);
    let x4062: BytePoly_32 = bigint_nondet_quot!(ctx, x4022, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4062, x4, 33), x4061, 33),
            x4022,
            33
        ),
        260103,
        4,
    )?;
    let x4063: BytePoly_1 = bigint_sub!(x5, x4061, 1);
    eqz(ctx, &bigint_mul!(x4061, x4063, 2), 8131, 2)?;
    let x4064: BytePoly_32 = bigint_add!(bigint_sub!(x4060, x4046, 32), x3, 32);
    let x4065: BytePoly_32 = bigint_add!(bigint_sub!(x4057, x4044, 32), x3, 32);
    let x4066: BytePoly_32 = bigint_nondet_inv!(ctx, x4065, x3, 32);
    let x4067: BytePoly_64 = bigint_mul!(x4065, x4066, 64);
    let x4068: BytePoly_34 = bigint_nondet_quot!(ctx, x4067, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x4067, bigint_mul!(x4068, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x4069: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x4064, x4066, 64), x3, 32);
    let x4070: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x4069, x4065, 64), x4064, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x4071: BytePoly_34 = bigint_nondet_quot!(ctx, x4070, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x4070, bigint_mul!(x4071, x3, 66), 66),
        276359,
        4,
    )?;
    let x4072: BytePoly_64 = bigint_mul!(x4069, x4069, 64);
    let x4073: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x4072, x4044, 64), x3, 64),
            x4057,
            64
        ),
        x3,
        64
    );
    let x4074: BytePoly_34 = bigint_nondet_quot!(ctx, x4073, x3, 34);
    let x4075: BytePoly_32 = bigint_nondet_rem!(ctx, x4073, x3, 32);
    let x4076: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x4069, x4075, 64),
                        bigint_add!(
                            bigint_sub!(x4046, bigint_mul!(x4069, x4044, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x4077: BytePoly_34 = bigint_nondet_quot!(ctx, x4076, x3, 34);
    let x4078: BytePoly_32 = bigint_nondet_rem!(ctx, x4076, x3, 32);
    let x4079: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x4072, bigint_mul!(x4074, x3, 66), 66),
                        x4044,
                        66
                    ),
                    x4057,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x4075,
        66
    );
    eqz(ctx, &x4079, 276359, 4)?;
    let x4080: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x4077, x3, 66), x4078, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x4069, bigint_sub!(x4044, x4075, 32), 64),
                        x4046,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x4080, 276359, 4)?;
    let x4081: BytePoly_33 = bigint_add!(
        bigint_mul!(x4075, x4061, 33),
        bigint_mul!(x4044, x4063, 33),
        33
    );
    let x4082: BytePoly_33 = bigint_add!(
        bigint_mul!(x4078, x4061, 33),
        bigint_mul!(x4046, x4063, 33),
        33
    );
    let x4083: BytePoly_3 = bigint_nondet_quot!(ctx, x4081, x3, 3);
    let x4084: BytePoly_32 = bigint_nondet_rem!(ctx, x4081, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4083, x3, 35), x4084, 35),
            x4081,
            35
        ),
        260103,
        4,
    )?;
    let x4085: BytePoly_3 = bigint_nondet_quot!(ctx, x4082, x3, 3);
    let x4086: BytePoly_32 = bigint_nondet_rem!(ctx, x4082, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4085, x3, 35), x4086, 35),
            x4082,
            35
        ),
        260103,
        4,
    )?;
    let x4087: BytePoly_64 = bigint_mul!(x4057, x4057, 64);
    let x4088: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x4087, x4087, 64), x4087, 64),
        x2,
        64
    );
    let x4089: BytePoly_64 = bigint_add!(x48, x4088, 64);
    let x4090: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x4060, x4060, 32), x3, 32);
    let x4091: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x4088, x4090, 96), x3, 32);
    let x4092: BytePoly_64 = bigint_mul!(x4060, x4091, 64);
    let x4093: BytePoly_64 = bigint_add!(x4092, x4092, 64);
    let x4094: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x4089, x4093, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4094, x3, 66), x4093, 66),
            x4089,
            66
        ),
        276359,
        4,
    )?;
    let x4095: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x4091, x4091, 64), x3, 64), x3, 64),
            x4057,
            64
        ),
        x4057,
        64
    );
    let x4096: BytePoly_34 = bigint_nondet_quot!(ctx, x4095, x3, 34);
    let x4097: BytePoly_32 = bigint_nondet_rem!(ctx, x4095, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4096, x3, 66), x4097, 66),
            x4095,
            66
        ),
        276359,
        4,
    )?;
    let x4098: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x4091, x4097, 64), 64), x3, 64),
            x4060,
            64
        ),
        bigint_mul!(x4091, x4057, 64),
        64
    );
    let x4099: BytePoly_34 = bigint_nondet_quot!(ctx, x4098, x3, 34);
    let x4100: BytePoly_32 = bigint_nondet_rem!(ctx, x4098, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4099, x3, 66), x4100, 66),
            x4098,
            66
        ),
        276359,
        4,
    )?;
    let x4101: BytePoly_1 = bigint_nondet_rem!(ctx, x4062, x4, 1);
    let x4102: BytePoly_32 = bigint_nondet_quot!(ctx, x4062, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4102, x4, 33), x4101, 33),
            x4062,
            33
        ),
        260103,
        4,
    )?;
    let x4103: BytePoly_1 = bigint_sub!(x5, x4101, 1);
    eqz(ctx, &bigint_mul!(x4101, x4103, 2), 8131, 2)?;
    let x4104: BytePoly_32 = bigint_add!(bigint_sub!(x4100, x4086, 32), x3, 32);
    let x4105: BytePoly_32 = bigint_add!(bigint_sub!(x4097, x4084, 32), x3, 32);
    let x4106: BytePoly_32 = bigint_nondet_inv!(ctx, x4105, x3, 32);
    let x4107: BytePoly_64 = bigint_mul!(x4105, x4106, 64);
    let x4108: BytePoly_34 = bigint_nondet_quot!(ctx, x4107, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x4107, bigint_mul!(x4108, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x4109: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x4104, x4106, 64), x3, 32);
    let x4110: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x4109, x4105, 64), x4104, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x4111: BytePoly_34 = bigint_nondet_quot!(ctx, x4110, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x4110, bigint_mul!(x4111, x3, 66), 66),
        276359,
        4,
    )?;
    let x4112: BytePoly_64 = bigint_mul!(x4109, x4109, 64);
    let x4113: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x4112, x4084, 64), x3, 64),
            x4097,
            64
        ),
        x3,
        64
    );
    let x4114: BytePoly_34 = bigint_nondet_quot!(ctx, x4113, x3, 34);
    let x4115: BytePoly_32 = bigint_nondet_rem!(ctx, x4113, x3, 32);
    let x4116: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x4109, x4115, 64),
                        bigint_add!(
                            bigint_sub!(x4086, bigint_mul!(x4109, x4084, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x4117: BytePoly_34 = bigint_nondet_quot!(ctx, x4116, x3, 34);
    let x4118: BytePoly_32 = bigint_nondet_rem!(ctx, x4116, x3, 32);
    let x4119: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x4112, bigint_mul!(x4114, x3, 66), 66),
                        x4084,
                        66
                    ),
                    x4097,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x4115,
        66
    );
    eqz(ctx, &x4119, 276359, 4)?;
    let x4120: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x4117, x3, 66), x4118, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x4109, bigint_sub!(x4084, x4115, 32), 64),
                        x4086,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x4120, 276359, 4)?;
    let x4121: BytePoly_33 = bigint_add!(
        bigint_mul!(x4115, x4101, 33),
        bigint_mul!(x4084, x4103, 33),
        33
    );
    let x4122: BytePoly_33 = bigint_add!(
        bigint_mul!(x4118, x4101, 33),
        bigint_mul!(x4086, x4103, 33),
        33
    );
    let x4123: BytePoly_3 = bigint_nondet_quot!(ctx, x4121, x3, 3);
    let x4124: BytePoly_32 = bigint_nondet_rem!(ctx, x4121, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4123, x3, 35), x4124, 35),
            x4121,
            35
        ),
        260103,
        4,
    )?;
    let x4125: BytePoly_3 = bigint_nondet_quot!(ctx, x4122, x3, 3);
    let x4126: BytePoly_32 = bigint_nondet_rem!(ctx, x4122, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4125, x3, 35), x4126, 35),
            x4122,
            35
        ),
        260103,
        4,
    )?;
    let x4127: BytePoly_64 = bigint_mul!(x4097, x4097, 64);
    let x4128: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x4127, x4127, 64), x4127, 64),
        x2,
        64
    );
    let x4129: BytePoly_64 = bigint_add!(x48, x4128, 64);
    let x4130: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x4100, x4100, 32), x3, 32);
    let x4131: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x4128, x4130, 96), x3, 32);
    let x4132: BytePoly_64 = bigint_mul!(x4100, x4131, 64);
    let x4133: BytePoly_64 = bigint_add!(x4132, x4132, 64);
    let x4134: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x4129, x4133, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4134, x3, 66), x4133, 66),
            x4129,
            66
        ),
        276359,
        4,
    )?;
    let x4135: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x4131, x4131, 64), x3, 64), x3, 64),
            x4097,
            64
        ),
        x4097,
        64
    );
    let x4136: BytePoly_34 = bigint_nondet_quot!(ctx, x4135, x3, 34);
    let x4137: BytePoly_32 = bigint_nondet_rem!(ctx, x4135, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4136, x3, 66), x4137, 66),
            x4135,
            66
        ),
        276359,
        4,
    )?;
    let x4138: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x4131, x4137, 64), 64), x3, 64),
            x4100,
            64
        ),
        bigint_mul!(x4131, x4097, 64),
        64
    );
    let x4139: BytePoly_34 = bigint_nondet_quot!(ctx, x4138, x3, 34);
    let x4140: BytePoly_32 = bigint_nondet_rem!(ctx, x4138, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4139, x3, 66), x4140, 66),
            x4138,
            66
        ),
        276359,
        4,
    )?;
    let x4141: BytePoly_1 = bigint_nondet_rem!(ctx, x4102, x4, 1);
    let x4142: BytePoly_32 = bigint_nondet_quot!(ctx, x4102, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4142, x4, 33), x4141, 33),
            x4102,
            33
        ),
        260103,
        4,
    )?;
    let x4143: BytePoly_1 = bigint_sub!(x5, x4141, 1);
    eqz(ctx, &bigint_mul!(x4141, x4143, 2), 8131, 2)?;
    let x4144: BytePoly_32 = bigint_add!(bigint_sub!(x4140, x4126, 32), x3, 32);
    let x4145: BytePoly_32 = bigint_add!(bigint_sub!(x4137, x4124, 32), x3, 32);
    let x4146: BytePoly_32 = bigint_nondet_inv!(ctx, x4145, x3, 32);
    let x4147: BytePoly_64 = bigint_mul!(x4145, x4146, 64);
    let x4148: BytePoly_34 = bigint_nondet_quot!(ctx, x4147, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x4147, bigint_mul!(x4148, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x4149: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x4144, x4146, 64), x3, 32);
    let x4150: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x4149, x4145, 64), x4144, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x4151: BytePoly_34 = bigint_nondet_quot!(ctx, x4150, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x4150, bigint_mul!(x4151, x3, 66), 66),
        276359,
        4,
    )?;
    let x4152: BytePoly_64 = bigint_mul!(x4149, x4149, 64);
    let x4153: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x4152, x4124, 64), x3, 64),
            x4137,
            64
        ),
        x3,
        64
    );
    let x4154: BytePoly_34 = bigint_nondet_quot!(ctx, x4153, x3, 34);
    let x4155: BytePoly_32 = bigint_nondet_rem!(ctx, x4153, x3, 32);
    let x4156: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x4149, x4155, 64),
                        bigint_add!(
                            bigint_sub!(x4126, bigint_mul!(x4149, x4124, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x4157: BytePoly_34 = bigint_nondet_quot!(ctx, x4156, x3, 34);
    let x4158: BytePoly_32 = bigint_nondet_rem!(ctx, x4156, x3, 32);
    let x4159: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x4152, bigint_mul!(x4154, x3, 66), 66),
                        x4124,
                        66
                    ),
                    x4137,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x4155,
        66
    );
    eqz(ctx, &x4159, 276359, 4)?;
    let x4160: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x4157, x3, 66), x4158, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x4149, bigint_sub!(x4124, x4155, 32), 64),
                        x4126,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x4160, 276359, 4)?;
    let x4161: BytePoly_33 = bigint_add!(
        bigint_mul!(x4155, x4141, 33),
        bigint_mul!(x4124, x4143, 33),
        33
    );
    let x4162: BytePoly_33 = bigint_add!(
        bigint_mul!(x4158, x4141, 33),
        bigint_mul!(x4126, x4143, 33),
        33
    );
    let x4163: BytePoly_3 = bigint_nondet_quot!(ctx, x4161, x3, 3);
    let x4164: BytePoly_32 = bigint_nondet_rem!(ctx, x4161, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4163, x3, 35), x4164, 35),
            x4161,
            35
        ),
        260103,
        4,
    )?;
    let x4165: BytePoly_3 = bigint_nondet_quot!(ctx, x4162, x3, 3);
    let x4166: BytePoly_32 = bigint_nondet_rem!(ctx, x4162, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4165, x3, 35), x4166, 35),
            x4162,
            35
        ),
        260103,
        4,
    )?;
    let x4167: BytePoly_64 = bigint_mul!(x4137, x4137, 64);
    let x4168: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x4167, x4167, 64), x4167, 64),
        x2,
        64
    );
    let x4169: BytePoly_64 = bigint_add!(x48, x4168, 64);
    let x4170: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x4140, x4140, 32), x3, 32);
    let x4171: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x4168, x4170, 96), x3, 32);
    let x4172: BytePoly_64 = bigint_mul!(x4140, x4171, 64);
    let x4173: BytePoly_64 = bigint_add!(x4172, x4172, 64);
    let x4174: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x4169, x4173, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4174, x3, 66), x4173, 66),
            x4169,
            66
        ),
        276359,
        4,
    )?;
    let x4175: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x4171, x4171, 64), x3, 64), x3, 64),
            x4137,
            64
        ),
        x4137,
        64
    );
    let x4176: BytePoly_34 = bigint_nondet_quot!(ctx, x4175, x3, 34);
    let x4177: BytePoly_32 = bigint_nondet_rem!(ctx, x4175, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4176, x3, 66), x4177, 66),
            x4175,
            66
        ),
        276359,
        4,
    )?;
    let x4178: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x4171, x4177, 64), 64), x3, 64),
            x4140,
            64
        ),
        bigint_mul!(x4171, x4137, 64),
        64
    );
    let x4179: BytePoly_34 = bigint_nondet_quot!(ctx, x4178, x3, 34);
    let x4180: BytePoly_32 = bigint_nondet_rem!(ctx, x4178, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4179, x3, 66), x4180, 66),
            x4178,
            66
        ),
        276359,
        4,
    )?;
    let x4181: BytePoly_1 = bigint_nondet_rem!(ctx, x4142, x4, 1);
    let x4182: BytePoly_32 = bigint_nondet_quot!(ctx, x4142, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4182, x4, 33), x4181, 33),
            x4142,
            33
        ),
        260103,
        4,
    )?;
    let x4183: BytePoly_1 = bigint_sub!(x5, x4181, 1);
    eqz(ctx, &bigint_mul!(x4181, x4183, 2), 8131, 2)?;
    let x4184: BytePoly_32 = bigint_add!(bigint_sub!(x4180, x4166, 32), x3, 32);
    let x4185: BytePoly_32 = bigint_add!(bigint_sub!(x4177, x4164, 32), x3, 32);
    let x4186: BytePoly_32 = bigint_nondet_inv!(ctx, x4185, x3, 32);
    let x4187: BytePoly_64 = bigint_mul!(x4185, x4186, 64);
    let x4188: BytePoly_34 = bigint_nondet_quot!(ctx, x4187, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x4187, bigint_mul!(x4188, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x4189: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x4184, x4186, 64), x3, 32);
    let x4190: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x4189, x4185, 64), x4184, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x4191: BytePoly_34 = bigint_nondet_quot!(ctx, x4190, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x4190, bigint_mul!(x4191, x3, 66), 66),
        276359,
        4,
    )?;
    let x4192: BytePoly_64 = bigint_mul!(x4189, x4189, 64);
    let x4193: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x4192, x4164, 64), x3, 64),
            x4177,
            64
        ),
        x3,
        64
    );
    let x4194: BytePoly_34 = bigint_nondet_quot!(ctx, x4193, x3, 34);
    let x4195: BytePoly_32 = bigint_nondet_rem!(ctx, x4193, x3, 32);
    let x4196: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x4189, x4195, 64),
                        bigint_add!(
                            bigint_sub!(x4166, bigint_mul!(x4189, x4164, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x4197: BytePoly_34 = bigint_nondet_quot!(ctx, x4196, x3, 34);
    let x4198: BytePoly_32 = bigint_nondet_rem!(ctx, x4196, x3, 32);
    let x4199: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x4192, bigint_mul!(x4194, x3, 66), 66),
                        x4164,
                        66
                    ),
                    x4177,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x4195,
        66
    );
    eqz(ctx, &x4199, 276359, 4)?;
    let x4200: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x4197, x3, 66), x4198, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x4189, bigint_sub!(x4164, x4195, 32), 64),
                        x4166,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x4200, 276359, 4)?;
    let x4201: BytePoly_33 = bigint_add!(
        bigint_mul!(x4195, x4181, 33),
        bigint_mul!(x4164, x4183, 33),
        33
    );
    let x4202: BytePoly_33 = bigint_add!(
        bigint_mul!(x4198, x4181, 33),
        bigint_mul!(x4166, x4183, 33),
        33
    );
    let x4203: BytePoly_3 = bigint_nondet_quot!(ctx, x4201, x3, 3);
    let x4204: BytePoly_32 = bigint_nondet_rem!(ctx, x4201, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4203, x3, 35), x4204, 35),
            x4201,
            35
        ),
        260103,
        4,
    )?;
    let x4205: BytePoly_3 = bigint_nondet_quot!(ctx, x4202, x3, 3);
    let x4206: BytePoly_32 = bigint_nondet_rem!(ctx, x4202, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4205, x3, 35), x4206, 35),
            x4202,
            35
        ),
        260103,
        4,
    )?;
    let x4207: BytePoly_64 = bigint_mul!(x4177, x4177, 64);
    let x4208: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x4207, x4207, 64), x4207, 64),
        x2,
        64
    );
    let x4209: BytePoly_64 = bigint_add!(x48, x4208, 64);
    let x4210: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x4180, x4180, 32), x3, 32);
    let x4211: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x4208, x4210, 96), x3, 32);
    let x4212: BytePoly_64 = bigint_mul!(x4180, x4211, 64);
    let x4213: BytePoly_64 = bigint_add!(x4212, x4212, 64);
    let x4214: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x4209, x4213, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4214, x3, 66), x4213, 66),
            x4209,
            66
        ),
        276359,
        4,
    )?;
    let x4215: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x4211, x4211, 64), x3, 64), x3, 64),
            x4177,
            64
        ),
        x4177,
        64
    );
    let x4216: BytePoly_34 = bigint_nondet_quot!(ctx, x4215, x3, 34);
    let x4217: BytePoly_32 = bigint_nondet_rem!(ctx, x4215, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4216, x3, 66), x4217, 66),
            x4215,
            66
        ),
        276359,
        4,
    )?;
    let x4218: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x4211, x4217, 64), 64), x3, 64),
            x4180,
            64
        ),
        bigint_mul!(x4211, x4177, 64),
        64
    );
    let x4219: BytePoly_34 = bigint_nondet_quot!(ctx, x4218, x3, 34);
    let x4220: BytePoly_32 = bigint_nondet_rem!(ctx, x4218, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4219, x3, 66), x4220, 66),
            x4218,
            66
        ),
        276359,
        4,
    )?;
    let x4221: BytePoly_1 = bigint_nondet_rem!(ctx, x4182, x4, 1);
    let x4222: BytePoly_32 = bigint_nondet_quot!(ctx, x4182, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4222, x4, 33), x4221, 33),
            x4182,
            33
        ),
        260103,
        4,
    )?;
    let x4223: BytePoly_1 = bigint_sub!(x5, x4221, 1);
    eqz(ctx, &bigint_mul!(x4221, x4223, 2), 8131, 2)?;
    let x4224: BytePoly_32 = bigint_add!(bigint_sub!(x4220, x4206, 32), x3, 32);
    let x4225: BytePoly_32 = bigint_add!(bigint_sub!(x4217, x4204, 32), x3, 32);
    let x4226: BytePoly_32 = bigint_nondet_inv!(ctx, x4225, x3, 32);
    let x4227: BytePoly_64 = bigint_mul!(x4225, x4226, 64);
    let x4228: BytePoly_34 = bigint_nondet_quot!(ctx, x4227, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x4227, bigint_mul!(x4228, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x4229: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x4224, x4226, 64), x3, 32);
    let x4230: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x4229, x4225, 64), x4224, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x4231: BytePoly_34 = bigint_nondet_quot!(ctx, x4230, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x4230, bigint_mul!(x4231, x3, 66), 66),
        276359,
        4,
    )?;
    let x4232: BytePoly_64 = bigint_mul!(x4229, x4229, 64);
    let x4233: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x4232, x4204, 64), x3, 64),
            x4217,
            64
        ),
        x3,
        64
    );
    let x4234: BytePoly_34 = bigint_nondet_quot!(ctx, x4233, x3, 34);
    let x4235: BytePoly_32 = bigint_nondet_rem!(ctx, x4233, x3, 32);
    let x4236: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x4229, x4235, 64),
                        bigint_add!(
                            bigint_sub!(x4206, bigint_mul!(x4229, x4204, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x4237: BytePoly_34 = bigint_nondet_quot!(ctx, x4236, x3, 34);
    let x4238: BytePoly_32 = bigint_nondet_rem!(ctx, x4236, x3, 32);
    let x4239: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x4232, bigint_mul!(x4234, x3, 66), 66),
                        x4204,
                        66
                    ),
                    x4217,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x4235,
        66
    );
    eqz(ctx, &x4239, 276359, 4)?;
    let x4240: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x4237, x3, 66), x4238, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x4229, bigint_sub!(x4204, x4235, 32), 64),
                        x4206,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x4240, 276359, 4)?;
    let x4241: BytePoly_33 = bigint_add!(
        bigint_mul!(x4235, x4221, 33),
        bigint_mul!(x4204, x4223, 33),
        33
    );
    let x4242: BytePoly_33 = bigint_add!(
        bigint_mul!(x4238, x4221, 33),
        bigint_mul!(x4206, x4223, 33),
        33
    );
    let x4243: BytePoly_3 = bigint_nondet_quot!(ctx, x4241, x3, 3);
    let x4244: BytePoly_32 = bigint_nondet_rem!(ctx, x4241, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4243, x3, 35), x4244, 35),
            x4241,
            35
        ),
        260103,
        4,
    )?;
    let x4245: BytePoly_3 = bigint_nondet_quot!(ctx, x4242, x3, 3);
    let x4246: BytePoly_32 = bigint_nondet_rem!(ctx, x4242, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4245, x3, 35), x4246, 35),
            x4242,
            35
        ),
        260103,
        4,
    )?;
    let x4247: BytePoly_64 = bigint_mul!(x4217, x4217, 64);
    let x4248: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x4247, x4247, 64), x4247, 64),
        x2,
        64
    );
    let x4249: BytePoly_64 = bigint_add!(x48, x4248, 64);
    let x4250: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x4220, x4220, 32), x3, 32);
    let x4251: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x4248, x4250, 96), x3, 32);
    let x4252: BytePoly_64 = bigint_mul!(x4220, x4251, 64);
    let x4253: BytePoly_64 = bigint_add!(x4252, x4252, 64);
    let x4254: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x4249, x4253, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4254, x3, 66), x4253, 66),
            x4249,
            66
        ),
        276359,
        4,
    )?;
    let x4255: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x4251, x4251, 64), x3, 64), x3, 64),
            x4217,
            64
        ),
        x4217,
        64
    );
    let x4256: BytePoly_34 = bigint_nondet_quot!(ctx, x4255, x3, 34);
    let x4257: BytePoly_32 = bigint_nondet_rem!(ctx, x4255, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4256, x3, 66), x4257, 66),
            x4255,
            66
        ),
        276359,
        4,
    )?;
    let x4258: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x4251, x4257, 64), 64), x3, 64),
            x4220,
            64
        ),
        bigint_mul!(x4251, x4217, 64),
        64
    );
    let x4259: BytePoly_34 = bigint_nondet_quot!(ctx, x4258, x3, 34);
    let x4260: BytePoly_32 = bigint_nondet_rem!(ctx, x4258, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4259, x3, 66), x4260, 66),
            x4258,
            66
        ),
        276359,
        4,
    )?;
    let x4261: BytePoly_1 = bigint_nondet_rem!(ctx, x4222, x4, 1);
    let x4262: BytePoly_32 = bigint_nondet_quot!(ctx, x4222, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4262, x4, 33), x4261, 33),
            x4222,
            33
        ),
        260103,
        4,
    )?;
    let x4263: BytePoly_1 = bigint_sub!(x5, x4261, 1);
    eqz(ctx, &bigint_mul!(x4261, x4263, 2), 8131, 2)?;
    let x4264: BytePoly_32 = bigint_add!(bigint_sub!(x4260, x4246, 32), x3, 32);
    let x4265: BytePoly_32 = bigint_add!(bigint_sub!(x4257, x4244, 32), x3, 32);
    let x4266: BytePoly_32 = bigint_nondet_inv!(ctx, x4265, x3, 32);
    let x4267: BytePoly_64 = bigint_mul!(x4265, x4266, 64);
    let x4268: BytePoly_34 = bigint_nondet_quot!(ctx, x4267, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x4267, bigint_mul!(x4268, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x4269: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x4264, x4266, 64), x3, 32);
    let x4270: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x4269, x4265, 64), x4264, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x4271: BytePoly_34 = bigint_nondet_quot!(ctx, x4270, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x4270, bigint_mul!(x4271, x3, 66), 66),
        276359,
        4,
    )?;
    let x4272: BytePoly_64 = bigint_mul!(x4269, x4269, 64);
    let x4273: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x4272, x4244, 64), x3, 64),
            x4257,
            64
        ),
        x3,
        64
    );
    let x4274: BytePoly_34 = bigint_nondet_quot!(ctx, x4273, x3, 34);
    let x4275: BytePoly_32 = bigint_nondet_rem!(ctx, x4273, x3, 32);
    let x4276: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x4269, x4275, 64),
                        bigint_add!(
                            bigint_sub!(x4246, bigint_mul!(x4269, x4244, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x4277: BytePoly_34 = bigint_nondet_quot!(ctx, x4276, x3, 34);
    let x4278: BytePoly_32 = bigint_nondet_rem!(ctx, x4276, x3, 32);
    let x4279: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x4272, bigint_mul!(x4274, x3, 66), 66),
                        x4244,
                        66
                    ),
                    x4257,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x4275,
        66
    );
    eqz(ctx, &x4279, 276359, 4)?;
    let x4280: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x4277, x3, 66), x4278, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x4269, bigint_sub!(x4244, x4275, 32), 64),
                        x4246,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x4280, 276359, 4)?;
    let x4281: BytePoly_33 = bigint_add!(
        bigint_mul!(x4275, x4261, 33),
        bigint_mul!(x4244, x4263, 33),
        33
    );
    let x4282: BytePoly_33 = bigint_add!(
        bigint_mul!(x4278, x4261, 33),
        bigint_mul!(x4246, x4263, 33),
        33
    );
    let x4283: BytePoly_3 = bigint_nondet_quot!(ctx, x4281, x3, 3);
    let x4284: BytePoly_32 = bigint_nondet_rem!(ctx, x4281, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4283, x3, 35), x4284, 35),
            x4281,
            35
        ),
        260103,
        4,
    )?;
    let x4285: BytePoly_3 = bigint_nondet_quot!(ctx, x4282, x3, 3);
    let x4286: BytePoly_32 = bigint_nondet_rem!(ctx, x4282, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4285, x3, 35), x4286, 35),
            x4282,
            35
        ),
        260103,
        4,
    )?;
    let x4287: BytePoly_64 = bigint_mul!(x4257, x4257, 64);
    let x4288: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x4287, x4287, 64), x4287, 64),
        x2,
        64
    );
    let x4289: BytePoly_64 = bigint_add!(x48, x4288, 64);
    let x4290: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x4260, x4260, 32), x3, 32);
    let x4291: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x4288, x4290, 96), x3, 32);
    let x4292: BytePoly_64 = bigint_mul!(x4260, x4291, 64);
    let x4293: BytePoly_64 = bigint_add!(x4292, x4292, 64);
    let x4294: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x4289, x4293, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4294, x3, 66), x4293, 66),
            x4289,
            66
        ),
        276359,
        4,
    )?;
    let x4295: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x4291, x4291, 64), x3, 64), x3, 64),
            x4257,
            64
        ),
        x4257,
        64
    );
    let x4296: BytePoly_34 = bigint_nondet_quot!(ctx, x4295, x3, 34);
    let x4297: BytePoly_32 = bigint_nondet_rem!(ctx, x4295, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4296, x3, 66), x4297, 66),
            x4295,
            66
        ),
        276359,
        4,
    )?;
    let x4298: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x4291, x4297, 64), 64), x3, 64),
            x4260,
            64
        ),
        bigint_mul!(x4291, x4257, 64),
        64
    );
    let x4299: BytePoly_34 = bigint_nondet_quot!(ctx, x4298, x3, 34);
    let x4300: BytePoly_32 = bigint_nondet_rem!(ctx, x4298, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4299, x3, 66), x4300, 66),
            x4298,
            66
        ),
        276359,
        4,
    )?;
    let x4301: BytePoly_1 = bigint_nondet_rem!(ctx, x4262, x4, 1);
    let x4302: BytePoly_32 = bigint_nondet_quot!(ctx, x4262, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4302, x4, 33), x4301, 33),
            x4262,
            33
        ),
        260103,
        4,
    )?;
    let x4303: BytePoly_1 = bigint_sub!(x5, x4301, 1);
    eqz(ctx, &bigint_mul!(x4301, x4303, 2), 8131, 2)?;
    let x4304: BytePoly_32 = bigint_add!(bigint_sub!(x4300, x4286, 32), x3, 32);
    let x4305: BytePoly_32 = bigint_add!(bigint_sub!(x4297, x4284, 32), x3, 32);
    let x4306: BytePoly_32 = bigint_nondet_inv!(ctx, x4305, x3, 32);
    let x4307: BytePoly_64 = bigint_mul!(x4305, x4306, 64);
    let x4308: BytePoly_34 = bigint_nondet_quot!(ctx, x4307, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x4307, bigint_mul!(x4308, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x4309: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x4304, x4306, 64), x3, 32);
    let x4310: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x4309, x4305, 64), x4304, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x4311: BytePoly_34 = bigint_nondet_quot!(ctx, x4310, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x4310, bigint_mul!(x4311, x3, 66), 66),
        276359,
        4,
    )?;
    let x4312: BytePoly_64 = bigint_mul!(x4309, x4309, 64);
    let x4313: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x4312, x4284, 64), x3, 64),
            x4297,
            64
        ),
        x3,
        64
    );
    let x4314: BytePoly_34 = bigint_nondet_quot!(ctx, x4313, x3, 34);
    let x4315: BytePoly_32 = bigint_nondet_rem!(ctx, x4313, x3, 32);
    let x4316: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x4309, x4315, 64),
                        bigint_add!(
                            bigint_sub!(x4286, bigint_mul!(x4309, x4284, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x4317: BytePoly_34 = bigint_nondet_quot!(ctx, x4316, x3, 34);
    let x4318: BytePoly_32 = bigint_nondet_rem!(ctx, x4316, x3, 32);
    let x4319: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x4312, bigint_mul!(x4314, x3, 66), 66),
                        x4284,
                        66
                    ),
                    x4297,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x4315,
        66
    );
    eqz(ctx, &x4319, 276359, 4)?;
    let x4320: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x4317, x3, 66), x4318, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x4309, bigint_sub!(x4284, x4315, 32), 64),
                        x4286,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x4320, 276359, 4)?;
    let x4321: BytePoly_33 = bigint_add!(
        bigint_mul!(x4315, x4301, 33),
        bigint_mul!(x4284, x4303, 33),
        33
    );
    let x4322: BytePoly_33 = bigint_add!(
        bigint_mul!(x4318, x4301, 33),
        bigint_mul!(x4286, x4303, 33),
        33
    );
    let x4323: BytePoly_3 = bigint_nondet_quot!(ctx, x4321, x3, 3);
    let x4324: BytePoly_32 = bigint_nondet_rem!(ctx, x4321, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4323, x3, 35), x4324, 35),
            x4321,
            35
        ),
        260103,
        4,
    )?;
    let x4325: BytePoly_3 = bigint_nondet_quot!(ctx, x4322, x3, 3);
    let x4326: BytePoly_32 = bigint_nondet_rem!(ctx, x4322, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4325, x3, 35), x4326, 35),
            x4322,
            35
        ),
        260103,
        4,
    )?;
    let x4327: BytePoly_64 = bigint_mul!(x4297, x4297, 64);
    let x4328: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x4327, x4327, 64), x4327, 64),
        x2,
        64
    );
    let x4329: BytePoly_64 = bigint_add!(x48, x4328, 64);
    let x4330: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x4300, x4300, 32), x3, 32);
    let x4331: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x4328, x4330, 96), x3, 32);
    let x4332: BytePoly_64 = bigint_mul!(x4300, x4331, 64);
    let x4333: BytePoly_64 = bigint_add!(x4332, x4332, 64);
    let x4334: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x4329, x4333, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4334, x3, 66), x4333, 66),
            x4329,
            66
        ),
        276359,
        4,
    )?;
    let x4335: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x4331, x4331, 64), x3, 64), x3, 64),
            x4297,
            64
        ),
        x4297,
        64
    );
    let x4336: BytePoly_34 = bigint_nondet_quot!(ctx, x4335, x3, 34);
    let x4337: BytePoly_32 = bigint_nondet_rem!(ctx, x4335, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4336, x3, 66), x4337, 66),
            x4335,
            66
        ),
        276359,
        4,
    )?;
    let x4338: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x4331, x4337, 64), 64), x3, 64),
            x4300,
            64
        ),
        bigint_mul!(x4331, x4297, 64),
        64
    );
    let x4339: BytePoly_34 = bigint_nondet_quot!(ctx, x4338, x3, 34);
    let x4340: BytePoly_32 = bigint_nondet_rem!(ctx, x4338, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4339, x3, 66), x4340, 66),
            x4338,
            66
        ),
        276359,
        4,
    )?;
    let x4341: BytePoly_1 = bigint_nondet_rem!(ctx, x4302, x4, 1);
    let x4342: BytePoly_32 = bigint_nondet_quot!(ctx, x4302, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4342, x4, 33), x4341, 33),
            x4302,
            33
        ),
        260103,
        4,
    )?;
    let x4343: BytePoly_1 = bigint_sub!(x5, x4341, 1);
    eqz(ctx, &bigint_mul!(x4341, x4343, 2), 8131, 2)?;
    let x4344: BytePoly_32 = bigint_add!(bigint_sub!(x4340, x4326, 32), x3, 32);
    let x4345: BytePoly_32 = bigint_add!(bigint_sub!(x4337, x4324, 32), x3, 32);
    let x4346: BytePoly_32 = bigint_nondet_inv!(ctx, x4345, x3, 32);
    let x4347: BytePoly_64 = bigint_mul!(x4345, x4346, 64);
    let x4348: BytePoly_34 = bigint_nondet_quot!(ctx, x4347, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x4347, bigint_mul!(x4348, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x4349: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x4344, x4346, 64), x3, 32);
    let x4350: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x4349, x4345, 64), x4344, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x4351: BytePoly_34 = bigint_nondet_quot!(ctx, x4350, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x4350, bigint_mul!(x4351, x3, 66), 66),
        276359,
        4,
    )?;
    let x4352: BytePoly_64 = bigint_mul!(x4349, x4349, 64);
    let x4353: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x4352, x4324, 64), x3, 64),
            x4337,
            64
        ),
        x3,
        64
    );
    let x4354: BytePoly_34 = bigint_nondet_quot!(ctx, x4353, x3, 34);
    let x4355: BytePoly_32 = bigint_nondet_rem!(ctx, x4353, x3, 32);
    let x4356: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x4349, x4355, 64),
                        bigint_add!(
                            bigint_sub!(x4326, bigint_mul!(x4349, x4324, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x4357: BytePoly_34 = bigint_nondet_quot!(ctx, x4356, x3, 34);
    let x4358: BytePoly_32 = bigint_nondet_rem!(ctx, x4356, x3, 32);
    let x4359: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x4352, bigint_mul!(x4354, x3, 66), 66),
                        x4324,
                        66
                    ),
                    x4337,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x4355,
        66
    );
    eqz(ctx, &x4359, 276359, 4)?;
    let x4360: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x4357, x3, 66), x4358, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x4349, bigint_sub!(x4324, x4355, 32), 64),
                        x4326,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x4360, 276359, 4)?;
    let x4361: BytePoly_33 = bigint_add!(
        bigint_mul!(x4355, x4341, 33),
        bigint_mul!(x4324, x4343, 33),
        33
    );
    let x4362: BytePoly_33 = bigint_add!(
        bigint_mul!(x4358, x4341, 33),
        bigint_mul!(x4326, x4343, 33),
        33
    );
    let x4363: BytePoly_3 = bigint_nondet_quot!(ctx, x4361, x3, 3);
    let x4364: BytePoly_32 = bigint_nondet_rem!(ctx, x4361, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4363, x3, 35), x4364, 35),
            x4361,
            35
        ),
        260103,
        4,
    )?;
    let x4365: BytePoly_3 = bigint_nondet_quot!(ctx, x4362, x3, 3);
    let x4366: BytePoly_32 = bigint_nondet_rem!(ctx, x4362, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4365, x3, 35), x4366, 35),
            x4362,
            35
        ),
        260103,
        4,
    )?;
    let x4367: BytePoly_64 = bigint_mul!(x4337, x4337, 64);
    let x4368: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x4367, x4367, 64), x4367, 64),
        x2,
        64
    );
    let x4369: BytePoly_64 = bigint_add!(x48, x4368, 64);
    let x4370: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x4340, x4340, 32), x3, 32);
    let x4371: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x4368, x4370, 96), x3, 32);
    let x4372: BytePoly_64 = bigint_mul!(x4340, x4371, 64);
    let x4373: BytePoly_64 = bigint_add!(x4372, x4372, 64);
    let x4374: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x4369, x4373, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4374, x3, 66), x4373, 66),
            x4369,
            66
        ),
        276359,
        4,
    )?;
    let x4375: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x4371, x4371, 64), x3, 64), x3, 64),
            x4337,
            64
        ),
        x4337,
        64
    );
    let x4376: BytePoly_34 = bigint_nondet_quot!(ctx, x4375, x3, 34);
    let x4377: BytePoly_32 = bigint_nondet_rem!(ctx, x4375, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4376, x3, 66), x4377, 66),
            x4375,
            66
        ),
        276359,
        4,
    )?;
    let x4378: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x4371, x4377, 64), 64), x3, 64),
            x4340,
            64
        ),
        bigint_mul!(x4371, x4337, 64),
        64
    );
    let x4379: BytePoly_34 = bigint_nondet_quot!(ctx, x4378, x3, 34);
    let x4380: BytePoly_32 = bigint_nondet_rem!(ctx, x4378, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4379, x3, 66), x4380, 66),
            x4378,
            66
        ),
        276359,
        4,
    )?;
    let x4381: BytePoly_1 = bigint_nondet_rem!(ctx, x4342, x4, 1);
    let x4382: BytePoly_32 = bigint_nondet_quot!(ctx, x4342, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4382, x4, 33), x4381, 33),
            x4342,
            33
        ),
        260103,
        4,
    )?;
    let x4383: BytePoly_1 = bigint_sub!(x5, x4381, 1);
    eqz(ctx, &bigint_mul!(x4381, x4383, 2), 8131, 2)?;
    let x4384: BytePoly_32 = bigint_add!(bigint_sub!(x4380, x4366, 32), x3, 32);
    let x4385: BytePoly_32 = bigint_add!(bigint_sub!(x4377, x4364, 32), x3, 32);
    let x4386: BytePoly_32 = bigint_nondet_inv!(ctx, x4385, x3, 32);
    let x4387: BytePoly_64 = bigint_mul!(x4385, x4386, 64);
    let x4388: BytePoly_34 = bigint_nondet_quot!(ctx, x4387, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x4387, bigint_mul!(x4388, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x4389: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x4384, x4386, 64), x3, 32);
    let x4390: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x4389, x4385, 64), x4384, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x4391: BytePoly_34 = bigint_nondet_quot!(ctx, x4390, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x4390, bigint_mul!(x4391, x3, 66), 66),
        276359,
        4,
    )?;
    let x4392: BytePoly_64 = bigint_mul!(x4389, x4389, 64);
    let x4393: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x4392, x4364, 64), x3, 64),
            x4377,
            64
        ),
        x3,
        64
    );
    let x4394: BytePoly_34 = bigint_nondet_quot!(ctx, x4393, x3, 34);
    let x4395: BytePoly_32 = bigint_nondet_rem!(ctx, x4393, x3, 32);
    let x4396: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x4389, x4395, 64),
                        bigint_add!(
                            bigint_sub!(x4366, bigint_mul!(x4389, x4364, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x4397: BytePoly_34 = bigint_nondet_quot!(ctx, x4396, x3, 34);
    let x4398: BytePoly_32 = bigint_nondet_rem!(ctx, x4396, x3, 32);
    let x4399: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x4392, bigint_mul!(x4394, x3, 66), 66),
                        x4364,
                        66
                    ),
                    x4377,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x4395,
        66
    );
    eqz(ctx, &x4399, 276359, 4)?;
    let x4400: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x4397, x3, 66), x4398, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x4389, bigint_sub!(x4364, x4395, 32), 64),
                        x4366,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x4400, 276359, 4)?;
    let x4401: BytePoly_33 = bigint_add!(
        bigint_mul!(x4395, x4381, 33),
        bigint_mul!(x4364, x4383, 33),
        33
    );
    let x4402: BytePoly_33 = bigint_add!(
        bigint_mul!(x4398, x4381, 33),
        bigint_mul!(x4366, x4383, 33),
        33
    );
    let x4403: BytePoly_3 = bigint_nondet_quot!(ctx, x4401, x3, 3);
    let x4404: BytePoly_32 = bigint_nondet_rem!(ctx, x4401, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4403, x3, 35), x4404, 35),
            x4401,
            35
        ),
        260103,
        4,
    )?;
    let x4405: BytePoly_3 = bigint_nondet_quot!(ctx, x4402, x3, 3);
    let x4406: BytePoly_32 = bigint_nondet_rem!(ctx, x4402, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4405, x3, 35), x4406, 35),
            x4402,
            35
        ),
        260103,
        4,
    )?;
    let x4407: BytePoly_64 = bigint_mul!(x4377, x4377, 64);
    let x4408: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x4407, x4407, 64), x4407, 64),
        x2,
        64
    );
    let x4409: BytePoly_64 = bigint_add!(x48, x4408, 64);
    let x4410: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x4380, x4380, 32), x3, 32);
    let x4411: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x4408, x4410, 96), x3, 32);
    let x4412: BytePoly_64 = bigint_mul!(x4380, x4411, 64);
    let x4413: BytePoly_64 = bigint_add!(x4412, x4412, 64);
    let x4414: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x4409, x4413, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4414, x3, 66), x4413, 66),
            x4409,
            66
        ),
        276359,
        4,
    )?;
    let x4415: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x4411, x4411, 64), x3, 64), x3, 64),
            x4377,
            64
        ),
        x4377,
        64
    );
    let x4416: BytePoly_34 = bigint_nondet_quot!(ctx, x4415, x3, 34);
    let x4417: BytePoly_32 = bigint_nondet_rem!(ctx, x4415, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4416, x3, 66), x4417, 66),
            x4415,
            66
        ),
        276359,
        4,
    )?;
    let x4418: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x4411, x4417, 64), 64), x3, 64),
            x4380,
            64
        ),
        bigint_mul!(x4411, x4377, 64),
        64
    );
    let x4419: BytePoly_34 = bigint_nondet_quot!(ctx, x4418, x3, 34);
    let x4420: BytePoly_32 = bigint_nondet_rem!(ctx, x4418, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4419, x3, 66), x4420, 66),
            x4418,
            66
        ),
        276359,
        4,
    )?;
    let x4421: BytePoly_1 = bigint_nondet_rem!(ctx, x4382, x4, 1);
    let x4422: BytePoly_32 = bigint_nondet_quot!(ctx, x4382, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4422, x4, 33), x4421, 33),
            x4382,
            33
        ),
        260103,
        4,
    )?;
    let x4423: BytePoly_1 = bigint_sub!(x5, x4421, 1);
    eqz(ctx, &bigint_mul!(x4421, x4423, 2), 8131, 2)?;
    let x4424: BytePoly_32 = bigint_add!(bigint_sub!(x4420, x4406, 32), x3, 32);
    let x4425: BytePoly_32 = bigint_add!(bigint_sub!(x4417, x4404, 32), x3, 32);
    let x4426: BytePoly_32 = bigint_nondet_inv!(ctx, x4425, x3, 32);
    let x4427: BytePoly_64 = bigint_mul!(x4425, x4426, 64);
    let x4428: BytePoly_34 = bigint_nondet_quot!(ctx, x4427, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x4427, bigint_mul!(x4428, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x4429: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x4424, x4426, 64), x3, 32);
    let x4430: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x4429, x4425, 64), x4424, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x4431: BytePoly_34 = bigint_nondet_quot!(ctx, x4430, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x4430, bigint_mul!(x4431, x3, 66), 66),
        276359,
        4,
    )?;
    let x4432: BytePoly_64 = bigint_mul!(x4429, x4429, 64);
    let x4433: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x4432, x4404, 64), x3, 64),
            x4417,
            64
        ),
        x3,
        64
    );
    let x4434: BytePoly_34 = bigint_nondet_quot!(ctx, x4433, x3, 34);
    let x4435: BytePoly_32 = bigint_nondet_rem!(ctx, x4433, x3, 32);
    let x4436: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x4429, x4435, 64),
                        bigint_add!(
                            bigint_sub!(x4406, bigint_mul!(x4429, x4404, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x4437: BytePoly_34 = bigint_nondet_quot!(ctx, x4436, x3, 34);
    let x4438: BytePoly_32 = bigint_nondet_rem!(ctx, x4436, x3, 32);
    let x4439: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x4432, bigint_mul!(x4434, x3, 66), 66),
                        x4404,
                        66
                    ),
                    x4417,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x4435,
        66
    );
    eqz(ctx, &x4439, 276359, 4)?;
    let x4440: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x4437, x3, 66), x4438, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x4429, bigint_sub!(x4404, x4435, 32), 64),
                        x4406,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x4440, 276359, 4)?;
    let x4441: BytePoly_33 = bigint_add!(
        bigint_mul!(x4435, x4421, 33),
        bigint_mul!(x4404, x4423, 33),
        33
    );
    let x4442: BytePoly_33 = bigint_add!(
        bigint_mul!(x4438, x4421, 33),
        bigint_mul!(x4406, x4423, 33),
        33
    );
    let x4443: BytePoly_3 = bigint_nondet_quot!(ctx, x4441, x3, 3);
    let x4444: BytePoly_32 = bigint_nondet_rem!(ctx, x4441, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4443, x3, 35), x4444, 35),
            x4441,
            35
        ),
        260103,
        4,
    )?;
    let x4445: BytePoly_3 = bigint_nondet_quot!(ctx, x4442, x3, 3);
    let x4446: BytePoly_32 = bigint_nondet_rem!(ctx, x4442, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4445, x3, 35), x4446, 35),
            x4442,
            35
        ),
        260103,
        4,
    )?;
    let x4447: BytePoly_64 = bigint_mul!(x4417, x4417, 64);
    let x4448: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x4447, x4447, 64), x4447, 64),
        x2,
        64
    );
    let x4449: BytePoly_64 = bigint_add!(x48, x4448, 64);
    let x4450: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x4420, x4420, 32), x3, 32);
    let x4451: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x4448, x4450, 96), x3, 32);
    let x4452: BytePoly_64 = bigint_mul!(x4420, x4451, 64);
    let x4453: BytePoly_64 = bigint_add!(x4452, x4452, 64);
    let x4454: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x4449, x4453, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4454, x3, 66), x4453, 66),
            x4449,
            66
        ),
        276359,
        4,
    )?;
    let x4455: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x4451, x4451, 64), x3, 64), x3, 64),
            x4417,
            64
        ),
        x4417,
        64
    );
    let x4456: BytePoly_34 = bigint_nondet_quot!(ctx, x4455, x3, 34);
    let x4457: BytePoly_32 = bigint_nondet_rem!(ctx, x4455, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4456, x3, 66), x4457, 66),
            x4455,
            66
        ),
        276359,
        4,
    )?;
    let x4458: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x4451, x4457, 64), 64), x3, 64),
            x4420,
            64
        ),
        bigint_mul!(x4451, x4417, 64),
        64
    );
    let x4459: BytePoly_34 = bigint_nondet_quot!(ctx, x4458, x3, 34);
    let x4460: BytePoly_32 = bigint_nondet_rem!(ctx, x4458, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4459, x3, 66), x4460, 66),
            x4458,
            66
        ),
        276359,
        4,
    )?;
    let x4461: BytePoly_1 = bigint_nondet_rem!(ctx, x4422, x4, 1);
    let x4462: BytePoly_32 = bigint_nondet_quot!(ctx, x4422, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4462, x4, 33), x4461, 33),
            x4422,
            33
        ),
        260103,
        4,
    )?;
    let x4463: BytePoly_1 = bigint_sub!(x5, x4461, 1);
    eqz(ctx, &bigint_mul!(x4461, x4463, 2), 8131, 2)?;
    let x4464: BytePoly_32 = bigint_add!(bigint_sub!(x4460, x4446, 32), x3, 32);
    let x4465: BytePoly_32 = bigint_add!(bigint_sub!(x4457, x4444, 32), x3, 32);
    let x4466: BytePoly_32 = bigint_nondet_inv!(ctx, x4465, x3, 32);
    let x4467: BytePoly_64 = bigint_mul!(x4465, x4466, 64);
    let x4468: BytePoly_34 = bigint_nondet_quot!(ctx, x4467, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x4467, bigint_mul!(x4468, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x4469: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x4464, x4466, 64), x3, 32);
    let x4470: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x4469, x4465, 64), x4464, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x4471: BytePoly_34 = bigint_nondet_quot!(ctx, x4470, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x4470, bigint_mul!(x4471, x3, 66), 66),
        276359,
        4,
    )?;
    let x4472: BytePoly_64 = bigint_mul!(x4469, x4469, 64);
    let x4473: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x4472, x4444, 64), x3, 64),
            x4457,
            64
        ),
        x3,
        64
    );
    let x4474: BytePoly_34 = bigint_nondet_quot!(ctx, x4473, x3, 34);
    let x4475: BytePoly_32 = bigint_nondet_rem!(ctx, x4473, x3, 32);
    let x4476: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x4469, x4475, 64),
                        bigint_add!(
                            bigint_sub!(x4446, bigint_mul!(x4469, x4444, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x4477: BytePoly_34 = bigint_nondet_quot!(ctx, x4476, x3, 34);
    let x4478: BytePoly_32 = bigint_nondet_rem!(ctx, x4476, x3, 32);
    let x4479: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x4472, bigint_mul!(x4474, x3, 66), 66),
                        x4444,
                        66
                    ),
                    x4457,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x4475,
        66
    );
    eqz(ctx, &x4479, 276359, 4)?;
    let x4480: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x4477, x3, 66), x4478, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x4469, bigint_sub!(x4444, x4475, 32), 64),
                        x4446,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x4480, 276359, 4)?;
    let x4481: BytePoly_33 = bigint_add!(
        bigint_mul!(x4475, x4461, 33),
        bigint_mul!(x4444, x4463, 33),
        33
    );
    let x4482: BytePoly_33 = bigint_add!(
        bigint_mul!(x4478, x4461, 33),
        bigint_mul!(x4446, x4463, 33),
        33
    );
    let x4483: BytePoly_3 = bigint_nondet_quot!(ctx, x4481, x3, 3);
    let x4484: BytePoly_32 = bigint_nondet_rem!(ctx, x4481, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4483, x3, 35), x4484, 35),
            x4481,
            35
        ),
        260103,
        4,
    )?;
    let x4485: BytePoly_3 = bigint_nondet_quot!(ctx, x4482, x3, 3);
    let x4486: BytePoly_32 = bigint_nondet_rem!(ctx, x4482, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4485, x3, 35), x4486, 35),
            x4482,
            35
        ),
        260103,
        4,
    )?;
    let x4487: BytePoly_64 = bigint_mul!(x4457, x4457, 64);
    let x4488: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x4487, x4487, 64), x4487, 64),
        x2,
        64
    );
    let x4489: BytePoly_64 = bigint_add!(x48, x4488, 64);
    let x4490: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x4460, x4460, 32), x3, 32);
    let x4491: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x4488, x4490, 96), x3, 32);
    let x4492: BytePoly_64 = bigint_mul!(x4460, x4491, 64);
    let x4493: BytePoly_64 = bigint_add!(x4492, x4492, 64);
    let x4494: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x4489, x4493, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4494, x3, 66), x4493, 66),
            x4489,
            66
        ),
        276359,
        4,
    )?;
    let x4495: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x4491, x4491, 64), x3, 64), x3, 64),
            x4457,
            64
        ),
        x4457,
        64
    );
    let x4496: BytePoly_34 = bigint_nondet_quot!(ctx, x4495, x3, 34);
    let x4497: BytePoly_32 = bigint_nondet_rem!(ctx, x4495, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4496, x3, 66), x4497, 66),
            x4495,
            66
        ),
        276359,
        4,
    )?;
    let x4498: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x4491, x4497, 64), 64), x3, 64),
            x4460,
            64
        ),
        bigint_mul!(x4491, x4457, 64),
        64
    );
    let x4499: BytePoly_34 = bigint_nondet_quot!(ctx, x4498, x3, 34);
    let x4500: BytePoly_32 = bigint_nondet_rem!(ctx, x4498, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4499, x3, 66), x4500, 66),
            x4498,
            66
        ),
        276359,
        4,
    )?;
    let x4501: BytePoly_1 = bigint_nondet_rem!(ctx, x4462, x4, 1);
    let x4502: BytePoly_32 = bigint_nondet_quot!(ctx, x4462, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4502, x4, 33), x4501, 33),
            x4462,
            33
        ),
        260103,
        4,
    )?;
    let x4503: BytePoly_1 = bigint_sub!(x5, x4501, 1);
    eqz(ctx, &bigint_mul!(x4501, x4503, 2), 8131, 2)?;
    let x4504: BytePoly_32 = bigint_add!(bigint_sub!(x4500, x4486, 32), x3, 32);
    let x4505: BytePoly_32 = bigint_add!(bigint_sub!(x4497, x4484, 32), x3, 32);
    let x4506: BytePoly_32 = bigint_nondet_inv!(ctx, x4505, x3, 32);
    let x4507: BytePoly_64 = bigint_mul!(x4505, x4506, 64);
    let x4508: BytePoly_34 = bigint_nondet_quot!(ctx, x4507, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x4507, bigint_mul!(x4508, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x4509: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x4504, x4506, 64), x3, 32);
    let x4510: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x4509, x4505, 64), x4504, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x4511: BytePoly_34 = bigint_nondet_quot!(ctx, x4510, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x4510, bigint_mul!(x4511, x3, 66), 66),
        276359,
        4,
    )?;
    let x4512: BytePoly_64 = bigint_mul!(x4509, x4509, 64);
    let x4513: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x4512, x4484, 64), x3, 64),
            x4497,
            64
        ),
        x3,
        64
    );
    let x4514: BytePoly_34 = bigint_nondet_quot!(ctx, x4513, x3, 34);
    let x4515: BytePoly_32 = bigint_nondet_rem!(ctx, x4513, x3, 32);
    let x4516: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x4509, x4515, 64),
                        bigint_add!(
                            bigint_sub!(x4486, bigint_mul!(x4509, x4484, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x4517: BytePoly_34 = bigint_nondet_quot!(ctx, x4516, x3, 34);
    let x4518: BytePoly_32 = bigint_nondet_rem!(ctx, x4516, x3, 32);
    let x4519: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x4512, bigint_mul!(x4514, x3, 66), 66),
                        x4484,
                        66
                    ),
                    x4497,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x4515,
        66
    );
    eqz(ctx, &x4519, 276359, 4)?;
    let x4520: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x4517, x3, 66), x4518, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x4509, bigint_sub!(x4484, x4515, 32), 64),
                        x4486,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x4520, 276359, 4)?;
    let x4521: BytePoly_33 = bigint_add!(
        bigint_mul!(x4515, x4501, 33),
        bigint_mul!(x4484, x4503, 33),
        33
    );
    let x4522: BytePoly_33 = bigint_add!(
        bigint_mul!(x4518, x4501, 33),
        bigint_mul!(x4486, x4503, 33),
        33
    );
    let x4523: BytePoly_3 = bigint_nondet_quot!(ctx, x4521, x3, 3);
    let x4524: BytePoly_32 = bigint_nondet_rem!(ctx, x4521, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4523, x3, 35), x4524, 35),
            x4521,
            35
        ),
        260103,
        4,
    )?;
    let x4525: BytePoly_3 = bigint_nondet_quot!(ctx, x4522, x3, 3);
    let x4526: BytePoly_32 = bigint_nondet_rem!(ctx, x4522, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4525, x3, 35), x4526, 35),
            x4522,
            35
        ),
        260103,
        4,
    )?;
    let x4527: BytePoly_64 = bigint_mul!(x4497, x4497, 64);
    let x4528: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x4527, x4527, 64), x4527, 64),
        x2,
        64
    );
    let x4529: BytePoly_64 = bigint_add!(x48, x4528, 64);
    let x4530: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x4500, x4500, 32), x3, 32);
    let x4531: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x4528, x4530, 96), x3, 32);
    let x4532: BytePoly_64 = bigint_mul!(x4500, x4531, 64);
    let x4533: BytePoly_64 = bigint_add!(x4532, x4532, 64);
    let x4534: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x4529, x4533, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4534, x3, 66), x4533, 66),
            x4529,
            66
        ),
        276359,
        4,
    )?;
    let x4535: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x4531, x4531, 64), x3, 64), x3, 64),
            x4497,
            64
        ),
        x4497,
        64
    );
    let x4536: BytePoly_34 = bigint_nondet_quot!(ctx, x4535, x3, 34);
    let x4537: BytePoly_32 = bigint_nondet_rem!(ctx, x4535, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4536, x3, 66), x4537, 66),
            x4535,
            66
        ),
        276359,
        4,
    )?;
    let x4538: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x4531, x4537, 64), 64), x3, 64),
            x4500,
            64
        ),
        bigint_mul!(x4531, x4497, 64),
        64
    );
    let x4539: BytePoly_34 = bigint_nondet_quot!(ctx, x4538, x3, 34);
    let x4540: BytePoly_32 = bigint_nondet_rem!(ctx, x4538, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4539, x3, 66), x4540, 66),
            x4538,
            66
        ),
        276359,
        4,
    )?;
    let x4541: BytePoly_1 = bigint_nondet_rem!(ctx, x4502, x4, 1);
    let x4542: BytePoly_32 = bigint_nondet_quot!(ctx, x4502, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4542, x4, 33), x4541, 33),
            x4502,
            33
        ),
        260103,
        4,
    )?;
    let x4543: BytePoly_1 = bigint_sub!(x5, x4541, 1);
    eqz(ctx, &bigint_mul!(x4541, x4543, 2), 8131, 2)?;
    let x4544: BytePoly_32 = bigint_add!(bigint_sub!(x4540, x4526, 32), x3, 32);
    let x4545: BytePoly_32 = bigint_add!(bigint_sub!(x4537, x4524, 32), x3, 32);
    let x4546: BytePoly_32 = bigint_nondet_inv!(ctx, x4545, x3, 32);
    let x4547: BytePoly_64 = bigint_mul!(x4545, x4546, 64);
    let x4548: BytePoly_34 = bigint_nondet_quot!(ctx, x4547, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x4547, bigint_mul!(x4548, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x4549: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x4544, x4546, 64), x3, 32);
    let x4550: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x4549, x4545, 64), x4544, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x4551: BytePoly_34 = bigint_nondet_quot!(ctx, x4550, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x4550, bigint_mul!(x4551, x3, 66), 66),
        276359,
        4,
    )?;
    let x4552: BytePoly_64 = bigint_mul!(x4549, x4549, 64);
    let x4553: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x4552, x4524, 64), x3, 64),
            x4537,
            64
        ),
        x3,
        64
    );
    let x4554: BytePoly_34 = bigint_nondet_quot!(ctx, x4553, x3, 34);
    let x4555: BytePoly_32 = bigint_nondet_rem!(ctx, x4553, x3, 32);
    let x4556: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x4549, x4555, 64),
                        bigint_add!(
                            bigint_sub!(x4526, bigint_mul!(x4549, x4524, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x4557: BytePoly_34 = bigint_nondet_quot!(ctx, x4556, x3, 34);
    let x4558: BytePoly_32 = bigint_nondet_rem!(ctx, x4556, x3, 32);
    let x4559: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x4552, bigint_mul!(x4554, x3, 66), 66),
                        x4524,
                        66
                    ),
                    x4537,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x4555,
        66
    );
    eqz(ctx, &x4559, 276359, 4)?;
    let x4560: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x4557, x3, 66), x4558, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x4549, bigint_sub!(x4524, x4555, 32), 64),
                        x4526,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x4560, 276359, 4)?;
    let x4561: BytePoly_33 = bigint_add!(
        bigint_mul!(x4555, x4541, 33),
        bigint_mul!(x4524, x4543, 33),
        33
    );
    let x4562: BytePoly_33 = bigint_add!(
        bigint_mul!(x4558, x4541, 33),
        bigint_mul!(x4526, x4543, 33),
        33
    );
    let x4563: BytePoly_3 = bigint_nondet_quot!(ctx, x4561, x3, 3);
    let x4564: BytePoly_32 = bigint_nondet_rem!(ctx, x4561, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4563, x3, 35), x4564, 35),
            x4561,
            35
        ),
        260103,
        4,
    )?;
    let x4565: BytePoly_3 = bigint_nondet_quot!(ctx, x4562, x3, 3);
    let x4566: BytePoly_32 = bigint_nondet_rem!(ctx, x4562, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4565, x3, 35), x4566, 35),
            x4562,
            35
        ),
        260103,
        4,
    )?;
    let x4567: BytePoly_64 = bigint_mul!(x4537, x4537, 64);
    let x4568: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x4567, x4567, 64), x4567, 64),
        x2,
        64
    );
    let x4569: BytePoly_64 = bigint_add!(x48, x4568, 64);
    let x4570: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x4540, x4540, 32), x3, 32);
    let x4571: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x4568, x4570, 96), x3, 32);
    let x4572: BytePoly_64 = bigint_mul!(x4540, x4571, 64);
    let x4573: BytePoly_64 = bigint_add!(x4572, x4572, 64);
    let x4574: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x4569, x4573, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4574, x3, 66), x4573, 66),
            x4569,
            66
        ),
        276359,
        4,
    )?;
    let x4575: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x4571, x4571, 64), x3, 64), x3, 64),
            x4537,
            64
        ),
        x4537,
        64
    );
    let x4576: BytePoly_34 = bigint_nondet_quot!(ctx, x4575, x3, 34);
    let x4577: BytePoly_32 = bigint_nondet_rem!(ctx, x4575, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4576, x3, 66), x4577, 66),
            x4575,
            66
        ),
        276359,
        4,
    )?;
    let x4578: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x4571, x4577, 64), 64), x3, 64),
            x4540,
            64
        ),
        bigint_mul!(x4571, x4537, 64),
        64
    );
    let x4579: BytePoly_34 = bigint_nondet_quot!(ctx, x4578, x3, 34);
    let x4580: BytePoly_32 = bigint_nondet_rem!(ctx, x4578, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4579, x3, 66), x4580, 66),
            x4578,
            66
        ),
        276359,
        4,
    )?;
    let x4581: BytePoly_1 = bigint_nondet_rem!(ctx, x4542, x4, 1);
    let x4582: BytePoly_32 = bigint_nondet_quot!(ctx, x4542, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4582, x4, 33), x4581, 33),
            x4542,
            33
        ),
        260103,
        4,
    )?;
    let x4583: BytePoly_1 = bigint_sub!(x5, x4581, 1);
    eqz(ctx, &bigint_mul!(x4581, x4583, 2), 8131, 2)?;
    let x4584: BytePoly_32 = bigint_add!(bigint_sub!(x4580, x4566, 32), x3, 32);
    let x4585: BytePoly_32 = bigint_add!(bigint_sub!(x4577, x4564, 32), x3, 32);
    let x4586: BytePoly_32 = bigint_nondet_inv!(ctx, x4585, x3, 32);
    let x4587: BytePoly_64 = bigint_mul!(x4585, x4586, 64);
    let x4588: BytePoly_34 = bigint_nondet_quot!(ctx, x4587, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x4587, bigint_mul!(x4588, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x4589: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x4584, x4586, 64), x3, 32);
    let x4590: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x4589, x4585, 64), x4584, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x4591: BytePoly_34 = bigint_nondet_quot!(ctx, x4590, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x4590, bigint_mul!(x4591, x3, 66), 66),
        276359,
        4,
    )?;
    let x4592: BytePoly_64 = bigint_mul!(x4589, x4589, 64);
    let x4593: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x4592, x4564, 64), x3, 64),
            x4577,
            64
        ),
        x3,
        64
    );
    let x4594: BytePoly_34 = bigint_nondet_quot!(ctx, x4593, x3, 34);
    let x4595: BytePoly_32 = bigint_nondet_rem!(ctx, x4593, x3, 32);
    let x4596: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x4589, x4595, 64),
                        bigint_add!(
                            bigint_sub!(x4566, bigint_mul!(x4589, x4564, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x4597: BytePoly_34 = bigint_nondet_quot!(ctx, x4596, x3, 34);
    let x4598: BytePoly_32 = bigint_nondet_rem!(ctx, x4596, x3, 32);
    let x4599: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x4592, bigint_mul!(x4594, x3, 66), 66),
                        x4564,
                        66
                    ),
                    x4577,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x4595,
        66
    );
    eqz(ctx, &x4599, 276359, 4)?;
    let x4600: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x4597, x3, 66), x4598, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x4589, bigint_sub!(x4564, x4595, 32), 64),
                        x4566,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x4600, 276359, 4)?;
    let x4601: BytePoly_33 = bigint_add!(
        bigint_mul!(x4595, x4581, 33),
        bigint_mul!(x4564, x4583, 33),
        33
    );
    let x4602: BytePoly_33 = bigint_add!(
        bigint_mul!(x4598, x4581, 33),
        bigint_mul!(x4566, x4583, 33),
        33
    );
    let x4603: BytePoly_3 = bigint_nondet_quot!(ctx, x4601, x3, 3);
    let x4604: BytePoly_32 = bigint_nondet_rem!(ctx, x4601, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4603, x3, 35), x4604, 35),
            x4601,
            35
        ),
        260103,
        4,
    )?;
    let x4605: BytePoly_3 = bigint_nondet_quot!(ctx, x4602, x3, 3);
    let x4606: BytePoly_32 = bigint_nondet_rem!(ctx, x4602, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4605, x3, 35), x4606, 35),
            x4602,
            35
        ),
        260103,
        4,
    )?;
    let x4607: BytePoly_64 = bigint_mul!(x4577, x4577, 64);
    let x4608: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x4607, x4607, 64), x4607, 64),
        x2,
        64
    );
    let x4609: BytePoly_64 = bigint_add!(x48, x4608, 64);
    let x4610: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x4580, x4580, 32), x3, 32);
    let x4611: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x4608, x4610, 96), x3, 32);
    let x4612: BytePoly_64 = bigint_mul!(x4580, x4611, 64);
    let x4613: BytePoly_64 = bigint_add!(x4612, x4612, 64);
    let x4614: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x4609, x4613, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4614, x3, 66), x4613, 66),
            x4609,
            66
        ),
        276359,
        4,
    )?;
    let x4615: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x4611, x4611, 64), x3, 64), x3, 64),
            x4577,
            64
        ),
        x4577,
        64
    );
    let x4616: BytePoly_34 = bigint_nondet_quot!(ctx, x4615, x3, 34);
    let x4617: BytePoly_32 = bigint_nondet_rem!(ctx, x4615, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4616, x3, 66), x4617, 66),
            x4615,
            66
        ),
        276359,
        4,
    )?;
    let x4618: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x4611, x4617, 64), 64), x3, 64),
            x4580,
            64
        ),
        bigint_mul!(x4611, x4577, 64),
        64
    );
    let x4619: BytePoly_34 = bigint_nondet_quot!(ctx, x4618, x3, 34);
    let x4620: BytePoly_32 = bigint_nondet_rem!(ctx, x4618, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4619, x3, 66), x4620, 66),
            x4618,
            66
        ),
        276359,
        4,
    )?;
    let x4621: BytePoly_1 = bigint_nondet_rem!(ctx, x4582, x4, 1);
    let x4622: BytePoly_32 = bigint_nondet_quot!(ctx, x4582, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4622, x4, 33), x4621, 33),
            x4582,
            33
        ),
        260103,
        4,
    )?;
    let x4623: BytePoly_1 = bigint_sub!(x5, x4621, 1);
    eqz(ctx, &bigint_mul!(x4621, x4623, 2), 8131, 2)?;
    let x4624: BytePoly_32 = bigint_add!(bigint_sub!(x4620, x4606, 32), x3, 32);
    let x4625: BytePoly_32 = bigint_add!(bigint_sub!(x4617, x4604, 32), x3, 32);
    let x4626: BytePoly_32 = bigint_nondet_inv!(ctx, x4625, x3, 32);
    let x4627: BytePoly_64 = bigint_mul!(x4625, x4626, 64);
    let x4628: BytePoly_34 = bigint_nondet_quot!(ctx, x4627, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x4627, bigint_mul!(x4628, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x4629: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x4624, x4626, 64), x3, 32);
    let x4630: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x4629, x4625, 64), x4624, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x4631: BytePoly_34 = bigint_nondet_quot!(ctx, x4630, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x4630, bigint_mul!(x4631, x3, 66), 66),
        276359,
        4,
    )?;
    let x4632: BytePoly_64 = bigint_mul!(x4629, x4629, 64);
    let x4633: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x4632, x4604, 64), x3, 64),
            x4617,
            64
        ),
        x3,
        64
    );
    let x4634: BytePoly_34 = bigint_nondet_quot!(ctx, x4633, x3, 34);
    let x4635: BytePoly_32 = bigint_nondet_rem!(ctx, x4633, x3, 32);
    let x4636: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x4629, x4635, 64),
                        bigint_add!(
                            bigint_sub!(x4606, bigint_mul!(x4629, x4604, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x4637: BytePoly_34 = bigint_nondet_quot!(ctx, x4636, x3, 34);
    let x4638: BytePoly_32 = bigint_nondet_rem!(ctx, x4636, x3, 32);
    let x4639: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x4632, bigint_mul!(x4634, x3, 66), 66),
                        x4604,
                        66
                    ),
                    x4617,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x4635,
        66
    );
    eqz(ctx, &x4639, 276359, 4)?;
    let x4640: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x4637, x3, 66), x4638, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x4629, bigint_sub!(x4604, x4635, 32), 64),
                        x4606,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x4640, 276359, 4)?;
    let x4641: BytePoly_33 = bigint_add!(
        bigint_mul!(x4635, x4621, 33),
        bigint_mul!(x4604, x4623, 33),
        33
    );
    let x4642: BytePoly_33 = bigint_add!(
        bigint_mul!(x4638, x4621, 33),
        bigint_mul!(x4606, x4623, 33),
        33
    );
    let x4643: BytePoly_3 = bigint_nondet_quot!(ctx, x4641, x3, 3);
    let x4644: BytePoly_32 = bigint_nondet_rem!(ctx, x4641, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4643, x3, 35), x4644, 35),
            x4641,
            35
        ),
        260103,
        4,
    )?;
    let x4645: BytePoly_3 = bigint_nondet_quot!(ctx, x4642, x3, 3);
    let x4646: BytePoly_32 = bigint_nondet_rem!(ctx, x4642, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4645, x3, 35), x4646, 35),
            x4642,
            35
        ),
        260103,
        4,
    )?;
    let x4647: BytePoly_64 = bigint_mul!(x4617, x4617, 64);
    let x4648: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x4647, x4647, 64), x4647, 64),
        x2,
        64
    );
    let x4649: BytePoly_64 = bigint_add!(x48, x4648, 64);
    let x4650: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x4620, x4620, 32), x3, 32);
    let x4651: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x4648, x4650, 96), x3, 32);
    let x4652: BytePoly_64 = bigint_mul!(x4620, x4651, 64);
    let x4653: BytePoly_64 = bigint_add!(x4652, x4652, 64);
    let x4654: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x4649, x4653, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4654, x3, 66), x4653, 66),
            x4649,
            66
        ),
        276359,
        4,
    )?;
    let x4655: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x4651, x4651, 64), x3, 64), x3, 64),
            x4617,
            64
        ),
        x4617,
        64
    );
    let x4656: BytePoly_34 = bigint_nondet_quot!(ctx, x4655, x3, 34);
    let x4657: BytePoly_32 = bigint_nondet_rem!(ctx, x4655, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4656, x3, 66), x4657, 66),
            x4655,
            66
        ),
        276359,
        4,
    )?;
    let x4658: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x4651, x4657, 64), 64), x3, 64),
            x4620,
            64
        ),
        bigint_mul!(x4651, x4617, 64),
        64
    );
    let x4659: BytePoly_34 = bigint_nondet_quot!(ctx, x4658, x3, 34);
    let x4660: BytePoly_32 = bigint_nondet_rem!(ctx, x4658, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4659, x3, 66), x4660, 66),
            x4658,
            66
        ),
        276359,
        4,
    )?;
    let x4661: BytePoly_1 = bigint_nondet_rem!(ctx, x4622, x4, 1);
    let x4662: BytePoly_32 = bigint_nondet_quot!(ctx, x4622, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4662, x4, 33), x4661, 33),
            x4622,
            33
        ),
        260103,
        4,
    )?;
    let x4663: BytePoly_1 = bigint_sub!(x5, x4661, 1);
    eqz(ctx, &bigint_mul!(x4661, x4663, 2), 8131, 2)?;
    let x4664: BytePoly_32 = bigint_add!(bigint_sub!(x4660, x4646, 32), x3, 32);
    let x4665: BytePoly_32 = bigint_add!(bigint_sub!(x4657, x4644, 32), x3, 32);
    let x4666: BytePoly_32 = bigint_nondet_inv!(ctx, x4665, x3, 32);
    let x4667: BytePoly_64 = bigint_mul!(x4665, x4666, 64);
    let x4668: BytePoly_34 = bigint_nondet_quot!(ctx, x4667, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x4667, bigint_mul!(x4668, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x4669: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x4664, x4666, 64), x3, 32);
    let x4670: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x4669, x4665, 64), x4664, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x4671: BytePoly_34 = bigint_nondet_quot!(ctx, x4670, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x4670, bigint_mul!(x4671, x3, 66), 66),
        276359,
        4,
    )?;
    let x4672: BytePoly_64 = bigint_mul!(x4669, x4669, 64);
    let x4673: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x4672, x4644, 64), x3, 64),
            x4657,
            64
        ),
        x3,
        64
    );
    let x4674: BytePoly_34 = bigint_nondet_quot!(ctx, x4673, x3, 34);
    let x4675: BytePoly_32 = bigint_nondet_rem!(ctx, x4673, x3, 32);
    let x4676: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x4669, x4675, 64),
                        bigint_add!(
                            bigint_sub!(x4646, bigint_mul!(x4669, x4644, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x4677: BytePoly_34 = bigint_nondet_quot!(ctx, x4676, x3, 34);
    let x4678: BytePoly_32 = bigint_nondet_rem!(ctx, x4676, x3, 32);
    let x4679: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x4672, bigint_mul!(x4674, x3, 66), 66),
                        x4644,
                        66
                    ),
                    x4657,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x4675,
        66
    );
    eqz(ctx, &x4679, 276359, 4)?;
    let x4680: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x4677, x3, 66), x4678, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x4669, bigint_sub!(x4644, x4675, 32), 64),
                        x4646,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x4680, 276359, 4)?;
    let x4681: BytePoly_33 = bigint_add!(
        bigint_mul!(x4675, x4661, 33),
        bigint_mul!(x4644, x4663, 33),
        33
    );
    let x4682: BytePoly_33 = bigint_add!(
        bigint_mul!(x4678, x4661, 33),
        bigint_mul!(x4646, x4663, 33),
        33
    );
    let x4683: BytePoly_3 = bigint_nondet_quot!(ctx, x4681, x3, 3);
    let x4684: BytePoly_32 = bigint_nondet_rem!(ctx, x4681, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4683, x3, 35), x4684, 35),
            x4681,
            35
        ),
        260103,
        4,
    )?;
    let x4685: BytePoly_3 = bigint_nondet_quot!(ctx, x4682, x3, 3);
    let x4686: BytePoly_32 = bigint_nondet_rem!(ctx, x4682, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4685, x3, 35), x4686, 35),
            x4682,
            35
        ),
        260103,
        4,
    )?;
    let x4687: BytePoly_64 = bigint_mul!(x4657, x4657, 64);
    let x4688: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x4687, x4687, 64), x4687, 64),
        x2,
        64
    );
    let x4689: BytePoly_64 = bigint_add!(x48, x4688, 64);
    let x4690: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x4660, x4660, 32), x3, 32);
    let x4691: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x4688, x4690, 96), x3, 32);
    let x4692: BytePoly_64 = bigint_mul!(x4660, x4691, 64);
    let x4693: BytePoly_64 = bigint_add!(x4692, x4692, 64);
    let x4694: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x4689, x4693, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4694, x3, 66), x4693, 66),
            x4689,
            66
        ),
        276359,
        4,
    )?;
    let x4695: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x4691, x4691, 64), x3, 64), x3, 64),
            x4657,
            64
        ),
        x4657,
        64
    );
    let x4696: BytePoly_34 = bigint_nondet_quot!(ctx, x4695, x3, 34);
    let x4697: BytePoly_32 = bigint_nondet_rem!(ctx, x4695, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4696, x3, 66), x4697, 66),
            x4695,
            66
        ),
        276359,
        4,
    )?;
    let x4698: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x4691, x4697, 64), 64), x3, 64),
            x4660,
            64
        ),
        bigint_mul!(x4691, x4657, 64),
        64
    );
    let x4699: BytePoly_34 = bigint_nondet_quot!(ctx, x4698, x3, 34);
    let x4700: BytePoly_32 = bigint_nondet_rem!(ctx, x4698, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4699, x3, 66), x4700, 66),
            x4698,
            66
        ),
        276359,
        4,
    )?;
    let x4701: BytePoly_1 = bigint_nondet_rem!(ctx, x4662, x4, 1);
    let x4702: BytePoly_32 = bigint_nondet_quot!(ctx, x4662, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4702, x4, 33), x4701, 33),
            x4662,
            33
        ),
        260103,
        4,
    )?;
    let x4703: BytePoly_1 = bigint_sub!(x5, x4701, 1);
    eqz(ctx, &bigint_mul!(x4701, x4703, 2), 8131, 2)?;
    let x4704: BytePoly_32 = bigint_add!(bigint_sub!(x4700, x4686, 32), x3, 32);
    let x4705: BytePoly_32 = bigint_add!(bigint_sub!(x4697, x4684, 32), x3, 32);
    let x4706: BytePoly_32 = bigint_nondet_inv!(ctx, x4705, x3, 32);
    let x4707: BytePoly_64 = bigint_mul!(x4705, x4706, 64);
    let x4708: BytePoly_34 = bigint_nondet_quot!(ctx, x4707, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x4707, bigint_mul!(x4708, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x4709: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x4704, x4706, 64), x3, 32);
    let x4710: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x4709, x4705, 64), x4704, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x4711: BytePoly_34 = bigint_nondet_quot!(ctx, x4710, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x4710, bigint_mul!(x4711, x3, 66), 66),
        276359,
        4,
    )?;
    let x4712: BytePoly_64 = bigint_mul!(x4709, x4709, 64);
    let x4713: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x4712, x4684, 64), x3, 64),
            x4697,
            64
        ),
        x3,
        64
    );
    let x4714: BytePoly_34 = bigint_nondet_quot!(ctx, x4713, x3, 34);
    let x4715: BytePoly_32 = bigint_nondet_rem!(ctx, x4713, x3, 32);
    let x4716: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x4709, x4715, 64),
                        bigint_add!(
                            bigint_sub!(x4686, bigint_mul!(x4709, x4684, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x4717: BytePoly_34 = bigint_nondet_quot!(ctx, x4716, x3, 34);
    let x4718: BytePoly_32 = bigint_nondet_rem!(ctx, x4716, x3, 32);
    let x4719: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x4712, bigint_mul!(x4714, x3, 66), 66),
                        x4684,
                        66
                    ),
                    x4697,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x4715,
        66
    );
    eqz(ctx, &x4719, 276359, 4)?;
    let x4720: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x4717, x3, 66), x4718, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x4709, bigint_sub!(x4684, x4715, 32), 64),
                        x4686,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x4720, 276359, 4)?;
    let x4721: BytePoly_33 = bigint_add!(
        bigint_mul!(x4715, x4701, 33),
        bigint_mul!(x4684, x4703, 33),
        33
    );
    let x4722: BytePoly_33 = bigint_add!(
        bigint_mul!(x4718, x4701, 33),
        bigint_mul!(x4686, x4703, 33),
        33
    );
    let x4723: BytePoly_3 = bigint_nondet_quot!(ctx, x4721, x3, 3);
    let x4724: BytePoly_32 = bigint_nondet_rem!(ctx, x4721, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4723, x3, 35), x4724, 35),
            x4721,
            35
        ),
        260103,
        4,
    )?;
    let x4725: BytePoly_3 = bigint_nondet_quot!(ctx, x4722, x3, 3);
    let x4726: BytePoly_32 = bigint_nondet_rem!(ctx, x4722, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4725, x3, 35), x4726, 35),
            x4722,
            35
        ),
        260103,
        4,
    )?;
    let x4727: BytePoly_64 = bigint_mul!(x4697, x4697, 64);
    let x4728: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x4727, x4727, 64), x4727, 64),
        x2,
        64
    );
    let x4729: BytePoly_64 = bigint_add!(x48, x4728, 64);
    let x4730: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x4700, x4700, 32), x3, 32);
    let x4731: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x4728, x4730, 96), x3, 32);
    let x4732: BytePoly_64 = bigint_mul!(x4700, x4731, 64);
    let x4733: BytePoly_64 = bigint_add!(x4732, x4732, 64);
    let x4734: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x4729, x4733, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4734, x3, 66), x4733, 66),
            x4729,
            66
        ),
        276359,
        4,
    )?;
    let x4735: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x4731, x4731, 64), x3, 64), x3, 64),
            x4697,
            64
        ),
        x4697,
        64
    );
    let x4736: BytePoly_34 = bigint_nondet_quot!(ctx, x4735, x3, 34);
    let x4737: BytePoly_32 = bigint_nondet_rem!(ctx, x4735, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4736, x3, 66), x4737, 66),
            x4735,
            66
        ),
        276359,
        4,
    )?;
    let x4738: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x4731, x4737, 64), 64), x3, 64),
            x4700,
            64
        ),
        bigint_mul!(x4731, x4697, 64),
        64
    );
    let x4739: BytePoly_34 = bigint_nondet_quot!(ctx, x4738, x3, 34);
    let x4740: BytePoly_32 = bigint_nondet_rem!(ctx, x4738, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4739, x3, 66), x4740, 66),
            x4738,
            66
        ),
        276359,
        4,
    )?;
    let x4741: BytePoly_1 = bigint_nondet_rem!(ctx, x4702, x4, 1);
    let x4742: BytePoly_32 = bigint_nondet_quot!(ctx, x4702, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4742, x4, 33), x4741, 33),
            x4702,
            33
        ),
        260103,
        4,
    )?;
    let x4743: BytePoly_1 = bigint_sub!(x5, x4741, 1);
    eqz(ctx, &bigint_mul!(x4741, x4743, 2), 8131, 2)?;
    let x4744: BytePoly_32 = bigint_add!(bigint_sub!(x4740, x4726, 32), x3, 32);
    let x4745: BytePoly_32 = bigint_add!(bigint_sub!(x4737, x4724, 32), x3, 32);
    let x4746: BytePoly_32 = bigint_nondet_inv!(ctx, x4745, x3, 32);
    let x4747: BytePoly_64 = bigint_mul!(x4745, x4746, 64);
    let x4748: BytePoly_34 = bigint_nondet_quot!(ctx, x4747, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x4747, bigint_mul!(x4748, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x4749: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x4744, x4746, 64), x3, 32);
    let x4750: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x4749, x4745, 64), x4744, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x4751: BytePoly_34 = bigint_nondet_quot!(ctx, x4750, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x4750, bigint_mul!(x4751, x3, 66), 66),
        276359,
        4,
    )?;
    let x4752: BytePoly_64 = bigint_mul!(x4749, x4749, 64);
    let x4753: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x4752, x4724, 64), x3, 64),
            x4737,
            64
        ),
        x3,
        64
    );
    let x4754: BytePoly_34 = bigint_nondet_quot!(ctx, x4753, x3, 34);
    let x4755: BytePoly_32 = bigint_nondet_rem!(ctx, x4753, x3, 32);
    let x4756: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x4749, x4755, 64),
                        bigint_add!(
                            bigint_sub!(x4726, bigint_mul!(x4749, x4724, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x4757: BytePoly_34 = bigint_nondet_quot!(ctx, x4756, x3, 34);
    let x4758: BytePoly_32 = bigint_nondet_rem!(ctx, x4756, x3, 32);
    let x4759: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x4752, bigint_mul!(x4754, x3, 66), 66),
                        x4724,
                        66
                    ),
                    x4737,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x4755,
        66
    );
    eqz(ctx, &x4759, 276359, 4)?;
    let x4760: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x4757, x3, 66), x4758, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x4749, bigint_sub!(x4724, x4755, 32), 64),
                        x4726,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x4760, 276359, 4)?;
    let x4761: BytePoly_33 = bigint_add!(
        bigint_mul!(x4755, x4741, 33),
        bigint_mul!(x4724, x4743, 33),
        33
    );
    let x4762: BytePoly_33 = bigint_add!(
        bigint_mul!(x4758, x4741, 33),
        bigint_mul!(x4726, x4743, 33),
        33
    );
    let x4763: BytePoly_3 = bigint_nondet_quot!(ctx, x4761, x3, 3);
    let x4764: BytePoly_32 = bigint_nondet_rem!(ctx, x4761, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4763, x3, 35), x4764, 35),
            x4761,
            35
        ),
        260103,
        4,
    )?;
    let x4765: BytePoly_3 = bigint_nondet_quot!(ctx, x4762, x3, 3);
    let x4766: BytePoly_32 = bigint_nondet_rem!(ctx, x4762, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4765, x3, 35), x4766, 35),
            x4762,
            35
        ),
        260103,
        4,
    )?;
    let x4767: BytePoly_64 = bigint_mul!(x4737, x4737, 64);
    let x4768: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x4767, x4767, 64), x4767, 64),
        x2,
        64
    );
    let x4769: BytePoly_64 = bigint_add!(x48, x4768, 64);
    let x4770: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x4740, x4740, 32), x3, 32);
    let x4771: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x4768, x4770, 96), x3, 32);
    let x4772: BytePoly_64 = bigint_mul!(x4740, x4771, 64);
    let x4773: BytePoly_64 = bigint_add!(x4772, x4772, 64);
    let x4774: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x4769, x4773, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4774, x3, 66), x4773, 66),
            x4769,
            66
        ),
        276359,
        4,
    )?;
    let x4775: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x4771, x4771, 64), x3, 64), x3, 64),
            x4737,
            64
        ),
        x4737,
        64
    );
    let x4776: BytePoly_34 = bigint_nondet_quot!(ctx, x4775, x3, 34);
    let x4777: BytePoly_32 = bigint_nondet_rem!(ctx, x4775, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4776, x3, 66), x4777, 66),
            x4775,
            66
        ),
        276359,
        4,
    )?;
    let x4778: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x4771, x4777, 64), 64), x3, 64),
            x4740,
            64
        ),
        bigint_mul!(x4771, x4737, 64),
        64
    );
    let x4779: BytePoly_34 = bigint_nondet_quot!(ctx, x4778, x3, 34);
    let x4780: BytePoly_32 = bigint_nondet_rem!(ctx, x4778, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4779, x3, 66), x4780, 66),
            x4778,
            66
        ),
        276359,
        4,
    )?;
    let x4781: BytePoly_1 = bigint_nondet_rem!(ctx, x4742, x4, 1);
    let x4782: BytePoly_32 = bigint_nondet_quot!(ctx, x4742, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4782, x4, 33), x4781, 33),
            x4742,
            33
        ),
        260103,
        4,
    )?;
    let x4783: BytePoly_1 = bigint_sub!(x5, x4781, 1);
    eqz(ctx, &bigint_mul!(x4781, x4783, 2), 8131, 2)?;
    let x4784: BytePoly_32 = bigint_add!(bigint_sub!(x4780, x4766, 32), x3, 32);
    let x4785: BytePoly_32 = bigint_add!(bigint_sub!(x4777, x4764, 32), x3, 32);
    let x4786: BytePoly_32 = bigint_nondet_inv!(ctx, x4785, x3, 32);
    let x4787: BytePoly_64 = bigint_mul!(x4785, x4786, 64);
    let x4788: BytePoly_34 = bigint_nondet_quot!(ctx, x4787, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x4787, bigint_mul!(x4788, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x4789: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x4784, x4786, 64), x3, 32);
    let x4790: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x4789, x4785, 64), x4784, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x4791: BytePoly_34 = bigint_nondet_quot!(ctx, x4790, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x4790, bigint_mul!(x4791, x3, 66), 66),
        276359,
        4,
    )?;
    let x4792: BytePoly_64 = bigint_mul!(x4789, x4789, 64);
    let x4793: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x4792, x4764, 64), x3, 64),
            x4777,
            64
        ),
        x3,
        64
    );
    let x4794: BytePoly_34 = bigint_nondet_quot!(ctx, x4793, x3, 34);
    let x4795: BytePoly_32 = bigint_nondet_rem!(ctx, x4793, x3, 32);
    let x4796: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x4789, x4795, 64),
                        bigint_add!(
                            bigint_sub!(x4766, bigint_mul!(x4789, x4764, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x4797: BytePoly_34 = bigint_nondet_quot!(ctx, x4796, x3, 34);
    let x4798: BytePoly_32 = bigint_nondet_rem!(ctx, x4796, x3, 32);
    let x4799: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x4792, bigint_mul!(x4794, x3, 66), 66),
                        x4764,
                        66
                    ),
                    x4777,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x4795,
        66
    );
    eqz(ctx, &x4799, 276359, 4)?;
    let x4800: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x4797, x3, 66), x4798, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x4789, bigint_sub!(x4764, x4795, 32), 64),
                        x4766,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x4800, 276359, 4)?;
    let x4801: BytePoly_33 = bigint_add!(
        bigint_mul!(x4795, x4781, 33),
        bigint_mul!(x4764, x4783, 33),
        33
    );
    let x4802: BytePoly_33 = bigint_add!(
        bigint_mul!(x4798, x4781, 33),
        bigint_mul!(x4766, x4783, 33),
        33
    );
    let x4803: BytePoly_3 = bigint_nondet_quot!(ctx, x4801, x3, 3);
    let x4804: BytePoly_32 = bigint_nondet_rem!(ctx, x4801, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4803, x3, 35), x4804, 35),
            x4801,
            35
        ),
        260103,
        4,
    )?;
    let x4805: BytePoly_3 = bigint_nondet_quot!(ctx, x4802, x3, 3);
    let x4806: BytePoly_32 = bigint_nondet_rem!(ctx, x4802, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4805, x3, 35), x4806, 35),
            x4802,
            35
        ),
        260103,
        4,
    )?;
    let x4807: BytePoly_64 = bigint_mul!(x4777, x4777, 64);
    let x4808: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x4807, x4807, 64), x4807, 64),
        x2,
        64
    );
    let x4809: BytePoly_64 = bigint_add!(x48, x4808, 64);
    let x4810: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x4780, x4780, 32), x3, 32);
    let x4811: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x4808, x4810, 96), x3, 32);
    let x4812: BytePoly_64 = bigint_mul!(x4780, x4811, 64);
    let x4813: BytePoly_64 = bigint_add!(x4812, x4812, 64);
    let x4814: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x4809, x4813, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4814, x3, 66), x4813, 66),
            x4809,
            66
        ),
        276359,
        4,
    )?;
    let x4815: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x4811, x4811, 64), x3, 64), x3, 64),
            x4777,
            64
        ),
        x4777,
        64
    );
    let x4816: BytePoly_34 = bigint_nondet_quot!(ctx, x4815, x3, 34);
    let x4817: BytePoly_32 = bigint_nondet_rem!(ctx, x4815, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4816, x3, 66), x4817, 66),
            x4815,
            66
        ),
        276359,
        4,
    )?;
    let x4818: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x4811, x4817, 64), 64), x3, 64),
            x4780,
            64
        ),
        bigint_mul!(x4811, x4777, 64),
        64
    );
    let x4819: BytePoly_34 = bigint_nondet_quot!(ctx, x4818, x3, 34);
    let x4820: BytePoly_32 = bigint_nondet_rem!(ctx, x4818, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4819, x3, 66), x4820, 66),
            x4818,
            66
        ),
        276359,
        4,
    )?;
    let x4821: BytePoly_1 = bigint_nondet_rem!(ctx, x4782, x4, 1);
    let x4822: BytePoly_32 = bigint_nondet_quot!(ctx, x4782, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4822, x4, 33), x4821, 33),
            x4782,
            33
        ),
        260103,
        4,
    )?;
    let x4823: BytePoly_1 = bigint_sub!(x5, x4821, 1);
    eqz(ctx, &bigint_mul!(x4821, x4823, 2), 8131, 2)?;
    let x4824: BytePoly_32 = bigint_add!(bigint_sub!(x4820, x4806, 32), x3, 32);
    let x4825: BytePoly_32 = bigint_add!(bigint_sub!(x4817, x4804, 32), x3, 32);
    let x4826: BytePoly_32 = bigint_nondet_inv!(ctx, x4825, x3, 32);
    let x4827: BytePoly_64 = bigint_mul!(x4825, x4826, 64);
    let x4828: BytePoly_34 = bigint_nondet_quot!(ctx, x4827, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x4827, bigint_mul!(x4828, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x4829: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x4824, x4826, 64), x3, 32);
    let x4830: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x4829, x4825, 64), x4824, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x4831: BytePoly_34 = bigint_nondet_quot!(ctx, x4830, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x4830, bigint_mul!(x4831, x3, 66), 66),
        276359,
        4,
    )?;
    let x4832: BytePoly_64 = bigint_mul!(x4829, x4829, 64);
    let x4833: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x4832, x4804, 64), x3, 64),
            x4817,
            64
        ),
        x3,
        64
    );
    let x4834: BytePoly_34 = bigint_nondet_quot!(ctx, x4833, x3, 34);
    let x4835: BytePoly_32 = bigint_nondet_rem!(ctx, x4833, x3, 32);
    let x4836: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x4829, x4835, 64),
                        bigint_add!(
                            bigint_sub!(x4806, bigint_mul!(x4829, x4804, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x4837: BytePoly_34 = bigint_nondet_quot!(ctx, x4836, x3, 34);
    let x4838: BytePoly_32 = bigint_nondet_rem!(ctx, x4836, x3, 32);
    let x4839: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x4832, bigint_mul!(x4834, x3, 66), 66),
                        x4804,
                        66
                    ),
                    x4817,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x4835,
        66
    );
    eqz(ctx, &x4839, 276359, 4)?;
    let x4840: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x4837, x3, 66), x4838, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x4829, bigint_sub!(x4804, x4835, 32), 64),
                        x4806,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x4840, 276359, 4)?;
    let x4841: BytePoly_33 = bigint_add!(
        bigint_mul!(x4835, x4821, 33),
        bigint_mul!(x4804, x4823, 33),
        33
    );
    let x4842: BytePoly_33 = bigint_add!(
        bigint_mul!(x4838, x4821, 33),
        bigint_mul!(x4806, x4823, 33),
        33
    );
    let x4843: BytePoly_3 = bigint_nondet_quot!(ctx, x4841, x3, 3);
    let x4844: BytePoly_32 = bigint_nondet_rem!(ctx, x4841, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4843, x3, 35), x4844, 35),
            x4841,
            35
        ),
        260103,
        4,
    )?;
    let x4845: BytePoly_3 = bigint_nondet_quot!(ctx, x4842, x3, 3);
    let x4846: BytePoly_32 = bigint_nondet_rem!(ctx, x4842, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4845, x3, 35), x4846, 35),
            x4842,
            35
        ),
        260103,
        4,
    )?;
    let x4847: BytePoly_64 = bigint_mul!(x4817, x4817, 64);
    let x4848: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x4847, x4847, 64), x4847, 64),
        x2,
        64
    );
    let x4849: BytePoly_64 = bigint_add!(x48, x4848, 64);
    let x4850: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x4820, x4820, 32), x3, 32);
    let x4851: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x4848, x4850, 96), x3, 32);
    let x4852: BytePoly_64 = bigint_mul!(x4820, x4851, 64);
    let x4853: BytePoly_64 = bigint_add!(x4852, x4852, 64);
    let x4854: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x4849, x4853, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4854, x3, 66), x4853, 66),
            x4849,
            66
        ),
        276359,
        4,
    )?;
    let x4855: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x4851, x4851, 64), x3, 64), x3, 64),
            x4817,
            64
        ),
        x4817,
        64
    );
    let x4856: BytePoly_34 = bigint_nondet_quot!(ctx, x4855, x3, 34);
    let x4857: BytePoly_32 = bigint_nondet_rem!(ctx, x4855, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4856, x3, 66), x4857, 66),
            x4855,
            66
        ),
        276359,
        4,
    )?;
    let x4858: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x4851, x4857, 64), 64), x3, 64),
            x4820,
            64
        ),
        bigint_mul!(x4851, x4817, 64),
        64
    );
    let x4859: BytePoly_34 = bigint_nondet_quot!(ctx, x4858, x3, 34);
    let x4860: BytePoly_32 = bigint_nondet_rem!(ctx, x4858, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4859, x3, 66), x4860, 66),
            x4858,
            66
        ),
        276359,
        4,
    )?;
    let x4861: BytePoly_1 = bigint_nondet_rem!(ctx, x4822, x4, 1);
    let x4862: BytePoly_32 = bigint_nondet_quot!(ctx, x4822, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4862, x4, 33), x4861, 33),
            x4822,
            33
        ),
        260103,
        4,
    )?;
    let x4863: BytePoly_1 = bigint_sub!(x5, x4861, 1);
    eqz(ctx, &bigint_mul!(x4861, x4863, 2), 8131, 2)?;
    let x4864: BytePoly_32 = bigint_add!(bigint_sub!(x4860, x4846, 32), x3, 32);
    let x4865: BytePoly_32 = bigint_add!(bigint_sub!(x4857, x4844, 32), x3, 32);
    let x4866: BytePoly_32 = bigint_nondet_inv!(ctx, x4865, x3, 32);
    let x4867: BytePoly_64 = bigint_mul!(x4865, x4866, 64);
    let x4868: BytePoly_34 = bigint_nondet_quot!(ctx, x4867, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x4867, bigint_mul!(x4868, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x4869: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x4864, x4866, 64), x3, 32);
    let x4870: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x4869, x4865, 64), x4864, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x4871: BytePoly_34 = bigint_nondet_quot!(ctx, x4870, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x4870, bigint_mul!(x4871, x3, 66), 66),
        276359,
        4,
    )?;
    let x4872: BytePoly_64 = bigint_mul!(x4869, x4869, 64);
    let x4873: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x4872, x4844, 64), x3, 64),
            x4857,
            64
        ),
        x3,
        64
    );
    let x4874: BytePoly_34 = bigint_nondet_quot!(ctx, x4873, x3, 34);
    let x4875: BytePoly_32 = bigint_nondet_rem!(ctx, x4873, x3, 32);
    let x4876: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x4869, x4875, 64),
                        bigint_add!(
                            bigint_sub!(x4846, bigint_mul!(x4869, x4844, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x4877: BytePoly_34 = bigint_nondet_quot!(ctx, x4876, x3, 34);
    let x4878: BytePoly_32 = bigint_nondet_rem!(ctx, x4876, x3, 32);
    let x4879: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x4872, bigint_mul!(x4874, x3, 66), 66),
                        x4844,
                        66
                    ),
                    x4857,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x4875,
        66
    );
    eqz(ctx, &x4879, 276359, 4)?;
    let x4880: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x4877, x3, 66), x4878, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x4869, bigint_sub!(x4844, x4875, 32), 64),
                        x4846,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x4880, 276359, 4)?;
    let x4881: BytePoly_33 = bigint_add!(
        bigint_mul!(x4875, x4861, 33),
        bigint_mul!(x4844, x4863, 33),
        33
    );
    let x4882: BytePoly_33 = bigint_add!(
        bigint_mul!(x4878, x4861, 33),
        bigint_mul!(x4846, x4863, 33),
        33
    );
    let x4883: BytePoly_3 = bigint_nondet_quot!(ctx, x4881, x3, 3);
    let x4884: BytePoly_32 = bigint_nondet_rem!(ctx, x4881, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4883, x3, 35), x4884, 35),
            x4881,
            35
        ),
        260103,
        4,
    )?;
    let x4885: BytePoly_3 = bigint_nondet_quot!(ctx, x4882, x3, 3);
    let x4886: BytePoly_32 = bigint_nondet_rem!(ctx, x4882, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4885, x3, 35), x4886, 35),
            x4882,
            35
        ),
        260103,
        4,
    )?;
    let x4887: BytePoly_64 = bigint_mul!(x4857, x4857, 64);
    let x4888: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x4887, x4887, 64), x4887, 64),
        x2,
        64
    );
    let x4889: BytePoly_64 = bigint_add!(x48, x4888, 64);
    let x4890: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x4860, x4860, 32), x3, 32);
    let x4891: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x4888, x4890, 96), x3, 32);
    let x4892: BytePoly_64 = bigint_mul!(x4860, x4891, 64);
    let x4893: BytePoly_64 = bigint_add!(x4892, x4892, 64);
    let x4894: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x4889, x4893, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4894, x3, 66), x4893, 66),
            x4889,
            66
        ),
        276359,
        4,
    )?;
    let x4895: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x4891, x4891, 64), x3, 64), x3, 64),
            x4857,
            64
        ),
        x4857,
        64
    );
    let x4896: BytePoly_34 = bigint_nondet_quot!(ctx, x4895, x3, 34);
    let x4897: BytePoly_32 = bigint_nondet_rem!(ctx, x4895, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4896, x3, 66), x4897, 66),
            x4895,
            66
        ),
        276359,
        4,
    )?;
    let x4898: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x4891, x4897, 64), 64), x3, 64),
            x4860,
            64
        ),
        bigint_mul!(x4891, x4857, 64),
        64
    );
    let x4899: BytePoly_34 = bigint_nondet_quot!(ctx, x4898, x3, 34);
    let x4900: BytePoly_32 = bigint_nondet_rem!(ctx, x4898, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4899, x3, 66), x4900, 66),
            x4898,
            66
        ),
        276359,
        4,
    )?;
    let x4901: BytePoly_1 = bigint_nondet_rem!(ctx, x4862, x4, 1);
    let x4902: BytePoly_32 = bigint_nondet_quot!(ctx, x4862, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4902, x4, 33), x4901, 33),
            x4862,
            33
        ),
        260103,
        4,
    )?;
    let x4903: BytePoly_1 = bigint_sub!(x5, x4901, 1);
    eqz(ctx, &bigint_mul!(x4901, x4903, 2), 8131, 2)?;
    let x4904: BytePoly_32 = bigint_add!(bigint_sub!(x4900, x4886, 32), x3, 32);
    let x4905: BytePoly_32 = bigint_add!(bigint_sub!(x4897, x4884, 32), x3, 32);
    let x4906: BytePoly_32 = bigint_nondet_inv!(ctx, x4905, x3, 32);
    let x4907: BytePoly_64 = bigint_mul!(x4905, x4906, 64);
    let x4908: BytePoly_34 = bigint_nondet_quot!(ctx, x4907, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x4907, bigint_mul!(x4908, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x4909: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x4904, x4906, 64), x3, 32);
    let x4910: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x4909, x4905, 64), x4904, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x4911: BytePoly_34 = bigint_nondet_quot!(ctx, x4910, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x4910, bigint_mul!(x4911, x3, 66), 66),
        276359,
        4,
    )?;
    let x4912: BytePoly_64 = bigint_mul!(x4909, x4909, 64);
    let x4913: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x4912, x4884, 64), x3, 64),
            x4897,
            64
        ),
        x3,
        64
    );
    let x4914: BytePoly_34 = bigint_nondet_quot!(ctx, x4913, x3, 34);
    let x4915: BytePoly_32 = bigint_nondet_rem!(ctx, x4913, x3, 32);
    let x4916: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x4909, x4915, 64),
                        bigint_add!(
                            bigint_sub!(x4886, bigint_mul!(x4909, x4884, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x4917: BytePoly_34 = bigint_nondet_quot!(ctx, x4916, x3, 34);
    let x4918: BytePoly_32 = bigint_nondet_rem!(ctx, x4916, x3, 32);
    let x4919: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x4912, bigint_mul!(x4914, x3, 66), 66),
                        x4884,
                        66
                    ),
                    x4897,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x4915,
        66
    );
    eqz(ctx, &x4919, 276359, 4)?;
    let x4920: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x4917, x3, 66), x4918, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x4909, bigint_sub!(x4884, x4915, 32), 64),
                        x4886,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x4920, 276359, 4)?;
    let x4921: BytePoly_33 = bigint_add!(
        bigint_mul!(x4915, x4901, 33),
        bigint_mul!(x4884, x4903, 33),
        33
    );
    let x4922: BytePoly_33 = bigint_add!(
        bigint_mul!(x4918, x4901, 33),
        bigint_mul!(x4886, x4903, 33),
        33
    );
    let x4923: BytePoly_3 = bigint_nondet_quot!(ctx, x4921, x3, 3);
    let x4924: BytePoly_32 = bigint_nondet_rem!(ctx, x4921, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4923, x3, 35), x4924, 35),
            x4921,
            35
        ),
        260103,
        4,
    )?;
    let x4925: BytePoly_3 = bigint_nondet_quot!(ctx, x4922, x3, 3);
    let x4926: BytePoly_32 = bigint_nondet_rem!(ctx, x4922, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4925, x3, 35), x4926, 35),
            x4922,
            35
        ),
        260103,
        4,
    )?;
    let x4927: BytePoly_64 = bigint_mul!(x4897, x4897, 64);
    let x4928: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x4927, x4927, 64), x4927, 64),
        x2,
        64
    );
    let x4929: BytePoly_64 = bigint_add!(x48, x4928, 64);
    let x4930: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x4900, x4900, 32), x3, 32);
    let x4931: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x4928, x4930, 96), x3, 32);
    let x4932: BytePoly_64 = bigint_mul!(x4900, x4931, 64);
    let x4933: BytePoly_64 = bigint_add!(x4932, x4932, 64);
    let x4934: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x4929, x4933, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4934, x3, 66), x4933, 66),
            x4929,
            66
        ),
        276359,
        4,
    )?;
    let x4935: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x4931, x4931, 64), x3, 64), x3, 64),
            x4897,
            64
        ),
        x4897,
        64
    );
    let x4936: BytePoly_34 = bigint_nondet_quot!(ctx, x4935, x3, 34);
    let x4937: BytePoly_32 = bigint_nondet_rem!(ctx, x4935, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4936, x3, 66), x4937, 66),
            x4935,
            66
        ),
        276359,
        4,
    )?;
    let x4938: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x4931, x4937, 64), 64), x3, 64),
            x4900,
            64
        ),
        bigint_mul!(x4931, x4897, 64),
        64
    );
    let x4939: BytePoly_34 = bigint_nondet_quot!(ctx, x4938, x3, 34);
    let x4940: BytePoly_32 = bigint_nondet_rem!(ctx, x4938, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4939, x3, 66), x4940, 66),
            x4938,
            66
        ),
        276359,
        4,
    )?;
    let x4941: BytePoly_1 = bigint_nondet_rem!(ctx, x4902, x4, 1);
    let x4942: BytePoly_32 = bigint_nondet_quot!(ctx, x4902, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4942, x4, 33), x4941, 33),
            x4902,
            33
        ),
        260103,
        4,
    )?;
    let x4943: BytePoly_1 = bigint_sub!(x5, x4941, 1);
    eqz(ctx, &bigint_mul!(x4941, x4943, 2), 8131, 2)?;
    let x4944: BytePoly_32 = bigint_add!(bigint_sub!(x4940, x4926, 32), x3, 32);
    let x4945: BytePoly_32 = bigint_add!(bigint_sub!(x4937, x4924, 32), x3, 32);
    let x4946: BytePoly_32 = bigint_nondet_inv!(ctx, x4945, x3, 32);
    let x4947: BytePoly_64 = bigint_mul!(x4945, x4946, 64);
    let x4948: BytePoly_34 = bigint_nondet_quot!(ctx, x4947, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x4947, bigint_mul!(x4948, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x4949: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x4944, x4946, 64), x3, 32);
    let x4950: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x4949, x4945, 64), x4944, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x4951: BytePoly_34 = bigint_nondet_quot!(ctx, x4950, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x4950, bigint_mul!(x4951, x3, 66), 66),
        276359,
        4,
    )?;
    let x4952: BytePoly_64 = bigint_mul!(x4949, x4949, 64);
    let x4953: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x4952, x4924, 64), x3, 64),
            x4937,
            64
        ),
        x3,
        64
    );
    let x4954: BytePoly_34 = bigint_nondet_quot!(ctx, x4953, x3, 34);
    let x4955: BytePoly_32 = bigint_nondet_rem!(ctx, x4953, x3, 32);
    let x4956: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x4949, x4955, 64),
                        bigint_add!(
                            bigint_sub!(x4926, bigint_mul!(x4949, x4924, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x4957: BytePoly_34 = bigint_nondet_quot!(ctx, x4956, x3, 34);
    let x4958: BytePoly_32 = bigint_nondet_rem!(ctx, x4956, x3, 32);
    let x4959: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x4952, bigint_mul!(x4954, x3, 66), 66),
                        x4924,
                        66
                    ),
                    x4937,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x4955,
        66
    );
    eqz(ctx, &x4959, 276359, 4)?;
    let x4960: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x4957, x3, 66), x4958, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x4949, bigint_sub!(x4924, x4955, 32), 64),
                        x4926,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x4960, 276359, 4)?;
    let x4961: BytePoly_33 = bigint_add!(
        bigint_mul!(x4955, x4941, 33),
        bigint_mul!(x4924, x4943, 33),
        33
    );
    let x4962: BytePoly_33 = bigint_add!(
        bigint_mul!(x4958, x4941, 33),
        bigint_mul!(x4926, x4943, 33),
        33
    );
    let x4963: BytePoly_3 = bigint_nondet_quot!(ctx, x4961, x3, 3);
    let x4964: BytePoly_32 = bigint_nondet_rem!(ctx, x4961, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4963, x3, 35), x4964, 35),
            x4961,
            35
        ),
        260103,
        4,
    )?;
    let x4965: BytePoly_3 = bigint_nondet_quot!(ctx, x4962, x3, 3);
    let x4966: BytePoly_32 = bigint_nondet_rem!(ctx, x4962, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4965, x3, 35), x4966, 35),
            x4962,
            35
        ),
        260103,
        4,
    )?;
    let x4967: BytePoly_64 = bigint_mul!(x4937, x4937, 64);
    let x4968: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x4967, x4967, 64), x4967, 64),
        x2,
        64
    );
    let x4969: BytePoly_64 = bigint_add!(x48, x4968, 64);
    let x4970: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x4940, x4940, 32), x3, 32);
    let x4971: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x4968, x4970, 96), x3, 32);
    let x4972: BytePoly_64 = bigint_mul!(x4940, x4971, 64);
    let x4973: BytePoly_64 = bigint_add!(x4972, x4972, 64);
    let x4974: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x4969, x4973, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4974, x3, 66), x4973, 66),
            x4969,
            66
        ),
        276359,
        4,
    )?;
    let x4975: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x4971, x4971, 64), x3, 64), x3, 64),
            x4937,
            64
        ),
        x4937,
        64
    );
    let x4976: BytePoly_34 = bigint_nondet_quot!(ctx, x4975, x3, 34);
    let x4977: BytePoly_32 = bigint_nondet_rem!(ctx, x4975, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4976, x3, 66), x4977, 66),
            x4975,
            66
        ),
        276359,
        4,
    )?;
    let x4978: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x4971, x4977, 64), 64), x3, 64),
            x4940,
            64
        ),
        bigint_mul!(x4971, x4937, 64),
        64
    );
    let x4979: BytePoly_34 = bigint_nondet_quot!(ctx, x4978, x3, 34);
    let x4980: BytePoly_32 = bigint_nondet_rem!(ctx, x4978, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4979, x3, 66), x4980, 66),
            x4978,
            66
        ),
        276359,
        4,
    )?;
    let x4981: BytePoly_1 = bigint_nondet_rem!(ctx, x4942, x4, 1);
    let x4982: BytePoly_32 = bigint_nondet_quot!(ctx, x4942, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4982, x4, 33), x4981, 33),
            x4942,
            33
        ),
        260103,
        4,
    )?;
    let x4983: BytePoly_1 = bigint_sub!(x5, x4981, 1);
    eqz(ctx, &bigint_mul!(x4981, x4983, 2), 8131, 2)?;
    let x4984: BytePoly_32 = bigint_add!(bigint_sub!(x4980, x4966, 32), x3, 32);
    let x4985: BytePoly_32 = bigint_add!(bigint_sub!(x4977, x4964, 32), x3, 32);
    let x4986: BytePoly_32 = bigint_nondet_inv!(ctx, x4985, x3, 32);
    let x4987: BytePoly_64 = bigint_mul!(x4985, x4986, 64);
    let x4988: BytePoly_34 = bigint_nondet_quot!(ctx, x4987, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x4987, bigint_mul!(x4988, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x4989: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x4984, x4986, 64), x3, 32);
    let x4990: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x4989, x4985, 64), x4984, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x4991: BytePoly_34 = bigint_nondet_quot!(ctx, x4990, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x4990, bigint_mul!(x4991, x3, 66), 66),
        276359,
        4,
    )?;
    let x4992: BytePoly_64 = bigint_mul!(x4989, x4989, 64);
    let x4993: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x4992, x4964, 64), x3, 64),
            x4977,
            64
        ),
        x3,
        64
    );
    let x4994: BytePoly_34 = bigint_nondet_quot!(ctx, x4993, x3, 34);
    let x4995: BytePoly_32 = bigint_nondet_rem!(ctx, x4993, x3, 32);
    let x4996: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x4989, x4995, 64),
                        bigint_add!(
                            bigint_sub!(x4966, bigint_mul!(x4989, x4964, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x4997: BytePoly_34 = bigint_nondet_quot!(ctx, x4996, x3, 34);
    let x4998: BytePoly_32 = bigint_nondet_rem!(ctx, x4996, x3, 32);
    let x4999: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x4992, bigint_mul!(x4994, x3, 66), 66),
                        x4964,
                        66
                    ),
                    x4977,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x4995,
        66
    );
    eqz(ctx, &x4999, 276359, 4)?;
    let x5000: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x4997, x3, 66), x4998, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x4989, bigint_sub!(x4964, x4995, 32), 64),
                        x4966,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x5000, 276359, 4)?;
    let x5001: BytePoly_33 = bigint_add!(
        bigint_mul!(x4995, x4981, 33),
        bigint_mul!(x4964, x4983, 33),
        33
    );
    let x5002: BytePoly_33 = bigint_add!(
        bigint_mul!(x4998, x4981, 33),
        bigint_mul!(x4966, x4983, 33),
        33
    );
    let x5003: BytePoly_3 = bigint_nondet_quot!(ctx, x5001, x3, 3);
    let x5004: BytePoly_32 = bigint_nondet_rem!(ctx, x5001, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5003, x3, 35), x5004, 35),
            x5001,
            35
        ),
        260103,
        4,
    )?;
    let x5005: BytePoly_3 = bigint_nondet_quot!(ctx, x5002, x3, 3);
    let x5006: BytePoly_32 = bigint_nondet_rem!(ctx, x5002, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5005, x3, 35), x5006, 35),
            x5002,
            35
        ),
        260103,
        4,
    )?;
    let x5007: BytePoly_64 = bigint_mul!(x4977, x4977, 64);
    let x5008: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x5007, x5007, 64), x5007, 64),
        x2,
        64
    );
    let x5009: BytePoly_64 = bigint_add!(x48, x5008, 64);
    let x5010: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x4980, x4980, 32), x3, 32);
    let x5011: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x5008, x5010, 96), x3, 32);
    let x5012: BytePoly_64 = bigint_mul!(x4980, x5011, 64);
    let x5013: BytePoly_64 = bigint_add!(x5012, x5012, 64);
    let x5014: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x5009, x5013, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5014, x3, 66), x5013, 66),
            x5009,
            66
        ),
        276359,
        4,
    )?;
    let x5015: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x5011, x5011, 64), x3, 64), x3, 64),
            x4977,
            64
        ),
        x4977,
        64
    );
    let x5016: BytePoly_34 = bigint_nondet_quot!(ctx, x5015, x3, 34);
    let x5017: BytePoly_32 = bigint_nondet_rem!(ctx, x5015, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5016, x3, 66), x5017, 66),
            x5015,
            66
        ),
        276359,
        4,
    )?;
    let x5018: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x5011, x5017, 64), 64), x3, 64),
            x4980,
            64
        ),
        bigint_mul!(x5011, x4977, 64),
        64
    );
    let x5019: BytePoly_34 = bigint_nondet_quot!(ctx, x5018, x3, 34);
    let x5020: BytePoly_32 = bigint_nondet_rem!(ctx, x5018, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5019, x3, 66), x5020, 66),
            x5018,
            66
        ),
        276359,
        4,
    )?;
    let x5021: BytePoly_1 = bigint_nondet_rem!(ctx, x4982, x4, 1);
    let x5022: BytePoly_32 = bigint_nondet_quot!(ctx, x4982, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5022, x4, 33), x5021, 33),
            x4982,
            33
        ),
        260103,
        4,
    )?;
    let x5023: BytePoly_1 = bigint_sub!(x5, x5021, 1);
    eqz(ctx, &bigint_mul!(x5021, x5023, 2), 8131, 2)?;
    let x5024: BytePoly_32 = bigint_add!(bigint_sub!(x5020, x5006, 32), x3, 32);
    let x5025: BytePoly_32 = bigint_add!(bigint_sub!(x5017, x5004, 32), x3, 32);
    let x5026: BytePoly_32 = bigint_nondet_inv!(ctx, x5025, x3, 32);
    let x5027: BytePoly_64 = bigint_mul!(x5025, x5026, 64);
    let x5028: BytePoly_34 = bigint_nondet_quot!(ctx, x5027, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x5027, bigint_mul!(x5028, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x5029: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x5024, x5026, 64), x3, 32);
    let x5030: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x5029, x5025, 64), x5024, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x5031: BytePoly_34 = bigint_nondet_quot!(ctx, x5030, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x5030, bigint_mul!(x5031, x3, 66), 66),
        276359,
        4,
    )?;
    let x5032: BytePoly_64 = bigint_mul!(x5029, x5029, 64);
    let x5033: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x5032, x5004, 64), x3, 64),
            x5017,
            64
        ),
        x3,
        64
    );
    let x5034: BytePoly_34 = bigint_nondet_quot!(ctx, x5033, x3, 34);
    let x5035: BytePoly_32 = bigint_nondet_rem!(ctx, x5033, x3, 32);
    let x5036: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x5029, x5035, 64),
                        bigint_add!(
                            bigint_sub!(x5006, bigint_mul!(x5029, x5004, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x5037: BytePoly_34 = bigint_nondet_quot!(ctx, x5036, x3, 34);
    let x5038: BytePoly_32 = bigint_nondet_rem!(ctx, x5036, x3, 32);
    let x5039: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x5032, bigint_mul!(x5034, x3, 66), 66),
                        x5004,
                        66
                    ),
                    x5017,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x5035,
        66
    );
    eqz(ctx, &x5039, 276359, 4)?;
    let x5040: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x5037, x3, 66), x5038, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x5029, bigint_sub!(x5004, x5035, 32), 64),
                        x5006,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x5040, 276359, 4)?;
    let x5041: BytePoly_33 = bigint_add!(
        bigint_mul!(x5035, x5021, 33),
        bigint_mul!(x5004, x5023, 33),
        33
    );
    let x5042: BytePoly_33 = bigint_add!(
        bigint_mul!(x5038, x5021, 33),
        bigint_mul!(x5006, x5023, 33),
        33
    );
    let x5043: BytePoly_3 = bigint_nondet_quot!(ctx, x5041, x3, 3);
    let x5044: BytePoly_32 = bigint_nondet_rem!(ctx, x5041, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5043, x3, 35), x5044, 35),
            x5041,
            35
        ),
        260103,
        4,
    )?;
    let x5045: BytePoly_3 = bigint_nondet_quot!(ctx, x5042, x3, 3);
    let x5046: BytePoly_32 = bigint_nondet_rem!(ctx, x5042, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5045, x3, 35), x5046, 35),
            x5042,
            35
        ),
        260103,
        4,
    )?;
    let x5047: BytePoly_64 = bigint_mul!(x5017, x5017, 64);
    let x5048: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x5047, x5047, 64), x5047, 64),
        x2,
        64
    );
    let x5049: BytePoly_64 = bigint_add!(x48, x5048, 64);
    let x5050: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x5020, x5020, 32), x3, 32);
    let x5051: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x5048, x5050, 96), x3, 32);
    let x5052: BytePoly_64 = bigint_mul!(x5020, x5051, 64);
    let x5053: BytePoly_64 = bigint_add!(x5052, x5052, 64);
    let x5054: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x5049, x5053, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5054, x3, 66), x5053, 66),
            x5049,
            66
        ),
        276359,
        4,
    )?;
    let x5055: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x5051, x5051, 64), x3, 64), x3, 64),
            x5017,
            64
        ),
        x5017,
        64
    );
    let x5056: BytePoly_34 = bigint_nondet_quot!(ctx, x5055, x3, 34);
    let x5057: BytePoly_32 = bigint_nondet_rem!(ctx, x5055, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5056, x3, 66), x5057, 66),
            x5055,
            66
        ),
        276359,
        4,
    )?;
    let x5058: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x5051, x5057, 64), 64), x3, 64),
            x5020,
            64
        ),
        bigint_mul!(x5051, x5017, 64),
        64
    );
    let x5059: BytePoly_34 = bigint_nondet_quot!(ctx, x5058, x3, 34);
    let x5060: BytePoly_32 = bigint_nondet_rem!(ctx, x5058, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5059, x3, 66), x5060, 66),
            x5058,
            66
        ),
        276359,
        4,
    )?;
    let x5061: BytePoly_1 = bigint_nondet_rem!(ctx, x5022, x4, 1);
    let x5062: BytePoly_32 = bigint_nondet_quot!(ctx, x5022, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5062, x4, 33), x5061, 33),
            x5022,
            33
        ),
        260103,
        4,
    )?;
    let x5063: BytePoly_1 = bigint_sub!(x5, x5061, 1);
    eqz(ctx, &bigint_mul!(x5061, x5063, 2), 8131, 2)?;
    let x5064: BytePoly_32 = bigint_add!(bigint_sub!(x5060, x5046, 32), x3, 32);
    let x5065: BytePoly_32 = bigint_add!(bigint_sub!(x5057, x5044, 32), x3, 32);
    let x5066: BytePoly_32 = bigint_nondet_inv!(ctx, x5065, x3, 32);
    let x5067: BytePoly_64 = bigint_mul!(x5065, x5066, 64);
    let x5068: BytePoly_34 = bigint_nondet_quot!(ctx, x5067, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x5067, bigint_mul!(x5068, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x5069: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x5064, x5066, 64), x3, 32);
    let x5070: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x5069, x5065, 64), x5064, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x5071: BytePoly_34 = bigint_nondet_quot!(ctx, x5070, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x5070, bigint_mul!(x5071, x3, 66), 66),
        276359,
        4,
    )?;
    let x5072: BytePoly_64 = bigint_mul!(x5069, x5069, 64);
    let x5073: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x5072, x5044, 64), x3, 64),
            x5057,
            64
        ),
        x3,
        64
    );
    let x5074: BytePoly_34 = bigint_nondet_quot!(ctx, x5073, x3, 34);
    let x5075: BytePoly_32 = bigint_nondet_rem!(ctx, x5073, x3, 32);
    let x5076: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x5069, x5075, 64),
                        bigint_add!(
                            bigint_sub!(x5046, bigint_mul!(x5069, x5044, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x5077: BytePoly_34 = bigint_nondet_quot!(ctx, x5076, x3, 34);
    let x5078: BytePoly_32 = bigint_nondet_rem!(ctx, x5076, x3, 32);
    let x5079: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x5072, bigint_mul!(x5074, x3, 66), 66),
                        x5044,
                        66
                    ),
                    x5057,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x5075,
        66
    );
    eqz(ctx, &x5079, 276359, 4)?;
    let x5080: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x5077, x3, 66), x5078, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x5069, bigint_sub!(x5044, x5075, 32), 64),
                        x5046,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x5080, 276359, 4)?;
    let x5081: BytePoly_33 = bigint_add!(
        bigint_mul!(x5075, x5061, 33),
        bigint_mul!(x5044, x5063, 33),
        33
    );
    let x5082: BytePoly_33 = bigint_add!(
        bigint_mul!(x5078, x5061, 33),
        bigint_mul!(x5046, x5063, 33),
        33
    );
    let x5083: BytePoly_3 = bigint_nondet_quot!(ctx, x5081, x3, 3);
    let x5084: BytePoly_32 = bigint_nondet_rem!(ctx, x5081, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5083, x3, 35), x5084, 35),
            x5081,
            35
        ),
        260103,
        4,
    )?;
    let x5085: BytePoly_3 = bigint_nondet_quot!(ctx, x5082, x3, 3);
    let x5086: BytePoly_32 = bigint_nondet_rem!(ctx, x5082, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5085, x3, 35), x5086, 35),
            x5082,
            35
        ),
        260103,
        4,
    )?;
    let x5087: BytePoly_64 = bigint_mul!(x5057, x5057, 64);
    let x5088: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x5087, x5087, 64), x5087, 64),
        x2,
        64
    );
    let x5089: BytePoly_64 = bigint_add!(x48, x5088, 64);
    let x5090: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x5060, x5060, 32), x3, 32);
    let x5091: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x5088, x5090, 96), x3, 32);
    let x5092: BytePoly_64 = bigint_mul!(x5060, x5091, 64);
    let x5093: BytePoly_64 = bigint_add!(x5092, x5092, 64);
    let x5094: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x5089, x5093, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5094, x3, 66), x5093, 66),
            x5089,
            66
        ),
        276359,
        4,
    )?;
    let x5095: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x5091, x5091, 64), x3, 64), x3, 64),
            x5057,
            64
        ),
        x5057,
        64
    );
    let x5096: BytePoly_34 = bigint_nondet_quot!(ctx, x5095, x3, 34);
    let x5097: BytePoly_32 = bigint_nondet_rem!(ctx, x5095, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5096, x3, 66), x5097, 66),
            x5095,
            66
        ),
        276359,
        4,
    )?;
    let x5098: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x5091, x5097, 64), 64), x3, 64),
            x5060,
            64
        ),
        bigint_mul!(x5091, x5057, 64),
        64
    );
    let x5099: BytePoly_34 = bigint_nondet_quot!(ctx, x5098, x3, 34);
    let x5100: BytePoly_32 = bigint_nondet_rem!(ctx, x5098, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5099, x3, 66), x5100, 66),
            x5098,
            66
        ),
        276359,
        4,
    )?;
    let x5101: BytePoly_1 = bigint_nondet_rem!(ctx, x5062, x4, 1);
    let x5102: BytePoly_32 = bigint_nondet_quot!(ctx, x5062, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5102, x4, 33), x5101, 33),
            x5062,
            33
        ),
        260103,
        4,
    )?;
    let x5103: BytePoly_1 = bigint_sub!(x5, x5101, 1);
    eqz(ctx, &bigint_mul!(x5101, x5103, 2), 8131, 2)?;
    let x5104: BytePoly_32 = bigint_add!(bigint_sub!(x5100, x5086, 32), x3, 32);
    let x5105: BytePoly_32 = bigint_add!(bigint_sub!(x5097, x5084, 32), x3, 32);
    let x5106: BytePoly_32 = bigint_nondet_inv!(ctx, x5105, x3, 32);
    let x5107: BytePoly_64 = bigint_mul!(x5105, x5106, 64);
    let x5108: BytePoly_34 = bigint_nondet_quot!(ctx, x5107, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x5107, bigint_mul!(x5108, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x5109: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x5104, x5106, 64), x3, 32);
    let x5110: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x5109, x5105, 64), x5104, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x5111: BytePoly_34 = bigint_nondet_quot!(ctx, x5110, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x5110, bigint_mul!(x5111, x3, 66), 66),
        276359,
        4,
    )?;
    let x5112: BytePoly_64 = bigint_mul!(x5109, x5109, 64);
    let x5113: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x5112, x5084, 64), x3, 64),
            x5097,
            64
        ),
        x3,
        64
    );
    let x5114: BytePoly_34 = bigint_nondet_quot!(ctx, x5113, x3, 34);
    let x5115: BytePoly_32 = bigint_nondet_rem!(ctx, x5113, x3, 32);
    let x5116: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x5109, x5115, 64),
                        bigint_add!(
                            bigint_sub!(x5086, bigint_mul!(x5109, x5084, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x5117: BytePoly_34 = bigint_nondet_quot!(ctx, x5116, x3, 34);
    let x5118: BytePoly_32 = bigint_nondet_rem!(ctx, x5116, x3, 32);
    let x5119: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x5112, bigint_mul!(x5114, x3, 66), 66),
                        x5084,
                        66
                    ),
                    x5097,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x5115,
        66
    );
    eqz(ctx, &x5119, 276359, 4)?;
    let x5120: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x5117, x3, 66), x5118, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x5109, bigint_sub!(x5084, x5115, 32), 64),
                        x5086,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x5120, 276359, 4)?;
    let x5121: BytePoly_33 = bigint_add!(
        bigint_mul!(x5115, x5101, 33),
        bigint_mul!(x5084, x5103, 33),
        33
    );
    let x5122: BytePoly_33 = bigint_add!(
        bigint_mul!(x5118, x5101, 33),
        bigint_mul!(x5086, x5103, 33),
        33
    );
    let x5123: BytePoly_3 = bigint_nondet_quot!(ctx, x5121, x3, 3);
    let x5124: BytePoly_32 = bigint_nondet_rem!(ctx, x5121, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5123, x3, 35), x5124, 35),
            x5121,
            35
        ),
        260103,
        4,
    )?;
    let x5125: BytePoly_3 = bigint_nondet_quot!(ctx, x5122, x3, 3);
    let x5126: BytePoly_32 = bigint_nondet_rem!(ctx, x5122, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5125, x3, 35), x5126, 35),
            x5122,
            35
        ),
        260103,
        4,
    )?;
    let x5127: BytePoly_64 = bigint_mul!(x5097, x5097, 64);
    let x5128: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x5127, x5127, 64), x5127, 64),
        x2,
        64
    );
    let x5129: BytePoly_64 = bigint_add!(x48, x5128, 64);
    let x5130: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x5100, x5100, 32), x3, 32);
    let x5131: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x5128, x5130, 96), x3, 32);
    let x5132: BytePoly_64 = bigint_mul!(x5100, x5131, 64);
    let x5133: BytePoly_64 = bigint_add!(x5132, x5132, 64);
    let x5134: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x5129, x5133, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5134, x3, 66), x5133, 66),
            x5129,
            66
        ),
        276359,
        4,
    )?;
    let x5135: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x5131, x5131, 64), x3, 64), x3, 64),
            x5097,
            64
        ),
        x5097,
        64
    );
    let x5136: BytePoly_34 = bigint_nondet_quot!(ctx, x5135, x3, 34);
    let x5137: BytePoly_32 = bigint_nondet_rem!(ctx, x5135, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5136, x3, 66), x5137, 66),
            x5135,
            66
        ),
        276359,
        4,
    )?;
    let x5138: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x5131, x5137, 64), 64), x3, 64),
            x5100,
            64
        ),
        bigint_mul!(x5131, x5097, 64),
        64
    );
    let x5139: BytePoly_34 = bigint_nondet_quot!(ctx, x5138, x3, 34);
    let x5140: BytePoly_32 = bigint_nondet_rem!(ctx, x5138, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5139, x3, 66), x5140, 66),
            x5138,
            66
        ),
        276359,
        4,
    )?;
    let x5141: BytePoly_1 = bigint_nondet_rem!(ctx, x5102, x4, 1);
    let x5142: BytePoly_32 = bigint_nondet_quot!(ctx, x5102, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5142, x4, 33), x5141, 33),
            x5102,
            33
        ),
        260103,
        4,
    )?;
    let x5143: BytePoly_1 = bigint_sub!(x5, x5141, 1);
    eqz(ctx, &bigint_mul!(x5141, x5143, 2), 8131, 2)?;
    let x5144: BytePoly_32 = bigint_add!(bigint_sub!(x5140, x5126, 32), x3, 32);
    let x5145: BytePoly_32 = bigint_add!(bigint_sub!(x5137, x5124, 32), x3, 32);
    let x5146: BytePoly_32 = bigint_nondet_inv!(ctx, x5145, x3, 32);
    let x5147: BytePoly_64 = bigint_mul!(x5145, x5146, 64);
    let x5148: BytePoly_34 = bigint_nondet_quot!(ctx, x5147, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x5147, bigint_mul!(x5148, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x5149: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x5144, x5146, 64), x3, 32);
    let x5150: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x5149, x5145, 64), x5144, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x5151: BytePoly_34 = bigint_nondet_quot!(ctx, x5150, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x5150, bigint_mul!(x5151, x3, 66), 66),
        276359,
        4,
    )?;
    let x5152: BytePoly_64 = bigint_mul!(x5149, x5149, 64);
    let x5153: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x5152, x5124, 64), x3, 64),
            x5137,
            64
        ),
        x3,
        64
    );
    let x5154: BytePoly_34 = bigint_nondet_quot!(ctx, x5153, x3, 34);
    let x5155: BytePoly_32 = bigint_nondet_rem!(ctx, x5153, x3, 32);
    let x5156: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x5149, x5155, 64),
                        bigint_add!(
                            bigint_sub!(x5126, bigint_mul!(x5149, x5124, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x5157: BytePoly_34 = bigint_nondet_quot!(ctx, x5156, x3, 34);
    let x5158: BytePoly_32 = bigint_nondet_rem!(ctx, x5156, x3, 32);
    let x5159: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x5152, bigint_mul!(x5154, x3, 66), 66),
                        x5124,
                        66
                    ),
                    x5137,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x5155,
        66
    );
    eqz(ctx, &x5159, 276359, 4)?;
    let x5160: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x5157, x3, 66), x5158, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x5149, bigint_sub!(x5124, x5155, 32), 64),
                        x5126,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x5160, 276359, 4)?;
    let x5161: BytePoly_33 = bigint_add!(
        bigint_mul!(x5155, x5141, 33),
        bigint_mul!(x5124, x5143, 33),
        33
    );
    let x5162: BytePoly_33 = bigint_add!(
        bigint_mul!(x5158, x5141, 33),
        bigint_mul!(x5126, x5143, 33),
        33
    );
    let x5163: BytePoly_3 = bigint_nondet_quot!(ctx, x5161, x3, 3);
    let x5164: BytePoly_32 = bigint_nondet_rem!(ctx, x5161, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5163, x3, 35), x5164, 35),
            x5161,
            35
        ),
        260103,
        4,
    )?;
    let x5165: BytePoly_3 = bigint_nondet_quot!(ctx, x5162, x3, 3);
    let x5166: BytePoly_32 = bigint_nondet_rem!(ctx, x5162, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5165, x3, 35), x5166, 35),
            x5162,
            35
        ),
        260103,
        4,
    )?;
    let x5167: BytePoly_64 = bigint_mul!(x5137, x5137, 64);
    let x5168: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x5167, x5167, 64), x5167, 64),
        x2,
        64
    );
    let x5169: BytePoly_64 = bigint_add!(x48, x5168, 64);
    let x5170: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x5140, x5140, 32), x3, 32);
    let x5171: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x5168, x5170, 96), x3, 32);
    let x5172: BytePoly_64 = bigint_mul!(x5140, x5171, 64);
    let x5173: BytePoly_64 = bigint_add!(x5172, x5172, 64);
    let x5174: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x5169, x5173, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5174, x3, 66), x5173, 66),
            x5169,
            66
        ),
        276359,
        4,
    )?;
    let x5175: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x5171, x5171, 64), x3, 64), x3, 64),
            x5137,
            64
        ),
        x5137,
        64
    );
    let x5176: BytePoly_34 = bigint_nondet_quot!(ctx, x5175, x3, 34);
    let x5177: BytePoly_32 = bigint_nondet_rem!(ctx, x5175, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5176, x3, 66), x5177, 66),
            x5175,
            66
        ),
        276359,
        4,
    )?;
    let x5178: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x5171, x5177, 64), 64), x3, 64),
            x5140,
            64
        ),
        bigint_mul!(x5171, x5137, 64),
        64
    );
    let x5179: BytePoly_34 = bigint_nondet_quot!(ctx, x5178, x3, 34);
    let x5180: BytePoly_32 = bigint_nondet_rem!(ctx, x5178, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5179, x3, 66), x5180, 66),
            x5178,
            66
        ),
        276359,
        4,
    )?;
    let x5181: BytePoly_1 = bigint_nondet_rem!(ctx, x5142, x4, 1);
    let x5182: BytePoly_32 = bigint_nondet_quot!(ctx, x5142, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5182, x4, 33), x5181, 33),
            x5142,
            33
        ),
        260103,
        4,
    )?;
    let x5183: BytePoly_1 = bigint_sub!(x5, x5181, 1);
    eqz(ctx, &bigint_mul!(x5181, x5183, 2), 8131, 2)?;
    let x5184: BytePoly_32 = bigint_add!(bigint_sub!(x5180, x5166, 32), x3, 32);
    let x5185: BytePoly_32 = bigint_add!(bigint_sub!(x5177, x5164, 32), x3, 32);
    let x5186: BytePoly_32 = bigint_nondet_inv!(ctx, x5185, x3, 32);
    let x5187: BytePoly_64 = bigint_mul!(x5185, x5186, 64);
    let x5188: BytePoly_34 = bigint_nondet_quot!(ctx, x5187, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x5187, bigint_mul!(x5188, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x5189: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x5184, x5186, 64), x3, 32);
    let x5190: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x5189, x5185, 64), x5184, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x5191: BytePoly_34 = bigint_nondet_quot!(ctx, x5190, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x5190, bigint_mul!(x5191, x3, 66), 66),
        276359,
        4,
    )?;
    let x5192: BytePoly_64 = bigint_mul!(x5189, x5189, 64);
    let x5193: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x5192, x5164, 64), x3, 64),
            x5177,
            64
        ),
        x3,
        64
    );
    let x5194: BytePoly_34 = bigint_nondet_quot!(ctx, x5193, x3, 34);
    let x5195: BytePoly_32 = bigint_nondet_rem!(ctx, x5193, x3, 32);
    let x5196: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x5189, x5195, 64),
                        bigint_add!(
                            bigint_sub!(x5166, bigint_mul!(x5189, x5164, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x5197: BytePoly_34 = bigint_nondet_quot!(ctx, x5196, x3, 34);
    let x5198: BytePoly_32 = bigint_nondet_rem!(ctx, x5196, x3, 32);
    let x5199: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x5192, bigint_mul!(x5194, x3, 66), 66),
                        x5164,
                        66
                    ),
                    x5177,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x5195,
        66
    );
    eqz(ctx, &x5199, 276359, 4)?;
    let x5200: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x5197, x3, 66), x5198, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x5189, bigint_sub!(x5164, x5195, 32), 64),
                        x5166,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x5200, 276359, 4)?;
    let x5201: BytePoly_33 = bigint_add!(
        bigint_mul!(x5195, x5181, 33),
        bigint_mul!(x5164, x5183, 33),
        33
    );
    let x5202: BytePoly_33 = bigint_add!(
        bigint_mul!(x5198, x5181, 33),
        bigint_mul!(x5166, x5183, 33),
        33
    );
    let x5203: BytePoly_3 = bigint_nondet_quot!(ctx, x5201, x3, 3);
    let x5204: BytePoly_32 = bigint_nondet_rem!(ctx, x5201, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5203, x3, 35), x5204, 35),
            x5201,
            35
        ),
        260103,
        4,
    )?;
    let x5205: BytePoly_3 = bigint_nondet_quot!(ctx, x5202, x3, 3);
    let x5206: BytePoly_32 = bigint_nondet_rem!(ctx, x5202, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5205, x3, 35), x5206, 35),
            x5202,
            35
        ),
        260103,
        4,
    )?;
    let x5207: BytePoly_64 = bigint_mul!(x5177, x5177, 64);
    let x5208: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x5207, x5207, 64), x5207, 64),
        x2,
        64
    );
    let x5209: BytePoly_64 = bigint_add!(x48, x5208, 64);
    let x5210: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x5180, x5180, 32), x3, 32);
    let x5211: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x5208, x5210, 96), x3, 32);
    let x5212: BytePoly_64 = bigint_mul!(x5180, x5211, 64);
    let x5213: BytePoly_64 = bigint_add!(x5212, x5212, 64);
    let x5214: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x5209, x5213, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5214, x3, 66), x5213, 66),
            x5209,
            66
        ),
        276359,
        4,
    )?;
    let x5215: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x5211, x5211, 64), x3, 64), x3, 64),
            x5177,
            64
        ),
        x5177,
        64
    );
    let x5216: BytePoly_34 = bigint_nondet_quot!(ctx, x5215, x3, 34);
    let x5217: BytePoly_32 = bigint_nondet_rem!(ctx, x5215, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5216, x3, 66), x5217, 66),
            x5215,
            66
        ),
        276359,
        4,
    )?;
    let x5218: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x5211, x5217, 64), 64), x3, 64),
            x5180,
            64
        ),
        bigint_mul!(x5211, x5177, 64),
        64
    );
    let x5219: BytePoly_34 = bigint_nondet_quot!(ctx, x5218, x3, 34);
    let x5220: BytePoly_32 = bigint_nondet_rem!(ctx, x5218, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5219, x3, 66), x5220, 66),
            x5218,
            66
        ),
        276359,
        4,
    )?;
    let x5221: BytePoly_1 = bigint_nondet_rem!(ctx, x5182, x4, 1);
    let x5222: BytePoly_32 = bigint_nondet_quot!(ctx, x5182, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5222, x4, 33), x5221, 33),
            x5182,
            33
        ),
        260103,
        4,
    )?;
    let x5223: BytePoly_1 = bigint_sub!(x5, x5221, 1);
    eqz(ctx, &bigint_mul!(x5221, x5223, 2), 8131, 2)?;
    let x5224: BytePoly_32 = bigint_add!(bigint_sub!(x5220, x5206, 32), x3, 32);
    let x5225: BytePoly_32 = bigint_add!(bigint_sub!(x5217, x5204, 32), x3, 32);
    let x5226: BytePoly_32 = bigint_nondet_inv!(ctx, x5225, x3, 32);
    let x5227: BytePoly_64 = bigint_mul!(x5225, x5226, 64);
    let x5228: BytePoly_34 = bigint_nondet_quot!(ctx, x5227, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x5227, bigint_mul!(x5228, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x5229: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x5224, x5226, 64), x3, 32);
    let x5230: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x5229, x5225, 64), x5224, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x5231: BytePoly_34 = bigint_nondet_quot!(ctx, x5230, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x5230, bigint_mul!(x5231, x3, 66), 66),
        276359,
        4,
    )?;
    let x5232: BytePoly_64 = bigint_mul!(x5229, x5229, 64);
    let x5233: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x5232, x5204, 64), x3, 64),
            x5217,
            64
        ),
        x3,
        64
    );
    let x5234: BytePoly_34 = bigint_nondet_quot!(ctx, x5233, x3, 34);
    let x5235: BytePoly_32 = bigint_nondet_rem!(ctx, x5233, x3, 32);
    let x5236: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x5229, x5235, 64),
                        bigint_add!(
                            bigint_sub!(x5206, bigint_mul!(x5229, x5204, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x5237: BytePoly_34 = bigint_nondet_quot!(ctx, x5236, x3, 34);
    let x5238: BytePoly_32 = bigint_nondet_rem!(ctx, x5236, x3, 32);
    let x5239: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x5232, bigint_mul!(x5234, x3, 66), 66),
                        x5204,
                        66
                    ),
                    x5217,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x5235,
        66
    );
    eqz(ctx, &x5239, 276359, 4)?;
    let x5240: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x5237, x3, 66), x5238, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x5229, bigint_sub!(x5204, x5235, 32), 64),
                        x5206,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x5240, 276359, 4)?;
    let x5241: BytePoly_33 = bigint_add!(
        bigint_mul!(x5235, x5221, 33),
        bigint_mul!(x5204, x5223, 33),
        33
    );
    let x5242: BytePoly_33 = bigint_add!(
        bigint_mul!(x5238, x5221, 33),
        bigint_mul!(x5206, x5223, 33),
        33
    );
    let x5243: BytePoly_3 = bigint_nondet_quot!(ctx, x5241, x3, 3);
    let x5244: BytePoly_32 = bigint_nondet_rem!(ctx, x5241, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5243, x3, 35), x5244, 35),
            x5241,
            35
        ),
        260103,
        4,
    )?;
    let x5245: BytePoly_3 = bigint_nondet_quot!(ctx, x5242, x3, 3);
    let x5246: BytePoly_32 = bigint_nondet_rem!(ctx, x5242, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5245, x3, 35), x5246, 35),
            x5242,
            35
        ),
        260103,
        4,
    )?;
    let x5247: BytePoly_64 = bigint_mul!(x5217, x5217, 64);
    let x5248: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x5247, x5247, 64), x5247, 64),
        x2,
        64
    );
    let x5249: BytePoly_64 = bigint_add!(x48, x5248, 64);
    let x5250: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x5220, x5220, 32), x3, 32);
    let x5251: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x5248, x5250, 96), x3, 32);
    let x5252: BytePoly_64 = bigint_mul!(x5220, x5251, 64);
    let x5253: BytePoly_64 = bigint_add!(x5252, x5252, 64);
    let x5254: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x5249, x5253, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5254, x3, 66), x5253, 66),
            x5249,
            66
        ),
        276359,
        4,
    )?;
    let x5255: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x5251, x5251, 64), x3, 64), x3, 64),
            x5217,
            64
        ),
        x5217,
        64
    );
    let x5256: BytePoly_34 = bigint_nondet_quot!(ctx, x5255, x3, 34);
    let x5257: BytePoly_32 = bigint_nondet_rem!(ctx, x5255, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5256, x3, 66), x5257, 66),
            x5255,
            66
        ),
        276359,
        4,
    )?;
    let x5258: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x5251, x5257, 64), 64), x3, 64),
            x5220,
            64
        ),
        bigint_mul!(x5251, x5217, 64),
        64
    );
    let x5259: BytePoly_34 = bigint_nondet_quot!(ctx, x5258, x3, 34);
    let x5260: BytePoly_32 = bigint_nondet_rem!(ctx, x5258, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5259, x3, 66), x5260, 66),
            x5258,
            66
        ),
        276359,
        4,
    )?;
    let x5261: BytePoly_1 = bigint_nondet_rem!(ctx, x5222, x4, 1);
    let x5262: BytePoly_32 = bigint_nondet_quot!(ctx, x5222, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5262, x4, 33), x5261, 33),
            x5222,
            33
        ),
        260103,
        4,
    )?;
    let x5263: BytePoly_1 = bigint_sub!(x5, x5261, 1);
    eqz(ctx, &bigint_mul!(x5261, x5263, 2), 8131, 2)?;
    let x5264: BytePoly_32 = bigint_add!(bigint_sub!(x5260, x5246, 32), x3, 32);
    let x5265: BytePoly_32 = bigint_add!(bigint_sub!(x5257, x5244, 32), x3, 32);
    let x5266: BytePoly_32 = bigint_nondet_inv!(ctx, x5265, x3, 32);
    let x5267: BytePoly_64 = bigint_mul!(x5265, x5266, 64);
    let x5268: BytePoly_34 = bigint_nondet_quot!(ctx, x5267, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x5267, bigint_mul!(x5268, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x5269: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x5264, x5266, 64), x3, 32);
    let x5270: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x5269, x5265, 64), x5264, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x5271: BytePoly_34 = bigint_nondet_quot!(ctx, x5270, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x5270, bigint_mul!(x5271, x3, 66), 66),
        276359,
        4,
    )?;
    let x5272: BytePoly_64 = bigint_mul!(x5269, x5269, 64);
    let x5273: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x5272, x5244, 64), x3, 64),
            x5257,
            64
        ),
        x3,
        64
    );
    let x5274: BytePoly_34 = bigint_nondet_quot!(ctx, x5273, x3, 34);
    let x5275: BytePoly_32 = bigint_nondet_rem!(ctx, x5273, x3, 32);
    let x5276: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x5269, x5275, 64),
                        bigint_add!(
                            bigint_sub!(x5246, bigint_mul!(x5269, x5244, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x5277: BytePoly_34 = bigint_nondet_quot!(ctx, x5276, x3, 34);
    let x5278: BytePoly_32 = bigint_nondet_rem!(ctx, x5276, x3, 32);
    let x5279: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x5272, bigint_mul!(x5274, x3, 66), 66),
                        x5244,
                        66
                    ),
                    x5257,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x5275,
        66
    );
    eqz(ctx, &x5279, 276359, 4)?;
    let x5280: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x5277, x3, 66), x5278, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x5269, bigint_sub!(x5244, x5275, 32), 64),
                        x5246,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x5280, 276359, 4)?;
    let x5281: BytePoly_33 = bigint_add!(
        bigint_mul!(x5275, x5261, 33),
        bigint_mul!(x5244, x5263, 33),
        33
    );
    let x5282: BytePoly_33 = bigint_add!(
        bigint_mul!(x5278, x5261, 33),
        bigint_mul!(x5246, x5263, 33),
        33
    );
    let x5283: BytePoly_3 = bigint_nondet_quot!(ctx, x5281, x3, 3);
    let x5284: BytePoly_32 = bigint_nondet_rem!(ctx, x5281, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5283, x3, 35), x5284, 35),
            x5281,
            35
        ),
        260103,
        4,
    )?;
    let x5285: BytePoly_3 = bigint_nondet_quot!(ctx, x5282, x3, 3);
    let x5286: BytePoly_32 = bigint_nondet_rem!(ctx, x5282, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5285, x3, 35), x5286, 35),
            x5282,
            35
        ),
        260103,
        4,
    )?;
    let x5287: BytePoly_64 = bigint_mul!(x5257, x5257, 64);
    let x5288: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x5287, x5287, 64), x5287, 64),
        x2,
        64
    );
    let x5289: BytePoly_64 = bigint_add!(x48, x5288, 64);
    let x5290: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x5260, x5260, 32), x3, 32);
    let x5291: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x5288, x5290, 96), x3, 32);
    let x5292: BytePoly_64 = bigint_mul!(x5260, x5291, 64);
    let x5293: BytePoly_64 = bigint_add!(x5292, x5292, 64);
    let x5294: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x5289, x5293, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5294, x3, 66), x5293, 66),
            x5289,
            66
        ),
        276359,
        4,
    )?;
    let x5295: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x5291, x5291, 64), x3, 64), x3, 64),
            x5257,
            64
        ),
        x5257,
        64
    );
    let x5296: BytePoly_34 = bigint_nondet_quot!(ctx, x5295, x3, 34);
    let x5297: BytePoly_32 = bigint_nondet_rem!(ctx, x5295, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5296, x3, 66), x5297, 66),
            x5295,
            66
        ),
        276359,
        4,
    )?;
    let x5298: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x5291, x5297, 64), 64), x3, 64),
            x5260,
            64
        ),
        bigint_mul!(x5291, x5257, 64),
        64
    );
    let x5299: BytePoly_34 = bigint_nondet_quot!(ctx, x5298, x3, 34);
    let x5300: BytePoly_32 = bigint_nondet_rem!(ctx, x5298, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5299, x3, 66), x5300, 66),
            x5298,
            66
        ),
        276359,
        4,
    )?;
    let x5301: BytePoly_1 = bigint_nondet_rem!(ctx, x5262, x4, 1);
    let x5302: BytePoly_32 = bigint_nondet_quot!(ctx, x5262, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5302, x4, 33), x5301, 33),
            x5262,
            33
        ),
        260103,
        4,
    )?;
    let x5303: BytePoly_1 = bigint_sub!(x5, x5301, 1);
    eqz(ctx, &bigint_mul!(x5301, x5303, 2), 8131, 2)?;
    let x5304: BytePoly_32 = bigint_add!(bigint_sub!(x5300, x5286, 32), x3, 32);
    let x5305: BytePoly_32 = bigint_add!(bigint_sub!(x5297, x5284, 32), x3, 32);
    let x5306: BytePoly_32 = bigint_nondet_inv!(ctx, x5305, x3, 32);
    let x5307: BytePoly_64 = bigint_mul!(x5305, x5306, 64);
    let x5308: BytePoly_34 = bigint_nondet_quot!(ctx, x5307, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x5307, bigint_mul!(x5308, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x5309: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x5304, x5306, 64), x3, 32);
    let x5310: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x5309, x5305, 64), x5304, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x5311: BytePoly_34 = bigint_nondet_quot!(ctx, x5310, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x5310, bigint_mul!(x5311, x3, 66), 66),
        276359,
        4,
    )?;
    let x5312: BytePoly_64 = bigint_mul!(x5309, x5309, 64);
    let x5313: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x5312, x5284, 64), x3, 64),
            x5297,
            64
        ),
        x3,
        64
    );
    let x5314: BytePoly_34 = bigint_nondet_quot!(ctx, x5313, x3, 34);
    let x5315: BytePoly_32 = bigint_nondet_rem!(ctx, x5313, x3, 32);
    let x5316: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x5309, x5315, 64),
                        bigint_add!(
                            bigint_sub!(x5286, bigint_mul!(x5309, x5284, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x5317: BytePoly_34 = bigint_nondet_quot!(ctx, x5316, x3, 34);
    let x5318: BytePoly_32 = bigint_nondet_rem!(ctx, x5316, x3, 32);
    let x5319: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x5312, bigint_mul!(x5314, x3, 66), 66),
                        x5284,
                        66
                    ),
                    x5297,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x5315,
        66
    );
    eqz(ctx, &x5319, 276359, 4)?;
    let x5320: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x5317, x3, 66), x5318, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x5309, bigint_sub!(x5284, x5315, 32), 64),
                        x5286,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x5320, 276359, 4)?;
    let x5321: BytePoly_33 = bigint_add!(
        bigint_mul!(x5315, x5301, 33),
        bigint_mul!(x5284, x5303, 33),
        33
    );
    let x5322: BytePoly_33 = bigint_add!(
        bigint_mul!(x5318, x5301, 33),
        bigint_mul!(x5286, x5303, 33),
        33
    );
    let x5323: BytePoly_3 = bigint_nondet_quot!(ctx, x5321, x3, 3);
    let x5324: BytePoly_32 = bigint_nondet_rem!(ctx, x5321, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5323, x3, 35), x5324, 35),
            x5321,
            35
        ),
        260103,
        4,
    )?;
    let x5325: BytePoly_3 = bigint_nondet_quot!(ctx, x5322, x3, 3);
    let x5326: BytePoly_32 = bigint_nondet_rem!(ctx, x5322, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5325, x3, 35), x5326, 35),
            x5322,
            35
        ),
        260103,
        4,
    )?;
    let x5327: BytePoly_64 = bigint_mul!(x5297, x5297, 64);
    let x5328: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x5327, x5327, 64), x5327, 64),
        x2,
        64
    );
    let x5329: BytePoly_64 = bigint_add!(x48, x5328, 64);
    let x5330: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x5300, x5300, 32), x3, 32);
    let x5331: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x5328, x5330, 96), x3, 32);
    let x5332: BytePoly_64 = bigint_mul!(x5300, x5331, 64);
    let x5333: BytePoly_64 = bigint_add!(x5332, x5332, 64);
    let x5334: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x5329, x5333, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5334, x3, 66), x5333, 66),
            x5329,
            66
        ),
        276359,
        4,
    )?;
    let x5335: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x5331, x5331, 64), x3, 64), x3, 64),
            x5297,
            64
        ),
        x5297,
        64
    );
    let x5336: BytePoly_34 = bigint_nondet_quot!(ctx, x5335, x3, 34);
    let x5337: BytePoly_32 = bigint_nondet_rem!(ctx, x5335, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5336, x3, 66), x5337, 66),
            x5335,
            66
        ),
        276359,
        4,
    )?;
    let x5338: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x5331, x5337, 64), 64), x3, 64),
            x5300,
            64
        ),
        bigint_mul!(x5331, x5297, 64),
        64
    );
    let x5339: BytePoly_34 = bigint_nondet_quot!(ctx, x5338, x3, 34);
    let x5340: BytePoly_32 = bigint_nondet_rem!(ctx, x5338, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5339, x3, 66), x5340, 66),
            x5338,
            66
        ),
        276359,
        4,
    )?;
    let x5341: BytePoly_1 = bigint_nondet_rem!(ctx, x5302, x4, 1);
    let x5342: BytePoly_32 = bigint_nondet_quot!(ctx, x5302, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5342, x4, 33), x5341, 33),
            x5302,
            33
        ),
        260103,
        4,
    )?;
    let x5343: BytePoly_1 = bigint_sub!(x5, x5341, 1);
    eqz(ctx, &bigint_mul!(x5341, x5343, 2), 8131, 2)?;
    let x5344: BytePoly_32 = bigint_add!(bigint_sub!(x5340, x5326, 32), x3, 32);
    let x5345: BytePoly_32 = bigint_add!(bigint_sub!(x5337, x5324, 32), x3, 32);
    let x5346: BytePoly_32 = bigint_nondet_inv!(ctx, x5345, x3, 32);
    let x5347: BytePoly_64 = bigint_mul!(x5345, x5346, 64);
    let x5348: BytePoly_34 = bigint_nondet_quot!(ctx, x5347, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x5347, bigint_mul!(x5348, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x5349: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x5344, x5346, 64), x3, 32);
    let x5350: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x5349, x5345, 64), x5344, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x5351: BytePoly_34 = bigint_nondet_quot!(ctx, x5350, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x5350, bigint_mul!(x5351, x3, 66), 66),
        276359,
        4,
    )?;
    let x5352: BytePoly_64 = bigint_mul!(x5349, x5349, 64);
    let x5353: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x5352, x5324, 64), x3, 64),
            x5337,
            64
        ),
        x3,
        64
    );
    let x5354: BytePoly_34 = bigint_nondet_quot!(ctx, x5353, x3, 34);
    let x5355: BytePoly_32 = bigint_nondet_rem!(ctx, x5353, x3, 32);
    let x5356: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x5349, x5355, 64),
                        bigint_add!(
                            bigint_sub!(x5326, bigint_mul!(x5349, x5324, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x5357: BytePoly_34 = bigint_nondet_quot!(ctx, x5356, x3, 34);
    let x5358: BytePoly_32 = bigint_nondet_rem!(ctx, x5356, x3, 32);
    let x5359: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x5352, bigint_mul!(x5354, x3, 66), 66),
                        x5324,
                        66
                    ),
                    x5337,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x5355,
        66
    );
    eqz(ctx, &x5359, 276359, 4)?;
    let x5360: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x5357, x3, 66), x5358, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x5349, bigint_sub!(x5324, x5355, 32), 64),
                        x5326,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x5360, 276359, 4)?;
    let x5361: BytePoly_33 = bigint_add!(
        bigint_mul!(x5355, x5341, 33),
        bigint_mul!(x5324, x5343, 33),
        33
    );
    let x5362: BytePoly_33 = bigint_add!(
        bigint_mul!(x5358, x5341, 33),
        bigint_mul!(x5326, x5343, 33),
        33
    );
    let x5363: BytePoly_3 = bigint_nondet_quot!(ctx, x5361, x3, 3);
    let x5364: BytePoly_32 = bigint_nondet_rem!(ctx, x5361, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5363, x3, 35), x5364, 35),
            x5361,
            35
        ),
        260103,
        4,
    )?;
    let x5365: BytePoly_3 = bigint_nondet_quot!(ctx, x5362, x3, 3);
    let x5366: BytePoly_32 = bigint_nondet_rem!(ctx, x5362, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5365, x3, 35), x5366, 35),
            x5362,
            35
        ),
        260103,
        4,
    )?;
    let x5367: BytePoly_64 = bigint_mul!(x5337, x5337, 64);
    let x5368: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x5367, x5367, 64), x5367, 64),
        x2,
        64
    );
    let x5369: BytePoly_64 = bigint_add!(x48, x5368, 64);
    let x5370: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x5340, x5340, 32), x3, 32);
    let x5371: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x5368, x5370, 96), x3, 32);
    let x5372: BytePoly_64 = bigint_mul!(x5340, x5371, 64);
    let x5373: BytePoly_64 = bigint_add!(x5372, x5372, 64);
    let x5374: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x5369, x5373, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5374, x3, 66), x5373, 66),
            x5369,
            66
        ),
        276359,
        4,
    )?;
    let x5375: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x5371, x5371, 64), x3, 64), x3, 64),
            x5337,
            64
        ),
        x5337,
        64
    );
    let x5376: BytePoly_34 = bigint_nondet_quot!(ctx, x5375, x3, 34);
    let x5377: BytePoly_32 = bigint_nondet_rem!(ctx, x5375, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5376, x3, 66), x5377, 66),
            x5375,
            66
        ),
        276359,
        4,
    )?;
    let x5378: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x5371, x5377, 64), 64), x3, 64),
            x5340,
            64
        ),
        bigint_mul!(x5371, x5337, 64),
        64
    );
    let x5379: BytePoly_34 = bigint_nondet_quot!(ctx, x5378, x3, 34);
    let x5380: BytePoly_32 = bigint_nondet_rem!(ctx, x5378, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5379, x3, 66), x5380, 66),
            x5378,
            66
        ),
        276359,
        4,
    )?;
    let x5381: BytePoly_1 = bigint_nondet_rem!(ctx, x5342, x4, 1);
    let x5382: BytePoly_32 = bigint_nondet_quot!(ctx, x5342, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5382, x4, 33), x5381, 33),
            x5342,
            33
        ),
        260103,
        4,
    )?;
    let x5383: BytePoly_1 = bigint_sub!(x5, x5381, 1);
    eqz(ctx, &bigint_mul!(x5381, x5383, 2), 8131, 2)?;
    let x5384: BytePoly_32 = bigint_add!(bigint_sub!(x5380, x5366, 32), x3, 32);
    let x5385: BytePoly_32 = bigint_add!(bigint_sub!(x5377, x5364, 32), x3, 32);
    let x5386: BytePoly_32 = bigint_nondet_inv!(ctx, x5385, x3, 32);
    let x5387: BytePoly_64 = bigint_mul!(x5385, x5386, 64);
    let x5388: BytePoly_34 = bigint_nondet_quot!(ctx, x5387, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x5387, bigint_mul!(x5388, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x5389: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x5384, x5386, 64), x3, 32);
    let x5390: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x5389, x5385, 64), x5384, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x5391: BytePoly_34 = bigint_nondet_quot!(ctx, x5390, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x5390, bigint_mul!(x5391, x3, 66), 66),
        276359,
        4,
    )?;
    let x5392: BytePoly_64 = bigint_mul!(x5389, x5389, 64);
    let x5393: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x5392, x5364, 64), x3, 64),
            x5377,
            64
        ),
        x3,
        64
    );
    let x5394: BytePoly_34 = bigint_nondet_quot!(ctx, x5393, x3, 34);
    let x5395: BytePoly_32 = bigint_nondet_rem!(ctx, x5393, x3, 32);
    let x5396: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x5389, x5395, 64),
                        bigint_add!(
                            bigint_sub!(x5366, bigint_mul!(x5389, x5364, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x5397: BytePoly_34 = bigint_nondet_quot!(ctx, x5396, x3, 34);
    let x5398: BytePoly_32 = bigint_nondet_rem!(ctx, x5396, x3, 32);
    let x5399: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x5392, bigint_mul!(x5394, x3, 66), 66),
                        x5364,
                        66
                    ),
                    x5377,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x5395,
        66
    );
    eqz(ctx, &x5399, 276359, 4)?;
    let x5400: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x5397, x3, 66), x5398, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x5389, bigint_sub!(x5364, x5395, 32), 64),
                        x5366,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x5400, 276359, 4)?;
    let x5401: BytePoly_33 = bigint_add!(
        bigint_mul!(x5395, x5381, 33),
        bigint_mul!(x5364, x5383, 33),
        33
    );
    let x5402: BytePoly_33 = bigint_add!(
        bigint_mul!(x5398, x5381, 33),
        bigint_mul!(x5366, x5383, 33),
        33
    );
    let x5403: BytePoly_3 = bigint_nondet_quot!(ctx, x5401, x3, 3);
    let x5404: BytePoly_32 = bigint_nondet_rem!(ctx, x5401, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5403, x3, 35), x5404, 35),
            x5401,
            35
        ),
        260103,
        4,
    )?;
    let x5405: BytePoly_3 = bigint_nondet_quot!(ctx, x5402, x3, 3);
    let x5406: BytePoly_32 = bigint_nondet_rem!(ctx, x5402, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5405, x3, 35), x5406, 35),
            x5402,
            35
        ),
        260103,
        4,
    )?;
    let x5407: BytePoly_64 = bigint_mul!(x5377, x5377, 64);
    let x5408: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x5407, x5407, 64), x5407, 64),
        x2,
        64
    );
    let x5409: BytePoly_64 = bigint_add!(x48, x5408, 64);
    let x5410: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x5380, x5380, 32), x3, 32);
    let x5411: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x5408, x5410, 96), x3, 32);
    let x5412: BytePoly_64 = bigint_mul!(x5380, x5411, 64);
    let x5413: BytePoly_64 = bigint_add!(x5412, x5412, 64);
    let x5414: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x5409, x5413, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5414, x3, 66), x5413, 66),
            x5409,
            66
        ),
        276359,
        4,
    )?;
    let x5415: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x5411, x5411, 64), x3, 64), x3, 64),
            x5377,
            64
        ),
        x5377,
        64
    );
    let x5416: BytePoly_34 = bigint_nondet_quot!(ctx, x5415, x3, 34);
    let x5417: BytePoly_32 = bigint_nondet_rem!(ctx, x5415, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5416, x3, 66), x5417, 66),
            x5415,
            66
        ),
        276359,
        4,
    )?;
    let x5418: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x5411, x5417, 64), 64), x3, 64),
            x5380,
            64
        ),
        bigint_mul!(x5411, x5377, 64),
        64
    );
    let x5419: BytePoly_34 = bigint_nondet_quot!(ctx, x5418, x3, 34);
    let x5420: BytePoly_32 = bigint_nondet_rem!(ctx, x5418, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5419, x3, 66), x5420, 66),
            x5418,
            66
        ),
        276359,
        4,
    )?;
    let x5421: BytePoly_1 = bigint_nondet_rem!(ctx, x5382, x4, 1);
    let x5422: BytePoly_32 = bigint_nondet_quot!(ctx, x5382, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5422, x4, 33), x5421, 33),
            x5382,
            33
        ),
        260103,
        4,
    )?;
    let x5423: BytePoly_1 = bigint_sub!(x5, x5421, 1);
    eqz(ctx, &bigint_mul!(x5421, x5423, 2), 8131, 2)?;
    let x5424: BytePoly_32 = bigint_add!(bigint_sub!(x5420, x5406, 32), x3, 32);
    let x5425: BytePoly_32 = bigint_add!(bigint_sub!(x5417, x5404, 32), x3, 32);
    let x5426: BytePoly_32 = bigint_nondet_inv!(ctx, x5425, x3, 32);
    let x5427: BytePoly_64 = bigint_mul!(x5425, x5426, 64);
    let x5428: BytePoly_34 = bigint_nondet_quot!(ctx, x5427, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x5427, bigint_mul!(x5428, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x5429: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x5424, x5426, 64), x3, 32);
    let x5430: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x5429, x5425, 64), x5424, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x5431: BytePoly_34 = bigint_nondet_quot!(ctx, x5430, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x5430, bigint_mul!(x5431, x3, 66), 66),
        276359,
        4,
    )?;
    let x5432: BytePoly_64 = bigint_mul!(x5429, x5429, 64);
    let x5433: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x5432, x5404, 64), x3, 64),
            x5417,
            64
        ),
        x3,
        64
    );
    let x5434: BytePoly_34 = bigint_nondet_quot!(ctx, x5433, x3, 34);
    let x5435: BytePoly_32 = bigint_nondet_rem!(ctx, x5433, x3, 32);
    let x5436: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x5429, x5435, 64),
                        bigint_add!(
                            bigint_sub!(x5406, bigint_mul!(x5429, x5404, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x5437: BytePoly_34 = bigint_nondet_quot!(ctx, x5436, x3, 34);
    let x5438: BytePoly_32 = bigint_nondet_rem!(ctx, x5436, x3, 32);
    let x5439: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x5432, bigint_mul!(x5434, x3, 66), 66),
                        x5404,
                        66
                    ),
                    x5417,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x5435,
        66
    );
    eqz(ctx, &x5439, 276359, 4)?;
    let x5440: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x5437, x3, 66), x5438, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x5429, bigint_sub!(x5404, x5435, 32), 64),
                        x5406,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x5440, 276359, 4)?;
    let x5441: BytePoly_33 = bigint_add!(
        bigint_mul!(x5435, x5421, 33),
        bigint_mul!(x5404, x5423, 33),
        33
    );
    let x5442: BytePoly_33 = bigint_add!(
        bigint_mul!(x5438, x5421, 33),
        bigint_mul!(x5406, x5423, 33),
        33
    );
    let x5443: BytePoly_3 = bigint_nondet_quot!(ctx, x5441, x3, 3);
    let x5444: BytePoly_32 = bigint_nondet_rem!(ctx, x5441, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5443, x3, 35), x5444, 35),
            x5441,
            35
        ),
        260103,
        4,
    )?;
    let x5445: BytePoly_3 = bigint_nondet_quot!(ctx, x5442, x3, 3);
    let x5446: BytePoly_32 = bigint_nondet_rem!(ctx, x5442, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5445, x3, 35), x5446, 35),
            x5442,
            35
        ),
        260103,
        4,
    )?;
    let x5447: BytePoly_64 = bigint_mul!(x5417, x5417, 64);
    let x5448: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x5447, x5447, 64), x5447, 64),
        x2,
        64
    );
    let x5449: BytePoly_64 = bigint_add!(x48, x5448, 64);
    let x5450: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x5420, x5420, 32), x3, 32);
    let x5451: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x5448, x5450, 96), x3, 32);
    let x5452: BytePoly_64 = bigint_mul!(x5420, x5451, 64);
    let x5453: BytePoly_64 = bigint_add!(x5452, x5452, 64);
    let x5454: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x5449, x5453, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5454, x3, 66), x5453, 66),
            x5449,
            66
        ),
        276359,
        4,
    )?;
    let x5455: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x5451, x5451, 64), x3, 64), x3, 64),
            x5417,
            64
        ),
        x5417,
        64
    );
    let x5456: BytePoly_34 = bigint_nondet_quot!(ctx, x5455, x3, 34);
    let x5457: BytePoly_32 = bigint_nondet_rem!(ctx, x5455, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5456, x3, 66), x5457, 66),
            x5455,
            66
        ),
        276359,
        4,
    )?;
    let x5458: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x5451, x5457, 64), 64), x3, 64),
            x5420,
            64
        ),
        bigint_mul!(x5451, x5417, 64),
        64
    );
    let x5459: BytePoly_34 = bigint_nondet_quot!(ctx, x5458, x3, 34);
    let x5460: BytePoly_32 = bigint_nondet_rem!(ctx, x5458, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5459, x3, 66), x5460, 66),
            x5458,
            66
        ),
        276359,
        4,
    )?;
    let x5461: BytePoly_1 = bigint_nondet_rem!(ctx, x5422, x4, 1);
    let x5462: BytePoly_32 = bigint_nondet_quot!(ctx, x5422, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5462, x4, 33), x5461, 33),
            x5422,
            33
        ),
        260103,
        4,
    )?;
    let x5463: BytePoly_1 = bigint_sub!(x5, x5461, 1);
    eqz(ctx, &bigint_mul!(x5461, x5463, 2), 8131, 2)?;
    let x5464: BytePoly_32 = bigint_add!(bigint_sub!(x5460, x5446, 32), x3, 32);
    let x5465: BytePoly_32 = bigint_add!(bigint_sub!(x5457, x5444, 32), x3, 32);
    let x5466: BytePoly_32 = bigint_nondet_inv!(ctx, x5465, x3, 32);
    let x5467: BytePoly_64 = bigint_mul!(x5465, x5466, 64);
    let x5468: BytePoly_34 = bigint_nondet_quot!(ctx, x5467, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x5467, bigint_mul!(x5468, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x5469: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x5464, x5466, 64), x3, 32);
    let x5470: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x5469, x5465, 64), x5464, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x5471: BytePoly_34 = bigint_nondet_quot!(ctx, x5470, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x5470, bigint_mul!(x5471, x3, 66), 66),
        276359,
        4,
    )?;
    let x5472: BytePoly_64 = bigint_mul!(x5469, x5469, 64);
    let x5473: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x5472, x5444, 64), x3, 64),
            x5457,
            64
        ),
        x3,
        64
    );
    let x5474: BytePoly_34 = bigint_nondet_quot!(ctx, x5473, x3, 34);
    let x5475: BytePoly_32 = bigint_nondet_rem!(ctx, x5473, x3, 32);
    let x5476: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x5469, x5475, 64),
                        bigint_add!(
                            bigint_sub!(x5446, bigint_mul!(x5469, x5444, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x5477: BytePoly_34 = bigint_nondet_quot!(ctx, x5476, x3, 34);
    let x5478: BytePoly_32 = bigint_nondet_rem!(ctx, x5476, x3, 32);
    let x5479: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x5472, bigint_mul!(x5474, x3, 66), 66),
                        x5444,
                        66
                    ),
                    x5457,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x5475,
        66
    );
    eqz(ctx, &x5479, 276359, 4)?;
    let x5480: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x5477, x3, 66), x5478, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x5469, bigint_sub!(x5444, x5475, 32), 64),
                        x5446,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x5480, 276359, 4)?;
    let x5481: BytePoly_33 = bigint_add!(
        bigint_mul!(x5475, x5461, 33),
        bigint_mul!(x5444, x5463, 33),
        33
    );
    let x5482: BytePoly_33 = bigint_add!(
        bigint_mul!(x5478, x5461, 33),
        bigint_mul!(x5446, x5463, 33),
        33
    );
    let x5483: BytePoly_3 = bigint_nondet_quot!(ctx, x5481, x3, 3);
    let x5484: BytePoly_32 = bigint_nondet_rem!(ctx, x5481, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5483, x3, 35), x5484, 35),
            x5481,
            35
        ),
        260103,
        4,
    )?;
    let x5485: BytePoly_3 = bigint_nondet_quot!(ctx, x5482, x3, 3);
    let x5486: BytePoly_32 = bigint_nondet_rem!(ctx, x5482, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5485, x3, 35), x5486, 35),
            x5482,
            35
        ),
        260103,
        4,
    )?;
    let x5487: BytePoly_64 = bigint_mul!(x5457, x5457, 64);
    let x5488: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x5487, x5487, 64), x5487, 64),
        x2,
        64
    );
    let x5489: BytePoly_64 = bigint_add!(x48, x5488, 64);
    let x5490: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x5460, x5460, 32), x3, 32);
    let x5491: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x5488, x5490, 96), x3, 32);
    let x5492: BytePoly_64 = bigint_mul!(x5460, x5491, 64);
    let x5493: BytePoly_64 = bigint_add!(x5492, x5492, 64);
    let x5494: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x5489, x5493, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5494, x3, 66), x5493, 66),
            x5489,
            66
        ),
        276359,
        4,
    )?;
    let x5495: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x5491, x5491, 64), x3, 64), x3, 64),
            x5457,
            64
        ),
        x5457,
        64
    );
    let x5496: BytePoly_34 = bigint_nondet_quot!(ctx, x5495, x3, 34);
    let x5497: BytePoly_32 = bigint_nondet_rem!(ctx, x5495, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5496, x3, 66), x5497, 66),
            x5495,
            66
        ),
        276359,
        4,
    )?;
    let x5498: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x5491, x5497, 64), 64), x3, 64),
            x5460,
            64
        ),
        bigint_mul!(x5491, x5457, 64),
        64
    );
    let x5499: BytePoly_34 = bigint_nondet_quot!(ctx, x5498, x3, 34);
    let x5500: BytePoly_32 = bigint_nondet_rem!(ctx, x5498, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5499, x3, 66), x5500, 66),
            x5498,
            66
        ),
        276359,
        4,
    )?;
    let x5501: BytePoly_1 = bigint_nondet_rem!(ctx, x5462, x4, 1);
    let x5502: BytePoly_32 = bigint_nondet_quot!(ctx, x5462, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5502, x4, 33), x5501, 33),
            x5462,
            33
        ),
        260103,
        4,
    )?;
    let x5503: BytePoly_1 = bigint_sub!(x5, x5501, 1);
    eqz(ctx, &bigint_mul!(x5501, x5503, 2), 8131, 2)?;
    let x5504: BytePoly_32 = bigint_add!(bigint_sub!(x5500, x5486, 32), x3, 32);
    let x5505: BytePoly_32 = bigint_add!(bigint_sub!(x5497, x5484, 32), x3, 32);
    let x5506: BytePoly_32 = bigint_nondet_inv!(ctx, x5505, x3, 32);
    let x5507: BytePoly_64 = bigint_mul!(x5505, x5506, 64);
    let x5508: BytePoly_34 = bigint_nondet_quot!(ctx, x5507, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x5507, bigint_mul!(x5508, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x5509: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x5504, x5506, 64), x3, 32);
    let x5510: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x5509, x5505, 64), x5504, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x5511: BytePoly_34 = bigint_nondet_quot!(ctx, x5510, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x5510, bigint_mul!(x5511, x3, 66), 66),
        276359,
        4,
    )?;
    let x5512: BytePoly_64 = bigint_mul!(x5509, x5509, 64);
    let x5513: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x5512, x5484, 64), x3, 64),
            x5497,
            64
        ),
        x3,
        64
    );
    let x5514: BytePoly_34 = bigint_nondet_quot!(ctx, x5513, x3, 34);
    let x5515: BytePoly_32 = bigint_nondet_rem!(ctx, x5513, x3, 32);
    let x5516: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x5509, x5515, 64),
                        bigint_add!(
                            bigint_sub!(x5486, bigint_mul!(x5509, x5484, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x5517: BytePoly_34 = bigint_nondet_quot!(ctx, x5516, x3, 34);
    let x5518: BytePoly_32 = bigint_nondet_rem!(ctx, x5516, x3, 32);
    let x5519: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x5512, bigint_mul!(x5514, x3, 66), 66),
                        x5484,
                        66
                    ),
                    x5497,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x5515,
        66
    );
    eqz(ctx, &x5519, 276359, 4)?;
    let x5520: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x5517, x3, 66), x5518, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x5509, bigint_sub!(x5484, x5515, 32), 64),
                        x5486,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x5520, 276359, 4)?;
    let x5521: BytePoly_33 = bigint_add!(
        bigint_mul!(x5515, x5501, 33),
        bigint_mul!(x5484, x5503, 33),
        33
    );
    let x5522: BytePoly_33 = bigint_add!(
        bigint_mul!(x5518, x5501, 33),
        bigint_mul!(x5486, x5503, 33),
        33
    );
    let x5523: BytePoly_3 = bigint_nondet_quot!(ctx, x5521, x3, 3);
    let x5524: BytePoly_32 = bigint_nondet_rem!(ctx, x5521, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5523, x3, 35), x5524, 35),
            x5521,
            35
        ),
        260103,
        4,
    )?;
    let x5525: BytePoly_3 = bigint_nondet_quot!(ctx, x5522, x3, 3);
    let x5526: BytePoly_32 = bigint_nondet_rem!(ctx, x5522, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5525, x3, 35), x5526, 35),
            x5522,
            35
        ),
        260103,
        4,
    )?;
    let x5527: BytePoly_64 = bigint_mul!(x5497, x5497, 64);
    let x5528: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x5527, x5527, 64), x5527, 64),
        x2,
        64
    );
    let x5529: BytePoly_64 = bigint_add!(x48, x5528, 64);
    let x5530: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x5500, x5500, 32), x3, 32);
    let x5531: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x5528, x5530, 96), x3, 32);
    let x5532: BytePoly_64 = bigint_mul!(x5500, x5531, 64);
    let x5533: BytePoly_64 = bigint_add!(x5532, x5532, 64);
    let x5534: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x5529, x5533, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5534, x3, 66), x5533, 66),
            x5529,
            66
        ),
        276359,
        4,
    )?;
    let x5535: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x5531, x5531, 64), x3, 64), x3, 64),
            x5497,
            64
        ),
        x5497,
        64
    );
    let x5536: BytePoly_34 = bigint_nondet_quot!(ctx, x5535, x3, 34);
    let x5537: BytePoly_32 = bigint_nondet_rem!(ctx, x5535, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5536, x3, 66), x5537, 66),
            x5535,
            66
        ),
        276359,
        4,
    )?;
    let x5538: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x5531, x5537, 64), 64), x3, 64),
            x5500,
            64
        ),
        bigint_mul!(x5531, x5497, 64),
        64
    );
    let x5539: BytePoly_34 = bigint_nondet_quot!(ctx, x5538, x3, 34);
    let x5540: BytePoly_32 = bigint_nondet_rem!(ctx, x5538, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5539, x3, 66), x5540, 66),
            x5538,
            66
        ),
        276359,
        4,
    )?;
    let x5541: BytePoly_1 = bigint_nondet_rem!(ctx, x5502, x4, 1);
    let x5542: BytePoly_32 = bigint_nondet_quot!(ctx, x5502, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5542, x4, 33), x5541, 33),
            x5502,
            33
        ),
        260103,
        4,
    )?;
    let x5543: BytePoly_1 = bigint_sub!(x5, x5541, 1);
    eqz(ctx, &bigint_mul!(x5541, x5543, 2), 8131, 2)?;
    let x5544: BytePoly_32 = bigint_add!(bigint_sub!(x5540, x5526, 32), x3, 32);
    let x5545: BytePoly_32 = bigint_add!(bigint_sub!(x5537, x5524, 32), x3, 32);
    let x5546: BytePoly_32 = bigint_nondet_inv!(ctx, x5545, x3, 32);
    let x5547: BytePoly_64 = bigint_mul!(x5545, x5546, 64);
    let x5548: BytePoly_34 = bigint_nondet_quot!(ctx, x5547, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x5547, bigint_mul!(x5548, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x5549: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x5544, x5546, 64), x3, 32);
    let x5550: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x5549, x5545, 64), x5544, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x5551: BytePoly_34 = bigint_nondet_quot!(ctx, x5550, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x5550, bigint_mul!(x5551, x3, 66), 66),
        276359,
        4,
    )?;
    let x5552: BytePoly_64 = bigint_mul!(x5549, x5549, 64);
    let x5553: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x5552, x5524, 64), x3, 64),
            x5537,
            64
        ),
        x3,
        64
    );
    let x5554: BytePoly_34 = bigint_nondet_quot!(ctx, x5553, x3, 34);
    let x5555: BytePoly_32 = bigint_nondet_rem!(ctx, x5553, x3, 32);
    let x5556: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x5549, x5555, 64),
                        bigint_add!(
                            bigint_sub!(x5526, bigint_mul!(x5549, x5524, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x5557: BytePoly_34 = bigint_nondet_quot!(ctx, x5556, x3, 34);
    let x5558: BytePoly_32 = bigint_nondet_rem!(ctx, x5556, x3, 32);
    let x5559: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x5552, bigint_mul!(x5554, x3, 66), 66),
                        x5524,
                        66
                    ),
                    x5537,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x5555,
        66
    );
    eqz(ctx, &x5559, 276359, 4)?;
    let x5560: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x5557, x3, 66), x5558, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x5549, bigint_sub!(x5524, x5555, 32), 64),
                        x5526,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x5560, 276359, 4)?;
    let x5561: BytePoly_33 = bigint_add!(
        bigint_mul!(x5555, x5541, 33),
        bigint_mul!(x5524, x5543, 33),
        33
    );
    let x5562: BytePoly_33 = bigint_add!(
        bigint_mul!(x5558, x5541, 33),
        bigint_mul!(x5526, x5543, 33),
        33
    );
    let x5563: BytePoly_3 = bigint_nondet_quot!(ctx, x5561, x3, 3);
    let x5564: BytePoly_32 = bigint_nondet_rem!(ctx, x5561, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5563, x3, 35), x5564, 35),
            x5561,
            35
        ),
        260103,
        4,
    )?;
    let x5565: BytePoly_3 = bigint_nondet_quot!(ctx, x5562, x3, 3);
    let x5566: BytePoly_32 = bigint_nondet_rem!(ctx, x5562, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5565, x3, 35), x5566, 35),
            x5562,
            35
        ),
        260103,
        4,
    )?;
    let x5567: BytePoly_64 = bigint_mul!(x5537, x5537, 64);
    let x5568: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x5567, x5567, 64), x5567, 64),
        x2,
        64
    );
    let x5569: BytePoly_64 = bigint_add!(x48, x5568, 64);
    let x5570: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x5540, x5540, 32), x3, 32);
    let x5571: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x5568, x5570, 96), x3, 32);
    let x5572: BytePoly_64 = bigint_mul!(x5540, x5571, 64);
    let x5573: BytePoly_64 = bigint_add!(x5572, x5572, 64);
    let x5574: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x5569, x5573, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5574, x3, 66), x5573, 66),
            x5569,
            66
        ),
        276359,
        4,
    )?;
    let x5575: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x5571, x5571, 64), x3, 64), x3, 64),
            x5537,
            64
        ),
        x5537,
        64
    );
    let x5576: BytePoly_34 = bigint_nondet_quot!(ctx, x5575, x3, 34);
    let x5577: BytePoly_32 = bigint_nondet_rem!(ctx, x5575, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5576, x3, 66), x5577, 66),
            x5575,
            66
        ),
        276359,
        4,
    )?;
    let x5578: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x5571, x5577, 64), 64), x3, 64),
            x5540,
            64
        ),
        bigint_mul!(x5571, x5537, 64),
        64
    );
    let x5579: BytePoly_34 = bigint_nondet_quot!(ctx, x5578, x3, 34);
    let x5580: BytePoly_32 = bigint_nondet_rem!(ctx, x5578, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5579, x3, 66), x5580, 66),
            x5578,
            66
        ),
        276359,
        4,
    )?;
    let x5581: BytePoly_1 = bigint_nondet_rem!(ctx, x5542, x4, 1);
    let x5582: BytePoly_32 = bigint_nondet_quot!(ctx, x5542, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5582, x4, 33), x5581, 33),
            x5542,
            33
        ),
        260103,
        4,
    )?;
    let x5583: BytePoly_1 = bigint_sub!(x5, x5581, 1);
    eqz(ctx, &bigint_mul!(x5581, x5583, 2), 8131, 2)?;
    let x5584: BytePoly_32 = bigint_add!(bigint_sub!(x5580, x5566, 32), x3, 32);
    let x5585: BytePoly_32 = bigint_add!(bigint_sub!(x5577, x5564, 32), x3, 32);
    let x5586: BytePoly_32 = bigint_nondet_inv!(ctx, x5585, x3, 32);
    let x5587: BytePoly_64 = bigint_mul!(x5585, x5586, 64);
    let x5588: BytePoly_34 = bigint_nondet_quot!(ctx, x5587, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x5587, bigint_mul!(x5588, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x5589: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x5584, x5586, 64), x3, 32);
    let x5590: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x5589, x5585, 64), x5584, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x5591: BytePoly_34 = bigint_nondet_quot!(ctx, x5590, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x5590, bigint_mul!(x5591, x3, 66), 66),
        276359,
        4,
    )?;
    let x5592: BytePoly_64 = bigint_mul!(x5589, x5589, 64);
    let x5593: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x5592, x5564, 64), x3, 64),
            x5577,
            64
        ),
        x3,
        64
    );
    let x5594: BytePoly_34 = bigint_nondet_quot!(ctx, x5593, x3, 34);
    let x5595: BytePoly_32 = bigint_nondet_rem!(ctx, x5593, x3, 32);
    let x5596: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x5589, x5595, 64),
                        bigint_add!(
                            bigint_sub!(x5566, bigint_mul!(x5589, x5564, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x5597: BytePoly_34 = bigint_nondet_quot!(ctx, x5596, x3, 34);
    let x5598: BytePoly_32 = bigint_nondet_rem!(ctx, x5596, x3, 32);
    let x5599: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x5592, bigint_mul!(x5594, x3, 66), 66),
                        x5564,
                        66
                    ),
                    x5577,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x5595,
        66
    );
    eqz(ctx, &x5599, 276359, 4)?;
    let x5600: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x5597, x3, 66), x5598, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x5589, bigint_sub!(x5564, x5595, 32), 64),
                        x5566,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x5600, 276359, 4)?;
    let x5601: BytePoly_33 = bigint_add!(
        bigint_mul!(x5595, x5581, 33),
        bigint_mul!(x5564, x5583, 33),
        33
    );
    let x5602: BytePoly_33 = bigint_add!(
        bigint_mul!(x5598, x5581, 33),
        bigint_mul!(x5566, x5583, 33),
        33
    );
    let x5603: BytePoly_3 = bigint_nondet_quot!(ctx, x5601, x3, 3);
    let x5604: BytePoly_32 = bigint_nondet_rem!(ctx, x5601, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5603, x3, 35), x5604, 35),
            x5601,
            35
        ),
        260103,
        4,
    )?;
    let x5605: BytePoly_3 = bigint_nondet_quot!(ctx, x5602, x3, 3);
    let x5606: BytePoly_32 = bigint_nondet_rem!(ctx, x5602, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5605, x3, 35), x5606, 35),
            x5602,
            35
        ),
        260103,
        4,
    )?;
    let x5607: BytePoly_64 = bigint_mul!(x5577, x5577, 64);
    let x5608: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x5607, x5607, 64), x5607, 64),
        x2,
        64
    );
    let x5609: BytePoly_64 = bigint_add!(x48, x5608, 64);
    let x5610: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x5580, x5580, 32), x3, 32);
    let x5611: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x5608, x5610, 96), x3, 32);
    let x5612: BytePoly_64 = bigint_mul!(x5580, x5611, 64);
    let x5613: BytePoly_64 = bigint_add!(x5612, x5612, 64);
    let x5614: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x5609, x5613, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5614, x3, 66), x5613, 66),
            x5609,
            66
        ),
        276359,
        4,
    )?;
    let x5615: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x5611, x5611, 64), x3, 64), x3, 64),
            x5577,
            64
        ),
        x5577,
        64
    );
    let x5616: BytePoly_34 = bigint_nondet_quot!(ctx, x5615, x3, 34);
    let x5617: BytePoly_32 = bigint_nondet_rem!(ctx, x5615, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5616, x3, 66), x5617, 66),
            x5615,
            66
        ),
        276359,
        4,
    )?;
    let x5618: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x5611, x5617, 64), 64), x3, 64),
            x5580,
            64
        ),
        bigint_mul!(x5611, x5577, 64),
        64
    );
    let x5619: BytePoly_34 = bigint_nondet_quot!(ctx, x5618, x3, 34);
    let x5620: BytePoly_32 = bigint_nondet_rem!(ctx, x5618, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5619, x3, 66), x5620, 66),
            x5618,
            66
        ),
        276359,
        4,
    )?;
    let x5621: BytePoly_1 = bigint_nondet_rem!(ctx, x5582, x4, 1);
    let x5622: BytePoly_32 = bigint_nondet_quot!(ctx, x5582, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5622, x4, 33), x5621, 33),
            x5582,
            33
        ),
        260103,
        4,
    )?;
    let x5623: BytePoly_1 = bigint_sub!(x5, x5621, 1);
    eqz(ctx, &bigint_mul!(x5621, x5623, 2), 8131, 2)?;
    let x5624: BytePoly_32 = bigint_add!(bigint_sub!(x5620, x5606, 32), x3, 32);
    let x5625: BytePoly_32 = bigint_add!(bigint_sub!(x5617, x5604, 32), x3, 32);
    let x5626: BytePoly_32 = bigint_nondet_inv!(ctx, x5625, x3, 32);
    let x5627: BytePoly_64 = bigint_mul!(x5625, x5626, 64);
    let x5628: BytePoly_34 = bigint_nondet_quot!(ctx, x5627, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x5627, bigint_mul!(x5628, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x5629: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x5624, x5626, 64), x3, 32);
    let x5630: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x5629, x5625, 64), x5624, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x5631: BytePoly_34 = bigint_nondet_quot!(ctx, x5630, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x5630, bigint_mul!(x5631, x3, 66), 66),
        276359,
        4,
    )?;
    let x5632: BytePoly_64 = bigint_mul!(x5629, x5629, 64);
    let x5633: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x5632, x5604, 64), x3, 64),
            x5617,
            64
        ),
        x3,
        64
    );
    let x5634: BytePoly_34 = bigint_nondet_quot!(ctx, x5633, x3, 34);
    let x5635: BytePoly_32 = bigint_nondet_rem!(ctx, x5633, x3, 32);
    let x5636: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x5629, x5635, 64),
                        bigint_add!(
                            bigint_sub!(x5606, bigint_mul!(x5629, x5604, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x5637: BytePoly_34 = bigint_nondet_quot!(ctx, x5636, x3, 34);
    let x5638: BytePoly_32 = bigint_nondet_rem!(ctx, x5636, x3, 32);
    let x5639: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x5632, bigint_mul!(x5634, x3, 66), 66),
                        x5604,
                        66
                    ),
                    x5617,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x5635,
        66
    );
    eqz(ctx, &x5639, 276359, 4)?;
    let x5640: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x5637, x3, 66), x5638, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x5629, bigint_sub!(x5604, x5635, 32), 64),
                        x5606,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x5640, 276359, 4)?;
    let x5641: BytePoly_33 = bigint_add!(
        bigint_mul!(x5635, x5621, 33),
        bigint_mul!(x5604, x5623, 33),
        33
    );
    let x5642: BytePoly_33 = bigint_add!(
        bigint_mul!(x5638, x5621, 33),
        bigint_mul!(x5606, x5623, 33),
        33
    );
    let x5643: BytePoly_3 = bigint_nondet_quot!(ctx, x5641, x3, 3);
    let x5644: BytePoly_32 = bigint_nondet_rem!(ctx, x5641, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5643, x3, 35), x5644, 35),
            x5641,
            35
        ),
        260103,
        4,
    )?;
    let x5645: BytePoly_3 = bigint_nondet_quot!(ctx, x5642, x3, 3);
    let x5646: BytePoly_32 = bigint_nondet_rem!(ctx, x5642, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5645, x3, 35), x5646, 35),
            x5642,
            35
        ),
        260103,
        4,
    )?;
    let x5647: BytePoly_64 = bigint_mul!(x5617, x5617, 64);
    let x5648: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x5647, x5647, 64), x5647, 64),
        x2,
        64
    );
    let x5649: BytePoly_64 = bigint_add!(x48, x5648, 64);
    let x5650: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x5620, x5620, 32), x3, 32);
    let x5651: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x5648, x5650, 96), x3, 32);
    let x5652: BytePoly_64 = bigint_mul!(x5620, x5651, 64);
    let x5653: BytePoly_64 = bigint_add!(x5652, x5652, 64);
    let x5654: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x5649, x5653, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5654, x3, 66), x5653, 66),
            x5649,
            66
        ),
        276359,
        4,
    )?;
    let x5655: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x5651, x5651, 64), x3, 64), x3, 64),
            x5617,
            64
        ),
        x5617,
        64
    );
    let x5656: BytePoly_34 = bigint_nondet_quot!(ctx, x5655, x3, 34);
    let x5657: BytePoly_32 = bigint_nondet_rem!(ctx, x5655, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5656, x3, 66), x5657, 66),
            x5655,
            66
        ),
        276359,
        4,
    )?;
    let x5658: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x5651, x5657, 64), 64), x3, 64),
            x5620,
            64
        ),
        bigint_mul!(x5651, x5617, 64),
        64
    );
    let x5659: BytePoly_34 = bigint_nondet_quot!(ctx, x5658, x3, 34);
    let x5660: BytePoly_32 = bigint_nondet_rem!(ctx, x5658, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5659, x3, 66), x5660, 66),
            x5658,
            66
        ),
        276359,
        4,
    )?;
    let x5661: BytePoly_1 = bigint_nondet_rem!(ctx, x5622, x4, 1);
    let x5662: BytePoly_32 = bigint_nondet_quot!(ctx, x5622, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5662, x4, 33), x5661, 33),
            x5622,
            33
        ),
        260103,
        4,
    )?;
    let x5663: BytePoly_1 = bigint_sub!(x5, x5661, 1);
    eqz(ctx, &bigint_mul!(x5661, x5663, 2), 8131, 2)?;
    let x5664: BytePoly_32 = bigint_add!(bigint_sub!(x5660, x5646, 32), x3, 32);
    let x5665: BytePoly_32 = bigint_add!(bigint_sub!(x5657, x5644, 32), x3, 32);
    let x5666: BytePoly_32 = bigint_nondet_inv!(ctx, x5665, x3, 32);
    let x5667: BytePoly_64 = bigint_mul!(x5665, x5666, 64);
    let x5668: BytePoly_34 = bigint_nondet_quot!(ctx, x5667, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x5667, bigint_mul!(x5668, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x5669: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x5664, x5666, 64), x3, 32);
    let x5670: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x5669, x5665, 64), x5664, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x5671: BytePoly_34 = bigint_nondet_quot!(ctx, x5670, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x5670, bigint_mul!(x5671, x3, 66), 66),
        276359,
        4,
    )?;
    let x5672: BytePoly_64 = bigint_mul!(x5669, x5669, 64);
    let x5673: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x5672, x5644, 64), x3, 64),
            x5657,
            64
        ),
        x3,
        64
    );
    let x5674: BytePoly_34 = bigint_nondet_quot!(ctx, x5673, x3, 34);
    let x5675: BytePoly_32 = bigint_nondet_rem!(ctx, x5673, x3, 32);
    let x5676: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x5669, x5675, 64),
                        bigint_add!(
                            bigint_sub!(x5646, bigint_mul!(x5669, x5644, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x5677: BytePoly_34 = bigint_nondet_quot!(ctx, x5676, x3, 34);
    let x5678: BytePoly_32 = bigint_nondet_rem!(ctx, x5676, x3, 32);
    let x5679: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x5672, bigint_mul!(x5674, x3, 66), 66),
                        x5644,
                        66
                    ),
                    x5657,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x5675,
        66
    );
    eqz(ctx, &x5679, 276359, 4)?;
    let x5680: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x5677, x3, 66), x5678, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x5669, bigint_sub!(x5644, x5675, 32), 64),
                        x5646,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x5680, 276359, 4)?;
    let x5681: BytePoly_33 = bigint_add!(
        bigint_mul!(x5675, x5661, 33),
        bigint_mul!(x5644, x5663, 33),
        33
    );
    let x5682: BytePoly_33 = bigint_add!(
        bigint_mul!(x5678, x5661, 33),
        bigint_mul!(x5646, x5663, 33),
        33
    );
    let x5683: BytePoly_3 = bigint_nondet_quot!(ctx, x5681, x3, 3);
    let x5684: BytePoly_32 = bigint_nondet_rem!(ctx, x5681, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5683, x3, 35), x5684, 35),
            x5681,
            35
        ),
        260103,
        4,
    )?;
    let x5685: BytePoly_3 = bigint_nondet_quot!(ctx, x5682, x3, 3);
    let x5686: BytePoly_32 = bigint_nondet_rem!(ctx, x5682, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5685, x3, 35), x5686, 35),
            x5682,
            35
        ),
        260103,
        4,
    )?;
    let x5687: BytePoly_64 = bigint_mul!(x5657, x5657, 64);
    let x5688: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x5687, x5687, 64), x5687, 64),
        x2,
        64
    );
    let x5689: BytePoly_64 = bigint_add!(x48, x5688, 64);
    let x5690: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x5660, x5660, 32), x3, 32);
    let x5691: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x5688, x5690, 96), x3, 32);
    let x5692: BytePoly_64 = bigint_mul!(x5660, x5691, 64);
    let x5693: BytePoly_64 = bigint_add!(x5692, x5692, 64);
    let x5694: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x5689, x5693, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5694, x3, 66), x5693, 66),
            x5689,
            66
        ),
        276359,
        4,
    )?;
    let x5695: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x5691, x5691, 64), x3, 64), x3, 64),
            x5657,
            64
        ),
        x5657,
        64
    );
    let x5696: BytePoly_34 = bigint_nondet_quot!(ctx, x5695, x3, 34);
    let x5697: BytePoly_32 = bigint_nondet_rem!(ctx, x5695, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5696, x3, 66), x5697, 66),
            x5695,
            66
        ),
        276359,
        4,
    )?;
    let x5698: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x5691, x5697, 64), 64), x3, 64),
            x5660,
            64
        ),
        bigint_mul!(x5691, x5657, 64),
        64
    );
    let x5699: BytePoly_34 = bigint_nondet_quot!(ctx, x5698, x3, 34);
    let x5700: BytePoly_32 = bigint_nondet_rem!(ctx, x5698, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5699, x3, 66), x5700, 66),
            x5698,
            66
        ),
        276359,
        4,
    )?;
    let x5701: BytePoly_1 = bigint_nondet_rem!(ctx, x5662, x4, 1);
    let x5702: BytePoly_32 = bigint_nondet_quot!(ctx, x5662, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5702, x4, 33), x5701, 33),
            x5662,
            33
        ),
        260103,
        4,
    )?;
    let x5703: BytePoly_1 = bigint_sub!(x5, x5701, 1);
    eqz(ctx, &bigint_mul!(x5701, x5703, 2), 8131, 2)?;
    let x5704: BytePoly_32 = bigint_add!(bigint_sub!(x5700, x5686, 32), x3, 32);
    let x5705: BytePoly_32 = bigint_add!(bigint_sub!(x5697, x5684, 32), x3, 32);
    let x5706: BytePoly_32 = bigint_nondet_inv!(ctx, x5705, x3, 32);
    let x5707: BytePoly_64 = bigint_mul!(x5705, x5706, 64);
    let x5708: BytePoly_34 = bigint_nondet_quot!(ctx, x5707, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x5707, bigint_mul!(x5708, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x5709: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x5704, x5706, 64), x3, 32);
    let x5710: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x5709, x5705, 64), x5704, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x5711: BytePoly_34 = bigint_nondet_quot!(ctx, x5710, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x5710, bigint_mul!(x5711, x3, 66), 66),
        276359,
        4,
    )?;
    let x5712: BytePoly_64 = bigint_mul!(x5709, x5709, 64);
    let x5713: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x5712, x5684, 64), x3, 64),
            x5697,
            64
        ),
        x3,
        64
    );
    let x5714: BytePoly_34 = bigint_nondet_quot!(ctx, x5713, x3, 34);
    let x5715: BytePoly_32 = bigint_nondet_rem!(ctx, x5713, x3, 32);
    let x5716: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x5709, x5715, 64),
                        bigint_add!(
                            bigint_sub!(x5686, bigint_mul!(x5709, x5684, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x5717: BytePoly_34 = bigint_nondet_quot!(ctx, x5716, x3, 34);
    let x5718: BytePoly_32 = bigint_nondet_rem!(ctx, x5716, x3, 32);
    let x5719: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x5712, bigint_mul!(x5714, x3, 66), 66),
                        x5684,
                        66
                    ),
                    x5697,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x5715,
        66
    );
    eqz(ctx, &x5719, 276359, 4)?;
    let x5720: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x5717, x3, 66), x5718, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x5709, bigint_sub!(x5684, x5715, 32), 64),
                        x5686,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x5720, 276359, 4)?;
    let x5721: BytePoly_33 = bigint_add!(
        bigint_mul!(x5715, x5701, 33),
        bigint_mul!(x5684, x5703, 33),
        33
    );
    let x5722: BytePoly_33 = bigint_add!(
        bigint_mul!(x5718, x5701, 33),
        bigint_mul!(x5686, x5703, 33),
        33
    );
    let x5723: BytePoly_3 = bigint_nondet_quot!(ctx, x5721, x3, 3);
    let x5724: BytePoly_32 = bigint_nondet_rem!(ctx, x5721, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5723, x3, 35), x5724, 35),
            x5721,
            35
        ),
        260103,
        4,
    )?;
    let x5725: BytePoly_3 = bigint_nondet_quot!(ctx, x5722, x3, 3);
    let x5726: BytePoly_32 = bigint_nondet_rem!(ctx, x5722, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5725, x3, 35), x5726, 35),
            x5722,
            35
        ),
        260103,
        4,
    )?;
    let x5727: BytePoly_64 = bigint_mul!(x5697, x5697, 64);
    let x5728: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x5727, x5727, 64), x5727, 64),
        x2,
        64
    );
    let x5729: BytePoly_64 = bigint_add!(x48, x5728, 64);
    let x5730: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x5700, x5700, 32), x3, 32);
    let x5731: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x5728, x5730, 96), x3, 32);
    let x5732: BytePoly_64 = bigint_mul!(x5700, x5731, 64);
    let x5733: BytePoly_64 = bigint_add!(x5732, x5732, 64);
    let x5734: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x5729, x5733, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5734, x3, 66), x5733, 66),
            x5729,
            66
        ),
        276359,
        4,
    )?;
    let x5735: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x5731, x5731, 64), x3, 64), x3, 64),
            x5697,
            64
        ),
        x5697,
        64
    );
    let x5736: BytePoly_34 = bigint_nondet_quot!(ctx, x5735, x3, 34);
    let x5737: BytePoly_32 = bigint_nondet_rem!(ctx, x5735, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5736, x3, 66), x5737, 66),
            x5735,
            66
        ),
        276359,
        4,
    )?;
    let x5738: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x5731, x5737, 64), 64), x3, 64),
            x5700,
            64
        ),
        bigint_mul!(x5731, x5697, 64),
        64
    );
    let x5739: BytePoly_34 = bigint_nondet_quot!(ctx, x5738, x3, 34);
    let x5740: BytePoly_32 = bigint_nondet_rem!(ctx, x5738, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5739, x3, 66), x5740, 66),
            x5738,
            66
        ),
        276359,
        4,
    )?;
    let x5741: BytePoly_1 = bigint_nondet_rem!(ctx, x5702, x4, 1);
    let x5742: BytePoly_32 = bigint_nondet_quot!(ctx, x5702, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5742, x4, 33), x5741, 33),
            x5702,
            33
        ),
        260103,
        4,
    )?;
    let x5743: BytePoly_1 = bigint_sub!(x5, x5741, 1);
    eqz(ctx, &bigint_mul!(x5741, x5743, 2), 8131, 2)?;
    let x5744: BytePoly_32 = bigint_add!(bigint_sub!(x5740, x5726, 32), x3, 32);
    let x5745: BytePoly_32 = bigint_add!(bigint_sub!(x5737, x5724, 32), x3, 32);
    let x5746: BytePoly_32 = bigint_nondet_inv!(ctx, x5745, x3, 32);
    let x5747: BytePoly_64 = bigint_mul!(x5745, x5746, 64);
    let x5748: BytePoly_34 = bigint_nondet_quot!(ctx, x5747, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x5747, bigint_mul!(x5748, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x5749: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x5744, x5746, 64), x3, 32);
    let x5750: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x5749, x5745, 64), x5744, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x5751: BytePoly_34 = bigint_nondet_quot!(ctx, x5750, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x5750, bigint_mul!(x5751, x3, 66), 66),
        276359,
        4,
    )?;
    let x5752: BytePoly_64 = bigint_mul!(x5749, x5749, 64);
    let x5753: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x5752, x5724, 64), x3, 64),
            x5737,
            64
        ),
        x3,
        64
    );
    let x5754: BytePoly_34 = bigint_nondet_quot!(ctx, x5753, x3, 34);
    let x5755: BytePoly_32 = bigint_nondet_rem!(ctx, x5753, x3, 32);
    let x5756: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x5749, x5755, 64),
                        bigint_add!(
                            bigint_sub!(x5726, bigint_mul!(x5749, x5724, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x5757: BytePoly_34 = bigint_nondet_quot!(ctx, x5756, x3, 34);
    let x5758: BytePoly_32 = bigint_nondet_rem!(ctx, x5756, x3, 32);
    let x5759: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x5752, bigint_mul!(x5754, x3, 66), 66),
                        x5724,
                        66
                    ),
                    x5737,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x5755,
        66
    );
    eqz(ctx, &x5759, 276359, 4)?;
    let x5760: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x5757, x3, 66), x5758, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x5749, bigint_sub!(x5724, x5755, 32), 64),
                        x5726,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x5760, 276359, 4)?;
    let x5761: BytePoly_33 = bigint_add!(
        bigint_mul!(x5755, x5741, 33),
        bigint_mul!(x5724, x5743, 33),
        33
    );
    let x5762: BytePoly_33 = bigint_add!(
        bigint_mul!(x5758, x5741, 33),
        bigint_mul!(x5726, x5743, 33),
        33
    );
    let x5763: BytePoly_3 = bigint_nondet_quot!(ctx, x5761, x3, 3);
    let x5764: BytePoly_32 = bigint_nondet_rem!(ctx, x5761, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5763, x3, 35), x5764, 35),
            x5761,
            35
        ),
        260103,
        4,
    )?;
    let x5765: BytePoly_3 = bigint_nondet_quot!(ctx, x5762, x3, 3);
    let x5766: BytePoly_32 = bigint_nondet_rem!(ctx, x5762, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5765, x3, 35), x5766, 35),
            x5762,
            35
        ),
        260103,
        4,
    )?;
    let x5767: BytePoly_64 = bigint_mul!(x5737, x5737, 64);
    let x5768: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x5767, x5767, 64), x5767, 64),
        x2,
        64
    );
    let x5769: BytePoly_64 = bigint_add!(x48, x5768, 64);
    let x5770: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x5740, x5740, 32), x3, 32);
    let x5771: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x5768, x5770, 96), x3, 32);
    let x5772: BytePoly_64 = bigint_mul!(x5740, x5771, 64);
    let x5773: BytePoly_64 = bigint_add!(x5772, x5772, 64);
    let x5774: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x5769, x5773, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5774, x3, 66), x5773, 66),
            x5769,
            66
        ),
        276359,
        4,
    )?;
    let x5775: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x5771, x5771, 64), x3, 64), x3, 64),
            x5737,
            64
        ),
        x5737,
        64
    );
    let x5776: BytePoly_34 = bigint_nondet_quot!(ctx, x5775, x3, 34);
    let x5777: BytePoly_32 = bigint_nondet_rem!(ctx, x5775, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5776, x3, 66), x5777, 66),
            x5775,
            66
        ),
        276359,
        4,
    )?;
    let x5778: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x5771, x5777, 64), 64), x3, 64),
            x5740,
            64
        ),
        bigint_mul!(x5771, x5737, 64),
        64
    );
    let x5779: BytePoly_34 = bigint_nondet_quot!(ctx, x5778, x3, 34);
    let x5780: BytePoly_32 = bigint_nondet_rem!(ctx, x5778, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5779, x3, 66), x5780, 66),
            x5778,
            66
        ),
        276359,
        4,
    )?;
    let x5781: BytePoly_1 = bigint_nondet_rem!(ctx, x5742, x4, 1);
    let x5782: BytePoly_32 = bigint_nondet_quot!(ctx, x5742, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5782, x4, 33), x5781, 33),
            x5742,
            33
        ),
        260103,
        4,
    )?;
    let x5783: BytePoly_1 = bigint_sub!(x5, x5781, 1);
    eqz(ctx, &bigint_mul!(x5781, x5783, 2), 8131, 2)?;
    let x5784: BytePoly_32 = bigint_add!(bigint_sub!(x5780, x5766, 32), x3, 32);
    let x5785: BytePoly_32 = bigint_add!(bigint_sub!(x5777, x5764, 32), x3, 32);
    let x5786: BytePoly_32 = bigint_nondet_inv!(ctx, x5785, x3, 32);
    let x5787: BytePoly_64 = bigint_mul!(x5785, x5786, 64);
    let x5788: BytePoly_34 = bigint_nondet_quot!(ctx, x5787, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x5787, bigint_mul!(x5788, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x5789: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x5784, x5786, 64), x3, 32);
    let x5790: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x5789, x5785, 64), x5784, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x5791: BytePoly_34 = bigint_nondet_quot!(ctx, x5790, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x5790, bigint_mul!(x5791, x3, 66), 66),
        276359,
        4,
    )?;
    let x5792: BytePoly_64 = bigint_mul!(x5789, x5789, 64);
    let x5793: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x5792, x5764, 64), x3, 64),
            x5777,
            64
        ),
        x3,
        64
    );
    let x5794: BytePoly_34 = bigint_nondet_quot!(ctx, x5793, x3, 34);
    let x5795: BytePoly_32 = bigint_nondet_rem!(ctx, x5793, x3, 32);
    let x5796: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x5789, x5795, 64),
                        bigint_add!(
                            bigint_sub!(x5766, bigint_mul!(x5789, x5764, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x5797: BytePoly_34 = bigint_nondet_quot!(ctx, x5796, x3, 34);
    let x5798: BytePoly_32 = bigint_nondet_rem!(ctx, x5796, x3, 32);
    let x5799: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x5792, bigint_mul!(x5794, x3, 66), 66),
                        x5764,
                        66
                    ),
                    x5777,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x5795,
        66
    );
    eqz(ctx, &x5799, 276359, 4)?;
    let x5800: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x5797, x3, 66), x5798, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x5789, bigint_sub!(x5764, x5795, 32), 64),
                        x5766,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x5800, 276359, 4)?;
    let x5801: BytePoly_33 = bigint_add!(
        bigint_mul!(x5795, x5781, 33),
        bigint_mul!(x5764, x5783, 33),
        33
    );
    let x5802: BytePoly_33 = bigint_add!(
        bigint_mul!(x5798, x5781, 33),
        bigint_mul!(x5766, x5783, 33),
        33
    );
    let x5803: BytePoly_3 = bigint_nondet_quot!(ctx, x5801, x3, 3);
    let x5804: BytePoly_32 = bigint_nondet_rem!(ctx, x5801, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5803, x3, 35), x5804, 35),
            x5801,
            35
        ),
        260103,
        4,
    )?;
    let x5805: BytePoly_3 = bigint_nondet_quot!(ctx, x5802, x3, 3);
    let x5806: BytePoly_32 = bigint_nondet_rem!(ctx, x5802, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5805, x3, 35), x5806, 35),
            x5802,
            35
        ),
        260103,
        4,
    )?;
    let x5807: BytePoly_64 = bigint_mul!(x5777, x5777, 64);
    let x5808: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x5807, x5807, 64), x5807, 64),
        x2,
        64
    );
    let x5809: BytePoly_64 = bigint_add!(x48, x5808, 64);
    let x5810: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x5780, x5780, 32), x3, 32);
    let x5811: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x5808, x5810, 96), x3, 32);
    let x5812: BytePoly_64 = bigint_mul!(x5780, x5811, 64);
    let x5813: BytePoly_64 = bigint_add!(x5812, x5812, 64);
    let x5814: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x5809, x5813, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5814, x3, 66), x5813, 66),
            x5809,
            66
        ),
        276359,
        4,
    )?;
    let x5815: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x5811, x5811, 64), x3, 64), x3, 64),
            x5777,
            64
        ),
        x5777,
        64
    );
    let x5816: BytePoly_34 = bigint_nondet_quot!(ctx, x5815, x3, 34);
    let x5817: BytePoly_32 = bigint_nondet_rem!(ctx, x5815, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5816, x3, 66), x5817, 66),
            x5815,
            66
        ),
        276359,
        4,
    )?;
    let x5818: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x5811, x5817, 64), 64), x3, 64),
            x5780,
            64
        ),
        bigint_mul!(x5811, x5777, 64),
        64
    );
    let x5819: BytePoly_34 = bigint_nondet_quot!(ctx, x5818, x3, 34);
    let x5820: BytePoly_32 = bigint_nondet_rem!(ctx, x5818, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5819, x3, 66), x5820, 66),
            x5818,
            66
        ),
        276359,
        4,
    )?;
    let x5821: BytePoly_1 = bigint_nondet_rem!(ctx, x5782, x4, 1);
    let x5822: BytePoly_32 = bigint_nondet_quot!(ctx, x5782, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5822, x4, 33), x5821, 33),
            x5782,
            33
        ),
        260103,
        4,
    )?;
    let x5823: BytePoly_1 = bigint_sub!(x5, x5821, 1);
    eqz(ctx, &bigint_mul!(x5821, x5823, 2), 8131, 2)?;
    let x5824: BytePoly_32 = bigint_add!(bigint_sub!(x5820, x5806, 32), x3, 32);
    let x5825: BytePoly_32 = bigint_add!(bigint_sub!(x5817, x5804, 32), x3, 32);
    let x5826: BytePoly_32 = bigint_nondet_inv!(ctx, x5825, x3, 32);
    let x5827: BytePoly_64 = bigint_mul!(x5825, x5826, 64);
    let x5828: BytePoly_34 = bigint_nondet_quot!(ctx, x5827, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x5827, bigint_mul!(x5828, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x5829: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x5824, x5826, 64), x3, 32);
    let x5830: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x5829, x5825, 64), x5824, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x5831: BytePoly_34 = bigint_nondet_quot!(ctx, x5830, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x5830, bigint_mul!(x5831, x3, 66), 66),
        276359,
        4,
    )?;
    let x5832: BytePoly_64 = bigint_mul!(x5829, x5829, 64);
    let x5833: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x5832, x5804, 64), x3, 64),
            x5817,
            64
        ),
        x3,
        64
    );
    let x5834: BytePoly_34 = bigint_nondet_quot!(ctx, x5833, x3, 34);
    let x5835: BytePoly_32 = bigint_nondet_rem!(ctx, x5833, x3, 32);
    let x5836: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x5829, x5835, 64),
                        bigint_add!(
                            bigint_sub!(x5806, bigint_mul!(x5829, x5804, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x5837: BytePoly_34 = bigint_nondet_quot!(ctx, x5836, x3, 34);
    let x5838: BytePoly_32 = bigint_nondet_rem!(ctx, x5836, x3, 32);
    let x5839: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x5832, bigint_mul!(x5834, x3, 66), 66),
                        x5804,
                        66
                    ),
                    x5817,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x5835,
        66
    );
    eqz(ctx, &x5839, 276359, 4)?;
    let x5840: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x5837, x3, 66), x5838, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x5829, bigint_sub!(x5804, x5835, 32), 64),
                        x5806,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x5840, 276359, 4)?;
    let x5841: BytePoly_33 = bigint_add!(
        bigint_mul!(x5835, x5821, 33),
        bigint_mul!(x5804, x5823, 33),
        33
    );
    let x5842: BytePoly_33 = bigint_add!(
        bigint_mul!(x5838, x5821, 33),
        bigint_mul!(x5806, x5823, 33),
        33
    );
    let x5843: BytePoly_3 = bigint_nondet_quot!(ctx, x5841, x3, 3);
    let x5844: BytePoly_32 = bigint_nondet_rem!(ctx, x5841, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5843, x3, 35), x5844, 35),
            x5841,
            35
        ),
        260103,
        4,
    )?;
    let x5845: BytePoly_3 = bigint_nondet_quot!(ctx, x5842, x3, 3);
    let x5846: BytePoly_32 = bigint_nondet_rem!(ctx, x5842, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5845, x3, 35), x5846, 35),
            x5842,
            35
        ),
        260103,
        4,
    )?;
    let x5847: BytePoly_64 = bigint_mul!(x5817, x5817, 64);
    let x5848: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x5847, x5847, 64), x5847, 64),
        x2,
        64
    );
    let x5849: BytePoly_64 = bigint_add!(x48, x5848, 64);
    let x5850: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x5820, x5820, 32), x3, 32);
    let x5851: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x5848, x5850, 96), x3, 32);
    let x5852: BytePoly_64 = bigint_mul!(x5820, x5851, 64);
    let x5853: BytePoly_64 = bigint_add!(x5852, x5852, 64);
    let x5854: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x5849, x5853, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5854, x3, 66), x5853, 66),
            x5849,
            66
        ),
        276359,
        4,
    )?;
    let x5855: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x5851, x5851, 64), x3, 64), x3, 64),
            x5817,
            64
        ),
        x5817,
        64
    );
    let x5856: BytePoly_34 = bigint_nondet_quot!(ctx, x5855, x3, 34);
    let x5857: BytePoly_32 = bigint_nondet_rem!(ctx, x5855, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5856, x3, 66), x5857, 66),
            x5855,
            66
        ),
        276359,
        4,
    )?;
    let x5858: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x5851, x5857, 64), 64), x3, 64),
            x5820,
            64
        ),
        bigint_mul!(x5851, x5817, 64),
        64
    );
    let x5859: BytePoly_34 = bigint_nondet_quot!(ctx, x5858, x3, 34);
    let x5860: BytePoly_32 = bigint_nondet_rem!(ctx, x5858, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5859, x3, 66), x5860, 66),
            x5858,
            66
        ),
        276359,
        4,
    )?;
    let x5861: BytePoly_1 = bigint_nondet_rem!(ctx, x5822, x4, 1);
    let x5862: BytePoly_32 = bigint_nondet_quot!(ctx, x5822, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5862, x4, 33), x5861, 33),
            x5822,
            33
        ),
        260103,
        4,
    )?;
    let x5863: BytePoly_1 = bigint_sub!(x5, x5861, 1);
    eqz(ctx, &bigint_mul!(x5861, x5863, 2), 8131, 2)?;
    let x5864: BytePoly_32 = bigint_add!(bigint_sub!(x5860, x5846, 32), x3, 32);
    let x5865: BytePoly_32 = bigint_add!(bigint_sub!(x5857, x5844, 32), x3, 32);
    let x5866: BytePoly_32 = bigint_nondet_inv!(ctx, x5865, x3, 32);
    let x5867: BytePoly_64 = bigint_mul!(x5865, x5866, 64);
    let x5868: BytePoly_34 = bigint_nondet_quot!(ctx, x5867, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x5867, bigint_mul!(x5868, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x5869: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x5864, x5866, 64), x3, 32);
    let x5870: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x5869, x5865, 64), x5864, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x5871: BytePoly_34 = bigint_nondet_quot!(ctx, x5870, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x5870, bigint_mul!(x5871, x3, 66), 66),
        276359,
        4,
    )?;
    let x5872: BytePoly_64 = bigint_mul!(x5869, x5869, 64);
    let x5873: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x5872, x5844, 64), x3, 64),
            x5857,
            64
        ),
        x3,
        64
    );
    let x5874: BytePoly_34 = bigint_nondet_quot!(ctx, x5873, x3, 34);
    let x5875: BytePoly_32 = bigint_nondet_rem!(ctx, x5873, x3, 32);
    let x5876: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x5869, x5875, 64),
                        bigint_add!(
                            bigint_sub!(x5846, bigint_mul!(x5869, x5844, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x5877: BytePoly_34 = bigint_nondet_quot!(ctx, x5876, x3, 34);
    let x5878: BytePoly_32 = bigint_nondet_rem!(ctx, x5876, x3, 32);
    let x5879: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x5872, bigint_mul!(x5874, x3, 66), 66),
                        x5844,
                        66
                    ),
                    x5857,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x5875,
        66
    );
    eqz(ctx, &x5879, 276359, 4)?;
    let x5880: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x5877, x3, 66), x5878, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x5869, bigint_sub!(x5844, x5875, 32), 64),
                        x5846,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x5880, 276359, 4)?;
    let x5881: BytePoly_33 = bigint_add!(
        bigint_mul!(x5875, x5861, 33),
        bigint_mul!(x5844, x5863, 33),
        33
    );
    let x5882: BytePoly_33 = bigint_add!(
        bigint_mul!(x5878, x5861, 33),
        bigint_mul!(x5846, x5863, 33),
        33
    );
    let x5883: BytePoly_3 = bigint_nondet_quot!(ctx, x5881, x3, 3);
    let x5884: BytePoly_32 = bigint_nondet_rem!(ctx, x5881, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5883, x3, 35), x5884, 35),
            x5881,
            35
        ),
        260103,
        4,
    )?;
    let x5885: BytePoly_3 = bigint_nondet_quot!(ctx, x5882, x3, 3);
    let x5886: BytePoly_32 = bigint_nondet_rem!(ctx, x5882, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5885, x3, 35), x5886, 35),
            x5882,
            35
        ),
        260103,
        4,
    )?;
    let x5887: BytePoly_64 = bigint_mul!(x5857, x5857, 64);
    let x5888: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x5887, x5887, 64), x5887, 64),
        x2,
        64
    );
    let x5889: BytePoly_64 = bigint_add!(x48, x5888, 64);
    let x5890: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x5860, x5860, 32), x3, 32);
    let x5891: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x5888, x5890, 96), x3, 32);
    let x5892: BytePoly_64 = bigint_mul!(x5860, x5891, 64);
    let x5893: BytePoly_64 = bigint_add!(x5892, x5892, 64);
    let x5894: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x5889, x5893, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5894, x3, 66), x5893, 66),
            x5889,
            66
        ),
        276359,
        4,
    )?;
    let x5895: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x5891, x5891, 64), x3, 64), x3, 64),
            x5857,
            64
        ),
        x5857,
        64
    );
    let x5896: BytePoly_34 = bigint_nondet_quot!(ctx, x5895, x3, 34);
    let x5897: BytePoly_32 = bigint_nondet_rem!(ctx, x5895, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5896, x3, 66), x5897, 66),
            x5895,
            66
        ),
        276359,
        4,
    )?;
    let x5898: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x5891, x5897, 64), 64), x3, 64),
            x5860,
            64
        ),
        bigint_mul!(x5891, x5857, 64),
        64
    );
    let x5899: BytePoly_34 = bigint_nondet_quot!(ctx, x5898, x3, 34);
    let x5900: BytePoly_32 = bigint_nondet_rem!(ctx, x5898, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5899, x3, 66), x5900, 66),
            x5898,
            66
        ),
        276359,
        4,
    )?;
    let x5901: BytePoly_1 = bigint_nondet_rem!(ctx, x5862, x4, 1);
    let x5902: BytePoly_32 = bigint_nondet_quot!(ctx, x5862, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5902, x4, 33), x5901, 33),
            x5862,
            33
        ),
        260103,
        4,
    )?;
    let x5903: BytePoly_1 = bigint_sub!(x5, x5901, 1);
    eqz(ctx, &bigint_mul!(x5901, x5903, 2), 8131, 2)?;
    let x5904: BytePoly_32 = bigint_add!(bigint_sub!(x5900, x5886, 32), x3, 32);
    let x5905: BytePoly_32 = bigint_add!(bigint_sub!(x5897, x5884, 32), x3, 32);
    let x5906: BytePoly_32 = bigint_nondet_inv!(ctx, x5905, x3, 32);
    let x5907: BytePoly_64 = bigint_mul!(x5905, x5906, 64);
    let x5908: BytePoly_34 = bigint_nondet_quot!(ctx, x5907, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x5907, bigint_mul!(x5908, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x5909: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x5904, x5906, 64), x3, 32);
    let x5910: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x5909, x5905, 64), x5904, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x5911: BytePoly_34 = bigint_nondet_quot!(ctx, x5910, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x5910, bigint_mul!(x5911, x3, 66), 66),
        276359,
        4,
    )?;
    let x5912: BytePoly_64 = bigint_mul!(x5909, x5909, 64);
    let x5913: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x5912, x5884, 64), x3, 64),
            x5897,
            64
        ),
        x3,
        64
    );
    let x5914: BytePoly_34 = bigint_nondet_quot!(ctx, x5913, x3, 34);
    let x5915: BytePoly_32 = bigint_nondet_rem!(ctx, x5913, x3, 32);
    let x5916: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x5909, x5915, 64),
                        bigint_add!(
                            bigint_sub!(x5886, bigint_mul!(x5909, x5884, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x5917: BytePoly_34 = bigint_nondet_quot!(ctx, x5916, x3, 34);
    let x5918: BytePoly_32 = bigint_nondet_rem!(ctx, x5916, x3, 32);
    let x5919: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x5912, bigint_mul!(x5914, x3, 66), 66),
                        x5884,
                        66
                    ),
                    x5897,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x5915,
        66
    );
    eqz(ctx, &x5919, 276359, 4)?;
    let x5920: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x5917, x3, 66), x5918, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x5909, bigint_sub!(x5884, x5915, 32), 64),
                        x5886,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x5920, 276359, 4)?;
    let x5921: BytePoly_33 = bigint_add!(
        bigint_mul!(x5915, x5901, 33),
        bigint_mul!(x5884, x5903, 33),
        33
    );
    let x5922: BytePoly_33 = bigint_add!(
        bigint_mul!(x5918, x5901, 33),
        bigint_mul!(x5886, x5903, 33),
        33
    );
    let x5923: BytePoly_3 = bigint_nondet_quot!(ctx, x5921, x3, 3);
    let x5924: BytePoly_32 = bigint_nondet_rem!(ctx, x5921, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5923, x3, 35), x5924, 35),
            x5921,
            35
        ),
        260103,
        4,
    )?;
    let x5925: BytePoly_3 = bigint_nondet_quot!(ctx, x5922, x3, 3);
    let x5926: BytePoly_32 = bigint_nondet_rem!(ctx, x5922, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5925, x3, 35), x5926, 35),
            x5922,
            35
        ),
        260103,
        4,
    )?;
    let x5927: BytePoly_64 = bigint_mul!(x5897, x5897, 64);
    let x5928: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x5927, x5927, 64), x5927, 64),
        x2,
        64
    );
    let x5929: BytePoly_64 = bigint_add!(x48, x5928, 64);
    let x5930: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x5900, x5900, 32), x3, 32);
    let x5931: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x5928, x5930, 96), x3, 32);
    let x5932: BytePoly_64 = bigint_mul!(x5900, x5931, 64);
    let x5933: BytePoly_64 = bigint_add!(x5932, x5932, 64);
    let x5934: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x5929, x5933, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5934, x3, 66), x5933, 66),
            x5929,
            66
        ),
        276359,
        4,
    )?;
    let x5935: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x5931, x5931, 64), x3, 64), x3, 64),
            x5897,
            64
        ),
        x5897,
        64
    );
    let x5936: BytePoly_34 = bigint_nondet_quot!(ctx, x5935, x3, 34);
    let x5937: BytePoly_32 = bigint_nondet_rem!(ctx, x5935, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5936, x3, 66), x5937, 66),
            x5935,
            66
        ),
        276359,
        4,
    )?;
    let x5938: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x5931, x5937, 64), 64), x3, 64),
            x5900,
            64
        ),
        bigint_mul!(x5931, x5897, 64),
        64
    );
    let x5939: BytePoly_34 = bigint_nondet_quot!(ctx, x5938, x3, 34);
    let x5940: BytePoly_32 = bigint_nondet_rem!(ctx, x5938, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5939, x3, 66), x5940, 66),
            x5938,
            66
        ),
        276359,
        4,
    )?;
    let x5941: BytePoly_1 = bigint_nondet_rem!(ctx, x5902, x4, 1);
    let x5942: BytePoly_32 = bigint_nondet_quot!(ctx, x5902, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5942, x4, 33), x5941, 33),
            x5902,
            33
        ),
        260103,
        4,
    )?;
    let x5943: BytePoly_1 = bigint_sub!(x5, x5941, 1);
    eqz(ctx, &bigint_mul!(x5941, x5943, 2), 8131, 2)?;
    let x5944: BytePoly_32 = bigint_add!(bigint_sub!(x5940, x5926, 32), x3, 32);
    let x5945: BytePoly_32 = bigint_add!(bigint_sub!(x5937, x5924, 32), x3, 32);
    let x5946: BytePoly_32 = bigint_nondet_inv!(ctx, x5945, x3, 32);
    let x5947: BytePoly_64 = bigint_mul!(x5945, x5946, 64);
    let x5948: BytePoly_34 = bigint_nondet_quot!(ctx, x5947, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x5947, bigint_mul!(x5948, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x5949: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x5944, x5946, 64), x3, 32);
    let x5950: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x5949, x5945, 64), x5944, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x5951: BytePoly_34 = bigint_nondet_quot!(ctx, x5950, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x5950, bigint_mul!(x5951, x3, 66), 66),
        276359,
        4,
    )?;
    let x5952: BytePoly_64 = bigint_mul!(x5949, x5949, 64);
    let x5953: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x5952, x5924, 64), x3, 64),
            x5937,
            64
        ),
        x3,
        64
    );
    let x5954: BytePoly_34 = bigint_nondet_quot!(ctx, x5953, x3, 34);
    let x5955: BytePoly_32 = bigint_nondet_rem!(ctx, x5953, x3, 32);
    let x5956: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x5949, x5955, 64),
                        bigint_add!(
                            bigint_sub!(x5926, bigint_mul!(x5949, x5924, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x5957: BytePoly_34 = bigint_nondet_quot!(ctx, x5956, x3, 34);
    let x5958: BytePoly_32 = bigint_nondet_rem!(ctx, x5956, x3, 32);
    let x5959: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x5952, bigint_mul!(x5954, x3, 66), 66),
                        x5924,
                        66
                    ),
                    x5937,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x5955,
        66
    );
    eqz(ctx, &x5959, 276359, 4)?;
    let x5960: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x5957, x3, 66), x5958, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x5949, bigint_sub!(x5924, x5955, 32), 64),
                        x5926,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x5960, 276359, 4)?;
    let x5961: BytePoly_33 = bigint_add!(
        bigint_mul!(x5955, x5941, 33),
        bigint_mul!(x5924, x5943, 33),
        33
    );
    let x5962: BytePoly_33 = bigint_add!(
        bigint_mul!(x5958, x5941, 33),
        bigint_mul!(x5926, x5943, 33),
        33
    );
    let x5963: BytePoly_3 = bigint_nondet_quot!(ctx, x5961, x3, 3);
    let x5964: BytePoly_32 = bigint_nondet_rem!(ctx, x5961, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5963, x3, 35), x5964, 35),
            x5961,
            35
        ),
        260103,
        4,
    )?;
    let x5965: BytePoly_3 = bigint_nondet_quot!(ctx, x5962, x3, 3);
    let x5966: BytePoly_32 = bigint_nondet_rem!(ctx, x5962, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5965, x3, 35), x5966, 35),
            x5962,
            35
        ),
        260103,
        4,
    )?;
    let x5967: BytePoly_64 = bigint_mul!(x5937, x5937, 64);
    let x5968: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x5967, x5967, 64), x5967, 64),
        x2,
        64
    );
    let x5969: BytePoly_64 = bigint_add!(x48, x5968, 64);
    let x5970: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x5940, x5940, 32), x3, 32);
    let x5971: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x5968, x5970, 96), x3, 32);
    let x5972: BytePoly_64 = bigint_mul!(x5940, x5971, 64);
    let x5973: BytePoly_64 = bigint_add!(x5972, x5972, 64);
    let x5974: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x5969, x5973, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5974, x3, 66), x5973, 66),
            x5969,
            66
        ),
        276359,
        4,
    )?;
    let x5975: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x5971, x5971, 64), x3, 64), x3, 64),
            x5937,
            64
        ),
        x5937,
        64
    );
    let x5976: BytePoly_34 = bigint_nondet_quot!(ctx, x5975, x3, 34);
    let x5977: BytePoly_32 = bigint_nondet_rem!(ctx, x5975, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5976, x3, 66), x5977, 66),
            x5975,
            66
        ),
        276359,
        4,
    )?;
    let x5978: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x5971, x5977, 64), 64), x3, 64),
            x5940,
            64
        ),
        bigint_mul!(x5971, x5937, 64),
        64
    );
    let x5979: BytePoly_34 = bigint_nondet_quot!(ctx, x5978, x3, 34);
    let x5980: BytePoly_32 = bigint_nondet_rem!(ctx, x5978, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5979, x3, 66), x5980, 66),
            x5978,
            66
        ),
        276359,
        4,
    )?;
    let x5981: BytePoly_1 = bigint_nondet_rem!(ctx, x5942, x4, 1);
    let x5982: BytePoly_32 = bigint_nondet_quot!(ctx, x5942, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5982, x4, 33), x5981, 33),
            x5942,
            33
        ),
        260103,
        4,
    )?;
    let x5983: BytePoly_1 = bigint_sub!(x5, x5981, 1);
    eqz(ctx, &bigint_mul!(x5981, x5983, 2), 8131, 2)?;
    let x5984: BytePoly_32 = bigint_add!(bigint_sub!(x5980, x5966, 32), x3, 32);
    let x5985: BytePoly_32 = bigint_add!(bigint_sub!(x5977, x5964, 32), x3, 32);
    let x5986: BytePoly_32 = bigint_nondet_inv!(ctx, x5985, x3, 32);
    let x5987: BytePoly_64 = bigint_mul!(x5985, x5986, 64);
    let x5988: BytePoly_34 = bigint_nondet_quot!(ctx, x5987, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x5987, bigint_mul!(x5988, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x5989: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x5984, x5986, 64), x3, 32);
    let x5990: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x5989, x5985, 64), x5984, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x5991: BytePoly_34 = bigint_nondet_quot!(ctx, x5990, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x5990, bigint_mul!(x5991, x3, 66), 66),
        276359,
        4,
    )?;
    let x5992: BytePoly_64 = bigint_mul!(x5989, x5989, 64);
    let x5993: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x5992, x5964, 64), x3, 64),
            x5977,
            64
        ),
        x3,
        64
    );
    let x5994: BytePoly_34 = bigint_nondet_quot!(ctx, x5993, x3, 34);
    let x5995: BytePoly_32 = bigint_nondet_rem!(ctx, x5993, x3, 32);
    let x5996: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x5989, x5995, 64),
                        bigint_add!(
                            bigint_sub!(x5966, bigint_mul!(x5989, x5964, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x5997: BytePoly_34 = bigint_nondet_quot!(ctx, x5996, x3, 34);
    let x5998: BytePoly_32 = bigint_nondet_rem!(ctx, x5996, x3, 32);
    let x5999: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x5992, bigint_mul!(x5994, x3, 66), 66),
                        x5964,
                        66
                    ),
                    x5977,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x5995,
        66
    );
    eqz(ctx, &x5999, 276359, 4)?;
    let x6000: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x5997, x3, 66), x5998, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x5989, bigint_sub!(x5964, x5995, 32), 64),
                        x5966,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x6000, 276359, 4)?;
    let x6001: BytePoly_33 = bigint_add!(
        bigint_mul!(x5995, x5981, 33),
        bigint_mul!(x5964, x5983, 33),
        33
    );
    let x6002: BytePoly_33 = bigint_add!(
        bigint_mul!(x5998, x5981, 33),
        bigint_mul!(x5966, x5983, 33),
        33
    );
    let x6003: BytePoly_3 = bigint_nondet_quot!(ctx, x6001, x3, 3);
    let x6004: BytePoly_32 = bigint_nondet_rem!(ctx, x6001, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6003, x3, 35), x6004, 35),
            x6001,
            35
        ),
        260103,
        4,
    )?;
    let x6005: BytePoly_3 = bigint_nondet_quot!(ctx, x6002, x3, 3);
    let x6006: BytePoly_32 = bigint_nondet_rem!(ctx, x6002, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6005, x3, 35), x6006, 35),
            x6002,
            35
        ),
        260103,
        4,
    )?;
    let x6007: BytePoly_64 = bigint_mul!(x5977, x5977, 64);
    let x6008: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x6007, x6007, 64), x6007, 64),
        x2,
        64
    );
    let x6009: BytePoly_64 = bigint_add!(x48, x6008, 64);
    let x6010: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x5980, x5980, 32), x3, 32);
    let x6011: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x6008, x6010, 96), x3, 32);
    let x6012: BytePoly_64 = bigint_mul!(x5980, x6011, 64);
    let x6013: BytePoly_64 = bigint_add!(x6012, x6012, 64);
    let x6014: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x6009, x6013, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6014, x3, 66), x6013, 66),
            x6009,
            66
        ),
        276359,
        4,
    )?;
    let x6015: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x6011, x6011, 64), x3, 64), x3, 64),
            x5977,
            64
        ),
        x5977,
        64
    );
    let x6016: BytePoly_34 = bigint_nondet_quot!(ctx, x6015, x3, 34);
    let x6017: BytePoly_32 = bigint_nondet_rem!(ctx, x6015, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6016, x3, 66), x6017, 66),
            x6015,
            66
        ),
        276359,
        4,
    )?;
    let x6018: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x6011, x6017, 64), 64), x3, 64),
            x5980,
            64
        ),
        bigint_mul!(x6011, x5977, 64),
        64
    );
    let x6019: BytePoly_34 = bigint_nondet_quot!(ctx, x6018, x3, 34);
    let x6020: BytePoly_32 = bigint_nondet_rem!(ctx, x6018, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6019, x3, 66), x6020, 66),
            x6018,
            66
        ),
        276359,
        4,
    )?;
    let x6021: BytePoly_1 = bigint_nondet_rem!(ctx, x5982, x4, 1);
    let x6022: BytePoly_32 = bigint_nondet_quot!(ctx, x5982, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6022, x4, 33), x6021, 33),
            x5982,
            33
        ),
        260103,
        4,
    )?;
    let x6023: BytePoly_1 = bigint_sub!(x5, x6021, 1);
    eqz(ctx, &bigint_mul!(x6021, x6023, 2), 8131, 2)?;
    let x6024: BytePoly_32 = bigint_add!(bigint_sub!(x6020, x6006, 32), x3, 32);
    let x6025: BytePoly_32 = bigint_add!(bigint_sub!(x6017, x6004, 32), x3, 32);
    let x6026: BytePoly_32 = bigint_nondet_inv!(ctx, x6025, x3, 32);
    let x6027: BytePoly_64 = bigint_mul!(x6025, x6026, 64);
    let x6028: BytePoly_34 = bigint_nondet_quot!(ctx, x6027, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x6027, bigint_mul!(x6028, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x6029: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x6024, x6026, 64), x3, 32);
    let x6030: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x6029, x6025, 64), x6024, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x6031: BytePoly_34 = bigint_nondet_quot!(ctx, x6030, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x6030, bigint_mul!(x6031, x3, 66), 66),
        276359,
        4,
    )?;
    let x6032: BytePoly_64 = bigint_mul!(x6029, x6029, 64);
    let x6033: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x6032, x6004, 64), x3, 64),
            x6017,
            64
        ),
        x3,
        64
    );
    let x6034: BytePoly_34 = bigint_nondet_quot!(ctx, x6033, x3, 34);
    let x6035: BytePoly_32 = bigint_nondet_rem!(ctx, x6033, x3, 32);
    let x6036: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x6029, x6035, 64),
                        bigint_add!(
                            bigint_sub!(x6006, bigint_mul!(x6029, x6004, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x6037: BytePoly_34 = bigint_nondet_quot!(ctx, x6036, x3, 34);
    let x6038: BytePoly_32 = bigint_nondet_rem!(ctx, x6036, x3, 32);
    let x6039: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x6032, bigint_mul!(x6034, x3, 66), 66),
                        x6004,
                        66
                    ),
                    x6017,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x6035,
        66
    );
    eqz(ctx, &x6039, 276359, 4)?;
    let x6040: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x6037, x3, 66), x6038, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x6029, bigint_sub!(x6004, x6035, 32), 64),
                        x6006,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x6040, 276359, 4)?;
    let x6041: BytePoly_33 = bigint_add!(
        bigint_mul!(x6035, x6021, 33),
        bigint_mul!(x6004, x6023, 33),
        33
    );
    let x6042: BytePoly_33 = bigint_add!(
        bigint_mul!(x6038, x6021, 33),
        bigint_mul!(x6006, x6023, 33),
        33
    );
    let x6043: BytePoly_3 = bigint_nondet_quot!(ctx, x6041, x3, 3);
    let x6044: BytePoly_32 = bigint_nondet_rem!(ctx, x6041, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6043, x3, 35), x6044, 35),
            x6041,
            35
        ),
        260103,
        4,
    )?;
    let x6045: BytePoly_3 = bigint_nondet_quot!(ctx, x6042, x3, 3);
    let x6046: BytePoly_32 = bigint_nondet_rem!(ctx, x6042, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6045, x3, 35), x6046, 35),
            x6042,
            35
        ),
        260103,
        4,
    )?;
    let x6047: BytePoly_64 = bigint_mul!(x6017, x6017, 64);
    let x6048: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x6047, x6047, 64), x6047, 64),
        x2,
        64
    );
    let x6049: BytePoly_64 = bigint_add!(x48, x6048, 64);
    let x6050: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x6020, x6020, 32), x3, 32);
    let x6051: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x6048, x6050, 96), x3, 32);
    let x6052: BytePoly_64 = bigint_mul!(x6020, x6051, 64);
    let x6053: BytePoly_64 = bigint_add!(x6052, x6052, 64);
    let x6054: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x6049, x6053, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6054, x3, 66), x6053, 66),
            x6049,
            66
        ),
        276359,
        4,
    )?;
    let x6055: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x6051, x6051, 64), x3, 64), x3, 64),
            x6017,
            64
        ),
        x6017,
        64
    );
    let x6056: BytePoly_34 = bigint_nondet_quot!(ctx, x6055, x3, 34);
    let x6057: BytePoly_32 = bigint_nondet_rem!(ctx, x6055, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6056, x3, 66), x6057, 66),
            x6055,
            66
        ),
        276359,
        4,
    )?;
    let x6058: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x6051, x6057, 64), 64), x3, 64),
            x6020,
            64
        ),
        bigint_mul!(x6051, x6017, 64),
        64
    );
    let x6059: BytePoly_34 = bigint_nondet_quot!(ctx, x6058, x3, 34);
    let x6060: BytePoly_32 = bigint_nondet_rem!(ctx, x6058, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6059, x3, 66), x6060, 66),
            x6058,
            66
        ),
        276359,
        4,
    )?;
    let x6061: BytePoly_1 = bigint_nondet_rem!(ctx, x6022, x4, 1);
    let x6062: BytePoly_32 = bigint_nondet_quot!(ctx, x6022, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6062, x4, 33), x6061, 33),
            x6022,
            33
        ),
        260103,
        4,
    )?;
    let x6063: BytePoly_1 = bigint_sub!(x5, x6061, 1);
    eqz(ctx, &bigint_mul!(x6061, x6063, 2), 8131, 2)?;
    let x6064: BytePoly_32 = bigint_add!(bigint_sub!(x6060, x6046, 32), x3, 32);
    let x6065: BytePoly_32 = bigint_add!(bigint_sub!(x6057, x6044, 32), x3, 32);
    let x6066: BytePoly_32 = bigint_nondet_inv!(ctx, x6065, x3, 32);
    let x6067: BytePoly_64 = bigint_mul!(x6065, x6066, 64);
    let x6068: BytePoly_34 = bigint_nondet_quot!(ctx, x6067, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x6067, bigint_mul!(x6068, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x6069: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x6064, x6066, 64), x3, 32);
    let x6070: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x6069, x6065, 64), x6064, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x6071: BytePoly_34 = bigint_nondet_quot!(ctx, x6070, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x6070, bigint_mul!(x6071, x3, 66), 66),
        276359,
        4,
    )?;
    let x6072: BytePoly_64 = bigint_mul!(x6069, x6069, 64);
    let x6073: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x6072, x6044, 64), x3, 64),
            x6057,
            64
        ),
        x3,
        64
    );
    let x6074: BytePoly_34 = bigint_nondet_quot!(ctx, x6073, x3, 34);
    let x6075: BytePoly_32 = bigint_nondet_rem!(ctx, x6073, x3, 32);
    let x6076: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x6069, x6075, 64),
                        bigint_add!(
                            bigint_sub!(x6046, bigint_mul!(x6069, x6044, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x6077: BytePoly_34 = bigint_nondet_quot!(ctx, x6076, x3, 34);
    let x6078: BytePoly_32 = bigint_nondet_rem!(ctx, x6076, x3, 32);
    let x6079: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x6072, bigint_mul!(x6074, x3, 66), 66),
                        x6044,
                        66
                    ),
                    x6057,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x6075,
        66
    );
    eqz(ctx, &x6079, 276359, 4)?;
    let x6080: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x6077, x3, 66), x6078, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x6069, bigint_sub!(x6044, x6075, 32), 64),
                        x6046,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x6080, 276359, 4)?;
    let x6081: BytePoly_33 = bigint_add!(
        bigint_mul!(x6075, x6061, 33),
        bigint_mul!(x6044, x6063, 33),
        33
    );
    let x6082: BytePoly_33 = bigint_add!(
        bigint_mul!(x6078, x6061, 33),
        bigint_mul!(x6046, x6063, 33),
        33
    );
    let x6083: BytePoly_3 = bigint_nondet_quot!(ctx, x6081, x3, 3);
    let x6084: BytePoly_32 = bigint_nondet_rem!(ctx, x6081, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6083, x3, 35), x6084, 35),
            x6081,
            35
        ),
        260103,
        4,
    )?;
    let x6085: BytePoly_3 = bigint_nondet_quot!(ctx, x6082, x3, 3);
    let x6086: BytePoly_32 = bigint_nondet_rem!(ctx, x6082, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6085, x3, 35), x6086, 35),
            x6082,
            35
        ),
        260103,
        4,
    )?;
    let x6087: BytePoly_64 = bigint_mul!(x6057, x6057, 64);
    let x6088: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x6087, x6087, 64), x6087, 64),
        x2,
        64
    );
    let x6089: BytePoly_64 = bigint_add!(x48, x6088, 64);
    let x6090: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x6060, x6060, 32), x3, 32);
    let x6091: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x6088, x6090, 96), x3, 32);
    let x6092: BytePoly_64 = bigint_mul!(x6060, x6091, 64);
    let x6093: BytePoly_64 = bigint_add!(x6092, x6092, 64);
    let x6094: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x6089, x6093, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6094, x3, 66), x6093, 66),
            x6089,
            66
        ),
        276359,
        4,
    )?;
    let x6095: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x6091, x6091, 64), x3, 64), x3, 64),
            x6057,
            64
        ),
        x6057,
        64
    );
    let x6096: BytePoly_34 = bigint_nondet_quot!(ctx, x6095, x3, 34);
    let x6097: BytePoly_32 = bigint_nondet_rem!(ctx, x6095, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6096, x3, 66), x6097, 66),
            x6095,
            66
        ),
        276359,
        4,
    )?;
    let x6098: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x6091, x6097, 64), 64), x3, 64),
            x6060,
            64
        ),
        bigint_mul!(x6091, x6057, 64),
        64
    );
    let x6099: BytePoly_34 = bigint_nondet_quot!(ctx, x6098, x3, 34);
    let x6100: BytePoly_32 = bigint_nondet_rem!(ctx, x6098, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6099, x3, 66), x6100, 66),
            x6098,
            66
        ),
        276359,
        4,
    )?;
    let x6101: BytePoly_1 = bigint_nondet_rem!(ctx, x6062, x4, 1);
    let x6102: BytePoly_32 = bigint_nondet_quot!(ctx, x6062, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6102, x4, 33), x6101, 33),
            x6062,
            33
        ),
        260103,
        4,
    )?;
    let x6103: BytePoly_1 = bigint_sub!(x5, x6101, 1);
    eqz(ctx, &bigint_mul!(x6101, x6103, 2), 8131, 2)?;
    let x6104: BytePoly_32 = bigint_add!(bigint_sub!(x6100, x6086, 32), x3, 32);
    let x6105: BytePoly_32 = bigint_add!(bigint_sub!(x6097, x6084, 32), x3, 32);
    let x6106: BytePoly_32 = bigint_nondet_inv!(ctx, x6105, x3, 32);
    let x6107: BytePoly_64 = bigint_mul!(x6105, x6106, 64);
    let x6108: BytePoly_34 = bigint_nondet_quot!(ctx, x6107, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x6107, bigint_mul!(x6108, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x6109: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x6104, x6106, 64), x3, 32);
    let x6110: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x6109, x6105, 64), x6104, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x6111: BytePoly_34 = bigint_nondet_quot!(ctx, x6110, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x6110, bigint_mul!(x6111, x3, 66), 66),
        276359,
        4,
    )?;
    let x6112: BytePoly_64 = bigint_mul!(x6109, x6109, 64);
    let x6113: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x6112, x6084, 64), x3, 64),
            x6097,
            64
        ),
        x3,
        64
    );
    let x6114: BytePoly_34 = bigint_nondet_quot!(ctx, x6113, x3, 34);
    let x6115: BytePoly_32 = bigint_nondet_rem!(ctx, x6113, x3, 32);
    let x6116: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x6109, x6115, 64),
                        bigint_add!(
                            bigint_sub!(x6086, bigint_mul!(x6109, x6084, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x6117: BytePoly_34 = bigint_nondet_quot!(ctx, x6116, x3, 34);
    let x6118: BytePoly_32 = bigint_nondet_rem!(ctx, x6116, x3, 32);
    let x6119: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x6112, bigint_mul!(x6114, x3, 66), 66),
                        x6084,
                        66
                    ),
                    x6097,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x6115,
        66
    );
    eqz(ctx, &x6119, 276359, 4)?;
    let x6120: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x6117, x3, 66), x6118, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x6109, bigint_sub!(x6084, x6115, 32), 64),
                        x6086,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x6120, 276359, 4)?;
    let x6121: BytePoly_33 = bigint_add!(
        bigint_mul!(x6115, x6101, 33),
        bigint_mul!(x6084, x6103, 33),
        33
    );
    let x6122: BytePoly_33 = bigint_add!(
        bigint_mul!(x6118, x6101, 33),
        bigint_mul!(x6086, x6103, 33),
        33
    );
    let x6123: BytePoly_3 = bigint_nondet_quot!(ctx, x6121, x3, 3);
    let x6124: BytePoly_32 = bigint_nondet_rem!(ctx, x6121, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6123, x3, 35), x6124, 35),
            x6121,
            35
        ),
        260103,
        4,
    )?;
    let x6125: BytePoly_3 = bigint_nondet_quot!(ctx, x6122, x3, 3);
    let x6126: BytePoly_32 = bigint_nondet_rem!(ctx, x6122, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6125, x3, 35), x6126, 35),
            x6122,
            35
        ),
        260103,
        4,
    )?;
    let x6127: BytePoly_64 = bigint_mul!(x6097, x6097, 64);
    let x6128: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x6127, x6127, 64), x6127, 64),
        x2,
        64
    );
    let x6129: BytePoly_64 = bigint_add!(x48, x6128, 64);
    let x6130: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x6100, x6100, 32), x3, 32);
    let x6131: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x6128, x6130, 96), x3, 32);
    let x6132: BytePoly_64 = bigint_mul!(x6100, x6131, 64);
    let x6133: BytePoly_64 = bigint_add!(x6132, x6132, 64);
    let x6134: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x6129, x6133, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6134, x3, 66), x6133, 66),
            x6129,
            66
        ),
        276359,
        4,
    )?;
    let x6135: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x6131, x6131, 64), x3, 64), x3, 64),
            x6097,
            64
        ),
        x6097,
        64
    );
    let x6136: BytePoly_34 = bigint_nondet_quot!(ctx, x6135, x3, 34);
    let x6137: BytePoly_32 = bigint_nondet_rem!(ctx, x6135, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6136, x3, 66), x6137, 66),
            x6135,
            66
        ),
        276359,
        4,
    )?;
    let x6138: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x6131, x6137, 64), 64), x3, 64),
            x6100,
            64
        ),
        bigint_mul!(x6131, x6097, 64),
        64
    );
    let x6139: BytePoly_34 = bigint_nondet_quot!(ctx, x6138, x3, 34);
    let x6140: BytePoly_32 = bigint_nondet_rem!(ctx, x6138, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6139, x3, 66), x6140, 66),
            x6138,
            66
        ),
        276359,
        4,
    )?;
    let x6141: BytePoly_1 = bigint_nondet_rem!(ctx, x6102, x4, 1);
    let x6142: BytePoly_32 = bigint_nondet_quot!(ctx, x6102, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6142, x4, 33), x6141, 33),
            x6102,
            33
        ),
        260103,
        4,
    )?;
    let x6143: BytePoly_1 = bigint_sub!(x5, x6141, 1);
    eqz(ctx, &bigint_mul!(x6141, x6143, 2), 8131, 2)?;
    let x6144: BytePoly_32 = bigint_add!(bigint_sub!(x6140, x6126, 32), x3, 32);
    let x6145: BytePoly_32 = bigint_add!(bigint_sub!(x6137, x6124, 32), x3, 32);
    let x6146: BytePoly_32 = bigint_nondet_inv!(ctx, x6145, x3, 32);
    let x6147: BytePoly_64 = bigint_mul!(x6145, x6146, 64);
    let x6148: BytePoly_34 = bigint_nondet_quot!(ctx, x6147, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x6147, bigint_mul!(x6148, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x6149: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x6144, x6146, 64), x3, 32);
    let x6150: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x6149, x6145, 64), x6144, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x6151: BytePoly_34 = bigint_nondet_quot!(ctx, x6150, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x6150, bigint_mul!(x6151, x3, 66), 66),
        276359,
        4,
    )?;
    let x6152: BytePoly_64 = bigint_mul!(x6149, x6149, 64);
    let x6153: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x6152, x6124, 64), x3, 64),
            x6137,
            64
        ),
        x3,
        64
    );
    let x6154: BytePoly_34 = bigint_nondet_quot!(ctx, x6153, x3, 34);
    let x6155: BytePoly_32 = bigint_nondet_rem!(ctx, x6153, x3, 32);
    let x6156: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x6149, x6155, 64),
                        bigint_add!(
                            bigint_sub!(x6126, bigint_mul!(x6149, x6124, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x6157: BytePoly_34 = bigint_nondet_quot!(ctx, x6156, x3, 34);
    let x6158: BytePoly_32 = bigint_nondet_rem!(ctx, x6156, x3, 32);
    let x6159: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x6152, bigint_mul!(x6154, x3, 66), 66),
                        x6124,
                        66
                    ),
                    x6137,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x6155,
        66
    );
    eqz(ctx, &x6159, 276359, 4)?;
    let x6160: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x6157, x3, 66), x6158, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x6149, bigint_sub!(x6124, x6155, 32), 64),
                        x6126,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x6160, 276359, 4)?;
    let x6161: BytePoly_33 = bigint_add!(
        bigint_mul!(x6155, x6141, 33),
        bigint_mul!(x6124, x6143, 33),
        33
    );
    let x6162: BytePoly_33 = bigint_add!(
        bigint_mul!(x6158, x6141, 33),
        bigint_mul!(x6126, x6143, 33),
        33
    );
    let x6163: BytePoly_3 = bigint_nondet_quot!(ctx, x6161, x3, 3);
    let x6164: BytePoly_32 = bigint_nondet_rem!(ctx, x6161, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6163, x3, 35), x6164, 35),
            x6161,
            35
        ),
        260103,
        4,
    )?;
    let x6165: BytePoly_3 = bigint_nondet_quot!(ctx, x6162, x3, 3);
    let x6166: BytePoly_32 = bigint_nondet_rem!(ctx, x6162, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6165, x3, 35), x6166, 35),
            x6162,
            35
        ),
        260103,
        4,
    )?;
    let x6167: BytePoly_64 = bigint_mul!(x6137, x6137, 64);
    let x6168: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x6167, x6167, 64), x6167, 64),
        x2,
        64
    );
    let x6169: BytePoly_64 = bigint_add!(x48, x6168, 64);
    let x6170: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x6140, x6140, 32), x3, 32);
    let x6171: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x6168, x6170, 96), x3, 32);
    let x6172: BytePoly_64 = bigint_mul!(x6140, x6171, 64);
    let x6173: BytePoly_64 = bigint_add!(x6172, x6172, 64);
    let x6174: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x6169, x6173, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6174, x3, 66), x6173, 66),
            x6169,
            66
        ),
        276359,
        4,
    )?;
    let x6175: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x6171, x6171, 64), x3, 64), x3, 64),
            x6137,
            64
        ),
        x6137,
        64
    );
    let x6176: BytePoly_34 = bigint_nondet_quot!(ctx, x6175, x3, 34);
    let x6177: BytePoly_32 = bigint_nondet_rem!(ctx, x6175, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6176, x3, 66), x6177, 66),
            x6175,
            66
        ),
        276359,
        4,
    )?;
    let x6178: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x6171, x6177, 64), 64), x3, 64),
            x6140,
            64
        ),
        bigint_mul!(x6171, x6137, 64),
        64
    );
    let x6179: BytePoly_34 = bigint_nondet_quot!(ctx, x6178, x3, 34);
    let x6180: BytePoly_32 = bigint_nondet_rem!(ctx, x6178, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6179, x3, 66), x6180, 66),
            x6178,
            66
        ),
        276359,
        4,
    )?;
    let x6181: BytePoly_1 = bigint_nondet_rem!(ctx, x6142, x4, 1);
    let x6182: BytePoly_32 = bigint_nondet_quot!(ctx, x6142, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6182, x4, 33), x6181, 33),
            x6142,
            33
        ),
        260103,
        4,
    )?;
    let x6183: BytePoly_1 = bigint_sub!(x5, x6181, 1);
    eqz(ctx, &bigint_mul!(x6181, x6183, 2), 8131, 2)?;
    let x6184: BytePoly_32 = bigint_add!(bigint_sub!(x6180, x6166, 32), x3, 32);
    let x6185: BytePoly_32 = bigint_add!(bigint_sub!(x6177, x6164, 32), x3, 32);
    let x6186: BytePoly_32 = bigint_nondet_inv!(ctx, x6185, x3, 32);
    let x6187: BytePoly_64 = bigint_mul!(x6185, x6186, 64);
    let x6188: BytePoly_34 = bigint_nondet_quot!(ctx, x6187, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x6187, bigint_mul!(x6188, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x6189: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x6184, x6186, 64), x3, 32);
    let x6190: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x6189, x6185, 64), x6184, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x6191: BytePoly_34 = bigint_nondet_quot!(ctx, x6190, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x6190, bigint_mul!(x6191, x3, 66), 66),
        276359,
        4,
    )?;
    let x6192: BytePoly_64 = bigint_mul!(x6189, x6189, 64);
    let x6193: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x6192, x6164, 64), x3, 64),
            x6177,
            64
        ),
        x3,
        64
    );
    let x6194: BytePoly_34 = bigint_nondet_quot!(ctx, x6193, x3, 34);
    let x6195: BytePoly_32 = bigint_nondet_rem!(ctx, x6193, x3, 32);
    let x6196: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x6189, x6195, 64),
                        bigint_add!(
                            bigint_sub!(x6166, bigint_mul!(x6189, x6164, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x6197: BytePoly_34 = bigint_nondet_quot!(ctx, x6196, x3, 34);
    let x6198: BytePoly_32 = bigint_nondet_rem!(ctx, x6196, x3, 32);
    let x6199: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x6192, bigint_mul!(x6194, x3, 66), 66),
                        x6164,
                        66
                    ),
                    x6177,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x6195,
        66
    );
    eqz(ctx, &x6199, 276359, 4)?;
    let x6200: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x6197, x3, 66), x6198, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x6189, bigint_sub!(x6164, x6195, 32), 64),
                        x6166,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x6200, 276359, 4)?;
    let x6201: BytePoly_33 = bigint_add!(
        bigint_mul!(x6195, x6181, 33),
        bigint_mul!(x6164, x6183, 33),
        33
    );
    let x6202: BytePoly_33 = bigint_add!(
        bigint_mul!(x6198, x6181, 33),
        bigint_mul!(x6166, x6183, 33),
        33
    );
    let x6203: BytePoly_3 = bigint_nondet_quot!(ctx, x6201, x3, 3);
    let x6204: BytePoly_32 = bigint_nondet_rem!(ctx, x6201, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6203, x3, 35), x6204, 35),
            x6201,
            35
        ),
        260103,
        4,
    )?;
    let x6205: BytePoly_3 = bigint_nondet_quot!(ctx, x6202, x3, 3);
    let x6206: BytePoly_32 = bigint_nondet_rem!(ctx, x6202, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6205, x3, 35), x6206, 35),
            x6202,
            35
        ),
        260103,
        4,
    )?;
    let x6207: BytePoly_64 = bigint_mul!(x6177, x6177, 64);
    let x6208: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x6207, x6207, 64), x6207, 64),
        x2,
        64
    );
    let x6209: BytePoly_64 = bigint_add!(x48, x6208, 64);
    let x6210: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x6180, x6180, 32), x3, 32);
    let x6211: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x6208, x6210, 96), x3, 32);
    let x6212: BytePoly_64 = bigint_mul!(x6180, x6211, 64);
    let x6213: BytePoly_64 = bigint_add!(x6212, x6212, 64);
    let x6214: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x6209, x6213, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6214, x3, 66), x6213, 66),
            x6209,
            66
        ),
        276359,
        4,
    )?;
    let x6215: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x6211, x6211, 64), x3, 64), x3, 64),
            x6177,
            64
        ),
        x6177,
        64
    );
    let x6216: BytePoly_34 = bigint_nondet_quot!(ctx, x6215, x3, 34);
    let x6217: BytePoly_32 = bigint_nondet_rem!(ctx, x6215, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6216, x3, 66), x6217, 66),
            x6215,
            66
        ),
        276359,
        4,
    )?;
    let x6218: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x6211, x6217, 64), 64), x3, 64),
            x6180,
            64
        ),
        bigint_mul!(x6211, x6177, 64),
        64
    );
    let x6219: BytePoly_34 = bigint_nondet_quot!(ctx, x6218, x3, 34);
    let x6220: BytePoly_32 = bigint_nondet_rem!(ctx, x6218, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6219, x3, 66), x6220, 66),
            x6218,
            66
        ),
        276359,
        4,
    )?;
    let x6221: BytePoly_1 = bigint_nondet_rem!(ctx, x6182, x4, 1);
    let x6222: BytePoly_32 = bigint_nondet_quot!(ctx, x6182, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6222, x4, 33), x6221, 33),
            x6182,
            33
        ),
        260103,
        4,
    )?;
    let x6223: BytePoly_1 = bigint_sub!(x5, x6221, 1);
    eqz(ctx, &bigint_mul!(x6221, x6223, 2), 8131, 2)?;
    let x6224: BytePoly_32 = bigint_add!(bigint_sub!(x6220, x6206, 32), x3, 32);
    let x6225: BytePoly_32 = bigint_add!(bigint_sub!(x6217, x6204, 32), x3, 32);
    let x6226: BytePoly_32 = bigint_nondet_inv!(ctx, x6225, x3, 32);
    let x6227: BytePoly_64 = bigint_mul!(x6225, x6226, 64);
    let x6228: BytePoly_34 = bigint_nondet_quot!(ctx, x6227, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x6227, bigint_mul!(x6228, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x6229: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x6224, x6226, 64), x3, 32);
    let x6230: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x6229, x6225, 64), x6224, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x6231: BytePoly_34 = bigint_nondet_quot!(ctx, x6230, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x6230, bigint_mul!(x6231, x3, 66), 66),
        276359,
        4,
    )?;
    let x6232: BytePoly_64 = bigint_mul!(x6229, x6229, 64);
    let x6233: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x6232, x6204, 64), x3, 64),
            x6217,
            64
        ),
        x3,
        64
    );
    let x6234: BytePoly_34 = bigint_nondet_quot!(ctx, x6233, x3, 34);
    let x6235: BytePoly_32 = bigint_nondet_rem!(ctx, x6233, x3, 32);
    let x6236: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x6229, x6235, 64),
                        bigint_add!(
                            bigint_sub!(x6206, bigint_mul!(x6229, x6204, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x6237: BytePoly_34 = bigint_nondet_quot!(ctx, x6236, x3, 34);
    let x6238: BytePoly_32 = bigint_nondet_rem!(ctx, x6236, x3, 32);
    let x6239: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x6232, bigint_mul!(x6234, x3, 66), 66),
                        x6204,
                        66
                    ),
                    x6217,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x6235,
        66
    );
    eqz(ctx, &x6239, 276359, 4)?;
    let x6240: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x6237, x3, 66), x6238, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x6229, bigint_sub!(x6204, x6235, 32), 64),
                        x6206,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x6240, 276359, 4)?;
    let x6241: BytePoly_33 = bigint_add!(
        bigint_mul!(x6235, x6221, 33),
        bigint_mul!(x6204, x6223, 33),
        33
    );
    let x6242: BytePoly_33 = bigint_add!(
        bigint_mul!(x6238, x6221, 33),
        bigint_mul!(x6206, x6223, 33),
        33
    );
    let x6243: BytePoly_3 = bigint_nondet_quot!(ctx, x6241, x3, 3);
    let x6244: BytePoly_32 = bigint_nondet_rem!(ctx, x6241, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6243, x3, 35), x6244, 35),
            x6241,
            35
        ),
        260103,
        4,
    )?;
    let x6245: BytePoly_3 = bigint_nondet_quot!(ctx, x6242, x3, 3);
    let x6246: BytePoly_32 = bigint_nondet_rem!(ctx, x6242, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6245, x3, 35), x6246, 35),
            x6242,
            35
        ),
        260103,
        4,
    )?;
    let x6247: BytePoly_64 = bigint_mul!(x6217, x6217, 64);
    let x6248: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x6247, x6247, 64), x6247, 64),
        x2,
        64
    );
    let x6249: BytePoly_64 = bigint_add!(x48, x6248, 64);
    let x6250: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x6220, x6220, 32), x3, 32);
    let x6251: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x6248, x6250, 96), x3, 32);
    let x6252: BytePoly_64 = bigint_mul!(x6220, x6251, 64);
    let x6253: BytePoly_64 = bigint_add!(x6252, x6252, 64);
    let x6254: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x6249, x6253, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6254, x3, 66), x6253, 66),
            x6249,
            66
        ),
        276359,
        4,
    )?;
    let x6255: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x6251, x6251, 64), x3, 64), x3, 64),
            x6217,
            64
        ),
        x6217,
        64
    );
    let x6256: BytePoly_34 = bigint_nondet_quot!(ctx, x6255, x3, 34);
    let x6257: BytePoly_32 = bigint_nondet_rem!(ctx, x6255, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6256, x3, 66), x6257, 66),
            x6255,
            66
        ),
        276359,
        4,
    )?;
    let x6258: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x6251, x6257, 64), 64), x3, 64),
            x6220,
            64
        ),
        bigint_mul!(x6251, x6217, 64),
        64
    );
    let x6259: BytePoly_34 = bigint_nondet_quot!(ctx, x6258, x3, 34);
    let x6260: BytePoly_32 = bigint_nondet_rem!(ctx, x6258, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6259, x3, 66), x6260, 66),
            x6258,
            66
        ),
        276359,
        4,
    )?;
    let x6261: BytePoly_1 = bigint_nondet_rem!(ctx, x6222, x4, 1);
    let x6262: BytePoly_32 = bigint_nondet_quot!(ctx, x6222, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6262, x4, 33), x6261, 33),
            x6222,
            33
        ),
        260103,
        4,
    )?;
    let x6263: BytePoly_1 = bigint_sub!(x5, x6261, 1);
    eqz(ctx, &bigint_mul!(x6261, x6263, 2), 8131, 2)?;
    let x6264: BytePoly_32 = bigint_add!(bigint_sub!(x6260, x6246, 32), x3, 32);
    let x6265: BytePoly_32 = bigint_add!(bigint_sub!(x6257, x6244, 32), x3, 32);
    let x6266: BytePoly_32 = bigint_nondet_inv!(ctx, x6265, x3, 32);
    let x6267: BytePoly_64 = bigint_mul!(x6265, x6266, 64);
    let x6268: BytePoly_34 = bigint_nondet_quot!(ctx, x6267, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x6267, bigint_mul!(x6268, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x6269: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x6264, x6266, 64), x3, 32);
    let x6270: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x6269, x6265, 64), x6264, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x6271: BytePoly_34 = bigint_nondet_quot!(ctx, x6270, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x6270, bigint_mul!(x6271, x3, 66), 66),
        276359,
        4,
    )?;
    let x6272: BytePoly_64 = bigint_mul!(x6269, x6269, 64);
    let x6273: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x6272, x6244, 64), x3, 64),
            x6257,
            64
        ),
        x3,
        64
    );
    let x6274: BytePoly_34 = bigint_nondet_quot!(ctx, x6273, x3, 34);
    let x6275: BytePoly_32 = bigint_nondet_rem!(ctx, x6273, x3, 32);
    let x6276: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x6269, x6275, 64),
                        bigint_add!(
                            bigint_sub!(x6246, bigint_mul!(x6269, x6244, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x6277: BytePoly_34 = bigint_nondet_quot!(ctx, x6276, x3, 34);
    let x6278: BytePoly_32 = bigint_nondet_rem!(ctx, x6276, x3, 32);
    let x6279: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x6272, bigint_mul!(x6274, x3, 66), 66),
                        x6244,
                        66
                    ),
                    x6257,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x6275,
        66
    );
    eqz(ctx, &x6279, 276359, 4)?;
    let x6280: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x6277, x3, 66), x6278, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x6269, bigint_sub!(x6244, x6275, 32), 64),
                        x6246,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x6280, 276359, 4)?;
    let x6281: BytePoly_33 = bigint_add!(
        bigint_mul!(x6275, x6261, 33),
        bigint_mul!(x6244, x6263, 33),
        33
    );
    let x6282: BytePoly_33 = bigint_add!(
        bigint_mul!(x6278, x6261, 33),
        bigint_mul!(x6246, x6263, 33),
        33
    );
    let x6283: BytePoly_3 = bigint_nondet_quot!(ctx, x6281, x3, 3);
    let x6284: BytePoly_32 = bigint_nondet_rem!(ctx, x6281, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6283, x3, 35), x6284, 35),
            x6281,
            35
        ),
        260103,
        4,
    )?;
    let x6285: BytePoly_3 = bigint_nondet_quot!(ctx, x6282, x3, 3);
    let x6286: BytePoly_32 = bigint_nondet_rem!(ctx, x6282, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6285, x3, 35), x6286, 35),
            x6282,
            35
        ),
        260103,
        4,
    )?;
    let x6287: BytePoly_64 = bigint_mul!(x6257, x6257, 64);
    let x6288: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x6287, x6287, 64), x6287, 64),
        x2,
        64
    );
    let x6289: BytePoly_64 = bigint_add!(x48, x6288, 64);
    let x6290: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x6260, x6260, 32), x3, 32);
    let x6291: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x6288, x6290, 96), x3, 32);
    let x6292: BytePoly_64 = bigint_mul!(x6260, x6291, 64);
    let x6293: BytePoly_64 = bigint_add!(x6292, x6292, 64);
    let x6294: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x6289, x6293, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6294, x3, 66), x6293, 66),
            x6289,
            66
        ),
        276359,
        4,
    )?;
    let x6295: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x6291, x6291, 64), x3, 64), x3, 64),
            x6257,
            64
        ),
        x6257,
        64
    );
    let x6296: BytePoly_34 = bigint_nondet_quot!(ctx, x6295, x3, 34);
    let x6297: BytePoly_32 = bigint_nondet_rem!(ctx, x6295, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6296, x3, 66), x6297, 66),
            x6295,
            66
        ),
        276359,
        4,
    )?;
    let x6298: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x6291, x6297, 64), 64), x3, 64),
            x6260,
            64
        ),
        bigint_mul!(x6291, x6257, 64),
        64
    );
    let x6299: BytePoly_34 = bigint_nondet_quot!(ctx, x6298, x3, 34);
    let x6300: BytePoly_32 = bigint_nondet_rem!(ctx, x6298, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6299, x3, 66), x6300, 66),
            x6298,
            66
        ),
        276359,
        4,
    )?;
    let x6301: BytePoly_1 = bigint_nondet_rem!(ctx, x6262, x4, 1);
    let x6302: BytePoly_32 = bigint_nondet_quot!(ctx, x6262, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6302, x4, 33), x6301, 33),
            x6262,
            33
        ),
        260103,
        4,
    )?;
    let x6303: BytePoly_1 = bigint_sub!(x5, x6301, 1);
    eqz(ctx, &bigint_mul!(x6301, x6303, 2), 8131, 2)?;
    let x6304: BytePoly_32 = bigint_add!(bigint_sub!(x6300, x6286, 32), x3, 32);
    let x6305: BytePoly_32 = bigint_add!(bigint_sub!(x6297, x6284, 32), x3, 32);
    let x6306: BytePoly_32 = bigint_nondet_inv!(ctx, x6305, x3, 32);
    let x6307: BytePoly_64 = bigint_mul!(x6305, x6306, 64);
    let x6308: BytePoly_34 = bigint_nondet_quot!(ctx, x6307, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x6307, bigint_mul!(x6308, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x6309: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x6304, x6306, 64), x3, 32);
    let x6310: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x6309, x6305, 64), x6304, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x6311: BytePoly_34 = bigint_nondet_quot!(ctx, x6310, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x6310, bigint_mul!(x6311, x3, 66), 66),
        276359,
        4,
    )?;
    let x6312: BytePoly_64 = bigint_mul!(x6309, x6309, 64);
    let x6313: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x6312, x6284, 64), x3, 64),
            x6297,
            64
        ),
        x3,
        64
    );
    let x6314: BytePoly_34 = bigint_nondet_quot!(ctx, x6313, x3, 34);
    let x6315: BytePoly_32 = bigint_nondet_rem!(ctx, x6313, x3, 32);
    let x6316: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x6309, x6315, 64),
                        bigint_add!(
                            bigint_sub!(x6286, bigint_mul!(x6309, x6284, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x6317: BytePoly_34 = bigint_nondet_quot!(ctx, x6316, x3, 34);
    let x6318: BytePoly_32 = bigint_nondet_rem!(ctx, x6316, x3, 32);
    let x6319: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x6312, bigint_mul!(x6314, x3, 66), 66),
                        x6284,
                        66
                    ),
                    x6297,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x6315,
        66
    );
    eqz(ctx, &x6319, 276359, 4)?;
    let x6320: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x6317, x3, 66), x6318, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x6309, bigint_sub!(x6284, x6315, 32), 64),
                        x6286,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x6320, 276359, 4)?;
    let x6321: BytePoly_33 = bigint_add!(
        bigint_mul!(x6315, x6301, 33),
        bigint_mul!(x6284, x6303, 33),
        33
    );
    let x6322: BytePoly_33 = bigint_add!(
        bigint_mul!(x6318, x6301, 33),
        bigint_mul!(x6286, x6303, 33),
        33
    );
    let x6323: BytePoly_3 = bigint_nondet_quot!(ctx, x6321, x3, 3);
    let x6324: BytePoly_32 = bigint_nondet_rem!(ctx, x6321, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6323, x3, 35), x6324, 35),
            x6321,
            35
        ),
        260103,
        4,
    )?;
    let x6325: BytePoly_3 = bigint_nondet_quot!(ctx, x6322, x3, 3);
    let x6326: BytePoly_32 = bigint_nondet_rem!(ctx, x6322, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6325, x3, 35), x6326, 35),
            x6322,
            35
        ),
        260103,
        4,
    )?;
    let x6327: BytePoly_64 = bigint_mul!(x6297, x6297, 64);
    let x6328: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x6327, x6327, 64), x6327, 64),
        x2,
        64
    );
    let x6329: BytePoly_64 = bigint_add!(x48, x6328, 64);
    let x6330: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x6300, x6300, 32), x3, 32);
    let x6331: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x6328, x6330, 96), x3, 32);
    let x6332: BytePoly_64 = bigint_mul!(x6300, x6331, 64);
    let x6333: BytePoly_64 = bigint_add!(x6332, x6332, 64);
    let x6334: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x6329, x6333, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6334, x3, 66), x6333, 66),
            x6329,
            66
        ),
        276359,
        4,
    )?;
    let x6335: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x6331, x6331, 64), x3, 64), x3, 64),
            x6297,
            64
        ),
        x6297,
        64
    );
    let x6336: BytePoly_34 = bigint_nondet_quot!(ctx, x6335, x3, 34);
    let x6337: BytePoly_32 = bigint_nondet_rem!(ctx, x6335, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6336, x3, 66), x6337, 66),
            x6335,
            66
        ),
        276359,
        4,
    )?;
    let x6338: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x6331, x6337, 64), 64), x3, 64),
            x6300,
            64
        ),
        bigint_mul!(x6331, x6297, 64),
        64
    );
    let x6339: BytePoly_34 = bigint_nondet_quot!(ctx, x6338, x3, 34);
    let x6340: BytePoly_32 = bigint_nondet_rem!(ctx, x6338, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6339, x3, 66), x6340, 66),
            x6338,
            66
        ),
        276359,
        4,
    )?;
    let x6341: BytePoly_1 = bigint_nondet_rem!(ctx, x6302, x4, 1);
    let x6342: BytePoly_32 = bigint_nondet_quot!(ctx, x6302, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6342, x4, 33), x6341, 33),
            x6302,
            33
        ),
        260103,
        4,
    )?;
    let x6343: BytePoly_1 = bigint_sub!(x5, x6341, 1);
    eqz(ctx, &bigint_mul!(x6341, x6343, 2), 8131, 2)?;
    let x6344: BytePoly_32 = bigint_add!(bigint_sub!(x6340, x6326, 32), x3, 32);
    let x6345: BytePoly_32 = bigint_add!(bigint_sub!(x6337, x6324, 32), x3, 32);
    let x6346: BytePoly_32 = bigint_nondet_inv!(ctx, x6345, x3, 32);
    let x6347: BytePoly_64 = bigint_mul!(x6345, x6346, 64);
    let x6348: BytePoly_34 = bigint_nondet_quot!(ctx, x6347, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x6347, bigint_mul!(x6348, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x6349: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x6344, x6346, 64), x3, 32);
    let x6350: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x6349, x6345, 64), x6344, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x6351: BytePoly_34 = bigint_nondet_quot!(ctx, x6350, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x6350, bigint_mul!(x6351, x3, 66), 66),
        276359,
        4,
    )?;
    let x6352: BytePoly_64 = bigint_mul!(x6349, x6349, 64);
    let x6353: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x6352, x6324, 64), x3, 64),
            x6337,
            64
        ),
        x3,
        64
    );
    let x6354: BytePoly_34 = bigint_nondet_quot!(ctx, x6353, x3, 34);
    let x6355: BytePoly_32 = bigint_nondet_rem!(ctx, x6353, x3, 32);
    let x6356: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x6349, x6355, 64),
                        bigint_add!(
                            bigint_sub!(x6326, bigint_mul!(x6349, x6324, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x6357: BytePoly_34 = bigint_nondet_quot!(ctx, x6356, x3, 34);
    let x6358: BytePoly_32 = bigint_nondet_rem!(ctx, x6356, x3, 32);
    let x6359: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x6352, bigint_mul!(x6354, x3, 66), 66),
                        x6324,
                        66
                    ),
                    x6337,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x6355,
        66
    );
    eqz(ctx, &x6359, 276359, 4)?;
    let x6360: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x6357, x3, 66), x6358, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x6349, bigint_sub!(x6324, x6355, 32), 64),
                        x6326,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x6360, 276359, 4)?;
    let x6361: BytePoly_33 = bigint_add!(
        bigint_mul!(x6355, x6341, 33),
        bigint_mul!(x6324, x6343, 33),
        33
    );
    let x6362: BytePoly_33 = bigint_add!(
        bigint_mul!(x6358, x6341, 33),
        bigint_mul!(x6326, x6343, 33),
        33
    );
    let x6363: BytePoly_3 = bigint_nondet_quot!(ctx, x6361, x3, 3);
    let x6364: BytePoly_32 = bigint_nondet_rem!(ctx, x6361, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6363, x3, 35), x6364, 35),
            x6361,
            35
        ),
        260103,
        4,
    )?;
    let x6365: BytePoly_3 = bigint_nondet_quot!(ctx, x6362, x3, 3);
    let x6366: BytePoly_32 = bigint_nondet_rem!(ctx, x6362, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6365, x3, 35), x6366, 35),
            x6362,
            35
        ),
        260103,
        4,
    )?;
    let x6367: BytePoly_64 = bigint_mul!(x6337, x6337, 64);
    let x6368: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x6367, x6367, 64), x6367, 64),
        x2,
        64
    );
    let x6369: BytePoly_64 = bigint_add!(x48, x6368, 64);
    let x6370: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x6340, x6340, 32), x3, 32);
    let x6371: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x6368, x6370, 96), x3, 32);
    let x6372: BytePoly_64 = bigint_mul!(x6340, x6371, 64);
    let x6373: BytePoly_64 = bigint_add!(x6372, x6372, 64);
    let x6374: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x6369, x6373, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6374, x3, 66), x6373, 66),
            x6369,
            66
        ),
        276359,
        4,
    )?;
    let x6375: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x6371, x6371, 64), x3, 64), x3, 64),
            x6337,
            64
        ),
        x6337,
        64
    );
    let x6376: BytePoly_34 = bigint_nondet_quot!(ctx, x6375, x3, 34);
    let x6377: BytePoly_32 = bigint_nondet_rem!(ctx, x6375, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6376, x3, 66), x6377, 66),
            x6375,
            66
        ),
        276359,
        4,
    )?;
    let x6378: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x6371, x6377, 64), 64), x3, 64),
            x6340,
            64
        ),
        bigint_mul!(x6371, x6337, 64),
        64
    );
    let x6379: BytePoly_34 = bigint_nondet_quot!(ctx, x6378, x3, 34);
    let x6380: BytePoly_32 = bigint_nondet_rem!(ctx, x6378, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6379, x3, 66), x6380, 66),
            x6378,
            66
        ),
        276359,
        4,
    )?;
    let x6381: BytePoly_1 = bigint_nondet_rem!(ctx, x6342, x4, 1);
    let x6382: BytePoly_32 = bigint_nondet_quot!(ctx, x6342, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6382, x4, 33), x6381, 33),
            x6342,
            33
        ),
        260103,
        4,
    )?;
    let x6383: BytePoly_1 = bigint_sub!(x5, x6381, 1);
    eqz(ctx, &bigint_mul!(x6381, x6383, 2), 8131, 2)?;
    let x6384: BytePoly_32 = bigint_add!(bigint_sub!(x6380, x6366, 32), x3, 32);
    let x6385: BytePoly_32 = bigint_add!(bigint_sub!(x6377, x6364, 32), x3, 32);
    let x6386: BytePoly_32 = bigint_nondet_inv!(ctx, x6385, x3, 32);
    let x6387: BytePoly_64 = bigint_mul!(x6385, x6386, 64);
    let x6388: BytePoly_34 = bigint_nondet_quot!(ctx, x6387, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x6387, bigint_mul!(x6388, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x6389: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x6384, x6386, 64), x3, 32);
    let x6390: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x6389, x6385, 64), x6384, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x6391: BytePoly_34 = bigint_nondet_quot!(ctx, x6390, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x6390, bigint_mul!(x6391, x3, 66), 66),
        276359,
        4,
    )?;
    let x6392: BytePoly_64 = bigint_mul!(x6389, x6389, 64);
    let x6393: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x6392, x6364, 64), x3, 64),
            x6377,
            64
        ),
        x3,
        64
    );
    let x6394: BytePoly_34 = bigint_nondet_quot!(ctx, x6393, x3, 34);
    let x6395: BytePoly_32 = bigint_nondet_rem!(ctx, x6393, x3, 32);
    let x6396: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x6389, x6395, 64),
                        bigint_add!(
                            bigint_sub!(x6366, bigint_mul!(x6389, x6364, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x6397: BytePoly_34 = bigint_nondet_quot!(ctx, x6396, x3, 34);
    let x6398: BytePoly_32 = bigint_nondet_rem!(ctx, x6396, x3, 32);
    let x6399: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x6392, bigint_mul!(x6394, x3, 66), 66),
                        x6364,
                        66
                    ),
                    x6377,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x6395,
        66
    );
    eqz(ctx, &x6399, 276359, 4)?;
    let x6400: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x6397, x3, 66), x6398, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x6389, bigint_sub!(x6364, x6395, 32), 64),
                        x6366,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x6400, 276359, 4)?;
    let x6401: BytePoly_33 = bigint_add!(
        bigint_mul!(x6395, x6381, 33),
        bigint_mul!(x6364, x6383, 33),
        33
    );
    let x6402: BytePoly_33 = bigint_add!(
        bigint_mul!(x6398, x6381, 33),
        bigint_mul!(x6366, x6383, 33),
        33
    );
    let x6403: BytePoly_3 = bigint_nondet_quot!(ctx, x6401, x3, 3);
    let x6404: BytePoly_32 = bigint_nondet_rem!(ctx, x6401, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6403, x3, 35), x6404, 35),
            x6401,
            35
        ),
        260103,
        4,
    )?;
    let x6405: BytePoly_3 = bigint_nondet_quot!(ctx, x6402, x3, 3);
    let x6406: BytePoly_32 = bigint_nondet_rem!(ctx, x6402, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6405, x3, 35), x6406, 35),
            x6402,
            35
        ),
        260103,
        4,
    )?;
    let x6407: BytePoly_64 = bigint_mul!(x6377, x6377, 64);
    let x6408: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x6407, x6407, 64), x6407, 64),
        x2,
        64
    );
    let x6409: BytePoly_64 = bigint_add!(x48, x6408, 64);
    let x6410: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x6380, x6380, 32), x3, 32);
    let x6411: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x6408, x6410, 96), x3, 32);
    let x6412: BytePoly_64 = bigint_mul!(x6380, x6411, 64);
    let x6413: BytePoly_64 = bigint_add!(x6412, x6412, 64);
    let x6414: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x6409, x6413, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6414, x3, 66), x6413, 66),
            x6409,
            66
        ),
        276359,
        4,
    )?;
    let x6415: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x6411, x6411, 64), x3, 64), x3, 64),
            x6377,
            64
        ),
        x6377,
        64
    );
    let x6416: BytePoly_34 = bigint_nondet_quot!(ctx, x6415, x3, 34);
    let x6417: BytePoly_32 = bigint_nondet_rem!(ctx, x6415, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6416, x3, 66), x6417, 66),
            x6415,
            66
        ),
        276359,
        4,
    )?;
    let x6418: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x6411, x6417, 64), 64), x3, 64),
            x6380,
            64
        ),
        bigint_mul!(x6411, x6377, 64),
        64
    );
    let x6419: BytePoly_34 = bigint_nondet_quot!(ctx, x6418, x3, 34);
    let x6420: BytePoly_32 = bigint_nondet_rem!(ctx, x6418, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6419, x3, 66), x6420, 66),
            x6418,
            66
        ),
        276359,
        4,
    )?;
    let x6421: BytePoly_1 = bigint_nondet_rem!(ctx, x6382, x4, 1);
    let x6422: BytePoly_32 = bigint_nondet_quot!(ctx, x6382, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6422, x4, 33), x6421, 33),
            x6382,
            33
        ),
        260103,
        4,
    )?;
    let x6423: BytePoly_1 = bigint_sub!(x5, x6421, 1);
    eqz(ctx, &bigint_mul!(x6421, x6423, 2), 8131, 2)?;
    let x6424: BytePoly_32 = bigint_add!(bigint_sub!(x6420, x6406, 32), x3, 32);
    let x6425: BytePoly_32 = bigint_add!(bigint_sub!(x6417, x6404, 32), x3, 32);
    let x6426: BytePoly_32 = bigint_nondet_inv!(ctx, x6425, x3, 32);
    let x6427: BytePoly_64 = bigint_mul!(x6425, x6426, 64);
    let x6428: BytePoly_34 = bigint_nondet_quot!(ctx, x6427, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x6427, bigint_mul!(x6428, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x6429: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x6424, x6426, 64), x3, 32);
    let x6430: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x6429, x6425, 64), x6424, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x6431: BytePoly_34 = bigint_nondet_quot!(ctx, x6430, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x6430, bigint_mul!(x6431, x3, 66), 66),
        276359,
        4,
    )?;
    let x6432: BytePoly_64 = bigint_mul!(x6429, x6429, 64);
    let x6433: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x6432, x6404, 64), x3, 64),
            x6417,
            64
        ),
        x3,
        64
    );
    let x6434: BytePoly_34 = bigint_nondet_quot!(ctx, x6433, x3, 34);
    let x6435: BytePoly_32 = bigint_nondet_rem!(ctx, x6433, x3, 32);
    let x6436: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x6429, x6435, 64),
                        bigint_add!(
                            bigint_sub!(x6406, bigint_mul!(x6429, x6404, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x6437: BytePoly_34 = bigint_nondet_quot!(ctx, x6436, x3, 34);
    let x6438: BytePoly_32 = bigint_nondet_rem!(ctx, x6436, x3, 32);
    let x6439: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x6432, bigint_mul!(x6434, x3, 66), 66),
                        x6404,
                        66
                    ),
                    x6417,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x6435,
        66
    );
    eqz(ctx, &x6439, 276359, 4)?;
    let x6440: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x6437, x3, 66), x6438, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x6429, bigint_sub!(x6404, x6435, 32), 64),
                        x6406,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x6440, 276359, 4)?;
    let x6441: BytePoly_33 = bigint_add!(
        bigint_mul!(x6435, x6421, 33),
        bigint_mul!(x6404, x6423, 33),
        33
    );
    let x6442: BytePoly_33 = bigint_add!(
        bigint_mul!(x6438, x6421, 33),
        bigint_mul!(x6406, x6423, 33),
        33
    );
    let x6443: BytePoly_3 = bigint_nondet_quot!(ctx, x6441, x3, 3);
    let x6444: BytePoly_32 = bigint_nondet_rem!(ctx, x6441, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6443, x3, 35), x6444, 35),
            x6441,
            35
        ),
        260103,
        4,
    )?;
    let x6445: BytePoly_3 = bigint_nondet_quot!(ctx, x6442, x3, 3);
    let x6446: BytePoly_32 = bigint_nondet_rem!(ctx, x6442, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6445, x3, 35), x6446, 35),
            x6442,
            35
        ),
        260103,
        4,
    )?;
    let x6447: BytePoly_64 = bigint_mul!(x6417, x6417, 64);
    let x6448: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x6447, x6447, 64), x6447, 64),
        x2,
        64
    );
    let x6449: BytePoly_64 = bigint_add!(x48, x6448, 64);
    let x6450: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x6420, x6420, 32), x3, 32);
    let x6451: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x6448, x6450, 96), x3, 32);
    let x6452: BytePoly_64 = bigint_mul!(x6420, x6451, 64);
    let x6453: BytePoly_64 = bigint_add!(x6452, x6452, 64);
    let x6454: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x6449, x6453, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6454, x3, 66), x6453, 66),
            x6449,
            66
        ),
        276359,
        4,
    )?;
    let x6455: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x6451, x6451, 64), x3, 64), x3, 64),
            x6417,
            64
        ),
        x6417,
        64
    );
    let x6456: BytePoly_34 = bigint_nondet_quot!(ctx, x6455, x3, 34);
    let x6457: BytePoly_32 = bigint_nondet_rem!(ctx, x6455, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6456, x3, 66), x6457, 66),
            x6455,
            66
        ),
        276359,
        4,
    )?;
    let x6458: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x6451, x6457, 64), 64), x3, 64),
            x6420,
            64
        ),
        bigint_mul!(x6451, x6417, 64),
        64
    );
    let x6459: BytePoly_34 = bigint_nondet_quot!(ctx, x6458, x3, 34);
    let x6460: BytePoly_32 = bigint_nondet_rem!(ctx, x6458, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6459, x3, 66), x6460, 66),
            x6458,
            66
        ),
        276359,
        4,
    )?;
    let x6461: BytePoly_1 = bigint_nondet_rem!(ctx, x6422, x4, 1);
    let x6462: BytePoly_32 = bigint_nondet_quot!(ctx, x6422, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6462, x4, 33), x6461, 33),
            x6422,
            33
        ),
        260103,
        4,
    )?;
    let x6463: BytePoly_1 = bigint_sub!(x5, x6461, 1);
    eqz(ctx, &bigint_mul!(x6461, x6463, 2), 8131, 2)?;
    let x6464: BytePoly_32 = bigint_add!(bigint_sub!(x6460, x6446, 32), x3, 32);
    let x6465: BytePoly_32 = bigint_add!(bigint_sub!(x6457, x6444, 32), x3, 32);
    let x6466: BytePoly_32 = bigint_nondet_inv!(ctx, x6465, x3, 32);
    let x6467: BytePoly_64 = bigint_mul!(x6465, x6466, 64);
    let x6468: BytePoly_34 = bigint_nondet_quot!(ctx, x6467, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x6467, bigint_mul!(x6468, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x6469: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x6464, x6466, 64), x3, 32);
    let x6470: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x6469, x6465, 64), x6464, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x6471: BytePoly_34 = bigint_nondet_quot!(ctx, x6470, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x6470, bigint_mul!(x6471, x3, 66), 66),
        276359,
        4,
    )?;
    let x6472: BytePoly_64 = bigint_mul!(x6469, x6469, 64);
    let x6473: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x6472, x6444, 64), x3, 64),
            x6457,
            64
        ),
        x3,
        64
    );
    let x6474: BytePoly_34 = bigint_nondet_quot!(ctx, x6473, x3, 34);
    let x6475: BytePoly_32 = bigint_nondet_rem!(ctx, x6473, x3, 32);
    let x6476: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x6469, x6475, 64),
                        bigint_add!(
                            bigint_sub!(x6446, bigint_mul!(x6469, x6444, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x6477: BytePoly_34 = bigint_nondet_quot!(ctx, x6476, x3, 34);
    let x6478: BytePoly_32 = bigint_nondet_rem!(ctx, x6476, x3, 32);
    let x6479: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x6472, bigint_mul!(x6474, x3, 66), 66),
                        x6444,
                        66
                    ),
                    x6457,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x6475,
        66
    );
    eqz(ctx, &x6479, 276359, 4)?;
    let x6480: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x6477, x3, 66), x6478, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x6469, bigint_sub!(x6444, x6475, 32), 64),
                        x6446,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x6480, 276359, 4)?;
    let x6481: BytePoly_33 = bigint_add!(
        bigint_mul!(x6475, x6461, 33),
        bigint_mul!(x6444, x6463, 33),
        33
    );
    let x6482: BytePoly_33 = bigint_add!(
        bigint_mul!(x6478, x6461, 33),
        bigint_mul!(x6446, x6463, 33),
        33
    );
    let x6483: BytePoly_3 = bigint_nondet_quot!(ctx, x6481, x3, 3);
    let x6484: BytePoly_32 = bigint_nondet_rem!(ctx, x6481, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6483, x3, 35), x6484, 35),
            x6481,
            35
        ),
        260103,
        4,
    )?;
    let x6485: BytePoly_3 = bigint_nondet_quot!(ctx, x6482, x3, 3);
    let x6486: BytePoly_32 = bigint_nondet_rem!(ctx, x6482, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6485, x3, 35), x6486, 35),
            x6482,
            35
        ),
        260103,
        4,
    )?;
    let x6487: BytePoly_64 = bigint_mul!(x6457, x6457, 64);
    let x6488: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x6487, x6487, 64), x6487, 64),
        x2,
        64
    );
    let x6489: BytePoly_64 = bigint_add!(x48, x6488, 64);
    let x6490: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x6460, x6460, 32), x3, 32);
    let x6491: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x6488, x6490, 96), x3, 32);
    let x6492: BytePoly_64 = bigint_mul!(x6460, x6491, 64);
    let x6493: BytePoly_64 = bigint_add!(x6492, x6492, 64);
    let x6494: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x6489, x6493, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6494, x3, 66), x6493, 66),
            x6489,
            66
        ),
        276359,
        4,
    )?;
    let x6495: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x6491, x6491, 64), x3, 64), x3, 64),
            x6457,
            64
        ),
        x6457,
        64
    );
    let x6496: BytePoly_34 = bigint_nondet_quot!(ctx, x6495, x3, 34);
    let x6497: BytePoly_32 = bigint_nondet_rem!(ctx, x6495, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6496, x3, 66), x6497, 66),
            x6495,
            66
        ),
        276359,
        4,
    )?;
    let x6498: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x6491, x6497, 64), 64), x3, 64),
            x6460,
            64
        ),
        bigint_mul!(x6491, x6457, 64),
        64
    );
    let x6499: BytePoly_34 = bigint_nondet_quot!(ctx, x6498, x3, 34);
    let x6500: BytePoly_32 = bigint_nondet_rem!(ctx, x6498, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6499, x3, 66), x6500, 66),
            x6498,
            66
        ),
        276359,
        4,
    )?;
    let x6501: BytePoly_1 = bigint_nondet_rem!(ctx, x6462, x4, 1);
    let x6502: BytePoly_32 = bigint_nondet_quot!(ctx, x6462, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6502, x4, 33), x6501, 33),
            x6462,
            33
        ),
        260103,
        4,
    )?;
    let x6503: BytePoly_1 = bigint_sub!(x5, x6501, 1);
    eqz(ctx, &bigint_mul!(x6501, x6503, 2), 8131, 2)?;
    let x6504: BytePoly_32 = bigint_add!(bigint_sub!(x6500, x6486, 32), x3, 32);
    let x6505: BytePoly_32 = bigint_add!(bigint_sub!(x6497, x6484, 32), x3, 32);
    let x6506: BytePoly_32 = bigint_nondet_inv!(ctx, x6505, x3, 32);
    let x6507: BytePoly_64 = bigint_mul!(x6505, x6506, 64);
    let x6508: BytePoly_34 = bigint_nondet_quot!(ctx, x6507, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x6507, bigint_mul!(x6508, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x6509: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x6504, x6506, 64), x3, 32);
    let x6510: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x6509, x6505, 64), x6504, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x6511: BytePoly_34 = bigint_nondet_quot!(ctx, x6510, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x6510, bigint_mul!(x6511, x3, 66), 66),
        276359,
        4,
    )?;
    let x6512: BytePoly_64 = bigint_mul!(x6509, x6509, 64);
    let x6513: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x6512, x6484, 64), x3, 64),
            x6497,
            64
        ),
        x3,
        64
    );
    let x6514: BytePoly_34 = bigint_nondet_quot!(ctx, x6513, x3, 34);
    let x6515: BytePoly_32 = bigint_nondet_rem!(ctx, x6513, x3, 32);
    let x6516: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x6509, x6515, 64),
                        bigint_add!(
                            bigint_sub!(x6486, bigint_mul!(x6509, x6484, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x6517: BytePoly_34 = bigint_nondet_quot!(ctx, x6516, x3, 34);
    let x6518: BytePoly_32 = bigint_nondet_rem!(ctx, x6516, x3, 32);
    let x6519: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x6512, bigint_mul!(x6514, x3, 66), 66),
                        x6484,
                        66
                    ),
                    x6497,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x6515,
        66
    );
    eqz(ctx, &x6519, 276359, 4)?;
    let x6520: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x6517, x3, 66), x6518, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x6509, bigint_sub!(x6484, x6515, 32), 64),
                        x6486,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x6520, 276359, 4)?;
    let x6521: BytePoly_33 = bigint_add!(
        bigint_mul!(x6515, x6501, 33),
        bigint_mul!(x6484, x6503, 33),
        33
    );
    let x6522: BytePoly_33 = bigint_add!(
        bigint_mul!(x6518, x6501, 33),
        bigint_mul!(x6486, x6503, 33),
        33
    );
    let x6523: BytePoly_3 = bigint_nondet_quot!(ctx, x6521, x3, 3);
    let x6524: BytePoly_32 = bigint_nondet_rem!(ctx, x6521, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6523, x3, 35), x6524, 35),
            x6521,
            35
        ),
        260103,
        4,
    )?;
    let x6525: BytePoly_3 = bigint_nondet_quot!(ctx, x6522, x3, 3);
    let x6526: BytePoly_32 = bigint_nondet_rem!(ctx, x6522, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6525, x3, 35), x6526, 35),
            x6522,
            35
        ),
        260103,
        4,
    )?;
    let x6527: BytePoly_64 = bigint_mul!(x6497, x6497, 64);
    let x6528: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x6527, x6527, 64), x6527, 64),
        x2,
        64
    );
    let x6529: BytePoly_64 = bigint_add!(x48, x6528, 64);
    let x6530: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x6500, x6500, 32), x3, 32);
    let x6531: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x6528, x6530, 96), x3, 32);
    let x6532: BytePoly_64 = bigint_mul!(x6500, x6531, 64);
    let x6533: BytePoly_64 = bigint_add!(x6532, x6532, 64);
    let x6534: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x6529, x6533, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6534, x3, 66), x6533, 66),
            x6529,
            66
        ),
        276359,
        4,
    )?;
    let x6535: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x6531, x6531, 64), x3, 64), x3, 64),
            x6497,
            64
        ),
        x6497,
        64
    );
    let x6536: BytePoly_34 = bigint_nondet_quot!(ctx, x6535, x3, 34);
    let x6537: BytePoly_32 = bigint_nondet_rem!(ctx, x6535, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6536, x3, 66), x6537, 66),
            x6535,
            66
        ),
        276359,
        4,
    )?;
    let x6538: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x6531, x6537, 64), 64), x3, 64),
            x6500,
            64
        ),
        bigint_mul!(x6531, x6497, 64),
        64
    );
    let x6539: BytePoly_34 = bigint_nondet_quot!(ctx, x6538, x3, 34);
    let x6540: BytePoly_32 = bigint_nondet_rem!(ctx, x6538, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6539, x3, 66), x6540, 66),
            x6538,
            66
        ),
        276359,
        4,
    )?;
    let x6541: BytePoly_1 = bigint_nondet_rem!(ctx, x6502, x4, 1);
    let x6542: BytePoly_32 = bigint_nondet_quot!(ctx, x6502, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6542, x4, 33), x6541, 33),
            x6502,
            33
        ),
        260103,
        4,
    )?;
    let x6543: BytePoly_1 = bigint_sub!(x5, x6541, 1);
    eqz(ctx, &bigint_mul!(x6541, x6543, 2), 8131, 2)?;
    let x6544: BytePoly_32 = bigint_add!(bigint_sub!(x6540, x6526, 32), x3, 32);
    let x6545: BytePoly_32 = bigint_add!(bigint_sub!(x6537, x6524, 32), x3, 32);
    let x6546: BytePoly_32 = bigint_nondet_inv!(ctx, x6545, x3, 32);
    let x6547: BytePoly_64 = bigint_mul!(x6545, x6546, 64);
    let x6548: BytePoly_34 = bigint_nondet_quot!(ctx, x6547, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x6547, bigint_mul!(x6548, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x6549: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x6544, x6546, 64), x3, 32);
    let x6550: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x6549, x6545, 64), x6544, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x6551: BytePoly_34 = bigint_nondet_quot!(ctx, x6550, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x6550, bigint_mul!(x6551, x3, 66), 66),
        276359,
        4,
    )?;
    let x6552: BytePoly_64 = bigint_mul!(x6549, x6549, 64);
    let x6553: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x6552, x6524, 64), x3, 64),
            x6537,
            64
        ),
        x3,
        64
    );
    let x6554: BytePoly_34 = bigint_nondet_quot!(ctx, x6553, x3, 34);
    let x6555: BytePoly_32 = bigint_nondet_rem!(ctx, x6553, x3, 32);
    let x6556: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x6549, x6555, 64),
                        bigint_add!(
                            bigint_sub!(x6526, bigint_mul!(x6549, x6524, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x6557: BytePoly_34 = bigint_nondet_quot!(ctx, x6556, x3, 34);
    let x6558: BytePoly_32 = bigint_nondet_rem!(ctx, x6556, x3, 32);
    let x6559: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x6552, bigint_mul!(x6554, x3, 66), 66),
                        x6524,
                        66
                    ),
                    x6537,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x6555,
        66
    );
    eqz(ctx, &x6559, 276359, 4)?;
    let x6560: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x6557, x3, 66), x6558, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x6549, bigint_sub!(x6524, x6555, 32), 64),
                        x6526,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x6560, 276359, 4)?;
    let x6561: BytePoly_33 = bigint_add!(
        bigint_mul!(x6555, x6541, 33),
        bigint_mul!(x6524, x6543, 33),
        33
    );
    let x6562: BytePoly_33 = bigint_add!(
        bigint_mul!(x6558, x6541, 33),
        bigint_mul!(x6526, x6543, 33),
        33
    );
    let x6563: BytePoly_3 = bigint_nondet_quot!(ctx, x6561, x3, 3);
    let x6564: BytePoly_32 = bigint_nondet_rem!(ctx, x6561, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6563, x3, 35), x6564, 35),
            x6561,
            35
        ),
        260103,
        4,
    )?;
    let x6565: BytePoly_3 = bigint_nondet_quot!(ctx, x6562, x3, 3);
    let x6566: BytePoly_32 = bigint_nondet_rem!(ctx, x6562, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6565, x3, 35), x6566, 35),
            x6562,
            35
        ),
        260103,
        4,
    )?;
    let x6567: BytePoly_64 = bigint_mul!(x6537, x6537, 64);
    let x6568: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x6567, x6567, 64), x6567, 64),
        x2,
        64
    );
    let x6569: BytePoly_64 = bigint_add!(x48, x6568, 64);
    let x6570: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x6540, x6540, 32), x3, 32);
    let x6571: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x6568, x6570, 96), x3, 32);
    let x6572: BytePoly_64 = bigint_mul!(x6540, x6571, 64);
    let x6573: BytePoly_64 = bigint_add!(x6572, x6572, 64);
    let x6574: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x6569, x6573, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6574, x3, 66), x6573, 66),
            x6569,
            66
        ),
        276359,
        4,
    )?;
    let x6575: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x6571, x6571, 64), x3, 64), x3, 64),
            x6537,
            64
        ),
        x6537,
        64
    );
    let x6576: BytePoly_34 = bigint_nondet_quot!(ctx, x6575, x3, 34);
    let x6577: BytePoly_32 = bigint_nondet_rem!(ctx, x6575, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6576, x3, 66), x6577, 66),
            x6575,
            66
        ),
        276359,
        4,
    )?;
    let x6578: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x6571, x6577, 64), 64), x3, 64),
            x6540,
            64
        ),
        bigint_mul!(x6571, x6537, 64),
        64
    );
    let x6579: BytePoly_34 = bigint_nondet_quot!(ctx, x6578, x3, 34);
    let x6580: BytePoly_32 = bigint_nondet_rem!(ctx, x6578, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6579, x3, 66), x6580, 66),
            x6578,
            66
        ),
        276359,
        4,
    )?;
    let x6581: BytePoly_1 = bigint_nondet_rem!(ctx, x6542, x4, 1);
    let x6582: BytePoly_32 = bigint_nondet_quot!(ctx, x6542, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6582, x4, 33), x6581, 33),
            x6542,
            33
        ),
        260103,
        4,
    )?;
    let x6583: BytePoly_1 = bigint_sub!(x5, x6581, 1);
    eqz(ctx, &bigint_mul!(x6581, x6583, 2), 8131, 2)?;
    let x6584: BytePoly_32 = bigint_add!(bigint_sub!(x6580, x6566, 32), x3, 32);
    let x6585: BytePoly_32 = bigint_add!(bigint_sub!(x6577, x6564, 32), x3, 32);
    let x6586: BytePoly_32 = bigint_nondet_inv!(ctx, x6585, x3, 32);
    let x6587: BytePoly_64 = bigint_mul!(x6585, x6586, 64);
    let x6588: BytePoly_34 = bigint_nondet_quot!(ctx, x6587, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x6587, bigint_mul!(x6588, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x6589: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x6584, x6586, 64), x3, 32);
    let x6590: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x6589, x6585, 64), x6584, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x6591: BytePoly_34 = bigint_nondet_quot!(ctx, x6590, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x6590, bigint_mul!(x6591, x3, 66), 66),
        276359,
        4,
    )?;
    let x6592: BytePoly_64 = bigint_mul!(x6589, x6589, 64);
    let x6593: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x6592, x6564, 64), x3, 64),
            x6577,
            64
        ),
        x3,
        64
    );
    let x6594: BytePoly_34 = bigint_nondet_quot!(ctx, x6593, x3, 34);
    let x6595: BytePoly_32 = bigint_nondet_rem!(ctx, x6593, x3, 32);
    let x6596: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x6589, x6595, 64),
                        bigint_add!(
                            bigint_sub!(x6566, bigint_mul!(x6589, x6564, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x6597: BytePoly_34 = bigint_nondet_quot!(ctx, x6596, x3, 34);
    let x6598: BytePoly_32 = bigint_nondet_rem!(ctx, x6596, x3, 32);
    let x6599: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x6592, bigint_mul!(x6594, x3, 66), 66),
                        x6564,
                        66
                    ),
                    x6577,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x6595,
        66
    );
    eqz(ctx, &x6599, 276359, 4)?;
    let x6600: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x6597, x3, 66), x6598, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x6589, bigint_sub!(x6564, x6595, 32), 64),
                        x6566,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x6600, 276359, 4)?;
    let x6601: BytePoly_33 = bigint_add!(
        bigint_mul!(x6595, x6581, 33),
        bigint_mul!(x6564, x6583, 33),
        33
    );
    let x6602: BytePoly_33 = bigint_add!(
        bigint_mul!(x6598, x6581, 33),
        bigint_mul!(x6566, x6583, 33),
        33
    );
    let x6603: BytePoly_3 = bigint_nondet_quot!(ctx, x6601, x3, 3);
    let x6604: BytePoly_32 = bigint_nondet_rem!(ctx, x6601, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6603, x3, 35), x6604, 35),
            x6601,
            35
        ),
        260103,
        4,
    )?;
    let x6605: BytePoly_3 = bigint_nondet_quot!(ctx, x6602, x3, 3);
    let x6606: BytePoly_32 = bigint_nondet_rem!(ctx, x6602, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6605, x3, 35), x6606, 35),
            x6602,
            35
        ),
        260103,
        4,
    )?;
    let x6607: BytePoly_64 = bigint_mul!(x6577, x6577, 64);
    let x6608: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x6607, x6607, 64), x6607, 64),
        x2,
        64
    );
    let x6609: BytePoly_64 = bigint_add!(x48, x6608, 64);
    let x6610: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x6580, x6580, 32), x3, 32);
    let x6611: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x6608, x6610, 96), x3, 32);
    let x6612: BytePoly_64 = bigint_mul!(x6580, x6611, 64);
    let x6613: BytePoly_64 = bigint_add!(x6612, x6612, 64);
    let x6614: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x6609, x6613, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6614, x3, 66), x6613, 66),
            x6609,
            66
        ),
        276359,
        4,
    )?;
    let x6615: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x6611, x6611, 64), x3, 64), x3, 64),
            x6577,
            64
        ),
        x6577,
        64
    );
    let x6616: BytePoly_34 = bigint_nondet_quot!(ctx, x6615, x3, 34);
    let x6617: BytePoly_32 = bigint_nondet_rem!(ctx, x6615, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6616, x3, 66), x6617, 66),
            x6615,
            66
        ),
        276359,
        4,
    )?;
    let x6618: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x6611, x6617, 64), 64), x3, 64),
            x6580,
            64
        ),
        bigint_mul!(x6611, x6577, 64),
        64
    );
    let x6619: BytePoly_34 = bigint_nondet_quot!(ctx, x6618, x3, 34);
    let x6620: BytePoly_32 = bigint_nondet_rem!(ctx, x6618, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6619, x3, 66), x6620, 66),
            x6618,
            66
        ),
        276359,
        4,
    )?;
    let x6621: BytePoly_1 = bigint_nondet_rem!(ctx, x6582, x4, 1);
    let x6622: BytePoly_32 = bigint_nondet_quot!(ctx, x6582, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6622, x4, 33), x6621, 33),
            x6582,
            33
        ),
        260103,
        4,
    )?;
    let x6623: BytePoly_1 = bigint_sub!(x5, x6621, 1);
    eqz(ctx, &bigint_mul!(x6621, x6623, 2), 8131, 2)?;
    let x6624: BytePoly_32 = bigint_add!(bigint_sub!(x6620, x6606, 32), x3, 32);
    let x6625: BytePoly_32 = bigint_add!(bigint_sub!(x6617, x6604, 32), x3, 32);
    let x6626: BytePoly_32 = bigint_nondet_inv!(ctx, x6625, x3, 32);
    let x6627: BytePoly_64 = bigint_mul!(x6625, x6626, 64);
    let x6628: BytePoly_34 = bigint_nondet_quot!(ctx, x6627, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x6627, bigint_mul!(x6628, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x6629: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x6624, x6626, 64), x3, 32);
    let x6630: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x6629, x6625, 64), x6624, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x6631: BytePoly_34 = bigint_nondet_quot!(ctx, x6630, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x6630, bigint_mul!(x6631, x3, 66), 66),
        276359,
        4,
    )?;
    let x6632: BytePoly_64 = bigint_mul!(x6629, x6629, 64);
    let x6633: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x6632, x6604, 64), x3, 64),
            x6617,
            64
        ),
        x3,
        64
    );
    let x6634: BytePoly_34 = bigint_nondet_quot!(ctx, x6633, x3, 34);
    let x6635: BytePoly_32 = bigint_nondet_rem!(ctx, x6633, x3, 32);
    let x6636: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x6629, x6635, 64),
                        bigint_add!(
                            bigint_sub!(x6606, bigint_mul!(x6629, x6604, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x6637: BytePoly_34 = bigint_nondet_quot!(ctx, x6636, x3, 34);
    let x6638: BytePoly_32 = bigint_nondet_rem!(ctx, x6636, x3, 32);
    let x6639: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x6632, bigint_mul!(x6634, x3, 66), 66),
                        x6604,
                        66
                    ),
                    x6617,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x6635,
        66
    );
    eqz(ctx, &x6639, 276359, 4)?;
    let x6640: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x6637, x3, 66), x6638, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x6629, bigint_sub!(x6604, x6635, 32), 64),
                        x6606,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x6640, 276359, 4)?;
    let x6641: BytePoly_33 = bigint_add!(
        bigint_mul!(x6635, x6621, 33),
        bigint_mul!(x6604, x6623, 33),
        33
    );
    let x6642: BytePoly_33 = bigint_add!(
        bigint_mul!(x6638, x6621, 33),
        bigint_mul!(x6606, x6623, 33),
        33
    );
    let x6643: BytePoly_3 = bigint_nondet_quot!(ctx, x6641, x3, 3);
    let x6644: BytePoly_32 = bigint_nondet_rem!(ctx, x6641, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6643, x3, 35), x6644, 35),
            x6641,
            35
        ),
        260103,
        4,
    )?;
    let x6645: BytePoly_3 = bigint_nondet_quot!(ctx, x6642, x3, 3);
    let x6646: BytePoly_32 = bigint_nondet_rem!(ctx, x6642, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6645, x3, 35), x6646, 35),
            x6642,
            35
        ),
        260103,
        4,
    )?;
    let x6647: BytePoly_64 = bigint_mul!(x6617, x6617, 64);
    let x6648: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x6647, x6647, 64), x6647, 64),
        x2,
        64
    );
    let x6649: BytePoly_64 = bigint_add!(x48, x6648, 64);
    let x6650: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x6620, x6620, 32), x3, 32);
    let x6651: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x6648, x6650, 96), x3, 32);
    let x6652: BytePoly_64 = bigint_mul!(x6620, x6651, 64);
    let x6653: BytePoly_64 = bigint_add!(x6652, x6652, 64);
    let x6654: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x6649, x6653, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6654, x3, 66), x6653, 66),
            x6649,
            66
        ),
        276359,
        4,
    )?;
    let x6655: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x6651, x6651, 64), x3, 64), x3, 64),
            x6617,
            64
        ),
        x6617,
        64
    );
    let x6656: BytePoly_34 = bigint_nondet_quot!(ctx, x6655, x3, 34);
    let x6657: BytePoly_32 = bigint_nondet_rem!(ctx, x6655, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6656, x3, 66), x6657, 66),
            x6655,
            66
        ),
        276359,
        4,
    )?;
    let x6658: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x6651, x6657, 64), 64), x3, 64),
            x6620,
            64
        ),
        bigint_mul!(x6651, x6617, 64),
        64
    );
    let x6659: BytePoly_34 = bigint_nondet_quot!(ctx, x6658, x3, 34);
    let x6660: BytePoly_32 = bigint_nondet_rem!(ctx, x6658, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6659, x3, 66), x6660, 66),
            x6658,
            66
        ),
        276359,
        4,
    )?;
    let x6661: BytePoly_1 = bigint_nondet_rem!(ctx, x6622, x4, 1);
    let x6662: BytePoly_32 = bigint_nondet_quot!(ctx, x6622, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6662, x4, 33), x6661, 33),
            x6622,
            33
        ),
        260103,
        4,
    )?;
    let x6663: BytePoly_1 = bigint_sub!(x5, x6661, 1);
    eqz(ctx, &bigint_mul!(x6661, x6663, 2), 8131, 2)?;
    let x6664: BytePoly_32 = bigint_add!(bigint_sub!(x6660, x6646, 32), x3, 32);
    let x6665: BytePoly_32 = bigint_add!(bigint_sub!(x6657, x6644, 32), x3, 32);
    let x6666: BytePoly_32 = bigint_nondet_inv!(ctx, x6665, x3, 32);
    let x6667: BytePoly_64 = bigint_mul!(x6665, x6666, 64);
    let x6668: BytePoly_34 = bigint_nondet_quot!(ctx, x6667, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x6667, bigint_mul!(x6668, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x6669: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x6664, x6666, 64), x3, 32);
    let x6670: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x6669, x6665, 64), x6664, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x6671: BytePoly_34 = bigint_nondet_quot!(ctx, x6670, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x6670, bigint_mul!(x6671, x3, 66), 66),
        276359,
        4,
    )?;
    let x6672: BytePoly_64 = bigint_mul!(x6669, x6669, 64);
    let x6673: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x6672, x6644, 64), x3, 64),
            x6657,
            64
        ),
        x3,
        64
    );
    let x6674: BytePoly_34 = bigint_nondet_quot!(ctx, x6673, x3, 34);
    let x6675: BytePoly_32 = bigint_nondet_rem!(ctx, x6673, x3, 32);
    let x6676: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x6669, x6675, 64),
                        bigint_add!(
                            bigint_sub!(x6646, bigint_mul!(x6669, x6644, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x6677: BytePoly_34 = bigint_nondet_quot!(ctx, x6676, x3, 34);
    let x6678: BytePoly_32 = bigint_nondet_rem!(ctx, x6676, x3, 32);
    let x6679: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x6672, bigint_mul!(x6674, x3, 66), 66),
                        x6644,
                        66
                    ),
                    x6657,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x6675,
        66
    );
    eqz(ctx, &x6679, 276359, 4)?;
    let x6680: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x6677, x3, 66), x6678, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x6669, bigint_sub!(x6644, x6675, 32), 64),
                        x6646,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x6680, 276359, 4)?;
    let x6681: BytePoly_33 = bigint_add!(
        bigint_mul!(x6675, x6661, 33),
        bigint_mul!(x6644, x6663, 33),
        33
    );
    let x6682: BytePoly_33 = bigint_add!(
        bigint_mul!(x6678, x6661, 33),
        bigint_mul!(x6646, x6663, 33),
        33
    );
    let x6683: BytePoly_3 = bigint_nondet_quot!(ctx, x6681, x3, 3);
    let x6684: BytePoly_32 = bigint_nondet_rem!(ctx, x6681, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6683, x3, 35), x6684, 35),
            x6681,
            35
        ),
        260103,
        4,
    )?;
    let x6685: BytePoly_3 = bigint_nondet_quot!(ctx, x6682, x3, 3);
    let x6686: BytePoly_32 = bigint_nondet_rem!(ctx, x6682, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6685, x3, 35), x6686, 35),
            x6682,
            35
        ),
        260103,
        4,
    )?;
    let x6687: BytePoly_64 = bigint_mul!(x6657, x6657, 64);
    let x6688: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x6687, x6687, 64), x6687, 64),
        x2,
        64
    );
    let x6689: BytePoly_64 = bigint_add!(x48, x6688, 64);
    let x6690: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x6660, x6660, 32), x3, 32);
    let x6691: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x6688, x6690, 96), x3, 32);
    let x6692: BytePoly_64 = bigint_mul!(x6660, x6691, 64);
    let x6693: BytePoly_64 = bigint_add!(x6692, x6692, 64);
    let x6694: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x6689, x6693, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6694, x3, 66), x6693, 66),
            x6689,
            66
        ),
        276359,
        4,
    )?;
    let x6695: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x6691, x6691, 64), x3, 64), x3, 64),
            x6657,
            64
        ),
        x6657,
        64
    );
    let x6696: BytePoly_34 = bigint_nondet_quot!(ctx, x6695, x3, 34);
    let x6697: BytePoly_32 = bigint_nondet_rem!(ctx, x6695, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6696, x3, 66), x6697, 66),
            x6695,
            66
        ),
        276359,
        4,
    )?;
    let x6698: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x6691, x6697, 64), 64), x3, 64),
            x6660,
            64
        ),
        bigint_mul!(x6691, x6657, 64),
        64
    );
    let x6699: BytePoly_34 = bigint_nondet_quot!(ctx, x6698, x3, 34);
    let x6700: BytePoly_32 = bigint_nondet_rem!(ctx, x6698, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6699, x3, 66), x6700, 66),
            x6698,
            66
        ),
        276359,
        4,
    )?;
    let x6701: BytePoly_1 = bigint_nondet_rem!(ctx, x6662, x4, 1);
    let x6702: BytePoly_32 = bigint_nondet_quot!(ctx, x6662, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6702, x4, 33), x6701, 33),
            x6662,
            33
        ),
        260103,
        4,
    )?;
    let x6703: BytePoly_1 = bigint_sub!(x5, x6701, 1);
    eqz(ctx, &bigint_mul!(x6701, x6703, 2), 8131, 2)?;
    let x6704: BytePoly_32 = bigint_add!(bigint_sub!(x6700, x6686, 32), x3, 32);
    let x6705: BytePoly_32 = bigint_add!(bigint_sub!(x6697, x6684, 32), x3, 32);
    let x6706: BytePoly_32 = bigint_nondet_inv!(ctx, x6705, x3, 32);
    let x6707: BytePoly_64 = bigint_mul!(x6705, x6706, 64);
    let x6708: BytePoly_34 = bigint_nondet_quot!(ctx, x6707, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x6707, bigint_mul!(x6708, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x6709: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x6704, x6706, 64), x3, 32);
    let x6710: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x6709, x6705, 64), x6704, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x6711: BytePoly_34 = bigint_nondet_quot!(ctx, x6710, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x6710, bigint_mul!(x6711, x3, 66), 66),
        276359,
        4,
    )?;
    let x6712: BytePoly_64 = bigint_mul!(x6709, x6709, 64);
    let x6713: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x6712, x6684, 64), x3, 64),
            x6697,
            64
        ),
        x3,
        64
    );
    let x6714: BytePoly_34 = bigint_nondet_quot!(ctx, x6713, x3, 34);
    let x6715: BytePoly_32 = bigint_nondet_rem!(ctx, x6713, x3, 32);
    let x6716: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x6709, x6715, 64),
                        bigint_add!(
                            bigint_sub!(x6686, bigint_mul!(x6709, x6684, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x6717: BytePoly_34 = bigint_nondet_quot!(ctx, x6716, x3, 34);
    let x6718: BytePoly_32 = bigint_nondet_rem!(ctx, x6716, x3, 32);
    let x6719: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x6712, bigint_mul!(x6714, x3, 66), 66),
                        x6684,
                        66
                    ),
                    x6697,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x6715,
        66
    );
    eqz(ctx, &x6719, 276359, 4)?;
    let x6720: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x6717, x3, 66), x6718, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x6709, bigint_sub!(x6684, x6715, 32), 64),
                        x6686,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x6720, 276359, 4)?;
    let x6721: BytePoly_33 = bigint_add!(
        bigint_mul!(x6715, x6701, 33),
        bigint_mul!(x6684, x6703, 33),
        33
    );
    let x6722: BytePoly_33 = bigint_add!(
        bigint_mul!(x6718, x6701, 33),
        bigint_mul!(x6686, x6703, 33),
        33
    );
    let x6723: BytePoly_3 = bigint_nondet_quot!(ctx, x6721, x3, 3);
    let x6724: BytePoly_32 = bigint_nondet_rem!(ctx, x6721, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6723, x3, 35), x6724, 35),
            x6721,
            35
        ),
        260103,
        4,
    )?;
    let x6725: BytePoly_3 = bigint_nondet_quot!(ctx, x6722, x3, 3);
    let x6726: BytePoly_32 = bigint_nondet_rem!(ctx, x6722, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6725, x3, 35), x6726, 35),
            x6722,
            35
        ),
        260103,
        4,
    )?;
    let x6727: BytePoly_64 = bigint_mul!(x6697, x6697, 64);
    let x6728: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x6727, x6727, 64), x6727, 64),
        x2,
        64
    );
    let x6729: BytePoly_64 = bigint_add!(x48, x6728, 64);
    let x6730: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x6700, x6700, 32), x3, 32);
    let x6731: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x6728, x6730, 96), x3, 32);
    let x6732: BytePoly_64 = bigint_mul!(x6700, x6731, 64);
    let x6733: BytePoly_64 = bigint_add!(x6732, x6732, 64);
    let x6734: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x6729, x6733, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6734, x3, 66), x6733, 66),
            x6729,
            66
        ),
        276359,
        4,
    )?;
    let x6735: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x6731, x6731, 64), x3, 64), x3, 64),
            x6697,
            64
        ),
        x6697,
        64
    );
    let x6736: BytePoly_34 = bigint_nondet_quot!(ctx, x6735, x3, 34);
    let x6737: BytePoly_32 = bigint_nondet_rem!(ctx, x6735, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6736, x3, 66), x6737, 66),
            x6735,
            66
        ),
        276359,
        4,
    )?;
    let x6738: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x6731, x6737, 64), 64), x3, 64),
            x6700,
            64
        ),
        bigint_mul!(x6731, x6697, 64),
        64
    );
    let x6739: BytePoly_34 = bigint_nondet_quot!(ctx, x6738, x3, 34);
    let x6740: BytePoly_32 = bigint_nondet_rem!(ctx, x6738, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6739, x3, 66), x6740, 66),
            x6738,
            66
        ),
        276359,
        4,
    )?;
    let x6741: BytePoly_1 = bigint_nondet_rem!(ctx, x6702, x4, 1);
    let x6742: BytePoly_32 = bigint_nondet_quot!(ctx, x6702, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6742, x4, 33), x6741, 33),
            x6702,
            33
        ),
        260103,
        4,
    )?;
    let x6743: BytePoly_1 = bigint_sub!(x5, x6741, 1);
    eqz(ctx, &bigint_mul!(x6741, x6743, 2), 8131, 2)?;
    let x6744: BytePoly_32 = bigint_add!(bigint_sub!(x6740, x6726, 32), x3, 32);
    let x6745: BytePoly_32 = bigint_add!(bigint_sub!(x6737, x6724, 32), x3, 32);
    let x6746: BytePoly_32 = bigint_nondet_inv!(ctx, x6745, x3, 32);
    let x6747: BytePoly_64 = bigint_mul!(x6745, x6746, 64);
    let x6748: BytePoly_34 = bigint_nondet_quot!(ctx, x6747, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x6747, bigint_mul!(x6748, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x6749: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x6744, x6746, 64), x3, 32);
    let x6750: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x6749, x6745, 64), x6744, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x6751: BytePoly_34 = bigint_nondet_quot!(ctx, x6750, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x6750, bigint_mul!(x6751, x3, 66), 66),
        276359,
        4,
    )?;
    let x6752: BytePoly_64 = bigint_mul!(x6749, x6749, 64);
    let x6753: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x6752, x6724, 64), x3, 64),
            x6737,
            64
        ),
        x3,
        64
    );
    let x6754: BytePoly_34 = bigint_nondet_quot!(ctx, x6753, x3, 34);
    let x6755: BytePoly_32 = bigint_nondet_rem!(ctx, x6753, x3, 32);
    let x6756: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x6749, x6755, 64),
                        bigint_add!(
                            bigint_sub!(x6726, bigint_mul!(x6749, x6724, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x6757: BytePoly_34 = bigint_nondet_quot!(ctx, x6756, x3, 34);
    let x6758: BytePoly_32 = bigint_nondet_rem!(ctx, x6756, x3, 32);
    let x6759: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x6752, bigint_mul!(x6754, x3, 66), 66),
                        x6724,
                        66
                    ),
                    x6737,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x6755,
        66
    );
    eqz(ctx, &x6759, 276359, 4)?;
    let x6760: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x6757, x3, 66), x6758, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x6749, bigint_sub!(x6724, x6755, 32), 64),
                        x6726,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x6760, 276359, 4)?;
    let x6761: BytePoly_33 = bigint_add!(
        bigint_mul!(x6755, x6741, 33),
        bigint_mul!(x6724, x6743, 33),
        33
    );
    let x6762: BytePoly_33 = bigint_add!(
        bigint_mul!(x6758, x6741, 33),
        bigint_mul!(x6726, x6743, 33),
        33
    );
    let x6763: BytePoly_3 = bigint_nondet_quot!(ctx, x6761, x3, 3);
    let x6764: BytePoly_32 = bigint_nondet_rem!(ctx, x6761, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6763, x3, 35), x6764, 35),
            x6761,
            35
        ),
        260103,
        4,
    )?;
    let x6765: BytePoly_3 = bigint_nondet_quot!(ctx, x6762, x3, 3);
    let x6766: BytePoly_32 = bigint_nondet_rem!(ctx, x6762, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6765, x3, 35), x6766, 35),
            x6762,
            35
        ),
        260103,
        4,
    )?;
    let x6767: BytePoly_64 = bigint_mul!(x6737, x6737, 64);
    let x6768: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x6767, x6767, 64), x6767, 64),
        x2,
        64
    );
    let x6769: BytePoly_64 = bigint_add!(x48, x6768, 64);
    let x6770: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x6740, x6740, 32), x3, 32);
    let x6771: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x6768, x6770, 96), x3, 32);
    let x6772: BytePoly_64 = bigint_mul!(x6740, x6771, 64);
    let x6773: BytePoly_64 = bigint_add!(x6772, x6772, 64);
    let x6774: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x6769, x6773, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6774, x3, 66), x6773, 66),
            x6769,
            66
        ),
        276359,
        4,
    )?;
    let x6775: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x6771, x6771, 64), x3, 64), x3, 64),
            x6737,
            64
        ),
        x6737,
        64
    );
    let x6776: BytePoly_34 = bigint_nondet_quot!(ctx, x6775, x3, 34);
    let x6777: BytePoly_32 = bigint_nondet_rem!(ctx, x6775, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6776, x3, 66), x6777, 66),
            x6775,
            66
        ),
        276359,
        4,
    )?;
    let x6778: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x6771, x6777, 64), 64), x3, 64),
            x6740,
            64
        ),
        bigint_mul!(x6771, x6737, 64),
        64
    );
    let x6779: BytePoly_34 = bigint_nondet_quot!(ctx, x6778, x3, 34);
    let x6780: BytePoly_32 = bigint_nondet_rem!(ctx, x6778, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6779, x3, 66), x6780, 66),
            x6778,
            66
        ),
        276359,
        4,
    )?;
    let x6781: BytePoly_1 = bigint_nondet_rem!(ctx, x6742, x4, 1);
    let x6782: BytePoly_32 = bigint_nondet_quot!(ctx, x6742, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6782, x4, 33), x6781, 33),
            x6742,
            33
        ),
        260103,
        4,
    )?;
    let x6783: BytePoly_1 = bigint_sub!(x5, x6781, 1);
    eqz(ctx, &bigint_mul!(x6781, x6783, 2), 8131, 2)?;
    let x6784: BytePoly_32 = bigint_add!(bigint_sub!(x6780, x6766, 32), x3, 32);
    let x6785: BytePoly_32 = bigint_add!(bigint_sub!(x6777, x6764, 32), x3, 32);
    let x6786: BytePoly_32 = bigint_nondet_inv!(ctx, x6785, x3, 32);
    let x6787: BytePoly_64 = bigint_mul!(x6785, x6786, 64);
    let x6788: BytePoly_34 = bigint_nondet_quot!(ctx, x6787, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x6787, bigint_mul!(x6788, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x6789: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x6784, x6786, 64), x3, 32);
    let x6790: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x6789, x6785, 64), x6784, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x6791: BytePoly_34 = bigint_nondet_quot!(ctx, x6790, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x6790, bigint_mul!(x6791, x3, 66), 66),
        276359,
        4,
    )?;
    let x6792: BytePoly_64 = bigint_mul!(x6789, x6789, 64);
    let x6793: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x6792, x6764, 64), x3, 64),
            x6777,
            64
        ),
        x3,
        64
    );
    let x6794: BytePoly_34 = bigint_nondet_quot!(ctx, x6793, x3, 34);
    let x6795: BytePoly_32 = bigint_nondet_rem!(ctx, x6793, x3, 32);
    let x6796: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x6789, x6795, 64),
                        bigint_add!(
                            bigint_sub!(x6766, bigint_mul!(x6789, x6764, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x6797: BytePoly_34 = bigint_nondet_quot!(ctx, x6796, x3, 34);
    let x6798: BytePoly_32 = bigint_nondet_rem!(ctx, x6796, x3, 32);
    let x6799: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x6792, bigint_mul!(x6794, x3, 66), 66),
                        x6764,
                        66
                    ),
                    x6777,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x6795,
        66
    );
    eqz(ctx, &x6799, 276359, 4)?;
    let x6800: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x6797, x3, 66), x6798, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x6789, bigint_sub!(x6764, x6795, 32), 64),
                        x6766,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x6800, 276359, 4)?;
    let x6801: BytePoly_33 = bigint_add!(
        bigint_mul!(x6795, x6781, 33),
        bigint_mul!(x6764, x6783, 33),
        33
    );
    let x6802: BytePoly_33 = bigint_add!(
        bigint_mul!(x6798, x6781, 33),
        bigint_mul!(x6766, x6783, 33),
        33
    );
    let x6803: BytePoly_3 = bigint_nondet_quot!(ctx, x6801, x3, 3);
    let x6804: BytePoly_32 = bigint_nondet_rem!(ctx, x6801, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6803, x3, 35), x6804, 35),
            x6801,
            35
        ),
        260103,
        4,
    )?;
    let x6805: BytePoly_3 = bigint_nondet_quot!(ctx, x6802, x3, 3);
    let x6806: BytePoly_32 = bigint_nondet_rem!(ctx, x6802, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6805, x3, 35), x6806, 35),
            x6802,
            35
        ),
        260103,
        4,
    )?;
    let x6807: BytePoly_64 = bigint_mul!(x6777, x6777, 64);
    let x6808: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x6807, x6807, 64), x6807, 64),
        x2,
        64
    );
    let x6809: BytePoly_64 = bigint_add!(x48, x6808, 64);
    let x6810: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x6780, x6780, 32), x3, 32);
    let x6811: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x6808, x6810, 96), x3, 32);
    let x6812: BytePoly_64 = bigint_mul!(x6780, x6811, 64);
    let x6813: BytePoly_64 = bigint_add!(x6812, x6812, 64);
    let x6814: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x6809, x6813, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6814, x3, 66), x6813, 66),
            x6809,
            66
        ),
        276359,
        4,
    )?;
    let x6815: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x6811, x6811, 64), x3, 64), x3, 64),
            x6777,
            64
        ),
        x6777,
        64
    );
    let x6816: BytePoly_34 = bigint_nondet_quot!(ctx, x6815, x3, 34);
    let x6817: BytePoly_32 = bigint_nondet_rem!(ctx, x6815, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6816, x3, 66), x6817, 66),
            x6815,
            66
        ),
        276359,
        4,
    )?;
    let x6818: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x6811, x6817, 64), 64), x3, 64),
            x6780,
            64
        ),
        bigint_mul!(x6811, x6777, 64),
        64
    );
    let x6819: BytePoly_34 = bigint_nondet_quot!(ctx, x6818, x3, 34);
    let x6820: BytePoly_32 = bigint_nondet_rem!(ctx, x6818, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6819, x3, 66), x6820, 66),
            x6818,
            66
        ),
        276359,
        4,
    )?;
    let x6821: BytePoly_1 = bigint_nondet_rem!(ctx, x6782, x4, 1);
    let x6822: BytePoly_32 = bigint_nondet_quot!(ctx, x6782, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6822, x4, 33), x6821, 33),
            x6782,
            33
        ),
        260103,
        4,
    )?;
    let x6823: BytePoly_1 = bigint_sub!(x5, x6821, 1);
    eqz(ctx, &bigint_mul!(x6821, x6823, 2), 8131, 2)?;
    let x6824: BytePoly_32 = bigint_add!(bigint_sub!(x6820, x6806, 32), x3, 32);
    let x6825: BytePoly_32 = bigint_add!(bigint_sub!(x6817, x6804, 32), x3, 32);
    let x6826: BytePoly_32 = bigint_nondet_inv!(ctx, x6825, x3, 32);
    let x6827: BytePoly_64 = bigint_mul!(x6825, x6826, 64);
    let x6828: BytePoly_34 = bigint_nondet_quot!(ctx, x6827, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x6827, bigint_mul!(x6828, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x6829: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x6824, x6826, 64), x3, 32);
    let x6830: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x6829, x6825, 64), x6824, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x6831: BytePoly_34 = bigint_nondet_quot!(ctx, x6830, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x6830, bigint_mul!(x6831, x3, 66), 66),
        276359,
        4,
    )?;
    let x6832: BytePoly_64 = bigint_mul!(x6829, x6829, 64);
    let x6833: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x6832, x6804, 64), x3, 64),
            x6817,
            64
        ),
        x3,
        64
    );
    let x6834: BytePoly_34 = bigint_nondet_quot!(ctx, x6833, x3, 34);
    let x6835: BytePoly_32 = bigint_nondet_rem!(ctx, x6833, x3, 32);
    let x6836: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x6829, x6835, 64),
                        bigint_add!(
                            bigint_sub!(x6806, bigint_mul!(x6829, x6804, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x6837: BytePoly_34 = bigint_nondet_quot!(ctx, x6836, x3, 34);
    let x6838: BytePoly_32 = bigint_nondet_rem!(ctx, x6836, x3, 32);
    let x6839: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x6832, bigint_mul!(x6834, x3, 66), 66),
                        x6804,
                        66
                    ),
                    x6817,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x6835,
        66
    );
    eqz(ctx, &x6839, 276359, 4)?;
    let x6840: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x6837, x3, 66), x6838, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x6829, bigint_sub!(x6804, x6835, 32), 64),
                        x6806,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x6840, 276359, 4)?;
    let x6841: BytePoly_33 = bigint_add!(
        bigint_mul!(x6835, x6821, 33),
        bigint_mul!(x6804, x6823, 33),
        33
    );
    let x6842: BytePoly_33 = bigint_add!(
        bigint_mul!(x6838, x6821, 33),
        bigint_mul!(x6806, x6823, 33),
        33
    );
    let x6843: BytePoly_3 = bigint_nondet_quot!(ctx, x6841, x3, 3);
    let x6844: BytePoly_32 = bigint_nondet_rem!(ctx, x6841, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6843, x3, 35), x6844, 35),
            x6841,
            35
        ),
        260103,
        4,
    )?;
    let x6845: BytePoly_3 = bigint_nondet_quot!(ctx, x6842, x3, 3);
    let x6846: BytePoly_32 = bigint_nondet_rem!(ctx, x6842, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6845, x3, 35), x6846, 35),
            x6842,
            35
        ),
        260103,
        4,
    )?;
    let x6847: BytePoly_64 = bigint_mul!(x6817, x6817, 64);
    let x6848: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x6847, x6847, 64), x6847, 64),
        x2,
        64
    );
    let x6849: BytePoly_64 = bigint_add!(x48, x6848, 64);
    let x6850: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x6820, x6820, 32), x3, 32);
    let x6851: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x6848, x6850, 96), x3, 32);
    let x6852: BytePoly_64 = bigint_mul!(x6820, x6851, 64);
    let x6853: BytePoly_64 = bigint_add!(x6852, x6852, 64);
    let x6854: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x6849, x6853, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6854, x3, 66), x6853, 66),
            x6849,
            66
        ),
        276359,
        4,
    )?;
    let x6855: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x6851, x6851, 64), x3, 64), x3, 64),
            x6817,
            64
        ),
        x6817,
        64
    );
    let x6856: BytePoly_34 = bigint_nondet_quot!(ctx, x6855, x3, 34);
    let x6857: BytePoly_32 = bigint_nondet_rem!(ctx, x6855, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6856, x3, 66), x6857, 66),
            x6855,
            66
        ),
        276359,
        4,
    )?;
    let x6858: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x6851, x6857, 64), 64), x3, 64),
            x6820,
            64
        ),
        bigint_mul!(x6851, x6817, 64),
        64
    );
    let x6859: BytePoly_34 = bigint_nondet_quot!(ctx, x6858, x3, 34);
    let x6860: BytePoly_32 = bigint_nondet_rem!(ctx, x6858, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6859, x3, 66), x6860, 66),
            x6858,
            66
        ),
        276359,
        4,
    )?;
    let x6861: BytePoly_1 = bigint_nondet_rem!(ctx, x6822, x4, 1);
    let x6862: BytePoly_32 = bigint_nondet_quot!(ctx, x6822, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6862, x4, 33), x6861, 33),
            x6822,
            33
        ),
        260103,
        4,
    )?;
    let x6863: BytePoly_1 = bigint_sub!(x5, x6861, 1);
    eqz(ctx, &bigint_mul!(x6861, x6863, 2), 8131, 2)?;
    let x6864: BytePoly_32 = bigint_add!(bigint_sub!(x6860, x6846, 32), x3, 32);
    let x6865: BytePoly_32 = bigint_add!(bigint_sub!(x6857, x6844, 32), x3, 32);
    let x6866: BytePoly_32 = bigint_nondet_inv!(ctx, x6865, x3, 32);
    let x6867: BytePoly_64 = bigint_mul!(x6865, x6866, 64);
    let x6868: BytePoly_34 = bigint_nondet_quot!(ctx, x6867, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x6867, bigint_mul!(x6868, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x6869: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x6864, x6866, 64), x3, 32);
    let x6870: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x6869, x6865, 64), x6864, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x6871: BytePoly_34 = bigint_nondet_quot!(ctx, x6870, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x6870, bigint_mul!(x6871, x3, 66), 66),
        276359,
        4,
    )?;
    let x6872: BytePoly_64 = bigint_mul!(x6869, x6869, 64);
    let x6873: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x6872, x6844, 64), x3, 64),
            x6857,
            64
        ),
        x3,
        64
    );
    let x6874: BytePoly_34 = bigint_nondet_quot!(ctx, x6873, x3, 34);
    let x6875: BytePoly_32 = bigint_nondet_rem!(ctx, x6873, x3, 32);
    let x6876: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x6869, x6875, 64),
                        bigint_add!(
                            bigint_sub!(x6846, bigint_mul!(x6869, x6844, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x6877: BytePoly_34 = bigint_nondet_quot!(ctx, x6876, x3, 34);
    let x6878: BytePoly_32 = bigint_nondet_rem!(ctx, x6876, x3, 32);
    let x6879: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x6872, bigint_mul!(x6874, x3, 66), 66),
                        x6844,
                        66
                    ),
                    x6857,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x6875,
        66
    );
    eqz(ctx, &x6879, 276359, 4)?;
    let x6880: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x6877, x3, 66), x6878, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x6869, bigint_sub!(x6844, x6875, 32), 64),
                        x6846,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x6880, 276359, 4)?;
    let x6881: BytePoly_33 = bigint_add!(
        bigint_mul!(x6875, x6861, 33),
        bigint_mul!(x6844, x6863, 33),
        33
    );
    let x6882: BytePoly_33 = bigint_add!(
        bigint_mul!(x6878, x6861, 33),
        bigint_mul!(x6846, x6863, 33),
        33
    );
    let x6883: BytePoly_3 = bigint_nondet_quot!(ctx, x6881, x3, 3);
    let x6884: BytePoly_32 = bigint_nondet_rem!(ctx, x6881, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6883, x3, 35), x6884, 35),
            x6881,
            35
        ),
        260103,
        4,
    )?;
    let x6885: BytePoly_3 = bigint_nondet_quot!(ctx, x6882, x3, 3);
    let x6886: BytePoly_32 = bigint_nondet_rem!(ctx, x6882, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6885, x3, 35), x6886, 35),
            x6882,
            35
        ),
        260103,
        4,
    )?;
    let x6887: BytePoly_64 = bigint_mul!(x6857, x6857, 64);
    let x6888: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x6887, x6887, 64), x6887, 64),
        x2,
        64
    );
    let x6889: BytePoly_64 = bigint_add!(x48, x6888, 64);
    let x6890: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x6860, x6860, 32), x3, 32);
    let x6891: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x6888, x6890, 96), x3, 32);
    let x6892: BytePoly_64 = bigint_mul!(x6860, x6891, 64);
    let x6893: BytePoly_64 = bigint_add!(x6892, x6892, 64);
    let x6894: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x6889, x6893, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6894, x3, 66), x6893, 66),
            x6889,
            66
        ),
        276359,
        4,
    )?;
    let x6895: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x6891, x6891, 64), x3, 64), x3, 64),
            x6857,
            64
        ),
        x6857,
        64
    );
    let x6896: BytePoly_34 = bigint_nondet_quot!(ctx, x6895, x3, 34);
    let x6897: BytePoly_32 = bigint_nondet_rem!(ctx, x6895, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6896, x3, 66), x6897, 66),
            x6895,
            66
        ),
        276359,
        4,
    )?;
    let x6898: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x6891, x6897, 64), 64), x3, 64),
            x6860,
            64
        ),
        bigint_mul!(x6891, x6857, 64),
        64
    );
    let x6899: BytePoly_34 = bigint_nondet_quot!(ctx, x6898, x3, 34);
    let x6900: BytePoly_32 = bigint_nondet_rem!(ctx, x6898, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6899, x3, 66), x6900, 66),
            x6898,
            66
        ),
        276359,
        4,
    )?;
    let x6901: BytePoly_1 = bigint_nondet_rem!(ctx, x6862, x4, 1);
    let x6902: BytePoly_32 = bigint_nondet_quot!(ctx, x6862, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6902, x4, 33), x6901, 33),
            x6862,
            33
        ),
        260103,
        4,
    )?;
    let x6903: BytePoly_1 = bigint_sub!(x5, x6901, 1);
    eqz(ctx, &bigint_mul!(x6901, x6903, 2), 8131, 2)?;
    let x6904: BytePoly_32 = bigint_add!(bigint_sub!(x6900, x6886, 32), x3, 32);
    let x6905: BytePoly_32 = bigint_add!(bigint_sub!(x6897, x6884, 32), x3, 32);
    let x6906: BytePoly_32 = bigint_nondet_inv!(ctx, x6905, x3, 32);
    let x6907: BytePoly_64 = bigint_mul!(x6905, x6906, 64);
    let x6908: BytePoly_34 = bigint_nondet_quot!(ctx, x6907, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x6907, bigint_mul!(x6908, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x6909: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x6904, x6906, 64), x3, 32);
    let x6910: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x6909, x6905, 64), x6904, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x6911: BytePoly_34 = bigint_nondet_quot!(ctx, x6910, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x6910, bigint_mul!(x6911, x3, 66), 66),
        276359,
        4,
    )?;
    let x6912: BytePoly_64 = bigint_mul!(x6909, x6909, 64);
    let x6913: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x6912, x6884, 64), x3, 64),
            x6897,
            64
        ),
        x3,
        64
    );
    let x6914: BytePoly_34 = bigint_nondet_quot!(ctx, x6913, x3, 34);
    let x6915: BytePoly_32 = bigint_nondet_rem!(ctx, x6913, x3, 32);
    let x6916: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x6909, x6915, 64),
                        bigint_add!(
                            bigint_sub!(x6886, bigint_mul!(x6909, x6884, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x6917: BytePoly_34 = bigint_nondet_quot!(ctx, x6916, x3, 34);
    let x6918: BytePoly_32 = bigint_nondet_rem!(ctx, x6916, x3, 32);
    let x6919: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x6912, bigint_mul!(x6914, x3, 66), 66),
                        x6884,
                        66
                    ),
                    x6897,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x6915,
        66
    );
    eqz(ctx, &x6919, 276359, 4)?;
    let x6920: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x6917, x3, 66), x6918, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x6909, bigint_sub!(x6884, x6915, 32), 64),
                        x6886,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x6920, 276359, 4)?;
    let x6921: BytePoly_33 = bigint_add!(
        bigint_mul!(x6915, x6901, 33),
        bigint_mul!(x6884, x6903, 33),
        33
    );
    let x6922: BytePoly_33 = bigint_add!(
        bigint_mul!(x6918, x6901, 33),
        bigint_mul!(x6886, x6903, 33),
        33
    );
    let x6923: BytePoly_3 = bigint_nondet_quot!(ctx, x6921, x3, 3);
    let x6924: BytePoly_32 = bigint_nondet_rem!(ctx, x6921, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6923, x3, 35), x6924, 35),
            x6921,
            35
        ),
        260103,
        4,
    )?;
    let x6925: BytePoly_3 = bigint_nondet_quot!(ctx, x6922, x3, 3);
    let x6926: BytePoly_32 = bigint_nondet_rem!(ctx, x6922, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6925, x3, 35), x6926, 35),
            x6922,
            35
        ),
        260103,
        4,
    )?;
    let x6927: BytePoly_64 = bigint_mul!(x6897, x6897, 64);
    let x6928: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x6927, x6927, 64), x6927, 64),
        x2,
        64
    );
    let x6929: BytePoly_64 = bigint_add!(x48, x6928, 64);
    let x6930: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x6900, x6900, 32), x3, 32);
    let x6931: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x6928, x6930, 96), x3, 32);
    let x6932: BytePoly_64 = bigint_mul!(x6900, x6931, 64);
    let x6933: BytePoly_64 = bigint_add!(x6932, x6932, 64);
    let x6934: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x6929, x6933, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6934, x3, 66), x6933, 66),
            x6929,
            66
        ),
        276359,
        4,
    )?;
    let x6935: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x6931, x6931, 64), x3, 64), x3, 64),
            x6897,
            64
        ),
        x6897,
        64
    );
    let x6936: BytePoly_34 = bigint_nondet_quot!(ctx, x6935, x3, 34);
    let x6937: BytePoly_32 = bigint_nondet_rem!(ctx, x6935, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6936, x3, 66), x6937, 66),
            x6935,
            66
        ),
        276359,
        4,
    )?;
    let x6938: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x6931, x6937, 64), 64), x3, 64),
            x6900,
            64
        ),
        bigint_mul!(x6931, x6897, 64),
        64
    );
    let x6939: BytePoly_34 = bigint_nondet_quot!(ctx, x6938, x3, 34);
    let x6940: BytePoly_32 = bigint_nondet_rem!(ctx, x6938, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6939, x3, 66), x6940, 66),
            x6938,
            66
        ),
        276359,
        4,
    )?;
    let x6941: BytePoly_1 = bigint_nondet_rem!(ctx, x6902, x4, 1);
    let x6942: BytePoly_32 = bigint_nondet_quot!(ctx, x6902, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6942, x4, 33), x6941, 33),
            x6902,
            33
        ),
        260103,
        4,
    )?;
    let x6943: BytePoly_1 = bigint_sub!(x5, x6941, 1);
    eqz(ctx, &bigint_mul!(x6941, x6943, 2), 8131, 2)?;
    let x6944: BytePoly_32 = bigint_add!(bigint_sub!(x6940, x6926, 32), x3, 32);
    let x6945: BytePoly_32 = bigint_add!(bigint_sub!(x6937, x6924, 32), x3, 32);
    let x6946: BytePoly_32 = bigint_nondet_inv!(ctx, x6945, x3, 32);
    let x6947: BytePoly_64 = bigint_mul!(x6945, x6946, 64);
    let x6948: BytePoly_34 = bigint_nondet_quot!(ctx, x6947, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x6947, bigint_mul!(x6948, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x6949: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x6944, x6946, 64), x3, 32);
    let x6950: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x6949, x6945, 64), x6944, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x6951: BytePoly_34 = bigint_nondet_quot!(ctx, x6950, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x6950, bigint_mul!(x6951, x3, 66), 66),
        276359,
        4,
    )?;
    let x6952: BytePoly_64 = bigint_mul!(x6949, x6949, 64);
    let x6953: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x6952, x6924, 64), x3, 64),
            x6937,
            64
        ),
        x3,
        64
    );
    let x6954: BytePoly_34 = bigint_nondet_quot!(ctx, x6953, x3, 34);
    let x6955: BytePoly_32 = bigint_nondet_rem!(ctx, x6953, x3, 32);
    let x6956: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x6949, x6955, 64),
                        bigint_add!(
                            bigint_sub!(x6926, bigint_mul!(x6949, x6924, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x6957: BytePoly_34 = bigint_nondet_quot!(ctx, x6956, x3, 34);
    let x6958: BytePoly_32 = bigint_nondet_rem!(ctx, x6956, x3, 32);
    let x6959: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x6952, bigint_mul!(x6954, x3, 66), 66),
                        x6924,
                        66
                    ),
                    x6937,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x6955,
        66
    );
    eqz(ctx, &x6959, 276359, 4)?;
    let x6960: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x6957, x3, 66), x6958, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x6949, bigint_sub!(x6924, x6955, 32), 64),
                        x6926,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x6960, 276359, 4)?;
    let x6961: BytePoly_33 = bigint_add!(
        bigint_mul!(x6955, x6941, 33),
        bigint_mul!(x6924, x6943, 33),
        33
    );
    let x6962: BytePoly_33 = bigint_add!(
        bigint_mul!(x6958, x6941, 33),
        bigint_mul!(x6926, x6943, 33),
        33
    );
    let x6963: BytePoly_3 = bigint_nondet_quot!(ctx, x6961, x3, 3);
    let x6964: BytePoly_32 = bigint_nondet_rem!(ctx, x6961, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6963, x3, 35), x6964, 35),
            x6961,
            35
        ),
        260103,
        4,
    )?;
    let x6965: BytePoly_3 = bigint_nondet_quot!(ctx, x6962, x3, 3);
    let x6966: BytePoly_32 = bigint_nondet_rem!(ctx, x6962, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6965, x3, 35), x6966, 35),
            x6962,
            35
        ),
        260103,
        4,
    )?;
    let x6967: BytePoly_64 = bigint_mul!(x6937, x6937, 64);
    let x6968: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x6967, x6967, 64), x6967, 64),
        x2,
        64
    );
    let x6969: BytePoly_64 = bigint_add!(x48, x6968, 64);
    let x6970: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x6940, x6940, 32), x3, 32);
    let x6971: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x6968, x6970, 96), x3, 32);
    let x6972: BytePoly_64 = bigint_mul!(x6940, x6971, 64);
    let x6973: BytePoly_64 = bigint_add!(x6972, x6972, 64);
    let x6974: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x6969, x6973, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6974, x3, 66), x6973, 66),
            x6969,
            66
        ),
        276359,
        4,
    )?;
    let x6975: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x6971, x6971, 64), x3, 64), x3, 64),
            x6937,
            64
        ),
        x6937,
        64
    );
    let x6976: BytePoly_34 = bigint_nondet_quot!(ctx, x6975, x3, 34);
    let x6977: BytePoly_32 = bigint_nondet_rem!(ctx, x6975, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6976, x3, 66), x6977, 66),
            x6975,
            66
        ),
        276359,
        4,
    )?;
    let x6978: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x6971, x6977, 64), 64), x3, 64),
            x6940,
            64
        ),
        bigint_mul!(x6971, x6937, 64),
        64
    );
    let x6979: BytePoly_34 = bigint_nondet_quot!(ctx, x6978, x3, 34);
    let x6980: BytePoly_32 = bigint_nondet_rem!(ctx, x6978, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6979, x3, 66), x6980, 66),
            x6978,
            66
        ),
        276359,
        4,
    )?;
    let x6981: BytePoly_1 = bigint_nondet_rem!(ctx, x6942, x4, 1);
    let x6982: BytePoly_32 = bigint_nondet_quot!(ctx, x6942, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6982, x4, 33), x6981, 33),
            x6942,
            33
        ),
        260103,
        4,
    )?;
    let x6983: BytePoly_1 = bigint_sub!(x5, x6981, 1);
    eqz(ctx, &bigint_mul!(x6981, x6983, 2), 8131, 2)?;
    let x6984: BytePoly_32 = bigint_add!(bigint_sub!(x6980, x6966, 32), x3, 32);
    let x6985: BytePoly_32 = bigint_add!(bigint_sub!(x6977, x6964, 32), x3, 32);
    let x6986: BytePoly_32 = bigint_nondet_inv!(ctx, x6985, x3, 32);
    let x6987: BytePoly_64 = bigint_mul!(x6985, x6986, 64);
    let x6988: BytePoly_34 = bigint_nondet_quot!(ctx, x6987, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x6987, bigint_mul!(x6988, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x6989: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x6984, x6986, 64), x3, 32);
    let x6990: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x6989, x6985, 64), x6984, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x6991: BytePoly_34 = bigint_nondet_quot!(ctx, x6990, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x6990, bigint_mul!(x6991, x3, 66), 66),
        276359,
        4,
    )?;
    let x6992: BytePoly_64 = bigint_mul!(x6989, x6989, 64);
    let x6993: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x6992, x6964, 64), x3, 64),
            x6977,
            64
        ),
        x3,
        64
    );
    let x6994: BytePoly_34 = bigint_nondet_quot!(ctx, x6993, x3, 34);
    let x6995: BytePoly_32 = bigint_nondet_rem!(ctx, x6993, x3, 32);
    let x6996: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x6989, x6995, 64),
                        bigint_add!(
                            bigint_sub!(x6966, bigint_mul!(x6989, x6964, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x6997: BytePoly_34 = bigint_nondet_quot!(ctx, x6996, x3, 34);
    let x6998: BytePoly_32 = bigint_nondet_rem!(ctx, x6996, x3, 32);
    let x6999: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x6992, bigint_mul!(x6994, x3, 66), 66),
                        x6964,
                        66
                    ),
                    x6977,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x6995,
        66
    );
    eqz(ctx, &x6999, 276359, 4)?;
    let x7000: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x6997, x3, 66), x6998, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x6989, bigint_sub!(x6964, x6995, 32), 64),
                        x6966,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x7000, 276359, 4)?;
    let x7001: BytePoly_33 = bigint_add!(
        bigint_mul!(x6995, x6981, 33),
        bigint_mul!(x6964, x6983, 33),
        33
    );
    let x7002: BytePoly_33 = bigint_add!(
        bigint_mul!(x6998, x6981, 33),
        bigint_mul!(x6966, x6983, 33),
        33
    );
    let x7003: BytePoly_3 = bigint_nondet_quot!(ctx, x7001, x3, 3);
    let x7004: BytePoly_32 = bigint_nondet_rem!(ctx, x7001, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7003, x3, 35), x7004, 35),
            x7001,
            35
        ),
        260103,
        4,
    )?;
    let x7005: BytePoly_3 = bigint_nondet_quot!(ctx, x7002, x3, 3);
    let x7006: BytePoly_32 = bigint_nondet_rem!(ctx, x7002, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7005, x3, 35), x7006, 35),
            x7002,
            35
        ),
        260103,
        4,
    )?;
    let x7007: BytePoly_64 = bigint_mul!(x6977, x6977, 64);
    let x7008: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x7007, x7007, 64), x7007, 64),
        x2,
        64
    );
    let x7009: BytePoly_64 = bigint_add!(x48, x7008, 64);
    let x7010: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x6980, x6980, 32), x3, 32);
    let x7011: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7008, x7010, 96), x3, 32);
    let x7012: BytePoly_64 = bigint_mul!(x6980, x7011, 64);
    let x7013: BytePoly_64 = bigint_add!(x7012, x7012, 64);
    let x7014: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x7009, x7013, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7014, x3, 66), x7013, 66),
            x7009,
            66
        ),
        276359,
        4,
    )?;
    let x7015: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x7011, x7011, 64), x3, 64), x3, 64),
            x6977,
            64
        ),
        x6977,
        64
    );
    let x7016: BytePoly_34 = bigint_nondet_quot!(ctx, x7015, x3, 34);
    let x7017: BytePoly_32 = bigint_nondet_rem!(ctx, x7015, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7016, x3, 66), x7017, 66),
            x7015,
            66
        ),
        276359,
        4,
    )?;
    let x7018: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x7011, x7017, 64), 64), x3, 64),
            x6980,
            64
        ),
        bigint_mul!(x7011, x6977, 64),
        64
    );
    let x7019: BytePoly_34 = bigint_nondet_quot!(ctx, x7018, x3, 34);
    let x7020: BytePoly_32 = bigint_nondet_rem!(ctx, x7018, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7019, x3, 66), x7020, 66),
            x7018,
            66
        ),
        276359,
        4,
    )?;
    let x7021: BytePoly_1 = bigint_nondet_rem!(ctx, x6982, x4, 1);
    let x7022: BytePoly_32 = bigint_nondet_quot!(ctx, x6982, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7022, x4, 33), x7021, 33),
            x6982,
            33
        ),
        260103,
        4,
    )?;
    let x7023: BytePoly_1 = bigint_sub!(x5, x7021, 1);
    eqz(ctx, &bigint_mul!(x7021, x7023, 2), 8131, 2)?;
    let x7024: BytePoly_32 = bigint_add!(bigint_sub!(x7020, x7006, 32), x3, 32);
    let x7025: BytePoly_32 = bigint_add!(bigint_sub!(x7017, x7004, 32), x3, 32);
    let x7026: BytePoly_32 = bigint_nondet_inv!(ctx, x7025, x3, 32);
    let x7027: BytePoly_64 = bigint_mul!(x7025, x7026, 64);
    let x7028: BytePoly_34 = bigint_nondet_quot!(ctx, x7027, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x7027, bigint_mul!(x7028, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x7029: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7024, x7026, 64), x3, 32);
    let x7030: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x7029, x7025, 64), x7024, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x7031: BytePoly_34 = bigint_nondet_quot!(ctx, x7030, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x7030, bigint_mul!(x7031, x3, 66), 66),
        276359,
        4,
    )?;
    let x7032: BytePoly_64 = bigint_mul!(x7029, x7029, 64);
    let x7033: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x7032, x7004, 64), x3, 64),
            x7017,
            64
        ),
        x3,
        64
    );
    let x7034: BytePoly_34 = bigint_nondet_quot!(ctx, x7033, x3, 34);
    let x7035: BytePoly_32 = bigint_nondet_rem!(ctx, x7033, x3, 32);
    let x7036: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x7029, x7035, 64),
                        bigint_add!(
                            bigint_sub!(x7006, bigint_mul!(x7029, x7004, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x7037: BytePoly_34 = bigint_nondet_quot!(ctx, x7036, x3, 34);
    let x7038: BytePoly_32 = bigint_nondet_rem!(ctx, x7036, x3, 32);
    let x7039: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x7032, bigint_mul!(x7034, x3, 66), 66),
                        x7004,
                        66
                    ),
                    x7017,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x7035,
        66
    );
    eqz(ctx, &x7039, 276359, 4)?;
    let x7040: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x7037, x3, 66), x7038, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x7029, bigint_sub!(x7004, x7035, 32), 64),
                        x7006,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x7040, 276359, 4)?;
    let x7041: BytePoly_33 = bigint_add!(
        bigint_mul!(x7035, x7021, 33),
        bigint_mul!(x7004, x7023, 33),
        33
    );
    let x7042: BytePoly_33 = bigint_add!(
        bigint_mul!(x7038, x7021, 33),
        bigint_mul!(x7006, x7023, 33),
        33
    );
    let x7043: BytePoly_3 = bigint_nondet_quot!(ctx, x7041, x3, 3);
    let x7044: BytePoly_32 = bigint_nondet_rem!(ctx, x7041, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7043, x3, 35), x7044, 35),
            x7041,
            35
        ),
        260103,
        4,
    )?;
    let x7045: BytePoly_3 = bigint_nondet_quot!(ctx, x7042, x3, 3);
    let x7046: BytePoly_32 = bigint_nondet_rem!(ctx, x7042, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7045, x3, 35), x7046, 35),
            x7042,
            35
        ),
        260103,
        4,
    )?;
    let x7047: BytePoly_64 = bigint_mul!(x7017, x7017, 64);
    let x7048: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x7047, x7047, 64), x7047, 64),
        x2,
        64
    );
    let x7049: BytePoly_64 = bigint_add!(x48, x7048, 64);
    let x7050: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x7020, x7020, 32), x3, 32);
    let x7051: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7048, x7050, 96), x3, 32);
    let x7052: BytePoly_64 = bigint_mul!(x7020, x7051, 64);
    let x7053: BytePoly_64 = bigint_add!(x7052, x7052, 64);
    let x7054: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x7049, x7053, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7054, x3, 66), x7053, 66),
            x7049,
            66
        ),
        276359,
        4,
    )?;
    let x7055: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x7051, x7051, 64), x3, 64), x3, 64),
            x7017,
            64
        ),
        x7017,
        64
    );
    let x7056: BytePoly_34 = bigint_nondet_quot!(ctx, x7055, x3, 34);
    let x7057: BytePoly_32 = bigint_nondet_rem!(ctx, x7055, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7056, x3, 66), x7057, 66),
            x7055,
            66
        ),
        276359,
        4,
    )?;
    let x7058: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x7051, x7057, 64), 64), x3, 64),
            x7020,
            64
        ),
        bigint_mul!(x7051, x7017, 64),
        64
    );
    let x7059: BytePoly_34 = bigint_nondet_quot!(ctx, x7058, x3, 34);
    let x7060: BytePoly_32 = bigint_nondet_rem!(ctx, x7058, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7059, x3, 66), x7060, 66),
            x7058,
            66
        ),
        276359,
        4,
    )?;
    let x7061: BytePoly_1 = bigint_nondet_rem!(ctx, x7022, x4, 1);
    let x7062: BytePoly_32 = bigint_nondet_quot!(ctx, x7022, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7062, x4, 33), x7061, 33),
            x7022,
            33
        ),
        260103,
        4,
    )?;
    let x7063: BytePoly_1 = bigint_sub!(x5, x7061, 1);
    eqz(ctx, &bigint_mul!(x7061, x7063, 2), 8131, 2)?;
    let x7064: BytePoly_32 = bigint_add!(bigint_sub!(x7060, x7046, 32), x3, 32);
    let x7065: BytePoly_32 = bigint_add!(bigint_sub!(x7057, x7044, 32), x3, 32);
    let x7066: BytePoly_32 = bigint_nondet_inv!(ctx, x7065, x3, 32);
    let x7067: BytePoly_64 = bigint_mul!(x7065, x7066, 64);
    let x7068: BytePoly_34 = bigint_nondet_quot!(ctx, x7067, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x7067, bigint_mul!(x7068, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x7069: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7064, x7066, 64), x3, 32);
    let x7070: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x7069, x7065, 64), x7064, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x7071: BytePoly_34 = bigint_nondet_quot!(ctx, x7070, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x7070, bigint_mul!(x7071, x3, 66), 66),
        276359,
        4,
    )?;
    let x7072: BytePoly_64 = bigint_mul!(x7069, x7069, 64);
    let x7073: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x7072, x7044, 64), x3, 64),
            x7057,
            64
        ),
        x3,
        64
    );
    let x7074: BytePoly_34 = bigint_nondet_quot!(ctx, x7073, x3, 34);
    let x7075: BytePoly_32 = bigint_nondet_rem!(ctx, x7073, x3, 32);
    let x7076: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x7069, x7075, 64),
                        bigint_add!(
                            bigint_sub!(x7046, bigint_mul!(x7069, x7044, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x7077: BytePoly_34 = bigint_nondet_quot!(ctx, x7076, x3, 34);
    let x7078: BytePoly_32 = bigint_nondet_rem!(ctx, x7076, x3, 32);
    let x7079: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x7072, bigint_mul!(x7074, x3, 66), 66),
                        x7044,
                        66
                    ),
                    x7057,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x7075,
        66
    );
    eqz(ctx, &x7079, 276359, 4)?;
    let x7080: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x7077, x3, 66), x7078, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x7069, bigint_sub!(x7044, x7075, 32), 64),
                        x7046,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x7080, 276359, 4)?;
    let x7081: BytePoly_33 = bigint_add!(
        bigint_mul!(x7075, x7061, 33),
        bigint_mul!(x7044, x7063, 33),
        33
    );
    let x7082: BytePoly_33 = bigint_add!(
        bigint_mul!(x7078, x7061, 33),
        bigint_mul!(x7046, x7063, 33),
        33
    );
    let x7083: BytePoly_3 = bigint_nondet_quot!(ctx, x7081, x3, 3);
    let x7084: BytePoly_32 = bigint_nondet_rem!(ctx, x7081, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7083, x3, 35), x7084, 35),
            x7081,
            35
        ),
        260103,
        4,
    )?;
    let x7085: BytePoly_3 = bigint_nondet_quot!(ctx, x7082, x3, 3);
    let x7086: BytePoly_32 = bigint_nondet_rem!(ctx, x7082, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7085, x3, 35), x7086, 35),
            x7082,
            35
        ),
        260103,
        4,
    )?;
    let x7087: BytePoly_64 = bigint_mul!(x7057, x7057, 64);
    let x7088: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x7087, x7087, 64), x7087, 64),
        x2,
        64
    );
    let x7089: BytePoly_64 = bigint_add!(x48, x7088, 64);
    let x7090: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x7060, x7060, 32), x3, 32);
    let x7091: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7088, x7090, 96), x3, 32);
    let x7092: BytePoly_64 = bigint_mul!(x7060, x7091, 64);
    let x7093: BytePoly_64 = bigint_add!(x7092, x7092, 64);
    let x7094: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x7089, x7093, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7094, x3, 66), x7093, 66),
            x7089,
            66
        ),
        276359,
        4,
    )?;
    let x7095: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x7091, x7091, 64), x3, 64), x3, 64),
            x7057,
            64
        ),
        x7057,
        64
    );
    let x7096: BytePoly_34 = bigint_nondet_quot!(ctx, x7095, x3, 34);
    let x7097: BytePoly_32 = bigint_nondet_rem!(ctx, x7095, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7096, x3, 66), x7097, 66),
            x7095,
            66
        ),
        276359,
        4,
    )?;
    let x7098: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x7091, x7097, 64), 64), x3, 64),
            x7060,
            64
        ),
        bigint_mul!(x7091, x7057, 64),
        64
    );
    let x7099: BytePoly_34 = bigint_nondet_quot!(ctx, x7098, x3, 34);
    let x7100: BytePoly_32 = bigint_nondet_rem!(ctx, x7098, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7099, x3, 66), x7100, 66),
            x7098,
            66
        ),
        276359,
        4,
    )?;
    let x7101: BytePoly_1 = bigint_nondet_rem!(ctx, x7062, x4, 1);
    let x7102: BytePoly_32 = bigint_nondet_quot!(ctx, x7062, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7102, x4, 33), x7101, 33),
            x7062,
            33
        ),
        260103,
        4,
    )?;
    let x7103: BytePoly_1 = bigint_sub!(x5, x7101, 1);
    eqz(ctx, &bigint_mul!(x7101, x7103, 2), 8131, 2)?;
    let x7104: BytePoly_32 = bigint_add!(bigint_sub!(x7100, x7086, 32), x3, 32);
    let x7105: BytePoly_32 = bigint_add!(bigint_sub!(x7097, x7084, 32), x3, 32);
    let x7106: BytePoly_32 = bigint_nondet_inv!(ctx, x7105, x3, 32);
    let x7107: BytePoly_64 = bigint_mul!(x7105, x7106, 64);
    let x7108: BytePoly_34 = bigint_nondet_quot!(ctx, x7107, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x7107, bigint_mul!(x7108, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x7109: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7104, x7106, 64), x3, 32);
    let x7110: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x7109, x7105, 64), x7104, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x7111: BytePoly_34 = bigint_nondet_quot!(ctx, x7110, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x7110, bigint_mul!(x7111, x3, 66), 66),
        276359,
        4,
    )?;
    let x7112: BytePoly_64 = bigint_mul!(x7109, x7109, 64);
    let x7113: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x7112, x7084, 64), x3, 64),
            x7097,
            64
        ),
        x3,
        64
    );
    let x7114: BytePoly_34 = bigint_nondet_quot!(ctx, x7113, x3, 34);
    let x7115: BytePoly_32 = bigint_nondet_rem!(ctx, x7113, x3, 32);
    let x7116: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x7109, x7115, 64),
                        bigint_add!(
                            bigint_sub!(x7086, bigint_mul!(x7109, x7084, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x7117: BytePoly_34 = bigint_nondet_quot!(ctx, x7116, x3, 34);
    let x7118: BytePoly_32 = bigint_nondet_rem!(ctx, x7116, x3, 32);
    let x7119: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x7112, bigint_mul!(x7114, x3, 66), 66),
                        x7084,
                        66
                    ),
                    x7097,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x7115,
        66
    );
    eqz(ctx, &x7119, 276359, 4)?;
    let x7120: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x7117, x3, 66), x7118, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x7109, bigint_sub!(x7084, x7115, 32), 64),
                        x7086,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x7120, 276359, 4)?;
    let x7121: BytePoly_33 = bigint_add!(
        bigint_mul!(x7115, x7101, 33),
        bigint_mul!(x7084, x7103, 33),
        33
    );
    let x7122: BytePoly_33 = bigint_add!(
        bigint_mul!(x7118, x7101, 33),
        bigint_mul!(x7086, x7103, 33),
        33
    );
    let x7123: BytePoly_3 = bigint_nondet_quot!(ctx, x7121, x3, 3);
    let x7124: BytePoly_32 = bigint_nondet_rem!(ctx, x7121, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7123, x3, 35), x7124, 35),
            x7121,
            35
        ),
        260103,
        4,
    )?;
    let x7125: BytePoly_3 = bigint_nondet_quot!(ctx, x7122, x3, 3);
    let x7126: BytePoly_32 = bigint_nondet_rem!(ctx, x7122, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7125, x3, 35), x7126, 35),
            x7122,
            35
        ),
        260103,
        4,
    )?;
    let x7127: BytePoly_64 = bigint_mul!(x7097, x7097, 64);
    let x7128: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x7127, x7127, 64), x7127, 64),
        x2,
        64
    );
    let x7129: BytePoly_64 = bigint_add!(x48, x7128, 64);
    let x7130: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x7100, x7100, 32), x3, 32);
    let x7131: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7128, x7130, 96), x3, 32);
    let x7132: BytePoly_64 = bigint_mul!(x7100, x7131, 64);
    let x7133: BytePoly_64 = bigint_add!(x7132, x7132, 64);
    let x7134: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x7129, x7133, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7134, x3, 66), x7133, 66),
            x7129,
            66
        ),
        276359,
        4,
    )?;
    let x7135: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x7131, x7131, 64), x3, 64), x3, 64),
            x7097,
            64
        ),
        x7097,
        64
    );
    let x7136: BytePoly_34 = bigint_nondet_quot!(ctx, x7135, x3, 34);
    let x7137: BytePoly_32 = bigint_nondet_rem!(ctx, x7135, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7136, x3, 66), x7137, 66),
            x7135,
            66
        ),
        276359,
        4,
    )?;
    let x7138: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x7131, x7137, 64), 64), x3, 64),
            x7100,
            64
        ),
        bigint_mul!(x7131, x7097, 64),
        64
    );
    let x7139: BytePoly_34 = bigint_nondet_quot!(ctx, x7138, x3, 34);
    let x7140: BytePoly_32 = bigint_nondet_rem!(ctx, x7138, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7139, x3, 66), x7140, 66),
            x7138,
            66
        ),
        276359,
        4,
    )?;
    let x7141: BytePoly_1 = bigint_nondet_rem!(ctx, x7102, x4, 1);
    let x7142: BytePoly_32 = bigint_nondet_quot!(ctx, x7102, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7142, x4, 33), x7141, 33),
            x7102,
            33
        ),
        260103,
        4,
    )?;
    let x7143: BytePoly_1 = bigint_sub!(x5, x7141, 1);
    eqz(ctx, &bigint_mul!(x7141, x7143, 2), 8131, 2)?;
    let x7144: BytePoly_32 = bigint_add!(bigint_sub!(x7140, x7126, 32), x3, 32);
    let x7145: BytePoly_32 = bigint_add!(bigint_sub!(x7137, x7124, 32), x3, 32);
    let x7146: BytePoly_32 = bigint_nondet_inv!(ctx, x7145, x3, 32);
    let x7147: BytePoly_64 = bigint_mul!(x7145, x7146, 64);
    let x7148: BytePoly_34 = bigint_nondet_quot!(ctx, x7147, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x7147, bigint_mul!(x7148, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x7149: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7144, x7146, 64), x3, 32);
    let x7150: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x7149, x7145, 64), x7144, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x7151: BytePoly_34 = bigint_nondet_quot!(ctx, x7150, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x7150, bigint_mul!(x7151, x3, 66), 66),
        276359,
        4,
    )?;
    let x7152: BytePoly_64 = bigint_mul!(x7149, x7149, 64);
    let x7153: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x7152, x7124, 64), x3, 64),
            x7137,
            64
        ),
        x3,
        64
    );
    let x7154: BytePoly_34 = bigint_nondet_quot!(ctx, x7153, x3, 34);
    let x7155: BytePoly_32 = bigint_nondet_rem!(ctx, x7153, x3, 32);
    let x7156: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x7149, x7155, 64),
                        bigint_add!(
                            bigint_sub!(x7126, bigint_mul!(x7149, x7124, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x7157: BytePoly_34 = bigint_nondet_quot!(ctx, x7156, x3, 34);
    let x7158: BytePoly_32 = bigint_nondet_rem!(ctx, x7156, x3, 32);
    let x7159: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x7152, bigint_mul!(x7154, x3, 66), 66),
                        x7124,
                        66
                    ),
                    x7137,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x7155,
        66
    );
    eqz(ctx, &x7159, 276359, 4)?;
    let x7160: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x7157, x3, 66), x7158, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x7149, bigint_sub!(x7124, x7155, 32), 64),
                        x7126,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x7160, 276359, 4)?;
    let x7161: BytePoly_33 = bigint_add!(
        bigint_mul!(x7155, x7141, 33),
        bigint_mul!(x7124, x7143, 33),
        33
    );
    let x7162: BytePoly_33 = bigint_add!(
        bigint_mul!(x7158, x7141, 33),
        bigint_mul!(x7126, x7143, 33),
        33
    );
    let x7163: BytePoly_3 = bigint_nondet_quot!(ctx, x7161, x3, 3);
    let x7164: BytePoly_32 = bigint_nondet_rem!(ctx, x7161, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7163, x3, 35), x7164, 35),
            x7161,
            35
        ),
        260103,
        4,
    )?;
    let x7165: BytePoly_3 = bigint_nondet_quot!(ctx, x7162, x3, 3);
    let x7166: BytePoly_32 = bigint_nondet_rem!(ctx, x7162, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7165, x3, 35), x7166, 35),
            x7162,
            35
        ),
        260103,
        4,
    )?;
    let x7167: BytePoly_64 = bigint_mul!(x7137, x7137, 64);
    let x7168: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x7167, x7167, 64), x7167, 64),
        x2,
        64
    );
    let x7169: BytePoly_64 = bigint_add!(x48, x7168, 64);
    let x7170: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x7140, x7140, 32), x3, 32);
    let x7171: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7168, x7170, 96), x3, 32);
    let x7172: BytePoly_64 = bigint_mul!(x7140, x7171, 64);
    let x7173: BytePoly_64 = bigint_add!(x7172, x7172, 64);
    let x7174: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x7169, x7173, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7174, x3, 66), x7173, 66),
            x7169,
            66
        ),
        276359,
        4,
    )?;
    let x7175: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x7171, x7171, 64), x3, 64), x3, 64),
            x7137,
            64
        ),
        x7137,
        64
    );
    let x7176: BytePoly_34 = bigint_nondet_quot!(ctx, x7175, x3, 34);
    let x7177: BytePoly_32 = bigint_nondet_rem!(ctx, x7175, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7176, x3, 66), x7177, 66),
            x7175,
            66
        ),
        276359,
        4,
    )?;
    let x7178: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x7171, x7177, 64), 64), x3, 64),
            x7140,
            64
        ),
        bigint_mul!(x7171, x7137, 64),
        64
    );
    let x7179: BytePoly_34 = bigint_nondet_quot!(ctx, x7178, x3, 34);
    let x7180: BytePoly_32 = bigint_nondet_rem!(ctx, x7178, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7179, x3, 66), x7180, 66),
            x7178,
            66
        ),
        276359,
        4,
    )?;
    let x7181: BytePoly_1 = bigint_nondet_rem!(ctx, x7142, x4, 1);
    let x7182: BytePoly_32 = bigint_nondet_quot!(ctx, x7142, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7182, x4, 33), x7181, 33),
            x7142,
            33
        ),
        260103,
        4,
    )?;
    let x7183: BytePoly_1 = bigint_sub!(x5, x7181, 1);
    eqz(ctx, &bigint_mul!(x7181, x7183, 2), 8131, 2)?;
    let x7184: BytePoly_32 = bigint_add!(bigint_sub!(x7180, x7166, 32), x3, 32);
    let x7185: BytePoly_32 = bigint_add!(bigint_sub!(x7177, x7164, 32), x3, 32);
    let x7186: BytePoly_32 = bigint_nondet_inv!(ctx, x7185, x3, 32);
    let x7187: BytePoly_64 = bigint_mul!(x7185, x7186, 64);
    let x7188: BytePoly_34 = bigint_nondet_quot!(ctx, x7187, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x7187, bigint_mul!(x7188, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x7189: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7184, x7186, 64), x3, 32);
    let x7190: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x7189, x7185, 64), x7184, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x7191: BytePoly_34 = bigint_nondet_quot!(ctx, x7190, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x7190, bigint_mul!(x7191, x3, 66), 66),
        276359,
        4,
    )?;
    let x7192: BytePoly_64 = bigint_mul!(x7189, x7189, 64);
    let x7193: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x7192, x7164, 64), x3, 64),
            x7177,
            64
        ),
        x3,
        64
    );
    let x7194: BytePoly_34 = bigint_nondet_quot!(ctx, x7193, x3, 34);
    let x7195: BytePoly_32 = bigint_nondet_rem!(ctx, x7193, x3, 32);
    let x7196: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x7189, x7195, 64),
                        bigint_add!(
                            bigint_sub!(x7166, bigint_mul!(x7189, x7164, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x7197: BytePoly_34 = bigint_nondet_quot!(ctx, x7196, x3, 34);
    let x7198: BytePoly_32 = bigint_nondet_rem!(ctx, x7196, x3, 32);
    let x7199: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x7192, bigint_mul!(x7194, x3, 66), 66),
                        x7164,
                        66
                    ),
                    x7177,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x7195,
        66
    );
    eqz(ctx, &x7199, 276359, 4)?;
    let x7200: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x7197, x3, 66), x7198, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x7189, bigint_sub!(x7164, x7195, 32), 64),
                        x7166,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x7200, 276359, 4)?;
    let x7201: BytePoly_33 = bigint_add!(
        bigint_mul!(x7195, x7181, 33),
        bigint_mul!(x7164, x7183, 33),
        33
    );
    let x7202: BytePoly_33 = bigint_add!(
        bigint_mul!(x7198, x7181, 33),
        bigint_mul!(x7166, x7183, 33),
        33
    );
    let x7203: BytePoly_3 = bigint_nondet_quot!(ctx, x7201, x3, 3);
    let x7204: BytePoly_32 = bigint_nondet_rem!(ctx, x7201, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7203, x3, 35), x7204, 35),
            x7201,
            35
        ),
        260103,
        4,
    )?;
    let x7205: BytePoly_3 = bigint_nondet_quot!(ctx, x7202, x3, 3);
    let x7206: BytePoly_32 = bigint_nondet_rem!(ctx, x7202, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7205, x3, 35), x7206, 35),
            x7202,
            35
        ),
        260103,
        4,
    )?;
    let x7207: BytePoly_64 = bigint_mul!(x7177, x7177, 64);
    let x7208: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x7207, x7207, 64), x7207, 64),
        x2,
        64
    );
    let x7209: BytePoly_64 = bigint_add!(x48, x7208, 64);
    let x7210: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x7180, x7180, 32), x3, 32);
    let x7211: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7208, x7210, 96), x3, 32);
    let x7212: BytePoly_64 = bigint_mul!(x7180, x7211, 64);
    let x7213: BytePoly_64 = bigint_add!(x7212, x7212, 64);
    let x7214: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x7209, x7213, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7214, x3, 66), x7213, 66),
            x7209,
            66
        ),
        276359,
        4,
    )?;
    let x7215: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x7211, x7211, 64), x3, 64), x3, 64),
            x7177,
            64
        ),
        x7177,
        64
    );
    let x7216: BytePoly_34 = bigint_nondet_quot!(ctx, x7215, x3, 34);
    let x7217: BytePoly_32 = bigint_nondet_rem!(ctx, x7215, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7216, x3, 66), x7217, 66),
            x7215,
            66
        ),
        276359,
        4,
    )?;
    let x7218: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x7211, x7217, 64), 64), x3, 64),
            x7180,
            64
        ),
        bigint_mul!(x7211, x7177, 64),
        64
    );
    let x7219: BytePoly_34 = bigint_nondet_quot!(ctx, x7218, x3, 34);
    let x7220: BytePoly_32 = bigint_nondet_rem!(ctx, x7218, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7219, x3, 66), x7220, 66),
            x7218,
            66
        ),
        276359,
        4,
    )?;
    let x7221: BytePoly_1 = bigint_nondet_rem!(ctx, x7182, x4, 1);
    let x7222: BytePoly_32 = bigint_nondet_quot!(ctx, x7182, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7222, x4, 33), x7221, 33),
            x7182,
            33
        ),
        260103,
        4,
    )?;
    let x7223: BytePoly_1 = bigint_sub!(x5, x7221, 1);
    eqz(ctx, &bigint_mul!(x7221, x7223, 2), 8131, 2)?;
    let x7224: BytePoly_32 = bigint_add!(bigint_sub!(x7220, x7206, 32), x3, 32);
    let x7225: BytePoly_32 = bigint_add!(bigint_sub!(x7217, x7204, 32), x3, 32);
    let x7226: BytePoly_32 = bigint_nondet_inv!(ctx, x7225, x3, 32);
    let x7227: BytePoly_64 = bigint_mul!(x7225, x7226, 64);
    let x7228: BytePoly_34 = bigint_nondet_quot!(ctx, x7227, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x7227, bigint_mul!(x7228, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x7229: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7224, x7226, 64), x3, 32);
    let x7230: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x7229, x7225, 64), x7224, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x7231: BytePoly_34 = bigint_nondet_quot!(ctx, x7230, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x7230, bigint_mul!(x7231, x3, 66), 66),
        276359,
        4,
    )?;
    let x7232: BytePoly_64 = bigint_mul!(x7229, x7229, 64);
    let x7233: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x7232, x7204, 64), x3, 64),
            x7217,
            64
        ),
        x3,
        64
    );
    let x7234: BytePoly_34 = bigint_nondet_quot!(ctx, x7233, x3, 34);
    let x7235: BytePoly_32 = bigint_nondet_rem!(ctx, x7233, x3, 32);
    let x7236: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x7229, x7235, 64),
                        bigint_add!(
                            bigint_sub!(x7206, bigint_mul!(x7229, x7204, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x7237: BytePoly_34 = bigint_nondet_quot!(ctx, x7236, x3, 34);
    let x7238: BytePoly_32 = bigint_nondet_rem!(ctx, x7236, x3, 32);
    let x7239: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x7232, bigint_mul!(x7234, x3, 66), 66),
                        x7204,
                        66
                    ),
                    x7217,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x7235,
        66
    );
    eqz(ctx, &x7239, 276359, 4)?;
    let x7240: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x7237, x3, 66), x7238, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x7229, bigint_sub!(x7204, x7235, 32), 64),
                        x7206,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x7240, 276359, 4)?;
    let x7241: BytePoly_33 = bigint_add!(
        bigint_mul!(x7235, x7221, 33),
        bigint_mul!(x7204, x7223, 33),
        33
    );
    let x7242: BytePoly_33 = bigint_add!(
        bigint_mul!(x7238, x7221, 33),
        bigint_mul!(x7206, x7223, 33),
        33
    );
    let x7243: BytePoly_3 = bigint_nondet_quot!(ctx, x7241, x3, 3);
    let x7244: BytePoly_32 = bigint_nondet_rem!(ctx, x7241, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7243, x3, 35), x7244, 35),
            x7241,
            35
        ),
        260103,
        4,
    )?;
    let x7245: BytePoly_3 = bigint_nondet_quot!(ctx, x7242, x3, 3);
    let x7246: BytePoly_32 = bigint_nondet_rem!(ctx, x7242, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7245, x3, 35), x7246, 35),
            x7242,
            35
        ),
        260103,
        4,
    )?;
    let x7247: BytePoly_64 = bigint_mul!(x7217, x7217, 64);
    let x7248: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x7247, x7247, 64), x7247, 64),
        x2,
        64
    );
    let x7249: BytePoly_64 = bigint_add!(x48, x7248, 64);
    let x7250: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x7220, x7220, 32), x3, 32);
    let x7251: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7248, x7250, 96), x3, 32);
    let x7252: BytePoly_64 = bigint_mul!(x7220, x7251, 64);
    let x7253: BytePoly_64 = bigint_add!(x7252, x7252, 64);
    let x7254: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x7249, x7253, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7254, x3, 66), x7253, 66),
            x7249,
            66
        ),
        276359,
        4,
    )?;
    let x7255: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x7251, x7251, 64), x3, 64), x3, 64),
            x7217,
            64
        ),
        x7217,
        64
    );
    let x7256: BytePoly_34 = bigint_nondet_quot!(ctx, x7255, x3, 34);
    let x7257: BytePoly_32 = bigint_nondet_rem!(ctx, x7255, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7256, x3, 66), x7257, 66),
            x7255,
            66
        ),
        276359,
        4,
    )?;
    let x7258: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x7251, x7257, 64), 64), x3, 64),
            x7220,
            64
        ),
        bigint_mul!(x7251, x7217, 64),
        64
    );
    let x7259: BytePoly_34 = bigint_nondet_quot!(ctx, x7258, x3, 34);
    let x7260: BytePoly_32 = bigint_nondet_rem!(ctx, x7258, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7259, x3, 66), x7260, 66),
            x7258,
            66
        ),
        276359,
        4,
    )?;
    let x7261: BytePoly_1 = bigint_nondet_rem!(ctx, x7222, x4, 1);
    let x7262: BytePoly_32 = bigint_nondet_quot!(ctx, x7222, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7262, x4, 33), x7261, 33),
            x7222,
            33
        ),
        260103,
        4,
    )?;
    let x7263: BytePoly_1 = bigint_sub!(x5, x7261, 1);
    eqz(ctx, &bigint_mul!(x7261, x7263, 2), 8131, 2)?;
    let x7264: BytePoly_32 = bigint_add!(bigint_sub!(x7260, x7246, 32), x3, 32);
    let x7265: BytePoly_32 = bigint_add!(bigint_sub!(x7257, x7244, 32), x3, 32);
    let x7266: BytePoly_32 = bigint_nondet_inv!(ctx, x7265, x3, 32);
    let x7267: BytePoly_64 = bigint_mul!(x7265, x7266, 64);
    let x7268: BytePoly_34 = bigint_nondet_quot!(ctx, x7267, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x7267, bigint_mul!(x7268, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x7269: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7264, x7266, 64), x3, 32);
    let x7270: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x7269, x7265, 64), x7264, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x7271: BytePoly_34 = bigint_nondet_quot!(ctx, x7270, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x7270, bigint_mul!(x7271, x3, 66), 66),
        276359,
        4,
    )?;
    let x7272: BytePoly_64 = bigint_mul!(x7269, x7269, 64);
    let x7273: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x7272, x7244, 64), x3, 64),
            x7257,
            64
        ),
        x3,
        64
    );
    let x7274: BytePoly_34 = bigint_nondet_quot!(ctx, x7273, x3, 34);
    let x7275: BytePoly_32 = bigint_nondet_rem!(ctx, x7273, x3, 32);
    let x7276: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x7269, x7275, 64),
                        bigint_add!(
                            bigint_sub!(x7246, bigint_mul!(x7269, x7244, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x7277: BytePoly_34 = bigint_nondet_quot!(ctx, x7276, x3, 34);
    let x7278: BytePoly_32 = bigint_nondet_rem!(ctx, x7276, x3, 32);
    let x7279: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x7272, bigint_mul!(x7274, x3, 66), 66),
                        x7244,
                        66
                    ),
                    x7257,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x7275,
        66
    );
    eqz(ctx, &x7279, 276359, 4)?;
    let x7280: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x7277, x3, 66), x7278, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x7269, bigint_sub!(x7244, x7275, 32), 64),
                        x7246,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x7280, 276359, 4)?;
    let x7281: BytePoly_33 = bigint_add!(
        bigint_mul!(x7275, x7261, 33),
        bigint_mul!(x7244, x7263, 33),
        33
    );
    let x7282: BytePoly_33 = bigint_add!(
        bigint_mul!(x7278, x7261, 33),
        bigint_mul!(x7246, x7263, 33),
        33
    );
    let x7283: BytePoly_3 = bigint_nondet_quot!(ctx, x7281, x3, 3);
    let x7284: BytePoly_32 = bigint_nondet_rem!(ctx, x7281, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7283, x3, 35), x7284, 35),
            x7281,
            35
        ),
        260103,
        4,
    )?;
    let x7285: BytePoly_3 = bigint_nondet_quot!(ctx, x7282, x3, 3);
    let x7286: BytePoly_32 = bigint_nondet_rem!(ctx, x7282, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7285, x3, 35), x7286, 35),
            x7282,
            35
        ),
        260103,
        4,
    )?;
    let x7287: BytePoly_64 = bigint_mul!(x7257, x7257, 64);
    let x7288: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x7287, x7287, 64), x7287, 64),
        x2,
        64
    );
    let x7289: BytePoly_64 = bigint_add!(x48, x7288, 64);
    let x7290: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x7260, x7260, 32), x3, 32);
    let x7291: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7288, x7290, 96), x3, 32);
    let x7292: BytePoly_64 = bigint_mul!(x7260, x7291, 64);
    let x7293: BytePoly_64 = bigint_add!(x7292, x7292, 64);
    let x7294: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x7289, x7293, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7294, x3, 66), x7293, 66),
            x7289,
            66
        ),
        276359,
        4,
    )?;
    let x7295: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x7291, x7291, 64), x3, 64), x3, 64),
            x7257,
            64
        ),
        x7257,
        64
    );
    let x7296: BytePoly_34 = bigint_nondet_quot!(ctx, x7295, x3, 34);
    let x7297: BytePoly_32 = bigint_nondet_rem!(ctx, x7295, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7296, x3, 66), x7297, 66),
            x7295,
            66
        ),
        276359,
        4,
    )?;
    let x7298: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x7291, x7297, 64), 64), x3, 64),
            x7260,
            64
        ),
        bigint_mul!(x7291, x7257, 64),
        64
    );
    let x7299: BytePoly_34 = bigint_nondet_quot!(ctx, x7298, x3, 34);
    let x7300: BytePoly_32 = bigint_nondet_rem!(ctx, x7298, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7299, x3, 66), x7300, 66),
            x7298,
            66
        ),
        276359,
        4,
    )?;
    let x7301: BytePoly_1 = bigint_nondet_rem!(ctx, x7262, x4, 1);
    let x7302: BytePoly_32 = bigint_nondet_quot!(ctx, x7262, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7302, x4, 33), x7301, 33),
            x7262,
            33
        ),
        260103,
        4,
    )?;
    let x7303: BytePoly_1 = bigint_sub!(x5, x7301, 1);
    eqz(ctx, &bigint_mul!(x7301, x7303, 2), 8131, 2)?;
    let x7304: BytePoly_32 = bigint_add!(bigint_sub!(x7300, x7286, 32), x3, 32);
    let x7305: BytePoly_32 = bigint_add!(bigint_sub!(x7297, x7284, 32), x3, 32);
    let x7306: BytePoly_32 = bigint_nondet_inv!(ctx, x7305, x3, 32);
    let x7307: BytePoly_64 = bigint_mul!(x7305, x7306, 64);
    let x7308: BytePoly_34 = bigint_nondet_quot!(ctx, x7307, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x7307, bigint_mul!(x7308, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x7309: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7304, x7306, 64), x3, 32);
    let x7310: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x7309, x7305, 64), x7304, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x7311: BytePoly_34 = bigint_nondet_quot!(ctx, x7310, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x7310, bigint_mul!(x7311, x3, 66), 66),
        276359,
        4,
    )?;
    let x7312: BytePoly_64 = bigint_mul!(x7309, x7309, 64);
    let x7313: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x7312, x7284, 64), x3, 64),
            x7297,
            64
        ),
        x3,
        64
    );
    let x7314: BytePoly_34 = bigint_nondet_quot!(ctx, x7313, x3, 34);
    let x7315: BytePoly_32 = bigint_nondet_rem!(ctx, x7313, x3, 32);
    let x7316: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x7309, x7315, 64),
                        bigint_add!(
                            bigint_sub!(x7286, bigint_mul!(x7309, x7284, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x7317: BytePoly_34 = bigint_nondet_quot!(ctx, x7316, x3, 34);
    let x7318: BytePoly_32 = bigint_nondet_rem!(ctx, x7316, x3, 32);
    let x7319: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x7312, bigint_mul!(x7314, x3, 66), 66),
                        x7284,
                        66
                    ),
                    x7297,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x7315,
        66
    );
    eqz(ctx, &x7319, 276359, 4)?;
    let x7320: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x7317, x3, 66), x7318, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x7309, bigint_sub!(x7284, x7315, 32), 64),
                        x7286,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x7320, 276359, 4)?;
    let x7321: BytePoly_33 = bigint_add!(
        bigint_mul!(x7315, x7301, 33),
        bigint_mul!(x7284, x7303, 33),
        33
    );
    let x7322: BytePoly_33 = bigint_add!(
        bigint_mul!(x7318, x7301, 33),
        bigint_mul!(x7286, x7303, 33),
        33
    );
    let x7323: BytePoly_3 = bigint_nondet_quot!(ctx, x7321, x3, 3);
    let x7324: BytePoly_32 = bigint_nondet_rem!(ctx, x7321, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7323, x3, 35), x7324, 35),
            x7321,
            35
        ),
        260103,
        4,
    )?;
    let x7325: BytePoly_3 = bigint_nondet_quot!(ctx, x7322, x3, 3);
    let x7326: BytePoly_32 = bigint_nondet_rem!(ctx, x7322, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7325, x3, 35), x7326, 35),
            x7322,
            35
        ),
        260103,
        4,
    )?;
    let x7327: BytePoly_64 = bigint_mul!(x7297, x7297, 64);
    let x7328: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x7327, x7327, 64), x7327, 64),
        x2,
        64
    );
    let x7329: BytePoly_64 = bigint_add!(x48, x7328, 64);
    let x7330: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x7300, x7300, 32), x3, 32);
    let x7331: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7328, x7330, 96), x3, 32);
    let x7332: BytePoly_64 = bigint_mul!(x7300, x7331, 64);
    let x7333: BytePoly_64 = bigint_add!(x7332, x7332, 64);
    let x7334: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x7329, x7333, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7334, x3, 66), x7333, 66),
            x7329,
            66
        ),
        276359,
        4,
    )?;
    let x7335: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x7331, x7331, 64), x3, 64), x3, 64),
            x7297,
            64
        ),
        x7297,
        64
    );
    let x7336: BytePoly_34 = bigint_nondet_quot!(ctx, x7335, x3, 34);
    let x7337: BytePoly_32 = bigint_nondet_rem!(ctx, x7335, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7336, x3, 66), x7337, 66),
            x7335,
            66
        ),
        276359,
        4,
    )?;
    let x7338: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x7331, x7337, 64), 64), x3, 64),
            x7300,
            64
        ),
        bigint_mul!(x7331, x7297, 64),
        64
    );
    let x7339: BytePoly_34 = bigint_nondet_quot!(ctx, x7338, x3, 34);
    let x7340: BytePoly_32 = bigint_nondet_rem!(ctx, x7338, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7339, x3, 66), x7340, 66),
            x7338,
            66
        ),
        276359,
        4,
    )?;
    let x7341: BytePoly_1 = bigint_nondet_rem!(ctx, x7302, x4, 1);
    let x7342: BytePoly_32 = bigint_nondet_quot!(ctx, x7302, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7342, x4, 33), x7341, 33),
            x7302,
            33
        ),
        260103,
        4,
    )?;
    let x7343: BytePoly_1 = bigint_sub!(x5, x7341, 1);
    eqz(ctx, &bigint_mul!(x7341, x7343, 2), 8131, 2)?;
    let x7344: BytePoly_32 = bigint_add!(bigint_sub!(x7340, x7326, 32), x3, 32);
    let x7345: BytePoly_32 = bigint_add!(bigint_sub!(x7337, x7324, 32), x3, 32);
    let x7346: BytePoly_32 = bigint_nondet_inv!(ctx, x7345, x3, 32);
    let x7347: BytePoly_64 = bigint_mul!(x7345, x7346, 64);
    let x7348: BytePoly_34 = bigint_nondet_quot!(ctx, x7347, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x7347, bigint_mul!(x7348, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x7349: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7344, x7346, 64), x3, 32);
    let x7350: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x7349, x7345, 64), x7344, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x7351: BytePoly_34 = bigint_nondet_quot!(ctx, x7350, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x7350, bigint_mul!(x7351, x3, 66), 66),
        276359,
        4,
    )?;
    let x7352: BytePoly_64 = bigint_mul!(x7349, x7349, 64);
    let x7353: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x7352, x7324, 64), x3, 64),
            x7337,
            64
        ),
        x3,
        64
    );
    let x7354: BytePoly_34 = bigint_nondet_quot!(ctx, x7353, x3, 34);
    let x7355: BytePoly_32 = bigint_nondet_rem!(ctx, x7353, x3, 32);
    let x7356: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x7349, x7355, 64),
                        bigint_add!(
                            bigint_sub!(x7326, bigint_mul!(x7349, x7324, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x7357: BytePoly_34 = bigint_nondet_quot!(ctx, x7356, x3, 34);
    let x7358: BytePoly_32 = bigint_nondet_rem!(ctx, x7356, x3, 32);
    let x7359: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x7352, bigint_mul!(x7354, x3, 66), 66),
                        x7324,
                        66
                    ),
                    x7337,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x7355,
        66
    );
    eqz(ctx, &x7359, 276359, 4)?;
    let x7360: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x7357, x3, 66), x7358, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x7349, bigint_sub!(x7324, x7355, 32), 64),
                        x7326,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x7360, 276359, 4)?;
    let x7361: BytePoly_33 = bigint_add!(
        bigint_mul!(x7355, x7341, 33),
        bigint_mul!(x7324, x7343, 33),
        33
    );
    let x7362: BytePoly_33 = bigint_add!(
        bigint_mul!(x7358, x7341, 33),
        bigint_mul!(x7326, x7343, 33),
        33
    );
    let x7363: BytePoly_3 = bigint_nondet_quot!(ctx, x7361, x3, 3);
    let x7364: BytePoly_32 = bigint_nondet_rem!(ctx, x7361, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7363, x3, 35), x7364, 35),
            x7361,
            35
        ),
        260103,
        4,
    )?;
    let x7365: BytePoly_3 = bigint_nondet_quot!(ctx, x7362, x3, 3);
    let x7366: BytePoly_32 = bigint_nondet_rem!(ctx, x7362, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7365, x3, 35), x7366, 35),
            x7362,
            35
        ),
        260103,
        4,
    )?;
    let x7367: BytePoly_64 = bigint_mul!(x7337, x7337, 64);
    let x7368: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x7367, x7367, 64), x7367, 64),
        x2,
        64
    );
    let x7369: BytePoly_64 = bigint_add!(x48, x7368, 64);
    let x7370: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x7340, x7340, 32), x3, 32);
    let x7371: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7368, x7370, 96), x3, 32);
    let x7372: BytePoly_64 = bigint_mul!(x7340, x7371, 64);
    let x7373: BytePoly_64 = bigint_add!(x7372, x7372, 64);
    let x7374: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x7369, x7373, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7374, x3, 66), x7373, 66),
            x7369,
            66
        ),
        276359,
        4,
    )?;
    let x7375: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x7371, x7371, 64), x3, 64), x3, 64),
            x7337,
            64
        ),
        x7337,
        64
    );
    let x7376: BytePoly_34 = bigint_nondet_quot!(ctx, x7375, x3, 34);
    let x7377: BytePoly_32 = bigint_nondet_rem!(ctx, x7375, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7376, x3, 66), x7377, 66),
            x7375,
            66
        ),
        276359,
        4,
    )?;
    let x7378: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x7371, x7377, 64), 64), x3, 64),
            x7340,
            64
        ),
        bigint_mul!(x7371, x7337, 64),
        64
    );
    let x7379: BytePoly_34 = bigint_nondet_quot!(ctx, x7378, x3, 34);
    let x7380: BytePoly_32 = bigint_nondet_rem!(ctx, x7378, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7379, x3, 66), x7380, 66),
            x7378,
            66
        ),
        276359,
        4,
    )?;
    let x7381: BytePoly_1 = bigint_nondet_rem!(ctx, x7342, x4, 1);
    let x7382: BytePoly_32 = bigint_nondet_quot!(ctx, x7342, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7382, x4, 33), x7381, 33),
            x7342,
            33
        ),
        260103,
        4,
    )?;
    let x7383: BytePoly_1 = bigint_sub!(x5, x7381, 1);
    eqz(ctx, &bigint_mul!(x7381, x7383, 2), 8131, 2)?;
    let x7384: BytePoly_32 = bigint_add!(bigint_sub!(x7380, x7366, 32), x3, 32);
    let x7385: BytePoly_32 = bigint_add!(bigint_sub!(x7377, x7364, 32), x3, 32);
    let x7386: BytePoly_32 = bigint_nondet_inv!(ctx, x7385, x3, 32);
    let x7387: BytePoly_64 = bigint_mul!(x7385, x7386, 64);
    let x7388: BytePoly_34 = bigint_nondet_quot!(ctx, x7387, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x7387, bigint_mul!(x7388, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x7389: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7384, x7386, 64), x3, 32);
    let x7390: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x7389, x7385, 64), x7384, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x7391: BytePoly_34 = bigint_nondet_quot!(ctx, x7390, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x7390, bigint_mul!(x7391, x3, 66), 66),
        276359,
        4,
    )?;
    let x7392: BytePoly_64 = bigint_mul!(x7389, x7389, 64);
    let x7393: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x7392, x7364, 64), x3, 64),
            x7377,
            64
        ),
        x3,
        64
    );
    let x7394: BytePoly_34 = bigint_nondet_quot!(ctx, x7393, x3, 34);
    let x7395: BytePoly_32 = bigint_nondet_rem!(ctx, x7393, x3, 32);
    let x7396: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x7389, x7395, 64),
                        bigint_add!(
                            bigint_sub!(x7366, bigint_mul!(x7389, x7364, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x7397: BytePoly_34 = bigint_nondet_quot!(ctx, x7396, x3, 34);
    let x7398: BytePoly_32 = bigint_nondet_rem!(ctx, x7396, x3, 32);
    let x7399: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x7392, bigint_mul!(x7394, x3, 66), 66),
                        x7364,
                        66
                    ),
                    x7377,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x7395,
        66
    );
    eqz(ctx, &x7399, 276359, 4)?;
    let x7400: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x7397, x3, 66), x7398, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x7389, bigint_sub!(x7364, x7395, 32), 64),
                        x7366,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x7400, 276359, 4)?;
    let x7401: BytePoly_33 = bigint_add!(
        bigint_mul!(x7395, x7381, 33),
        bigint_mul!(x7364, x7383, 33),
        33
    );
    let x7402: BytePoly_33 = bigint_add!(
        bigint_mul!(x7398, x7381, 33),
        bigint_mul!(x7366, x7383, 33),
        33
    );
    let x7403: BytePoly_3 = bigint_nondet_quot!(ctx, x7401, x3, 3);
    let x7404: BytePoly_32 = bigint_nondet_rem!(ctx, x7401, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7403, x3, 35), x7404, 35),
            x7401,
            35
        ),
        260103,
        4,
    )?;
    let x7405: BytePoly_3 = bigint_nondet_quot!(ctx, x7402, x3, 3);
    let x7406: BytePoly_32 = bigint_nondet_rem!(ctx, x7402, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7405, x3, 35), x7406, 35),
            x7402,
            35
        ),
        260103,
        4,
    )?;
    let x7407: BytePoly_64 = bigint_mul!(x7377, x7377, 64);
    let x7408: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x7407, x7407, 64), x7407, 64),
        x2,
        64
    );
    let x7409: BytePoly_64 = bigint_add!(x48, x7408, 64);
    let x7410: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x7380, x7380, 32), x3, 32);
    let x7411: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7408, x7410, 96), x3, 32);
    let x7412: BytePoly_64 = bigint_mul!(x7380, x7411, 64);
    let x7413: BytePoly_64 = bigint_add!(x7412, x7412, 64);
    let x7414: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x7409, x7413, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7414, x3, 66), x7413, 66),
            x7409,
            66
        ),
        276359,
        4,
    )?;
    let x7415: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x7411, x7411, 64), x3, 64), x3, 64),
            x7377,
            64
        ),
        x7377,
        64
    );
    let x7416: BytePoly_34 = bigint_nondet_quot!(ctx, x7415, x3, 34);
    let x7417: BytePoly_32 = bigint_nondet_rem!(ctx, x7415, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7416, x3, 66), x7417, 66),
            x7415,
            66
        ),
        276359,
        4,
    )?;
    let x7418: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x7411, x7417, 64), 64), x3, 64),
            x7380,
            64
        ),
        bigint_mul!(x7411, x7377, 64),
        64
    );
    let x7419: BytePoly_34 = bigint_nondet_quot!(ctx, x7418, x3, 34);
    let x7420: BytePoly_32 = bigint_nondet_rem!(ctx, x7418, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7419, x3, 66), x7420, 66),
            x7418,
            66
        ),
        276359,
        4,
    )?;
    let x7421: BytePoly_1 = bigint_nondet_rem!(ctx, x7382, x4, 1);
    let x7422: BytePoly_32 = bigint_nondet_quot!(ctx, x7382, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7422, x4, 33), x7421, 33),
            x7382,
            33
        ),
        260103,
        4,
    )?;
    let x7423: BytePoly_1 = bigint_sub!(x5, x7421, 1);
    eqz(ctx, &bigint_mul!(x7421, x7423, 2), 8131, 2)?;
    let x7424: BytePoly_32 = bigint_add!(bigint_sub!(x7420, x7406, 32), x3, 32);
    let x7425: BytePoly_32 = bigint_add!(bigint_sub!(x7417, x7404, 32), x3, 32);
    let x7426: BytePoly_32 = bigint_nondet_inv!(ctx, x7425, x3, 32);
    let x7427: BytePoly_64 = bigint_mul!(x7425, x7426, 64);
    let x7428: BytePoly_34 = bigint_nondet_quot!(ctx, x7427, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x7427, bigint_mul!(x7428, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x7429: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7424, x7426, 64), x3, 32);
    let x7430: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x7429, x7425, 64), x7424, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x7431: BytePoly_34 = bigint_nondet_quot!(ctx, x7430, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x7430, bigint_mul!(x7431, x3, 66), 66),
        276359,
        4,
    )?;
    let x7432: BytePoly_64 = bigint_mul!(x7429, x7429, 64);
    let x7433: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x7432, x7404, 64), x3, 64),
            x7417,
            64
        ),
        x3,
        64
    );
    let x7434: BytePoly_34 = bigint_nondet_quot!(ctx, x7433, x3, 34);
    let x7435: BytePoly_32 = bigint_nondet_rem!(ctx, x7433, x3, 32);
    let x7436: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x7429, x7435, 64),
                        bigint_add!(
                            bigint_sub!(x7406, bigint_mul!(x7429, x7404, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x7437: BytePoly_34 = bigint_nondet_quot!(ctx, x7436, x3, 34);
    let x7438: BytePoly_32 = bigint_nondet_rem!(ctx, x7436, x3, 32);
    let x7439: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x7432, bigint_mul!(x7434, x3, 66), 66),
                        x7404,
                        66
                    ),
                    x7417,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x7435,
        66
    );
    eqz(ctx, &x7439, 276359, 4)?;
    let x7440: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x7437, x3, 66), x7438, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x7429, bigint_sub!(x7404, x7435, 32), 64),
                        x7406,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x7440, 276359, 4)?;
    let x7441: BytePoly_33 = bigint_add!(
        bigint_mul!(x7435, x7421, 33),
        bigint_mul!(x7404, x7423, 33),
        33
    );
    let x7442: BytePoly_33 = bigint_add!(
        bigint_mul!(x7438, x7421, 33),
        bigint_mul!(x7406, x7423, 33),
        33
    );
    let x7443: BytePoly_3 = bigint_nondet_quot!(ctx, x7441, x3, 3);
    let x7444: BytePoly_32 = bigint_nondet_rem!(ctx, x7441, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7443, x3, 35), x7444, 35),
            x7441,
            35
        ),
        260103,
        4,
    )?;
    let x7445: BytePoly_3 = bigint_nondet_quot!(ctx, x7442, x3, 3);
    let x7446: BytePoly_32 = bigint_nondet_rem!(ctx, x7442, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7445, x3, 35), x7446, 35),
            x7442,
            35
        ),
        260103,
        4,
    )?;
    let x7447: BytePoly_64 = bigint_mul!(x7417, x7417, 64);
    let x7448: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x7447, x7447, 64), x7447, 64),
        x2,
        64
    );
    let x7449: BytePoly_64 = bigint_add!(x48, x7448, 64);
    let x7450: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x7420, x7420, 32), x3, 32);
    let x7451: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7448, x7450, 96), x3, 32);
    let x7452: BytePoly_64 = bigint_mul!(x7420, x7451, 64);
    let x7453: BytePoly_64 = bigint_add!(x7452, x7452, 64);
    let x7454: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x7449, x7453, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7454, x3, 66), x7453, 66),
            x7449,
            66
        ),
        276359,
        4,
    )?;
    let x7455: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x7451, x7451, 64), x3, 64), x3, 64),
            x7417,
            64
        ),
        x7417,
        64
    );
    let x7456: BytePoly_34 = bigint_nondet_quot!(ctx, x7455, x3, 34);
    let x7457: BytePoly_32 = bigint_nondet_rem!(ctx, x7455, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7456, x3, 66), x7457, 66),
            x7455,
            66
        ),
        276359,
        4,
    )?;
    let x7458: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x7451, x7457, 64), 64), x3, 64),
            x7420,
            64
        ),
        bigint_mul!(x7451, x7417, 64),
        64
    );
    let x7459: BytePoly_34 = bigint_nondet_quot!(ctx, x7458, x3, 34);
    let x7460: BytePoly_32 = bigint_nondet_rem!(ctx, x7458, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7459, x3, 66), x7460, 66),
            x7458,
            66
        ),
        276359,
        4,
    )?;
    let x7461: BytePoly_1 = bigint_nondet_rem!(ctx, x7422, x4, 1);
    let x7462: BytePoly_32 = bigint_nondet_quot!(ctx, x7422, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7462, x4, 33), x7461, 33),
            x7422,
            33
        ),
        260103,
        4,
    )?;
    let x7463: BytePoly_1 = bigint_sub!(x5, x7461, 1);
    eqz(ctx, &bigint_mul!(x7461, x7463, 2), 8131, 2)?;
    let x7464: BytePoly_32 = bigint_add!(bigint_sub!(x7460, x7446, 32), x3, 32);
    let x7465: BytePoly_32 = bigint_add!(bigint_sub!(x7457, x7444, 32), x3, 32);
    let x7466: BytePoly_32 = bigint_nondet_inv!(ctx, x7465, x3, 32);
    let x7467: BytePoly_64 = bigint_mul!(x7465, x7466, 64);
    let x7468: BytePoly_34 = bigint_nondet_quot!(ctx, x7467, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x7467, bigint_mul!(x7468, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x7469: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7464, x7466, 64), x3, 32);
    let x7470: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x7469, x7465, 64), x7464, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x7471: BytePoly_34 = bigint_nondet_quot!(ctx, x7470, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x7470, bigint_mul!(x7471, x3, 66), 66),
        276359,
        4,
    )?;
    let x7472: BytePoly_64 = bigint_mul!(x7469, x7469, 64);
    let x7473: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x7472, x7444, 64), x3, 64),
            x7457,
            64
        ),
        x3,
        64
    );
    let x7474: BytePoly_34 = bigint_nondet_quot!(ctx, x7473, x3, 34);
    let x7475: BytePoly_32 = bigint_nondet_rem!(ctx, x7473, x3, 32);
    let x7476: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x7469, x7475, 64),
                        bigint_add!(
                            bigint_sub!(x7446, bigint_mul!(x7469, x7444, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x7477: BytePoly_34 = bigint_nondet_quot!(ctx, x7476, x3, 34);
    let x7478: BytePoly_32 = bigint_nondet_rem!(ctx, x7476, x3, 32);
    let x7479: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x7472, bigint_mul!(x7474, x3, 66), 66),
                        x7444,
                        66
                    ),
                    x7457,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x7475,
        66
    );
    eqz(ctx, &x7479, 276359, 4)?;
    let x7480: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x7477, x3, 66), x7478, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x7469, bigint_sub!(x7444, x7475, 32), 64),
                        x7446,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x7480, 276359, 4)?;
    let x7481: BytePoly_33 = bigint_add!(
        bigint_mul!(x7475, x7461, 33),
        bigint_mul!(x7444, x7463, 33),
        33
    );
    let x7482: BytePoly_33 = bigint_add!(
        bigint_mul!(x7478, x7461, 33),
        bigint_mul!(x7446, x7463, 33),
        33
    );
    let x7483: BytePoly_3 = bigint_nondet_quot!(ctx, x7481, x3, 3);
    let x7484: BytePoly_32 = bigint_nondet_rem!(ctx, x7481, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7483, x3, 35), x7484, 35),
            x7481,
            35
        ),
        260103,
        4,
    )?;
    let x7485: BytePoly_3 = bigint_nondet_quot!(ctx, x7482, x3, 3);
    let x7486: BytePoly_32 = bigint_nondet_rem!(ctx, x7482, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7485, x3, 35), x7486, 35),
            x7482,
            35
        ),
        260103,
        4,
    )?;
    let x7487: BytePoly_64 = bigint_mul!(x7457, x7457, 64);
    let x7488: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x7487, x7487, 64), x7487, 64),
        x2,
        64
    );
    let x7489: BytePoly_64 = bigint_add!(x48, x7488, 64);
    let x7490: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x7460, x7460, 32), x3, 32);
    let x7491: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7488, x7490, 96), x3, 32);
    let x7492: BytePoly_64 = bigint_mul!(x7460, x7491, 64);
    let x7493: BytePoly_64 = bigint_add!(x7492, x7492, 64);
    let x7494: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x7489, x7493, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7494, x3, 66), x7493, 66),
            x7489,
            66
        ),
        276359,
        4,
    )?;
    let x7495: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x7491, x7491, 64), x3, 64), x3, 64),
            x7457,
            64
        ),
        x7457,
        64
    );
    let x7496: BytePoly_34 = bigint_nondet_quot!(ctx, x7495, x3, 34);
    let x7497: BytePoly_32 = bigint_nondet_rem!(ctx, x7495, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7496, x3, 66), x7497, 66),
            x7495,
            66
        ),
        276359,
        4,
    )?;
    let x7498: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x7491, x7497, 64), 64), x3, 64),
            x7460,
            64
        ),
        bigint_mul!(x7491, x7457, 64),
        64
    );
    let x7499: BytePoly_34 = bigint_nondet_quot!(ctx, x7498, x3, 34);
    let x7500: BytePoly_32 = bigint_nondet_rem!(ctx, x7498, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7499, x3, 66), x7500, 66),
            x7498,
            66
        ),
        276359,
        4,
    )?;
    let x7501: BytePoly_1 = bigint_nondet_rem!(ctx, x7462, x4, 1);
    let x7502: BytePoly_32 = bigint_nondet_quot!(ctx, x7462, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7502, x4, 33), x7501, 33),
            x7462,
            33
        ),
        260103,
        4,
    )?;
    let x7503: BytePoly_1 = bigint_sub!(x5, x7501, 1);
    eqz(ctx, &bigint_mul!(x7501, x7503, 2), 8131, 2)?;
    let x7504: BytePoly_32 = bigint_add!(bigint_sub!(x7500, x7486, 32), x3, 32);
    let x7505: BytePoly_32 = bigint_add!(bigint_sub!(x7497, x7484, 32), x3, 32);
    let x7506: BytePoly_32 = bigint_nondet_inv!(ctx, x7505, x3, 32);
    let x7507: BytePoly_64 = bigint_mul!(x7505, x7506, 64);
    let x7508: BytePoly_34 = bigint_nondet_quot!(ctx, x7507, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x7507, bigint_mul!(x7508, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x7509: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7504, x7506, 64), x3, 32);
    let x7510: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x7509, x7505, 64), x7504, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x7511: BytePoly_34 = bigint_nondet_quot!(ctx, x7510, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x7510, bigint_mul!(x7511, x3, 66), 66),
        276359,
        4,
    )?;
    let x7512: BytePoly_64 = bigint_mul!(x7509, x7509, 64);
    let x7513: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x7512, x7484, 64), x3, 64),
            x7497,
            64
        ),
        x3,
        64
    );
    let x7514: BytePoly_34 = bigint_nondet_quot!(ctx, x7513, x3, 34);
    let x7515: BytePoly_32 = bigint_nondet_rem!(ctx, x7513, x3, 32);
    let x7516: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x7509, x7515, 64),
                        bigint_add!(
                            bigint_sub!(x7486, bigint_mul!(x7509, x7484, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x7517: BytePoly_34 = bigint_nondet_quot!(ctx, x7516, x3, 34);
    let x7518: BytePoly_32 = bigint_nondet_rem!(ctx, x7516, x3, 32);
    let x7519: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x7512, bigint_mul!(x7514, x3, 66), 66),
                        x7484,
                        66
                    ),
                    x7497,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x7515,
        66
    );
    eqz(ctx, &x7519, 276359, 4)?;
    let x7520: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x7517, x3, 66), x7518, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x7509, bigint_sub!(x7484, x7515, 32), 64),
                        x7486,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x7520, 276359, 4)?;
    let x7521: BytePoly_33 = bigint_add!(
        bigint_mul!(x7515, x7501, 33),
        bigint_mul!(x7484, x7503, 33),
        33
    );
    let x7522: BytePoly_33 = bigint_add!(
        bigint_mul!(x7518, x7501, 33),
        bigint_mul!(x7486, x7503, 33),
        33
    );
    let x7523: BytePoly_3 = bigint_nondet_quot!(ctx, x7521, x3, 3);
    let x7524: BytePoly_32 = bigint_nondet_rem!(ctx, x7521, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7523, x3, 35), x7524, 35),
            x7521,
            35
        ),
        260103,
        4,
    )?;
    let x7525: BytePoly_3 = bigint_nondet_quot!(ctx, x7522, x3, 3);
    let x7526: BytePoly_32 = bigint_nondet_rem!(ctx, x7522, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7525, x3, 35), x7526, 35),
            x7522,
            35
        ),
        260103,
        4,
    )?;
    let x7527: BytePoly_64 = bigint_mul!(x7497, x7497, 64);
    let x7528: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x7527, x7527, 64), x7527, 64),
        x2,
        64
    );
    let x7529: BytePoly_64 = bigint_add!(x48, x7528, 64);
    let x7530: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x7500, x7500, 32), x3, 32);
    let x7531: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7528, x7530, 96), x3, 32);
    let x7532: BytePoly_64 = bigint_mul!(x7500, x7531, 64);
    let x7533: BytePoly_64 = bigint_add!(x7532, x7532, 64);
    let x7534: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x7529, x7533, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7534, x3, 66), x7533, 66),
            x7529,
            66
        ),
        276359,
        4,
    )?;
    let x7535: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x7531, x7531, 64), x3, 64), x3, 64),
            x7497,
            64
        ),
        x7497,
        64
    );
    let x7536: BytePoly_34 = bigint_nondet_quot!(ctx, x7535, x3, 34);
    let x7537: BytePoly_32 = bigint_nondet_rem!(ctx, x7535, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7536, x3, 66), x7537, 66),
            x7535,
            66
        ),
        276359,
        4,
    )?;
    let x7538: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x7531, x7537, 64), 64), x3, 64),
            x7500,
            64
        ),
        bigint_mul!(x7531, x7497, 64),
        64
    );
    let x7539: BytePoly_34 = bigint_nondet_quot!(ctx, x7538, x3, 34);
    let x7540: BytePoly_32 = bigint_nondet_rem!(ctx, x7538, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7539, x3, 66), x7540, 66),
            x7538,
            66
        ),
        276359,
        4,
    )?;
    let x7541: BytePoly_1 = bigint_nondet_rem!(ctx, x7502, x4, 1);
    let x7542: BytePoly_32 = bigint_nondet_quot!(ctx, x7502, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7542, x4, 33), x7541, 33),
            x7502,
            33
        ),
        260103,
        4,
    )?;
    let x7543: BytePoly_1 = bigint_sub!(x5, x7541, 1);
    eqz(ctx, &bigint_mul!(x7541, x7543, 2), 8131, 2)?;
    let x7544: BytePoly_32 = bigint_add!(bigint_sub!(x7540, x7526, 32), x3, 32);
    let x7545: BytePoly_32 = bigint_add!(bigint_sub!(x7537, x7524, 32), x3, 32);
    let x7546: BytePoly_32 = bigint_nondet_inv!(ctx, x7545, x3, 32);
    let x7547: BytePoly_64 = bigint_mul!(x7545, x7546, 64);
    let x7548: BytePoly_34 = bigint_nondet_quot!(ctx, x7547, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x7547, bigint_mul!(x7548, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x7549: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7544, x7546, 64), x3, 32);
    let x7550: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x7549, x7545, 64), x7544, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x7551: BytePoly_34 = bigint_nondet_quot!(ctx, x7550, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x7550, bigint_mul!(x7551, x3, 66), 66),
        276359,
        4,
    )?;
    let x7552: BytePoly_64 = bigint_mul!(x7549, x7549, 64);
    let x7553: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x7552, x7524, 64), x3, 64),
            x7537,
            64
        ),
        x3,
        64
    );
    let x7554: BytePoly_34 = bigint_nondet_quot!(ctx, x7553, x3, 34);
    let x7555: BytePoly_32 = bigint_nondet_rem!(ctx, x7553, x3, 32);
    let x7556: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x7549, x7555, 64),
                        bigint_add!(
                            bigint_sub!(x7526, bigint_mul!(x7549, x7524, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x7557: BytePoly_34 = bigint_nondet_quot!(ctx, x7556, x3, 34);
    let x7558: BytePoly_32 = bigint_nondet_rem!(ctx, x7556, x3, 32);
    let x7559: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x7552, bigint_mul!(x7554, x3, 66), 66),
                        x7524,
                        66
                    ),
                    x7537,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x7555,
        66
    );
    eqz(ctx, &x7559, 276359, 4)?;
    let x7560: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x7557, x3, 66), x7558, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x7549, bigint_sub!(x7524, x7555, 32), 64),
                        x7526,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x7560, 276359, 4)?;
    let x7561: BytePoly_33 = bigint_add!(
        bigint_mul!(x7555, x7541, 33),
        bigint_mul!(x7524, x7543, 33),
        33
    );
    let x7562: BytePoly_33 = bigint_add!(
        bigint_mul!(x7558, x7541, 33),
        bigint_mul!(x7526, x7543, 33),
        33
    );
    let x7563: BytePoly_3 = bigint_nondet_quot!(ctx, x7561, x3, 3);
    let x7564: BytePoly_32 = bigint_nondet_rem!(ctx, x7561, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7563, x3, 35), x7564, 35),
            x7561,
            35
        ),
        260103,
        4,
    )?;
    let x7565: BytePoly_3 = bigint_nondet_quot!(ctx, x7562, x3, 3);
    let x7566: BytePoly_32 = bigint_nondet_rem!(ctx, x7562, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7565, x3, 35), x7566, 35),
            x7562,
            35
        ),
        260103,
        4,
    )?;
    let x7567: BytePoly_64 = bigint_mul!(x7537, x7537, 64);
    let x7568: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x7567, x7567, 64), x7567, 64),
        x2,
        64
    );
    let x7569: BytePoly_64 = bigint_add!(x48, x7568, 64);
    let x7570: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x7540, x7540, 32), x3, 32);
    let x7571: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7568, x7570, 96), x3, 32);
    let x7572: BytePoly_64 = bigint_mul!(x7540, x7571, 64);
    let x7573: BytePoly_64 = bigint_add!(x7572, x7572, 64);
    let x7574: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x7569, x7573, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7574, x3, 66), x7573, 66),
            x7569,
            66
        ),
        276359,
        4,
    )?;
    let x7575: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x7571, x7571, 64), x3, 64), x3, 64),
            x7537,
            64
        ),
        x7537,
        64
    );
    let x7576: BytePoly_34 = bigint_nondet_quot!(ctx, x7575, x3, 34);
    let x7577: BytePoly_32 = bigint_nondet_rem!(ctx, x7575, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7576, x3, 66), x7577, 66),
            x7575,
            66
        ),
        276359,
        4,
    )?;
    let x7578: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x7571, x7577, 64), 64), x3, 64),
            x7540,
            64
        ),
        bigint_mul!(x7571, x7537, 64),
        64
    );
    let x7579: BytePoly_34 = bigint_nondet_quot!(ctx, x7578, x3, 34);
    let x7580: BytePoly_32 = bigint_nondet_rem!(ctx, x7578, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7579, x3, 66), x7580, 66),
            x7578,
            66
        ),
        276359,
        4,
    )?;
    let x7581: BytePoly_1 = bigint_nondet_rem!(ctx, x7542, x4, 1);
    let x7582: BytePoly_32 = bigint_nondet_quot!(ctx, x7542, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7582, x4, 33), x7581, 33),
            x7542,
            33
        ),
        260103,
        4,
    )?;
    let x7583: BytePoly_1 = bigint_sub!(x5, x7581, 1);
    eqz(ctx, &bigint_mul!(x7581, x7583, 2), 8131, 2)?;
    let x7584: BytePoly_32 = bigint_add!(bigint_sub!(x7580, x7566, 32), x3, 32);
    let x7585: BytePoly_32 = bigint_add!(bigint_sub!(x7577, x7564, 32), x3, 32);
    let x7586: BytePoly_32 = bigint_nondet_inv!(ctx, x7585, x3, 32);
    let x7587: BytePoly_64 = bigint_mul!(x7585, x7586, 64);
    let x7588: BytePoly_34 = bigint_nondet_quot!(ctx, x7587, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x7587, bigint_mul!(x7588, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x7589: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7584, x7586, 64), x3, 32);
    let x7590: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x7589, x7585, 64), x7584, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x7591: BytePoly_34 = bigint_nondet_quot!(ctx, x7590, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x7590, bigint_mul!(x7591, x3, 66), 66),
        276359,
        4,
    )?;
    let x7592: BytePoly_64 = bigint_mul!(x7589, x7589, 64);
    let x7593: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x7592, x7564, 64), x3, 64),
            x7577,
            64
        ),
        x3,
        64
    );
    let x7594: BytePoly_34 = bigint_nondet_quot!(ctx, x7593, x3, 34);
    let x7595: BytePoly_32 = bigint_nondet_rem!(ctx, x7593, x3, 32);
    let x7596: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x7589, x7595, 64),
                        bigint_add!(
                            bigint_sub!(x7566, bigint_mul!(x7589, x7564, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x7597: BytePoly_34 = bigint_nondet_quot!(ctx, x7596, x3, 34);
    let x7598: BytePoly_32 = bigint_nondet_rem!(ctx, x7596, x3, 32);
    let x7599: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x7592, bigint_mul!(x7594, x3, 66), 66),
                        x7564,
                        66
                    ),
                    x7577,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x7595,
        66
    );
    eqz(ctx, &x7599, 276359, 4)?;
    let x7600: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x7597, x3, 66), x7598, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x7589, bigint_sub!(x7564, x7595, 32), 64),
                        x7566,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x7600, 276359, 4)?;
    let x7601: BytePoly_33 = bigint_add!(
        bigint_mul!(x7595, x7581, 33),
        bigint_mul!(x7564, x7583, 33),
        33
    );
    let x7602: BytePoly_33 = bigint_add!(
        bigint_mul!(x7598, x7581, 33),
        bigint_mul!(x7566, x7583, 33),
        33
    );
    let x7603: BytePoly_3 = bigint_nondet_quot!(ctx, x7601, x3, 3);
    let x7604: BytePoly_32 = bigint_nondet_rem!(ctx, x7601, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7603, x3, 35), x7604, 35),
            x7601,
            35
        ),
        260103,
        4,
    )?;
    let x7605: BytePoly_3 = bigint_nondet_quot!(ctx, x7602, x3, 3);
    let x7606: BytePoly_32 = bigint_nondet_rem!(ctx, x7602, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7605, x3, 35), x7606, 35),
            x7602,
            35
        ),
        260103,
        4,
    )?;
    let x7607: BytePoly_64 = bigint_mul!(x7577, x7577, 64);
    let x7608: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x7607, x7607, 64), x7607, 64),
        x2,
        64
    );
    let x7609: BytePoly_64 = bigint_add!(x48, x7608, 64);
    let x7610: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x7580, x7580, 32), x3, 32);
    let x7611: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7608, x7610, 96), x3, 32);
    let x7612: BytePoly_64 = bigint_mul!(x7580, x7611, 64);
    let x7613: BytePoly_64 = bigint_add!(x7612, x7612, 64);
    let x7614: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x7609, x7613, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7614, x3, 66), x7613, 66),
            x7609,
            66
        ),
        276359,
        4,
    )?;
    let x7615: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x7611, x7611, 64), x3, 64), x3, 64),
            x7577,
            64
        ),
        x7577,
        64
    );
    let x7616: BytePoly_34 = bigint_nondet_quot!(ctx, x7615, x3, 34);
    let x7617: BytePoly_32 = bigint_nondet_rem!(ctx, x7615, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7616, x3, 66), x7617, 66),
            x7615,
            66
        ),
        276359,
        4,
    )?;
    let x7618: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x7611, x7617, 64), 64), x3, 64),
            x7580,
            64
        ),
        bigint_mul!(x7611, x7577, 64),
        64
    );
    let x7619: BytePoly_34 = bigint_nondet_quot!(ctx, x7618, x3, 34);
    let x7620: BytePoly_32 = bigint_nondet_rem!(ctx, x7618, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7619, x3, 66), x7620, 66),
            x7618,
            66
        ),
        276359,
        4,
    )?;
    let x7621: BytePoly_1 = bigint_nondet_rem!(ctx, x7582, x4, 1);
    let x7622: BytePoly_32 = bigint_nondet_quot!(ctx, x7582, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7622, x4, 33), x7621, 33),
            x7582,
            33
        ),
        260103,
        4,
    )?;
    let x7623: BytePoly_1 = bigint_sub!(x5, x7621, 1);
    eqz(ctx, &bigint_mul!(x7621, x7623, 2), 8131, 2)?;
    let x7624: BytePoly_32 = bigint_add!(bigint_sub!(x7620, x7606, 32), x3, 32);
    let x7625: BytePoly_32 = bigint_add!(bigint_sub!(x7617, x7604, 32), x3, 32);
    let x7626: BytePoly_32 = bigint_nondet_inv!(ctx, x7625, x3, 32);
    let x7627: BytePoly_64 = bigint_mul!(x7625, x7626, 64);
    let x7628: BytePoly_34 = bigint_nondet_quot!(ctx, x7627, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x7627, bigint_mul!(x7628, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x7629: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7624, x7626, 64), x3, 32);
    let x7630: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x7629, x7625, 64), x7624, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x7631: BytePoly_34 = bigint_nondet_quot!(ctx, x7630, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x7630, bigint_mul!(x7631, x3, 66), 66),
        276359,
        4,
    )?;
    let x7632: BytePoly_64 = bigint_mul!(x7629, x7629, 64);
    let x7633: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x7632, x7604, 64), x3, 64),
            x7617,
            64
        ),
        x3,
        64
    );
    let x7634: BytePoly_34 = bigint_nondet_quot!(ctx, x7633, x3, 34);
    let x7635: BytePoly_32 = bigint_nondet_rem!(ctx, x7633, x3, 32);
    let x7636: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x7629, x7635, 64),
                        bigint_add!(
                            bigint_sub!(x7606, bigint_mul!(x7629, x7604, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x7637: BytePoly_34 = bigint_nondet_quot!(ctx, x7636, x3, 34);
    let x7638: BytePoly_32 = bigint_nondet_rem!(ctx, x7636, x3, 32);
    let x7639: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x7632, bigint_mul!(x7634, x3, 66), 66),
                        x7604,
                        66
                    ),
                    x7617,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x7635,
        66
    );
    eqz(ctx, &x7639, 276359, 4)?;
    let x7640: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x7637, x3, 66), x7638, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x7629, bigint_sub!(x7604, x7635, 32), 64),
                        x7606,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x7640, 276359, 4)?;
    let x7641: BytePoly_33 = bigint_add!(
        bigint_mul!(x7635, x7621, 33),
        bigint_mul!(x7604, x7623, 33),
        33
    );
    let x7642: BytePoly_33 = bigint_add!(
        bigint_mul!(x7638, x7621, 33),
        bigint_mul!(x7606, x7623, 33),
        33
    );
    let x7643: BytePoly_3 = bigint_nondet_quot!(ctx, x7641, x3, 3);
    let x7644: BytePoly_32 = bigint_nondet_rem!(ctx, x7641, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7643, x3, 35), x7644, 35),
            x7641,
            35
        ),
        260103,
        4,
    )?;
    let x7645: BytePoly_3 = bigint_nondet_quot!(ctx, x7642, x3, 3);
    let x7646: BytePoly_32 = bigint_nondet_rem!(ctx, x7642, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7645, x3, 35), x7646, 35),
            x7642,
            35
        ),
        260103,
        4,
    )?;
    let x7647: BytePoly_64 = bigint_mul!(x7617, x7617, 64);
    let x7648: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x7647, x7647, 64), x7647, 64),
        x2,
        64
    );
    let x7649: BytePoly_64 = bigint_add!(x48, x7648, 64);
    let x7650: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x7620, x7620, 32), x3, 32);
    let x7651: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7648, x7650, 96), x3, 32);
    let x7652: BytePoly_64 = bigint_mul!(x7620, x7651, 64);
    let x7653: BytePoly_64 = bigint_add!(x7652, x7652, 64);
    let x7654: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x7649, x7653, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7654, x3, 66), x7653, 66),
            x7649,
            66
        ),
        276359,
        4,
    )?;
    let x7655: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x7651, x7651, 64), x3, 64), x3, 64),
            x7617,
            64
        ),
        x7617,
        64
    );
    let x7656: BytePoly_34 = bigint_nondet_quot!(ctx, x7655, x3, 34);
    let x7657: BytePoly_32 = bigint_nondet_rem!(ctx, x7655, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7656, x3, 66), x7657, 66),
            x7655,
            66
        ),
        276359,
        4,
    )?;
    let x7658: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x7651, x7657, 64), 64), x3, 64),
            x7620,
            64
        ),
        bigint_mul!(x7651, x7617, 64),
        64
    );
    let x7659: BytePoly_34 = bigint_nondet_quot!(ctx, x7658, x3, 34);
    let x7660: BytePoly_32 = bigint_nondet_rem!(ctx, x7658, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7659, x3, 66), x7660, 66),
            x7658,
            66
        ),
        276359,
        4,
    )?;
    let x7661: BytePoly_1 = bigint_nondet_rem!(ctx, x7622, x4, 1);
    let x7662: BytePoly_32 = bigint_nondet_quot!(ctx, x7622, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7662, x4, 33), x7661, 33),
            x7622,
            33
        ),
        260103,
        4,
    )?;
    let x7663: BytePoly_1 = bigint_sub!(x5, x7661, 1);
    eqz(ctx, &bigint_mul!(x7661, x7663, 2), 8131, 2)?;
    let x7664: BytePoly_32 = bigint_add!(bigint_sub!(x7660, x7646, 32), x3, 32);
    let x7665: BytePoly_32 = bigint_add!(bigint_sub!(x7657, x7644, 32), x3, 32);
    let x7666: BytePoly_32 = bigint_nondet_inv!(ctx, x7665, x3, 32);
    let x7667: BytePoly_64 = bigint_mul!(x7665, x7666, 64);
    let x7668: BytePoly_34 = bigint_nondet_quot!(ctx, x7667, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x7667, bigint_mul!(x7668, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x7669: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7664, x7666, 64), x3, 32);
    let x7670: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x7669, x7665, 64), x7664, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x7671: BytePoly_34 = bigint_nondet_quot!(ctx, x7670, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x7670, bigint_mul!(x7671, x3, 66), 66),
        276359,
        4,
    )?;
    let x7672: BytePoly_64 = bigint_mul!(x7669, x7669, 64);
    let x7673: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x7672, x7644, 64), x3, 64),
            x7657,
            64
        ),
        x3,
        64
    );
    let x7674: BytePoly_34 = bigint_nondet_quot!(ctx, x7673, x3, 34);
    let x7675: BytePoly_32 = bigint_nondet_rem!(ctx, x7673, x3, 32);
    let x7676: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x7669, x7675, 64),
                        bigint_add!(
                            bigint_sub!(x7646, bigint_mul!(x7669, x7644, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x7677: BytePoly_34 = bigint_nondet_quot!(ctx, x7676, x3, 34);
    let x7678: BytePoly_32 = bigint_nondet_rem!(ctx, x7676, x3, 32);
    let x7679: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x7672, bigint_mul!(x7674, x3, 66), 66),
                        x7644,
                        66
                    ),
                    x7657,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x7675,
        66
    );
    eqz(ctx, &x7679, 276359, 4)?;
    let x7680: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x7677, x3, 66), x7678, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x7669, bigint_sub!(x7644, x7675, 32), 64),
                        x7646,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x7680, 276359, 4)?;
    let x7681: BytePoly_33 = bigint_add!(
        bigint_mul!(x7675, x7661, 33),
        bigint_mul!(x7644, x7663, 33),
        33
    );
    let x7682: BytePoly_33 = bigint_add!(
        bigint_mul!(x7678, x7661, 33),
        bigint_mul!(x7646, x7663, 33),
        33
    );
    let x7683: BytePoly_3 = bigint_nondet_quot!(ctx, x7681, x3, 3);
    let x7684: BytePoly_32 = bigint_nondet_rem!(ctx, x7681, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7683, x3, 35), x7684, 35),
            x7681,
            35
        ),
        260103,
        4,
    )?;
    let x7685: BytePoly_3 = bigint_nondet_quot!(ctx, x7682, x3, 3);
    let x7686: BytePoly_32 = bigint_nondet_rem!(ctx, x7682, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7685, x3, 35), x7686, 35),
            x7682,
            35
        ),
        260103,
        4,
    )?;
    let x7687: BytePoly_64 = bigint_mul!(x7657, x7657, 64);
    let x7688: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x7687, x7687, 64), x7687, 64),
        x2,
        64
    );
    let x7689: BytePoly_64 = bigint_add!(x48, x7688, 64);
    let x7690: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x7660, x7660, 32), x3, 32);
    let x7691: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7688, x7690, 96), x3, 32);
    let x7692: BytePoly_64 = bigint_mul!(x7660, x7691, 64);
    let x7693: BytePoly_64 = bigint_add!(x7692, x7692, 64);
    let x7694: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x7689, x7693, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7694, x3, 66), x7693, 66),
            x7689,
            66
        ),
        276359,
        4,
    )?;
    let x7695: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x7691, x7691, 64), x3, 64), x3, 64),
            x7657,
            64
        ),
        x7657,
        64
    );
    let x7696: BytePoly_34 = bigint_nondet_quot!(ctx, x7695, x3, 34);
    let x7697: BytePoly_32 = bigint_nondet_rem!(ctx, x7695, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7696, x3, 66), x7697, 66),
            x7695,
            66
        ),
        276359,
        4,
    )?;
    let x7698: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x7691, x7697, 64), 64), x3, 64),
            x7660,
            64
        ),
        bigint_mul!(x7691, x7657, 64),
        64
    );
    let x7699: BytePoly_34 = bigint_nondet_quot!(ctx, x7698, x3, 34);
    let x7700: BytePoly_32 = bigint_nondet_rem!(ctx, x7698, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7699, x3, 66), x7700, 66),
            x7698,
            66
        ),
        276359,
        4,
    )?;
    let x7701: BytePoly_1 = bigint_nondet_rem!(ctx, x7662, x4, 1);
    let x7702: BytePoly_32 = bigint_nondet_quot!(ctx, x7662, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7702, x4, 33), x7701, 33),
            x7662,
            33
        ),
        260103,
        4,
    )?;
    let x7703: BytePoly_1 = bigint_sub!(x5, x7701, 1);
    eqz(ctx, &bigint_mul!(x7701, x7703, 2), 8131, 2)?;
    let x7704: BytePoly_32 = bigint_add!(bigint_sub!(x7700, x7686, 32), x3, 32);
    let x7705: BytePoly_32 = bigint_add!(bigint_sub!(x7697, x7684, 32), x3, 32);
    let x7706: BytePoly_32 = bigint_nondet_inv!(ctx, x7705, x3, 32);
    let x7707: BytePoly_64 = bigint_mul!(x7705, x7706, 64);
    let x7708: BytePoly_34 = bigint_nondet_quot!(ctx, x7707, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x7707, bigint_mul!(x7708, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x7709: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7704, x7706, 64), x3, 32);
    let x7710: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x7709, x7705, 64), x7704, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x7711: BytePoly_34 = bigint_nondet_quot!(ctx, x7710, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x7710, bigint_mul!(x7711, x3, 66), 66),
        276359,
        4,
    )?;
    let x7712: BytePoly_64 = bigint_mul!(x7709, x7709, 64);
    let x7713: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x7712, x7684, 64), x3, 64),
            x7697,
            64
        ),
        x3,
        64
    );
    let x7714: BytePoly_34 = bigint_nondet_quot!(ctx, x7713, x3, 34);
    let x7715: BytePoly_32 = bigint_nondet_rem!(ctx, x7713, x3, 32);
    let x7716: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x7709, x7715, 64),
                        bigint_add!(
                            bigint_sub!(x7686, bigint_mul!(x7709, x7684, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x7717: BytePoly_34 = bigint_nondet_quot!(ctx, x7716, x3, 34);
    let x7718: BytePoly_32 = bigint_nondet_rem!(ctx, x7716, x3, 32);
    let x7719: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x7712, bigint_mul!(x7714, x3, 66), 66),
                        x7684,
                        66
                    ),
                    x7697,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x7715,
        66
    );
    eqz(ctx, &x7719, 276359, 4)?;
    let x7720: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x7717, x3, 66), x7718, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x7709, bigint_sub!(x7684, x7715, 32), 64),
                        x7686,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x7720, 276359, 4)?;
    let x7721: BytePoly_33 = bigint_add!(
        bigint_mul!(x7715, x7701, 33),
        bigint_mul!(x7684, x7703, 33),
        33
    );
    let x7722: BytePoly_33 = bigint_add!(
        bigint_mul!(x7718, x7701, 33),
        bigint_mul!(x7686, x7703, 33),
        33
    );
    let x7723: BytePoly_3 = bigint_nondet_quot!(ctx, x7721, x3, 3);
    let x7724: BytePoly_32 = bigint_nondet_rem!(ctx, x7721, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7723, x3, 35), x7724, 35),
            x7721,
            35
        ),
        260103,
        4,
    )?;
    let x7725: BytePoly_3 = bigint_nondet_quot!(ctx, x7722, x3, 3);
    let x7726: BytePoly_32 = bigint_nondet_rem!(ctx, x7722, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7725, x3, 35), x7726, 35),
            x7722,
            35
        ),
        260103,
        4,
    )?;
    let x7727: BytePoly_64 = bigint_mul!(x7697, x7697, 64);
    let x7728: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x7727, x7727, 64), x7727, 64),
        x2,
        64
    );
    let x7729: BytePoly_64 = bigint_add!(x48, x7728, 64);
    let x7730: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x7700, x7700, 32), x3, 32);
    let x7731: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7728, x7730, 96), x3, 32);
    let x7732: BytePoly_64 = bigint_mul!(x7700, x7731, 64);
    let x7733: BytePoly_64 = bigint_add!(x7732, x7732, 64);
    let x7734: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x7729, x7733, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7734, x3, 66), x7733, 66),
            x7729,
            66
        ),
        276359,
        4,
    )?;
    let x7735: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x7731, x7731, 64), x3, 64), x3, 64),
            x7697,
            64
        ),
        x7697,
        64
    );
    let x7736: BytePoly_34 = bigint_nondet_quot!(ctx, x7735, x3, 34);
    let x7737: BytePoly_32 = bigint_nondet_rem!(ctx, x7735, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7736, x3, 66), x7737, 66),
            x7735,
            66
        ),
        276359,
        4,
    )?;
    let x7738: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x7731, x7737, 64), 64), x3, 64),
            x7700,
            64
        ),
        bigint_mul!(x7731, x7697, 64),
        64
    );
    let x7739: BytePoly_34 = bigint_nondet_quot!(ctx, x7738, x3, 34);
    let x7740: BytePoly_32 = bigint_nondet_rem!(ctx, x7738, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7739, x3, 66), x7740, 66),
            x7738,
            66
        ),
        276359,
        4,
    )?;
    let x7741: BytePoly_1 = bigint_nondet_rem!(ctx, x7702, x4, 1);
    let x7742: BytePoly_32 = bigint_nondet_quot!(ctx, x7702, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7742, x4, 33), x7741, 33),
            x7702,
            33
        ),
        260103,
        4,
    )?;
    let x7743: BytePoly_1 = bigint_sub!(x5, x7741, 1);
    eqz(ctx, &bigint_mul!(x7741, x7743, 2), 8131, 2)?;
    let x7744: BytePoly_32 = bigint_add!(bigint_sub!(x7740, x7726, 32), x3, 32);
    let x7745: BytePoly_32 = bigint_add!(bigint_sub!(x7737, x7724, 32), x3, 32);
    let x7746: BytePoly_32 = bigint_nondet_inv!(ctx, x7745, x3, 32);
    let x7747: BytePoly_64 = bigint_mul!(x7745, x7746, 64);
    let x7748: BytePoly_34 = bigint_nondet_quot!(ctx, x7747, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x7747, bigint_mul!(x7748, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x7749: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7744, x7746, 64), x3, 32);
    let x7750: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x7749, x7745, 64), x7744, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x7751: BytePoly_34 = bigint_nondet_quot!(ctx, x7750, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x7750, bigint_mul!(x7751, x3, 66), 66),
        276359,
        4,
    )?;
    let x7752: BytePoly_64 = bigint_mul!(x7749, x7749, 64);
    let x7753: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x7752, x7724, 64), x3, 64),
            x7737,
            64
        ),
        x3,
        64
    );
    let x7754: BytePoly_34 = bigint_nondet_quot!(ctx, x7753, x3, 34);
    let x7755: BytePoly_32 = bigint_nondet_rem!(ctx, x7753, x3, 32);
    let x7756: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x7749, x7755, 64),
                        bigint_add!(
                            bigint_sub!(x7726, bigint_mul!(x7749, x7724, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x7757: BytePoly_34 = bigint_nondet_quot!(ctx, x7756, x3, 34);
    let x7758: BytePoly_32 = bigint_nondet_rem!(ctx, x7756, x3, 32);
    let x7759: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x7752, bigint_mul!(x7754, x3, 66), 66),
                        x7724,
                        66
                    ),
                    x7737,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x7755,
        66
    );
    eqz(ctx, &x7759, 276359, 4)?;
    let x7760: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x7757, x3, 66), x7758, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x7749, bigint_sub!(x7724, x7755, 32), 64),
                        x7726,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x7760, 276359, 4)?;
    let x7761: BytePoly_33 = bigint_add!(
        bigint_mul!(x7755, x7741, 33),
        bigint_mul!(x7724, x7743, 33),
        33
    );
    let x7762: BytePoly_33 = bigint_add!(
        bigint_mul!(x7758, x7741, 33),
        bigint_mul!(x7726, x7743, 33),
        33
    );
    let x7763: BytePoly_3 = bigint_nondet_quot!(ctx, x7761, x3, 3);
    let x7764: BytePoly_32 = bigint_nondet_rem!(ctx, x7761, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7763, x3, 35), x7764, 35),
            x7761,
            35
        ),
        260103,
        4,
    )?;
    let x7765: BytePoly_3 = bigint_nondet_quot!(ctx, x7762, x3, 3);
    let x7766: BytePoly_32 = bigint_nondet_rem!(ctx, x7762, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7765, x3, 35), x7766, 35),
            x7762,
            35
        ),
        260103,
        4,
    )?;
    let x7767: BytePoly_64 = bigint_mul!(x7737, x7737, 64);
    let x7768: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x7767, x7767, 64), x7767, 64),
        x2,
        64
    );
    let x7769: BytePoly_64 = bigint_add!(x48, x7768, 64);
    let x7770: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x7740, x7740, 32), x3, 32);
    let x7771: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7768, x7770, 96), x3, 32);
    let x7772: BytePoly_64 = bigint_mul!(x7740, x7771, 64);
    let x7773: BytePoly_64 = bigint_add!(x7772, x7772, 64);
    let x7774: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x7769, x7773, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7774, x3, 66), x7773, 66),
            x7769,
            66
        ),
        276359,
        4,
    )?;
    let x7775: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x7771, x7771, 64), x3, 64), x3, 64),
            x7737,
            64
        ),
        x7737,
        64
    );
    let x7776: BytePoly_34 = bigint_nondet_quot!(ctx, x7775, x3, 34);
    let x7777: BytePoly_32 = bigint_nondet_rem!(ctx, x7775, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7776, x3, 66), x7777, 66),
            x7775,
            66
        ),
        276359,
        4,
    )?;
    let x7778: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x7771, x7777, 64), 64), x3, 64),
            x7740,
            64
        ),
        bigint_mul!(x7771, x7737, 64),
        64
    );
    let x7779: BytePoly_34 = bigint_nondet_quot!(ctx, x7778, x3, 34);
    let x7780: BytePoly_32 = bigint_nondet_rem!(ctx, x7778, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7779, x3, 66), x7780, 66),
            x7778,
            66
        ),
        276359,
        4,
    )?;
    let x7781: BytePoly_1 = bigint_nondet_rem!(ctx, x7742, x4, 1);
    let x7782: BytePoly_32 = bigint_nondet_quot!(ctx, x7742, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7782, x4, 33), x7781, 33),
            x7742,
            33
        ),
        260103,
        4,
    )?;
    let x7783: BytePoly_1 = bigint_sub!(x5, x7781, 1);
    eqz(ctx, &bigint_mul!(x7781, x7783, 2), 8131, 2)?;
    let x7784: BytePoly_32 = bigint_add!(bigint_sub!(x7780, x7766, 32), x3, 32);
    let x7785: BytePoly_32 = bigint_add!(bigint_sub!(x7777, x7764, 32), x3, 32);
    let x7786: BytePoly_32 = bigint_nondet_inv!(ctx, x7785, x3, 32);
    let x7787: BytePoly_64 = bigint_mul!(x7785, x7786, 64);
    let x7788: BytePoly_34 = bigint_nondet_quot!(ctx, x7787, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x7787, bigint_mul!(x7788, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x7789: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7784, x7786, 64), x3, 32);
    let x7790: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x7789, x7785, 64), x7784, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x7791: BytePoly_34 = bigint_nondet_quot!(ctx, x7790, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x7790, bigint_mul!(x7791, x3, 66), 66),
        276359,
        4,
    )?;
    let x7792: BytePoly_64 = bigint_mul!(x7789, x7789, 64);
    let x7793: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x7792, x7764, 64), x3, 64),
            x7777,
            64
        ),
        x3,
        64
    );
    let x7794: BytePoly_34 = bigint_nondet_quot!(ctx, x7793, x3, 34);
    let x7795: BytePoly_32 = bigint_nondet_rem!(ctx, x7793, x3, 32);
    let x7796: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x7789, x7795, 64),
                        bigint_add!(
                            bigint_sub!(x7766, bigint_mul!(x7789, x7764, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x7797: BytePoly_34 = bigint_nondet_quot!(ctx, x7796, x3, 34);
    let x7798: BytePoly_32 = bigint_nondet_rem!(ctx, x7796, x3, 32);
    let x7799: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x7792, bigint_mul!(x7794, x3, 66), 66),
                        x7764,
                        66
                    ),
                    x7777,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x7795,
        66
    );
    eqz(ctx, &x7799, 276359, 4)?;
    let x7800: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x7797, x3, 66), x7798, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x7789, bigint_sub!(x7764, x7795, 32), 64),
                        x7766,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x7800, 276359, 4)?;
    let x7801: BytePoly_33 = bigint_add!(
        bigint_mul!(x7795, x7781, 33),
        bigint_mul!(x7764, x7783, 33),
        33
    );
    let x7802: BytePoly_33 = bigint_add!(
        bigint_mul!(x7798, x7781, 33),
        bigint_mul!(x7766, x7783, 33),
        33
    );
    let x7803: BytePoly_3 = bigint_nondet_quot!(ctx, x7801, x3, 3);
    let x7804: BytePoly_32 = bigint_nondet_rem!(ctx, x7801, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7803, x3, 35), x7804, 35),
            x7801,
            35
        ),
        260103,
        4,
    )?;
    let x7805: BytePoly_3 = bigint_nondet_quot!(ctx, x7802, x3, 3);
    let x7806: BytePoly_32 = bigint_nondet_rem!(ctx, x7802, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7805, x3, 35), x7806, 35),
            x7802,
            35
        ),
        260103,
        4,
    )?;
    let x7807: BytePoly_64 = bigint_mul!(x7777, x7777, 64);
    let x7808: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x7807, x7807, 64), x7807, 64),
        x2,
        64
    );
    let x7809: BytePoly_64 = bigint_add!(x48, x7808, 64);
    let x7810: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x7780, x7780, 32), x3, 32);
    let x7811: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7808, x7810, 96), x3, 32);
    let x7812: BytePoly_64 = bigint_mul!(x7780, x7811, 64);
    let x7813: BytePoly_64 = bigint_add!(x7812, x7812, 64);
    let x7814: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x7809, x7813, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7814, x3, 66), x7813, 66),
            x7809,
            66
        ),
        276359,
        4,
    )?;
    let x7815: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x7811, x7811, 64), x3, 64), x3, 64),
            x7777,
            64
        ),
        x7777,
        64
    );
    let x7816: BytePoly_34 = bigint_nondet_quot!(ctx, x7815, x3, 34);
    let x7817: BytePoly_32 = bigint_nondet_rem!(ctx, x7815, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7816, x3, 66), x7817, 66),
            x7815,
            66
        ),
        276359,
        4,
    )?;
    let x7818: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x7811, x7817, 64), 64), x3, 64),
            x7780,
            64
        ),
        bigint_mul!(x7811, x7777, 64),
        64
    );
    let x7819: BytePoly_34 = bigint_nondet_quot!(ctx, x7818, x3, 34);
    let x7820: BytePoly_32 = bigint_nondet_rem!(ctx, x7818, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7819, x3, 66), x7820, 66),
            x7818,
            66
        ),
        276359,
        4,
    )?;
    let x7821: BytePoly_1 = bigint_nondet_rem!(ctx, x7782, x4, 1);
    let x7822: BytePoly_32 = bigint_nondet_quot!(ctx, x7782, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7822, x4, 33), x7821, 33),
            x7782,
            33
        ),
        260103,
        4,
    )?;
    let x7823: BytePoly_1 = bigint_sub!(x5, x7821, 1);
    eqz(ctx, &bigint_mul!(x7821, x7823, 2), 8131, 2)?;
    let x7824: BytePoly_32 = bigint_add!(bigint_sub!(x7820, x7806, 32), x3, 32);
    let x7825: BytePoly_32 = bigint_add!(bigint_sub!(x7817, x7804, 32), x3, 32);
    let x7826: BytePoly_32 = bigint_nondet_inv!(ctx, x7825, x3, 32);
    let x7827: BytePoly_64 = bigint_mul!(x7825, x7826, 64);
    let x7828: BytePoly_34 = bigint_nondet_quot!(ctx, x7827, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x7827, bigint_mul!(x7828, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x7829: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7824, x7826, 64), x3, 32);
    let x7830: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x7829, x7825, 64), x7824, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x7831: BytePoly_34 = bigint_nondet_quot!(ctx, x7830, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x7830, bigint_mul!(x7831, x3, 66), 66),
        276359,
        4,
    )?;
    let x7832: BytePoly_64 = bigint_mul!(x7829, x7829, 64);
    let x7833: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x7832, x7804, 64), x3, 64),
            x7817,
            64
        ),
        x3,
        64
    );
    let x7834: BytePoly_34 = bigint_nondet_quot!(ctx, x7833, x3, 34);
    let x7835: BytePoly_32 = bigint_nondet_rem!(ctx, x7833, x3, 32);
    let x7836: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x7829, x7835, 64),
                        bigint_add!(
                            bigint_sub!(x7806, bigint_mul!(x7829, x7804, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x7837: BytePoly_34 = bigint_nondet_quot!(ctx, x7836, x3, 34);
    let x7838: BytePoly_32 = bigint_nondet_rem!(ctx, x7836, x3, 32);
    let x7839: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x7832, bigint_mul!(x7834, x3, 66), 66),
                        x7804,
                        66
                    ),
                    x7817,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x7835,
        66
    );
    eqz(ctx, &x7839, 276359, 4)?;
    let x7840: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x7837, x3, 66), x7838, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x7829, bigint_sub!(x7804, x7835, 32), 64),
                        x7806,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x7840, 276359, 4)?;
    let x7841: BytePoly_33 = bigint_add!(
        bigint_mul!(x7835, x7821, 33),
        bigint_mul!(x7804, x7823, 33),
        33
    );
    let x7842: BytePoly_33 = bigint_add!(
        bigint_mul!(x7838, x7821, 33),
        bigint_mul!(x7806, x7823, 33),
        33
    );
    let x7843: BytePoly_3 = bigint_nondet_quot!(ctx, x7841, x3, 3);
    let x7844: BytePoly_32 = bigint_nondet_rem!(ctx, x7841, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7843, x3, 35), x7844, 35),
            x7841,
            35
        ),
        260103,
        4,
    )?;
    let x7845: BytePoly_3 = bigint_nondet_quot!(ctx, x7842, x3, 3);
    let x7846: BytePoly_32 = bigint_nondet_rem!(ctx, x7842, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7845, x3, 35), x7846, 35),
            x7842,
            35
        ),
        260103,
        4,
    )?;
    let x7847: BytePoly_64 = bigint_mul!(x7817, x7817, 64);
    let x7848: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x7847, x7847, 64), x7847, 64),
        x2,
        64
    );
    let x7849: BytePoly_64 = bigint_add!(x48, x7848, 64);
    let x7850: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x7820, x7820, 32), x3, 32);
    let x7851: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7848, x7850, 96), x3, 32);
    let x7852: BytePoly_64 = bigint_mul!(x7820, x7851, 64);
    let x7853: BytePoly_64 = bigint_add!(x7852, x7852, 64);
    let x7854: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x7849, x7853, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7854, x3, 66), x7853, 66),
            x7849,
            66
        ),
        276359,
        4,
    )?;
    let x7855: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x7851, x7851, 64), x3, 64), x3, 64),
            x7817,
            64
        ),
        x7817,
        64
    );
    let x7856: BytePoly_34 = bigint_nondet_quot!(ctx, x7855, x3, 34);
    let x7857: BytePoly_32 = bigint_nondet_rem!(ctx, x7855, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7856, x3, 66), x7857, 66),
            x7855,
            66
        ),
        276359,
        4,
    )?;
    let x7858: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x7851, x7857, 64), 64), x3, 64),
            x7820,
            64
        ),
        bigint_mul!(x7851, x7817, 64),
        64
    );
    let x7859: BytePoly_34 = bigint_nondet_quot!(ctx, x7858, x3, 34);
    let x7860: BytePoly_32 = bigint_nondet_rem!(ctx, x7858, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7859, x3, 66), x7860, 66),
            x7858,
            66
        ),
        276359,
        4,
    )?;
    let x7861: BytePoly_1 = bigint_nondet_rem!(ctx, x7822, x4, 1);
    let x7862: BytePoly_32 = bigint_nondet_quot!(ctx, x7822, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7862, x4, 33), x7861, 33),
            x7822,
            33
        ),
        260103,
        4,
    )?;
    let x7863: BytePoly_1 = bigint_sub!(x5, x7861, 1);
    eqz(ctx, &bigint_mul!(x7861, x7863, 2), 8131, 2)?;
    let x7864: BytePoly_32 = bigint_add!(bigint_sub!(x7860, x7846, 32), x3, 32);
    let x7865: BytePoly_32 = bigint_add!(bigint_sub!(x7857, x7844, 32), x3, 32);
    let x7866: BytePoly_32 = bigint_nondet_inv!(ctx, x7865, x3, 32);
    let x7867: BytePoly_64 = bigint_mul!(x7865, x7866, 64);
    let x7868: BytePoly_34 = bigint_nondet_quot!(ctx, x7867, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x7867, bigint_mul!(x7868, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x7869: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7864, x7866, 64), x3, 32);
    let x7870: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x7869, x7865, 64), x7864, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x7871: BytePoly_34 = bigint_nondet_quot!(ctx, x7870, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x7870, bigint_mul!(x7871, x3, 66), 66),
        276359,
        4,
    )?;
    let x7872: BytePoly_64 = bigint_mul!(x7869, x7869, 64);
    let x7873: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x7872, x7844, 64), x3, 64),
            x7857,
            64
        ),
        x3,
        64
    );
    let x7874: BytePoly_34 = bigint_nondet_quot!(ctx, x7873, x3, 34);
    let x7875: BytePoly_32 = bigint_nondet_rem!(ctx, x7873, x3, 32);
    let x7876: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x7869, x7875, 64),
                        bigint_add!(
                            bigint_sub!(x7846, bigint_mul!(x7869, x7844, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x7877: BytePoly_34 = bigint_nondet_quot!(ctx, x7876, x3, 34);
    let x7878: BytePoly_32 = bigint_nondet_rem!(ctx, x7876, x3, 32);
    let x7879: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x7872, bigint_mul!(x7874, x3, 66), 66),
                        x7844,
                        66
                    ),
                    x7857,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x7875,
        66
    );
    eqz(ctx, &x7879, 276359, 4)?;
    let x7880: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x7877, x3, 66), x7878, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x7869, bigint_sub!(x7844, x7875, 32), 64),
                        x7846,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x7880, 276359, 4)?;
    let x7881: BytePoly_33 = bigint_add!(
        bigint_mul!(x7875, x7861, 33),
        bigint_mul!(x7844, x7863, 33),
        33
    );
    let x7882: BytePoly_33 = bigint_add!(
        bigint_mul!(x7878, x7861, 33),
        bigint_mul!(x7846, x7863, 33),
        33
    );
    let x7883: BytePoly_3 = bigint_nondet_quot!(ctx, x7881, x3, 3);
    let x7884: BytePoly_32 = bigint_nondet_rem!(ctx, x7881, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7883, x3, 35), x7884, 35),
            x7881,
            35
        ),
        260103,
        4,
    )?;
    let x7885: BytePoly_3 = bigint_nondet_quot!(ctx, x7882, x3, 3);
    let x7886: BytePoly_32 = bigint_nondet_rem!(ctx, x7882, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7885, x3, 35), x7886, 35),
            x7882,
            35
        ),
        260103,
        4,
    )?;
    let x7887: BytePoly_64 = bigint_mul!(x7857, x7857, 64);
    let x7888: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x7887, x7887, 64), x7887, 64),
        x2,
        64
    );
    let x7889: BytePoly_64 = bigint_add!(x48, x7888, 64);
    let x7890: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x7860, x7860, 32), x3, 32);
    let x7891: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7888, x7890, 96), x3, 32);
    let x7892: BytePoly_64 = bigint_mul!(x7860, x7891, 64);
    let x7893: BytePoly_64 = bigint_add!(x7892, x7892, 64);
    let x7894: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x7889, x7893, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7894, x3, 66), x7893, 66),
            x7889,
            66
        ),
        276359,
        4,
    )?;
    let x7895: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x7891, x7891, 64), x3, 64), x3, 64),
            x7857,
            64
        ),
        x7857,
        64
    );
    let x7896: BytePoly_34 = bigint_nondet_quot!(ctx, x7895, x3, 34);
    let x7897: BytePoly_32 = bigint_nondet_rem!(ctx, x7895, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7896, x3, 66), x7897, 66),
            x7895,
            66
        ),
        276359,
        4,
    )?;
    let x7898: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x7891, x7897, 64), 64), x3, 64),
            x7860,
            64
        ),
        bigint_mul!(x7891, x7857, 64),
        64
    );
    let x7899: BytePoly_34 = bigint_nondet_quot!(ctx, x7898, x3, 34);
    let x7900: BytePoly_32 = bigint_nondet_rem!(ctx, x7898, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7899, x3, 66), x7900, 66),
            x7898,
            66
        ),
        276359,
        4,
    )?;
    let x7901: BytePoly_1 = bigint_nondet_rem!(ctx, x7862, x4, 1);
    let x7902: BytePoly_32 = bigint_nondet_quot!(ctx, x7862, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7902, x4, 33), x7901, 33),
            x7862,
            33
        ),
        260103,
        4,
    )?;
    let x7903: BytePoly_1 = bigint_sub!(x5, x7901, 1);
    eqz(ctx, &bigint_mul!(x7901, x7903, 2), 8131, 2)?;
    let x7904: BytePoly_32 = bigint_add!(bigint_sub!(x7900, x7886, 32), x3, 32);
    let x7905: BytePoly_32 = bigint_add!(bigint_sub!(x7897, x7884, 32), x3, 32);
    let x7906: BytePoly_32 = bigint_nondet_inv!(ctx, x7905, x3, 32);
    let x7907: BytePoly_64 = bigint_mul!(x7905, x7906, 64);
    let x7908: BytePoly_34 = bigint_nondet_quot!(ctx, x7907, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x7907, bigint_mul!(x7908, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x7909: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7904, x7906, 64), x3, 32);
    let x7910: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x7909, x7905, 64), x7904, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x7911: BytePoly_34 = bigint_nondet_quot!(ctx, x7910, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x7910, bigint_mul!(x7911, x3, 66), 66),
        276359,
        4,
    )?;
    let x7912: BytePoly_64 = bigint_mul!(x7909, x7909, 64);
    let x7913: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x7912, x7884, 64), x3, 64),
            x7897,
            64
        ),
        x3,
        64
    );
    let x7914: BytePoly_34 = bigint_nondet_quot!(ctx, x7913, x3, 34);
    let x7915: BytePoly_32 = bigint_nondet_rem!(ctx, x7913, x3, 32);
    let x7916: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x7909, x7915, 64),
                        bigint_add!(
                            bigint_sub!(x7886, bigint_mul!(x7909, x7884, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x7917: BytePoly_34 = bigint_nondet_quot!(ctx, x7916, x3, 34);
    let x7918: BytePoly_32 = bigint_nondet_rem!(ctx, x7916, x3, 32);
    let x7919: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x7912, bigint_mul!(x7914, x3, 66), 66),
                        x7884,
                        66
                    ),
                    x7897,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x7915,
        66
    );
    eqz(ctx, &x7919, 276359, 4)?;
    let x7920: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x7917, x3, 66), x7918, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x7909, bigint_sub!(x7884, x7915, 32), 64),
                        x7886,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x7920, 276359, 4)?;
    let x7921: BytePoly_33 = bigint_add!(
        bigint_mul!(x7915, x7901, 33),
        bigint_mul!(x7884, x7903, 33),
        33
    );
    let x7922: BytePoly_33 = bigint_add!(
        bigint_mul!(x7918, x7901, 33),
        bigint_mul!(x7886, x7903, 33),
        33
    );
    let x7923: BytePoly_3 = bigint_nondet_quot!(ctx, x7921, x3, 3);
    let x7924: BytePoly_32 = bigint_nondet_rem!(ctx, x7921, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7923, x3, 35), x7924, 35),
            x7921,
            35
        ),
        260103,
        4,
    )?;
    let x7925: BytePoly_3 = bigint_nondet_quot!(ctx, x7922, x3, 3);
    let x7926: BytePoly_32 = bigint_nondet_rem!(ctx, x7922, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7925, x3, 35), x7926, 35),
            x7922,
            35
        ),
        260103,
        4,
    )?;
    let x7927: BytePoly_64 = bigint_mul!(x7897, x7897, 64);
    let x7928: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x7927, x7927, 64), x7927, 64),
        x2,
        64
    );
    let x7929: BytePoly_64 = bigint_add!(x48, x7928, 64);
    let x7930: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x7900, x7900, 32), x3, 32);
    let x7931: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7928, x7930, 96), x3, 32);
    let x7932: BytePoly_64 = bigint_mul!(x7900, x7931, 64);
    let x7933: BytePoly_64 = bigint_add!(x7932, x7932, 64);
    let x7934: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x7929, x7933, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7934, x3, 66), x7933, 66),
            x7929,
            66
        ),
        276359,
        4,
    )?;
    let x7935: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x7931, x7931, 64), x3, 64), x3, 64),
            x7897,
            64
        ),
        x7897,
        64
    );
    let x7936: BytePoly_34 = bigint_nondet_quot!(ctx, x7935, x3, 34);
    let x7937: BytePoly_32 = bigint_nondet_rem!(ctx, x7935, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7936, x3, 66), x7937, 66),
            x7935,
            66
        ),
        276359,
        4,
    )?;
    let x7938: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x7931, x7937, 64), 64), x3, 64),
            x7900,
            64
        ),
        bigint_mul!(x7931, x7897, 64),
        64
    );
    let x7939: BytePoly_34 = bigint_nondet_quot!(ctx, x7938, x3, 34);
    let x7940: BytePoly_32 = bigint_nondet_rem!(ctx, x7938, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7939, x3, 66), x7940, 66),
            x7938,
            66
        ),
        276359,
        4,
    )?;
    let x7941: BytePoly_1 = bigint_nondet_rem!(ctx, x7902, x4, 1);
    let x7942: BytePoly_32 = bigint_nondet_quot!(ctx, x7902, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7942, x4, 33), x7941, 33),
            x7902,
            33
        ),
        260103,
        4,
    )?;
    let x7943: BytePoly_1 = bigint_sub!(x5, x7941, 1);
    eqz(ctx, &bigint_mul!(x7941, x7943, 2), 8131, 2)?;
    let x7944: BytePoly_32 = bigint_add!(bigint_sub!(x7940, x7926, 32), x3, 32);
    let x7945: BytePoly_32 = bigint_add!(bigint_sub!(x7937, x7924, 32), x3, 32);
    let x7946: BytePoly_32 = bigint_nondet_inv!(ctx, x7945, x3, 32);
    let x7947: BytePoly_64 = bigint_mul!(x7945, x7946, 64);
    let x7948: BytePoly_34 = bigint_nondet_quot!(ctx, x7947, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x7947, bigint_mul!(x7948, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x7949: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7944, x7946, 64), x3, 32);
    let x7950: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x7949, x7945, 64), x7944, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x7951: BytePoly_34 = bigint_nondet_quot!(ctx, x7950, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x7950, bigint_mul!(x7951, x3, 66), 66),
        276359,
        4,
    )?;
    let x7952: BytePoly_64 = bigint_mul!(x7949, x7949, 64);
    let x7953: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x7952, x7924, 64), x3, 64),
            x7937,
            64
        ),
        x3,
        64
    );
    let x7954: BytePoly_34 = bigint_nondet_quot!(ctx, x7953, x3, 34);
    let x7955: BytePoly_32 = bigint_nondet_rem!(ctx, x7953, x3, 32);
    let x7956: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x7949, x7955, 64),
                        bigint_add!(
                            bigint_sub!(x7926, bigint_mul!(x7949, x7924, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x7957: BytePoly_34 = bigint_nondet_quot!(ctx, x7956, x3, 34);
    let x7958: BytePoly_32 = bigint_nondet_rem!(ctx, x7956, x3, 32);
    let x7959: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x7952, bigint_mul!(x7954, x3, 66), 66),
                        x7924,
                        66
                    ),
                    x7937,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x7955,
        66
    );
    eqz(ctx, &x7959, 276359, 4)?;
    let x7960: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x7957, x3, 66), x7958, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x7949, bigint_sub!(x7924, x7955, 32), 64),
                        x7926,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x7960, 276359, 4)?;
    let x7961: BytePoly_33 = bigint_add!(
        bigint_mul!(x7955, x7941, 33),
        bigint_mul!(x7924, x7943, 33),
        33
    );
    let x7962: BytePoly_33 = bigint_add!(
        bigint_mul!(x7958, x7941, 33),
        bigint_mul!(x7926, x7943, 33),
        33
    );
    let x7963: BytePoly_3 = bigint_nondet_quot!(ctx, x7961, x3, 3);
    let x7964: BytePoly_32 = bigint_nondet_rem!(ctx, x7961, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7963, x3, 35), x7964, 35),
            x7961,
            35
        ),
        260103,
        4,
    )?;
    let x7965: BytePoly_3 = bigint_nondet_quot!(ctx, x7962, x3, 3);
    let x7966: BytePoly_32 = bigint_nondet_rem!(ctx, x7962, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7965, x3, 35), x7966, 35),
            x7962,
            35
        ),
        260103,
        4,
    )?;
    let x7967: BytePoly_64 = bigint_mul!(x7937, x7937, 64);
    let x7968: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x7967, x7967, 64), x7967, 64),
        x2,
        64
    );
    let x7969: BytePoly_64 = bigint_add!(x48, x7968, 64);
    let x7970: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x7940, x7940, 32), x3, 32);
    let x7971: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7968, x7970, 96), x3, 32);
    let x7972: BytePoly_64 = bigint_mul!(x7940, x7971, 64);
    let x7973: BytePoly_64 = bigint_add!(x7972, x7972, 64);
    let x7974: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x7969, x7973, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7974, x3, 66), x7973, 66),
            x7969,
            66
        ),
        276359,
        4,
    )?;
    let x7975: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x7971, x7971, 64), x3, 64), x3, 64),
            x7937,
            64
        ),
        x7937,
        64
    );
    let x7976: BytePoly_34 = bigint_nondet_quot!(ctx, x7975, x3, 34);
    let x7977: BytePoly_32 = bigint_nondet_rem!(ctx, x7975, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7976, x3, 66), x7977, 66),
            x7975,
            66
        ),
        276359,
        4,
    )?;
    let x7978: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x7971, x7977, 64), 64), x3, 64),
            x7940,
            64
        ),
        bigint_mul!(x7971, x7937, 64),
        64
    );
    let x7979: BytePoly_34 = bigint_nondet_quot!(ctx, x7978, x3, 34);
    let x7980: BytePoly_32 = bigint_nondet_rem!(ctx, x7978, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7979, x3, 66), x7980, 66),
            x7978,
            66
        ),
        276359,
        4,
    )?;
    let x7981: BytePoly_1 = bigint_nondet_rem!(ctx, x7942, x4, 1);
    let x7982: BytePoly_32 = bigint_nondet_quot!(ctx, x7942, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7982, x4, 33), x7981, 33),
            x7942,
            33
        ),
        260103,
        4,
    )?;
    let x7983: BytePoly_1 = bigint_sub!(x5, x7981, 1);
    eqz(ctx, &bigint_mul!(x7981, x7983, 2), 8131, 2)?;
    let x7984: BytePoly_32 = bigint_add!(bigint_sub!(x7980, x7966, 32), x3, 32);
    let x7985: BytePoly_32 = bigint_add!(bigint_sub!(x7977, x7964, 32), x3, 32);
    let x7986: BytePoly_32 = bigint_nondet_inv!(ctx, x7985, x3, 32);
    let x7987: BytePoly_64 = bigint_mul!(x7985, x7986, 64);
    let x7988: BytePoly_34 = bigint_nondet_quot!(ctx, x7987, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x7987, bigint_mul!(x7988, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x7989: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7984, x7986, 64), x3, 32);
    let x7990: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x7989, x7985, 64), x7984, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x7991: BytePoly_34 = bigint_nondet_quot!(ctx, x7990, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x7990, bigint_mul!(x7991, x3, 66), 66),
        276359,
        4,
    )?;
    let x7992: BytePoly_64 = bigint_mul!(x7989, x7989, 64);
    let x7993: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x7992, x7964, 64), x3, 64),
            x7977,
            64
        ),
        x3,
        64
    );
    let x7994: BytePoly_34 = bigint_nondet_quot!(ctx, x7993, x3, 34);
    let x7995: BytePoly_32 = bigint_nondet_rem!(ctx, x7993, x3, 32);
    let x7996: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x7989, x7995, 64),
                        bigint_add!(
                            bigint_sub!(x7966, bigint_mul!(x7989, x7964, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x7997: BytePoly_34 = bigint_nondet_quot!(ctx, x7996, x3, 34);
    let x7998: BytePoly_32 = bigint_nondet_rem!(ctx, x7996, x3, 32);
    let x7999: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x7992, bigint_mul!(x7994, x3, 66), 66),
                        x7964,
                        66
                    ),
                    x7977,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x7995,
        66
    );
    eqz(ctx, &x7999, 276359, 4)?;
    let x8000: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x7997, x3, 66), x7998, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x7989, bigint_sub!(x7964, x7995, 32), 64),
                        x7966,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x8000, 276359, 4)?;
    let x8001: BytePoly_33 = bigint_add!(
        bigint_mul!(x7995, x7981, 33),
        bigint_mul!(x7964, x7983, 33),
        33
    );
    let x8002: BytePoly_33 = bigint_add!(
        bigint_mul!(x7998, x7981, 33),
        bigint_mul!(x7966, x7983, 33),
        33
    );
    let x8003: BytePoly_3 = bigint_nondet_quot!(ctx, x8001, x3, 3);
    let x8004: BytePoly_32 = bigint_nondet_rem!(ctx, x8001, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8003, x3, 35), x8004, 35),
            x8001,
            35
        ),
        260103,
        4,
    )?;
    let x8005: BytePoly_3 = bigint_nondet_quot!(ctx, x8002, x3, 3);
    let x8006: BytePoly_32 = bigint_nondet_rem!(ctx, x8002, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8005, x3, 35), x8006, 35),
            x8002,
            35
        ),
        260103,
        4,
    )?;
    let x8007: BytePoly_64 = bigint_mul!(x7977, x7977, 64);
    let x8008: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x8007, x8007, 64), x8007, 64),
        x2,
        64
    );
    let x8009: BytePoly_64 = bigint_add!(x48, x8008, 64);
    let x8010: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x7980, x7980, 32), x3, 32);
    let x8011: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x8008, x8010, 96), x3, 32);
    let x8012: BytePoly_64 = bigint_mul!(x7980, x8011, 64);
    let x8013: BytePoly_64 = bigint_add!(x8012, x8012, 64);
    let x8014: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x8009, x8013, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8014, x3, 66), x8013, 66),
            x8009,
            66
        ),
        276359,
        4,
    )?;
    let x8015: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x8011, x8011, 64), x3, 64), x3, 64),
            x7977,
            64
        ),
        x7977,
        64
    );
    let x8016: BytePoly_34 = bigint_nondet_quot!(ctx, x8015, x3, 34);
    let x8017: BytePoly_32 = bigint_nondet_rem!(ctx, x8015, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8016, x3, 66), x8017, 66),
            x8015,
            66
        ),
        276359,
        4,
    )?;
    let x8018: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x8011, x8017, 64), 64), x3, 64),
            x7980,
            64
        ),
        bigint_mul!(x8011, x7977, 64),
        64
    );
    let x8019: BytePoly_34 = bigint_nondet_quot!(ctx, x8018, x3, 34);
    let x8020: BytePoly_32 = bigint_nondet_rem!(ctx, x8018, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8019, x3, 66), x8020, 66),
            x8018,
            66
        ),
        276359,
        4,
    )?;
    let x8021: BytePoly_1 = bigint_nondet_rem!(ctx, x7982, x4, 1);
    let x8022: BytePoly_32 = bigint_nondet_quot!(ctx, x7982, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8022, x4, 33), x8021, 33),
            x7982,
            33
        ),
        260103,
        4,
    )?;
    let x8023: BytePoly_1 = bigint_sub!(x5, x8021, 1);
    eqz(ctx, &bigint_mul!(x8021, x8023, 2), 8131, 2)?;
    let x8024: BytePoly_32 = bigint_add!(bigint_sub!(x8020, x8006, 32), x3, 32);
    let x8025: BytePoly_32 = bigint_add!(bigint_sub!(x8017, x8004, 32), x3, 32);
    let x8026: BytePoly_32 = bigint_nondet_inv!(ctx, x8025, x3, 32);
    let x8027: BytePoly_64 = bigint_mul!(x8025, x8026, 64);
    let x8028: BytePoly_34 = bigint_nondet_quot!(ctx, x8027, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x8027, bigint_mul!(x8028, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x8029: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x8024, x8026, 64), x3, 32);
    let x8030: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x8029, x8025, 64), x8024, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x8031: BytePoly_34 = bigint_nondet_quot!(ctx, x8030, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x8030, bigint_mul!(x8031, x3, 66), 66),
        276359,
        4,
    )?;
    let x8032: BytePoly_64 = bigint_mul!(x8029, x8029, 64);
    let x8033: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8032, x8004, 64), x3, 64),
            x8017,
            64
        ),
        x3,
        64
    );
    let x8034: BytePoly_34 = bigint_nondet_quot!(ctx, x8033, x3, 34);
    let x8035: BytePoly_32 = bigint_nondet_rem!(ctx, x8033, x3, 32);
    let x8036: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x8029, x8035, 64),
                        bigint_add!(
                            bigint_sub!(x8006, bigint_mul!(x8029, x8004, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x8037: BytePoly_34 = bigint_nondet_quot!(ctx, x8036, x3, 34);
    let x8038: BytePoly_32 = bigint_nondet_rem!(ctx, x8036, x3, 32);
    let x8039: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x8032, bigint_mul!(x8034, x3, 66), 66),
                        x8004,
                        66
                    ),
                    x8017,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x8035,
        66
    );
    eqz(ctx, &x8039, 276359, 4)?;
    let x8040: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x8037, x3, 66), x8038, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x8029, bigint_sub!(x8004, x8035, 32), 64),
                        x8006,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x8040, 276359, 4)?;
    let x8041: BytePoly_33 = bigint_add!(
        bigint_mul!(x8035, x8021, 33),
        bigint_mul!(x8004, x8023, 33),
        33
    );
    let x8042: BytePoly_33 = bigint_add!(
        bigint_mul!(x8038, x8021, 33),
        bigint_mul!(x8006, x8023, 33),
        33
    );
    let x8043: BytePoly_3 = bigint_nondet_quot!(ctx, x8041, x3, 3);
    let x8044: BytePoly_32 = bigint_nondet_rem!(ctx, x8041, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8043, x3, 35), x8044, 35),
            x8041,
            35
        ),
        260103,
        4,
    )?;
    let x8045: BytePoly_3 = bigint_nondet_quot!(ctx, x8042, x3, 3);
    let x8046: BytePoly_32 = bigint_nondet_rem!(ctx, x8042, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8045, x3, 35), x8046, 35),
            x8042,
            35
        ),
        260103,
        4,
    )?;
    let x8047: BytePoly_64 = bigint_mul!(x8017, x8017, 64);
    let x8048: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x8047, x8047, 64), x8047, 64),
        x2,
        64
    );
    let x8049: BytePoly_64 = bigint_add!(x48, x8048, 64);
    let x8050: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x8020, x8020, 32), x3, 32);
    let x8051: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x8048, x8050, 96), x3, 32);
    let x8052: BytePoly_64 = bigint_mul!(x8020, x8051, 64);
    let x8053: BytePoly_64 = bigint_add!(x8052, x8052, 64);
    let x8054: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x8049, x8053, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8054, x3, 66), x8053, 66),
            x8049,
            66
        ),
        276359,
        4,
    )?;
    let x8055: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x8051, x8051, 64), x3, 64), x3, 64),
            x8017,
            64
        ),
        x8017,
        64
    );
    let x8056: BytePoly_34 = bigint_nondet_quot!(ctx, x8055, x3, 34);
    let x8057: BytePoly_32 = bigint_nondet_rem!(ctx, x8055, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8056, x3, 66), x8057, 66),
            x8055,
            66
        ),
        276359,
        4,
    )?;
    let x8058: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x8051, x8057, 64), 64), x3, 64),
            x8020,
            64
        ),
        bigint_mul!(x8051, x8017, 64),
        64
    );
    let x8059: BytePoly_34 = bigint_nondet_quot!(ctx, x8058, x3, 34);
    let x8060: BytePoly_32 = bigint_nondet_rem!(ctx, x8058, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8059, x3, 66), x8060, 66),
            x8058,
            66
        ),
        276359,
        4,
    )?;
    let x8061: BytePoly_1 = bigint_nondet_rem!(ctx, x8022, x4, 1);
    let x8062: BytePoly_32 = bigint_nondet_quot!(ctx, x8022, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8062, x4, 33), x8061, 33),
            x8022,
            33
        ),
        260103,
        4,
    )?;
    let x8063: BytePoly_1 = bigint_sub!(x5, x8061, 1);
    eqz(ctx, &bigint_mul!(x8061, x8063, 2), 8131, 2)?;
    let x8064: BytePoly_32 = bigint_add!(bigint_sub!(x8060, x8046, 32), x3, 32);
    let x8065: BytePoly_32 = bigint_add!(bigint_sub!(x8057, x8044, 32), x3, 32);
    let x8066: BytePoly_32 = bigint_nondet_inv!(ctx, x8065, x3, 32);
    let x8067: BytePoly_64 = bigint_mul!(x8065, x8066, 64);
    let x8068: BytePoly_34 = bigint_nondet_quot!(ctx, x8067, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x8067, bigint_mul!(x8068, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x8069: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x8064, x8066, 64), x3, 32);
    let x8070: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x8069, x8065, 64), x8064, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x8071: BytePoly_34 = bigint_nondet_quot!(ctx, x8070, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x8070, bigint_mul!(x8071, x3, 66), 66),
        276359,
        4,
    )?;
    let x8072: BytePoly_64 = bigint_mul!(x8069, x8069, 64);
    let x8073: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8072, x8044, 64), x3, 64),
            x8057,
            64
        ),
        x3,
        64
    );
    let x8074: BytePoly_34 = bigint_nondet_quot!(ctx, x8073, x3, 34);
    let x8075: BytePoly_32 = bigint_nondet_rem!(ctx, x8073, x3, 32);
    let x8076: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x8069, x8075, 64),
                        bigint_add!(
                            bigint_sub!(x8046, bigint_mul!(x8069, x8044, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x8077: BytePoly_34 = bigint_nondet_quot!(ctx, x8076, x3, 34);
    let x8078: BytePoly_32 = bigint_nondet_rem!(ctx, x8076, x3, 32);
    let x8079: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x8072, bigint_mul!(x8074, x3, 66), 66),
                        x8044,
                        66
                    ),
                    x8057,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x8075,
        66
    );
    eqz(ctx, &x8079, 276359, 4)?;
    let x8080: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x8077, x3, 66), x8078, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x8069, bigint_sub!(x8044, x8075, 32), 64),
                        x8046,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x8080, 276359, 4)?;
    let x8081: BytePoly_33 = bigint_add!(
        bigint_mul!(x8075, x8061, 33),
        bigint_mul!(x8044, x8063, 33),
        33
    );
    let x8082: BytePoly_33 = bigint_add!(
        bigint_mul!(x8078, x8061, 33),
        bigint_mul!(x8046, x8063, 33),
        33
    );
    let x8083: BytePoly_3 = bigint_nondet_quot!(ctx, x8081, x3, 3);
    let x8084: BytePoly_32 = bigint_nondet_rem!(ctx, x8081, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8083, x3, 35), x8084, 35),
            x8081,
            35
        ),
        260103,
        4,
    )?;
    let x8085: BytePoly_3 = bigint_nondet_quot!(ctx, x8082, x3, 3);
    let x8086: BytePoly_32 = bigint_nondet_rem!(ctx, x8082, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8085, x3, 35), x8086, 35),
            x8082,
            35
        ),
        260103,
        4,
    )?;
    let x8087: BytePoly_64 = bigint_mul!(x8057, x8057, 64);
    let x8088: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x8087, x8087, 64), x8087, 64),
        x2,
        64
    );
    let x8089: BytePoly_64 = bigint_add!(x48, x8088, 64);
    let x8090: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x8060, x8060, 32), x3, 32);
    let x8091: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x8088, x8090, 96), x3, 32);
    let x8092: BytePoly_64 = bigint_mul!(x8060, x8091, 64);
    let x8093: BytePoly_64 = bigint_add!(x8092, x8092, 64);
    let x8094: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x8089, x8093, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8094, x3, 66), x8093, 66),
            x8089,
            66
        ),
        276359,
        4,
    )?;
    let x8095: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x8091, x8091, 64), x3, 64), x3, 64),
            x8057,
            64
        ),
        x8057,
        64
    );
    let x8096: BytePoly_34 = bigint_nondet_quot!(ctx, x8095, x3, 34);
    let x8097: BytePoly_32 = bigint_nondet_rem!(ctx, x8095, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8096, x3, 66), x8097, 66),
            x8095,
            66
        ),
        276359,
        4,
    )?;
    let x8098: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x8091, x8097, 64), 64), x3, 64),
            x8060,
            64
        ),
        bigint_mul!(x8091, x8057, 64),
        64
    );
    let x8099: BytePoly_34 = bigint_nondet_quot!(ctx, x8098, x3, 34);
    let x8100: BytePoly_32 = bigint_nondet_rem!(ctx, x8098, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8099, x3, 66), x8100, 66),
            x8098,
            66
        ),
        276359,
        4,
    )?;
    let x8101: BytePoly_1 = bigint_nondet_rem!(ctx, x8062, x4, 1);
    let x8102: BytePoly_32 = bigint_nondet_quot!(ctx, x8062, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8102, x4, 33), x8101, 33),
            x8062,
            33
        ),
        260103,
        4,
    )?;
    let x8103: BytePoly_1 = bigint_sub!(x5, x8101, 1);
    eqz(ctx, &bigint_mul!(x8101, x8103, 2), 8131, 2)?;
    let x8104: BytePoly_32 = bigint_add!(bigint_sub!(x8100, x8086, 32), x3, 32);
    let x8105: BytePoly_32 = bigint_add!(bigint_sub!(x8097, x8084, 32), x3, 32);
    let x8106: BytePoly_32 = bigint_nondet_inv!(ctx, x8105, x3, 32);
    let x8107: BytePoly_64 = bigint_mul!(x8105, x8106, 64);
    let x8108: BytePoly_34 = bigint_nondet_quot!(ctx, x8107, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x8107, bigint_mul!(x8108, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x8109: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x8104, x8106, 64), x3, 32);
    let x8110: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x8109, x8105, 64), x8104, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x8111: BytePoly_34 = bigint_nondet_quot!(ctx, x8110, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x8110, bigint_mul!(x8111, x3, 66), 66),
        276359,
        4,
    )?;
    let x8112: BytePoly_64 = bigint_mul!(x8109, x8109, 64);
    let x8113: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8112, x8084, 64), x3, 64),
            x8097,
            64
        ),
        x3,
        64
    );
    let x8114: BytePoly_34 = bigint_nondet_quot!(ctx, x8113, x3, 34);
    let x8115: BytePoly_32 = bigint_nondet_rem!(ctx, x8113, x3, 32);
    let x8116: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x8109, x8115, 64),
                        bigint_add!(
                            bigint_sub!(x8086, bigint_mul!(x8109, x8084, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x8117: BytePoly_34 = bigint_nondet_quot!(ctx, x8116, x3, 34);
    let x8118: BytePoly_32 = bigint_nondet_rem!(ctx, x8116, x3, 32);
    let x8119: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x8112, bigint_mul!(x8114, x3, 66), 66),
                        x8084,
                        66
                    ),
                    x8097,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x8115,
        66
    );
    eqz(ctx, &x8119, 276359, 4)?;
    let x8120: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x8117, x3, 66), x8118, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x8109, bigint_sub!(x8084, x8115, 32), 64),
                        x8086,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x8120, 276359, 4)?;
    let x8121: BytePoly_33 = bigint_add!(
        bigint_mul!(x8115, x8101, 33),
        bigint_mul!(x8084, x8103, 33),
        33
    );
    let x8122: BytePoly_33 = bigint_add!(
        bigint_mul!(x8118, x8101, 33),
        bigint_mul!(x8086, x8103, 33),
        33
    );
    let x8123: BytePoly_3 = bigint_nondet_quot!(ctx, x8121, x3, 3);
    let x8124: BytePoly_32 = bigint_nondet_rem!(ctx, x8121, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8123, x3, 35), x8124, 35),
            x8121,
            35
        ),
        260103,
        4,
    )?;
    let x8125: BytePoly_3 = bigint_nondet_quot!(ctx, x8122, x3, 3);
    let x8126: BytePoly_32 = bigint_nondet_rem!(ctx, x8122, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8125, x3, 35), x8126, 35),
            x8122,
            35
        ),
        260103,
        4,
    )?;
    let x8127: BytePoly_64 = bigint_mul!(x8097, x8097, 64);
    let x8128: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x8127, x8127, 64), x8127, 64),
        x2,
        64
    );
    let x8129: BytePoly_64 = bigint_add!(x48, x8128, 64);
    let x8130: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x8100, x8100, 32), x3, 32);
    let x8131: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x8128, x8130, 96), x3, 32);
    let x8132: BytePoly_64 = bigint_mul!(x8100, x8131, 64);
    let x8133: BytePoly_64 = bigint_add!(x8132, x8132, 64);
    let x8134: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x8129, x8133, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8134, x3, 66), x8133, 66),
            x8129,
            66
        ),
        276359,
        4,
    )?;
    let x8135: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x8131, x8131, 64), x3, 64), x3, 64),
            x8097,
            64
        ),
        x8097,
        64
    );
    let x8136: BytePoly_34 = bigint_nondet_quot!(ctx, x8135, x3, 34);
    let x8137: BytePoly_32 = bigint_nondet_rem!(ctx, x8135, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8136, x3, 66), x8137, 66),
            x8135,
            66
        ),
        276359,
        4,
    )?;
    let x8138: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x8131, x8137, 64), 64), x3, 64),
            x8100,
            64
        ),
        bigint_mul!(x8131, x8097, 64),
        64
    );
    let x8139: BytePoly_34 = bigint_nondet_quot!(ctx, x8138, x3, 34);
    let x8140: BytePoly_32 = bigint_nondet_rem!(ctx, x8138, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8139, x3, 66), x8140, 66),
            x8138,
            66
        ),
        276359,
        4,
    )?;
    let x8141: BytePoly_1 = bigint_nondet_rem!(ctx, x8102, x4, 1);
    let x8142: BytePoly_32 = bigint_nondet_quot!(ctx, x8102, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8142, x4, 33), x8141, 33),
            x8102,
            33
        ),
        260103,
        4,
    )?;
    let x8143: BytePoly_1 = bigint_sub!(x5, x8141, 1);
    eqz(ctx, &bigint_mul!(x8141, x8143, 2), 8131, 2)?;
    let x8144: BytePoly_32 = bigint_add!(bigint_sub!(x8140, x8126, 32), x3, 32);
    let x8145: BytePoly_32 = bigint_add!(bigint_sub!(x8137, x8124, 32), x3, 32);
    let x8146: BytePoly_32 = bigint_nondet_inv!(ctx, x8145, x3, 32);
    let x8147: BytePoly_64 = bigint_mul!(x8145, x8146, 64);
    let x8148: BytePoly_34 = bigint_nondet_quot!(ctx, x8147, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x8147, bigint_mul!(x8148, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x8149: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x8144, x8146, 64), x3, 32);
    let x8150: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x8149, x8145, 64), x8144, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x8151: BytePoly_34 = bigint_nondet_quot!(ctx, x8150, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x8150, bigint_mul!(x8151, x3, 66), 66),
        276359,
        4,
    )?;
    let x8152: BytePoly_64 = bigint_mul!(x8149, x8149, 64);
    let x8153: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8152, x8124, 64), x3, 64),
            x8137,
            64
        ),
        x3,
        64
    );
    let x8154: BytePoly_34 = bigint_nondet_quot!(ctx, x8153, x3, 34);
    let x8155: BytePoly_32 = bigint_nondet_rem!(ctx, x8153, x3, 32);
    let x8156: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x8149, x8155, 64),
                        bigint_add!(
                            bigint_sub!(x8126, bigint_mul!(x8149, x8124, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x8157: BytePoly_34 = bigint_nondet_quot!(ctx, x8156, x3, 34);
    let x8158: BytePoly_32 = bigint_nondet_rem!(ctx, x8156, x3, 32);
    let x8159: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x8152, bigint_mul!(x8154, x3, 66), 66),
                        x8124,
                        66
                    ),
                    x8137,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x8155,
        66
    );
    eqz(ctx, &x8159, 276359, 4)?;
    let x8160: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x8157, x3, 66), x8158, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x8149, bigint_sub!(x8124, x8155, 32), 64),
                        x8126,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x8160, 276359, 4)?;
    let x8161: BytePoly_33 = bigint_add!(
        bigint_mul!(x8155, x8141, 33),
        bigint_mul!(x8124, x8143, 33),
        33
    );
    let x8162: BytePoly_33 = bigint_add!(
        bigint_mul!(x8158, x8141, 33),
        bigint_mul!(x8126, x8143, 33),
        33
    );
    let x8163: BytePoly_3 = bigint_nondet_quot!(ctx, x8161, x3, 3);
    let x8164: BytePoly_32 = bigint_nondet_rem!(ctx, x8161, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8163, x3, 35), x8164, 35),
            x8161,
            35
        ),
        260103,
        4,
    )?;
    let x8165: BytePoly_3 = bigint_nondet_quot!(ctx, x8162, x3, 3);
    let x8166: BytePoly_32 = bigint_nondet_rem!(ctx, x8162, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8165, x3, 35), x8166, 35),
            x8162,
            35
        ),
        260103,
        4,
    )?;
    let x8167: BytePoly_64 = bigint_mul!(x8137, x8137, 64);
    let x8168: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x8167, x8167, 64), x8167, 64),
        x2,
        64
    );
    let x8169: BytePoly_64 = bigint_add!(x48, x8168, 64);
    let x8170: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x8140, x8140, 32), x3, 32);
    let x8171: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x8168, x8170, 96), x3, 32);
    let x8172: BytePoly_64 = bigint_mul!(x8140, x8171, 64);
    let x8173: BytePoly_64 = bigint_add!(x8172, x8172, 64);
    let x8174: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x8169, x8173, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8174, x3, 66), x8173, 66),
            x8169,
            66
        ),
        276359,
        4,
    )?;
    let x8175: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x8171, x8171, 64), x3, 64), x3, 64),
            x8137,
            64
        ),
        x8137,
        64
    );
    let x8176: BytePoly_34 = bigint_nondet_quot!(ctx, x8175, x3, 34);
    let x8177: BytePoly_32 = bigint_nondet_rem!(ctx, x8175, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8176, x3, 66), x8177, 66),
            x8175,
            66
        ),
        276359,
        4,
    )?;
    let x8178: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x8171, x8177, 64), 64), x3, 64),
            x8140,
            64
        ),
        bigint_mul!(x8171, x8137, 64),
        64
    );
    let x8179: BytePoly_34 = bigint_nondet_quot!(ctx, x8178, x3, 34);
    let x8180: BytePoly_32 = bigint_nondet_rem!(ctx, x8178, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8179, x3, 66), x8180, 66),
            x8178,
            66
        ),
        276359,
        4,
    )?;
    let x8181: BytePoly_1 = bigint_nondet_rem!(ctx, x8142, x4, 1);
    let x8182: BytePoly_32 = bigint_nondet_quot!(ctx, x8142, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8182, x4, 33), x8181, 33),
            x8142,
            33
        ),
        260103,
        4,
    )?;
    let x8183: BytePoly_1 = bigint_sub!(x5, x8181, 1);
    eqz(ctx, &bigint_mul!(x8181, x8183, 2), 8131, 2)?;
    let x8184: BytePoly_32 = bigint_add!(bigint_sub!(x8180, x8166, 32), x3, 32);
    let x8185: BytePoly_32 = bigint_add!(bigint_sub!(x8177, x8164, 32), x3, 32);
    let x8186: BytePoly_32 = bigint_nondet_inv!(ctx, x8185, x3, 32);
    let x8187: BytePoly_64 = bigint_mul!(x8185, x8186, 64);
    let x8188: BytePoly_34 = bigint_nondet_quot!(ctx, x8187, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x8187, bigint_mul!(x8188, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x8189: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x8184, x8186, 64), x3, 32);
    let x8190: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x8189, x8185, 64), x8184, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x8191: BytePoly_34 = bigint_nondet_quot!(ctx, x8190, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x8190, bigint_mul!(x8191, x3, 66), 66),
        276359,
        4,
    )?;
    let x8192: BytePoly_64 = bigint_mul!(x8189, x8189, 64);
    let x8193: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8192, x8164, 64), x3, 64),
            x8177,
            64
        ),
        x3,
        64
    );
    let x8194: BytePoly_34 = bigint_nondet_quot!(ctx, x8193, x3, 34);
    let x8195: BytePoly_32 = bigint_nondet_rem!(ctx, x8193, x3, 32);
    let x8196: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x8189, x8195, 64),
                        bigint_add!(
                            bigint_sub!(x8166, bigint_mul!(x8189, x8164, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x8197: BytePoly_34 = bigint_nondet_quot!(ctx, x8196, x3, 34);
    let x8198: BytePoly_32 = bigint_nondet_rem!(ctx, x8196, x3, 32);
    let x8199: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x8192, bigint_mul!(x8194, x3, 66), 66),
                        x8164,
                        66
                    ),
                    x8177,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x8195,
        66
    );
    eqz(ctx, &x8199, 276359, 4)?;
    let x8200: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x8197, x3, 66), x8198, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x8189, bigint_sub!(x8164, x8195, 32), 64),
                        x8166,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x8200, 276359, 4)?;
    let x8201: BytePoly_33 = bigint_add!(
        bigint_mul!(x8195, x8181, 33),
        bigint_mul!(x8164, x8183, 33),
        33
    );
    let x8202: BytePoly_33 = bigint_add!(
        bigint_mul!(x8198, x8181, 33),
        bigint_mul!(x8166, x8183, 33),
        33
    );
    let x8203: BytePoly_3 = bigint_nondet_quot!(ctx, x8201, x3, 3);
    let x8204: BytePoly_32 = bigint_nondet_rem!(ctx, x8201, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8203, x3, 35), x8204, 35),
            x8201,
            35
        ),
        260103,
        4,
    )?;
    let x8205: BytePoly_3 = bigint_nondet_quot!(ctx, x8202, x3, 3);
    let x8206: BytePoly_32 = bigint_nondet_rem!(ctx, x8202, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8205, x3, 35), x8206, 35),
            x8202,
            35
        ),
        260103,
        4,
    )?;
    let x8207: BytePoly_64 = bigint_mul!(x8177, x8177, 64);
    let x8208: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x8207, x8207, 64), x8207, 64),
        x2,
        64
    );
    let x8209: BytePoly_64 = bigint_add!(x48, x8208, 64);
    let x8210: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x8180, x8180, 32), x3, 32);
    let x8211: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x8208, x8210, 96), x3, 32);
    let x8212: BytePoly_64 = bigint_mul!(x8180, x8211, 64);
    let x8213: BytePoly_64 = bigint_add!(x8212, x8212, 64);
    let x8214: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x8209, x8213, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8214, x3, 66), x8213, 66),
            x8209,
            66
        ),
        276359,
        4,
    )?;
    let x8215: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x8211, x8211, 64), x3, 64), x3, 64),
            x8177,
            64
        ),
        x8177,
        64
    );
    let x8216: BytePoly_34 = bigint_nondet_quot!(ctx, x8215, x3, 34);
    let x8217: BytePoly_32 = bigint_nondet_rem!(ctx, x8215, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8216, x3, 66), x8217, 66),
            x8215,
            66
        ),
        276359,
        4,
    )?;
    let x8218: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x8211, x8217, 64), 64), x3, 64),
            x8180,
            64
        ),
        bigint_mul!(x8211, x8177, 64),
        64
    );
    let x8219: BytePoly_34 = bigint_nondet_quot!(ctx, x8218, x3, 34);
    let x8220: BytePoly_32 = bigint_nondet_rem!(ctx, x8218, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8219, x3, 66), x8220, 66),
            x8218,
            66
        ),
        276359,
        4,
    )?;
    let x8221: BytePoly_1 = bigint_nondet_rem!(ctx, x8182, x4, 1);
    let x8222: BytePoly_32 = bigint_nondet_quot!(ctx, x8182, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8222, x4, 33), x8221, 33),
            x8182,
            33
        ),
        260103,
        4,
    )?;
    let x8223: BytePoly_1 = bigint_sub!(x5, x8221, 1);
    eqz(ctx, &bigint_mul!(x8221, x8223, 2), 8131, 2)?;
    let x8224: BytePoly_32 = bigint_add!(bigint_sub!(x8220, x8206, 32), x3, 32);
    let x8225: BytePoly_32 = bigint_add!(bigint_sub!(x8217, x8204, 32), x3, 32);
    let x8226: BytePoly_32 = bigint_nondet_inv!(ctx, x8225, x3, 32);
    let x8227: BytePoly_64 = bigint_mul!(x8225, x8226, 64);
    let x8228: BytePoly_34 = bigint_nondet_quot!(ctx, x8227, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x8227, bigint_mul!(x8228, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x8229: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x8224, x8226, 64), x3, 32);
    let x8230: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x8229, x8225, 64), x8224, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x8231: BytePoly_34 = bigint_nondet_quot!(ctx, x8230, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x8230, bigint_mul!(x8231, x3, 66), 66),
        276359,
        4,
    )?;
    let x8232: BytePoly_64 = bigint_mul!(x8229, x8229, 64);
    let x8233: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8232, x8204, 64), x3, 64),
            x8217,
            64
        ),
        x3,
        64
    );
    let x8234: BytePoly_34 = bigint_nondet_quot!(ctx, x8233, x3, 34);
    let x8235: BytePoly_32 = bigint_nondet_rem!(ctx, x8233, x3, 32);
    let x8236: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x8229, x8235, 64),
                        bigint_add!(
                            bigint_sub!(x8206, bigint_mul!(x8229, x8204, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x8237: BytePoly_34 = bigint_nondet_quot!(ctx, x8236, x3, 34);
    let x8238: BytePoly_32 = bigint_nondet_rem!(ctx, x8236, x3, 32);
    let x8239: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x8232, bigint_mul!(x8234, x3, 66), 66),
                        x8204,
                        66
                    ),
                    x8217,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x8235,
        66
    );
    eqz(ctx, &x8239, 276359, 4)?;
    let x8240: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x8237, x3, 66), x8238, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x8229, bigint_sub!(x8204, x8235, 32), 64),
                        x8206,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x8240, 276359, 4)?;
    let x8241: BytePoly_33 = bigint_add!(
        bigint_mul!(x8235, x8221, 33),
        bigint_mul!(x8204, x8223, 33),
        33
    );
    let x8242: BytePoly_33 = bigint_add!(
        bigint_mul!(x8238, x8221, 33),
        bigint_mul!(x8206, x8223, 33),
        33
    );
    let x8243: BytePoly_3 = bigint_nondet_quot!(ctx, x8241, x3, 3);
    let x8244: BytePoly_32 = bigint_nondet_rem!(ctx, x8241, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8243, x3, 35), x8244, 35),
            x8241,
            35
        ),
        260103,
        4,
    )?;
    let x8245: BytePoly_3 = bigint_nondet_quot!(ctx, x8242, x3, 3);
    let x8246: BytePoly_32 = bigint_nondet_rem!(ctx, x8242, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8245, x3, 35), x8246, 35),
            x8242,
            35
        ),
        260103,
        4,
    )?;
    let x8247: BytePoly_64 = bigint_mul!(x8217, x8217, 64);
    let x8248: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x8247, x8247, 64), x8247, 64),
        x2,
        64
    );
    let x8249: BytePoly_64 = bigint_add!(x48, x8248, 64);
    let x8250: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x8220, x8220, 32), x3, 32);
    let x8251: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x8248, x8250, 96), x3, 32);
    let x8252: BytePoly_64 = bigint_mul!(x8220, x8251, 64);
    let x8253: BytePoly_64 = bigint_add!(x8252, x8252, 64);
    let x8254: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x8249, x8253, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8254, x3, 66), x8253, 66),
            x8249,
            66
        ),
        276359,
        4,
    )?;
    let x8255: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x8251, x8251, 64), x3, 64), x3, 64),
            x8217,
            64
        ),
        x8217,
        64
    );
    let x8256: BytePoly_34 = bigint_nondet_quot!(ctx, x8255, x3, 34);
    let x8257: BytePoly_32 = bigint_nondet_rem!(ctx, x8255, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8256, x3, 66), x8257, 66),
            x8255,
            66
        ),
        276359,
        4,
    )?;
    let x8258: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x8251, x8257, 64), 64), x3, 64),
            x8220,
            64
        ),
        bigint_mul!(x8251, x8217, 64),
        64
    );
    let x8259: BytePoly_34 = bigint_nondet_quot!(ctx, x8258, x3, 34);
    let x8260: BytePoly_32 = bigint_nondet_rem!(ctx, x8258, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8259, x3, 66), x8260, 66),
            x8258,
            66
        ),
        276359,
        4,
    )?;
    let x8261: BytePoly_1 = bigint_nondet_rem!(ctx, x8222, x4, 1);
    let x8262: BytePoly_32 = bigint_nondet_quot!(ctx, x8222, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8262, x4, 33), x8261, 33),
            x8222,
            33
        ),
        260103,
        4,
    )?;
    let x8263: BytePoly_1 = bigint_sub!(x5, x8261, 1);
    eqz(ctx, &bigint_mul!(x8261, x8263, 2), 8131, 2)?;
    let x8264: BytePoly_32 = bigint_add!(bigint_sub!(x8260, x8246, 32), x3, 32);
    let x8265: BytePoly_32 = bigint_add!(bigint_sub!(x8257, x8244, 32), x3, 32);
    let x8266: BytePoly_32 = bigint_nondet_inv!(ctx, x8265, x3, 32);
    let x8267: BytePoly_64 = bigint_mul!(x8265, x8266, 64);
    let x8268: BytePoly_34 = bigint_nondet_quot!(ctx, x8267, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x8267, bigint_mul!(x8268, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x8269: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x8264, x8266, 64), x3, 32);
    let x8270: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x8269, x8265, 64), x8264, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x8271: BytePoly_34 = bigint_nondet_quot!(ctx, x8270, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x8270, bigint_mul!(x8271, x3, 66), 66),
        276359,
        4,
    )?;
    let x8272: BytePoly_64 = bigint_mul!(x8269, x8269, 64);
    let x8273: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8272, x8244, 64), x3, 64),
            x8257,
            64
        ),
        x3,
        64
    );
    let x8274: BytePoly_34 = bigint_nondet_quot!(ctx, x8273, x3, 34);
    let x8275: BytePoly_32 = bigint_nondet_rem!(ctx, x8273, x3, 32);
    let x8276: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x8269, x8275, 64),
                        bigint_add!(
                            bigint_sub!(x8246, bigint_mul!(x8269, x8244, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x8277: BytePoly_34 = bigint_nondet_quot!(ctx, x8276, x3, 34);
    let x8278: BytePoly_32 = bigint_nondet_rem!(ctx, x8276, x3, 32);
    let x8279: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x8272, bigint_mul!(x8274, x3, 66), 66),
                        x8244,
                        66
                    ),
                    x8257,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x8275,
        66
    );
    eqz(ctx, &x8279, 276359, 4)?;
    let x8280: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x8277, x3, 66), x8278, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x8269, bigint_sub!(x8244, x8275, 32), 64),
                        x8246,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x8280, 276359, 4)?;
    let x8281: BytePoly_33 = bigint_add!(
        bigint_mul!(x8275, x8261, 33),
        bigint_mul!(x8244, x8263, 33),
        33
    );
    let x8282: BytePoly_33 = bigint_add!(
        bigint_mul!(x8278, x8261, 33),
        bigint_mul!(x8246, x8263, 33),
        33
    );
    let x8283: BytePoly_3 = bigint_nondet_quot!(ctx, x8281, x3, 3);
    let x8284: BytePoly_32 = bigint_nondet_rem!(ctx, x8281, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8283, x3, 35), x8284, 35),
            x8281,
            35
        ),
        260103,
        4,
    )?;
    let x8285: BytePoly_3 = bigint_nondet_quot!(ctx, x8282, x3, 3);
    let x8286: BytePoly_32 = bigint_nondet_rem!(ctx, x8282, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8285, x3, 35), x8286, 35),
            x8282,
            35
        ),
        260103,
        4,
    )?;
    let x8287: BytePoly_64 = bigint_mul!(x8257, x8257, 64);
    let x8288: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x8287, x8287, 64), x8287, 64),
        x2,
        64
    );
    let x8289: BytePoly_64 = bigint_add!(x48, x8288, 64);
    let x8290: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x8260, x8260, 32), x3, 32);
    let x8291: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x8288, x8290, 96), x3, 32);
    let x8292: BytePoly_64 = bigint_mul!(x8260, x8291, 64);
    let x8293: BytePoly_64 = bigint_add!(x8292, x8292, 64);
    let x8294: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x8289, x8293, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8294, x3, 66), x8293, 66),
            x8289,
            66
        ),
        276359,
        4,
    )?;
    let x8295: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x8291, x8291, 64), x3, 64), x3, 64),
            x8257,
            64
        ),
        x8257,
        64
    );
    let x8296: BytePoly_34 = bigint_nondet_quot!(ctx, x8295, x3, 34);
    let x8297: BytePoly_32 = bigint_nondet_rem!(ctx, x8295, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8296, x3, 66), x8297, 66),
            x8295,
            66
        ),
        276359,
        4,
    )?;
    let x8298: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x8291, x8297, 64), 64), x3, 64),
            x8260,
            64
        ),
        bigint_mul!(x8291, x8257, 64),
        64
    );
    let x8299: BytePoly_34 = bigint_nondet_quot!(ctx, x8298, x3, 34);
    let x8300: BytePoly_32 = bigint_nondet_rem!(ctx, x8298, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8299, x3, 66), x8300, 66),
            x8298,
            66
        ),
        276359,
        4,
    )?;
    let x8301: BytePoly_1 = bigint_nondet_rem!(ctx, x8262, x4, 1);
    let x8302: BytePoly_32 = bigint_nondet_quot!(ctx, x8262, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8302, x4, 33), x8301, 33),
            x8262,
            33
        ),
        260103,
        4,
    )?;
    let x8303: BytePoly_1 = bigint_sub!(x5, x8301, 1);
    eqz(ctx, &bigint_mul!(x8301, x8303, 2), 8131, 2)?;
    let x8304: BytePoly_32 = bigint_add!(bigint_sub!(x8300, x8286, 32), x3, 32);
    let x8305: BytePoly_32 = bigint_add!(bigint_sub!(x8297, x8284, 32), x3, 32);
    let x8306: BytePoly_32 = bigint_nondet_inv!(ctx, x8305, x3, 32);
    let x8307: BytePoly_64 = bigint_mul!(x8305, x8306, 64);
    let x8308: BytePoly_34 = bigint_nondet_quot!(ctx, x8307, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x8307, bigint_mul!(x8308, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x8309: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x8304, x8306, 64), x3, 32);
    let x8310: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x8309, x8305, 64), x8304, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x8311: BytePoly_34 = bigint_nondet_quot!(ctx, x8310, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x8310, bigint_mul!(x8311, x3, 66), 66),
        276359,
        4,
    )?;
    let x8312: BytePoly_64 = bigint_mul!(x8309, x8309, 64);
    let x8313: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8312, x8284, 64), x3, 64),
            x8297,
            64
        ),
        x3,
        64
    );
    let x8314: BytePoly_34 = bigint_nondet_quot!(ctx, x8313, x3, 34);
    let x8315: BytePoly_32 = bigint_nondet_rem!(ctx, x8313, x3, 32);
    let x8316: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x8309, x8315, 64),
                        bigint_add!(
                            bigint_sub!(x8286, bigint_mul!(x8309, x8284, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x8317: BytePoly_34 = bigint_nondet_quot!(ctx, x8316, x3, 34);
    let x8318: BytePoly_32 = bigint_nondet_rem!(ctx, x8316, x3, 32);
    let x8319: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x8312, bigint_mul!(x8314, x3, 66), 66),
                        x8284,
                        66
                    ),
                    x8297,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x8315,
        66
    );
    eqz(ctx, &x8319, 276359, 4)?;
    let x8320: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x8317, x3, 66), x8318, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x8309, bigint_sub!(x8284, x8315, 32), 64),
                        x8286,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x8320, 276359, 4)?;
    let x8321: BytePoly_33 = bigint_add!(
        bigint_mul!(x8315, x8301, 33),
        bigint_mul!(x8284, x8303, 33),
        33
    );
    let x8322: BytePoly_33 = bigint_add!(
        bigint_mul!(x8318, x8301, 33),
        bigint_mul!(x8286, x8303, 33),
        33
    );
    let x8323: BytePoly_3 = bigint_nondet_quot!(ctx, x8321, x3, 3);
    let x8324: BytePoly_32 = bigint_nondet_rem!(ctx, x8321, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8323, x3, 35), x8324, 35),
            x8321,
            35
        ),
        260103,
        4,
    )?;
    let x8325: BytePoly_3 = bigint_nondet_quot!(ctx, x8322, x3, 3);
    let x8326: BytePoly_32 = bigint_nondet_rem!(ctx, x8322, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8325, x3, 35), x8326, 35),
            x8322,
            35
        ),
        260103,
        4,
    )?;
    let x8327: BytePoly_64 = bigint_mul!(x8297, x8297, 64);
    let x8328: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x8327, x8327, 64), x8327, 64),
        x2,
        64
    );
    let x8329: BytePoly_64 = bigint_add!(x48, x8328, 64);
    let x8330: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x8300, x8300, 32), x3, 32);
    let x8331: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x8328, x8330, 96), x3, 32);
    let x8332: BytePoly_64 = bigint_mul!(x8300, x8331, 64);
    let x8333: BytePoly_64 = bigint_add!(x8332, x8332, 64);
    let x8334: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x8329, x8333, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8334, x3, 66), x8333, 66),
            x8329,
            66
        ),
        276359,
        4,
    )?;
    let x8335: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x8331, x8331, 64), x3, 64), x3, 64),
            x8297,
            64
        ),
        x8297,
        64
    );
    let x8336: BytePoly_34 = bigint_nondet_quot!(ctx, x8335, x3, 34);
    let x8337: BytePoly_32 = bigint_nondet_rem!(ctx, x8335, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8336, x3, 66), x8337, 66),
            x8335,
            66
        ),
        276359,
        4,
    )?;
    let x8338: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x8331, x8337, 64), 64), x3, 64),
            x8300,
            64
        ),
        bigint_mul!(x8331, x8297, 64),
        64
    );
    let x8339: BytePoly_34 = bigint_nondet_quot!(ctx, x8338, x3, 34);
    let x8340: BytePoly_32 = bigint_nondet_rem!(ctx, x8338, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8339, x3, 66), x8340, 66),
            x8338,
            66
        ),
        276359,
        4,
    )?;
    let x8341: BytePoly_1 = bigint_nondet_rem!(ctx, x8302, x4, 1);
    let x8342: BytePoly_32 = bigint_nondet_quot!(ctx, x8302, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8342, x4, 33), x8341, 33),
            x8302,
            33
        ),
        260103,
        4,
    )?;
    let x8343: BytePoly_1 = bigint_sub!(x5, x8341, 1);
    eqz(ctx, &bigint_mul!(x8341, x8343, 2), 8131, 2)?;
    let x8344: BytePoly_32 = bigint_add!(bigint_sub!(x8340, x8326, 32), x3, 32);
    let x8345: BytePoly_32 = bigint_add!(bigint_sub!(x8337, x8324, 32), x3, 32);
    let x8346: BytePoly_32 = bigint_nondet_inv!(ctx, x8345, x3, 32);
    let x8347: BytePoly_64 = bigint_mul!(x8345, x8346, 64);
    let x8348: BytePoly_34 = bigint_nondet_quot!(ctx, x8347, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x8347, bigint_mul!(x8348, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x8349: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x8344, x8346, 64), x3, 32);
    let x8350: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x8349, x8345, 64), x8344, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x8351: BytePoly_34 = bigint_nondet_quot!(ctx, x8350, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x8350, bigint_mul!(x8351, x3, 66), 66),
        276359,
        4,
    )?;
    let x8352: BytePoly_64 = bigint_mul!(x8349, x8349, 64);
    let x8353: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8352, x8324, 64), x3, 64),
            x8337,
            64
        ),
        x3,
        64
    );
    let x8354: BytePoly_34 = bigint_nondet_quot!(ctx, x8353, x3, 34);
    let x8355: BytePoly_32 = bigint_nondet_rem!(ctx, x8353, x3, 32);
    let x8356: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x8349, x8355, 64),
                        bigint_add!(
                            bigint_sub!(x8326, bigint_mul!(x8349, x8324, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x8357: BytePoly_34 = bigint_nondet_quot!(ctx, x8356, x3, 34);
    let x8358: BytePoly_32 = bigint_nondet_rem!(ctx, x8356, x3, 32);
    let x8359: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x8352, bigint_mul!(x8354, x3, 66), 66),
                        x8324,
                        66
                    ),
                    x8337,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x8355,
        66
    );
    eqz(ctx, &x8359, 276359, 4)?;
    let x8360: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x8357, x3, 66), x8358, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x8349, bigint_sub!(x8324, x8355, 32), 64),
                        x8326,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x8360, 276359, 4)?;
    let x8361: BytePoly_33 = bigint_add!(
        bigint_mul!(x8355, x8341, 33),
        bigint_mul!(x8324, x8343, 33),
        33
    );
    let x8362: BytePoly_33 = bigint_add!(
        bigint_mul!(x8358, x8341, 33),
        bigint_mul!(x8326, x8343, 33),
        33
    );
    let x8363: BytePoly_3 = bigint_nondet_quot!(ctx, x8361, x3, 3);
    let x8364: BytePoly_32 = bigint_nondet_rem!(ctx, x8361, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8363, x3, 35), x8364, 35),
            x8361,
            35
        ),
        260103,
        4,
    )?;
    let x8365: BytePoly_3 = bigint_nondet_quot!(ctx, x8362, x3, 3);
    let x8366: BytePoly_32 = bigint_nondet_rem!(ctx, x8362, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8365, x3, 35), x8366, 35),
            x8362,
            35
        ),
        260103,
        4,
    )?;
    let x8367: BytePoly_64 = bigint_mul!(x8337, x8337, 64);
    let x8368: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x8367, x8367, 64), x8367, 64),
        x2,
        64
    );
    let x8369: BytePoly_64 = bigint_add!(x48, x8368, 64);
    let x8370: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x8340, x8340, 32), x3, 32);
    let x8371: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x8368, x8370, 96), x3, 32);
    let x8372: BytePoly_64 = bigint_mul!(x8340, x8371, 64);
    let x8373: BytePoly_64 = bigint_add!(x8372, x8372, 64);
    let x8374: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x8369, x8373, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8374, x3, 66), x8373, 66),
            x8369,
            66
        ),
        276359,
        4,
    )?;
    let x8375: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x8371, x8371, 64), x3, 64), x3, 64),
            x8337,
            64
        ),
        x8337,
        64
    );
    let x8376: BytePoly_34 = bigint_nondet_quot!(ctx, x8375, x3, 34);
    let x8377: BytePoly_32 = bigint_nondet_rem!(ctx, x8375, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8376, x3, 66), x8377, 66),
            x8375,
            66
        ),
        276359,
        4,
    )?;
    let x8378: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x8371, x8377, 64), 64), x3, 64),
            x8340,
            64
        ),
        bigint_mul!(x8371, x8337, 64),
        64
    );
    let x8379: BytePoly_34 = bigint_nondet_quot!(ctx, x8378, x3, 34);
    let x8380: BytePoly_32 = bigint_nondet_rem!(ctx, x8378, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8379, x3, 66), x8380, 66),
            x8378,
            66
        ),
        276359,
        4,
    )?;
    let x8381: BytePoly_1 = bigint_nondet_rem!(ctx, x8342, x4, 1);
    let x8382: BytePoly_32 = bigint_nondet_quot!(ctx, x8342, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8382, x4, 33), x8381, 33),
            x8342,
            33
        ),
        260103,
        4,
    )?;
    let x8383: BytePoly_1 = bigint_sub!(x5, x8381, 1);
    eqz(ctx, &bigint_mul!(x8381, x8383, 2), 8131, 2)?;
    let x8384: BytePoly_32 = bigint_add!(bigint_sub!(x8380, x8366, 32), x3, 32);
    let x8385: BytePoly_32 = bigint_add!(bigint_sub!(x8377, x8364, 32), x3, 32);
    let x8386: BytePoly_32 = bigint_nondet_inv!(ctx, x8385, x3, 32);
    let x8387: BytePoly_64 = bigint_mul!(x8385, x8386, 64);
    let x8388: BytePoly_34 = bigint_nondet_quot!(ctx, x8387, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x8387, bigint_mul!(x8388, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x8389: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x8384, x8386, 64), x3, 32);
    let x8390: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x8389, x8385, 64), x8384, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x8391: BytePoly_34 = bigint_nondet_quot!(ctx, x8390, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x8390, bigint_mul!(x8391, x3, 66), 66),
        276359,
        4,
    )?;
    let x8392: BytePoly_64 = bigint_mul!(x8389, x8389, 64);
    let x8393: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8392, x8364, 64), x3, 64),
            x8377,
            64
        ),
        x3,
        64
    );
    let x8394: BytePoly_34 = bigint_nondet_quot!(ctx, x8393, x3, 34);
    let x8395: BytePoly_32 = bigint_nondet_rem!(ctx, x8393, x3, 32);
    let x8396: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x8389, x8395, 64),
                        bigint_add!(
                            bigint_sub!(x8366, bigint_mul!(x8389, x8364, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x8397: BytePoly_34 = bigint_nondet_quot!(ctx, x8396, x3, 34);
    let x8398: BytePoly_32 = bigint_nondet_rem!(ctx, x8396, x3, 32);
    let x8399: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x8392, bigint_mul!(x8394, x3, 66), 66),
                        x8364,
                        66
                    ),
                    x8377,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x8395,
        66
    );
    eqz(ctx, &x8399, 276359, 4)?;
    let x8400: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x8397, x3, 66), x8398, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x8389, bigint_sub!(x8364, x8395, 32), 64),
                        x8366,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x8400, 276359, 4)?;
    let x8401: BytePoly_33 = bigint_add!(
        bigint_mul!(x8395, x8381, 33),
        bigint_mul!(x8364, x8383, 33),
        33
    );
    let x8402: BytePoly_33 = bigint_add!(
        bigint_mul!(x8398, x8381, 33),
        bigint_mul!(x8366, x8383, 33),
        33
    );
    let x8403: BytePoly_3 = bigint_nondet_quot!(ctx, x8401, x3, 3);
    let x8404: BytePoly_32 = bigint_nondet_rem!(ctx, x8401, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8403, x3, 35), x8404, 35),
            x8401,
            35
        ),
        260103,
        4,
    )?;
    let x8405: BytePoly_3 = bigint_nondet_quot!(ctx, x8402, x3, 3);
    let x8406: BytePoly_32 = bigint_nondet_rem!(ctx, x8402, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8405, x3, 35), x8406, 35),
            x8402,
            35
        ),
        260103,
        4,
    )?;
    let x8407: BytePoly_64 = bigint_mul!(x8377, x8377, 64);
    let x8408: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x8407, x8407, 64), x8407, 64),
        x2,
        64
    );
    let x8409: BytePoly_64 = bigint_add!(x48, x8408, 64);
    let x8410: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x8380, x8380, 32), x3, 32);
    let x8411: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x8408, x8410, 96), x3, 32);
    let x8412: BytePoly_64 = bigint_mul!(x8380, x8411, 64);
    let x8413: BytePoly_64 = bigint_add!(x8412, x8412, 64);
    let x8414: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x8409, x8413, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8414, x3, 66), x8413, 66),
            x8409,
            66
        ),
        276359,
        4,
    )?;
    let x8415: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x8411, x8411, 64), x3, 64), x3, 64),
            x8377,
            64
        ),
        x8377,
        64
    );
    let x8416: BytePoly_34 = bigint_nondet_quot!(ctx, x8415, x3, 34);
    let x8417: BytePoly_32 = bigint_nondet_rem!(ctx, x8415, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8416, x3, 66), x8417, 66),
            x8415,
            66
        ),
        276359,
        4,
    )?;
    let x8418: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x8411, x8417, 64), 64), x3, 64),
            x8380,
            64
        ),
        bigint_mul!(x8411, x8377, 64),
        64
    );
    let x8419: BytePoly_34 = bigint_nondet_quot!(ctx, x8418, x3, 34);
    let x8420: BytePoly_32 = bigint_nondet_rem!(ctx, x8418, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8419, x3, 66), x8420, 66),
            x8418,
            66
        ),
        276359,
        4,
    )?;
    let x8421: BytePoly_1 = bigint_nondet_rem!(ctx, x8382, x4, 1);
    let x8422: BytePoly_32 = bigint_nondet_quot!(ctx, x8382, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8422, x4, 33), x8421, 33),
            x8382,
            33
        ),
        260103,
        4,
    )?;
    let x8423: BytePoly_1 = bigint_sub!(x5, x8421, 1);
    eqz(ctx, &bigint_mul!(x8421, x8423, 2), 8131, 2)?;
    let x8424: BytePoly_32 = bigint_add!(bigint_sub!(x8420, x8406, 32), x3, 32);
    let x8425: BytePoly_32 = bigint_add!(bigint_sub!(x8417, x8404, 32), x3, 32);
    let x8426: BytePoly_32 = bigint_nondet_inv!(ctx, x8425, x3, 32);
    let x8427: BytePoly_64 = bigint_mul!(x8425, x8426, 64);
    let x8428: BytePoly_34 = bigint_nondet_quot!(ctx, x8427, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x8427, bigint_mul!(x8428, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x8429: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x8424, x8426, 64), x3, 32);
    let x8430: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x8429, x8425, 64), x8424, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x8431: BytePoly_34 = bigint_nondet_quot!(ctx, x8430, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x8430, bigint_mul!(x8431, x3, 66), 66),
        276359,
        4,
    )?;
    let x8432: BytePoly_64 = bigint_mul!(x8429, x8429, 64);
    let x8433: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8432, x8404, 64), x3, 64),
            x8417,
            64
        ),
        x3,
        64
    );
    let x8434: BytePoly_34 = bigint_nondet_quot!(ctx, x8433, x3, 34);
    let x8435: BytePoly_32 = bigint_nondet_rem!(ctx, x8433, x3, 32);
    let x8436: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x8429, x8435, 64),
                        bigint_add!(
                            bigint_sub!(x8406, bigint_mul!(x8429, x8404, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x8437: BytePoly_34 = bigint_nondet_quot!(ctx, x8436, x3, 34);
    let x8438: BytePoly_32 = bigint_nondet_rem!(ctx, x8436, x3, 32);
    let x8439: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x8432, bigint_mul!(x8434, x3, 66), 66),
                        x8404,
                        66
                    ),
                    x8417,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x8435,
        66
    );
    eqz(ctx, &x8439, 276359, 4)?;
    let x8440: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x8437, x3, 66), x8438, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x8429, bigint_sub!(x8404, x8435, 32), 64),
                        x8406,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x8440, 276359, 4)?;
    let x8441: BytePoly_33 = bigint_add!(
        bigint_mul!(x8435, x8421, 33),
        bigint_mul!(x8404, x8423, 33),
        33
    );
    let x8442: BytePoly_33 = bigint_add!(
        bigint_mul!(x8438, x8421, 33),
        bigint_mul!(x8406, x8423, 33),
        33
    );
    let x8443: BytePoly_3 = bigint_nondet_quot!(ctx, x8441, x3, 3);
    let x8444: BytePoly_32 = bigint_nondet_rem!(ctx, x8441, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8443, x3, 35), x8444, 35),
            x8441,
            35
        ),
        260103,
        4,
    )?;
    let x8445: BytePoly_3 = bigint_nondet_quot!(ctx, x8442, x3, 3);
    let x8446: BytePoly_32 = bigint_nondet_rem!(ctx, x8442, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8445, x3, 35), x8446, 35),
            x8442,
            35
        ),
        260103,
        4,
    )?;
    let x8447: BytePoly_64 = bigint_mul!(x8417, x8417, 64);
    let x8448: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x8447, x8447, 64), x8447, 64),
        x2,
        64
    );
    let x8449: BytePoly_64 = bigint_add!(x48, x8448, 64);
    let x8450: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x8420, x8420, 32), x3, 32);
    let x8451: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x8448, x8450, 96), x3, 32);
    let x8452: BytePoly_64 = bigint_mul!(x8420, x8451, 64);
    let x8453: BytePoly_64 = bigint_add!(x8452, x8452, 64);
    let x8454: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x8449, x8453, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8454, x3, 66), x8453, 66),
            x8449,
            66
        ),
        276359,
        4,
    )?;
    let x8455: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x8451, x8451, 64), x3, 64), x3, 64),
            x8417,
            64
        ),
        x8417,
        64
    );
    let x8456: BytePoly_34 = bigint_nondet_quot!(ctx, x8455, x3, 34);
    let x8457: BytePoly_32 = bigint_nondet_rem!(ctx, x8455, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8456, x3, 66), x8457, 66),
            x8455,
            66
        ),
        276359,
        4,
    )?;
    let x8458: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x8451, x8457, 64), 64), x3, 64),
            x8420,
            64
        ),
        bigint_mul!(x8451, x8417, 64),
        64
    );
    let x8459: BytePoly_34 = bigint_nondet_quot!(ctx, x8458, x3, 34);
    let x8460: BytePoly_32 = bigint_nondet_rem!(ctx, x8458, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8459, x3, 66), x8460, 66),
            x8458,
            66
        ),
        276359,
        4,
    )?;
    let x8461: BytePoly_1 = bigint_nondet_rem!(ctx, x8422, x4, 1);
    let x8462: BytePoly_32 = bigint_nondet_quot!(ctx, x8422, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8462, x4, 33), x8461, 33),
            x8422,
            33
        ),
        260103,
        4,
    )?;
    let x8463: BytePoly_1 = bigint_sub!(x5, x8461, 1);
    eqz(ctx, &bigint_mul!(x8461, x8463, 2), 8131, 2)?;
    let x8464: BytePoly_32 = bigint_add!(bigint_sub!(x8460, x8446, 32), x3, 32);
    let x8465: BytePoly_32 = bigint_add!(bigint_sub!(x8457, x8444, 32), x3, 32);
    let x8466: BytePoly_32 = bigint_nondet_inv!(ctx, x8465, x3, 32);
    let x8467: BytePoly_64 = bigint_mul!(x8465, x8466, 64);
    let x8468: BytePoly_34 = bigint_nondet_quot!(ctx, x8467, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x8467, bigint_mul!(x8468, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x8469: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x8464, x8466, 64), x3, 32);
    let x8470: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x8469, x8465, 64), x8464, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x8471: BytePoly_34 = bigint_nondet_quot!(ctx, x8470, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x8470, bigint_mul!(x8471, x3, 66), 66),
        276359,
        4,
    )?;
    let x8472: BytePoly_64 = bigint_mul!(x8469, x8469, 64);
    let x8473: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8472, x8444, 64), x3, 64),
            x8457,
            64
        ),
        x3,
        64
    );
    let x8474: BytePoly_34 = bigint_nondet_quot!(ctx, x8473, x3, 34);
    let x8475: BytePoly_32 = bigint_nondet_rem!(ctx, x8473, x3, 32);
    let x8476: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x8469, x8475, 64),
                        bigint_add!(
                            bigint_sub!(x8446, bigint_mul!(x8469, x8444, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x8477: BytePoly_34 = bigint_nondet_quot!(ctx, x8476, x3, 34);
    let x8478: BytePoly_32 = bigint_nondet_rem!(ctx, x8476, x3, 32);
    let x8479: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x8472, bigint_mul!(x8474, x3, 66), 66),
                        x8444,
                        66
                    ),
                    x8457,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x8475,
        66
    );
    eqz(ctx, &x8479, 276359, 4)?;
    let x8480: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x8477, x3, 66), x8478, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x8469, bigint_sub!(x8444, x8475, 32), 64),
                        x8446,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x8480, 276359, 4)?;
    let x8481: BytePoly_33 = bigint_add!(
        bigint_mul!(x8475, x8461, 33),
        bigint_mul!(x8444, x8463, 33),
        33
    );
    let x8482: BytePoly_33 = bigint_add!(
        bigint_mul!(x8478, x8461, 33),
        bigint_mul!(x8446, x8463, 33),
        33
    );
    let x8483: BytePoly_3 = bigint_nondet_quot!(ctx, x8481, x3, 3);
    let x8484: BytePoly_32 = bigint_nondet_rem!(ctx, x8481, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8483, x3, 35), x8484, 35),
            x8481,
            35
        ),
        260103,
        4,
    )?;
    let x8485: BytePoly_3 = bigint_nondet_quot!(ctx, x8482, x3, 3);
    let x8486: BytePoly_32 = bigint_nondet_rem!(ctx, x8482, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8485, x3, 35), x8486, 35),
            x8482,
            35
        ),
        260103,
        4,
    )?;
    let x8487: BytePoly_64 = bigint_mul!(x8457, x8457, 64);
    let x8488: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x8487, x8487, 64), x8487, 64),
        x2,
        64
    );
    let x8489: BytePoly_64 = bigint_add!(x48, x8488, 64);
    let x8490: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x8460, x8460, 32), x3, 32);
    let x8491: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x8488, x8490, 96), x3, 32);
    let x8492: BytePoly_64 = bigint_mul!(x8460, x8491, 64);
    let x8493: BytePoly_64 = bigint_add!(x8492, x8492, 64);
    let x8494: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x8489, x8493, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8494, x3, 66), x8493, 66),
            x8489,
            66
        ),
        276359,
        4,
    )?;
    let x8495: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x8491, x8491, 64), x3, 64), x3, 64),
            x8457,
            64
        ),
        x8457,
        64
    );
    let x8496: BytePoly_34 = bigint_nondet_quot!(ctx, x8495, x3, 34);
    let x8497: BytePoly_32 = bigint_nondet_rem!(ctx, x8495, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8496, x3, 66), x8497, 66),
            x8495,
            66
        ),
        276359,
        4,
    )?;
    let x8498: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x8491, x8497, 64), 64), x3, 64),
            x8460,
            64
        ),
        bigint_mul!(x8491, x8457, 64),
        64
    );
    let x8499: BytePoly_34 = bigint_nondet_quot!(ctx, x8498, x3, 34);
    let x8500: BytePoly_32 = bigint_nondet_rem!(ctx, x8498, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8499, x3, 66), x8500, 66),
            x8498,
            66
        ),
        276359,
        4,
    )?;
    let x8501: BytePoly_1 = bigint_nondet_rem!(ctx, x8462, x4, 1);
    let x8502: BytePoly_32 = bigint_nondet_quot!(ctx, x8462, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8502, x4, 33), x8501, 33),
            x8462,
            33
        ),
        260103,
        4,
    )?;
    let x8503: BytePoly_1 = bigint_sub!(x5, x8501, 1);
    eqz(ctx, &bigint_mul!(x8501, x8503, 2), 8131, 2)?;
    let x8504: BytePoly_32 = bigint_add!(bigint_sub!(x8500, x8486, 32), x3, 32);
    let x8505: BytePoly_32 = bigint_add!(bigint_sub!(x8497, x8484, 32), x3, 32);
    let x8506: BytePoly_32 = bigint_nondet_inv!(ctx, x8505, x3, 32);
    let x8507: BytePoly_64 = bigint_mul!(x8505, x8506, 64);
    let x8508: BytePoly_34 = bigint_nondet_quot!(ctx, x8507, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x8507, bigint_mul!(x8508, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x8509: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x8504, x8506, 64), x3, 32);
    let x8510: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x8509, x8505, 64), x8504, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x8511: BytePoly_34 = bigint_nondet_quot!(ctx, x8510, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x8510, bigint_mul!(x8511, x3, 66), 66),
        276359,
        4,
    )?;
    let x8512: BytePoly_64 = bigint_mul!(x8509, x8509, 64);
    let x8513: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8512, x8484, 64), x3, 64),
            x8497,
            64
        ),
        x3,
        64
    );
    let x8514: BytePoly_34 = bigint_nondet_quot!(ctx, x8513, x3, 34);
    let x8515: BytePoly_32 = bigint_nondet_rem!(ctx, x8513, x3, 32);
    let x8516: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x8509, x8515, 64),
                        bigint_add!(
                            bigint_sub!(x8486, bigint_mul!(x8509, x8484, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x8517: BytePoly_34 = bigint_nondet_quot!(ctx, x8516, x3, 34);
    let x8518: BytePoly_32 = bigint_nondet_rem!(ctx, x8516, x3, 32);
    let x8519: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x8512, bigint_mul!(x8514, x3, 66), 66),
                        x8484,
                        66
                    ),
                    x8497,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x8515,
        66
    );
    eqz(ctx, &x8519, 276359, 4)?;
    let x8520: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x8517, x3, 66), x8518, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x8509, bigint_sub!(x8484, x8515, 32), 64),
                        x8486,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x8520, 276359, 4)?;
    let x8521: BytePoly_33 = bigint_add!(
        bigint_mul!(x8515, x8501, 33),
        bigint_mul!(x8484, x8503, 33),
        33
    );
    let x8522: BytePoly_33 = bigint_add!(
        bigint_mul!(x8518, x8501, 33),
        bigint_mul!(x8486, x8503, 33),
        33
    );
    let x8523: BytePoly_3 = bigint_nondet_quot!(ctx, x8521, x3, 3);
    let x8524: BytePoly_32 = bigint_nondet_rem!(ctx, x8521, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8523, x3, 35), x8524, 35),
            x8521,
            35
        ),
        260103,
        4,
    )?;
    let x8525: BytePoly_3 = bigint_nondet_quot!(ctx, x8522, x3, 3);
    let x8526: BytePoly_32 = bigint_nondet_rem!(ctx, x8522, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8525, x3, 35), x8526, 35),
            x8522,
            35
        ),
        260103,
        4,
    )?;
    let x8527: BytePoly_64 = bigint_mul!(x8497, x8497, 64);
    let x8528: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x8527, x8527, 64), x8527, 64),
        x2,
        64
    );
    let x8529: BytePoly_64 = bigint_add!(x48, x8528, 64);
    let x8530: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x8500, x8500, 32), x3, 32);
    let x8531: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x8528, x8530, 96), x3, 32);
    let x8532: BytePoly_64 = bigint_mul!(x8500, x8531, 64);
    let x8533: BytePoly_64 = bigint_add!(x8532, x8532, 64);
    let x8534: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x8529, x8533, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8534, x3, 66), x8533, 66),
            x8529,
            66
        ),
        276359,
        4,
    )?;
    let x8535: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x8531, x8531, 64), x3, 64), x3, 64),
            x8497,
            64
        ),
        x8497,
        64
    );
    let x8536: BytePoly_34 = bigint_nondet_quot!(ctx, x8535, x3, 34);
    let x8537: BytePoly_32 = bigint_nondet_rem!(ctx, x8535, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8536, x3, 66), x8537, 66),
            x8535,
            66
        ),
        276359,
        4,
    )?;
    let x8538: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x8531, x8537, 64), 64), x3, 64),
            x8500,
            64
        ),
        bigint_mul!(x8531, x8497, 64),
        64
    );
    let x8539: BytePoly_34 = bigint_nondet_quot!(ctx, x8538, x3, 34);
    let x8540: BytePoly_32 = bigint_nondet_rem!(ctx, x8538, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8539, x3, 66), x8540, 66),
            x8538,
            66
        ),
        276359,
        4,
    )?;
    let x8541: BytePoly_1 = bigint_nondet_rem!(ctx, x8502, x4, 1);
    let x8542: BytePoly_32 = bigint_nondet_quot!(ctx, x8502, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8542, x4, 33), x8541, 33),
            x8502,
            33
        ),
        260103,
        4,
    )?;
    let x8543: BytePoly_1 = bigint_sub!(x5, x8541, 1);
    eqz(ctx, &bigint_mul!(x8541, x8543, 2), 8131, 2)?;
    let x8544: BytePoly_32 = bigint_add!(bigint_sub!(x8540, x8526, 32), x3, 32);
    let x8545: BytePoly_32 = bigint_add!(bigint_sub!(x8537, x8524, 32), x3, 32);
    let x8546: BytePoly_32 = bigint_nondet_inv!(ctx, x8545, x3, 32);
    let x8547: BytePoly_64 = bigint_mul!(x8545, x8546, 64);
    let x8548: BytePoly_34 = bigint_nondet_quot!(ctx, x8547, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x8547, bigint_mul!(x8548, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x8549: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x8544, x8546, 64), x3, 32);
    let x8550: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x8549, x8545, 64), x8544, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x8551: BytePoly_34 = bigint_nondet_quot!(ctx, x8550, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x8550, bigint_mul!(x8551, x3, 66), 66),
        276359,
        4,
    )?;
    let x8552: BytePoly_64 = bigint_mul!(x8549, x8549, 64);
    let x8553: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8552, x8524, 64), x3, 64),
            x8537,
            64
        ),
        x3,
        64
    );
    let x8554: BytePoly_34 = bigint_nondet_quot!(ctx, x8553, x3, 34);
    let x8555: BytePoly_32 = bigint_nondet_rem!(ctx, x8553, x3, 32);
    let x8556: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x8549, x8555, 64),
                        bigint_add!(
                            bigint_sub!(x8526, bigint_mul!(x8549, x8524, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x8557: BytePoly_34 = bigint_nondet_quot!(ctx, x8556, x3, 34);
    let x8558: BytePoly_32 = bigint_nondet_rem!(ctx, x8556, x3, 32);
    let x8559: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x8552, bigint_mul!(x8554, x3, 66), 66),
                        x8524,
                        66
                    ),
                    x8537,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x8555,
        66
    );
    eqz(ctx, &x8559, 276359, 4)?;
    let x8560: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x8557, x3, 66), x8558, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x8549, bigint_sub!(x8524, x8555, 32), 64),
                        x8526,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x8560, 276359, 4)?;
    let x8561: BytePoly_33 = bigint_add!(
        bigint_mul!(x8555, x8541, 33),
        bigint_mul!(x8524, x8543, 33),
        33
    );
    let x8562: BytePoly_33 = bigint_add!(
        bigint_mul!(x8558, x8541, 33),
        bigint_mul!(x8526, x8543, 33),
        33
    );
    let x8563: BytePoly_3 = bigint_nondet_quot!(ctx, x8561, x3, 3);
    let x8564: BytePoly_32 = bigint_nondet_rem!(ctx, x8561, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8563, x3, 35), x8564, 35),
            x8561,
            35
        ),
        260103,
        4,
    )?;
    let x8565: BytePoly_3 = bigint_nondet_quot!(ctx, x8562, x3, 3);
    let x8566: BytePoly_32 = bigint_nondet_rem!(ctx, x8562, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8565, x3, 35), x8566, 35),
            x8562,
            35
        ),
        260103,
        4,
    )?;
    let x8567: BytePoly_64 = bigint_mul!(x8537, x8537, 64);
    let x8568: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x8567, x8567, 64), x8567, 64),
        x2,
        64
    );
    let x8569: BytePoly_64 = bigint_add!(x48, x8568, 64);
    let x8570: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x8540, x8540, 32), x3, 32);
    let x8571: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x8568, x8570, 96), x3, 32);
    let x8572: BytePoly_64 = bigint_mul!(x8540, x8571, 64);
    let x8573: BytePoly_64 = bigint_add!(x8572, x8572, 64);
    let x8574: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x8569, x8573, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8574, x3, 66), x8573, 66),
            x8569,
            66
        ),
        276359,
        4,
    )?;
    let x8575: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x8571, x8571, 64), x3, 64), x3, 64),
            x8537,
            64
        ),
        x8537,
        64
    );
    let x8576: BytePoly_34 = bigint_nondet_quot!(ctx, x8575, x3, 34);
    let x8577: BytePoly_32 = bigint_nondet_rem!(ctx, x8575, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8576, x3, 66), x8577, 66),
            x8575,
            66
        ),
        276359,
        4,
    )?;
    let x8578: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x8571, x8577, 64), 64), x3, 64),
            x8540,
            64
        ),
        bigint_mul!(x8571, x8537, 64),
        64
    );
    let x8579: BytePoly_34 = bigint_nondet_quot!(ctx, x8578, x3, 34);
    let x8580: BytePoly_32 = bigint_nondet_rem!(ctx, x8578, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8579, x3, 66), x8580, 66),
            x8578,
            66
        ),
        276359,
        4,
    )?;
    let x8581: BytePoly_1 = bigint_nondet_rem!(ctx, x8542, x4, 1);
    let x8582: BytePoly_32 = bigint_nondet_quot!(ctx, x8542, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8582, x4, 33), x8581, 33),
            x8542,
            33
        ),
        260103,
        4,
    )?;
    let x8583: BytePoly_1 = bigint_sub!(x5, x8581, 1);
    eqz(ctx, &bigint_mul!(x8581, x8583, 2), 8131, 2)?;
    let x8584: BytePoly_32 = bigint_add!(bigint_sub!(x8580, x8566, 32), x3, 32);
    let x8585: BytePoly_32 = bigint_add!(bigint_sub!(x8577, x8564, 32), x3, 32);
    let x8586: BytePoly_32 = bigint_nondet_inv!(ctx, x8585, x3, 32);
    let x8587: BytePoly_64 = bigint_mul!(x8585, x8586, 64);
    let x8588: BytePoly_34 = bigint_nondet_quot!(ctx, x8587, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x8587, bigint_mul!(x8588, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x8589: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x8584, x8586, 64), x3, 32);
    let x8590: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x8589, x8585, 64), x8584, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x8591: BytePoly_34 = bigint_nondet_quot!(ctx, x8590, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x8590, bigint_mul!(x8591, x3, 66), 66),
        276359,
        4,
    )?;
    let x8592: BytePoly_64 = bigint_mul!(x8589, x8589, 64);
    let x8593: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8592, x8564, 64), x3, 64),
            x8577,
            64
        ),
        x3,
        64
    );
    let x8594: BytePoly_34 = bigint_nondet_quot!(ctx, x8593, x3, 34);
    let x8595: BytePoly_32 = bigint_nondet_rem!(ctx, x8593, x3, 32);
    let x8596: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x8589, x8595, 64),
                        bigint_add!(
                            bigint_sub!(x8566, bigint_mul!(x8589, x8564, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x8597: BytePoly_34 = bigint_nondet_quot!(ctx, x8596, x3, 34);
    let x8598: BytePoly_32 = bigint_nondet_rem!(ctx, x8596, x3, 32);
    let x8599: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x8592, bigint_mul!(x8594, x3, 66), 66),
                        x8564,
                        66
                    ),
                    x8577,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x8595,
        66
    );
    eqz(ctx, &x8599, 276359, 4)?;
    let x8600: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x8597, x3, 66), x8598, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x8589, bigint_sub!(x8564, x8595, 32), 64),
                        x8566,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x8600, 276359, 4)?;
    let x8601: BytePoly_33 = bigint_add!(
        bigint_mul!(x8595, x8581, 33),
        bigint_mul!(x8564, x8583, 33),
        33
    );
    let x8602: BytePoly_33 = bigint_add!(
        bigint_mul!(x8598, x8581, 33),
        bigint_mul!(x8566, x8583, 33),
        33
    );
    let x8603: BytePoly_3 = bigint_nondet_quot!(ctx, x8601, x3, 3);
    let x8604: BytePoly_32 = bigint_nondet_rem!(ctx, x8601, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8603, x3, 35), x8604, 35),
            x8601,
            35
        ),
        260103,
        4,
    )?;
    let x8605: BytePoly_3 = bigint_nondet_quot!(ctx, x8602, x3, 3);
    let x8606: BytePoly_32 = bigint_nondet_rem!(ctx, x8602, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8605, x3, 35), x8606, 35),
            x8602,
            35
        ),
        260103,
        4,
    )?;
    let x8607: BytePoly_64 = bigint_mul!(x8577, x8577, 64);
    let x8608: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x8607, x8607, 64), x8607, 64),
        x2,
        64
    );
    let x8609: BytePoly_64 = bigint_add!(x48, x8608, 64);
    let x8610: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x8580, x8580, 32), x3, 32);
    let x8611: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x8608, x8610, 96), x3, 32);
    let x8612: BytePoly_64 = bigint_mul!(x8580, x8611, 64);
    let x8613: BytePoly_64 = bigint_add!(x8612, x8612, 64);
    let x8614: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x8609, x8613, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8614, x3, 66), x8613, 66),
            x8609,
            66
        ),
        276359,
        4,
    )?;
    let x8615: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x8611, x8611, 64), x3, 64), x3, 64),
            x8577,
            64
        ),
        x8577,
        64
    );
    let x8616: BytePoly_34 = bigint_nondet_quot!(ctx, x8615, x3, 34);
    let x8617: BytePoly_32 = bigint_nondet_rem!(ctx, x8615, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8616, x3, 66), x8617, 66),
            x8615,
            66
        ),
        276359,
        4,
    )?;
    let x8618: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x8611, x8617, 64), 64), x3, 64),
            x8580,
            64
        ),
        bigint_mul!(x8611, x8577, 64),
        64
    );
    let x8619: BytePoly_34 = bigint_nondet_quot!(ctx, x8618, x3, 34);
    let x8620: BytePoly_32 = bigint_nondet_rem!(ctx, x8618, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8619, x3, 66), x8620, 66),
            x8618,
            66
        ),
        276359,
        4,
    )?;
    let x8621: BytePoly_1 = bigint_nondet_rem!(ctx, x8582, x4, 1);
    let x8622: BytePoly_32 = bigint_nondet_quot!(ctx, x8582, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8622, x4, 33), x8621, 33),
            x8582,
            33
        ),
        260103,
        4,
    )?;
    let x8623: BytePoly_1 = bigint_sub!(x5, x8621, 1);
    eqz(ctx, &bigint_mul!(x8621, x8623, 2), 8131, 2)?;
    let x8624: BytePoly_32 = bigint_add!(bigint_sub!(x8620, x8606, 32), x3, 32);
    let x8625: BytePoly_32 = bigint_add!(bigint_sub!(x8617, x8604, 32), x3, 32);
    let x8626: BytePoly_32 = bigint_nondet_inv!(ctx, x8625, x3, 32);
    let x8627: BytePoly_64 = bigint_mul!(x8625, x8626, 64);
    let x8628: BytePoly_34 = bigint_nondet_quot!(ctx, x8627, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x8627, bigint_mul!(x8628, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x8629: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x8624, x8626, 64), x3, 32);
    let x8630: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x8629, x8625, 64), x8624, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x8631: BytePoly_34 = bigint_nondet_quot!(ctx, x8630, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x8630, bigint_mul!(x8631, x3, 66), 66),
        276359,
        4,
    )?;
    let x8632: BytePoly_64 = bigint_mul!(x8629, x8629, 64);
    let x8633: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8632, x8604, 64), x3, 64),
            x8617,
            64
        ),
        x3,
        64
    );
    let x8634: BytePoly_34 = bigint_nondet_quot!(ctx, x8633, x3, 34);
    let x8635: BytePoly_32 = bigint_nondet_rem!(ctx, x8633, x3, 32);
    let x8636: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x8629, x8635, 64),
                        bigint_add!(
                            bigint_sub!(x8606, bigint_mul!(x8629, x8604, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x8637: BytePoly_34 = bigint_nondet_quot!(ctx, x8636, x3, 34);
    let x8638: BytePoly_32 = bigint_nondet_rem!(ctx, x8636, x3, 32);
    let x8639: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x8632, bigint_mul!(x8634, x3, 66), 66),
                        x8604,
                        66
                    ),
                    x8617,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x8635,
        66
    );
    eqz(ctx, &x8639, 276359, 4)?;
    let x8640: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x8637, x3, 66), x8638, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x8629, bigint_sub!(x8604, x8635, 32), 64),
                        x8606,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x8640, 276359, 4)?;
    let x8641: BytePoly_33 = bigint_add!(
        bigint_mul!(x8635, x8621, 33),
        bigint_mul!(x8604, x8623, 33),
        33
    );
    let x8642: BytePoly_33 = bigint_add!(
        bigint_mul!(x8638, x8621, 33),
        bigint_mul!(x8606, x8623, 33),
        33
    );
    let x8643: BytePoly_3 = bigint_nondet_quot!(ctx, x8641, x3, 3);
    let x8644: BytePoly_32 = bigint_nondet_rem!(ctx, x8641, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8643, x3, 35), x8644, 35),
            x8641,
            35
        ),
        260103,
        4,
    )?;
    let x8645: BytePoly_3 = bigint_nondet_quot!(ctx, x8642, x3, 3);
    let x8646: BytePoly_32 = bigint_nondet_rem!(ctx, x8642, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8645, x3, 35), x8646, 35),
            x8642,
            35
        ),
        260103,
        4,
    )?;
    let x8647: BytePoly_64 = bigint_mul!(x8617, x8617, 64);
    let x8648: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x8647, x8647, 64), x8647, 64),
        x2,
        64
    );
    let x8649: BytePoly_64 = bigint_add!(x48, x8648, 64);
    let x8650: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x8620, x8620, 32), x3, 32);
    let x8651: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x8648, x8650, 96), x3, 32);
    let x8652: BytePoly_64 = bigint_mul!(x8620, x8651, 64);
    let x8653: BytePoly_64 = bigint_add!(x8652, x8652, 64);
    let x8654: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x8649, x8653, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8654, x3, 66), x8653, 66),
            x8649,
            66
        ),
        276359,
        4,
    )?;
    let x8655: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x8651, x8651, 64), x3, 64), x3, 64),
            x8617,
            64
        ),
        x8617,
        64
    );
    let x8656: BytePoly_34 = bigint_nondet_quot!(ctx, x8655, x3, 34);
    let x8657: BytePoly_32 = bigint_nondet_rem!(ctx, x8655, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8656, x3, 66), x8657, 66),
            x8655,
            66
        ),
        276359,
        4,
    )?;
    let x8658: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x8651, x8657, 64), 64), x3, 64),
            x8620,
            64
        ),
        bigint_mul!(x8651, x8617, 64),
        64
    );
    let x8659: BytePoly_34 = bigint_nondet_quot!(ctx, x8658, x3, 34);
    let x8660: BytePoly_32 = bigint_nondet_rem!(ctx, x8658, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8659, x3, 66), x8660, 66),
            x8658,
            66
        ),
        276359,
        4,
    )?;
    let x8661: BytePoly_1 = bigint_nondet_rem!(ctx, x8622, x4, 1);
    let x8662: BytePoly_32 = bigint_nondet_quot!(ctx, x8622, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8662, x4, 33), x8661, 33),
            x8622,
            33
        ),
        260103,
        4,
    )?;
    let x8663: BytePoly_1 = bigint_sub!(x5, x8661, 1);
    eqz(ctx, &bigint_mul!(x8661, x8663, 2), 8131, 2)?;
    let x8664: BytePoly_32 = bigint_add!(bigint_sub!(x8660, x8646, 32), x3, 32);
    let x8665: BytePoly_32 = bigint_add!(bigint_sub!(x8657, x8644, 32), x3, 32);
    let x8666: BytePoly_32 = bigint_nondet_inv!(ctx, x8665, x3, 32);
    let x8667: BytePoly_64 = bigint_mul!(x8665, x8666, 64);
    let x8668: BytePoly_34 = bigint_nondet_quot!(ctx, x8667, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x8667, bigint_mul!(x8668, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x8669: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x8664, x8666, 64), x3, 32);
    let x8670: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x8669, x8665, 64), x8664, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x8671: BytePoly_34 = bigint_nondet_quot!(ctx, x8670, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x8670, bigint_mul!(x8671, x3, 66), 66),
        276359,
        4,
    )?;
    let x8672: BytePoly_64 = bigint_mul!(x8669, x8669, 64);
    let x8673: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8672, x8644, 64), x3, 64),
            x8657,
            64
        ),
        x3,
        64
    );
    let x8674: BytePoly_34 = bigint_nondet_quot!(ctx, x8673, x3, 34);
    let x8675: BytePoly_32 = bigint_nondet_rem!(ctx, x8673, x3, 32);
    let x8676: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x8669, x8675, 64),
                        bigint_add!(
                            bigint_sub!(x8646, bigint_mul!(x8669, x8644, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x8677: BytePoly_34 = bigint_nondet_quot!(ctx, x8676, x3, 34);
    let x8678: BytePoly_32 = bigint_nondet_rem!(ctx, x8676, x3, 32);
    let x8679: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x8672, bigint_mul!(x8674, x3, 66), 66),
                        x8644,
                        66
                    ),
                    x8657,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x8675,
        66
    );
    eqz(ctx, &x8679, 276359, 4)?;
    let x8680: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x8677, x3, 66), x8678, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x8669, bigint_sub!(x8644, x8675, 32), 64),
                        x8646,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x8680, 276359, 4)?;
    let x8681: BytePoly_33 = bigint_add!(
        bigint_mul!(x8675, x8661, 33),
        bigint_mul!(x8644, x8663, 33),
        33
    );
    let x8682: BytePoly_33 = bigint_add!(
        bigint_mul!(x8678, x8661, 33),
        bigint_mul!(x8646, x8663, 33),
        33
    );
    let x8683: BytePoly_3 = bigint_nondet_quot!(ctx, x8681, x3, 3);
    let x8684: BytePoly_32 = bigint_nondet_rem!(ctx, x8681, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8683, x3, 35), x8684, 35),
            x8681,
            35
        ),
        260103,
        4,
    )?;
    let x8685: BytePoly_3 = bigint_nondet_quot!(ctx, x8682, x3, 3);
    let x8686: BytePoly_32 = bigint_nondet_rem!(ctx, x8682, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8685, x3, 35), x8686, 35),
            x8682,
            35
        ),
        260103,
        4,
    )?;
    let x8687: BytePoly_64 = bigint_mul!(x8657, x8657, 64);
    let x8688: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x8687, x8687, 64), x8687, 64),
        x2,
        64
    );
    let x8689: BytePoly_64 = bigint_add!(x48, x8688, 64);
    let x8690: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x8660, x8660, 32), x3, 32);
    let x8691: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x8688, x8690, 96), x3, 32);
    let x8692: BytePoly_64 = bigint_mul!(x8660, x8691, 64);
    let x8693: BytePoly_64 = bigint_add!(x8692, x8692, 64);
    let x8694: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x8689, x8693, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8694, x3, 66), x8693, 66),
            x8689,
            66
        ),
        276359,
        4,
    )?;
    let x8695: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x8691, x8691, 64), x3, 64), x3, 64),
            x8657,
            64
        ),
        x8657,
        64
    );
    let x8696: BytePoly_34 = bigint_nondet_quot!(ctx, x8695, x3, 34);
    let x8697: BytePoly_32 = bigint_nondet_rem!(ctx, x8695, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8696, x3, 66), x8697, 66),
            x8695,
            66
        ),
        276359,
        4,
    )?;
    let x8698: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x8691, x8697, 64), 64), x3, 64),
            x8660,
            64
        ),
        bigint_mul!(x8691, x8657, 64),
        64
    );
    let x8699: BytePoly_34 = bigint_nondet_quot!(ctx, x8698, x3, 34);
    let x8700: BytePoly_32 = bigint_nondet_rem!(ctx, x8698, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8699, x3, 66), x8700, 66),
            x8698,
            66
        ),
        276359,
        4,
    )?;
    let x8701: BytePoly_1 = bigint_nondet_rem!(ctx, x8662, x4, 1);
    let x8702: BytePoly_32 = bigint_nondet_quot!(ctx, x8662, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8702, x4, 33), x8701, 33),
            x8662,
            33
        ),
        260103,
        4,
    )?;
    let x8703: BytePoly_1 = bigint_sub!(x5, x8701, 1);
    eqz(ctx, &bigint_mul!(x8701, x8703, 2), 8131, 2)?;
    let x8704: BytePoly_32 = bigint_add!(bigint_sub!(x8700, x8686, 32), x3, 32);
    let x8705: BytePoly_32 = bigint_add!(bigint_sub!(x8697, x8684, 32), x3, 32);
    let x8706: BytePoly_32 = bigint_nondet_inv!(ctx, x8705, x3, 32);
    let x8707: BytePoly_64 = bigint_mul!(x8705, x8706, 64);
    let x8708: BytePoly_34 = bigint_nondet_quot!(ctx, x8707, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x8707, bigint_mul!(x8708, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x8709: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x8704, x8706, 64), x3, 32);
    let x8710: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x8709, x8705, 64), x8704, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x8711: BytePoly_34 = bigint_nondet_quot!(ctx, x8710, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x8710, bigint_mul!(x8711, x3, 66), 66),
        276359,
        4,
    )?;
    let x8712: BytePoly_64 = bigint_mul!(x8709, x8709, 64);
    let x8713: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8712, x8684, 64), x3, 64),
            x8697,
            64
        ),
        x3,
        64
    );
    let x8714: BytePoly_34 = bigint_nondet_quot!(ctx, x8713, x3, 34);
    let x8715: BytePoly_32 = bigint_nondet_rem!(ctx, x8713, x3, 32);
    let x8716: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x8709, x8715, 64),
                        bigint_add!(
                            bigint_sub!(x8686, bigint_mul!(x8709, x8684, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x8717: BytePoly_34 = bigint_nondet_quot!(ctx, x8716, x3, 34);
    let x8718: BytePoly_32 = bigint_nondet_rem!(ctx, x8716, x3, 32);
    let x8719: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x8712, bigint_mul!(x8714, x3, 66), 66),
                        x8684,
                        66
                    ),
                    x8697,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x8715,
        66
    );
    eqz(ctx, &x8719, 276359, 4)?;
    let x8720: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x8717, x3, 66), x8718, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x8709, bigint_sub!(x8684, x8715, 32), 64),
                        x8686,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x8720, 276359, 4)?;
    let x8721: BytePoly_33 = bigint_add!(
        bigint_mul!(x8715, x8701, 33),
        bigint_mul!(x8684, x8703, 33),
        33
    );
    let x8722: BytePoly_33 = bigint_add!(
        bigint_mul!(x8718, x8701, 33),
        bigint_mul!(x8686, x8703, 33),
        33
    );
    let x8723: BytePoly_3 = bigint_nondet_quot!(ctx, x8721, x3, 3);
    let x8724: BytePoly_32 = bigint_nondet_rem!(ctx, x8721, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8723, x3, 35), x8724, 35),
            x8721,
            35
        ),
        260103,
        4,
    )?;
    let x8725: BytePoly_3 = bigint_nondet_quot!(ctx, x8722, x3, 3);
    let x8726: BytePoly_32 = bigint_nondet_rem!(ctx, x8722, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8725, x3, 35), x8726, 35),
            x8722,
            35
        ),
        260103,
        4,
    )?;
    let x8727: BytePoly_64 = bigint_mul!(x8697, x8697, 64);
    let x8728: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x8727, x8727, 64), x8727, 64),
        x2,
        64
    );
    let x8729: BytePoly_64 = bigint_add!(x48, x8728, 64);
    let x8730: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x8700, x8700, 32), x3, 32);
    let x8731: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x8728, x8730, 96), x3, 32);
    let x8732: BytePoly_64 = bigint_mul!(x8700, x8731, 64);
    let x8733: BytePoly_64 = bigint_add!(x8732, x8732, 64);
    let x8734: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x8729, x8733, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8734, x3, 66), x8733, 66),
            x8729,
            66
        ),
        276359,
        4,
    )?;
    let x8735: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x8731, x8731, 64), x3, 64), x3, 64),
            x8697,
            64
        ),
        x8697,
        64
    );
    let x8736: BytePoly_34 = bigint_nondet_quot!(ctx, x8735, x3, 34);
    let x8737: BytePoly_32 = bigint_nondet_rem!(ctx, x8735, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8736, x3, 66), x8737, 66),
            x8735,
            66
        ),
        276359,
        4,
    )?;
    let x8738: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x8731, x8737, 64), 64), x3, 64),
            x8700,
            64
        ),
        bigint_mul!(x8731, x8697, 64),
        64
    );
    let x8739: BytePoly_34 = bigint_nondet_quot!(ctx, x8738, x3, 34);
    let x8740: BytePoly_32 = bigint_nondet_rem!(ctx, x8738, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8739, x3, 66), x8740, 66),
            x8738,
            66
        ),
        276359,
        4,
    )?;
    let x8741: BytePoly_1 = bigint_nondet_rem!(ctx, x8702, x4, 1);
    let x8742: BytePoly_32 = bigint_nondet_quot!(ctx, x8702, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8742, x4, 33), x8741, 33),
            x8702,
            33
        ),
        260103,
        4,
    )?;
    let x8743: BytePoly_1 = bigint_sub!(x5, x8741, 1);
    eqz(ctx, &bigint_mul!(x8741, x8743, 2), 8131, 2)?;
    let x8744: BytePoly_32 = bigint_add!(bigint_sub!(x8740, x8726, 32), x3, 32);
    let x8745: BytePoly_32 = bigint_add!(bigint_sub!(x8737, x8724, 32), x3, 32);
    let x8746: BytePoly_32 = bigint_nondet_inv!(ctx, x8745, x3, 32);
    let x8747: BytePoly_64 = bigint_mul!(x8745, x8746, 64);
    let x8748: BytePoly_34 = bigint_nondet_quot!(ctx, x8747, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x8747, bigint_mul!(x8748, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x8749: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x8744, x8746, 64), x3, 32);
    let x8750: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x8749, x8745, 64), x8744, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x8751: BytePoly_34 = bigint_nondet_quot!(ctx, x8750, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x8750, bigint_mul!(x8751, x3, 66), 66),
        276359,
        4,
    )?;
    let x8752: BytePoly_64 = bigint_mul!(x8749, x8749, 64);
    let x8753: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8752, x8724, 64), x3, 64),
            x8737,
            64
        ),
        x3,
        64
    );
    let x8754: BytePoly_34 = bigint_nondet_quot!(ctx, x8753, x3, 34);
    let x8755: BytePoly_32 = bigint_nondet_rem!(ctx, x8753, x3, 32);
    let x8756: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x8749, x8755, 64),
                        bigint_add!(
                            bigint_sub!(x8726, bigint_mul!(x8749, x8724, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x8757: BytePoly_34 = bigint_nondet_quot!(ctx, x8756, x3, 34);
    let x8758: BytePoly_32 = bigint_nondet_rem!(ctx, x8756, x3, 32);
    let x8759: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x8752, bigint_mul!(x8754, x3, 66), 66),
                        x8724,
                        66
                    ),
                    x8737,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x8755,
        66
    );
    eqz(ctx, &x8759, 276359, 4)?;
    let x8760: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x8757, x3, 66), x8758, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x8749, bigint_sub!(x8724, x8755, 32), 64),
                        x8726,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x8760, 276359, 4)?;
    let x8761: BytePoly_33 = bigint_add!(
        bigint_mul!(x8755, x8741, 33),
        bigint_mul!(x8724, x8743, 33),
        33
    );
    let x8762: BytePoly_33 = bigint_add!(
        bigint_mul!(x8758, x8741, 33),
        bigint_mul!(x8726, x8743, 33),
        33
    );
    let x8763: BytePoly_3 = bigint_nondet_quot!(ctx, x8761, x3, 3);
    let x8764: BytePoly_32 = bigint_nondet_rem!(ctx, x8761, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8763, x3, 35), x8764, 35),
            x8761,
            35
        ),
        260103,
        4,
    )?;
    let x8765: BytePoly_3 = bigint_nondet_quot!(ctx, x8762, x3, 3);
    let x8766: BytePoly_32 = bigint_nondet_rem!(ctx, x8762, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8765, x3, 35), x8766, 35),
            x8762,
            35
        ),
        260103,
        4,
    )?;
    let x8767: BytePoly_64 = bigint_mul!(x8737, x8737, 64);
    let x8768: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x8767, x8767, 64), x8767, 64),
        x2,
        64
    );
    let x8769: BytePoly_64 = bigint_add!(x48, x8768, 64);
    let x8770: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x8740, x8740, 32), x3, 32);
    let x8771: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x8768, x8770, 96), x3, 32);
    let x8772: BytePoly_64 = bigint_mul!(x8740, x8771, 64);
    let x8773: BytePoly_64 = bigint_add!(x8772, x8772, 64);
    let x8774: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x8769, x8773, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8774, x3, 66), x8773, 66),
            x8769,
            66
        ),
        276359,
        4,
    )?;
    let x8775: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x8771, x8771, 64), x3, 64), x3, 64),
            x8737,
            64
        ),
        x8737,
        64
    );
    let x8776: BytePoly_34 = bigint_nondet_quot!(ctx, x8775, x3, 34);
    let x8777: BytePoly_32 = bigint_nondet_rem!(ctx, x8775, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8776, x3, 66), x8777, 66),
            x8775,
            66
        ),
        276359,
        4,
    )?;
    let x8778: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x8771, x8777, 64), 64), x3, 64),
            x8740,
            64
        ),
        bigint_mul!(x8771, x8737, 64),
        64
    );
    let x8779: BytePoly_34 = bigint_nondet_quot!(ctx, x8778, x3, 34);
    let x8780: BytePoly_32 = bigint_nondet_rem!(ctx, x8778, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8779, x3, 66), x8780, 66),
            x8778,
            66
        ),
        276359,
        4,
    )?;
    let x8781: BytePoly_1 = bigint_nondet_rem!(ctx, x8742, x4, 1);
    let x8782: BytePoly_32 = bigint_nondet_quot!(ctx, x8742, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8782, x4, 33), x8781, 33),
            x8742,
            33
        ),
        260103,
        4,
    )?;
    let x8783: BytePoly_1 = bigint_sub!(x5, x8781, 1);
    eqz(ctx, &bigint_mul!(x8781, x8783, 2), 8131, 2)?;
    let x8784: BytePoly_32 = bigint_add!(bigint_sub!(x8780, x8766, 32), x3, 32);
    let x8785: BytePoly_32 = bigint_add!(bigint_sub!(x8777, x8764, 32), x3, 32);
    let x8786: BytePoly_32 = bigint_nondet_inv!(ctx, x8785, x3, 32);
    let x8787: BytePoly_64 = bigint_mul!(x8785, x8786, 64);
    let x8788: BytePoly_34 = bigint_nondet_quot!(ctx, x8787, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x8787, bigint_mul!(x8788, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x8789: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x8784, x8786, 64), x3, 32);
    let x8790: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x8789, x8785, 64), x8784, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x8791: BytePoly_34 = bigint_nondet_quot!(ctx, x8790, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x8790, bigint_mul!(x8791, x3, 66), 66),
        276359,
        4,
    )?;
    let x8792: BytePoly_64 = bigint_mul!(x8789, x8789, 64);
    let x8793: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8792, x8764, 64), x3, 64),
            x8777,
            64
        ),
        x3,
        64
    );
    let x8794: BytePoly_34 = bigint_nondet_quot!(ctx, x8793, x3, 34);
    let x8795: BytePoly_32 = bigint_nondet_rem!(ctx, x8793, x3, 32);
    let x8796: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x8789, x8795, 64),
                        bigint_add!(
                            bigint_sub!(x8766, bigint_mul!(x8789, x8764, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x8797: BytePoly_34 = bigint_nondet_quot!(ctx, x8796, x3, 34);
    let x8798: BytePoly_32 = bigint_nondet_rem!(ctx, x8796, x3, 32);
    let x8799: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x8792, bigint_mul!(x8794, x3, 66), 66),
                        x8764,
                        66
                    ),
                    x8777,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x8795,
        66
    );
    eqz(ctx, &x8799, 276359, 4)?;
    let x8800: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x8797, x3, 66), x8798, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x8789, bigint_sub!(x8764, x8795, 32), 64),
                        x8766,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x8800, 276359, 4)?;
    let x8801: BytePoly_33 = bigint_add!(
        bigint_mul!(x8795, x8781, 33),
        bigint_mul!(x8764, x8783, 33),
        33
    );
    let x8802: BytePoly_33 = bigint_add!(
        bigint_mul!(x8798, x8781, 33),
        bigint_mul!(x8766, x8783, 33),
        33
    );
    let x8803: BytePoly_3 = bigint_nondet_quot!(ctx, x8801, x3, 3);
    let x8804: BytePoly_32 = bigint_nondet_rem!(ctx, x8801, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8803, x3, 35), x8804, 35),
            x8801,
            35
        ),
        260103,
        4,
    )?;
    let x8805: BytePoly_3 = bigint_nondet_quot!(ctx, x8802, x3, 3);
    let x8806: BytePoly_32 = bigint_nondet_rem!(ctx, x8802, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8805, x3, 35), x8806, 35),
            x8802,
            35
        ),
        260103,
        4,
    )?;
    let x8807: BytePoly_64 = bigint_mul!(x8777, x8777, 64);
    let x8808: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x8807, x8807, 64), x8807, 64),
        x2,
        64
    );
    let x8809: BytePoly_64 = bigint_add!(x48, x8808, 64);
    let x8810: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x8780, x8780, 32), x3, 32);
    let x8811: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x8808, x8810, 96), x3, 32);
    let x8812: BytePoly_64 = bigint_mul!(x8780, x8811, 64);
    let x8813: BytePoly_64 = bigint_add!(x8812, x8812, 64);
    let x8814: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x8809, x8813, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8814, x3, 66), x8813, 66),
            x8809,
            66
        ),
        276359,
        4,
    )?;
    let x8815: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x8811, x8811, 64), x3, 64), x3, 64),
            x8777,
            64
        ),
        x8777,
        64
    );
    let x8816: BytePoly_34 = bigint_nondet_quot!(ctx, x8815, x3, 34);
    let x8817: BytePoly_32 = bigint_nondet_rem!(ctx, x8815, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8816, x3, 66), x8817, 66),
            x8815,
            66
        ),
        276359,
        4,
    )?;
    let x8818: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x8811, x8817, 64), 64), x3, 64),
            x8780,
            64
        ),
        bigint_mul!(x8811, x8777, 64),
        64
    );
    let x8819: BytePoly_34 = bigint_nondet_quot!(ctx, x8818, x3, 34);
    let x8820: BytePoly_32 = bigint_nondet_rem!(ctx, x8818, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8819, x3, 66), x8820, 66),
            x8818,
            66
        ),
        276359,
        4,
    )?;
    let x8821: BytePoly_1 = bigint_nondet_rem!(ctx, x8782, x4, 1);
    let x8822: BytePoly_32 = bigint_nondet_quot!(ctx, x8782, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8822, x4, 33), x8821, 33),
            x8782,
            33
        ),
        260103,
        4,
    )?;
    let x8823: BytePoly_1 = bigint_sub!(x5, x8821, 1);
    eqz(ctx, &bigint_mul!(x8821, x8823, 2), 8131, 2)?;
    let x8824: BytePoly_32 = bigint_add!(bigint_sub!(x8820, x8806, 32), x3, 32);
    let x8825: BytePoly_32 = bigint_add!(bigint_sub!(x8817, x8804, 32), x3, 32);
    let x8826: BytePoly_32 = bigint_nondet_inv!(ctx, x8825, x3, 32);
    let x8827: BytePoly_64 = bigint_mul!(x8825, x8826, 64);
    let x8828: BytePoly_34 = bigint_nondet_quot!(ctx, x8827, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x8827, bigint_mul!(x8828, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x8829: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x8824, x8826, 64), x3, 32);
    let x8830: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x8829, x8825, 64), x8824, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x8831: BytePoly_34 = bigint_nondet_quot!(ctx, x8830, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x8830, bigint_mul!(x8831, x3, 66), 66),
        276359,
        4,
    )?;
    let x8832: BytePoly_64 = bigint_mul!(x8829, x8829, 64);
    let x8833: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8832, x8804, 64), x3, 64),
            x8817,
            64
        ),
        x3,
        64
    );
    let x8834: BytePoly_34 = bigint_nondet_quot!(ctx, x8833, x3, 34);
    let x8835: BytePoly_32 = bigint_nondet_rem!(ctx, x8833, x3, 32);
    let x8836: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x8829, x8835, 64),
                        bigint_add!(
                            bigint_sub!(x8806, bigint_mul!(x8829, x8804, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x8837: BytePoly_34 = bigint_nondet_quot!(ctx, x8836, x3, 34);
    let x8838: BytePoly_32 = bigint_nondet_rem!(ctx, x8836, x3, 32);
    let x8839: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x8832, bigint_mul!(x8834, x3, 66), 66),
                        x8804,
                        66
                    ),
                    x8817,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x8835,
        66
    );
    eqz(ctx, &x8839, 276359, 4)?;
    let x8840: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x8837, x3, 66), x8838, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x8829, bigint_sub!(x8804, x8835, 32), 64),
                        x8806,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x8840, 276359, 4)?;
    let x8841: BytePoly_33 = bigint_add!(
        bigint_mul!(x8835, x8821, 33),
        bigint_mul!(x8804, x8823, 33),
        33
    );
    let x8842: BytePoly_33 = bigint_add!(
        bigint_mul!(x8838, x8821, 33),
        bigint_mul!(x8806, x8823, 33),
        33
    );
    let x8843: BytePoly_3 = bigint_nondet_quot!(ctx, x8841, x3, 3);
    let x8844: BytePoly_32 = bigint_nondet_rem!(ctx, x8841, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8843, x3, 35), x8844, 35),
            x8841,
            35
        ),
        260103,
        4,
    )?;
    let x8845: BytePoly_3 = bigint_nondet_quot!(ctx, x8842, x3, 3);
    let x8846: BytePoly_32 = bigint_nondet_rem!(ctx, x8842, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8845, x3, 35), x8846, 35),
            x8842,
            35
        ),
        260103,
        4,
    )?;
    let x8847: BytePoly_64 = bigint_mul!(x8817, x8817, 64);
    let x8848: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x8847, x8847, 64), x8847, 64),
        x2,
        64
    );
    let x8849: BytePoly_64 = bigint_add!(x48, x8848, 64);
    let x8850: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x8820, x8820, 32), x3, 32);
    let x8851: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x8848, x8850, 96), x3, 32);
    let x8852: BytePoly_64 = bigint_mul!(x8820, x8851, 64);
    let x8853: BytePoly_64 = bigint_add!(x8852, x8852, 64);
    let x8854: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x8849, x8853, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8854, x3, 66), x8853, 66),
            x8849,
            66
        ),
        276359,
        4,
    )?;
    let x8855: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x8851, x8851, 64), x3, 64), x3, 64),
            x8817,
            64
        ),
        x8817,
        64
    );
    let x8856: BytePoly_34 = bigint_nondet_quot!(ctx, x8855, x3, 34);
    let x8857: BytePoly_32 = bigint_nondet_rem!(ctx, x8855, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8856, x3, 66), x8857, 66),
            x8855,
            66
        ),
        276359,
        4,
    )?;
    let x8858: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x8851, x8857, 64), 64), x3, 64),
            x8820,
            64
        ),
        bigint_mul!(x8851, x8817, 64),
        64
    );
    let x8859: BytePoly_34 = bigint_nondet_quot!(ctx, x8858, x3, 34);
    let x8860: BytePoly_32 = bigint_nondet_rem!(ctx, x8858, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8859, x3, 66), x8860, 66),
            x8858,
            66
        ),
        276359,
        4,
    )?;
    let x8861: BytePoly_1 = bigint_nondet_rem!(ctx, x8822, x4, 1);
    let x8862: BytePoly_32 = bigint_nondet_quot!(ctx, x8822, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8862, x4, 33), x8861, 33),
            x8822,
            33
        ),
        260103,
        4,
    )?;
    let x8863: BytePoly_1 = bigint_sub!(x5, x8861, 1);
    eqz(ctx, &bigint_mul!(x8861, x8863, 2), 8131, 2)?;
    let x8864: BytePoly_32 = bigint_add!(bigint_sub!(x8860, x8846, 32), x3, 32);
    let x8865: BytePoly_32 = bigint_add!(bigint_sub!(x8857, x8844, 32), x3, 32);
    let x8866: BytePoly_32 = bigint_nondet_inv!(ctx, x8865, x3, 32);
    let x8867: BytePoly_64 = bigint_mul!(x8865, x8866, 64);
    let x8868: BytePoly_34 = bigint_nondet_quot!(ctx, x8867, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x8867, bigint_mul!(x8868, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x8869: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x8864, x8866, 64), x3, 32);
    let x8870: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x8869, x8865, 64), x8864, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x8871: BytePoly_34 = bigint_nondet_quot!(ctx, x8870, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x8870, bigint_mul!(x8871, x3, 66), 66),
        276359,
        4,
    )?;
    let x8872: BytePoly_64 = bigint_mul!(x8869, x8869, 64);
    let x8873: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8872, x8844, 64), x3, 64),
            x8857,
            64
        ),
        x3,
        64
    );
    let x8874: BytePoly_34 = bigint_nondet_quot!(ctx, x8873, x3, 34);
    let x8875: BytePoly_32 = bigint_nondet_rem!(ctx, x8873, x3, 32);
    let x8876: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x8869, x8875, 64),
                        bigint_add!(
                            bigint_sub!(x8846, bigint_mul!(x8869, x8844, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x8877: BytePoly_34 = bigint_nondet_quot!(ctx, x8876, x3, 34);
    let x8878: BytePoly_32 = bigint_nondet_rem!(ctx, x8876, x3, 32);
    let x8879: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x8872, bigint_mul!(x8874, x3, 66), 66),
                        x8844,
                        66
                    ),
                    x8857,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x8875,
        66
    );
    eqz(ctx, &x8879, 276359, 4)?;
    let x8880: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x8877, x3, 66), x8878, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x8869, bigint_sub!(x8844, x8875, 32), 64),
                        x8846,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x8880, 276359, 4)?;
    let x8881: BytePoly_33 = bigint_add!(
        bigint_mul!(x8875, x8861, 33),
        bigint_mul!(x8844, x8863, 33),
        33
    );
    let x8882: BytePoly_33 = bigint_add!(
        bigint_mul!(x8878, x8861, 33),
        bigint_mul!(x8846, x8863, 33),
        33
    );
    let x8883: BytePoly_3 = bigint_nondet_quot!(ctx, x8881, x3, 3);
    let x8884: BytePoly_32 = bigint_nondet_rem!(ctx, x8881, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8883, x3, 35), x8884, 35),
            x8881,
            35
        ),
        260103,
        4,
    )?;
    let x8885: BytePoly_3 = bigint_nondet_quot!(ctx, x8882, x3, 3);
    let x8886: BytePoly_32 = bigint_nondet_rem!(ctx, x8882, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8885, x3, 35), x8886, 35),
            x8882,
            35
        ),
        260103,
        4,
    )?;
    let x8887: BytePoly_64 = bigint_mul!(x8857, x8857, 64);
    let x8888: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x8887, x8887, 64), x8887, 64),
        x2,
        64
    );
    let x8889: BytePoly_64 = bigint_add!(x48, x8888, 64);
    let x8890: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x8860, x8860, 32), x3, 32);
    let x8891: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x8888, x8890, 96), x3, 32);
    let x8892: BytePoly_64 = bigint_mul!(x8860, x8891, 64);
    let x8893: BytePoly_64 = bigint_add!(x8892, x8892, 64);
    let x8894: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x8889, x8893, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8894, x3, 66), x8893, 66),
            x8889,
            66
        ),
        276359,
        4,
    )?;
    let x8895: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x8891, x8891, 64), x3, 64), x3, 64),
            x8857,
            64
        ),
        x8857,
        64
    );
    let x8896: BytePoly_34 = bigint_nondet_quot!(ctx, x8895, x3, 34);
    let x8897: BytePoly_32 = bigint_nondet_rem!(ctx, x8895, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8896, x3, 66), x8897, 66),
            x8895,
            66
        ),
        276359,
        4,
    )?;
    let x8898: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x8891, x8897, 64), 64), x3, 64),
            x8860,
            64
        ),
        bigint_mul!(x8891, x8857, 64),
        64
    );
    let x8899: BytePoly_34 = bigint_nondet_quot!(ctx, x8898, x3, 34);
    let x8900: BytePoly_32 = bigint_nondet_rem!(ctx, x8898, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8899, x3, 66), x8900, 66),
            x8898,
            66
        ),
        276359,
        4,
    )?;
    let x8901: BytePoly_1 = bigint_nondet_rem!(ctx, x8862, x4, 1);
    let x8902: BytePoly_32 = bigint_nondet_quot!(ctx, x8862, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8902, x4, 33), x8901, 33),
            x8862,
            33
        ),
        260103,
        4,
    )?;
    let x8903: BytePoly_1 = bigint_sub!(x5, x8901, 1);
    eqz(ctx, &bigint_mul!(x8901, x8903, 2), 8131, 2)?;
    let x8904: BytePoly_32 = bigint_add!(bigint_sub!(x8900, x8886, 32), x3, 32);
    let x8905: BytePoly_32 = bigint_add!(bigint_sub!(x8897, x8884, 32), x3, 32);
    let x8906: BytePoly_32 = bigint_nondet_inv!(ctx, x8905, x3, 32);
    let x8907: BytePoly_64 = bigint_mul!(x8905, x8906, 64);
    let x8908: BytePoly_34 = bigint_nondet_quot!(ctx, x8907, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x8907, bigint_mul!(x8908, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x8909: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x8904, x8906, 64), x3, 32);
    let x8910: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x8909, x8905, 64), x8904, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x8911: BytePoly_34 = bigint_nondet_quot!(ctx, x8910, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x8910, bigint_mul!(x8911, x3, 66), 66),
        276359,
        4,
    )?;
    let x8912: BytePoly_64 = bigint_mul!(x8909, x8909, 64);
    let x8913: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8912, x8884, 64), x3, 64),
            x8897,
            64
        ),
        x3,
        64
    );
    let x8914: BytePoly_34 = bigint_nondet_quot!(ctx, x8913, x3, 34);
    let x8915: BytePoly_32 = bigint_nondet_rem!(ctx, x8913, x3, 32);
    let x8916: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x8909, x8915, 64),
                        bigint_add!(
                            bigint_sub!(x8886, bigint_mul!(x8909, x8884, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x8917: BytePoly_34 = bigint_nondet_quot!(ctx, x8916, x3, 34);
    let x8918: BytePoly_32 = bigint_nondet_rem!(ctx, x8916, x3, 32);
    let x8919: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x8912, bigint_mul!(x8914, x3, 66), 66),
                        x8884,
                        66
                    ),
                    x8897,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x8915,
        66
    );
    eqz(ctx, &x8919, 276359, 4)?;
    let x8920: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x8917, x3, 66), x8918, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x8909, bigint_sub!(x8884, x8915, 32), 64),
                        x8886,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x8920, 276359, 4)?;
    let x8921: BytePoly_33 = bigint_add!(
        bigint_mul!(x8915, x8901, 33),
        bigint_mul!(x8884, x8903, 33),
        33
    );
    let x8922: BytePoly_33 = bigint_add!(
        bigint_mul!(x8918, x8901, 33),
        bigint_mul!(x8886, x8903, 33),
        33
    );
    let x8923: BytePoly_3 = bigint_nondet_quot!(ctx, x8921, x3, 3);
    let x8924: BytePoly_32 = bigint_nondet_rem!(ctx, x8921, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8923, x3, 35), x8924, 35),
            x8921,
            35
        ),
        260103,
        4,
    )?;
    let x8925: BytePoly_3 = bigint_nondet_quot!(ctx, x8922, x3, 3);
    let x8926: BytePoly_32 = bigint_nondet_rem!(ctx, x8922, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8925, x3, 35), x8926, 35),
            x8922,
            35
        ),
        260103,
        4,
    )?;
    let x8927: BytePoly_64 = bigint_mul!(x8897, x8897, 64);
    let x8928: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x8927, x8927, 64), x8927, 64),
        x2,
        64
    );
    let x8929: BytePoly_64 = bigint_add!(x48, x8928, 64);
    let x8930: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x8900, x8900, 32), x3, 32);
    let x8931: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x8928, x8930, 96), x3, 32);
    let x8932: BytePoly_64 = bigint_mul!(x8900, x8931, 64);
    let x8933: BytePoly_64 = bigint_add!(x8932, x8932, 64);
    let x8934: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x8929, x8933, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8934, x3, 66), x8933, 66),
            x8929,
            66
        ),
        276359,
        4,
    )?;
    let x8935: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x8931, x8931, 64), x3, 64), x3, 64),
            x8897,
            64
        ),
        x8897,
        64
    );
    let x8936: BytePoly_34 = bigint_nondet_quot!(ctx, x8935, x3, 34);
    let x8937: BytePoly_32 = bigint_nondet_rem!(ctx, x8935, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8936, x3, 66), x8937, 66),
            x8935,
            66
        ),
        276359,
        4,
    )?;
    let x8938: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x8931, x8937, 64), 64), x3, 64),
            x8900,
            64
        ),
        bigint_mul!(x8931, x8897, 64),
        64
    );
    let x8939: BytePoly_34 = bigint_nondet_quot!(ctx, x8938, x3, 34);
    let x8940: BytePoly_32 = bigint_nondet_rem!(ctx, x8938, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8939, x3, 66), x8940, 66),
            x8938,
            66
        ),
        276359,
        4,
    )?;
    let x8941: BytePoly_1 = bigint_nondet_rem!(ctx, x8902, x4, 1);
    let x8942: BytePoly_32 = bigint_nondet_quot!(ctx, x8902, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8942, x4, 33), x8941, 33),
            x8902,
            33
        ),
        260103,
        4,
    )?;
    let x8943: BytePoly_1 = bigint_sub!(x5, x8941, 1);
    eqz(ctx, &bigint_mul!(x8941, x8943, 2), 8131, 2)?;
    let x8944: BytePoly_32 = bigint_add!(bigint_sub!(x8940, x8926, 32), x3, 32);
    let x8945: BytePoly_32 = bigint_add!(bigint_sub!(x8937, x8924, 32), x3, 32);
    let x8946: BytePoly_32 = bigint_nondet_inv!(ctx, x8945, x3, 32);
    let x8947: BytePoly_64 = bigint_mul!(x8945, x8946, 64);
    let x8948: BytePoly_34 = bigint_nondet_quot!(ctx, x8947, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x8947, bigint_mul!(x8948, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x8949: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x8944, x8946, 64), x3, 32);
    let x8950: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x8949, x8945, 64), x8944, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x8951: BytePoly_34 = bigint_nondet_quot!(ctx, x8950, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x8950, bigint_mul!(x8951, x3, 66), 66),
        276359,
        4,
    )?;
    let x8952: BytePoly_64 = bigint_mul!(x8949, x8949, 64);
    let x8953: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8952, x8924, 64), x3, 64),
            x8937,
            64
        ),
        x3,
        64
    );
    let x8954: BytePoly_34 = bigint_nondet_quot!(ctx, x8953, x3, 34);
    let x8955: BytePoly_32 = bigint_nondet_rem!(ctx, x8953, x3, 32);
    let x8956: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x8949, x8955, 64),
                        bigint_add!(
                            bigint_sub!(x8926, bigint_mul!(x8949, x8924, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x8957: BytePoly_34 = bigint_nondet_quot!(ctx, x8956, x3, 34);
    let x8958: BytePoly_32 = bigint_nondet_rem!(ctx, x8956, x3, 32);
    let x8959: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x8952, bigint_mul!(x8954, x3, 66), 66),
                        x8924,
                        66
                    ),
                    x8937,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x8955,
        66
    );
    eqz(ctx, &x8959, 276359, 4)?;
    let x8960: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x8957, x3, 66), x8958, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x8949, bigint_sub!(x8924, x8955, 32), 64),
                        x8926,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x8960, 276359, 4)?;
    let x8961: BytePoly_33 = bigint_add!(
        bigint_mul!(x8955, x8941, 33),
        bigint_mul!(x8924, x8943, 33),
        33
    );
    let x8962: BytePoly_33 = bigint_add!(
        bigint_mul!(x8958, x8941, 33),
        bigint_mul!(x8926, x8943, 33),
        33
    );
    let x8963: BytePoly_3 = bigint_nondet_quot!(ctx, x8961, x3, 3);
    let x8964: BytePoly_32 = bigint_nondet_rem!(ctx, x8961, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8963, x3, 35), x8964, 35),
            x8961,
            35
        ),
        260103,
        4,
    )?;
    let x8965: BytePoly_3 = bigint_nondet_quot!(ctx, x8962, x3, 3);
    let x8966: BytePoly_32 = bigint_nondet_rem!(ctx, x8962, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8965, x3, 35), x8966, 35),
            x8962,
            35
        ),
        260103,
        4,
    )?;
    let x8967: BytePoly_64 = bigint_mul!(x8937, x8937, 64);
    let x8968: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x8967, x8967, 64), x8967, 64),
        x2,
        64
    );
    let x8969: BytePoly_64 = bigint_add!(x48, x8968, 64);
    let x8970: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x8940, x8940, 32), x3, 32);
    let x8971: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x8968, x8970, 96), x3, 32);
    let x8972: BytePoly_64 = bigint_mul!(x8940, x8971, 64);
    let x8973: BytePoly_64 = bigint_add!(x8972, x8972, 64);
    let x8974: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x8969, x8973, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8974, x3, 66), x8973, 66),
            x8969,
            66
        ),
        276359,
        4,
    )?;
    let x8975: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x8971, x8971, 64), x3, 64), x3, 64),
            x8937,
            64
        ),
        x8937,
        64
    );
    let x8976: BytePoly_34 = bigint_nondet_quot!(ctx, x8975, x3, 34);
    let x8977: BytePoly_32 = bigint_nondet_rem!(ctx, x8975, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8976, x3, 66), x8977, 66),
            x8975,
            66
        ),
        276359,
        4,
    )?;
    let x8978: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x8971, x8977, 64), 64), x3, 64),
            x8940,
            64
        ),
        bigint_mul!(x8971, x8937, 64),
        64
    );
    let x8979: BytePoly_34 = bigint_nondet_quot!(ctx, x8978, x3, 34);
    let x8980: BytePoly_32 = bigint_nondet_rem!(ctx, x8978, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8979, x3, 66), x8980, 66),
            x8978,
            66
        ),
        276359,
        4,
    )?;
    let x8981: BytePoly_1 = bigint_nondet_rem!(ctx, x8942, x4, 1);
    let x8982: BytePoly_32 = bigint_nondet_quot!(ctx, x8942, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x8982, x4, 33), x8981, 33),
            x8942,
            33
        ),
        260103,
        4,
    )?;
    let x8983: BytePoly_1 = bigint_sub!(x5, x8981, 1);
    eqz(ctx, &bigint_mul!(x8981, x8983, 2), 8131, 2)?;
    let x8984: BytePoly_32 = bigint_add!(bigint_sub!(x8980, x8966, 32), x3, 32);
    let x8985: BytePoly_32 = bigint_add!(bigint_sub!(x8977, x8964, 32), x3, 32);
    let x8986: BytePoly_32 = bigint_nondet_inv!(ctx, x8985, x3, 32);
    let x8987: BytePoly_64 = bigint_mul!(x8985, x8986, 64);
    let x8988: BytePoly_34 = bigint_nondet_quot!(ctx, x8987, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x8987, bigint_mul!(x8988, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x8989: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x8984, x8986, 64), x3, 32);
    let x8990: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x8989, x8985, 64), x8984, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x8991: BytePoly_34 = bigint_nondet_quot!(ctx, x8990, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x8990, bigint_mul!(x8991, x3, 66), 66),
        276359,
        4,
    )?;
    let x8992: BytePoly_64 = bigint_mul!(x8989, x8989, 64);
    let x8993: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8992, x8964, 64), x3, 64),
            x8977,
            64
        ),
        x3,
        64
    );
    let x8994: BytePoly_34 = bigint_nondet_quot!(ctx, x8993, x3, 34);
    let x8995: BytePoly_32 = bigint_nondet_rem!(ctx, x8993, x3, 32);
    let x8996: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x8989, x8995, 64),
                        bigint_add!(
                            bigint_sub!(x8966, bigint_mul!(x8989, x8964, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x8997: BytePoly_34 = bigint_nondet_quot!(ctx, x8996, x3, 34);
    let x8998: BytePoly_32 = bigint_nondet_rem!(ctx, x8996, x3, 32);
    let x8999: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x8992, bigint_mul!(x8994, x3, 66), 66),
                        x8964,
                        66
                    ),
                    x8977,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x8995,
        66
    );
    eqz(ctx, &x8999, 276359, 4)?;
    let x9000: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x8997, x3, 66), x8998, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x8989, bigint_sub!(x8964, x8995, 32), 64),
                        x8966,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x9000, 276359, 4)?;
    let x9001: BytePoly_33 = bigint_add!(
        bigint_mul!(x8995, x8981, 33),
        bigint_mul!(x8964, x8983, 33),
        33
    );
    let x9002: BytePoly_33 = bigint_add!(
        bigint_mul!(x8998, x8981, 33),
        bigint_mul!(x8966, x8983, 33),
        33
    );
    let x9003: BytePoly_3 = bigint_nondet_quot!(ctx, x9001, x3, 3);
    let x9004: BytePoly_32 = bigint_nondet_rem!(ctx, x9001, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9003, x3, 35), x9004, 35),
            x9001,
            35
        ),
        260103,
        4,
    )?;
    let x9005: BytePoly_3 = bigint_nondet_quot!(ctx, x9002, x3, 3);
    let x9006: BytePoly_32 = bigint_nondet_rem!(ctx, x9002, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9005, x3, 35), x9006, 35),
            x9002,
            35
        ),
        260103,
        4,
    )?;
    let x9007: BytePoly_64 = bigint_mul!(x8977, x8977, 64);
    let x9008: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x9007, x9007, 64), x9007, 64),
        x2,
        64
    );
    let x9009: BytePoly_64 = bigint_add!(x48, x9008, 64);
    let x9010: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x8980, x8980, 32), x3, 32);
    let x9011: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x9008, x9010, 96), x3, 32);
    let x9012: BytePoly_64 = bigint_mul!(x8980, x9011, 64);
    let x9013: BytePoly_64 = bigint_add!(x9012, x9012, 64);
    let x9014: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9009, x9013, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9014, x3, 66), x9013, 66),
            x9009,
            66
        ),
        276359,
        4,
    )?;
    let x9015: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x9011, x9011, 64), x3, 64), x3, 64),
            x8977,
            64
        ),
        x8977,
        64
    );
    let x9016: BytePoly_34 = bigint_nondet_quot!(ctx, x9015, x3, 34);
    let x9017: BytePoly_32 = bigint_nondet_rem!(ctx, x9015, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9016, x3, 66), x9017, 66),
            x9015,
            66
        ),
        276359,
        4,
    )?;
    let x9018: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x9011, x9017, 64), 64), x3, 64),
            x8980,
            64
        ),
        bigint_mul!(x9011, x8977, 64),
        64
    );
    let x9019: BytePoly_34 = bigint_nondet_quot!(ctx, x9018, x3, 34);
    let x9020: BytePoly_32 = bigint_nondet_rem!(ctx, x9018, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9019, x3, 66), x9020, 66),
            x9018,
            66
        ),
        276359,
        4,
    )?;
    let x9021: BytePoly_1 = bigint_nondet_rem!(ctx, x8982, x4, 1);
    let x9022: BytePoly_32 = bigint_nondet_quot!(ctx, x8982, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9022, x4, 33), x9021, 33),
            x8982,
            33
        ),
        260103,
        4,
    )?;
    let x9023: BytePoly_1 = bigint_sub!(x5, x9021, 1);
    eqz(ctx, &bigint_mul!(x9021, x9023, 2), 8131, 2)?;
    let x9024: BytePoly_32 = bigint_add!(bigint_sub!(x9020, x9006, 32), x3, 32);
    let x9025: BytePoly_32 = bigint_add!(bigint_sub!(x9017, x9004, 32), x3, 32);
    let x9026: BytePoly_32 = bigint_nondet_inv!(ctx, x9025, x3, 32);
    let x9027: BytePoly_64 = bigint_mul!(x9025, x9026, 64);
    let x9028: BytePoly_34 = bigint_nondet_quot!(ctx, x9027, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x9027, bigint_mul!(x9028, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x9029: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x9024, x9026, 64), x3, 32);
    let x9030: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x9029, x9025, 64), x9024, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x9031: BytePoly_34 = bigint_nondet_quot!(ctx, x9030, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x9030, bigint_mul!(x9031, x3, 66), 66),
        276359,
        4,
    )?;
    let x9032: BytePoly_64 = bigint_mul!(x9029, x9029, 64);
    let x9033: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x9032, x9004, 64), x3, 64),
            x9017,
            64
        ),
        x3,
        64
    );
    let x9034: BytePoly_34 = bigint_nondet_quot!(ctx, x9033, x3, 34);
    let x9035: BytePoly_32 = bigint_nondet_rem!(ctx, x9033, x3, 32);
    let x9036: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x9029, x9035, 64),
                        bigint_add!(
                            bigint_sub!(x9006, bigint_mul!(x9029, x9004, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x9037: BytePoly_34 = bigint_nondet_quot!(ctx, x9036, x3, 34);
    let x9038: BytePoly_32 = bigint_nondet_rem!(ctx, x9036, x3, 32);
    let x9039: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x9032, bigint_mul!(x9034, x3, 66), 66),
                        x9004,
                        66
                    ),
                    x9017,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x9035,
        66
    );
    eqz(ctx, &x9039, 276359, 4)?;
    let x9040: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x9037, x3, 66), x9038, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x9029, bigint_sub!(x9004, x9035, 32), 64),
                        x9006,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x9040, 276359, 4)?;
    let x9041: BytePoly_33 = bigint_add!(
        bigint_mul!(x9035, x9021, 33),
        bigint_mul!(x9004, x9023, 33),
        33
    );
    let x9042: BytePoly_33 = bigint_add!(
        bigint_mul!(x9038, x9021, 33),
        bigint_mul!(x9006, x9023, 33),
        33
    );
    let x9043: BytePoly_3 = bigint_nondet_quot!(ctx, x9041, x3, 3);
    let x9044: BytePoly_32 = bigint_nondet_rem!(ctx, x9041, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9043, x3, 35), x9044, 35),
            x9041,
            35
        ),
        260103,
        4,
    )?;
    let x9045: BytePoly_3 = bigint_nondet_quot!(ctx, x9042, x3, 3);
    let x9046: BytePoly_32 = bigint_nondet_rem!(ctx, x9042, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9045, x3, 35), x9046, 35),
            x9042,
            35
        ),
        260103,
        4,
    )?;
    let x9047: BytePoly_64 = bigint_mul!(x9017, x9017, 64);
    let x9048: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x9047, x9047, 64), x9047, 64),
        x2,
        64
    );
    let x9049: BytePoly_64 = bigint_add!(x48, x9048, 64);
    let x9050: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x9020, x9020, 32), x3, 32);
    let x9051: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x9048, x9050, 96), x3, 32);
    let x9052: BytePoly_64 = bigint_mul!(x9020, x9051, 64);
    let x9053: BytePoly_64 = bigint_add!(x9052, x9052, 64);
    let x9054: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9049, x9053, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9054, x3, 66), x9053, 66),
            x9049,
            66
        ),
        276359,
        4,
    )?;
    let x9055: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x9051, x9051, 64), x3, 64), x3, 64),
            x9017,
            64
        ),
        x9017,
        64
    );
    let x9056: BytePoly_34 = bigint_nondet_quot!(ctx, x9055, x3, 34);
    let x9057: BytePoly_32 = bigint_nondet_rem!(ctx, x9055, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9056, x3, 66), x9057, 66),
            x9055,
            66
        ),
        276359,
        4,
    )?;
    let x9058: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x9051, x9057, 64), 64), x3, 64),
            x9020,
            64
        ),
        bigint_mul!(x9051, x9017, 64),
        64
    );
    let x9059: BytePoly_34 = bigint_nondet_quot!(ctx, x9058, x3, 34);
    let x9060: BytePoly_32 = bigint_nondet_rem!(ctx, x9058, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9059, x3, 66), x9060, 66),
            x9058,
            66
        ),
        276359,
        4,
    )?;
    let x9061: BytePoly_1 = bigint_nondet_rem!(ctx, x9022, x4, 1);
    let x9062: BytePoly_32 = bigint_nondet_quot!(ctx, x9022, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9062, x4, 33), x9061, 33),
            x9022,
            33
        ),
        260103,
        4,
    )?;
    let x9063: BytePoly_1 = bigint_sub!(x5, x9061, 1);
    eqz(ctx, &bigint_mul!(x9061, x9063, 2), 8131, 2)?;
    let x9064: BytePoly_32 = bigint_add!(bigint_sub!(x9060, x9046, 32), x3, 32);
    let x9065: BytePoly_32 = bigint_add!(bigint_sub!(x9057, x9044, 32), x3, 32);
    let x9066: BytePoly_32 = bigint_nondet_inv!(ctx, x9065, x3, 32);
    let x9067: BytePoly_64 = bigint_mul!(x9065, x9066, 64);
    let x9068: BytePoly_34 = bigint_nondet_quot!(ctx, x9067, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x9067, bigint_mul!(x9068, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x9069: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x9064, x9066, 64), x3, 32);
    let x9070: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x9069, x9065, 64), x9064, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x9071: BytePoly_34 = bigint_nondet_quot!(ctx, x9070, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x9070, bigint_mul!(x9071, x3, 66), 66),
        276359,
        4,
    )?;
    let x9072: BytePoly_64 = bigint_mul!(x9069, x9069, 64);
    let x9073: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x9072, x9044, 64), x3, 64),
            x9057,
            64
        ),
        x3,
        64
    );
    let x9074: BytePoly_34 = bigint_nondet_quot!(ctx, x9073, x3, 34);
    let x9075: BytePoly_32 = bigint_nondet_rem!(ctx, x9073, x3, 32);
    let x9076: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x9069, x9075, 64),
                        bigint_add!(
                            bigint_sub!(x9046, bigint_mul!(x9069, x9044, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x9077: BytePoly_34 = bigint_nondet_quot!(ctx, x9076, x3, 34);
    let x9078: BytePoly_32 = bigint_nondet_rem!(ctx, x9076, x3, 32);
    let x9079: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x9072, bigint_mul!(x9074, x3, 66), 66),
                        x9044,
                        66
                    ),
                    x9057,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x9075,
        66
    );
    eqz(ctx, &x9079, 276359, 4)?;
    let x9080: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x9077, x3, 66), x9078, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x9069, bigint_sub!(x9044, x9075, 32), 64),
                        x9046,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x9080, 276359, 4)?;
    let x9081: BytePoly_33 = bigint_add!(
        bigint_mul!(x9075, x9061, 33),
        bigint_mul!(x9044, x9063, 33),
        33
    );
    let x9082: BytePoly_33 = bigint_add!(
        bigint_mul!(x9078, x9061, 33),
        bigint_mul!(x9046, x9063, 33),
        33
    );
    let x9083: BytePoly_3 = bigint_nondet_quot!(ctx, x9081, x3, 3);
    let x9084: BytePoly_32 = bigint_nondet_rem!(ctx, x9081, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9083, x3, 35), x9084, 35),
            x9081,
            35
        ),
        260103,
        4,
    )?;
    let x9085: BytePoly_3 = bigint_nondet_quot!(ctx, x9082, x3, 3);
    let x9086: BytePoly_32 = bigint_nondet_rem!(ctx, x9082, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9085, x3, 35), x9086, 35),
            x9082,
            35
        ),
        260103,
        4,
    )?;
    let x9087: BytePoly_64 = bigint_mul!(x9057, x9057, 64);
    let x9088: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x9087, x9087, 64), x9087, 64),
        x2,
        64
    );
    let x9089: BytePoly_64 = bigint_add!(x48, x9088, 64);
    let x9090: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x9060, x9060, 32), x3, 32);
    let x9091: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x9088, x9090, 96), x3, 32);
    let x9092: BytePoly_64 = bigint_mul!(x9060, x9091, 64);
    let x9093: BytePoly_64 = bigint_add!(x9092, x9092, 64);
    let x9094: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9089, x9093, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9094, x3, 66), x9093, 66),
            x9089,
            66
        ),
        276359,
        4,
    )?;
    let x9095: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x9091, x9091, 64), x3, 64), x3, 64),
            x9057,
            64
        ),
        x9057,
        64
    );
    let x9096: BytePoly_34 = bigint_nondet_quot!(ctx, x9095, x3, 34);
    let x9097: BytePoly_32 = bigint_nondet_rem!(ctx, x9095, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9096, x3, 66), x9097, 66),
            x9095,
            66
        ),
        276359,
        4,
    )?;
    let x9098: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x9091, x9097, 64), 64), x3, 64),
            x9060,
            64
        ),
        bigint_mul!(x9091, x9057, 64),
        64
    );
    let x9099: BytePoly_34 = bigint_nondet_quot!(ctx, x9098, x3, 34);
    let x9100: BytePoly_32 = bigint_nondet_rem!(ctx, x9098, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9099, x3, 66), x9100, 66),
            x9098,
            66
        ),
        276359,
        4,
    )?;
    let x9101: BytePoly_1 = bigint_nondet_rem!(ctx, x9062, x4, 1);
    let x9102: BytePoly_32 = bigint_nondet_quot!(ctx, x9062, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9102, x4, 33), x9101, 33),
            x9062,
            33
        ),
        260103,
        4,
    )?;
    let x9103: BytePoly_1 = bigint_sub!(x5, x9101, 1);
    eqz(ctx, &bigint_mul!(x9101, x9103, 2), 8131, 2)?;
    let x9104: BytePoly_32 = bigint_add!(bigint_sub!(x9100, x9086, 32), x3, 32);
    let x9105: BytePoly_32 = bigint_add!(bigint_sub!(x9097, x9084, 32), x3, 32);
    let x9106: BytePoly_32 = bigint_nondet_inv!(ctx, x9105, x3, 32);
    let x9107: BytePoly_64 = bigint_mul!(x9105, x9106, 64);
    let x9108: BytePoly_34 = bigint_nondet_quot!(ctx, x9107, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x9107, bigint_mul!(x9108, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x9109: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x9104, x9106, 64), x3, 32);
    let x9110: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x9109, x9105, 64), x9104, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x9111: BytePoly_34 = bigint_nondet_quot!(ctx, x9110, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x9110, bigint_mul!(x9111, x3, 66), 66),
        276359,
        4,
    )?;
    let x9112: BytePoly_64 = bigint_mul!(x9109, x9109, 64);
    let x9113: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x9112, x9084, 64), x3, 64),
            x9097,
            64
        ),
        x3,
        64
    );
    let x9114: BytePoly_34 = bigint_nondet_quot!(ctx, x9113, x3, 34);
    let x9115: BytePoly_32 = bigint_nondet_rem!(ctx, x9113, x3, 32);
    let x9116: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x9109, x9115, 64),
                        bigint_add!(
                            bigint_sub!(x9086, bigint_mul!(x9109, x9084, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x9117: BytePoly_34 = bigint_nondet_quot!(ctx, x9116, x3, 34);
    let x9118: BytePoly_32 = bigint_nondet_rem!(ctx, x9116, x3, 32);
    let x9119: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x9112, bigint_mul!(x9114, x3, 66), 66),
                        x9084,
                        66
                    ),
                    x9097,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x9115,
        66
    );
    eqz(ctx, &x9119, 276359, 4)?;
    let x9120: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x9117, x3, 66), x9118, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x9109, bigint_sub!(x9084, x9115, 32), 64),
                        x9086,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x9120, 276359, 4)?;
    let x9121: BytePoly_33 = bigint_add!(
        bigint_mul!(x9115, x9101, 33),
        bigint_mul!(x9084, x9103, 33),
        33
    );
    let x9122: BytePoly_33 = bigint_add!(
        bigint_mul!(x9118, x9101, 33),
        bigint_mul!(x9086, x9103, 33),
        33
    );
    let x9123: BytePoly_3 = bigint_nondet_quot!(ctx, x9121, x3, 3);
    let x9124: BytePoly_32 = bigint_nondet_rem!(ctx, x9121, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9123, x3, 35), x9124, 35),
            x9121,
            35
        ),
        260103,
        4,
    )?;
    let x9125: BytePoly_3 = bigint_nondet_quot!(ctx, x9122, x3, 3);
    let x9126: BytePoly_32 = bigint_nondet_rem!(ctx, x9122, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9125, x3, 35), x9126, 35),
            x9122,
            35
        ),
        260103,
        4,
    )?;
    let x9127: BytePoly_64 = bigint_mul!(x9097, x9097, 64);
    let x9128: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x9127, x9127, 64), x9127, 64),
        x2,
        64
    );
    let x9129: BytePoly_64 = bigint_add!(x48, x9128, 64);
    let x9130: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x9100, x9100, 32), x3, 32);
    let x9131: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x9128, x9130, 96), x3, 32);
    let x9132: BytePoly_64 = bigint_mul!(x9100, x9131, 64);
    let x9133: BytePoly_64 = bigint_add!(x9132, x9132, 64);
    let x9134: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9129, x9133, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9134, x3, 66), x9133, 66),
            x9129,
            66
        ),
        276359,
        4,
    )?;
    let x9135: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x9131, x9131, 64), x3, 64), x3, 64),
            x9097,
            64
        ),
        x9097,
        64
    );
    let x9136: BytePoly_34 = bigint_nondet_quot!(ctx, x9135, x3, 34);
    let x9137: BytePoly_32 = bigint_nondet_rem!(ctx, x9135, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9136, x3, 66), x9137, 66),
            x9135,
            66
        ),
        276359,
        4,
    )?;
    let x9138: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x9131, x9137, 64), 64), x3, 64),
            x9100,
            64
        ),
        bigint_mul!(x9131, x9097, 64),
        64
    );
    let x9139: BytePoly_34 = bigint_nondet_quot!(ctx, x9138, x3, 34);
    let x9140: BytePoly_32 = bigint_nondet_rem!(ctx, x9138, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9139, x3, 66), x9140, 66),
            x9138,
            66
        ),
        276359,
        4,
    )?;
    let x9141: BytePoly_1 = bigint_nondet_rem!(ctx, x9102, x4, 1);
    let x9142: BytePoly_32 = bigint_nondet_quot!(ctx, x9102, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9142, x4, 33), x9141, 33),
            x9102,
            33
        ),
        260103,
        4,
    )?;
    let x9143: BytePoly_1 = bigint_sub!(x5, x9141, 1);
    eqz(ctx, &bigint_mul!(x9141, x9143, 2), 8131, 2)?;
    let x9144: BytePoly_32 = bigint_add!(bigint_sub!(x9140, x9126, 32), x3, 32);
    let x9145: BytePoly_32 = bigint_add!(bigint_sub!(x9137, x9124, 32), x3, 32);
    let x9146: BytePoly_32 = bigint_nondet_inv!(ctx, x9145, x3, 32);
    let x9147: BytePoly_64 = bigint_mul!(x9145, x9146, 64);
    let x9148: BytePoly_34 = bigint_nondet_quot!(ctx, x9147, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x9147, bigint_mul!(x9148, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x9149: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x9144, x9146, 64), x3, 32);
    let x9150: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x9149, x9145, 64), x9144, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x9151: BytePoly_34 = bigint_nondet_quot!(ctx, x9150, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x9150, bigint_mul!(x9151, x3, 66), 66),
        276359,
        4,
    )?;
    let x9152: BytePoly_64 = bigint_mul!(x9149, x9149, 64);
    let x9153: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x9152, x9124, 64), x3, 64),
            x9137,
            64
        ),
        x3,
        64
    );
    let x9154: BytePoly_34 = bigint_nondet_quot!(ctx, x9153, x3, 34);
    let x9155: BytePoly_32 = bigint_nondet_rem!(ctx, x9153, x3, 32);
    let x9156: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x9149, x9155, 64),
                        bigint_add!(
                            bigint_sub!(x9126, bigint_mul!(x9149, x9124, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x9157: BytePoly_34 = bigint_nondet_quot!(ctx, x9156, x3, 34);
    let x9158: BytePoly_32 = bigint_nondet_rem!(ctx, x9156, x3, 32);
    let x9159: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x9152, bigint_mul!(x9154, x3, 66), 66),
                        x9124,
                        66
                    ),
                    x9137,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x9155,
        66
    );
    eqz(ctx, &x9159, 276359, 4)?;
    let x9160: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x9157, x3, 66), x9158, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x9149, bigint_sub!(x9124, x9155, 32), 64),
                        x9126,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x9160, 276359, 4)?;
    let x9161: BytePoly_33 = bigint_add!(
        bigint_mul!(x9155, x9141, 33),
        bigint_mul!(x9124, x9143, 33),
        33
    );
    let x9162: BytePoly_33 = bigint_add!(
        bigint_mul!(x9158, x9141, 33),
        bigint_mul!(x9126, x9143, 33),
        33
    );
    let x9163: BytePoly_3 = bigint_nondet_quot!(ctx, x9161, x3, 3);
    let x9164: BytePoly_32 = bigint_nondet_rem!(ctx, x9161, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9163, x3, 35), x9164, 35),
            x9161,
            35
        ),
        260103,
        4,
    )?;
    let x9165: BytePoly_3 = bigint_nondet_quot!(ctx, x9162, x3, 3);
    let x9166: BytePoly_32 = bigint_nondet_rem!(ctx, x9162, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9165, x3, 35), x9166, 35),
            x9162,
            35
        ),
        260103,
        4,
    )?;
    let x9167: BytePoly_64 = bigint_mul!(x9137, x9137, 64);
    let x9168: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x9167, x9167, 64), x9167, 64),
        x2,
        64
    );
    let x9169: BytePoly_64 = bigint_add!(x48, x9168, 64);
    let x9170: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x9140, x9140, 32), x3, 32);
    let x9171: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x9168, x9170, 96), x3, 32);
    let x9172: BytePoly_64 = bigint_mul!(x9140, x9171, 64);
    let x9173: BytePoly_64 = bigint_add!(x9172, x9172, 64);
    let x9174: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9169, x9173, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9174, x3, 66), x9173, 66),
            x9169,
            66
        ),
        276359,
        4,
    )?;
    let x9175: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x9171, x9171, 64), x3, 64), x3, 64),
            x9137,
            64
        ),
        x9137,
        64
    );
    let x9176: BytePoly_34 = bigint_nondet_quot!(ctx, x9175, x3, 34);
    let x9177: BytePoly_32 = bigint_nondet_rem!(ctx, x9175, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9176, x3, 66), x9177, 66),
            x9175,
            66
        ),
        276359,
        4,
    )?;
    let x9178: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x9171, x9177, 64), 64), x3, 64),
            x9140,
            64
        ),
        bigint_mul!(x9171, x9137, 64),
        64
    );
    let x9179: BytePoly_34 = bigint_nondet_quot!(ctx, x9178, x3, 34);
    let x9180: BytePoly_32 = bigint_nondet_rem!(ctx, x9178, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9179, x3, 66), x9180, 66),
            x9178,
            66
        ),
        276359,
        4,
    )?;
    let x9181: BytePoly_1 = bigint_nondet_rem!(ctx, x9142, x4, 1);
    let x9182: BytePoly_32 = bigint_nondet_quot!(ctx, x9142, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9182, x4, 33), x9181, 33),
            x9142,
            33
        ),
        260103,
        4,
    )?;
    let x9183: BytePoly_1 = bigint_sub!(x5, x9181, 1);
    eqz(ctx, &bigint_mul!(x9181, x9183, 2), 8131, 2)?;
    let x9184: BytePoly_32 = bigint_add!(bigint_sub!(x9180, x9166, 32), x3, 32);
    let x9185: BytePoly_32 = bigint_add!(bigint_sub!(x9177, x9164, 32), x3, 32);
    let x9186: BytePoly_32 = bigint_nondet_inv!(ctx, x9185, x3, 32);
    let x9187: BytePoly_64 = bigint_mul!(x9185, x9186, 64);
    let x9188: BytePoly_34 = bigint_nondet_quot!(ctx, x9187, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x9187, bigint_mul!(x9188, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x9189: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x9184, x9186, 64), x3, 32);
    let x9190: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x9189, x9185, 64), x9184, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x9191: BytePoly_34 = bigint_nondet_quot!(ctx, x9190, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x9190, bigint_mul!(x9191, x3, 66), 66),
        276359,
        4,
    )?;
    let x9192: BytePoly_64 = bigint_mul!(x9189, x9189, 64);
    let x9193: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x9192, x9164, 64), x3, 64),
            x9177,
            64
        ),
        x3,
        64
    );
    let x9194: BytePoly_34 = bigint_nondet_quot!(ctx, x9193, x3, 34);
    let x9195: BytePoly_32 = bigint_nondet_rem!(ctx, x9193, x3, 32);
    let x9196: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x9189, x9195, 64),
                        bigint_add!(
                            bigint_sub!(x9166, bigint_mul!(x9189, x9164, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x9197: BytePoly_34 = bigint_nondet_quot!(ctx, x9196, x3, 34);
    let x9198: BytePoly_32 = bigint_nondet_rem!(ctx, x9196, x3, 32);
    let x9199: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x9192, bigint_mul!(x9194, x3, 66), 66),
                        x9164,
                        66
                    ),
                    x9177,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x9195,
        66
    );
    eqz(ctx, &x9199, 276359, 4)?;
    let x9200: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x9197, x3, 66), x9198, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x9189, bigint_sub!(x9164, x9195, 32), 64),
                        x9166,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x9200, 276359, 4)?;
    let x9201: BytePoly_33 = bigint_add!(
        bigint_mul!(x9195, x9181, 33),
        bigint_mul!(x9164, x9183, 33),
        33
    );
    let x9202: BytePoly_33 = bigint_add!(
        bigint_mul!(x9198, x9181, 33),
        bigint_mul!(x9166, x9183, 33),
        33
    );
    let x9203: BytePoly_3 = bigint_nondet_quot!(ctx, x9201, x3, 3);
    let x9204: BytePoly_32 = bigint_nondet_rem!(ctx, x9201, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9203, x3, 35), x9204, 35),
            x9201,
            35
        ),
        260103,
        4,
    )?;
    let x9205: BytePoly_3 = bigint_nondet_quot!(ctx, x9202, x3, 3);
    let x9206: BytePoly_32 = bigint_nondet_rem!(ctx, x9202, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9205, x3, 35), x9206, 35),
            x9202,
            35
        ),
        260103,
        4,
    )?;
    let x9207: BytePoly_64 = bigint_mul!(x9177, x9177, 64);
    let x9208: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x9207, x9207, 64), x9207, 64),
        x2,
        64
    );
    let x9209: BytePoly_64 = bigint_add!(x48, x9208, 64);
    let x9210: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x9180, x9180, 32), x3, 32);
    let x9211: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x9208, x9210, 96), x3, 32);
    let x9212: BytePoly_64 = bigint_mul!(x9180, x9211, 64);
    let x9213: BytePoly_64 = bigint_add!(x9212, x9212, 64);
    let x9214: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9209, x9213, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9214, x3, 66), x9213, 66),
            x9209,
            66
        ),
        276359,
        4,
    )?;
    let x9215: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x9211, x9211, 64), x3, 64), x3, 64),
            x9177,
            64
        ),
        x9177,
        64
    );
    let x9216: BytePoly_34 = bigint_nondet_quot!(ctx, x9215, x3, 34);
    let x9217: BytePoly_32 = bigint_nondet_rem!(ctx, x9215, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9216, x3, 66), x9217, 66),
            x9215,
            66
        ),
        276359,
        4,
    )?;
    let x9218: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x9211, x9217, 64), 64), x3, 64),
            x9180,
            64
        ),
        bigint_mul!(x9211, x9177, 64),
        64
    );
    let x9219: BytePoly_34 = bigint_nondet_quot!(ctx, x9218, x3, 34);
    let x9220: BytePoly_32 = bigint_nondet_rem!(ctx, x9218, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9219, x3, 66), x9220, 66),
            x9218,
            66
        ),
        276359,
        4,
    )?;
    let x9221: BytePoly_1 = bigint_nondet_rem!(ctx, x9182, x4, 1);
    let x9222: BytePoly_32 = bigint_nondet_quot!(ctx, x9182, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9222, x4, 33), x9221, 33),
            x9182,
            33
        ),
        260103,
        4,
    )?;
    let x9223: BytePoly_1 = bigint_sub!(x5, x9221, 1);
    eqz(ctx, &bigint_mul!(x9221, x9223, 2), 8131, 2)?;
    let x9224: BytePoly_32 = bigint_add!(bigint_sub!(x9220, x9206, 32), x3, 32);
    let x9225: BytePoly_32 = bigint_add!(bigint_sub!(x9217, x9204, 32), x3, 32);
    let x9226: BytePoly_32 = bigint_nondet_inv!(ctx, x9225, x3, 32);
    let x9227: BytePoly_64 = bigint_mul!(x9225, x9226, 64);
    let x9228: BytePoly_34 = bigint_nondet_quot!(ctx, x9227, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x9227, bigint_mul!(x9228, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x9229: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x9224, x9226, 64), x3, 32);
    let x9230: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x9229, x9225, 64), x9224, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x9231: BytePoly_34 = bigint_nondet_quot!(ctx, x9230, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x9230, bigint_mul!(x9231, x3, 66), 66),
        276359,
        4,
    )?;
    let x9232: BytePoly_64 = bigint_mul!(x9229, x9229, 64);
    let x9233: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x9232, x9204, 64), x3, 64),
            x9217,
            64
        ),
        x3,
        64
    );
    let x9234: BytePoly_34 = bigint_nondet_quot!(ctx, x9233, x3, 34);
    let x9235: BytePoly_32 = bigint_nondet_rem!(ctx, x9233, x3, 32);
    let x9236: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x9229, x9235, 64),
                        bigint_add!(
                            bigint_sub!(x9206, bigint_mul!(x9229, x9204, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x9237: BytePoly_34 = bigint_nondet_quot!(ctx, x9236, x3, 34);
    let x9238: BytePoly_32 = bigint_nondet_rem!(ctx, x9236, x3, 32);
    let x9239: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x9232, bigint_mul!(x9234, x3, 66), 66),
                        x9204,
                        66
                    ),
                    x9217,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x9235,
        66
    );
    eqz(ctx, &x9239, 276359, 4)?;
    let x9240: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x9237, x3, 66), x9238, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x9229, bigint_sub!(x9204, x9235, 32), 64),
                        x9206,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x9240, 276359, 4)?;
    let x9241: BytePoly_33 = bigint_add!(
        bigint_mul!(x9235, x9221, 33),
        bigint_mul!(x9204, x9223, 33),
        33
    );
    let x9242: BytePoly_33 = bigint_add!(
        bigint_mul!(x9238, x9221, 33),
        bigint_mul!(x9206, x9223, 33),
        33
    );
    let x9243: BytePoly_3 = bigint_nondet_quot!(ctx, x9241, x3, 3);
    let x9244: BytePoly_32 = bigint_nondet_rem!(ctx, x9241, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9243, x3, 35), x9244, 35),
            x9241,
            35
        ),
        260103,
        4,
    )?;
    let x9245: BytePoly_3 = bigint_nondet_quot!(ctx, x9242, x3, 3);
    let x9246: BytePoly_32 = bigint_nondet_rem!(ctx, x9242, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9245, x3, 35), x9246, 35),
            x9242,
            35
        ),
        260103,
        4,
    )?;
    let x9247: BytePoly_64 = bigint_mul!(x9217, x9217, 64);
    let x9248: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x9247, x9247, 64), x9247, 64),
        x2,
        64
    );
    let x9249: BytePoly_64 = bigint_add!(x48, x9248, 64);
    let x9250: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x9220, x9220, 32), x3, 32);
    let x9251: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x9248, x9250, 96), x3, 32);
    let x9252: BytePoly_64 = bigint_mul!(x9220, x9251, 64);
    let x9253: BytePoly_64 = bigint_add!(x9252, x9252, 64);
    let x9254: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9249, x9253, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9254, x3, 66), x9253, 66),
            x9249,
            66
        ),
        276359,
        4,
    )?;
    let x9255: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x9251, x9251, 64), x3, 64), x3, 64),
            x9217,
            64
        ),
        x9217,
        64
    );
    let x9256: BytePoly_34 = bigint_nondet_quot!(ctx, x9255, x3, 34);
    let x9257: BytePoly_32 = bigint_nondet_rem!(ctx, x9255, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9256, x3, 66), x9257, 66),
            x9255,
            66
        ),
        276359,
        4,
    )?;
    let x9258: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x9251, x9257, 64), 64), x3, 64),
            x9220,
            64
        ),
        bigint_mul!(x9251, x9217, 64),
        64
    );
    let x9259: BytePoly_34 = bigint_nondet_quot!(ctx, x9258, x3, 34);
    let x9260: BytePoly_32 = bigint_nondet_rem!(ctx, x9258, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9259, x3, 66), x9260, 66),
            x9258,
            66
        ),
        276359,
        4,
    )?;
    let x9261: BytePoly_1 = bigint_nondet_rem!(ctx, x9222, x4, 1);
    let x9262: BytePoly_32 = bigint_nondet_quot!(ctx, x9222, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9262, x4, 33), x9261, 33),
            x9222,
            33
        ),
        260103,
        4,
    )?;
    let x9263: BytePoly_1 = bigint_sub!(x5, x9261, 1);
    eqz(ctx, &bigint_mul!(x9261, x9263, 2), 8131, 2)?;
    let x9264: BytePoly_32 = bigint_add!(bigint_sub!(x9260, x9246, 32), x3, 32);
    let x9265: BytePoly_32 = bigint_add!(bigint_sub!(x9257, x9244, 32), x3, 32);
    let x9266: BytePoly_32 = bigint_nondet_inv!(ctx, x9265, x3, 32);
    let x9267: BytePoly_64 = bigint_mul!(x9265, x9266, 64);
    let x9268: BytePoly_34 = bigint_nondet_quot!(ctx, x9267, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x9267, bigint_mul!(x9268, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x9269: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x9264, x9266, 64), x3, 32);
    let x9270: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x9269, x9265, 64), x9264, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x9271: BytePoly_34 = bigint_nondet_quot!(ctx, x9270, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x9270, bigint_mul!(x9271, x3, 66), 66),
        276359,
        4,
    )?;
    let x9272: BytePoly_64 = bigint_mul!(x9269, x9269, 64);
    let x9273: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x9272, x9244, 64), x3, 64),
            x9257,
            64
        ),
        x3,
        64
    );
    let x9274: BytePoly_34 = bigint_nondet_quot!(ctx, x9273, x3, 34);
    let x9275: BytePoly_32 = bigint_nondet_rem!(ctx, x9273, x3, 32);
    let x9276: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x9269, x9275, 64),
                        bigint_add!(
                            bigint_sub!(x9246, bigint_mul!(x9269, x9244, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x9277: BytePoly_34 = bigint_nondet_quot!(ctx, x9276, x3, 34);
    let x9278: BytePoly_32 = bigint_nondet_rem!(ctx, x9276, x3, 32);
    let x9279: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x9272, bigint_mul!(x9274, x3, 66), 66),
                        x9244,
                        66
                    ),
                    x9257,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x9275,
        66
    );
    eqz(ctx, &x9279, 276359, 4)?;
    let x9280: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x9277, x3, 66), x9278, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x9269, bigint_sub!(x9244, x9275, 32), 64),
                        x9246,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x9280, 276359, 4)?;
    let x9281: BytePoly_33 = bigint_add!(
        bigint_mul!(x9275, x9261, 33),
        bigint_mul!(x9244, x9263, 33),
        33
    );
    let x9282: BytePoly_33 = bigint_add!(
        bigint_mul!(x9278, x9261, 33),
        bigint_mul!(x9246, x9263, 33),
        33
    );
    let x9283: BytePoly_3 = bigint_nondet_quot!(ctx, x9281, x3, 3);
    let x9284: BytePoly_32 = bigint_nondet_rem!(ctx, x9281, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9283, x3, 35), x9284, 35),
            x9281,
            35
        ),
        260103,
        4,
    )?;
    let x9285: BytePoly_3 = bigint_nondet_quot!(ctx, x9282, x3, 3);
    let x9286: BytePoly_32 = bigint_nondet_rem!(ctx, x9282, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9285, x3, 35), x9286, 35),
            x9282,
            35
        ),
        260103,
        4,
    )?;
    let x9287: BytePoly_64 = bigint_mul!(x9257, x9257, 64);
    let x9288: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x9287, x9287, 64), x9287, 64),
        x2,
        64
    );
    let x9289: BytePoly_64 = bigint_add!(x48, x9288, 64);
    let x9290: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x9260, x9260, 32), x3, 32);
    let x9291: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x9288, x9290, 96), x3, 32);
    let x9292: BytePoly_64 = bigint_mul!(x9260, x9291, 64);
    let x9293: BytePoly_64 = bigint_add!(x9292, x9292, 64);
    let x9294: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9289, x9293, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9294, x3, 66), x9293, 66),
            x9289,
            66
        ),
        276359,
        4,
    )?;
    let x9295: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x9291, x9291, 64), x3, 64), x3, 64),
            x9257,
            64
        ),
        x9257,
        64
    );
    let x9296: BytePoly_34 = bigint_nondet_quot!(ctx, x9295, x3, 34);
    let x9297: BytePoly_32 = bigint_nondet_rem!(ctx, x9295, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9296, x3, 66), x9297, 66),
            x9295,
            66
        ),
        276359,
        4,
    )?;
    let x9298: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x9291, x9297, 64), 64), x3, 64),
            x9260,
            64
        ),
        bigint_mul!(x9291, x9257, 64),
        64
    );
    let x9299: BytePoly_34 = bigint_nondet_quot!(ctx, x9298, x3, 34);
    let x9300: BytePoly_32 = bigint_nondet_rem!(ctx, x9298, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9299, x3, 66), x9300, 66),
            x9298,
            66
        ),
        276359,
        4,
    )?;
    let x9301: BytePoly_1 = bigint_nondet_rem!(ctx, x9262, x4, 1);
    let x9302: BytePoly_32 = bigint_nondet_quot!(ctx, x9262, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9302, x4, 33), x9301, 33),
            x9262,
            33
        ),
        260103,
        4,
    )?;
    let x9303: BytePoly_1 = bigint_sub!(x5, x9301, 1);
    eqz(ctx, &bigint_mul!(x9301, x9303, 2), 8131, 2)?;
    let x9304: BytePoly_32 = bigint_add!(bigint_sub!(x9300, x9286, 32), x3, 32);
    let x9305: BytePoly_32 = bigint_add!(bigint_sub!(x9297, x9284, 32), x3, 32);
    let x9306: BytePoly_32 = bigint_nondet_inv!(ctx, x9305, x3, 32);
    let x9307: BytePoly_64 = bigint_mul!(x9305, x9306, 64);
    let x9308: BytePoly_34 = bigint_nondet_quot!(ctx, x9307, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x9307, bigint_mul!(x9308, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x9309: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x9304, x9306, 64), x3, 32);
    let x9310: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x9309, x9305, 64), x9304, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x9311: BytePoly_34 = bigint_nondet_quot!(ctx, x9310, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x9310, bigint_mul!(x9311, x3, 66), 66),
        276359,
        4,
    )?;
    let x9312: BytePoly_64 = bigint_mul!(x9309, x9309, 64);
    let x9313: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x9312, x9284, 64), x3, 64),
            x9297,
            64
        ),
        x3,
        64
    );
    let x9314: BytePoly_34 = bigint_nondet_quot!(ctx, x9313, x3, 34);
    let x9315: BytePoly_32 = bigint_nondet_rem!(ctx, x9313, x3, 32);
    let x9316: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x9309, x9315, 64),
                        bigint_add!(
                            bigint_sub!(x9286, bigint_mul!(x9309, x9284, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x9317: BytePoly_34 = bigint_nondet_quot!(ctx, x9316, x3, 34);
    let x9318: BytePoly_32 = bigint_nondet_rem!(ctx, x9316, x3, 32);
    let x9319: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x9312, bigint_mul!(x9314, x3, 66), 66),
                        x9284,
                        66
                    ),
                    x9297,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x9315,
        66
    );
    eqz(ctx, &x9319, 276359, 4)?;
    let x9320: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x9317, x3, 66), x9318, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x9309, bigint_sub!(x9284, x9315, 32), 64),
                        x9286,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x9320, 276359, 4)?;
    let x9321: BytePoly_33 = bigint_add!(
        bigint_mul!(x9315, x9301, 33),
        bigint_mul!(x9284, x9303, 33),
        33
    );
    let x9322: BytePoly_33 = bigint_add!(
        bigint_mul!(x9318, x9301, 33),
        bigint_mul!(x9286, x9303, 33),
        33
    );
    let x9323: BytePoly_3 = bigint_nondet_quot!(ctx, x9321, x3, 3);
    let x9324: BytePoly_32 = bigint_nondet_rem!(ctx, x9321, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9323, x3, 35), x9324, 35),
            x9321,
            35
        ),
        260103,
        4,
    )?;
    let x9325: BytePoly_3 = bigint_nondet_quot!(ctx, x9322, x3, 3);
    let x9326: BytePoly_32 = bigint_nondet_rem!(ctx, x9322, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9325, x3, 35), x9326, 35),
            x9322,
            35
        ),
        260103,
        4,
    )?;
    let x9327: BytePoly_64 = bigint_mul!(x9297, x9297, 64);
    let x9328: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x9327, x9327, 64), x9327, 64),
        x2,
        64
    );
    let x9329: BytePoly_64 = bigint_add!(x48, x9328, 64);
    let x9330: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x9300, x9300, 32), x3, 32);
    let x9331: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x9328, x9330, 96), x3, 32);
    let x9332: BytePoly_64 = bigint_mul!(x9300, x9331, 64);
    let x9333: BytePoly_64 = bigint_add!(x9332, x9332, 64);
    let x9334: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9329, x9333, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9334, x3, 66), x9333, 66),
            x9329,
            66
        ),
        276359,
        4,
    )?;
    let x9335: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x9331, x9331, 64), x3, 64), x3, 64),
            x9297,
            64
        ),
        x9297,
        64
    );
    let x9336: BytePoly_34 = bigint_nondet_quot!(ctx, x9335, x3, 34);
    let x9337: BytePoly_32 = bigint_nondet_rem!(ctx, x9335, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9336, x3, 66), x9337, 66),
            x9335,
            66
        ),
        276359,
        4,
    )?;
    let x9338: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x9331, x9337, 64), 64), x3, 64),
            x9300,
            64
        ),
        bigint_mul!(x9331, x9297, 64),
        64
    );
    let x9339: BytePoly_34 = bigint_nondet_quot!(ctx, x9338, x3, 34);
    let x9340: BytePoly_32 = bigint_nondet_rem!(ctx, x9338, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9339, x3, 66), x9340, 66),
            x9338,
            66
        ),
        276359,
        4,
    )?;
    let x9341: BytePoly_1 = bigint_nondet_rem!(ctx, x9302, x4, 1);
    let x9342: BytePoly_32 = bigint_nondet_quot!(ctx, x9302, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9342, x4, 33), x9341, 33),
            x9302,
            33
        ),
        260103,
        4,
    )?;
    let x9343: BytePoly_1 = bigint_sub!(x5, x9341, 1);
    eqz(ctx, &bigint_mul!(x9341, x9343, 2), 8131, 2)?;
    let x9344: BytePoly_32 = bigint_add!(bigint_sub!(x9340, x9326, 32), x3, 32);
    let x9345: BytePoly_32 = bigint_add!(bigint_sub!(x9337, x9324, 32), x3, 32);
    let x9346: BytePoly_32 = bigint_nondet_inv!(ctx, x9345, x3, 32);
    let x9347: BytePoly_64 = bigint_mul!(x9345, x9346, 64);
    let x9348: BytePoly_34 = bigint_nondet_quot!(ctx, x9347, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x9347, bigint_mul!(x9348, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x9349: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x9344, x9346, 64), x3, 32);
    let x9350: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x9349, x9345, 64), x9344, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x9351: BytePoly_34 = bigint_nondet_quot!(ctx, x9350, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x9350, bigint_mul!(x9351, x3, 66), 66),
        276359,
        4,
    )?;
    let x9352: BytePoly_64 = bigint_mul!(x9349, x9349, 64);
    let x9353: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x9352, x9324, 64), x3, 64),
            x9337,
            64
        ),
        x3,
        64
    );
    let x9354: BytePoly_34 = bigint_nondet_quot!(ctx, x9353, x3, 34);
    let x9355: BytePoly_32 = bigint_nondet_rem!(ctx, x9353, x3, 32);
    let x9356: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x9349, x9355, 64),
                        bigint_add!(
                            bigint_sub!(x9326, bigint_mul!(x9349, x9324, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x9357: BytePoly_34 = bigint_nondet_quot!(ctx, x9356, x3, 34);
    let x9358: BytePoly_32 = bigint_nondet_rem!(ctx, x9356, x3, 32);
    let x9359: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x9352, bigint_mul!(x9354, x3, 66), 66),
                        x9324,
                        66
                    ),
                    x9337,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x9355,
        66
    );
    eqz(ctx, &x9359, 276359, 4)?;
    let x9360: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x9357, x3, 66), x9358, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x9349, bigint_sub!(x9324, x9355, 32), 64),
                        x9326,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x9360, 276359, 4)?;
    let x9361: BytePoly_33 = bigint_add!(
        bigint_mul!(x9355, x9341, 33),
        bigint_mul!(x9324, x9343, 33),
        33
    );
    let x9362: BytePoly_33 = bigint_add!(
        bigint_mul!(x9358, x9341, 33),
        bigint_mul!(x9326, x9343, 33),
        33
    );
    let x9363: BytePoly_3 = bigint_nondet_quot!(ctx, x9361, x3, 3);
    let x9364: BytePoly_32 = bigint_nondet_rem!(ctx, x9361, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9363, x3, 35), x9364, 35),
            x9361,
            35
        ),
        260103,
        4,
    )?;
    let x9365: BytePoly_3 = bigint_nondet_quot!(ctx, x9362, x3, 3);
    let x9366: BytePoly_32 = bigint_nondet_rem!(ctx, x9362, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9365, x3, 35), x9366, 35),
            x9362,
            35
        ),
        260103,
        4,
    )?;
    let x9367: BytePoly_64 = bigint_mul!(x9337, x9337, 64);
    let x9368: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x9367, x9367, 64), x9367, 64),
        x2,
        64
    );
    let x9369: BytePoly_64 = bigint_add!(x48, x9368, 64);
    let x9370: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x9340, x9340, 32), x3, 32);
    let x9371: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x9368, x9370, 96), x3, 32);
    let x9372: BytePoly_64 = bigint_mul!(x9340, x9371, 64);
    let x9373: BytePoly_64 = bigint_add!(x9372, x9372, 64);
    let x9374: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9369, x9373, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9374, x3, 66), x9373, 66),
            x9369,
            66
        ),
        276359,
        4,
    )?;
    let x9375: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x9371, x9371, 64), x3, 64), x3, 64),
            x9337,
            64
        ),
        x9337,
        64
    );
    let x9376: BytePoly_34 = bigint_nondet_quot!(ctx, x9375, x3, 34);
    let x9377: BytePoly_32 = bigint_nondet_rem!(ctx, x9375, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9376, x3, 66), x9377, 66),
            x9375,
            66
        ),
        276359,
        4,
    )?;
    let x9378: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x9371, x9377, 64), 64), x3, 64),
            x9340,
            64
        ),
        bigint_mul!(x9371, x9337, 64),
        64
    );
    let x9379: BytePoly_34 = bigint_nondet_quot!(ctx, x9378, x3, 34);
    let x9380: BytePoly_32 = bigint_nondet_rem!(ctx, x9378, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9379, x3, 66), x9380, 66),
            x9378,
            66
        ),
        276359,
        4,
    )?;
    let x9381: BytePoly_1 = bigint_nondet_rem!(ctx, x9342, x4, 1);
    let x9382: BytePoly_32 = bigint_nondet_quot!(ctx, x9342, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9382, x4, 33), x9381, 33),
            x9342,
            33
        ),
        260103,
        4,
    )?;
    let x9383: BytePoly_1 = bigint_sub!(x5, x9381, 1);
    eqz(ctx, &bigint_mul!(x9381, x9383, 2), 8131, 2)?;
    let x9384: BytePoly_32 = bigint_add!(bigint_sub!(x9380, x9366, 32), x3, 32);
    let x9385: BytePoly_32 = bigint_add!(bigint_sub!(x9377, x9364, 32), x3, 32);
    let x9386: BytePoly_32 = bigint_nondet_inv!(ctx, x9385, x3, 32);
    let x9387: BytePoly_64 = bigint_mul!(x9385, x9386, 64);
    let x9388: BytePoly_34 = bigint_nondet_quot!(ctx, x9387, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x9387, bigint_mul!(x9388, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x9389: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x9384, x9386, 64), x3, 32);
    let x9390: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x9389, x9385, 64), x9384, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x9391: BytePoly_34 = bigint_nondet_quot!(ctx, x9390, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x9390, bigint_mul!(x9391, x3, 66), 66),
        276359,
        4,
    )?;
    let x9392: BytePoly_64 = bigint_mul!(x9389, x9389, 64);
    let x9393: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x9392, x9364, 64), x3, 64),
            x9377,
            64
        ),
        x3,
        64
    );
    let x9394: BytePoly_34 = bigint_nondet_quot!(ctx, x9393, x3, 34);
    let x9395: BytePoly_32 = bigint_nondet_rem!(ctx, x9393, x3, 32);
    let x9396: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x9389, x9395, 64),
                        bigint_add!(
                            bigint_sub!(x9366, bigint_mul!(x9389, x9364, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x9397: BytePoly_34 = bigint_nondet_quot!(ctx, x9396, x3, 34);
    let x9398: BytePoly_32 = bigint_nondet_rem!(ctx, x9396, x3, 32);
    let x9399: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x9392, bigint_mul!(x9394, x3, 66), 66),
                        x9364,
                        66
                    ),
                    x9377,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x9395,
        66
    );
    eqz(ctx, &x9399, 276359, 4)?;
    let x9400: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x9397, x3, 66), x9398, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x9389, bigint_sub!(x9364, x9395, 32), 64),
                        x9366,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x9400, 276359, 4)?;
    let x9401: BytePoly_33 = bigint_add!(
        bigint_mul!(x9395, x9381, 33),
        bigint_mul!(x9364, x9383, 33),
        33
    );
    let x9402: BytePoly_33 = bigint_add!(
        bigint_mul!(x9398, x9381, 33),
        bigint_mul!(x9366, x9383, 33),
        33
    );
    let x9403: BytePoly_3 = bigint_nondet_quot!(ctx, x9401, x3, 3);
    let x9404: BytePoly_32 = bigint_nondet_rem!(ctx, x9401, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9403, x3, 35), x9404, 35),
            x9401,
            35
        ),
        260103,
        4,
    )?;
    let x9405: BytePoly_3 = bigint_nondet_quot!(ctx, x9402, x3, 3);
    let x9406: BytePoly_32 = bigint_nondet_rem!(ctx, x9402, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9405, x3, 35), x9406, 35),
            x9402,
            35
        ),
        260103,
        4,
    )?;
    let x9407: BytePoly_64 = bigint_mul!(x9377, x9377, 64);
    let x9408: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x9407, x9407, 64), x9407, 64),
        x2,
        64
    );
    let x9409: BytePoly_64 = bigint_add!(x48, x9408, 64);
    let x9410: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x9380, x9380, 32), x3, 32);
    let x9411: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x9408, x9410, 96), x3, 32);
    let x9412: BytePoly_64 = bigint_mul!(x9380, x9411, 64);
    let x9413: BytePoly_64 = bigint_add!(x9412, x9412, 64);
    let x9414: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9409, x9413, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9414, x3, 66), x9413, 66),
            x9409,
            66
        ),
        276359,
        4,
    )?;
    let x9415: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x9411, x9411, 64), x3, 64), x3, 64),
            x9377,
            64
        ),
        x9377,
        64
    );
    let x9416: BytePoly_34 = bigint_nondet_quot!(ctx, x9415, x3, 34);
    let x9417: BytePoly_32 = bigint_nondet_rem!(ctx, x9415, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9416, x3, 66), x9417, 66),
            x9415,
            66
        ),
        276359,
        4,
    )?;
    let x9418: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x9411, x9417, 64), 64), x3, 64),
            x9380,
            64
        ),
        bigint_mul!(x9411, x9377, 64),
        64
    );
    let x9419: BytePoly_34 = bigint_nondet_quot!(ctx, x9418, x3, 34);
    let x9420: BytePoly_32 = bigint_nondet_rem!(ctx, x9418, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9419, x3, 66), x9420, 66),
            x9418,
            66
        ),
        276359,
        4,
    )?;
    let x9421: BytePoly_1 = bigint_nondet_rem!(ctx, x9382, x4, 1);
    let x9422: BytePoly_32 = bigint_nondet_quot!(ctx, x9382, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9422, x4, 33), x9421, 33),
            x9382,
            33
        ),
        260103,
        4,
    )?;
    let x9423: BytePoly_1 = bigint_sub!(x5, x9421, 1);
    eqz(ctx, &bigint_mul!(x9421, x9423, 2), 8131, 2)?;
    let x9424: BytePoly_32 = bigint_add!(bigint_sub!(x9420, x9406, 32), x3, 32);
    let x9425: BytePoly_32 = bigint_add!(bigint_sub!(x9417, x9404, 32), x3, 32);
    let x9426: BytePoly_32 = bigint_nondet_inv!(ctx, x9425, x3, 32);
    let x9427: BytePoly_64 = bigint_mul!(x9425, x9426, 64);
    let x9428: BytePoly_34 = bigint_nondet_quot!(ctx, x9427, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x9427, bigint_mul!(x9428, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x9429: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x9424, x9426, 64), x3, 32);
    let x9430: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x9429, x9425, 64), x9424, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x9431: BytePoly_34 = bigint_nondet_quot!(ctx, x9430, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x9430, bigint_mul!(x9431, x3, 66), 66),
        276359,
        4,
    )?;
    let x9432: BytePoly_64 = bigint_mul!(x9429, x9429, 64);
    let x9433: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x9432, x9404, 64), x3, 64),
            x9417,
            64
        ),
        x3,
        64
    );
    let x9434: BytePoly_34 = bigint_nondet_quot!(ctx, x9433, x3, 34);
    let x9435: BytePoly_32 = bigint_nondet_rem!(ctx, x9433, x3, 32);
    let x9436: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x9429, x9435, 64),
                        bigint_add!(
                            bigint_sub!(x9406, bigint_mul!(x9429, x9404, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x9437: BytePoly_34 = bigint_nondet_quot!(ctx, x9436, x3, 34);
    let x9438: BytePoly_32 = bigint_nondet_rem!(ctx, x9436, x3, 32);
    let x9439: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x9432, bigint_mul!(x9434, x3, 66), 66),
                        x9404,
                        66
                    ),
                    x9417,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x9435,
        66
    );
    eqz(ctx, &x9439, 276359, 4)?;
    let x9440: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x9437, x3, 66), x9438, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x9429, bigint_sub!(x9404, x9435, 32), 64),
                        x9406,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x9440, 276359, 4)?;
    let x9441: BytePoly_33 = bigint_add!(
        bigint_mul!(x9435, x9421, 33),
        bigint_mul!(x9404, x9423, 33),
        33
    );
    let x9442: BytePoly_33 = bigint_add!(
        bigint_mul!(x9438, x9421, 33),
        bigint_mul!(x9406, x9423, 33),
        33
    );
    let x9443: BytePoly_3 = bigint_nondet_quot!(ctx, x9441, x3, 3);
    let x9444: BytePoly_32 = bigint_nondet_rem!(ctx, x9441, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9443, x3, 35), x9444, 35),
            x9441,
            35
        ),
        260103,
        4,
    )?;
    let x9445: BytePoly_3 = bigint_nondet_quot!(ctx, x9442, x3, 3);
    let x9446: BytePoly_32 = bigint_nondet_rem!(ctx, x9442, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9445, x3, 35), x9446, 35),
            x9442,
            35
        ),
        260103,
        4,
    )?;
    let x9447: BytePoly_64 = bigint_mul!(x9417, x9417, 64);
    let x9448: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x9447, x9447, 64), x9447, 64),
        x2,
        64
    );
    let x9449: BytePoly_64 = bigint_add!(x48, x9448, 64);
    let x9450: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x9420, x9420, 32), x3, 32);
    let x9451: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x9448, x9450, 96), x3, 32);
    let x9452: BytePoly_64 = bigint_mul!(x9420, x9451, 64);
    let x9453: BytePoly_64 = bigint_add!(x9452, x9452, 64);
    let x9454: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9449, x9453, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9454, x3, 66), x9453, 66),
            x9449,
            66
        ),
        276359,
        4,
    )?;
    let x9455: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x9451, x9451, 64), x3, 64), x3, 64),
            x9417,
            64
        ),
        x9417,
        64
    );
    let x9456: BytePoly_34 = bigint_nondet_quot!(ctx, x9455, x3, 34);
    let x9457: BytePoly_32 = bigint_nondet_rem!(ctx, x9455, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9456, x3, 66), x9457, 66),
            x9455,
            66
        ),
        276359,
        4,
    )?;
    let x9458: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x9451, x9457, 64), 64), x3, 64),
            x9420,
            64
        ),
        bigint_mul!(x9451, x9417, 64),
        64
    );
    let x9459: BytePoly_34 = bigint_nondet_quot!(ctx, x9458, x3, 34);
    let x9460: BytePoly_32 = bigint_nondet_rem!(ctx, x9458, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9459, x3, 66), x9460, 66),
            x9458,
            66
        ),
        276359,
        4,
    )?;
    let x9461: BytePoly_1 = bigint_nondet_rem!(ctx, x9422, x4, 1);
    let x9462: BytePoly_32 = bigint_nondet_quot!(ctx, x9422, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9462, x4, 33), x9461, 33),
            x9422,
            33
        ),
        260103,
        4,
    )?;
    let x9463: BytePoly_1 = bigint_sub!(x5, x9461, 1);
    eqz(ctx, &bigint_mul!(x9461, x9463, 2), 8131, 2)?;
    let x9464: BytePoly_32 = bigint_add!(bigint_sub!(x9460, x9446, 32), x3, 32);
    let x9465: BytePoly_32 = bigint_add!(bigint_sub!(x9457, x9444, 32), x3, 32);
    let x9466: BytePoly_32 = bigint_nondet_inv!(ctx, x9465, x3, 32);
    let x9467: BytePoly_64 = bigint_mul!(x9465, x9466, 64);
    let x9468: BytePoly_34 = bigint_nondet_quot!(ctx, x9467, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x9467, bigint_mul!(x9468, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x9469: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x9464, x9466, 64), x3, 32);
    let x9470: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x9469, x9465, 64), x9464, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x9471: BytePoly_34 = bigint_nondet_quot!(ctx, x9470, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x9470, bigint_mul!(x9471, x3, 66), 66),
        276359,
        4,
    )?;
    let x9472: BytePoly_64 = bigint_mul!(x9469, x9469, 64);
    let x9473: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x9472, x9444, 64), x3, 64),
            x9457,
            64
        ),
        x3,
        64
    );
    let x9474: BytePoly_34 = bigint_nondet_quot!(ctx, x9473, x3, 34);
    let x9475: BytePoly_32 = bigint_nondet_rem!(ctx, x9473, x3, 32);
    let x9476: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x9469, x9475, 64),
                        bigint_add!(
                            bigint_sub!(x9446, bigint_mul!(x9469, x9444, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x9477: BytePoly_34 = bigint_nondet_quot!(ctx, x9476, x3, 34);
    let x9478: BytePoly_32 = bigint_nondet_rem!(ctx, x9476, x3, 32);
    let x9479: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x9472, bigint_mul!(x9474, x3, 66), 66),
                        x9444,
                        66
                    ),
                    x9457,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x9475,
        66
    );
    eqz(ctx, &x9479, 276359, 4)?;
    let x9480: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x9477, x3, 66), x9478, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x9469, bigint_sub!(x9444, x9475, 32), 64),
                        x9446,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x9480, 276359, 4)?;
    let x9481: BytePoly_33 = bigint_add!(
        bigint_mul!(x9475, x9461, 33),
        bigint_mul!(x9444, x9463, 33),
        33
    );
    let x9482: BytePoly_33 = bigint_add!(
        bigint_mul!(x9478, x9461, 33),
        bigint_mul!(x9446, x9463, 33),
        33
    );
    let x9483: BytePoly_3 = bigint_nondet_quot!(ctx, x9481, x3, 3);
    let x9484: BytePoly_32 = bigint_nondet_rem!(ctx, x9481, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9483, x3, 35), x9484, 35),
            x9481,
            35
        ),
        260103,
        4,
    )?;
    let x9485: BytePoly_3 = bigint_nondet_quot!(ctx, x9482, x3, 3);
    let x9486: BytePoly_32 = bigint_nondet_rem!(ctx, x9482, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9485, x3, 35), x9486, 35),
            x9482,
            35
        ),
        260103,
        4,
    )?;
    let x9487: BytePoly_64 = bigint_mul!(x9457, x9457, 64);
    let x9488: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x9487, x9487, 64), x9487, 64),
        x2,
        64
    );
    let x9489: BytePoly_64 = bigint_add!(x48, x9488, 64);
    let x9490: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x9460, x9460, 32), x3, 32);
    let x9491: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x9488, x9490, 96), x3, 32);
    let x9492: BytePoly_64 = bigint_mul!(x9460, x9491, 64);
    let x9493: BytePoly_64 = bigint_add!(x9492, x9492, 64);
    let x9494: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9489, x9493, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9494, x3, 66), x9493, 66),
            x9489,
            66
        ),
        276359,
        4,
    )?;
    let x9495: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x9491, x9491, 64), x3, 64), x3, 64),
            x9457,
            64
        ),
        x9457,
        64
    );
    let x9496: BytePoly_34 = bigint_nondet_quot!(ctx, x9495, x3, 34);
    let x9497: BytePoly_32 = bigint_nondet_rem!(ctx, x9495, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9496, x3, 66), x9497, 66),
            x9495,
            66
        ),
        276359,
        4,
    )?;
    let x9498: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x9491, x9497, 64), 64), x3, 64),
            x9460,
            64
        ),
        bigint_mul!(x9491, x9457, 64),
        64
    );
    let x9499: BytePoly_34 = bigint_nondet_quot!(ctx, x9498, x3, 34);
    let x9500: BytePoly_32 = bigint_nondet_rem!(ctx, x9498, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9499, x3, 66), x9500, 66),
            x9498,
            66
        ),
        276359,
        4,
    )?;
    let x9501: BytePoly_1 = bigint_nondet_rem!(ctx, x9462, x4, 1);
    let x9502: BytePoly_32 = bigint_nondet_quot!(ctx, x9462, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9502, x4, 33), x9501, 33),
            x9462,
            33
        ),
        260103,
        4,
    )?;
    let x9503: BytePoly_1 = bigint_sub!(x5, x9501, 1);
    eqz(ctx, &bigint_mul!(x9501, x9503, 2), 8131, 2)?;
    let x9504: BytePoly_32 = bigint_add!(bigint_sub!(x9500, x9486, 32), x3, 32);
    let x9505: BytePoly_32 = bigint_add!(bigint_sub!(x9497, x9484, 32), x3, 32);
    let x9506: BytePoly_32 = bigint_nondet_inv!(ctx, x9505, x3, 32);
    let x9507: BytePoly_64 = bigint_mul!(x9505, x9506, 64);
    let x9508: BytePoly_34 = bigint_nondet_quot!(ctx, x9507, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x9507, bigint_mul!(x9508, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x9509: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x9504, x9506, 64), x3, 32);
    let x9510: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x9509, x9505, 64), x9504, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x9511: BytePoly_34 = bigint_nondet_quot!(ctx, x9510, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x9510, bigint_mul!(x9511, x3, 66), 66),
        276359,
        4,
    )?;
    let x9512: BytePoly_64 = bigint_mul!(x9509, x9509, 64);
    let x9513: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x9512, x9484, 64), x3, 64),
            x9497,
            64
        ),
        x3,
        64
    );
    let x9514: BytePoly_34 = bigint_nondet_quot!(ctx, x9513, x3, 34);
    let x9515: BytePoly_32 = bigint_nondet_rem!(ctx, x9513, x3, 32);
    let x9516: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x9509, x9515, 64),
                        bigint_add!(
                            bigint_sub!(x9486, bigint_mul!(x9509, x9484, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x9517: BytePoly_34 = bigint_nondet_quot!(ctx, x9516, x3, 34);
    let x9518: BytePoly_32 = bigint_nondet_rem!(ctx, x9516, x3, 32);
    let x9519: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x9512, bigint_mul!(x9514, x3, 66), 66),
                        x9484,
                        66
                    ),
                    x9497,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x9515,
        66
    );
    eqz(ctx, &x9519, 276359, 4)?;
    let x9520: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x9517, x3, 66), x9518, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x9509, bigint_sub!(x9484, x9515, 32), 64),
                        x9486,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x9520, 276359, 4)?;
    let x9521: BytePoly_33 = bigint_add!(
        bigint_mul!(x9515, x9501, 33),
        bigint_mul!(x9484, x9503, 33),
        33
    );
    let x9522: BytePoly_33 = bigint_add!(
        bigint_mul!(x9518, x9501, 33),
        bigint_mul!(x9486, x9503, 33),
        33
    );
    let x9523: BytePoly_3 = bigint_nondet_quot!(ctx, x9521, x3, 3);
    let x9524: BytePoly_32 = bigint_nondet_rem!(ctx, x9521, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9523, x3, 35), x9524, 35),
            x9521,
            35
        ),
        260103,
        4,
    )?;
    let x9525: BytePoly_3 = bigint_nondet_quot!(ctx, x9522, x3, 3);
    let x9526: BytePoly_32 = bigint_nondet_rem!(ctx, x9522, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9525, x3, 35), x9526, 35),
            x9522,
            35
        ),
        260103,
        4,
    )?;
    let x9527: BytePoly_64 = bigint_mul!(x9497, x9497, 64);
    let x9528: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x9527, x9527, 64), x9527, 64),
        x2,
        64
    );
    let x9529: BytePoly_64 = bigint_add!(x48, x9528, 64);
    let x9530: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x9500, x9500, 32), x3, 32);
    let x9531: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x9528, x9530, 96), x3, 32);
    let x9532: BytePoly_64 = bigint_mul!(x9500, x9531, 64);
    let x9533: BytePoly_64 = bigint_add!(x9532, x9532, 64);
    let x9534: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9529, x9533, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9534, x3, 66), x9533, 66),
            x9529,
            66
        ),
        276359,
        4,
    )?;
    let x9535: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x9531, x9531, 64), x3, 64), x3, 64),
            x9497,
            64
        ),
        x9497,
        64
    );
    let x9536: BytePoly_34 = bigint_nondet_quot!(ctx, x9535, x3, 34);
    let x9537: BytePoly_32 = bigint_nondet_rem!(ctx, x9535, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9536, x3, 66), x9537, 66),
            x9535,
            66
        ),
        276359,
        4,
    )?;
    let x9538: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x9531, x9537, 64), 64), x3, 64),
            x9500,
            64
        ),
        bigint_mul!(x9531, x9497, 64),
        64
    );
    let x9539: BytePoly_34 = bigint_nondet_quot!(ctx, x9538, x3, 34);
    let x9540: BytePoly_32 = bigint_nondet_rem!(ctx, x9538, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9539, x3, 66), x9540, 66),
            x9538,
            66
        ),
        276359,
        4,
    )?;
    let x9541: BytePoly_1 = bigint_nondet_rem!(ctx, x9502, x4, 1);
    let x9542: BytePoly_32 = bigint_nondet_quot!(ctx, x9502, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9542, x4, 33), x9541, 33),
            x9502,
            33
        ),
        260103,
        4,
    )?;
    let x9543: BytePoly_1 = bigint_sub!(x5, x9541, 1);
    eqz(ctx, &bigint_mul!(x9541, x9543, 2), 8131, 2)?;
    let x9544: BytePoly_32 = bigint_add!(bigint_sub!(x9540, x9526, 32), x3, 32);
    let x9545: BytePoly_32 = bigint_add!(bigint_sub!(x9537, x9524, 32), x3, 32);
    let x9546: BytePoly_32 = bigint_nondet_inv!(ctx, x9545, x3, 32);
    let x9547: BytePoly_64 = bigint_mul!(x9545, x9546, 64);
    let x9548: BytePoly_34 = bigint_nondet_quot!(ctx, x9547, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x9547, bigint_mul!(x9548, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x9549: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x9544, x9546, 64), x3, 32);
    let x9550: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x9549, x9545, 64), x9544, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x9551: BytePoly_34 = bigint_nondet_quot!(ctx, x9550, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x9550, bigint_mul!(x9551, x3, 66), 66),
        276359,
        4,
    )?;
    let x9552: BytePoly_64 = bigint_mul!(x9549, x9549, 64);
    let x9553: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x9552, x9524, 64), x3, 64),
            x9537,
            64
        ),
        x3,
        64
    );
    let x9554: BytePoly_34 = bigint_nondet_quot!(ctx, x9553, x3, 34);
    let x9555: BytePoly_32 = bigint_nondet_rem!(ctx, x9553, x3, 32);
    let x9556: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x9549, x9555, 64),
                        bigint_add!(
                            bigint_sub!(x9526, bigint_mul!(x9549, x9524, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x9557: BytePoly_34 = bigint_nondet_quot!(ctx, x9556, x3, 34);
    let x9558: BytePoly_32 = bigint_nondet_rem!(ctx, x9556, x3, 32);
    let x9559: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x9552, bigint_mul!(x9554, x3, 66), 66),
                        x9524,
                        66
                    ),
                    x9537,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x9555,
        66
    );
    eqz(ctx, &x9559, 276359, 4)?;
    let x9560: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x9557, x3, 66), x9558, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x9549, bigint_sub!(x9524, x9555, 32), 64),
                        x9526,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x9560, 276359, 4)?;
    let x9561: BytePoly_33 = bigint_add!(
        bigint_mul!(x9555, x9541, 33),
        bigint_mul!(x9524, x9543, 33),
        33
    );
    let x9562: BytePoly_33 = bigint_add!(
        bigint_mul!(x9558, x9541, 33),
        bigint_mul!(x9526, x9543, 33),
        33
    );
    let x9563: BytePoly_3 = bigint_nondet_quot!(ctx, x9561, x3, 3);
    let x9564: BytePoly_32 = bigint_nondet_rem!(ctx, x9561, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9563, x3, 35), x9564, 35),
            x9561,
            35
        ),
        260103,
        4,
    )?;
    let x9565: BytePoly_3 = bigint_nondet_quot!(ctx, x9562, x3, 3);
    let x9566: BytePoly_32 = bigint_nondet_rem!(ctx, x9562, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9565, x3, 35), x9566, 35),
            x9562,
            35
        ),
        260103,
        4,
    )?;
    let x9567: BytePoly_64 = bigint_mul!(x9537, x9537, 64);
    let x9568: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x9567, x9567, 64), x9567, 64),
        x2,
        64
    );
    let x9569: BytePoly_64 = bigint_add!(x48, x9568, 64);
    let x9570: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x9540, x9540, 32), x3, 32);
    let x9571: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x9568, x9570, 96), x3, 32);
    let x9572: BytePoly_64 = bigint_mul!(x9540, x9571, 64);
    let x9573: BytePoly_64 = bigint_add!(x9572, x9572, 64);
    let x9574: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9569, x9573, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9574, x3, 66), x9573, 66),
            x9569,
            66
        ),
        276359,
        4,
    )?;
    let x9575: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x9571, x9571, 64), x3, 64), x3, 64),
            x9537,
            64
        ),
        x9537,
        64
    );
    let x9576: BytePoly_34 = bigint_nondet_quot!(ctx, x9575, x3, 34);
    let x9577: BytePoly_32 = bigint_nondet_rem!(ctx, x9575, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9576, x3, 66), x9577, 66),
            x9575,
            66
        ),
        276359,
        4,
    )?;
    let x9578: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x9571, x9577, 64), 64), x3, 64),
            x9540,
            64
        ),
        bigint_mul!(x9571, x9537, 64),
        64
    );
    let x9579: BytePoly_34 = bigint_nondet_quot!(ctx, x9578, x3, 34);
    let x9580: BytePoly_32 = bigint_nondet_rem!(ctx, x9578, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9579, x3, 66), x9580, 66),
            x9578,
            66
        ),
        276359,
        4,
    )?;
    let x9581: BytePoly_1 = bigint_nondet_rem!(ctx, x9542, x4, 1);
    let x9582: BytePoly_32 = bigint_nondet_quot!(ctx, x9542, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9582, x4, 33), x9581, 33),
            x9542,
            33
        ),
        260103,
        4,
    )?;
    let x9583: BytePoly_1 = bigint_sub!(x5, x9581, 1);
    eqz(ctx, &bigint_mul!(x9581, x9583, 2), 8131, 2)?;
    let x9584: BytePoly_32 = bigint_add!(bigint_sub!(x9580, x9566, 32), x3, 32);
    let x9585: BytePoly_32 = bigint_add!(bigint_sub!(x9577, x9564, 32), x3, 32);
    let x9586: BytePoly_32 = bigint_nondet_inv!(ctx, x9585, x3, 32);
    let x9587: BytePoly_64 = bigint_mul!(x9585, x9586, 64);
    let x9588: BytePoly_34 = bigint_nondet_quot!(ctx, x9587, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x9587, bigint_mul!(x9588, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x9589: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x9584, x9586, 64), x3, 32);
    let x9590: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x9589, x9585, 64), x9584, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x9591: BytePoly_34 = bigint_nondet_quot!(ctx, x9590, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x9590, bigint_mul!(x9591, x3, 66), 66),
        276359,
        4,
    )?;
    let x9592: BytePoly_64 = bigint_mul!(x9589, x9589, 64);
    let x9593: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x9592, x9564, 64), x3, 64),
            x9577,
            64
        ),
        x3,
        64
    );
    let x9594: BytePoly_34 = bigint_nondet_quot!(ctx, x9593, x3, 34);
    let x9595: BytePoly_32 = bigint_nondet_rem!(ctx, x9593, x3, 32);
    let x9596: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x9589, x9595, 64),
                        bigint_add!(
                            bigint_sub!(x9566, bigint_mul!(x9589, x9564, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x9597: BytePoly_34 = bigint_nondet_quot!(ctx, x9596, x3, 34);
    let x9598: BytePoly_32 = bigint_nondet_rem!(ctx, x9596, x3, 32);
    let x9599: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x9592, bigint_mul!(x9594, x3, 66), 66),
                        x9564,
                        66
                    ),
                    x9577,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x9595,
        66
    );
    eqz(ctx, &x9599, 276359, 4)?;
    let x9600: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x9597, x3, 66), x9598, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x9589, bigint_sub!(x9564, x9595, 32), 64),
                        x9566,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x9600, 276359, 4)?;
    let x9601: BytePoly_33 = bigint_add!(
        bigint_mul!(x9595, x9581, 33),
        bigint_mul!(x9564, x9583, 33),
        33
    );
    let x9602: BytePoly_33 = bigint_add!(
        bigint_mul!(x9598, x9581, 33),
        bigint_mul!(x9566, x9583, 33),
        33
    );
    let x9603: BytePoly_3 = bigint_nondet_quot!(ctx, x9601, x3, 3);
    let x9604: BytePoly_32 = bigint_nondet_rem!(ctx, x9601, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9603, x3, 35), x9604, 35),
            x9601,
            35
        ),
        260103,
        4,
    )?;
    let x9605: BytePoly_3 = bigint_nondet_quot!(ctx, x9602, x3, 3);
    let x9606: BytePoly_32 = bigint_nondet_rem!(ctx, x9602, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9605, x3, 35), x9606, 35),
            x9602,
            35
        ),
        260103,
        4,
    )?;
    let x9607: BytePoly_64 = bigint_mul!(x9577, x9577, 64);
    let x9608: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x9607, x9607, 64), x9607, 64),
        x2,
        64
    );
    let x9609: BytePoly_64 = bigint_add!(x48, x9608, 64);
    let x9610: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x9580, x9580, 32), x3, 32);
    let x9611: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x9608, x9610, 96), x3, 32);
    let x9612: BytePoly_64 = bigint_mul!(x9580, x9611, 64);
    let x9613: BytePoly_64 = bigint_add!(x9612, x9612, 64);
    let x9614: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9609, x9613, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9614, x3, 66), x9613, 66),
            x9609,
            66
        ),
        276359,
        4,
    )?;
    let x9615: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x9611, x9611, 64), x3, 64), x3, 64),
            x9577,
            64
        ),
        x9577,
        64
    );
    let x9616: BytePoly_34 = bigint_nondet_quot!(ctx, x9615, x3, 34);
    let x9617: BytePoly_32 = bigint_nondet_rem!(ctx, x9615, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9616, x3, 66), x9617, 66),
            x9615,
            66
        ),
        276359,
        4,
    )?;
    let x9618: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x9611, x9617, 64), 64), x3, 64),
            x9580,
            64
        ),
        bigint_mul!(x9611, x9577, 64),
        64
    );
    let x9619: BytePoly_34 = bigint_nondet_quot!(ctx, x9618, x3, 34);
    let x9620: BytePoly_32 = bigint_nondet_rem!(ctx, x9618, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9619, x3, 66), x9620, 66),
            x9618,
            66
        ),
        276359,
        4,
    )?;
    let x9621: BytePoly_1 = bigint_nondet_rem!(ctx, x9582, x4, 1);
    let x9622: BytePoly_32 = bigint_nondet_quot!(ctx, x9582, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9622, x4, 33), x9621, 33),
            x9582,
            33
        ),
        260103,
        4,
    )?;
    let x9623: BytePoly_1 = bigint_sub!(x5, x9621, 1);
    eqz(ctx, &bigint_mul!(x9621, x9623, 2), 8131, 2)?;
    let x9624: BytePoly_32 = bigint_add!(bigint_sub!(x9620, x9606, 32), x3, 32);
    let x9625: BytePoly_32 = bigint_add!(bigint_sub!(x9617, x9604, 32), x3, 32);
    let x9626: BytePoly_32 = bigint_nondet_inv!(ctx, x9625, x3, 32);
    let x9627: BytePoly_64 = bigint_mul!(x9625, x9626, 64);
    let x9628: BytePoly_34 = bigint_nondet_quot!(ctx, x9627, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x9627, bigint_mul!(x9628, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x9629: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x9624, x9626, 64), x3, 32);
    let x9630: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x9629, x9625, 64), x9624, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x9631: BytePoly_34 = bigint_nondet_quot!(ctx, x9630, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x9630, bigint_mul!(x9631, x3, 66), 66),
        276359,
        4,
    )?;
    let x9632: BytePoly_64 = bigint_mul!(x9629, x9629, 64);
    let x9633: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x9632, x9604, 64), x3, 64),
            x9617,
            64
        ),
        x3,
        64
    );
    let x9634: BytePoly_34 = bigint_nondet_quot!(ctx, x9633, x3, 34);
    let x9635: BytePoly_32 = bigint_nondet_rem!(ctx, x9633, x3, 32);
    let x9636: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x9629, x9635, 64),
                        bigint_add!(
                            bigint_sub!(x9606, bigint_mul!(x9629, x9604, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x9637: BytePoly_34 = bigint_nondet_quot!(ctx, x9636, x3, 34);
    let x9638: BytePoly_32 = bigint_nondet_rem!(ctx, x9636, x3, 32);
    let x9639: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x9632, bigint_mul!(x9634, x3, 66), 66),
                        x9604,
                        66
                    ),
                    x9617,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x9635,
        66
    );
    eqz(ctx, &x9639, 276359, 4)?;
    let x9640: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x9637, x3, 66), x9638, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x9629, bigint_sub!(x9604, x9635, 32), 64),
                        x9606,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x9640, 276359, 4)?;
    let x9641: BytePoly_33 = bigint_add!(
        bigint_mul!(x9635, x9621, 33),
        bigint_mul!(x9604, x9623, 33),
        33
    );
    let x9642: BytePoly_33 = bigint_add!(
        bigint_mul!(x9638, x9621, 33),
        bigint_mul!(x9606, x9623, 33),
        33
    );
    let x9643: BytePoly_3 = bigint_nondet_quot!(ctx, x9641, x3, 3);
    let x9644: BytePoly_32 = bigint_nondet_rem!(ctx, x9641, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9643, x3, 35), x9644, 35),
            x9641,
            35
        ),
        260103,
        4,
    )?;
    let x9645: BytePoly_3 = bigint_nondet_quot!(ctx, x9642, x3, 3);
    let x9646: BytePoly_32 = bigint_nondet_rem!(ctx, x9642, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9645, x3, 35), x9646, 35),
            x9642,
            35
        ),
        260103,
        4,
    )?;
    let x9647: BytePoly_64 = bigint_mul!(x9617, x9617, 64);
    let x9648: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x9647, x9647, 64), x9647, 64),
        x2,
        64
    );
    let x9649: BytePoly_64 = bigint_add!(x48, x9648, 64);
    let x9650: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x9620, x9620, 32), x3, 32);
    let x9651: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x9648, x9650, 96), x3, 32);
    let x9652: BytePoly_64 = bigint_mul!(x9620, x9651, 64);
    let x9653: BytePoly_64 = bigint_add!(x9652, x9652, 64);
    let x9654: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9649, x9653, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9654, x3, 66), x9653, 66),
            x9649,
            66
        ),
        276359,
        4,
    )?;
    let x9655: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x9651, x9651, 64), x3, 64), x3, 64),
            x9617,
            64
        ),
        x9617,
        64
    );
    let x9656: BytePoly_34 = bigint_nondet_quot!(ctx, x9655, x3, 34);
    let x9657: BytePoly_32 = bigint_nondet_rem!(ctx, x9655, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9656, x3, 66), x9657, 66),
            x9655,
            66
        ),
        276359,
        4,
    )?;
    let x9658: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x9651, x9657, 64), 64), x3, 64),
            x9620,
            64
        ),
        bigint_mul!(x9651, x9617, 64),
        64
    );
    let x9659: BytePoly_34 = bigint_nondet_quot!(ctx, x9658, x3, 34);
    let x9660: BytePoly_32 = bigint_nondet_rem!(ctx, x9658, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9659, x3, 66), x9660, 66),
            x9658,
            66
        ),
        276359,
        4,
    )?;
    let x9661: BytePoly_1 = bigint_nondet_rem!(ctx, x9622, x4, 1);
    let x9662: BytePoly_32 = bigint_nondet_quot!(ctx, x9622, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9662, x4, 33), x9661, 33),
            x9622,
            33
        ),
        260103,
        4,
    )?;
    let x9663: BytePoly_1 = bigint_sub!(x5, x9661, 1);
    eqz(ctx, &bigint_mul!(x9661, x9663, 2), 8131, 2)?;
    let x9664: BytePoly_32 = bigint_add!(bigint_sub!(x9660, x9646, 32), x3, 32);
    let x9665: BytePoly_32 = bigint_add!(bigint_sub!(x9657, x9644, 32), x3, 32);
    let x9666: BytePoly_32 = bigint_nondet_inv!(ctx, x9665, x3, 32);
    let x9667: BytePoly_64 = bigint_mul!(x9665, x9666, 64);
    let x9668: BytePoly_34 = bigint_nondet_quot!(ctx, x9667, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x9667, bigint_mul!(x9668, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x9669: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x9664, x9666, 64), x3, 32);
    let x9670: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x9669, x9665, 64), x9664, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x9671: BytePoly_34 = bigint_nondet_quot!(ctx, x9670, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x9670, bigint_mul!(x9671, x3, 66), 66),
        276359,
        4,
    )?;
    let x9672: BytePoly_64 = bigint_mul!(x9669, x9669, 64);
    let x9673: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x9672, x9644, 64), x3, 64),
            x9657,
            64
        ),
        x3,
        64
    );
    let x9674: BytePoly_34 = bigint_nondet_quot!(ctx, x9673, x3, 34);
    let x9675: BytePoly_32 = bigint_nondet_rem!(ctx, x9673, x3, 32);
    let x9676: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x9669, x9675, 64),
                        bigint_add!(
                            bigint_sub!(x9646, bigint_mul!(x9669, x9644, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x9677: BytePoly_34 = bigint_nondet_quot!(ctx, x9676, x3, 34);
    let x9678: BytePoly_32 = bigint_nondet_rem!(ctx, x9676, x3, 32);
    let x9679: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x9672, bigint_mul!(x9674, x3, 66), 66),
                        x9644,
                        66
                    ),
                    x9657,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x9675,
        66
    );
    eqz(ctx, &x9679, 276359, 4)?;
    let x9680: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x9677, x3, 66), x9678, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x9669, bigint_sub!(x9644, x9675, 32), 64),
                        x9646,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x9680, 276359, 4)?;
    let x9681: BytePoly_33 = bigint_add!(
        bigint_mul!(x9675, x9661, 33),
        bigint_mul!(x9644, x9663, 33),
        33
    );
    let x9682: BytePoly_33 = bigint_add!(
        bigint_mul!(x9678, x9661, 33),
        bigint_mul!(x9646, x9663, 33),
        33
    );
    let x9683: BytePoly_3 = bigint_nondet_quot!(ctx, x9681, x3, 3);
    let x9684: BytePoly_32 = bigint_nondet_rem!(ctx, x9681, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9683, x3, 35), x9684, 35),
            x9681,
            35
        ),
        260103,
        4,
    )?;
    let x9685: BytePoly_3 = bigint_nondet_quot!(ctx, x9682, x3, 3);
    let x9686: BytePoly_32 = bigint_nondet_rem!(ctx, x9682, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9685, x3, 35), x9686, 35),
            x9682,
            35
        ),
        260103,
        4,
    )?;
    let x9687: BytePoly_64 = bigint_mul!(x9657, x9657, 64);
    let x9688: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x9687, x9687, 64), x9687, 64),
        x2,
        64
    );
    let x9689: BytePoly_64 = bigint_add!(x48, x9688, 64);
    let x9690: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x9660, x9660, 32), x3, 32);
    let x9691: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x9688, x9690, 96), x3, 32);
    let x9692: BytePoly_64 = bigint_mul!(x9660, x9691, 64);
    let x9693: BytePoly_64 = bigint_add!(x9692, x9692, 64);
    let x9694: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9689, x9693, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9694, x3, 66), x9693, 66),
            x9689,
            66
        ),
        276359,
        4,
    )?;
    let x9695: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x9691, x9691, 64), x3, 64), x3, 64),
            x9657,
            64
        ),
        x9657,
        64
    );
    let x9696: BytePoly_34 = bigint_nondet_quot!(ctx, x9695, x3, 34);
    let x9697: BytePoly_32 = bigint_nondet_rem!(ctx, x9695, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9696, x3, 66), x9697, 66),
            x9695,
            66
        ),
        276359,
        4,
    )?;
    let x9698: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x9691, x9697, 64), 64), x3, 64),
            x9660,
            64
        ),
        bigint_mul!(x9691, x9657, 64),
        64
    );
    let x9699: BytePoly_34 = bigint_nondet_quot!(ctx, x9698, x3, 34);
    let x9700: BytePoly_32 = bigint_nondet_rem!(ctx, x9698, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9699, x3, 66), x9700, 66),
            x9698,
            66
        ),
        276359,
        4,
    )?;
    let x9701: BytePoly_1 = bigint_nondet_rem!(ctx, x9662, x4, 1);
    let x9702: BytePoly_32 = bigint_nondet_quot!(ctx, x9662, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9702, x4, 33), x9701, 33),
            x9662,
            33
        ),
        260103,
        4,
    )?;
    let x9703: BytePoly_1 = bigint_sub!(x5, x9701, 1);
    eqz(ctx, &bigint_mul!(x9701, x9703, 2), 8131, 2)?;
    let x9704: BytePoly_32 = bigint_add!(bigint_sub!(x9700, x9686, 32), x3, 32);
    let x9705: BytePoly_32 = bigint_add!(bigint_sub!(x9697, x9684, 32), x3, 32);
    let x9706: BytePoly_32 = bigint_nondet_inv!(ctx, x9705, x3, 32);
    let x9707: BytePoly_64 = bigint_mul!(x9705, x9706, 64);
    let x9708: BytePoly_34 = bigint_nondet_quot!(ctx, x9707, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x9707, bigint_mul!(x9708, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x9709: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x9704, x9706, 64), x3, 32);
    let x9710: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x9709, x9705, 64), x9704, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x9711: BytePoly_34 = bigint_nondet_quot!(ctx, x9710, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x9710, bigint_mul!(x9711, x3, 66), 66),
        276359,
        4,
    )?;
    let x9712: BytePoly_64 = bigint_mul!(x9709, x9709, 64);
    let x9713: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x9712, x9684, 64), x3, 64),
            x9697,
            64
        ),
        x3,
        64
    );
    let x9714: BytePoly_34 = bigint_nondet_quot!(ctx, x9713, x3, 34);
    let x9715: BytePoly_32 = bigint_nondet_rem!(ctx, x9713, x3, 32);
    let x9716: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x9709, x9715, 64),
                        bigint_add!(
                            bigint_sub!(x9686, bigint_mul!(x9709, x9684, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x9717: BytePoly_34 = bigint_nondet_quot!(ctx, x9716, x3, 34);
    let x9718: BytePoly_32 = bigint_nondet_rem!(ctx, x9716, x3, 32);
    let x9719: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x9712, bigint_mul!(x9714, x3, 66), 66),
                        x9684,
                        66
                    ),
                    x9697,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x9715,
        66
    );
    eqz(ctx, &x9719, 276359, 4)?;
    let x9720: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x9717, x3, 66), x9718, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x9709, bigint_sub!(x9684, x9715, 32), 64),
                        x9686,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x9720, 276359, 4)?;
    let x9721: BytePoly_33 = bigint_add!(
        bigint_mul!(x9715, x9701, 33),
        bigint_mul!(x9684, x9703, 33),
        33
    );
    let x9722: BytePoly_33 = bigint_add!(
        bigint_mul!(x9718, x9701, 33),
        bigint_mul!(x9686, x9703, 33),
        33
    );
    let x9723: BytePoly_3 = bigint_nondet_quot!(ctx, x9721, x3, 3);
    let x9724: BytePoly_32 = bigint_nondet_rem!(ctx, x9721, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9723, x3, 35), x9724, 35),
            x9721,
            35
        ),
        260103,
        4,
    )?;
    let x9725: BytePoly_3 = bigint_nondet_quot!(ctx, x9722, x3, 3);
    let x9726: BytePoly_32 = bigint_nondet_rem!(ctx, x9722, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9725, x3, 35), x9726, 35),
            x9722,
            35
        ),
        260103,
        4,
    )?;
    let x9727: BytePoly_64 = bigint_mul!(x9697, x9697, 64);
    let x9728: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x9727, x9727, 64), x9727, 64),
        x2,
        64
    );
    let x9729: BytePoly_64 = bigint_add!(x48, x9728, 64);
    let x9730: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x9700, x9700, 32), x3, 32);
    let x9731: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x9728, x9730, 96), x3, 32);
    let x9732: BytePoly_64 = bigint_mul!(x9700, x9731, 64);
    let x9733: BytePoly_64 = bigint_add!(x9732, x9732, 64);
    let x9734: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9729, x9733, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9734, x3, 66), x9733, 66),
            x9729,
            66
        ),
        276359,
        4,
    )?;
    let x9735: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x9731, x9731, 64), x3, 64), x3, 64),
            x9697,
            64
        ),
        x9697,
        64
    );
    let x9736: BytePoly_34 = bigint_nondet_quot!(ctx, x9735, x3, 34);
    let x9737: BytePoly_32 = bigint_nondet_rem!(ctx, x9735, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9736, x3, 66), x9737, 66),
            x9735,
            66
        ),
        276359,
        4,
    )?;
    let x9738: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x9731, x9737, 64), 64), x3, 64),
            x9700,
            64
        ),
        bigint_mul!(x9731, x9697, 64),
        64
    );
    let x9739: BytePoly_34 = bigint_nondet_quot!(ctx, x9738, x3, 34);
    let x9740: BytePoly_32 = bigint_nondet_rem!(ctx, x9738, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9739, x3, 66), x9740, 66),
            x9738,
            66
        ),
        276359,
        4,
    )?;
    let x9741: BytePoly_1 = bigint_nondet_rem!(ctx, x9702, x4, 1);
    let x9742: BytePoly_32 = bigint_nondet_quot!(ctx, x9702, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9742, x4, 33), x9741, 33),
            x9702,
            33
        ),
        260103,
        4,
    )?;
    let x9743: BytePoly_1 = bigint_sub!(x5, x9741, 1);
    eqz(ctx, &bigint_mul!(x9741, x9743, 2), 8131, 2)?;
    let x9744: BytePoly_32 = bigint_add!(bigint_sub!(x9740, x9726, 32), x3, 32);
    let x9745: BytePoly_32 = bigint_add!(bigint_sub!(x9737, x9724, 32), x3, 32);
    let x9746: BytePoly_32 = bigint_nondet_inv!(ctx, x9745, x3, 32);
    let x9747: BytePoly_64 = bigint_mul!(x9745, x9746, 64);
    let x9748: BytePoly_34 = bigint_nondet_quot!(ctx, x9747, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x9747, bigint_mul!(x9748, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x9749: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x9744, x9746, 64), x3, 32);
    let x9750: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x9749, x9745, 64), x9744, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x9751: BytePoly_34 = bigint_nondet_quot!(ctx, x9750, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x9750, bigint_mul!(x9751, x3, 66), 66),
        276359,
        4,
    )?;
    let x9752: BytePoly_64 = bigint_mul!(x9749, x9749, 64);
    let x9753: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x9752, x9724, 64), x3, 64),
            x9737,
            64
        ),
        x3,
        64
    );
    let x9754: BytePoly_34 = bigint_nondet_quot!(ctx, x9753, x3, 34);
    let x9755: BytePoly_32 = bigint_nondet_rem!(ctx, x9753, x3, 32);
    let x9756: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x9749, x9755, 64),
                        bigint_add!(
                            bigint_sub!(x9726, bigint_mul!(x9749, x9724, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x9757: BytePoly_34 = bigint_nondet_quot!(ctx, x9756, x3, 34);
    let x9758: BytePoly_32 = bigint_nondet_rem!(ctx, x9756, x3, 32);
    let x9759: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x9752, bigint_mul!(x9754, x3, 66), 66),
                        x9724,
                        66
                    ),
                    x9737,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x9755,
        66
    );
    eqz(ctx, &x9759, 276359, 4)?;
    let x9760: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x9757, x3, 66), x9758, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x9749, bigint_sub!(x9724, x9755, 32), 64),
                        x9726,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x9760, 276359, 4)?;
    let x9761: BytePoly_33 = bigint_add!(
        bigint_mul!(x9755, x9741, 33),
        bigint_mul!(x9724, x9743, 33),
        33
    );
    let x9762: BytePoly_33 = bigint_add!(
        bigint_mul!(x9758, x9741, 33),
        bigint_mul!(x9726, x9743, 33),
        33
    );
    let x9763: BytePoly_3 = bigint_nondet_quot!(ctx, x9761, x3, 3);
    let x9764: BytePoly_32 = bigint_nondet_rem!(ctx, x9761, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9763, x3, 35), x9764, 35),
            x9761,
            35
        ),
        260103,
        4,
    )?;
    let x9765: BytePoly_3 = bigint_nondet_quot!(ctx, x9762, x3, 3);
    let x9766: BytePoly_32 = bigint_nondet_rem!(ctx, x9762, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9765, x3, 35), x9766, 35),
            x9762,
            35
        ),
        260103,
        4,
    )?;
    let x9767: BytePoly_64 = bigint_mul!(x9737, x9737, 64);
    let x9768: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x9767, x9767, 64), x9767, 64),
        x2,
        64
    );
    let x9769: BytePoly_64 = bigint_add!(x48, x9768, 64);
    let x9770: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x9740, x9740, 32), x3, 32);
    let x9771: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x9768, x9770, 96), x3, 32);
    let x9772: BytePoly_64 = bigint_mul!(x9740, x9771, 64);
    let x9773: BytePoly_64 = bigint_add!(x9772, x9772, 64);
    let x9774: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9769, x9773, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9774, x3, 66), x9773, 66),
            x9769,
            66
        ),
        276359,
        4,
    )?;
    let x9775: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x9771, x9771, 64), x3, 64), x3, 64),
            x9737,
            64
        ),
        x9737,
        64
    );
    let x9776: BytePoly_34 = bigint_nondet_quot!(ctx, x9775, x3, 34);
    let x9777: BytePoly_32 = bigint_nondet_rem!(ctx, x9775, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9776, x3, 66), x9777, 66),
            x9775,
            66
        ),
        276359,
        4,
    )?;
    let x9778: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x9771, x9777, 64), 64), x3, 64),
            x9740,
            64
        ),
        bigint_mul!(x9771, x9737, 64),
        64
    );
    let x9779: BytePoly_34 = bigint_nondet_quot!(ctx, x9778, x3, 34);
    let x9780: BytePoly_32 = bigint_nondet_rem!(ctx, x9778, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9779, x3, 66), x9780, 66),
            x9778,
            66
        ),
        276359,
        4,
    )?;
    let x9781: BytePoly_1 = bigint_nondet_rem!(ctx, x9742, x4, 1);
    let x9782: BytePoly_32 = bigint_nondet_quot!(ctx, x9742, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9782, x4, 33), x9781, 33),
            x9742,
            33
        ),
        260103,
        4,
    )?;
    let x9783: BytePoly_1 = bigint_sub!(x5, x9781, 1);
    eqz(ctx, &bigint_mul!(x9781, x9783, 2), 8131, 2)?;
    let x9784: BytePoly_32 = bigint_add!(bigint_sub!(x9780, x9766, 32), x3, 32);
    let x9785: BytePoly_32 = bigint_add!(bigint_sub!(x9777, x9764, 32), x3, 32);
    let x9786: BytePoly_32 = bigint_nondet_inv!(ctx, x9785, x3, 32);
    let x9787: BytePoly_64 = bigint_mul!(x9785, x9786, 64);
    let x9788: BytePoly_34 = bigint_nondet_quot!(ctx, x9787, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x9787, bigint_mul!(x9788, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x9789: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x9784, x9786, 64), x3, 32);
    let x9790: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x9789, x9785, 64), x9784, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x9791: BytePoly_34 = bigint_nondet_quot!(ctx, x9790, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x9790, bigint_mul!(x9791, x3, 66), 66),
        276359,
        4,
    )?;
    let x9792: BytePoly_64 = bigint_mul!(x9789, x9789, 64);
    let x9793: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x9792, x9764, 64), x3, 64),
            x9777,
            64
        ),
        x3,
        64
    );
    let x9794: BytePoly_34 = bigint_nondet_quot!(ctx, x9793, x3, 34);
    let x9795: BytePoly_32 = bigint_nondet_rem!(ctx, x9793, x3, 32);
    let x9796: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x9789, x9795, 64),
                        bigint_add!(
                            bigint_sub!(x9766, bigint_mul!(x9789, x9764, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x9797: BytePoly_34 = bigint_nondet_quot!(ctx, x9796, x3, 34);
    let x9798: BytePoly_32 = bigint_nondet_rem!(ctx, x9796, x3, 32);
    let x9799: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x9792, bigint_mul!(x9794, x3, 66), 66),
                        x9764,
                        66
                    ),
                    x9777,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x9795,
        66
    );
    eqz(ctx, &x9799, 276359, 4)?;
    let x9800: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x9797, x3, 66), x9798, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x9789, bigint_sub!(x9764, x9795, 32), 64),
                        x9766,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x9800, 276359, 4)?;
    let x9801: BytePoly_33 = bigint_add!(
        bigint_mul!(x9795, x9781, 33),
        bigint_mul!(x9764, x9783, 33),
        33
    );
    let x9802: BytePoly_33 = bigint_add!(
        bigint_mul!(x9798, x9781, 33),
        bigint_mul!(x9766, x9783, 33),
        33
    );
    let x9803: BytePoly_3 = bigint_nondet_quot!(ctx, x9801, x3, 3);
    let x9804: BytePoly_32 = bigint_nondet_rem!(ctx, x9801, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9803, x3, 35), x9804, 35),
            x9801,
            35
        ),
        260103,
        4,
    )?;
    let x9805: BytePoly_3 = bigint_nondet_quot!(ctx, x9802, x3, 3);
    let x9806: BytePoly_32 = bigint_nondet_rem!(ctx, x9802, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9805, x3, 35), x9806, 35),
            x9802,
            35
        ),
        260103,
        4,
    )?;
    let x9807: BytePoly_64 = bigint_mul!(x9777, x9777, 64);
    let x9808: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x9807, x9807, 64), x9807, 64),
        x2,
        64
    );
    let x9809: BytePoly_64 = bigint_add!(x48, x9808, 64);
    let x9810: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x9780, x9780, 32), x3, 32);
    let x9811: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x9808, x9810, 96), x3, 32);
    let x9812: BytePoly_64 = bigint_mul!(x9780, x9811, 64);
    let x9813: BytePoly_64 = bigint_add!(x9812, x9812, 64);
    let x9814: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9809, x9813, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9814, x3, 66), x9813, 66),
            x9809,
            66
        ),
        276359,
        4,
    )?;
    let x9815: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x9811, x9811, 64), x3, 64), x3, 64),
            x9777,
            64
        ),
        x9777,
        64
    );
    let x9816: BytePoly_34 = bigint_nondet_quot!(ctx, x9815, x3, 34);
    let x9817: BytePoly_32 = bigint_nondet_rem!(ctx, x9815, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9816, x3, 66), x9817, 66),
            x9815,
            66
        ),
        276359,
        4,
    )?;
    let x9818: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x9811, x9817, 64), 64), x3, 64),
            x9780,
            64
        ),
        bigint_mul!(x9811, x9777, 64),
        64
    );
    let x9819: BytePoly_34 = bigint_nondet_quot!(ctx, x9818, x3, 34);
    let x9820: BytePoly_32 = bigint_nondet_rem!(ctx, x9818, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9819, x3, 66), x9820, 66),
            x9818,
            66
        ),
        276359,
        4,
    )?;
    let x9821: BytePoly_1 = bigint_nondet_rem!(ctx, x9782, x4, 1);
    let x9822: BytePoly_32 = bigint_nondet_quot!(ctx, x9782, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9822, x4, 33), x9821, 33),
            x9782,
            33
        ),
        260103,
        4,
    )?;
    let x9823: BytePoly_1 = bigint_sub!(x5, x9821, 1);
    eqz(ctx, &bigint_mul!(x9821, x9823, 2), 8131, 2)?;
    let x9824: BytePoly_32 = bigint_add!(bigint_sub!(x9820, x9806, 32), x3, 32);
    let x9825: BytePoly_32 = bigint_add!(bigint_sub!(x9817, x9804, 32), x3, 32);
    let x9826: BytePoly_32 = bigint_nondet_inv!(ctx, x9825, x3, 32);
    let x9827: BytePoly_64 = bigint_mul!(x9825, x9826, 64);
    let x9828: BytePoly_34 = bigint_nondet_quot!(ctx, x9827, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x9827, bigint_mul!(x9828, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x9829: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x9824, x9826, 64), x3, 32);
    let x9830: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x9829, x9825, 64), x9824, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x9831: BytePoly_34 = bigint_nondet_quot!(ctx, x9830, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x9830, bigint_mul!(x9831, x3, 66), 66),
        276359,
        4,
    )?;
    let x9832: BytePoly_64 = bigint_mul!(x9829, x9829, 64);
    let x9833: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x9832, x9804, 64), x3, 64),
            x9817,
            64
        ),
        x3,
        64
    );
    let x9834: BytePoly_34 = bigint_nondet_quot!(ctx, x9833, x3, 34);
    let x9835: BytePoly_32 = bigint_nondet_rem!(ctx, x9833, x3, 32);
    let x9836: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x9829, x9835, 64),
                        bigint_add!(
                            bigint_sub!(x9806, bigint_mul!(x9829, x9804, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x9837: BytePoly_34 = bigint_nondet_quot!(ctx, x9836, x3, 34);
    let x9838: BytePoly_32 = bigint_nondet_rem!(ctx, x9836, x3, 32);
    let x9839: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x9832, bigint_mul!(x9834, x3, 66), 66),
                        x9804,
                        66
                    ),
                    x9817,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x9835,
        66
    );
    eqz(ctx, &x9839, 276359, 4)?;
    let x9840: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x9837, x3, 66), x9838, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x9829, bigint_sub!(x9804, x9835, 32), 64),
                        x9806,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x9840, 276359, 4)?;
    let x9841: BytePoly_33 = bigint_add!(
        bigint_mul!(x9835, x9821, 33),
        bigint_mul!(x9804, x9823, 33),
        33
    );
    let x9842: BytePoly_33 = bigint_add!(
        bigint_mul!(x9838, x9821, 33),
        bigint_mul!(x9806, x9823, 33),
        33
    );
    let x9843: BytePoly_3 = bigint_nondet_quot!(ctx, x9841, x3, 3);
    let x9844: BytePoly_32 = bigint_nondet_rem!(ctx, x9841, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9843, x3, 35), x9844, 35),
            x9841,
            35
        ),
        260103,
        4,
    )?;
    let x9845: BytePoly_3 = bigint_nondet_quot!(ctx, x9842, x3, 3);
    let x9846: BytePoly_32 = bigint_nondet_rem!(ctx, x9842, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9845, x3, 35), x9846, 35),
            x9842,
            35
        ),
        260103,
        4,
    )?;
    let x9847: BytePoly_64 = bigint_mul!(x9817, x9817, 64);
    let x9848: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x9847, x9847, 64), x9847, 64),
        x2,
        64
    );
    let x9849: BytePoly_64 = bigint_add!(x48, x9848, 64);
    let x9850: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x9820, x9820, 32), x3, 32);
    let x9851: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x9848, x9850, 96), x3, 32);
    let x9852: BytePoly_64 = bigint_mul!(x9820, x9851, 64);
    let x9853: BytePoly_64 = bigint_add!(x9852, x9852, 64);
    let x9854: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9849, x9853, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9854, x3, 66), x9853, 66),
            x9849,
            66
        ),
        276359,
        4,
    )?;
    let x9855: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x9851, x9851, 64), x3, 64), x3, 64),
            x9817,
            64
        ),
        x9817,
        64
    );
    let x9856: BytePoly_34 = bigint_nondet_quot!(ctx, x9855, x3, 34);
    let x9857: BytePoly_32 = bigint_nondet_rem!(ctx, x9855, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9856, x3, 66), x9857, 66),
            x9855,
            66
        ),
        276359,
        4,
    )?;
    let x9858: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x9851, x9857, 64), 64), x3, 64),
            x9820,
            64
        ),
        bigint_mul!(x9851, x9817, 64),
        64
    );
    let x9859: BytePoly_34 = bigint_nondet_quot!(ctx, x9858, x3, 34);
    let x9860: BytePoly_32 = bigint_nondet_rem!(ctx, x9858, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9859, x3, 66), x9860, 66),
            x9858,
            66
        ),
        276359,
        4,
    )?;
    let x9861: BytePoly_1 = bigint_nondet_rem!(ctx, x9822, x4, 1);
    let x9862: BytePoly_32 = bigint_nondet_quot!(ctx, x9822, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9862, x4, 33), x9861, 33),
            x9822,
            33
        ),
        260103,
        4,
    )?;
    let x9863: BytePoly_1 = bigint_sub!(x5, x9861, 1);
    eqz(ctx, &bigint_mul!(x9861, x9863, 2), 8131, 2)?;
    let x9864: BytePoly_32 = bigint_add!(bigint_sub!(x9860, x9846, 32), x3, 32);
    let x9865: BytePoly_32 = bigint_add!(bigint_sub!(x9857, x9844, 32), x3, 32);
    let x9866: BytePoly_32 = bigint_nondet_inv!(ctx, x9865, x3, 32);
    let x9867: BytePoly_64 = bigint_mul!(x9865, x9866, 64);
    let x9868: BytePoly_34 = bigint_nondet_quot!(ctx, x9867, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x9867, bigint_mul!(x9868, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x9869: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x9864, x9866, 64), x3, 32);
    let x9870: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x9869, x9865, 64), x9864, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x9871: BytePoly_34 = bigint_nondet_quot!(ctx, x9870, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x9870, bigint_mul!(x9871, x3, 66), 66),
        276359,
        4,
    )?;
    let x9872: BytePoly_64 = bigint_mul!(x9869, x9869, 64);
    let x9873: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x9872, x9844, 64), x3, 64),
            x9857,
            64
        ),
        x3,
        64
    );
    let x9874: BytePoly_34 = bigint_nondet_quot!(ctx, x9873, x3, 34);
    let x9875: BytePoly_32 = bigint_nondet_rem!(ctx, x9873, x3, 32);
    let x9876: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x9869, x9875, 64),
                        bigint_add!(
                            bigint_sub!(x9846, bigint_mul!(x9869, x9844, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x9877: BytePoly_34 = bigint_nondet_quot!(ctx, x9876, x3, 34);
    let x9878: BytePoly_32 = bigint_nondet_rem!(ctx, x9876, x3, 32);
    let x9879: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x9872, bigint_mul!(x9874, x3, 66), 66),
                        x9844,
                        66
                    ),
                    x9857,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x9875,
        66
    );
    eqz(ctx, &x9879, 276359, 4)?;
    let x9880: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x9877, x3, 66), x9878, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x9869, bigint_sub!(x9844, x9875, 32), 64),
                        x9846,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x9880, 276359, 4)?;
    let x9881: BytePoly_33 = bigint_add!(
        bigint_mul!(x9875, x9861, 33),
        bigint_mul!(x9844, x9863, 33),
        33
    );
    let x9882: BytePoly_33 = bigint_add!(
        bigint_mul!(x9878, x9861, 33),
        bigint_mul!(x9846, x9863, 33),
        33
    );
    let x9883: BytePoly_3 = bigint_nondet_quot!(ctx, x9881, x3, 3);
    let x9884: BytePoly_32 = bigint_nondet_rem!(ctx, x9881, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9883, x3, 35), x9884, 35),
            x9881,
            35
        ),
        260103,
        4,
    )?;
    let x9885: BytePoly_3 = bigint_nondet_quot!(ctx, x9882, x3, 3);
    let x9886: BytePoly_32 = bigint_nondet_rem!(ctx, x9882, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9885, x3, 35), x9886, 35),
            x9882,
            35
        ),
        260103,
        4,
    )?;
    let x9887: BytePoly_64 = bigint_mul!(x9857, x9857, 64);
    let x9888: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x9887, x9887, 64), x9887, 64),
        x2,
        64
    );
    let x9889: BytePoly_64 = bigint_add!(x48, x9888, 64);
    let x9890: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x9860, x9860, 32), x3, 32);
    let x9891: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x9888, x9890, 96), x3, 32);
    let x9892: BytePoly_64 = bigint_mul!(x9860, x9891, 64);
    let x9893: BytePoly_64 = bigint_add!(x9892, x9892, 64);
    let x9894: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9889, x9893, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9894, x3, 66), x9893, 66),
            x9889,
            66
        ),
        276359,
        4,
    )?;
    let x9895: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x9891, x9891, 64), x3, 64), x3, 64),
            x9857,
            64
        ),
        x9857,
        64
    );
    let x9896: BytePoly_34 = bigint_nondet_quot!(ctx, x9895, x3, 34);
    let x9897: BytePoly_32 = bigint_nondet_rem!(ctx, x9895, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9896, x3, 66), x9897, 66),
            x9895,
            66
        ),
        276359,
        4,
    )?;
    let x9898: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x9891, x9897, 64), 64), x3, 64),
            x9860,
            64
        ),
        bigint_mul!(x9891, x9857, 64),
        64
    );
    let x9899: BytePoly_34 = bigint_nondet_quot!(ctx, x9898, x3, 34);
    let x9900: BytePoly_32 = bigint_nondet_rem!(ctx, x9898, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9899, x3, 66), x9900, 66),
            x9898,
            66
        ),
        276359,
        4,
    )?;
    let x9901: BytePoly_1 = bigint_nondet_rem!(ctx, x9862, x4, 1);
    let x9902: BytePoly_32 = bigint_nondet_quot!(ctx, x9862, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9902, x4, 33), x9901, 33),
            x9862,
            33
        ),
        260103,
        4,
    )?;
    let x9903: BytePoly_1 = bigint_sub!(x5, x9901, 1);
    eqz(ctx, &bigint_mul!(x9901, x9903, 2), 8131, 2)?;
    let x9904: BytePoly_32 = bigint_add!(bigint_sub!(x9900, x9886, 32), x3, 32);
    let x9905: BytePoly_32 = bigint_add!(bigint_sub!(x9897, x9884, 32), x3, 32);
    let x9906: BytePoly_32 = bigint_nondet_inv!(ctx, x9905, x3, 32);
    let x9907: BytePoly_64 = bigint_mul!(x9905, x9906, 64);
    let x9908: BytePoly_34 = bigint_nondet_quot!(ctx, x9907, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x9907, bigint_mul!(x9908, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x9909: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x9904, x9906, 64), x3, 32);
    let x9910: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x9909, x9905, 64), x9904, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x9911: BytePoly_34 = bigint_nondet_quot!(ctx, x9910, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x9910, bigint_mul!(x9911, x3, 66), 66),
        276359,
        4,
    )?;
    let x9912: BytePoly_64 = bigint_mul!(x9909, x9909, 64);
    let x9913: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x9912, x9884, 64), x3, 64),
            x9897,
            64
        ),
        x3,
        64
    );
    let x9914: BytePoly_34 = bigint_nondet_quot!(ctx, x9913, x3, 34);
    let x9915: BytePoly_32 = bigint_nondet_rem!(ctx, x9913, x3, 32);
    let x9916: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x9909, x9915, 64),
                        bigint_add!(
                            bigint_sub!(x9886, bigint_mul!(x9909, x9884, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x9917: BytePoly_34 = bigint_nondet_quot!(ctx, x9916, x3, 34);
    let x9918: BytePoly_32 = bigint_nondet_rem!(ctx, x9916, x3, 32);
    let x9919: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x9912, bigint_mul!(x9914, x3, 66), 66),
                        x9884,
                        66
                    ),
                    x9897,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x9915,
        66
    );
    eqz(ctx, &x9919, 276359, 4)?;
    let x9920: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x9917, x3, 66), x9918, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x9909, bigint_sub!(x9884, x9915, 32), 64),
                        x9886,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x9920, 276359, 4)?;
    let x9921: BytePoly_33 = bigint_add!(
        bigint_mul!(x9915, x9901, 33),
        bigint_mul!(x9884, x9903, 33),
        33
    );
    let x9922: BytePoly_33 = bigint_add!(
        bigint_mul!(x9918, x9901, 33),
        bigint_mul!(x9886, x9903, 33),
        33
    );
    let x9923: BytePoly_3 = bigint_nondet_quot!(ctx, x9921, x3, 3);
    let x9924: BytePoly_32 = bigint_nondet_rem!(ctx, x9921, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9923, x3, 35), x9924, 35),
            x9921,
            35
        ),
        260103,
        4,
    )?;
    let x9925: BytePoly_3 = bigint_nondet_quot!(ctx, x9922, x3, 3);
    let x9926: BytePoly_32 = bigint_nondet_rem!(ctx, x9922, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9925, x3, 35), x9926, 35),
            x9922,
            35
        ),
        260103,
        4,
    )?;
    let x9927: BytePoly_64 = bigint_mul!(x9897, x9897, 64);
    let x9928: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x9927, x9927, 64), x9927, 64),
        x2,
        64
    );
    let x9929: BytePoly_64 = bigint_add!(x48, x9928, 64);
    let x9930: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x9900, x9900, 32), x3, 32);
    let x9931: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x9928, x9930, 96), x3, 32);
    let x9932: BytePoly_64 = bigint_mul!(x9900, x9931, 64);
    let x9933: BytePoly_64 = bigint_add!(x9932, x9932, 64);
    let x9934: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9929, x9933, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9934, x3, 66), x9933, 66),
            x9929,
            66
        ),
        276359,
        4,
    )?;
    let x9935: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x9931, x9931, 64), x3, 64), x3, 64),
            x9897,
            64
        ),
        x9897,
        64
    );
    let x9936: BytePoly_34 = bigint_nondet_quot!(ctx, x9935, x3, 34);
    let x9937: BytePoly_32 = bigint_nondet_rem!(ctx, x9935, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9936, x3, 66), x9937, 66),
            x9935,
            66
        ),
        276359,
        4,
    )?;
    let x9938: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x9931, x9937, 64), 64), x3, 64),
            x9900,
            64
        ),
        bigint_mul!(x9931, x9897, 64),
        64
    );
    let x9939: BytePoly_34 = bigint_nondet_quot!(ctx, x9938, x3, 34);
    let x9940: BytePoly_32 = bigint_nondet_rem!(ctx, x9938, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9939, x3, 66), x9940, 66),
            x9938,
            66
        ),
        276359,
        4,
    )?;
    let x9941: BytePoly_1 = bigint_nondet_rem!(ctx, x9902, x4, 1);
    let x9942: BytePoly_32 = bigint_nondet_quot!(ctx, x9902, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9942, x4, 33), x9941, 33),
            x9902,
            33
        ),
        260103,
        4,
    )?;
    let x9943: BytePoly_1 = bigint_sub!(x5, x9941, 1);
    eqz(ctx, &bigint_mul!(x9941, x9943, 2), 8131, 2)?;
    let x9944: BytePoly_32 = bigint_add!(bigint_sub!(x9940, x9926, 32), x3, 32);
    let x9945: BytePoly_32 = bigint_add!(bigint_sub!(x9937, x9924, 32), x3, 32);
    let x9946: BytePoly_32 = bigint_nondet_inv!(ctx, x9945, x3, 32);
    let x9947: BytePoly_64 = bigint_mul!(x9945, x9946, 64);
    let x9948: BytePoly_34 = bigint_nondet_quot!(ctx, x9947, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x9947, bigint_mul!(x9948, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x9949: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x9944, x9946, 64), x3, 32);
    let x9950: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x9949, x9945, 64), x9944, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x9951: BytePoly_34 = bigint_nondet_quot!(ctx, x9950, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x9950, bigint_mul!(x9951, x3, 66), 66),
        276359,
        4,
    )?;
    let x9952: BytePoly_64 = bigint_mul!(x9949, x9949, 64);
    let x9953: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x9952, x9924, 64), x3, 64),
            x9937,
            64
        ),
        x3,
        64
    );
    let x9954: BytePoly_34 = bigint_nondet_quot!(ctx, x9953, x3, 34);
    let x9955: BytePoly_32 = bigint_nondet_rem!(ctx, x9953, x3, 32);
    let x9956: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x9949, x9955, 64),
                        bigint_add!(
                            bigint_sub!(x9926, bigint_mul!(x9949, x9924, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x9957: BytePoly_34 = bigint_nondet_quot!(ctx, x9956, x3, 34);
    let x9958: BytePoly_32 = bigint_nondet_rem!(ctx, x9956, x3, 32);
    let x9959: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x9952, bigint_mul!(x9954, x3, 66), 66),
                        x9924,
                        66
                    ),
                    x9937,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x9955,
        66
    );
    eqz(ctx, &x9959, 276359, 4)?;
    let x9960: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x9957, x3, 66), x9958, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x9949, bigint_sub!(x9924, x9955, 32), 64),
                        x9926,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x9960, 276359, 4)?;
    let x9961: BytePoly_33 = bigint_add!(
        bigint_mul!(x9955, x9941, 33),
        bigint_mul!(x9924, x9943, 33),
        33
    );
    let x9962: BytePoly_33 = bigint_add!(
        bigint_mul!(x9958, x9941, 33),
        bigint_mul!(x9926, x9943, 33),
        33
    );
    let x9963: BytePoly_3 = bigint_nondet_quot!(ctx, x9961, x3, 3);
    let x9964: BytePoly_32 = bigint_nondet_rem!(ctx, x9961, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9963, x3, 35), x9964, 35),
            x9961,
            35
        ),
        260103,
        4,
    )?;
    let x9965: BytePoly_3 = bigint_nondet_quot!(ctx, x9962, x3, 3);
    let x9966: BytePoly_32 = bigint_nondet_rem!(ctx, x9962, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9965, x3, 35), x9966, 35),
            x9962,
            35
        ),
        260103,
        4,
    )?;
    let x9967: BytePoly_64 = bigint_mul!(x9937, x9937, 64);
    let x9968: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x9967, x9967, 64), x9967, 64),
        x2,
        64
    );
    let x9969: BytePoly_64 = bigint_add!(x48, x9968, 64);
    let x9970: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x9940, x9940, 32), x3, 32);
    let x9971: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x9968, x9970, 96), x3, 32);
    let x9972: BytePoly_64 = bigint_mul!(x9940, x9971, 64);
    let x9973: BytePoly_64 = bigint_add!(x9972, x9972, 64);
    let x9974: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9969, x9973, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9974, x3, 66), x9973, 66),
            x9969,
            66
        ),
        276359,
        4,
    )?;
    let x9975: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x9971, x9971, 64), x3, 64), x3, 64),
            x9937,
            64
        ),
        x9937,
        64
    );
    let x9976: BytePoly_34 = bigint_nondet_quot!(ctx, x9975, x3, 34);
    let x9977: BytePoly_32 = bigint_nondet_rem!(ctx, x9975, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9976, x3, 66), x9977, 66),
            x9975,
            66
        ),
        276359,
        4,
    )?;
    let x9978: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x16, bigint_mul!(x9971, x9977, 64), 64), x3, 64),
            x9940,
            64
        ),
        bigint_mul!(x9971, x9937, 64),
        64
    );
    let x9979: BytePoly_34 = bigint_nondet_quot!(ctx, x9978, x3, 34);
    let x9980: BytePoly_32 = bigint_nondet_rem!(ctx, x9978, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9979, x3, 66), x9980, 66),
            x9978,
            66
        ),
        276359,
        4,
    )?;
    let x9981: BytePoly_1 = bigint_nondet_rem!(ctx, x9942, x4, 1);
    let x9982: BytePoly_32 = bigint_nondet_quot!(ctx, x9942, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x9982, x4, 33), x9981, 33),
            x9942,
            33
        ),
        260103,
        4,
    )?;
    let x9983: BytePoly_1 = bigint_sub!(x5, x9981, 1);
    eqz(ctx, &bigint_mul!(x9981, x9983, 2), 8131, 2)?;
    let x9984: BytePoly_32 = bigint_add!(bigint_sub!(x9980, x9966, 32), x3, 32);
    let x9985: BytePoly_32 = bigint_add!(bigint_sub!(x9977, x9964, 32), x3, 32);
    let x9986: BytePoly_32 = bigint_nondet_inv!(ctx, x9985, x3, 32);
    let x9987: BytePoly_64 = bigint_mul!(x9985, x9986, 64);
    let x9988: BytePoly_34 = bigint_nondet_quot!(ctx, x9987, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x9987, bigint_mul!(x9988, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x9989: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x9984, x9986, 64), x3, 32);
    let x9990: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x9989, x9985, 64), x9984, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x9991: BytePoly_34 = bigint_nondet_quot!(ctx, x9990, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x9990, bigint_mul!(x9991, x3, 66), 66),
        276359,
        4,
    )?;
    let x9992: BytePoly_64 = bigint_mul!(x9989, x9989, 64);
    let x9993: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x9992, x9964, 64), x3, 64),
            x9977,
            64
        ),
        x3,
        64
    );
    let x9994: BytePoly_34 = bigint_nondet_quot!(ctx, x9993, x3, 34);
    let x9995: BytePoly_32 = bigint_nondet_rem!(ctx, x9993, x3, 32);
    let x9996: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x9989, x9995, 64),
                        bigint_add!(
                            bigint_sub!(x9966, bigint_mul!(x9989, x9964, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x9997: BytePoly_34 = bigint_nondet_quot!(ctx, x9996, x3, 34);
    let x9998: BytePoly_32 = bigint_nondet_rem!(ctx, x9996, x3, 32);
    let x9999: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x9992, bigint_mul!(x9994, x3, 66), 66),
                        x9964,
                        66
                    ),
                    x9977,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x9995,
        66
    );
    eqz(ctx, &x9999, 276359, 4)?;
    let x10000: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x9997, x3, 66), x9998, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x9989, bigint_sub!(x9964, x9995, 32), 64),
                        x9966,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x10000, 276359, 4)?;
    let x10001: BytePoly_33 = bigint_add!(
        bigint_mul!(x9995, x9981, 33),
        bigint_mul!(x9964, x9983, 33),
        33
    );
    let x10002: BytePoly_33 = bigint_add!(
        bigint_mul!(x9998, x9981, 33),
        bigint_mul!(x9966, x9983, 33),
        33
    );
    let x10003: BytePoly_3 = bigint_nondet_quot!(ctx, x10001, x3, 3);
    let x10004: BytePoly_32 = bigint_nondet_rem!(ctx, x10001, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x10003, x3, 35), x10004, 35),
            x10001,
            35
        ),
        260103,
        4,
    )?;
    let x10005: BytePoly_3 = bigint_nondet_quot!(ctx, x10002, x3, 3);
    let x10006: BytePoly_32 = bigint_nondet_rem!(ctx, x10002, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x10005, x3, 35), x10006, 35),
            x10002,
            35
        ),
        260103,
        4,
    )?;
    let x10007: BytePoly_64 = bigint_mul!(x9977, x9977, 64);
    let x10008: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x10007, x10007, 64), x10007, 64),
        x2,
        64
    );
    let x10009: BytePoly_64 = bigint_add!(x48, x10008, 64);
    let x10010: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x9980, x9980, 32), x3, 32);
    let x10011: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x10008, x10010, 96), x3, 32);
    let x10012: BytePoly_64 = bigint_mul!(x9980, x10011, 64);
    let x10013: BytePoly_64 = bigint_add!(x10012, x10012, 64);
    let x10014: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x10009, x10013, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x10014, x3, 66), x10013, 66),
            x10009,
            66
        ),
        276359,
        4,
    )?;
    let x10015: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x10011, x10011, 64), x3, 64), x3, 64),
            x9977,
            64
        ),
        x9977,
        64
    );
    let x10016: BytePoly_34 = bigint_nondet_quot!(ctx, x10015, x3, 34);
    let x10017: BytePoly_32 = bigint_nondet_rem!(ctx, x10015, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x10016, x3, 66), x10017, 66),
            x10015,
            66
        ),
        276359,
        4,
    )?;
    let x10018: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(x16, bigint_mul!(x10011, x10017, 64), 64),
                x3,
                64
            ),
            x9980,
            64
        ),
        bigint_mul!(x10011, x9977, 64),
        64
    );
    let x10019: BytePoly_34 = bigint_nondet_quot!(ctx, x10018, x3, 34);
    let x10020: BytePoly_32 = bigint_nondet_rem!(ctx, x10018, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x10019, x3, 66), x10020, 66),
            x10018,
            66
        ),
        276359,
        4,
    )?;
    let x10021: BytePoly_1 = bigint_nondet_rem!(ctx, x9982, x4, 1);
    let x10022: BytePoly_32 = bigint_nondet_quot!(ctx, x9982, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x10022, x4, 33), x10021, 33),
            x9982,
            33
        ),
        260103,
        4,
    )?;
    let x10023: BytePoly_1 = bigint_sub!(x5, x10021, 1);
    eqz(ctx, &bigint_mul!(x10021, x10023, 2), 8131, 2)?;
    let x10024: BytePoly_32 = bigint_add!(bigint_sub!(x10020, x10006, 32), x3, 32);
    let x10025: BytePoly_32 = bigint_add!(bigint_sub!(x10017, x10004, 32), x3, 32);
    let x10026: BytePoly_32 = bigint_nondet_inv!(ctx, x10025, x3, 32);
    let x10027: BytePoly_64 = bigint_mul!(x10025, x10026, 64);
    let x10028: BytePoly_34 = bigint_nondet_quot!(ctx, x10027, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x10027, bigint_mul!(x10028, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x10029: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x10024, x10026, 64), x3, 32);
    let x10030: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x10029, x10025, 64), x10024, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x10031: BytePoly_34 = bigint_nondet_quot!(ctx, x10030, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x10030, bigint_mul!(x10031, x3, 66), 66),
        276359,
        4,
    )?;
    let x10032: BytePoly_64 = bigint_mul!(x10029, x10029, 64);
    let x10033: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x10032, x10004, 64), x3, 64),
            x10017,
            64
        ),
        x3,
        64
    );
    let x10034: BytePoly_34 = bigint_nondet_quot!(ctx, x10033, x3, 34);
    let x10035: BytePoly_32 = bigint_nondet_rem!(ctx, x10033, x3, 32);
    let x10036: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x10029, x10035, 64),
                        bigint_add!(
                            bigint_sub!(x10006, bigint_mul!(x10029, x10004, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x10037: BytePoly_34 = bigint_nondet_quot!(ctx, x10036, x3, 34);
    let x10038: BytePoly_32 = bigint_nondet_rem!(ctx, x10036, x3, 32);
    let x10039: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x10032, bigint_mul!(x10034, x3, 66), 66),
                        x10004,
                        66
                    ),
                    x10017,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x10035,
        66
    );
    eqz(ctx, &x10039, 276359, 4)?;
    let x10040: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x10037, x3, 66), x10038, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x10029, bigint_sub!(x10004, x10035, 32), 64),
                        x10006,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x10040, 276359, 4)?;
    let x10041: BytePoly_33 = bigint_add!(
        bigint_mul!(x10035, x10021, 33),
        bigint_mul!(x10004, x10023, 33),
        33
    );
    let x10042: BytePoly_33 = bigint_add!(
        bigint_mul!(x10038, x10021, 33),
        bigint_mul!(x10006, x10023, 33),
        33
    );
    let x10043: BytePoly_3 = bigint_nondet_quot!(ctx, x10041, x3, 3);
    let x10044: BytePoly_32 = bigint_nondet_rem!(ctx, x10041, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x10043, x3, 35), x10044, 35),
            x10041,
            35
        ),
        260103,
        4,
    )?;
    let x10045: BytePoly_3 = bigint_nondet_quot!(ctx, x10042, x3, 3);
    let x10046: BytePoly_32 = bigint_nondet_rem!(ctx, x10042, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x10045, x3, 35), x10046, 35),
            x10042,
            35
        ),
        260103,
        4,
    )?;
    let x10047: BytePoly_64 = bigint_mul!(x10017, x10017, 64);
    let x10048: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x10047, x10047, 64), x10047, 64),
        x2,
        64
    );
    let x10049: BytePoly_64 = bigint_add!(x48, x10048, 64);
    let x10050: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x10020, x10020, 32), x3, 32);
    let x10051: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x10048, x10050, 96), x3, 32);
    let x10052: BytePoly_64 = bigint_mul!(x10020, x10051, 64);
    let x10053: BytePoly_64 = bigint_add!(x10052, x10052, 64);
    let x10054: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x10049, x10053, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x10054, x3, 66), x10053, 66),
            x10049,
            66
        ),
        276359,
        4,
    )?;
    let x10055: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x10051, x10051, 64), x3, 64), x3, 64),
            x10017,
            64
        ),
        x10017,
        64
    );
    let x10056: BytePoly_34 = bigint_nondet_quot!(ctx, x10055, x3, 34);
    let x10057: BytePoly_32 = bigint_nondet_rem!(ctx, x10055, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x10056, x3, 66), x10057, 66),
            x10055,
            66
        ),
        276359,
        4,
    )?;
    let x10058: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(x16, bigint_mul!(x10051, x10057, 64), 64),
                x3,
                64
            ),
            x10020,
            64
        ),
        bigint_mul!(x10051, x10017, 64),
        64
    );
    let x10059: BytePoly_34 = bigint_nondet_quot!(ctx, x10058, x3, 34);
    let x10060: BytePoly_32 = bigint_nondet_rem!(ctx, x10058, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x10059, x3, 66), x10060, 66),
            x10058,
            66
        ),
        276359,
        4,
    )?;
    let x10061: BytePoly_1 = bigint_nondet_rem!(ctx, x10022, x4, 1);
    let x10062: BytePoly_32 = bigint_nondet_quot!(ctx, x10022, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x10062, x4, 33), x10061, 33),
            x10022,
            33
        ),
        260103,
        4,
    )?;
    let x10063: BytePoly_1 = bigint_sub!(x5, x10061, 1);
    eqz(ctx, &bigint_mul!(x10061, x10063, 2), 8131, 2)?;
    let x10064: BytePoly_32 = bigint_add!(bigint_sub!(x10060, x10046, 32), x3, 32);
    let x10065: BytePoly_32 = bigint_add!(bigint_sub!(x10057, x10044, 32), x3, 32);
    let x10066: BytePoly_32 = bigint_nondet_inv!(ctx, x10065, x3, 32);
    let x10067: BytePoly_64 = bigint_mul!(x10065, x10066, 64);
    let x10068: BytePoly_34 = bigint_nondet_quot!(ctx, x10067, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x10067, bigint_mul!(x10068, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x10069: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x10064, x10066, 64), x3, 32);
    let x10070: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x10069, x10065, 64), x10064, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x10071: BytePoly_34 = bigint_nondet_quot!(ctx, x10070, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x10070, bigint_mul!(x10071, x3, 66), 66),
        276359,
        4,
    )?;
    let x10072: BytePoly_64 = bigint_mul!(x10069, x10069, 64);
    let x10073: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x10072, x10044, 64), x3, 64),
            x10057,
            64
        ),
        x3,
        64
    );
    let x10074: BytePoly_34 = bigint_nondet_quot!(ctx, x10073, x3, 34);
    let x10075: BytePoly_32 = bigint_nondet_rem!(ctx, x10073, x3, 32);
    let x10076: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x10069, x10075, 64),
                        bigint_add!(
                            bigint_sub!(x10046, bigint_mul!(x10069, x10044, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x10077: BytePoly_34 = bigint_nondet_quot!(ctx, x10076, x3, 34);
    let x10078: BytePoly_32 = bigint_nondet_rem!(ctx, x10076, x3, 32);
    let x10079: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x10072, bigint_mul!(x10074, x3, 66), 66),
                        x10044,
                        66
                    ),
                    x10057,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x10075,
        66
    );
    eqz(ctx, &x10079, 276359, 4)?;
    let x10080: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x10077, x3, 66), x10078, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x10069, bigint_sub!(x10044, x10075, 32), 64),
                        x10046,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x10080, 276359, 4)?;
    let x10081: BytePoly_33 = bigint_add!(
        bigint_mul!(x10075, x10061, 33),
        bigint_mul!(x10044, x10063, 33),
        33
    );
    let x10082: BytePoly_33 = bigint_add!(
        bigint_mul!(x10078, x10061, 33),
        bigint_mul!(x10046, x10063, 33),
        33
    );
    let x10083: BytePoly_3 = bigint_nondet_quot!(ctx, x10081, x3, 3);
    let x10084: BytePoly_32 = bigint_nondet_rem!(ctx, x10081, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x10083, x3, 35), x10084, 35),
            x10081,
            35
        ),
        260103,
        4,
    )?;
    let x10085: BytePoly_3 = bigint_nondet_quot!(ctx, x10082, x3, 3);
    let x10086: BytePoly_32 = bigint_nondet_rem!(ctx, x10082, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x10085, x3, 35), x10086, 35),
            x10082,
            35
        ),
        260103,
        4,
    )?;
    let x10087: BytePoly_64 = bigint_mul!(x10057, x10057, 64);
    let x10088: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x10087, x10087, 64), x10087, 64),
        x2,
        64
    );
    let x10089: BytePoly_64 = bigint_add!(x48, x10088, 64);
    let x10090: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x10060, x10060, 32), x3, 32);
    let x10091: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x10088, x10090, 96), x3, 32);
    let x10092: BytePoly_64 = bigint_mul!(x10060, x10091, 64);
    let x10093: BytePoly_64 = bigint_add!(x10092, x10092, 64);
    let x10094: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x10089, x10093, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x10094, x3, 66), x10093, 66),
            x10089,
            66
        ),
        276359,
        4,
    )?;
    let x10095: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x10091, x10091, 64), x3, 64), x3, 64),
            x10057,
            64
        ),
        x10057,
        64
    );
    let x10096: BytePoly_34 = bigint_nondet_quot!(ctx, x10095, x3, 34);
    let x10097: BytePoly_32 = bigint_nondet_rem!(ctx, x10095, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x10096, x3, 66), x10097, 66),
            x10095,
            66
        ),
        276359,
        4,
    )?;
    let x10098: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(x16, bigint_mul!(x10091, x10097, 64), 64),
                x3,
                64
            ),
            x10060,
            64
        ),
        bigint_mul!(x10091, x10057, 64),
        64
    );
    let x10099: BytePoly_34 = bigint_nondet_quot!(ctx, x10098, x3, 34);
    let x10100: BytePoly_32 = bigint_nondet_rem!(ctx, x10098, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x10099, x3, 66), x10100, 66),
            x10098,
            66
        ),
        276359,
        4,
    )?;
    let x10101: BytePoly_1 = bigint_nondet_rem!(ctx, x10062, x4, 1);
    let x10102: BytePoly_32 = bigint_nondet_quot!(ctx, x10062, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x10102, x4, 33), x10101, 33),
            x10062,
            33
        ),
        260103,
        4,
    )?;
    let x10103: BytePoly_1 = bigint_sub!(x5, x10101, 1);
    eqz(ctx, &bigint_mul!(x10101, x10103, 2), 8131, 2)?;
    let x10104: BytePoly_32 = bigint_add!(bigint_sub!(x10100, x10086, 32), x3, 32);
    let x10105: BytePoly_32 = bigint_add!(bigint_sub!(x10097, x10084, 32), x3, 32);
    let x10106: BytePoly_32 = bigint_nondet_inv!(ctx, x10105, x3, 32);
    let x10107: BytePoly_64 = bigint_mul!(x10105, x10106, 64);
    let x10108: BytePoly_34 = bigint_nondet_quot!(ctx, x10107, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x10107, bigint_mul!(x10108, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x10109: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x10104, x10106, 64), x3, 32);
    let x10110: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x10109, x10105, 64), x10104, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x10111: BytePoly_34 = bigint_nondet_quot!(ctx, x10110, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x10110, bigint_mul!(x10111, x3, 66), 66),
        276359,
        4,
    )?;
    let x10112: BytePoly_64 = bigint_mul!(x10109, x10109, 64);
    let x10113: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x10112, x10084, 64), x3, 64),
            x10097,
            64
        ),
        x3,
        64
    );
    let x10114: BytePoly_34 = bigint_nondet_quot!(ctx, x10113, x3, 34);
    let x10115: BytePoly_32 = bigint_nondet_rem!(ctx, x10113, x3, 32);
    let x10116: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x10109, x10115, 64),
                        bigint_add!(
                            bigint_sub!(x10086, bigint_mul!(x10109, x10084, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x10117: BytePoly_34 = bigint_nondet_quot!(ctx, x10116, x3, 34);
    let x10118: BytePoly_32 = bigint_nondet_rem!(ctx, x10116, x3, 32);
    let x10119: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x10112, bigint_mul!(x10114, x3, 66), 66),
                        x10084,
                        66
                    ),
                    x10097,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x10115,
        66
    );
    eqz(ctx, &x10119, 276359, 4)?;
    let x10120: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x10117, x3, 66), x10118, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x10109, bigint_sub!(x10084, x10115, 32), 64),
                        x10086,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x10120, 276359, 4)?;
    let x10121: BytePoly_33 = bigint_add!(
        bigint_mul!(x10115, x10101, 33),
        bigint_mul!(x10084, x10103, 33),
        33
    );
    let x10122: BytePoly_33 = bigint_add!(
        bigint_mul!(x10118, x10101, 33),
        bigint_mul!(x10086, x10103, 33),
        33
    );
    let x10123: BytePoly_3 = bigint_nondet_quot!(ctx, x10121, x3, 3);
    let x10124: BytePoly_32 = bigint_nondet_rem!(ctx, x10121, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x10123, x3, 35), x10124, 35),
            x10121,
            35
        ),
        260103,
        4,
    )?;
    let x10125: BytePoly_3 = bigint_nondet_quot!(ctx, x10122, x3, 3);
    let x10126: BytePoly_32 = bigint_nondet_rem!(ctx, x10122, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x10125, x3, 35), x10126, 35),
            x10122,
            35
        ),
        260103,
        4,
    )?;
    let x10127: BytePoly_64 = bigint_mul!(x10097, x10097, 64);
    let x10128: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x10127, x10127, 64), x10127, 64),
        x2,
        64
    );
    let x10129: BytePoly_64 = bigint_add!(x48, x10128, 64);
    let x10130: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x10100, x10100, 32), x3, 32);
    let x10131: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x10128, x10130, 96), x3, 32);
    let x10132: BytePoly_64 = bigint_mul!(x10100, x10131, 64);
    let x10133: BytePoly_64 = bigint_add!(x10132, x10132, 64);
    let x10134: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x10129, x10133, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x10134, x3, 66), x10133, 66),
            x10129,
            66
        ),
        276359,
        4,
    )?;
    let x10135: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x10131, x10131, 64), x3, 64), x3, 64),
            x10097,
            64
        ),
        x10097,
        64
    );
    let x10136: BytePoly_34 = bigint_nondet_quot!(ctx, x10135, x3, 34);
    let x10137: BytePoly_32 = bigint_nondet_rem!(ctx, x10135, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x10136, x3, 66), x10137, 66),
            x10135,
            66
        ),
        276359,
        4,
    )?;
    let x10138: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(x16, bigint_mul!(x10131, x10137, 64), 64),
                x3,
                64
            ),
            x10100,
            64
        ),
        bigint_mul!(x10131, x10097, 64),
        64
    );
    let x10139: BytePoly_34 = bigint_nondet_quot!(ctx, x10138, x3, 34);
    let x10140: BytePoly_32 = bigint_nondet_rem!(ctx, x10138, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x10139, x3, 66), x10140, 66),
            x10138,
            66
        ),
        276359,
        4,
    )?;
    let x10141: BytePoly_1 = bigint_nondet_rem!(ctx, x10102, x4, 1);
    let x10142: BytePoly_32 = bigint_nondet_quot!(ctx, x10102, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x10142, x4, 33), x10141, 33),
            x10102,
            33
        ),
        260103,
        4,
    )?;
    let x10143: BytePoly_1 = bigint_sub!(x5, x10141, 1);
    eqz(ctx, &bigint_mul!(x10141, x10143, 2), 8131, 2)?;
    let x10144: BytePoly_32 = bigint_add!(bigint_sub!(x10140, x10126, 32), x3, 32);
    let x10145: BytePoly_32 = bigint_add!(bigint_sub!(x10137, x10124, 32), x3, 32);
    let x10146: BytePoly_32 = bigint_nondet_inv!(ctx, x10145, x3, 32);
    let x10147: BytePoly_64 = bigint_mul!(x10145, x10146, 64);
    let x10148: BytePoly_34 = bigint_nondet_quot!(ctx, x10147, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x10147, bigint_mul!(x10148, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x10149: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x10144, x10146, 64), x3, 32);
    let x10150: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x10149, x10145, 64), x10144, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x10151: BytePoly_34 = bigint_nondet_quot!(ctx, x10150, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x10150, bigint_mul!(x10151, x3, 66), 66),
        276359,
        4,
    )?;
    let x10152: BytePoly_64 = bigint_mul!(x10149, x10149, 64);
    let x10153: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x10152, x10124, 64), x3, 64),
            x10137,
            64
        ),
        x3,
        64
    );
    let x10154: BytePoly_34 = bigint_nondet_quot!(ctx, x10153, x3, 34);
    let x10155: BytePoly_32 = bigint_nondet_rem!(ctx, x10153, x3, 32);
    let x10156: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x10149, x10155, 64),
                        bigint_add!(
                            bigint_sub!(x10126, bigint_mul!(x10149, x10124, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x10157: BytePoly_34 = bigint_nondet_quot!(ctx, x10156, x3, 34);
    let x10158: BytePoly_32 = bigint_nondet_rem!(ctx, x10156, x3, 32);
    let x10159: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x10152, bigint_mul!(x10154, x3, 66), 66),
                        x10124,
                        66
                    ),
                    x10137,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x10155,
        66
    );
    eqz(ctx, &x10159, 276359, 4)?;
    let x10160: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x10157, x3, 66), x10158, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x10149, bigint_sub!(x10124, x10155, 32), 64),
                        x10126,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x10160, 276359, 4)?;
    let x10161: BytePoly_33 = bigint_add!(
        bigint_mul!(x10155, x10141, 33),
        bigint_mul!(x10124, x10143, 33),
        33
    );
    let x10162: BytePoly_33 = bigint_add!(
        bigint_mul!(x10158, x10141, 33),
        bigint_mul!(x10126, x10143, 33),
        33
    );
    let x10163: BytePoly_3 = bigint_nondet_quot!(ctx, x10161, x3, 3);
    let x10164: BytePoly_32 = bigint_nondet_rem!(ctx, x10161, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x10163, x3, 35), x10164, 35),
            x10161,
            35
        ),
        260103,
        4,
    )?;
    let x10165: BytePoly_3 = bigint_nondet_quot!(ctx, x10162, x3, 3);
    let x10166: BytePoly_32 = bigint_nondet_rem!(ctx, x10162, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x10165, x3, 35), x10166, 35),
            x10162,
            35
        ),
        260103,
        4,
    )?;
    let x10167: BytePoly_64 = bigint_mul!(x10137, x10137, 64);
    let x10168: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x10167, x10167, 64), x10167, 64),
        x2,
        64
    );
    let x10169: BytePoly_64 = bigint_add!(x48, x10168, 64);
    let x10170: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x10140, x10140, 32), x3, 32);
    let x10171: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x10168, x10170, 96), x3, 32);
    let x10172: BytePoly_64 = bigint_mul!(x10140, x10171, 64);
    let x10173: BytePoly_64 = bigint_add!(x10172, x10172, 64);
    let x10174: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x10169, x10173, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x10174, x3, 66), x10173, 66),
            x10169,
            66
        ),
        276359,
        4,
    )?;
    let x10175: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x10171, x10171, 64), x3, 64), x3, 64),
            x10137,
            64
        ),
        x10137,
        64
    );
    let x10176: BytePoly_34 = bigint_nondet_quot!(ctx, x10175, x3, 34);
    let x10177: BytePoly_32 = bigint_nondet_rem!(ctx, x10175, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x10176, x3, 66), x10177, 66),
            x10175,
            66
        ),
        276359,
        4,
    )?;
    let x10178: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(x16, bigint_mul!(x10171, x10177, 64), 64),
                x3,
                64
            ),
            x10140,
            64
        ),
        bigint_mul!(x10171, x10137, 64),
        64
    );
    let x10179: BytePoly_34 = bigint_nondet_quot!(ctx, x10178, x3, 34);
    let x10180: BytePoly_32 = bigint_nondet_rem!(ctx, x10178, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x10179, x3, 66), x10180, 66),
            x10178,
            66
        ),
        276359,
        4,
    )?;
    let x10181: BytePoly_1 = bigint_nondet_rem!(ctx, x10142, x4, 1);
    let x10182: BytePoly_32 = bigint_nondet_quot!(ctx, x10142, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x10182, x4, 33), x10181, 33),
            x10142,
            33
        ),
        260103,
        4,
    )?;
    let x10183: BytePoly_1 = bigint_sub!(x5, x10181, 1);
    eqz(ctx, &bigint_mul!(x10181, x10183, 2), 8131, 2)?;
    let x10184: BytePoly_32 = bigint_add!(bigint_sub!(x10180, x10166, 32), x3, 32);
    let x10185: BytePoly_32 = bigint_add!(bigint_sub!(x10177, x10164, 32), x3, 32);
    let x10186: BytePoly_32 = bigint_nondet_inv!(ctx, x10185, x3, 32);
    let x10187: BytePoly_64 = bigint_mul!(x10185, x10186, 64);
    let x10188: BytePoly_34 = bigint_nondet_quot!(ctx, x10187, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x10187, bigint_mul!(x10188, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x10189: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x10184, x10186, 64), x3, 32);
    let x10190: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x10189, x10185, 64), x10184, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x10191: BytePoly_34 = bigint_nondet_quot!(ctx, x10190, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x10190, bigint_mul!(x10191, x3, 66), 66),
        276359,
        4,
    )?;
    let x10192: BytePoly_64 = bigint_mul!(x10189, x10189, 64);
    let x10193: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x10192, x10164, 64), x3, 64),
            x10177,
            64
        ),
        x3,
        64
    );
    let x10194: BytePoly_34 = bigint_nondet_quot!(ctx, x10193, x3, 34);
    let x10195: BytePoly_32 = bigint_nondet_rem!(ctx, x10193, x3, 32);
    let x10196: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x10189, x10195, 64),
                        bigint_add!(
                            bigint_sub!(x10166, bigint_mul!(x10189, x10164, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x10197: BytePoly_34 = bigint_nondet_quot!(ctx, x10196, x3, 34);
    let x10198: BytePoly_32 = bigint_nondet_rem!(ctx, x10196, x3, 32);
    let x10199: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x10192, bigint_mul!(x10194, x3, 66), 66),
                        x10164,
                        66
                    ),
                    x10177,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x10195,
        66
    );
    eqz(ctx, &x10199, 276359, 4)?;
    let x10200: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x10197, x3, 66), x10198, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x10189, bigint_sub!(x10164, x10195, 32), 64),
                        x10166,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x10200, 276359, 4)?;
    let x10201: BytePoly_33 = bigint_add!(
        bigint_mul!(x10195, x10181, 33),
        bigint_mul!(x10164, x10183, 33),
        33
    );
    let x10202: BytePoly_33 = bigint_add!(
        bigint_mul!(x10198, x10181, 33),
        bigint_mul!(x10166, x10183, 33),
        33
    );
    let x10203: BytePoly_3 = bigint_nondet_quot!(ctx, x10201, x3, 3);
    let x10204: BytePoly_32 = bigint_nondet_rem!(ctx, x10201, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x10203, x3, 35), x10204, 35),
            x10201,
            35
        ),
        260103,
        4,
    )?;
    let x10205: BytePoly_3 = bigint_nondet_quot!(ctx, x10202, x3, 3);
    let x10206: BytePoly_32 = bigint_nondet_rem!(ctx, x10202, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x10205, x3, 35), x10206, 35),
            x10202,
            35
        ),
        260103,
        4,
    )?;
    let x10207: BytePoly_64 = bigint_mul!(x10177, x10177, 64);
    let x10208: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x10207, x10207, 64), x10207, 64),
        x2,
        64
    );
    let x10209: BytePoly_64 = bigint_add!(x48, x10208, 64);
    let x10210: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x10180, x10180, 32), x3, 32);
    let x10211: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x10208, x10210, 96), x3, 32);
    let x10212: BytePoly_64 = bigint_mul!(x10180, x10211, 64);
    let x10213: BytePoly_64 = bigint_add!(x10212, x10212, 64);
    let x10214: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x10209, x10213, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x10214, x3, 66), x10213, 66),
            x10209,
            66
        ),
        276359,
        4,
    )?;
    let x10215: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x10211, x10211, 64), x3, 64), x3, 64),
            x10177,
            64
        ),
        x10177,
        64
    );
    let x10216: BytePoly_34 = bigint_nondet_quot!(ctx, x10215, x3, 34);
    let x10217: BytePoly_32 = bigint_nondet_rem!(ctx, x10215, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x10216, x3, 66), x10217, 66),
            x10215,
            66
        ),
        276359,
        4,
    )?;
    let x10218: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(x16, bigint_mul!(x10211, x10217, 64), 64),
                x3,
                64
            ),
            x10180,
            64
        ),
        bigint_mul!(x10211, x10177, 64),
        64
    );
    let x10219: BytePoly_34 = bigint_nondet_quot!(ctx, x10218, x3, 34);
    let x10220: BytePoly_32 = bigint_nondet_rem!(ctx, x10218, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x10219, x3, 66), x10220, 66),
            x10218,
            66
        ),
        276359,
        4,
    )?;
    let x10221: BytePoly_1 = bigint_nondet_rem!(ctx, x10182, x4, 1);
    let x10222: BytePoly_32 = bigint_nondet_quot!(ctx, x10182, x4, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x10222, x4, 33), x10221, 33),
            x10182,
            33
        ),
        260103,
        4,
    )?;
    let x10223: BytePoly_1 = bigint_sub!(x5, x10221, 1);
    eqz(ctx, &bigint_mul!(x10221, x10223, 2), 8131, 2)?;
    let x10224: BytePoly_32 = bigint_add!(bigint_sub!(x10220, x10206, 32), x3, 32);
    let x10225: BytePoly_32 = bigint_add!(bigint_sub!(x10217, x10204, 32), x3, 32);
    let x10226: BytePoly_32 = bigint_nondet_inv!(ctx, x10225, x3, 32);
    let x10227: BytePoly_64 = bigint_mul!(x10225, x10226, 64);
    let x10228: BytePoly_34 = bigint_nondet_quot!(ctx, x10227, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x10227, bigint_mul!(x10228, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x10229: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x10224, x10226, 64), x3, 32);
    let x10230: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x10229, x10225, 64), x10224, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x10231: BytePoly_34 = bigint_nondet_quot!(ctx, x10230, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x10230, bigint_mul!(x10231, x3, 66), 66),
        276359,
        4,
    )?;
    let x10232: BytePoly_64 = bigint_mul!(x10229, x10229, 64);
    let x10233: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x10232, x10204, 64), x3, 64),
            x10217,
            64
        ),
        x3,
        64
    );
    let x10234: BytePoly_34 = bigint_nondet_quot!(ctx, x10233, x3, 34);
    let x10235: BytePoly_32 = bigint_nondet_rem!(ctx, x10233, x3, 32);
    let x10236: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x10229, x10235, 64),
                        bigint_add!(
                            bigint_sub!(x10206, bigint_mul!(x10229, x10204, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x10237: BytePoly_34 = bigint_nondet_quot!(ctx, x10236, x3, 34);
    let x10238: BytePoly_32 = bigint_nondet_rem!(ctx, x10236, x3, 32);
    let x10239: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x10232, bigint_mul!(x10234, x3, 66), 66),
                        x10204,
                        66
                    ),
                    x10217,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x10235,
        66
    );
    eqz(ctx, &x10239, 276359, 4)?;
    let x10240: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x10237, x3, 66), x10238, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x10229, bigint_sub!(x10204, x10235, 32), 64),
                        x10206,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x10240, 276359, 4)?;
    let x10241: BytePoly_33 = bigint_add!(
        bigint_mul!(x10235, x10221, 33),
        bigint_mul!(x10204, x10223, 33),
        33
    );
    let x10242: BytePoly_33 = bigint_add!(
        bigint_mul!(x10238, x10221, 33),
        bigint_mul!(x10206, x10223, 33),
        33
    );
    let x10243: BytePoly_3 = bigint_nondet_quot!(ctx, x10241, x3, 3);
    let x10244: BytePoly_32 = bigint_nondet_rem!(ctx, x10241, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x10243, x3, 35), x10244, 35),
            x10241,
            35
        ),
        260103,
        4,
    )?;
    let x10245: BytePoly_3 = bigint_nondet_quot!(ctx, x10242, x3, 3);
    let x10246: BytePoly_32 = bigint_nondet_rem!(ctx, x10242, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x10245, x3, 35), x10246, 35),
            x10242,
            35
        ),
        260103,
        4,
    )?;
    let x10247: BytePoly_64 = bigint_mul!(x10217, x10217, 64);
    let x10248: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_add!(x10247, x10247, 64), x10247, 64),
        x2,
        64
    );
    let x10249: BytePoly_64 = bigint_add!(x48, x10248, 64);
    let x10250: BytePoly_32 = bigint_nondet_inv!(ctx, bigint_add!(x10220, x10220, 32), x3, 32);
    let x10251: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x10248, x10250, 96), x3, 32);
    let x10252: BytePoly_64 = bigint_mul!(x10220, x10251, 64);
    let x10253: BytePoly_64 = bigint_add!(x10252, x10252, 64);
    let x10254: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x10249, x10253, 64), x3, 34);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x10254, x3, 66), x10253, 66),
            x10249,
            66
        ),
        276359,
        4,
    )?;
    let x10255: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x10251, x10251, 64), x3, 64), x3, 64),
            x10217,
            64
        ),
        x10217,
        64
    );
    let x10256: BytePoly_34 = bigint_nondet_quot!(ctx, x10255, x3, 34);
    let x10257: BytePoly_32 = bigint_nondet_rem!(ctx, x10255, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x10256, x3, 66), x10257, 66),
            x10255,
            66
        ),
        276359,
        4,
    )?;
    let x10258: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(x16, bigint_mul!(x10251, x10257, 64), 64),
                x3,
                64
            ),
            x10220,
            64
        ),
        bigint_mul!(x10251, x10217, 64),
        64
    );
    let x10259: BytePoly_34 = bigint_nondet_quot!(ctx, x10258, x3, 34);
    let x10260: BytePoly_32 = bigint_nondet_rem!(ctx, x10258, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x10259, x3, 66), x10260, 66),
            x10258,
            66
        ),
        276359,
        4,
    )?;
    let x10261: BytePoly_32 =
        bigint_add!(bigint_sub!(bigint_sub!(x3, x10, 32), x10246, 32), x3, 32);
    let x10262: BytePoly_32 = bigint_add!(bigint_sub!(x9, x10244, 32), x3, 32);
    let x10263: BytePoly_32 = bigint_nondet_inv!(ctx, x10262, x3, 32);
    let x10264: BytePoly_64 = bigint_mul!(x10262, x10263, 64);
    let x10265: BytePoly_34 = bigint_nondet_quot!(ctx, x10264, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x10264, bigint_mul!(x10265, x3, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x10266: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x10261, x10263, 64), x3, 32);
    let x10267: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x10266, x10262, 64), x10261, 64),
            x3,
            64
        ),
        x3,
        64
    );
    let x10268: BytePoly_34 = bigint_nondet_quot!(ctx, x10267, x3, 34);
    eqz(
        ctx,
        &bigint_sub!(x10267, bigint_mul!(x10268, x3, 66), 66),
        276359,
        4,
    )?;
    let x10269: BytePoly_64 = bigint_mul!(x10266, x10266, 64);
    let x10270: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x10269, x10244, 64), x3, 64), x9, 64),
        x3,
        64
    );
    let x10271: BytePoly_34 = bigint_nondet_quot!(ctx, x10270, x3, 34);
    let x10272: BytePoly_32 = bigint_nondet_rem!(ctx, x10270, x3, 32);
    let x10273: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x3,
                    bigint_add!(
                        bigint_mul!(x10266, x10272, 64),
                        bigint_add!(
                            bigint_sub!(x10246, bigint_mul!(x10266, x10244, 64), 64),
                            x3,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x3,
                64
            ),
            x3,
            64
        ),
        x16,
        64
    );
    let x10274: BytePoly_34 = bigint_nondet_quot!(ctx, x10273, x3, 34);
    let x10275: BytePoly_32 = bigint_nondet_rem!(ctx, x10273, x3, 32);
    let x10276: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x10269, bigint_mul!(x10271, x3, 66), 66),
                        x10244,
                        66
                    ),
                    x9,
                    66
                ),
                x3,
                66
            ),
            x3,
            66
        ),
        x10272,
        66
    );
    eqz(ctx, &x10276, 276359, 4)?;
    let x10277: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x10274, x3, 66), x10275, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x10266, bigint_sub!(x10244, x10272, 32), 64),
                        x10246,
                        64
                    ),
                    x3,
                    64
                ),
                x3,
                64
            ),
            x16,
            64
        ),
        66
    );
    eqz(ctx, &x10277, 276359, 4)?;
    eqz(ctx, &bigint_sub!(x10272, x11, 32), 34, 1)?;
    eqz(ctx, &bigint_sub!(x10275, x12, 32), 34, 1)?;
    return Ok(());
}
pub fn ec_aff_neg_test_8(ctx: &mut BigIntContext) -> Result<()> {
    let x0: BytePoly_1 = bigint_const!(ctx, 11);
    let x1: BytePoly_1 = bigint_def!(ctx, 1, 0, 1);
    let x2: BytePoly_1 = bigint_def!(ctx, 1, 1, 1);
    let x3: BytePoly_1 = bigint_def!(ctx, 1, 2, 1);
    let x4: BytePoly_1 = bigint_def!(ctx, 1, 3, 1);
    eqz(ctx, &bigint_sub!(x1, x3, 1), 34, 1)?;
    eqz(ctx, &bigint_sub!(bigint_sub!(x0, x2, 1), x4, 1), 34, 1)?;
    return Ok(());
}
pub fn ec_neg_rz8test1(ctx: &mut BigIntContext) -> Result<()> {
    let x0: BytePoly_1 = bigint_const!(ctx, 179);
    let x1: BytePoly_1 = bigint_def!(ctx, 1, 0, 1);
    let x2: BytePoly_1 = bigint_def!(ctx, 1, 1, 1);
    let x3: BytePoly_1 = bigint_def!(ctx, 1, 2, 1);
    let x4: BytePoly_1 = bigint_def!(ctx, 1, 3, 1);
    eqz(ctx, &bigint_sub!(x1, x3, 1), 34, 1)?;
    eqz(ctx, &bigint_sub!(bigint_sub!(x0, x2, 1), x4, 1), 34, 1)?;
    return Ok(());
}
pub fn ec_neg_secp256k1(ctx: &mut BigIntContext) -> Result<()> {
    let x0: BytePoly_32 = bigint_const!(
        ctx, 47, 252, 255, 255, 254, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
        255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255
    );
    let x1: BytePoly_32 = bigint_def!(ctx, 32, 0, 1);
    let x2: BytePoly_32 = bigint_def!(ctx, 32, 1, 1);
    let x3: BytePoly_32 = bigint_def!(ctx, 32, 2, 1);
    let x4: BytePoly_32 = bigint_def!(ctx, 32, 3, 1);
    eqz(ctx, &bigint_sub!(x1, x3, 32), 34, 1)?;
    eqz(ctx, &bigint_sub!(bigint_sub!(x0, x2, 32), x4, 32), 34, 1)?;
    return Ok(());
}
pub fn ec_aff_sub_test_8(ctx: &mut BigIntContext) -> Result<()> {
    let x0: BytePoly_1 = bigint_const!(ctx, 1);
    let x1: BytePoly_1 = bigint_const!(ctx, 11);
    let x2: BytePoly_1 = bigint_def!(ctx, 1, 0, 1);
    let x3: BytePoly_1 = bigint_def!(ctx, 1, 1, 1);
    let x4: BytePoly_1 = bigint_def!(ctx, 1, 2, 1);
    let x5: BytePoly_1 = bigint_def!(ctx, 1, 3, 1);
    let x6: BytePoly_1 = bigint_def!(ctx, 1, 4, 1);
    let x7: BytePoly_1 = bigint_def!(ctx, 1, 5, 1);
    let x8: BytePoly_1 = bigint_add!(bigint_sub!(bigint_sub!(x1, x5, 1), x3, 1), x1, 1);
    let x9: BytePoly_1 = bigint_add!(bigint_sub!(x4, x2, 1), x1, 1);
    let x10: BytePoly_1 = bigint_nondet_inv!(ctx, x9, x1, 1);
    let x11: BytePoly_2 = bigint_mul!(x9, x10, 2);
    let x12: BytePoly_3 = bigint_nondet_quot!(ctx, x11, x1, 3);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x11, bigint_mul!(x12, x1, 4), 4), x0, 4),
        24387,
        2,
    )?;
    let x13: BytePoly_1 = bigint_nondet_rem!(ctx, bigint_mul!(x8, x10, 2), x1, 1);
    let x14: BytePoly_2 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x13, x9, 2), x8, 2), x1, 2),
        x1,
        2
    );
    let x15: BytePoly_3 = bigint_nondet_quot!(ctx, x14, x1, 3);
    eqz(ctx, &bigint_sub!(x14, bigint_mul!(x15, x1, 4), 4), 24387, 2)?;
    let x16: BytePoly_2 = bigint_mul!(x13, x13, 2);
    let x17: BytePoly_2 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x16, x2, 2), x1, 2), x4, 2),
        x1,
        2
    );
    let x18: BytePoly_3 = bigint_nondet_quot!(ctx, x17, x1, 3);
    let x19: BytePoly_1 = bigint_nondet_rem!(ctx, x17, x1, 1);
    let x20: BytePoly_2 = bigint_mul!(x1, x1, 2);
    let x21: BytePoly_2 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x13, x19, 2),
                        bigint_add!(bigint_sub!(x3, bigint_mul!(x13, x2, 2), 2), x1, 2),
                        2
                    ),
                    2
                ),
                x1,
                2
            ),
            x1,
            2
        ),
        x20,
        2
    );
    let x22: BytePoly_3 = bigint_nondet_quot!(ctx, x21, x1, 3);
    let x23: BytePoly_1 = bigint_nondet_rem!(ctx, x21, x1, 1);
    let x24: BytePoly_4 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x16, bigint_mul!(x18, x1, 4), 4), x2, 4),
                    x4,
                    4
                ),
                x1,
                4
            ),
            x1,
            4
        ),
        x19,
        4
    );
    eqz(ctx, &x24, 24387, 2)?;
    let x25: BytePoly_4 = bigint_sub!(
        bigint_add!(bigint_mul!(x22, x1, 4), x23, 4),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x13, bigint_sub!(x2, x19, 1), 2), x3, 2),
                    x1,
                    2
                ),
                x1,
                2
            ),
            x20,
            2
        ),
        4
    );
    eqz(ctx, &x25, 24387, 2)?;
    eqz(ctx, &bigint_sub!(x19, x6, 1), 34, 1)?;
    eqz(ctx, &bigint_sub!(x23, x7, 1), 34, 1)?;
    return Ok(());
}
pub fn ec_sub_rz8test1(ctx: &mut BigIntContext) -> Result<()> {
    let x0: BytePoly_1 = bigint_const!(ctx, 1);
    let x1: BytePoly_1 = bigint_const!(ctx, 179);
    let x2: BytePoly_1 = bigint_def!(ctx, 1, 0, 1);
    let x3: BytePoly_1 = bigint_def!(ctx, 1, 1, 1);
    let x4: BytePoly_1 = bigint_def!(ctx, 1, 2, 1);
    let x5: BytePoly_1 = bigint_def!(ctx, 1, 3, 1);
    let x6: BytePoly_1 = bigint_def!(ctx, 1, 4, 1);
    let x7: BytePoly_1 = bigint_def!(ctx, 1, 5, 1);
    let x8: BytePoly_1 = bigint_add!(bigint_sub!(bigint_sub!(x1, x5, 1), x3, 1), x1, 1);
    let x9: BytePoly_1 = bigint_add!(bigint_sub!(x4, x2, 1), x1, 1);
    let x10: BytePoly_1 = bigint_nondet_inv!(ctx, x9, x1, 1);
    let x11: BytePoly_2 = bigint_mul!(x9, x10, 2);
    let x12: BytePoly_3 = bigint_nondet_quot!(ctx, x11, x1, 3);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x11, bigint_mul!(x12, x1, 4), 4), x0, 4),
        24387,
        2,
    )?;
    let x13: BytePoly_1 = bigint_nondet_rem!(ctx, bigint_mul!(x8, x10, 2), x1, 1);
    let x14: BytePoly_2 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x13, x9, 2), x8, 2), x1, 2),
        x1,
        2
    );
    let x15: BytePoly_3 = bigint_nondet_quot!(ctx, x14, x1, 3);
    eqz(ctx, &bigint_sub!(x14, bigint_mul!(x15, x1, 4), 4), 24387, 2)?;
    let x16: BytePoly_2 = bigint_mul!(x13, x13, 2);
    let x17: BytePoly_2 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x16, x2, 2), x1, 2), x4, 2),
        x1,
        2
    );
    let x18: BytePoly_3 = bigint_nondet_quot!(ctx, x17, x1, 3);
    let x19: BytePoly_1 = bigint_nondet_rem!(ctx, x17, x1, 1);
    let x20: BytePoly_2 = bigint_mul!(x1, x1, 2);
    let x21: BytePoly_2 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x13, x19, 2),
                        bigint_add!(bigint_sub!(x3, bigint_mul!(x13, x2, 2), 2), x1, 2),
                        2
                    ),
                    2
                ),
                x1,
                2
            ),
            x1,
            2
        ),
        x20,
        2
    );
    let x22: BytePoly_3 = bigint_nondet_quot!(ctx, x21, x1, 3);
    let x23: BytePoly_1 = bigint_nondet_rem!(ctx, x21, x1, 1);
    let x24: BytePoly_4 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x16, bigint_mul!(x18, x1, 4), 4), x2, 4),
                    x4,
                    4
                ),
                x1,
                4
            ),
            x1,
            4
        ),
        x19,
        4
    );
    eqz(ctx, &x24, 24387, 2)?;
    let x25: BytePoly_4 = bigint_sub!(
        bigint_add!(bigint_mul!(x22, x1, 4), x23, 4),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x13, bigint_sub!(x2, x19, 1), 2), x3, 2),
                    x1,
                    2
                ),
                x1,
                2
            ),
            x20,
            2
        ),
        4
    );
    eqz(ctx, &x25, 24387, 2)?;
    eqz(ctx, &bigint_sub!(x19, x6, 1), 34, 1)?;
    eqz(ctx, &bigint_sub!(x23, x7, 1), 34, 1)?;
    return Ok(());
}
pub fn ec_sub_secp256k1(ctx: &mut BigIntContext) -> Result<()> {
    let x0: BytePoly_1 = bigint_const!(ctx, 1);
    let x1: BytePoly_32 = bigint_const!(
        ctx, 47, 252, 255, 255, 254, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
        255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255
    );
    let x2: BytePoly_32 = bigint_def!(ctx, 32, 0, 1);
    let x3: BytePoly_32 = bigint_def!(ctx, 32, 1, 1);
    let x4: BytePoly_32 = bigint_def!(ctx, 32, 2, 1);
    let x5: BytePoly_32 = bigint_def!(ctx, 32, 3, 1);
    let x6: BytePoly_32 = bigint_def!(ctx, 32, 4, 1);
    let x7: BytePoly_32 = bigint_def!(ctx, 32, 5, 1);
    let x8: BytePoly_32 = bigint_add!(bigint_sub!(bigint_sub!(x1, x5, 32), x3, 32), x1, 32);
    let x9: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2, 32), x1, 32);
    let x10: BytePoly_32 = bigint_nondet_inv!(ctx, x9, x1, 32);
    let x11: BytePoly_64 = bigint_mul!(x9, x10, 64);
    let x12: BytePoly_34 = bigint_nondet_quot!(ctx, x11, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x11, bigint_mul!(x12, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x13: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x8, x10, 64), x1, 32);
    let x14: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x13, x9, 64), x8, 64), x1, 64),
        x1,
        64
    );
    let x15: BytePoly_34 = bigint_nondet_quot!(ctx, x14, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x14, bigint_mul!(x15, x1, 66), 66),
        276359,
        4,
    )?;
    let x16: BytePoly_64 = bigint_mul!(x13, x13, 64);
    let x17: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x16, x2, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x18: BytePoly_34 = bigint_nondet_quot!(ctx, x17, x1, 34);
    let x19: BytePoly_32 = bigint_nondet_rem!(ctx, x17, x1, 32);
    let x20: BytePoly_64 = bigint_mul!(x1, x1, 64);
    let x21: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x13, x19, 64),
                        bigint_add!(bigint_sub!(x3, bigint_mul!(x13, x2, 64), 64), x1, 64),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x22: BytePoly_34 = bigint_nondet_quot!(ctx, x21, x1, 34);
    let x23: BytePoly_32 = bigint_nondet_rem!(ctx, x21, x1, 32);
    let x24: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x16, bigint_mul!(x18, x1, 66), 66), x2, 66),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x19,
        66
    );
    eqz(ctx, &x24, 276359, 4)?;
    let x25: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x22, x1, 66), x23, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x13, bigint_sub!(x2, x19, 32), 64), x3, 64),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x25, 276359, 4)?;
    eqz(ctx, &bigint_sub!(x19, x6, 32), 34, 1)?;
    eqz(ctx, &bigint_sub!(x23, x7, 32), 34, 1)?;
    return Ok(());
}
pub fn ec_pts_eq_test_8(ctx: &mut BigIntContext) -> Result<()> {
    let x0: BytePoly_1 = bigint_def!(ctx, 1, 0, 1);
    let x1: BytePoly_1 = bigint_def!(ctx, 1, 1, 1);
    let x2: BytePoly_1 = bigint_def!(ctx, 1, 2, 1);
    let x3: BytePoly_1 = bigint_def!(ctx, 1, 3, 1);
    eqz(ctx, &bigint_sub!(x0, x2, 1), 34, 1)?;
    eqz(ctx, &bigint_sub!(x1, x3, 1), 34, 1)?;
    return Ok(());
}
pub fn ec_pts_eq_rz8test1(ctx: &mut BigIntContext) -> Result<()> {
    let x0: BytePoly_1 = bigint_def!(ctx, 1, 0, 1);
    let x1: BytePoly_1 = bigint_def!(ctx, 1, 1, 1);
    let x2: BytePoly_1 = bigint_def!(ctx, 1, 2, 1);
    let x3: BytePoly_1 = bigint_def!(ctx, 1, 3, 1);
    eqz(ctx, &bigint_sub!(x0, x2, 1), 34, 1)?;
    eqz(ctx, &bigint_sub!(x1, x3, 1), 34, 1)?;
    return Ok(());
}
pub fn ec_pts_eq_secp256k1(ctx: &mut BigIntContext) -> Result<()> {
    let x0: BytePoly_32 = bigint_def!(ctx, 32, 0, 1);
    let x1: BytePoly_32 = bigint_def!(ctx, 32, 1, 1);
    let x2: BytePoly_32 = bigint_def!(ctx, 32, 2, 1);
    let x3: BytePoly_32 = bigint_def!(ctx, 32, 3, 1);
    eqz(ctx, &bigint_sub!(x0, x2, 32), 34, 1)?;
    eqz(ctx, &bigint_sub!(x1, x3, 32), 34, 1)?;
    return Ok(());
}
pub fn rep_ec_aff_add_test_full_256_r5(ctx: &mut BigIntContext) -> Result<()> {
    let x0: BytePoly_1 = bigint_const!(ctx, 1);
    let x1: BytePoly_32 = bigint_const!(
        ctx, 47, 252, 255, 255, 254, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
        255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255
    );
    let x2: BytePoly_32 = bigint_def!(ctx, 32, 0, 1);
    let x3: BytePoly_32 = bigint_def!(ctx, 32, 1, 1);
    let x4: BytePoly_32 = bigint_def!(ctx, 32, 2, 1);
    let x5: BytePoly_32 = bigint_def!(ctx, 32, 3, 1);
    let x6: BytePoly_32 = bigint_def!(ctx, 32, 4, 1);
    let x7: BytePoly_32 = bigint_def!(ctx, 32, 5, 1);
    let x8: BytePoly_32 = bigint_add!(bigint_sub!(x5, x3, 32), x1, 32);
    let x9: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2, 32), x1, 32);
    let x10: BytePoly_32 = bigint_nondet_inv!(ctx, x9, x1, 32);
    let x11: BytePoly_64 = bigint_mul!(x9, x10, 64);
    let x12: BytePoly_34 = bigint_nondet_quot!(ctx, x11, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x11, bigint_mul!(x12, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x13: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x8, x10, 64), x1, 32);
    let x14: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x13, x9, 64), x8, 64), x1, 64),
        x1,
        64
    );
    let x15: BytePoly_34 = bigint_nondet_quot!(ctx, x14, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x14, bigint_mul!(x15, x1, 66), 66),
        276359,
        4,
    )?;
    let x16: BytePoly_64 = bigint_mul!(x13, x13, 64);
    let x17: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x16, x2, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x18: BytePoly_34 = bigint_nondet_quot!(ctx, x17, x1, 34);
    let x19: BytePoly_32 = bigint_nondet_rem!(ctx, x17, x1, 32);
    let x20: BytePoly_64 = bigint_mul!(x1, x1, 64);
    let x21: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x13, x19, 64),
                        bigint_add!(bigint_sub!(x3, bigint_mul!(x13, x2, 64), 64), x1, 64),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x22: BytePoly_34 = bigint_nondet_quot!(ctx, x21, x1, 34);
    let x23: BytePoly_32 = bigint_nondet_rem!(ctx, x21, x1, 32);
    let x24: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x16, bigint_mul!(x18, x1, 66), 66), x2, 66),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x19,
        66
    );
    eqz(ctx, &x24, 276359, 4)?;
    let x25: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x22, x1, 66), x23, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x13, bigint_sub!(x2, x19, 32), 64), x3, 64),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x25, 276359, 4)?;
    let x26: BytePoly_32 = bigint_add!(bigint_sub!(x5, x23, 32), x1, 32);
    let x27: BytePoly_32 = bigint_add!(bigint_sub!(x4, x19, 32), x1, 32);
    let x28: BytePoly_32 = bigint_nondet_inv!(ctx, x27, x1, 32);
    let x29: BytePoly_64 = bigint_mul!(x27, x28, 64);
    let x30: BytePoly_34 = bigint_nondet_quot!(ctx, x29, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x29, bigint_mul!(x30, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x31: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x26, x28, 64), x1, 32);
    let x32: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x31, x27, 64), x26, 64), x1, 64),
        x1,
        64
    );
    let x33: BytePoly_34 = bigint_nondet_quot!(ctx, x32, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x32, bigint_mul!(x33, x1, 66), 66),
        276359,
        4,
    )?;
    let x34: BytePoly_64 = bigint_mul!(x31, x31, 64);
    let x35: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x34, x19, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x36: BytePoly_34 = bigint_nondet_quot!(ctx, x35, x1, 34);
    let x37: BytePoly_32 = bigint_nondet_rem!(ctx, x35, x1, 32);
    let x38: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x31, x37, 64),
                        bigint_add!(bigint_sub!(x23, bigint_mul!(x31, x19, 64), 64), x1, 64),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x39: BytePoly_34 = bigint_nondet_quot!(ctx, x38, x1, 34);
    let x40: BytePoly_32 = bigint_nondet_rem!(ctx, x38, x1, 32);
    let x41: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x34, bigint_mul!(x36, x1, 66), 66), x19, 66),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x37,
        66
    );
    eqz(ctx, &x41, 276359, 4)?;
    let x42: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x39, x1, 66), x40, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x31, bigint_sub!(x19, x37, 32), 64), x23, 64),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x42, 276359, 4)?;
    let x43: BytePoly_32 = bigint_add!(bigint_sub!(x5, x40, 32), x1, 32);
    let x44: BytePoly_32 = bigint_add!(bigint_sub!(x4, x37, 32), x1, 32);
    let x45: BytePoly_32 = bigint_nondet_inv!(ctx, x44, x1, 32);
    let x46: BytePoly_64 = bigint_mul!(x44, x45, 64);
    let x47: BytePoly_34 = bigint_nondet_quot!(ctx, x46, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x46, bigint_mul!(x47, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x48: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x43, x45, 64), x1, 32);
    let x49: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x48, x44, 64), x43, 64), x1, 64),
        x1,
        64
    );
    let x50: BytePoly_34 = bigint_nondet_quot!(ctx, x49, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x49, bigint_mul!(x50, x1, 66), 66),
        276359,
        4,
    )?;
    let x51: BytePoly_64 = bigint_mul!(x48, x48, 64);
    let x52: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x51, x37, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x53: BytePoly_34 = bigint_nondet_quot!(ctx, x52, x1, 34);
    let x54: BytePoly_32 = bigint_nondet_rem!(ctx, x52, x1, 32);
    let x55: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x48, x54, 64),
                        bigint_add!(bigint_sub!(x40, bigint_mul!(x48, x37, 64), 64), x1, 64),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x56: BytePoly_34 = bigint_nondet_quot!(ctx, x55, x1, 34);
    let x57: BytePoly_32 = bigint_nondet_rem!(ctx, x55, x1, 32);
    let x58: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x51, bigint_mul!(x53, x1, 66), 66), x37, 66),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x54,
        66
    );
    eqz(ctx, &x58, 276359, 4)?;
    let x59: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x56, x1, 66), x57, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x48, bigint_sub!(x37, x54, 32), 64), x40, 64),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x59, 276359, 4)?;
    let x60: BytePoly_32 = bigint_add!(bigint_sub!(x5, x57, 32), x1, 32);
    let x61: BytePoly_32 = bigint_add!(bigint_sub!(x4, x54, 32), x1, 32);
    let x62: BytePoly_32 = bigint_nondet_inv!(ctx, x61, x1, 32);
    let x63: BytePoly_64 = bigint_mul!(x61, x62, 64);
    let x64: BytePoly_34 = bigint_nondet_quot!(ctx, x63, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x63, bigint_mul!(x64, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x65: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x60, x62, 64), x1, 32);
    let x66: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x65, x61, 64), x60, 64), x1, 64),
        x1,
        64
    );
    let x67: BytePoly_34 = bigint_nondet_quot!(ctx, x66, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x66, bigint_mul!(x67, x1, 66), 66),
        276359,
        4,
    )?;
    let x68: BytePoly_64 = bigint_mul!(x65, x65, 64);
    let x69: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x68, x54, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x70: BytePoly_34 = bigint_nondet_quot!(ctx, x69, x1, 34);
    let x71: BytePoly_32 = bigint_nondet_rem!(ctx, x69, x1, 32);
    let x72: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x65, x71, 64),
                        bigint_add!(bigint_sub!(x57, bigint_mul!(x65, x54, 64), 64), x1, 64),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x73: BytePoly_34 = bigint_nondet_quot!(ctx, x72, x1, 34);
    let x74: BytePoly_32 = bigint_nondet_rem!(ctx, x72, x1, 32);
    let x75: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x68, bigint_mul!(x70, x1, 66), 66), x54, 66),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x71,
        66
    );
    eqz(ctx, &x75, 276359, 4)?;
    let x76: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x73, x1, 66), x74, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x65, bigint_sub!(x54, x71, 32), 64), x57, 64),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x76, 276359, 4)?;
    let x77: BytePoly_32 = bigint_add!(bigint_sub!(x5, x74, 32), x1, 32);
    let x78: BytePoly_32 = bigint_add!(bigint_sub!(x4, x71, 32), x1, 32);
    let x79: BytePoly_32 = bigint_nondet_inv!(ctx, x78, x1, 32);
    let x80: BytePoly_64 = bigint_mul!(x78, x79, 64);
    let x81: BytePoly_34 = bigint_nondet_quot!(ctx, x80, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x80, bigint_mul!(x81, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x82: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x77, x79, 64), x1, 32);
    let x83: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x82, x78, 64), x77, 64), x1, 64),
        x1,
        64
    );
    let x84: BytePoly_34 = bigint_nondet_quot!(ctx, x83, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x83, bigint_mul!(x84, x1, 66), 66),
        276359,
        4,
    )?;
    let x85: BytePoly_64 = bigint_mul!(x82, x82, 64);
    let x86: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x85, x71, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x87: BytePoly_34 = bigint_nondet_quot!(ctx, x86, x1, 34);
    let x88: BytePoly_32 = bigint_nondet_rem!(ctx, x86, x1, 32);
    let x89: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x82, x88, 64),
                        bigint_add!(bigint_sub!(x74, bigint_mul!(x82, x71, 64), 64), x1, 64),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x90: BytePoly_34 = bigint_nondet_quot!(ctx, x89, x1, 34);
    let x91: BytePoly_32 = bigint_nondet_rem!(ctx, x89, x1, 32);
    let x92: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x85, bigint_mul!(x87, x1, 66), 66), x71, 66),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x88,
        66
    );
    eqz(ctx, &x92, 276359, 4)?;
    let x93: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x90, x1, 66), x91, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x82, bigint_sub!(x71, x88, 32), 64), x74, 64),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x93, 276359, 4)?;
    eqz(ctx, &bigint_sub!(x88, x6, 32), 34, 1)?;
    eqz(ctx, &bigint_sub!(x91, x7, 32), 34, 1)?;
    return Ok(());
}
pub fn rep_ec_aff_add_test_full_256_r10(ctx: &mut BigIntContext) -> Result<()> {
    let x0: BytePoly_1 = bigint_const!(ctx, 1);
    let x1: BytePoly_32 = bigint_const!(
        ctx, 47, 252, 255, 255, 254, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
        255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255
    );
    let x2: BytePoly_32 = bigint_def!(ctx, 32, 0, 1);
    let x3: BytePoly_32 = bigint_def!(ctx, 32, 1, 1);
    let x4: BytePoly_32 = bigint_def!(ctx, 32, 2, 1);
    let x5: BytePoly_32 = bigint_def!(ctx, 32, 3, 1);
    let x6: BytePoly_32 = bigint_def!(ctx, 32, 4, 1);
    let x7: BytePoly_32 = bigint_def!(ctx, 32, 5, 1);
    let x8: BytePoly_32 = bigint_add!(bigint_sub!(x5, x3, 32), x1, 32);
    let x9: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2, 32), x1, 32);
    let x10: BytePoly_32 = bigint_nondet_inv!(ctx, x9, x1, 32);
    let x11: BytePoly_64 = bigint_mul!(x9, x10, 64);
    let x12: BytePoly_34 = bigint_nondet_quot!(ctx, x11, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x11, bigint_mul!(x12, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x13: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x8, x10, 64), x1, 32);
    let x14: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x13, x9, 64), x8, 64), x1, 64),
        x1,
        64
    );
    let x15: BytePoly_34 = bigint_nondet_quot!(ctx, x14, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x14, bigint_mul!(x15, x1, 66), 66),
        276359,
        4,
    )?;
    let x16: BytePoly_64 = bigint_mul!(x13, x13, 64);
    let x17: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x16, x2, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x18: BytePoly_34 = bigint_nondet_quot!(ctx, x17, x1, 34);
    let x19: BytePoly_32 = bigint_nondet_rem!(ctx, x17, x1, 32);
    let x20: BytePoly_64 = bigint_mul!(x1, x1, 64);
    let x21: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x13, x19, 64),
                        bigint_add!(bigint_sub!(x3, bigint_mul!(x13, x2, 64), 64), x1, 64),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x22: BytePoly_34 = bigint_nondet_quot!(ctx, x21, x1, 34);
    let x23: BytePoly_32 = bigint_nondet_rem!(ctx, x21, x1, 32);
    let x24: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x16, bigint_mul!(x18, x1, 66), 66), x2, 66),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x19,
        66
    );
    eqz(ctx, &x24, 276359, 4)?;
    let x25: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x22, x1, 66), x23, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x13, bigint_sub!(x2, x19, 32), 64), x3, 64),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x25, 276359, 4)?;
    let x26: BytePoly_32 = bigint_add!(bigint_sub!(x5, x23, 32), x1, 32);
    let x27: BytePoly_32 = bigint_add!(bigint_sub!(x4, x19, 32), x1, 32);
    let x28: BytePoly_32 = bigint_nondet_inv!(ctx, x27, x1, 32);
    let x29: BytePoly_64 = bigint_mul!(x27, x28, 64);
    let x30: BytePoly_34 = bigint_nondet_quot!(ctx, x29, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x29, bigint_mul!(x30, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x31: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x26, x28, 64), x1, 32);
    let x32: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x31, x27, 64), x26, 64), x1, 64),
        x1,
        64
    );
    let x33: BytePoly_34 = bigint_nondet_quot!(ctx, x32, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x32, bigint_mul!(x33, x1, 66), 66),
        276359,
        4,
    )?;
    let x34: BytePoly_64 = bigint_mul!(x31, x31, 64);
    let x35: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x34, x19, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x36: BytePoly_34 = bigint_nondet_quot!(ctx, x35, x1, 34);
    let x37: BytePoly_32 = bigint_nondet_rem!(ctx, x35, x1, 32);
    let x38: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x31, x37, 64),
                        bigint_add!(bigint_sub!(x23, bigint_mul!(x31, x19, 64), 64), x1, 64),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x39: BytePoly_34 = bigint_nondet_quot!(ctx, x38, x1, 34);
    let x40: BytePoly_32 = bigint_nondet_rem!(ctx, x38, x1, 32);
    let x41: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x34, bigint_mul!(x36, x1, 66), 66), x19, 66),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x37,
        66
    );
    eqz(ctx, &x41, 276359, 4)?;
    let x42: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x39, x1, 66), x40, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x31, bigint_sub!(x19, x37, 32), 64), x23, 64),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x42, 276359, 4)?;
    let x43: BytePoly_32 = bigint_add!(bigint_sub!(x5, x40, 32), x1, 32);
    let x44: BytePoly_32 = bigint_add!(bigint_sub!(x4, x37, 32), x1, 32);
    let x45: BytePoly_32 = bigint_nondet_inv!(ctx, x44, x1, 32);
    let x46: BytePoly_64 = bigint_mul!(x44, x45, 64);
    let x47: BytePoly_34 = bigint_nondet_quot!(ctx, x46, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x46, bigint_mul!(x47, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x48: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x43, x45, 64), x1, 32);
    let x49: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x48, x44, 64), x43, 64), x1, 64),
        x1,
        64
    );
    let x50: BytePoly_34 = bigint_nondet_quot!(ctx, x49, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x49, bigint_mul!(x50, x1, 66), 66),
        276359,
        4,
    )?;
    let x51: BytePoly_64 = bigint_mul!(x48, x48, 64);
    let x52: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x51, x37, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x53: BytePoly_34 = bigint_nondet_quot!(ctx, x52, x1, 34);
    let x54: BytePoly_32 = bigint_nondet_rem!(ctx, x52, x1, 32);
    let x55: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x48, x54, 64),
                        bigint_add!(bigint_sub!(x40, bigint_mul!(x48, x37, 64), 64), x1, 64),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x56: BytePoly_34 = bigint_nondet_quot!(ctx, x55, x1, 34);
    let x57: BytePoly_32 = bigint_nondet_rem!(ctx, x55, x1, 32);
    let x58: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x51, bigint_mul!(x53, x1, 66), 66), x37, 66),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x54,
        66
    );
    eqz(ctx, &x58, 276359, 4)?;
    let x59: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x56, x1, 66), x57, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x48, bigint_sub!(x37, x54, 32), 64), x40, 64),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x59, 276359, 4)?;
    let x60: BytePoly_32 = bigint_add!(bigint_sub!(x5, x57, 32), x1, 32);
    let x61: BytePoly_32 = bigint_add!(bigint_sub!(x4, x54, 32), x1, 32);
    let x62: BytePoly_32 = bigint_nondet_inv!(ctx, x61, x1, 32);
    let x63: BytePoly_64 = bigint_mul!(x61, x62, 64);
    let x64: BytePoly_34 = bigint_nondet_quot!(ctx, x63, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x63, bigint_mul!(x64, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x65: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x60, x62, 64), x1, 32);
    let x66: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x65, x61, 64), x60, 64), x1, 64),
        x1,
        64
    );
    let x67: BytePoly_34 = bigint_nondet_quot!(ctx, x66, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x66, bigint_mul!(x67, x1, 66), 66),
        276359,
        4,
    )?;
    let x68: BytePoly_64 = bigint_mul!(x65, x65, 64);
    let x69: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x68, x54, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x70: BytePoly_34 = bigint_nondet_quot!(ctx, x69, x1, 34);
    let x71: BytePoly_32 = bigint_nondet_rem!(ctx, x69, x1, 32);
    let x72: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x65, x71, 64),
                        bigint_add!(bigint_sub!(x57, bigint_mul!(x65, x54, 64), 64), x1, 64),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x73: BytePoly_34 = bigint_nondet_quot!(ctx, x72, x1, 34);
    let x74: BytePoly_32 = bigint_nondet_rem!(ctx, x72, x1, 32);
    let x75: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x68, bigint_mul!(x70, x1, 66), 66), x54, 66),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x71,
        66
    );
    eqz(ctx, &x75, 276359, 4)?;
    let x76: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x73, x1, 66), x74, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x65, bigint_sub!(x54, x71, 32), 64), x57, 64),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x76, 276359, 4)?;
    let x77: BytePoly_32 = bigint_add!(bigint_sub!(x5, x74, 32), x1, 32);
    let x78: BytePoly_32 = bigint_add!(bigint_sub!(x4, x71, 32), x1, 32);
    let x79: BytePoly_32 = bigint_nondet_inv!(ctx, x78, x1, 32);
    let x80: BytePoly_64 = bigint_mul!(x78, x79, 64);
    let x81: BytePoly_34 = bigint_nondet_quot!(ctx, x80, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x80, bigint_mul!(x81, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x82: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x77, x79, 64), x1, 32);
    let x83: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x82, x78, 64), x77, 64), x1, 64),
        x1,
        64
    );
    let x84: BytePoly_34 = bigint_nondet_quot!(ctx, x83, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x83, bigint_mul!(x84, x1, 66), 66),
        276359,
        4,
    )?;
    let x85: BytePoly_64 = bigint_mul!(x82, x82, 64);
    let x86: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x85, x71, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x87: BytePoly_34 = bigint_nondet_quot!(ctx, x86, x1, 34);
    let x88: BytePoly_32 = bigint_nondet_rem!(ctx, x86, x1, 32);
    let x89: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x82, x88, 64),
                        bigint_add!(bigint_sub!(x74, bigint_mul!(x82, x71, 64), 64), x1, 64),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x90: BytePoly_34 = bigint_nondet_quot!(ctx, x89, x1, 34);
    let x91: BytePoly_32 = bigint_nondet_rem!(ctx, x89, x1, 32);
    let x92: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x85, bigint_mul!(x87, x1, 66), 66), x71, 66),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x88,
        66
    );
    eqz(ctx, &x92, 276359, 4)?;
    let x93: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x90, x1, 66), x91, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x82, bigint_sub!(x71, x88, 32), 64), x74, 64),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x93, 276359, 4)?;
    let x94: BytePoly_32 = bigint_add!(bigint_sub!(x5, x91, 32), x1, 32);
    let x95: BytePoly_32 = bigint_add!(bigint_sub!(x4, x88, 32), x1, 32);
    let x96: BytePoly_32 = bigint_nondet_inv!(ctx, x95, x1, 32);
    let x97: BytePoly_64 = bigint_mul!(x95, x96, 64);
    let x98: BytePoly_34 = bigint_nondet_quot!(ctx, x97, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x97, bigint_mul!(x98, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x99: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x94, x96, 64), x1, 32);
    let x100: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x99, x95, 64), x94, 64), x1, 64),
        x1,
        64
    );
    let x101: BytePoly_34 = bigint_nondet_quot!(ctx, x100, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x100, bigint_mul!(x101, x1, 66), 66),
        276359,
        4,
    )?;
    let x102: BytePoly_64 = bigint_mul!(x99, x99, 64);
    let x103: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x102, x88, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x104: BytePoly_34 = bigint_nondet_quot!(ctx, x103, x1, 34);
    let x105: BytePoly_32 = bigint_nondet_rem!(ctx, x103, x1, 32);
    let x106: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x99, x105, 64),
                        bigint_add!(bigint_sub!(x91, bigint_mul!(x99, x88, 64), 64), x1, 64),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x107: BytePoly_34 = bigint_nondet_quot!(ctx, x106, x1, 34);
    let x108: BytePoly_32 = bigint_nondet_rem!(ctx, x106, x1, 32);
    let x109: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x102, bigint_mul!(x104, x1, 66), 66), x88, 66),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x105,
        66
    );
    eqz(ctx, &x109, 276359, 4)?;
    let x110: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x107, x1, 66), x108, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x99, bigint_sub!(x88, x105, 32), 64), x91, 64),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x110, 276359, 4)?;
    let x111: BytePoly_32 = bigint_add!(bigint_sub!(x5, x108, 32), x1, 32);
    let x112: BytePoly_32 = bigint_add!(bigint_sub!(x4, x105, 32), x1, 32);
    let x113: BytePoly_32 = bigint_nondet_inv!(ctx, x112, x1, 32);
    let x114: BytePoly_64 = bigint_mul!(x112, x113, 64);
    let x115: BytePoly_34 = bigint_nondet_quot!(ctx, x114, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x114, bigint_mul!(x115, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x116: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x111, x113, 64), x1, 32);
    let x117: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x116, x112, 64), x111, 64), x1, 64),
        x1,
        64
    );
    let x118: BytePoly_34 = bigint_nondet_quot!(ctx, x117, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x117, bigint_mul!(x118, x1, 66), 66),
        276359,
        4,
    )?;
    let x119: BytePoly_64 = bigint_mul!(x116, x116, 64);
    let x120: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x119, x105, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x121: BytePoly_34 = bigint_nondet_quot!(ctx, x120, x1, 34);
    let x122: BytePoly_32 = bigint_nondet_rem!(ctx, x120, x1, 32);
    let x123: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x116, x122, 64),
                        bigint_add!(bigint_sub!(x108, bigint_mul!(x116, x105, 64), 64), x1, 64),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x124: BytePoly_34 = bigint_nondet_quot!(ctx, x123, x1, 34);
    let x125: BytePoly_32 = bigint_nondet_rem!(ctx, x123, x1, 32);
    let x126: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x119, bigint_mul!(x121, x1, 66), 66), x105, 66),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x122,
        66
    );
    eqz(ctx, &x126, 276359, 4)?;
    let x127: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x124, x1, 66), x125, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x116, bigint_sub!(x105, x122, 32), 64), x108, 64),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x127, 276359, 4)?;
    let x128: BytePoly_32 = bigint_add!(bigint_sub!(x5, x125, 32), x1, 32);
    let x129: BytePoly_32 = bigint_add!(bigint_sub!(x4, x122, 32), x1, 32);
    let x130: BytePoly_32 = bigint_nondet_inv!(ctx, x129, x1, 32);
    let x131: BytePoly_64 = bigint_mul!(x129, x130, 64);
    let x132: BytePoly_34 = bigint_nondet_quot!(ctx, x131, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x131, bigint_mul!(x132, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x133: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x128, x130, 64), x1, 32);
    let x134: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x133, x129, 64), x128, 64), x1, 64),
        x1,
        64
    );
    let x135: BytePoly_34 = bigint_nondet_quot!(ctx, x134, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x134, bigint_mul!(x135, x1, 66), 66),
        276359,
        4,
    )?;
    let x136: BytePoly_64 = bigint_mul!(x133, x133, 64);
    let x137: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x136, x122, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x138: BytePoly_34 = bigint_nondet_quot!(ctx, x137, x1, 34);
    let x139: BytePoly_32 = bigint_nondet_rem!(ctx, x137, x1, 32);
    let x140: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x133, x139, 64),
                        bigint_add!(bigint_sub!(x125, bigint_mul!(x133, x122, 64), 64), x1, 64),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x141: BytePoly_34 = bigint_nondet_quot!(ctx, x140, x1, 34);
    let x142: BytePoly_32 = bigint_nondet_rem!(ctx, x140, x1, 32);
    let x143: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x136, bigint_mul!(x138, x1, 66), 66), x122, 66),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x139,
        66
    );
    eqz(ctx, &x143, 276359, 4)?;
    let x144: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x141, x1, 66), x142, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x133, bigint_sub!(x122, x139, 32), 64), x125, 64),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x144, 276359, 4)?;
    let x145: BytePoly_32 = bigint_add!(bigint_sub!(x5, x142, 32), x1, 32);
    let x146: BytePoly_32 = bigint_add!(bigint_sub!(x4, x139, 32), x1, 32);
    let x147: BytePoly_32 = bigint_nondet_inv!(ctx, x146, x1, 32);
    let x148: BytePoly_64 = bigint_mul!(x146, x147, 64);
    let x149: BytePoly_34 = bigint_nondet_quot!(ctx, x148, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x148, bigint_mul!(x149, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x150: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x145, x147, 64), x1, 32);
    let x151: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x150, x146, 64), x145, 64), x1, 64),
        x1,
        64
    );
    let x152: BytePoly_34 = bigint_nondet_quot!(ctx, x151, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x151, bigint_mul!(x152, x1, 66), 66),
        276359,
        4,
    )?;
    let x153: BytePoly_64 = bigint_mul!(x150, x150, 64);
    let x154: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x153, x139, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x155: BytePoly_34 = bigint_nondet_quot!(ctx, x154, x1, 34);
    let x156: BytePoly_32 = bigint_nondet_rem!(ctx, x154, x1, 32);
    let x157: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x150, x156, 64),
                        bigint_add!(bigint_sub!(x142, bigint_mul!(x150, x139, 64), 64), x1, 64),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x158: BytePoly_34 = bigint_nondet_quot!(ctx, x157, x1, 34);
    let x159: BytePoly_32 = bigint_nondet_rem!(ctx, x157, x1, 32);
    let x160: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x153, bigint_mul!(x155, x1, 66), 66), x139, 66),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x156,
        66
    );
    eqz(ctx, &x160, 276359, 4)?;
    let x161: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x158, x1, 66), x159, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x150, bigint_sub!(x139, x156, 32), 64), x142, 64),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x161, 276359, 4)?;
    let x162: BytePoly_32 = bigint_add!(bigint_sub!(x5, x159, 32), x1, 32);
    let x163: BytePoly_32 = bigint_add!(bigint_sub!(x4, x156, 32), x1, 32);
    let x164: BytePoly_32 = bigint_nondet_inv!(ctx, x163, x1, 32);
    let x165: BytePoly_64 = bigint_mul!(x163, x164, 64);
    let x166: BytePoly_34 = bigint_nondet_quot!(ctx, x165, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x165, bigint_mul!(x166, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x167: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x162, x164, 64), x1, 32);
    let x168: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x167, x163, 64), x162, 64), x1, 64),
        x1,
        64
    );
    let x169: BytePoly_34 = bigint_nondet_quot!(ctx, x168, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x168, bigint_mul!(x169, x1, 66), 66),
        276359,
        4,
    )?;
    let x170: BytePoly_64 = bigint_mul!(x167, x167, 64);
    let x171: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x170, x156, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x172: BytePoly_34 = bigint_nondet_quot!(ctx, x171, x1, 34);
    let x173: BytePoly_32 = bigint_nondet_rem!(ctx, x171, x1, 32);
    let x174: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x167, x173, 64),
                        bigint_add!(bigint_sub!(x159, bigint_mul!(x167, x156, 64), 64), x1, 64),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x175: BytePoly_34 = bigint_nondet_quot!(ctx, x174, x1, 34);
    let x176: BytePoly_32 = bigint_nondet_rem!(ctx, x174, x1, 32);
    let x177: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x170, bigint_mul!(x172, x1, 66), 66), x156, 66),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x173,
        66
    );
    eqz(ctx, &x177, 276359, 4)?;
    let x178: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x175, x1, 66), x176, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x167, bigint_sub!(x156, x173, 32), 64), x159, 64),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x178, 276359, 4)?;
    eqz(ctx, &bigint_sub!(x173, x6, 32), 34, 1)?;
    eqz(ctx, &bigint_sub!(x176, x7, 32), 34, 1)?;
    return Ok(());
}
pub fn rep_ec_aff_add_test_full_256_r256(ctx: &mut BigIntContext) -> Result<()> {
    let x0: BytePoly_1 = bigint_const!(ctx, 1);
    let x1: BytePoly_32 = bigint_const!(
        ctx, 47, 252, 255, 255, 254, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
        255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255
    );
    let x2: BytePoly_32 = bigint_def!(ctx, 32, 0, 1);
    let x3: BytePoly_32 = bigint_def!(ctx, 32, 1, 1);
    let x4: BytePoly_32 = bigint_def!(ctx, 32, 2, 1);
    let x5: BytePoly_32 = bigint_def!(ctx, 32, 3, 1);
    let x6: BytePoly_32 = bigint_def!(ctx, 32, 4, 1);
    let x7: BytePoly_32 = bigint_def!(ctx, 32, 5, 1);
    let x8: BytePoly_32 = bigint_add!(bigint_sub!(x5, x3, 32), x1, 32);
    let x9: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2, 32), x1, 32);
    let x10: BytePoly_32 = bigint_nondet_inv!(ctx, x9, x1, 32);
    let x11: BytePoly_64 = bigint_mul!(x9, x10, 64);
    let x12: BytePoly_34 = bigint_nondet_quot!(ctx, x11, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x11, bigint_mul!(x12, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x13: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x8, x10, 64), x1, 32);
    let x14: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x13, x9, 64), x8, 64), x1, 64),
        x1,
        64
    );
    let x15: BytePoly_34 = bigint_nondet_quot!(ctx, x14, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x14, bigint_mul!(x15, x1, 66), 66),
        276359,
        4,
    )?;
    let x16: BytePoly_64 = bigint_mul!(x13, x13, 64);
    let x17: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x16, x2, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x18: BytePoly_34 = bigint_nondet_quot!(ctx, x17, x1, 34);
    let x19: BytePoly_32 = bigint_nondet_rem!(ctx, x17, x1, 32);
    let x20: BytePoly_64 = bigint_mul!(x1, x1, 64);
    let x21: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x13, x19, 64),
                        bigint_add!(bigint_sub!(x3, bigint_mul!(x13, x2, 64), 64), x1, 64),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x22: BytePoly_34 = bigint_nondet_quot!(ctx, x21, x1, 34);
    let x23: BytePoly_32 = bigint_nondet_rem!(ctx, x21, x1, 32);
    let x24: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x16, bigint_mul!(x18, x1, 66), 66), x2, 66),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x19,
        66
    );
    eqz(ctx, &x24, 276359, 4)?;
    let x25: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x22, x1, 66), x23, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x13, bigint_sub!(x2, x19, 32), 64), x3, 64),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x25, 276359, 4)?;
    let x26: BytePoly_32 = bigint_add!(bigint_sub!(x5, x23, 32), x1, 32);
    let x27: BytePoly_32 = bigint_add!(bigint_sub!(x4, x19, 32), x1, 32);
    let x28: BytePoly_32 = bigint_nondet_inv!(ctx, x27, x1, 32);
    let x29: BytePoly_64 = bigint_mul!(x27, x28, 64);
    let x30: BytePoly_34 = bigint_nondet_quot!(ctx, x29, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x29, bigint_mul!(x30, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x31: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x26, x28, 64), x1, 32);
    let x32: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x31, x27, 64), x26, 64), x1, 64),
        x1,
        64
    );
    let x33: BytePoly_34 = bigint_nondet_quot!(ctx, x32, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x32, bigint_mul!(x33, x1, 66), 66),
        276359,
        4,
    )?;
    let x34: BytePoly_64 = bigint_mul!(x31, x31, 64);
    let x35: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x34, x19, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x36: BytePoly_34 = bigint_nondet_quot!(ctx, x35, x1, 34);
    let x37: BytePoly_32 = bigint_nondet_rem!(ctx, x35, x1, 32);
    let x38: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x31, x37, 64),
                        bigint_add!(bigint_sub!(x23, bigint_mul!(x31, x19, 64), 64), x1, 64),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x39: BytePoly_34 = bigint_nondet_quot!(ctx, x38, x1, 34);
    let x40: BytePoly_32 = bigint_nondet_rem!(ctx, x38, x1, 32);
    let x41: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x34, bigint_mul!(x36, x1, 66), 66), x19, 66),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x37,
        66
    );
    eqz(ctx, &x41, 276359, 4)?;
    let x42: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x39, x1, 66), x40, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x31, bigint_sub!(x19, x37, 32), 64), x23, 64),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x42, 276359, 4)?;
    let x43: BytePoly_32 = bigint_add!(bigint_sub!(x5, x40, 32), x1, 32);
    let x44: BytePoly_32 = bigint_add!(bigint_sub!(x4, x37, 32), x1, 32);
    let x45: BytePoly_32 = bigint_nondet_inv!(ctx, x44, x1, 32);
    let x46: BytePoly_64 = bigint_mul!(x44, x45, 64);
    let x47: BytePoly_34 = bigint_nondet_quot!(ctx, x46, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x46, bigint_mul!(x47, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x48: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x43, x45, 64), x1, 32);
    let x49: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x48, x44, 64), x43, 64), x1, 64),
        x1,
        64
    );
    let x50: BytePoly_34 = bigint_nondet_quot!(ctx, x49, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x49, bigint_mul!(x50, x1, 66), 66),
        276359,
        4,
    )?;
    let x51: BytePoly_64 = bigint_mul!(x48, x48, 64);
    let x52: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x51, x37, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x53: BytePoly_34 = bigint_nondet_quot!(ctx, x52, x1, 34);
    let x54: BytePoly_32 = bigint_nondet_rem!(ctx, x52, x1, 32);
    let x55: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x48, x54, 64),
                        bigint_add!(bigint_sub!(x40, bigint_mul!(x48, x37, 64), 64), x1, 64),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x56: BytePoly_34 = bigint_nondet_quot!(ctx, x55, x1, 34);
    let x57: BytePoly_32 = bigint_nondet_rem!(ctx, x55, x1, 32);
    let x58: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x51, bigint_mul!(x53, x1, 66), 66), x37, 66),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x54,
        66
    );
    eqz(ctx, &x58, 276359, 4)?;
    let x59: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x56, x1, 66), x57, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x48, bigint_sub!(x37, x54, 32), 64), x40, 64),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x59, 276359, 4)?;
    let x60: BytePoly_32 = bigint_add!(bigint_sub!(x5, x57, 32), x1, 32);
    let x61: BytePoly_32 = bigint_add!(bigint_sub!(x4, x54, 32), x1, 32);
    let x62: BytePoly_32 = bigint_nondet_inv!(ctx, x61, x1, 32);
    let x63: BytePoly_64 = bigint_mul!(x61, x62, 64);
    let x64: BytePoly_34 = bigint_nondet_quot!(ctx, x63, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x63, bigint_mul!(x64, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x65: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x60, x62, 64), x1, 32);
    let x66: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x65, x61, 64), x60, 64), x1, 64),
        x1,
        64
    );
    let x67: BytePoly_34 = bigint_nondet_quot!(ctx, x66, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x66, bigint_mul!(x67, x1, 66), 66),
        276359,
        4,
    )?;
    let x68: BytePoly_64 = bigint_mul!(x65, x65, 64);
    let x69: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x68, x54, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x70: BytePoly_34 = bigint_nondet_quot!(ctx, x69, x1, 34);
    let x71: BytePoly_32 = bigint_nondet_rem!(ctx, x69, x1, 32);
    let x72: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x65, x71, 64),
                        bigint_add!(bigint_sub!(x57, bigint_mul!(x65, x54, 64), 64), x1, 64),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x73: BytePoly_34 = bigint_nondet_quot!(ctx, x72, x1, 34);
    let x74: BytePoly_32 = bigint_nondet_rem!(ctx, x72, x1, 32);
    let x75: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x68, bigint_mul!(x70, x1, 66), 66), x54, 66),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x71,
        66
    );
    eqz(ctx, &x75, 276359, 4)?;
    let x76: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x73, x1, 66), x74, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x65, bigint_sub!(x54, x71, 32), 64), x57, 64),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x76, 276359, 4)?;
    let x77: BytePoly_32 = bigint_add!(bigint_sub!(x5, x74, 32), x1, 32);
    let x78: BytePoly_32 = bigint_add!(bigint_sub!(x4, x71, 32), x1, 32);
    let x79: BytePoly_32 = bigint_nondet_inv!(ctx, x78, x1, 32);
    let x80: BytePoly_64 = bigint_mul!(x78, x79, 64);
    let x81: BytePoly_34 = bigint_nondet_quot!(ctx, x80, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x80, bigint_mul!(x81, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x82: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x77, x79, 64), x1, 32);
    let x83: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x82, x78, 64), x77, 64), x1, 64),
        x1,
        64
    );
    let x84: BytePoly_34 = bigint_nondet_quot!(ctx, x83, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x83, bigint_mul!(x84, x1, 66), 66),
        276359,
        4,
    )?;
    let x85: BytePoly_64 = bigint_mul!(x82, x82, 64);
    let x86: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x85, x71, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x87: BytePoly_34 = bigint_nondet_quot!(ctx, x86, x1, 34);
    let x88: BytePoly_32 = bigint_nondet_rem!(ctx, x86, x1, 32);
    let x89: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x82, x88, 64),
                        bigint_add!(bigint_sub!(x74, bigint_mul!(x82, x71, 64), 64), x1, 64),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x90: BytePoly_34 = bigint_nondet_quot!(ctx, x89, x1, 34);
    let x91: BytePoly_32 = bigint_nondet_rem!(ctx, x89, x1, 32);
    let x92: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x85, bigint_mul!(x87, x1, 66), 66), x71, 66),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x88,
        66
    );
    eqz(ctx, &x92, 276359, 4)?;
    let x93: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x90, x1, 66), x91, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x82, bigint_sub!(x71, x88, 32), 64), x74, 64),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x93, 276359, 4)?;
    let x94: BytePoly_32 = bigint_add!(bigint_sub!(x5, x91, 32), x1, 32);
    let x95: BytePoly_32 = bigint_add!(bigint_sub!(x4, x88, 32), x1, 32);
    let x96: BytePoly_32 = bigint_nondet_inv!(ctx, x95, x1, 32);
    let x97: BytePoly_64 = bigint_mul!(x95, x96, 64);
    let x98: BytePoly_34 = bigint_nondet_quot!(ctx, x97, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x97, bigint_mul!(x98, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x99: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x94, x96, 64), x1, 32);
    let x100: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x99, x95, 64), x94, 64), x1, 64),
        x1,
        64
    );
    let x101: BytePoly_34 = bigint_nondet_quot!(ctx, x100, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x100, bigint_mul!(x101, x1, 66), 66),
        276359,
        4,
    )?;
    let x102: BytePoly_64 = bigint_mul!(x99, x99, 64);
    let x103: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x102, x88, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x104: BytePoly_34 = bigint_nondet_quot!(ctx, x103, x1, 34);
    let x105: BytePoly_32 = bigint_nondet_rem!(ctx, x103, x1, 32);
    let x106: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x99, x105, 64),
                        bigint_add!(bigint_sub!(x91, bigint_mul!(x99, x88, 64), 64), x1, 64),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x107: BytePoly_34 = bigint_nondet_quot!(ctx, x106, x1, 34);
    let x108: BytePoly_32 = bigint_nondet_rem!(ctx, x106, x1, 32);
    let x109: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x102, bigint_mul!(x104, x1, 66), 66), x88, 66),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x105,
        66
    );
    eqz(ctx, &x109, 276359, 4)?;
    let x110: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x107, x1, 66), x108, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x99, bigint_sub!(x88, x105, 32), 64), x91, 64),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x110, 276359, 4)?;
    let x111: BytePoly_32 = bigint_add!(bigint_sub!(x5, x108, 32), x1, 32);
    let x112: BytePoly_32 = bigint_add!(bigint_sub!(x4, x105, 32), x1, 32);
    let x113: BytePoly_32 = bigint_nondet_inv!(ctx, x112, x1, 32);
    let x114: BytePoly_64 = bigint_mul!(x112, x113, 64);
    let x115: BytePoly_34 = bigint_nondet_quot!(ctx, x114, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x114, bigint_mul!(x115, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x116: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x111, x113, 64), x1, 32);
    let x117: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x116, x112, 64), x111, 64), x1, 64),
        x1,
        64
    );
    let x118: BytePoly_34 = bigint_nondet_quot!(ctx, x117, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x117, bigint_mul!(x118, x1, 66), 66),
        276359,
        4,
    )?;
    let x119: BytePoly_64 = bigint_mul!(x116, x116, 64);
    let x120: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x119, x105, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x121: BytePoly_34 = bigint_nondet_quot!(ctx, x120, x1, 34);
    let x122: BytePoly_32 = bigint_nondet_rem!(ctx, x120, x1, 32);
    let x123: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x116, x122, 64),
                        bigint_add!(bigint_sub!(x108, bigint_mul!(x116, x105, 64), 64), x1, 64),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x124: BytePoly_34 = bigint_nondet_quot!(ctx, x123, x1, 34);
    let x125: BytePoly_32 = bigint_nondet_rem!(ctx, x123, x1, 32);
    let x126: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x119, bigint_mul!(x121, x1, 66), 66), x105, 66),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x122,
        66
    );
    eqz(ctx, &x126, 276359, 4)?;
    let x127: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x124, x1, 66), x125, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x116, bigint_sub!(x105, x122, 32), 64), x108, 64),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x127, 276359, 4)?;
    let x128: BytePoly_32 = bigint_add!(bigint_sub!(x5, x125, 32), x1, 32);
    let x129: BytePoly_32 = bigint_add!(bigint_sub!(x4, x122, 32), x1, 32);
    let x130: BytePoly_32 = bigint_nondet_inv!(ctx, x129, x1, 32);
    let x131: BytePoly_64 = bigint_mul!(x129, x130, 64);
    let x132: BytePoly_34 = bigint_nondet_quot!(ctx, x131, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x131, bigint_mul!(x132, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x133: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x128, x130, 64), x1, 32);
    let x134: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x133, x129, 64), x128, 64), x1, 64),
        x1,
        64
    );
    let x135: BytePoly_34 = bigint_nondet_quot!(ctx, x134, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x134, bigint_mul!(x135, x1, 66), 66),
        276359,
        4,
    )?;
    let x136: BytePoly_64 = bigint_mul!(x133, x133, 64);
    let x137: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x136, x122, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x138: BytePoly_34 = bigint_nondet_quot!(ctx, x137, x1, 34);
    let x139: BytePoly_32 = bigint_nondet_rem!(ctx, x137, x1, 32);
    let x140: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x133, x139, 64),
                        bigint_add!(bigint_sub!(x125, bigint_mul!(x133, x122, 64), 64), x1, 64),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x141: BytePoly_34 = bigint_nondet_quot!(ctx, x140, x1, 34);
    let x142: BytePoly_32 = bigint_nondet_rem!(ctx, x140, x1, 32);
    let x143: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x136, bigint_mul!(x138, x1, 66), 66), x122, 66),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x139,
        66
    );
    eqz(ctx, &x143, 276359, 4)?;
    let x144: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x141, x1, 66), x142, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x133, bigint_sub!(x122, x139, 32), 64), x125, 64),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x144, 276359, 4)?;
    let x145: BytePoly_32 = bigint_add!(bigint_sub!(x5, x142, 32), x1, 32);
    let x146: BytePoly_32 = bigint_add!(bigint_sub!(x4, x139, 32), x1, 32);
    let x147: BytePoly_32 = bigint_nondet_inv!(ctx, x146, x1, 32);
    let x148: BytePoly_64 = bigint_mul!(x146, x147, 64);
    let x149: BytePoly_34 = bigint_nondet_quot!(ctx, x148, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x148, bigint_mul!(x149, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x150: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x145, x147, 64), x1, 32);
    let x151: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x150, x146, 64), x145, 64), x1, 64),
        x1,
        64
    );
    let x152: BytePoly_34 = bigint_nondet_quot!(ctx, x151, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x151, bigint_mul!(x152, x1, 66), 66),
        276359,
        4,
    )?;
    let x153: BytePoly_64 = bigint_mul!(x150, x150, 64);
    let x154: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x153, x139, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x155: BytePoly_34 = bigint_nondet_quot!(ctx, x154, x1, 34);
    let x156: BytePoly_32 = bigint_nondet_rem!(ctx, x154, x1, 32);
    let x157: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x150, x156, 64),
                        bigint_add!(bigint_sub!(x142, bigint_mul!(x150, x139, 64), 64), x1, 64),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x158: BytePoly_34 = bigint_nondet_quot!(ctx, x157, x1, 34);
    let x159: BytePoly_32 = bigint_nondet_rem!(ctx, x157, x1, 32);
    let x160: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x153, bigint_mul!(x155, x1, 66), 66), x139, 66),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x156,
        66
    );
    eqz(ctx, &x160, 276359, 4)?;
    let x161: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x158, x1, 66), x159, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x150, bigint_sub!(x139, x156, 32), 64), x142, 64),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x161, 276359, 4)?;
    let x162: BytePoly_32 = bigint_add!(bigint_sub!(x5, x159, 32), x1, 32);
    let x163: BytePoly_32 = bigint_add!(bigint_sub!(x4, x156, 32), x1, 32);
    let x164: BytePoly_32 = bigint_nondet_inv!(ctx, x163, x1, 32);
    let x165: BytePoly_64 = bigint_mul!(x163, x164, 64);
    let x166: BytePoly_34 = bigint_nondet_quot!(ctx, x165, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x165, bigint_mul!(x166, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x167: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x162, x164, 64), x1, 32);
    let x168: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x167, x163, 64), x162, 64), x1, 64),
        x1,
        64
    );
    let x169: BytePoly_34 = bigint_nondet_quot!(ctx, x168, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x168, bigint_mul!(x169, x1, 66), 66),
        276359,
        4,
    )?;
    let x170: BytePoly_64 = bigint_mul!(x167, x167, 64);
    let x171: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x170, x156, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x172: BytePoly_34 = bigint_nondet_quot!(ctx, x171, x1, 34);
    let x173: BytePoly_32 = bigint_nondet_rem!(ctx, x171, x1, 32);
    let x174: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x167, x173, 64),
                        bigint_add!(bigint_sub!(x159, bigint_mul!(x167, x156, 64), 64), x1, 64),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x175: BytePoly_34 = bigint_nondet_quot!(ctx, x174, x1, 34);
    let x176: BytePoly_32 = bigint_nondet_rem!(ctx, x174, x1, 32);
    let x177: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x170, bigint_mul!(x172, x1, 66), 66), x156, 66),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x173,
        66
    );
    eqz(ctx, &x177, 276359, 4)?;
    let x178: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x175, x1, 66), x176, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x167, bigint_sub!(x156, x173, 32), 64), x159, 64),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x178, 276359, 4)?;
    let x179: BytePoly_32 = bigint_add!(bigint_sub!(x5, x176, 32), x1, 32);
    let x180: BytePoly_32 = bigint_add!(bigint_sub!(x4, x173, 32), x1, 32);
    let x181: BytePoly_32 = bigint_nondet_inv!(ctx, x180, x1, 32);
    let x182: BytePoly_64 = bigint_mul!(x180, x181, 64);
    let x183: BytePoly_34 = bigint_nondet_quot!(ctx, x182, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x182, bigint_mul!(x183, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x184: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x179, x181, 64), x1, 32);
    let x185: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x184, x180, 64), x179, 64), x1, 64),
        x1,
        64
    );
    let x186: BytePoly_34 = bigint_nondet_quot!(ctx, x185, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x185, bigint_mul!(x186, x1, 66), 66),
        276359,
        4,
    )?;
    let x187: BytePoly_64 = bigint_mul!(x184, x184, 64);
    let x188: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x187, x173, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x189: BytePoly_34 = bigint_nondet_quot!(ctx, x188, x1, 34);
    let x190: BytePoly_32 = bigint_nondet_rem!(ctx, x188, x1, 32);
    let x191: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x184, x190, 64),
                        bigint_add!(bigint_sub!(x176, bigint_mul!(x184, x173, 64), 64), x1, 64),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x192: BytePoly_34 = bigint_nondet_quot!(ctx, x191, x1, 34);
    let x193: BytePoly_32 = bigint_nondet_rem!(ctx, x191, x1, 32);
    let x194: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x187, bigint_mul!(x189, x1, 66), 66), x173, 66),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x190,
        66
    );
    eqz(ctx, &x194, 276359, 4)?;
    let x195: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x192, x1, 66), x193, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x184, bigint_sub!(x173, x190, 32), 64), x176, 64),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x195, 276359, 4)?;
    let x196: BytePoly_32 = bigint_add!(bigint_sub!(x5, x193, 32), x1, 32);
    let x197: BytePoly_32 = bigint_add!(bigint_sub!(x4, x190, 32), x1, 32);
    let x198: BytePoly_32 = bigint_nondet_inv!(ctx, x197, x1, 32);
    let x199: BytePoly_64 = bigint_mul!(x197, x198, 64);
    let x200: BytePoly_34 = bigint_nondet_quot!(ctx, x199, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x199, bigint_mul!(x200, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x201: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x196, x198, 64), x1, 32);
    let x202: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x201, x197, 64), x196, 64), x1, 64),
        x1,
        64
    );
    let x203: BytePoly_34 = bigint_nondet_quot!(ctx, x202, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x202, bigint_mul!(x203, x1, 66), 66),
        276359,
        4,
    )?;
    let x204: BytePoly_64 = bigint_mul!(x201, x201, 64);
    let x205: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x204, x190, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x206: BytePoly_34 = bigint_nondet_quot!(ctx, x205, x1, 34);
    let x207: BytePoly_32 = bigint_nondet_rem!(ctx, x205, x1, 32);
    let x208: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x201, x207, 64),
                        bigint_add!(bigint_sub!(x193, bigint_mul!(x201, x190, 64), 64), x1, 64),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x209: BytePoly_34 = bigint_nondet_quot!(ctx, x208, x1, 34);
    let x210: BytePoly_32 = bigint_nondet_rem!(ctx, x208, x1, 32);
    let x211: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x204, bigint_mul!(x206, x1, 66), 66), x190, 66),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x207,
        66
    );
    eqz(ctx, &x211, 276359, 4)?;
    let x212: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x209, x1, 66), x210, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x201, bigint_sub!(x190, x207, 32), 64), x193, 64),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x212, 276359, 4)?;
    let x213: BytePoly_32 = bigint_add!(bigint_sub!(x5, x210, 32), x1, 32);
    let x214: BytePoly_32 = bigint_add!(bigint_sub!(x4, x207, 32), x1, 32);
    let x215: BytePoly_32 = bigint_nondet_inv!(ctx, x214, x1, 32);
    let x216: BytePoly_64 = bigint_mul!(x214, x215, 64);
    let x217: BytePoly_34 = bigint_nondet_quot!(ctx, x216, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x216, bigint_mul!(x217, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x218: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x213, x215, 64), x1, 32);
    let x219: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x218, x214, 64), x213, 64), x1, 64),
        x1,
        64
    );
    let x220: BytePoly_34 = bigint_nondet_quot!(ctx, x219, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x219, bigint_mul!(x220, x1, 66), 66),
        276359,
        4,
    )?;
    let x221: BytePoly_64 = bigint_mul!(x218, x218, 64);
    let x222: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x221, x207, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x223: BytePoly_34 = bigint_nondet_quot!(ctx, x222, x1, 34);
    let x224: BytePoly_32 = bigint_nondet_rem!(ctx, x222, x1, 32);
    let x225: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x218, x224, 64),
                        bigint_add!(bigint_sub!(x210, bigint_mul!(x218, x207, 64), 64), x1, 64),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x226: BytePoly_34 = bigint_nondet_quot!(ctx, x225, x1, 34);
    let x227: BytePoly_32 = bigint_nondet_rem!(ctx, x225, x1, 32);
    let x228: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x221, bigint_mul!(x223, x1, 66), 66), x207, 66),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x224,
        66
    );
    eqz(ctx, &x228, 276359, 4)?;
    let x229: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x226, x1, 66), x227, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x218, bigint_sub!(x207, x224, 32), 64), x210, 64),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x229, 276359, 4)?;
    let x230: BytePoly_32 = bigint_add!(bigint_sub!(x5, x227, 32), x1, 32);
    let x231: BytePoly_32 = bigint_add!(bigint_sub!(x4, x224, 32), x1, 32);
    let x232: BytePoly_32 = bigint_nondet_inv!(ctx, x231, x1, 32);
    let x233: BytePoly_64 = bigint_mul!(x231, x232, 64);
    let x234: BytePoly_34 = bigint_nondet_quot!(ctx, x233, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x233, bigint_mul!(x234, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x235: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x230, x232, 64), x1, 32);
    let x236: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x235, x231, 64), x230, 64), x1, 64),
        x1,
        64
    );
    let x237: BytePoly_34 = bigint_nondet_quot!(ctx, x236, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x236, bigint_mul!(x237, x1, 66), 66),
        276359,
        4,
    )?;
    let x238: BytePoly_64 = bigint_mul!(x235, x235, 64);
    let x239: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x238, x224, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x240: BytePoly_34 = bigint_nondet_quot!(ctx, x239, x1, 34);
    let x241: BytePoly_32 = bigint_nondet_rem!(ctx, x239, x1, 32);
    let x242: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x235, x241, 64),
                        bigint_add!(bigint_sub!(x227, bigint_mul!(x235, x224, 64), 64), x1, 64),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x243: BytePoly_34 = bigint_nondet_quot!(ctx, x242, x1, 34);
    let x244: BytePoly_32 = bigint_nondet_rem!(ctx, x242, x1, 32);
    let x245: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x238, bigint_mul!(x240, x1, 66), 66), x224, 66),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x241,
        66
    );
    eqz(ctx, &x245, 276359, 4)?;
    let x246: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x243, x1, 66), x244, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x235, bigint_sub!(x224, x241, 32), 64), x227, 64),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x246, 276359, 4)?;
    let x247: BytePoly_32 = bigint_add!(bigint_sub!(x5, x244, 32), x1, 32);
    let x248: BytePoly_32 = bigint_add!(bigint_sub!(x4, x241, 32), x1, 32);
    let x249: BytePoly_32 = bigint_nondet_inv!(ctx, x248, x1, 32);
    let x250: BytePoly_64 = bigint_mul!(x248, x249, 64);
    let x251: BytePoly_34 = bigint_nondet_quot!(ctx, x250, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x250, bigint_mul!(x251, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x252: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x247, x249, 64), x1, 32);
    let x253: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x252, x248, 64), x247, 64), x1, 64),
        x1,
        64
    );
    let x254: BytePoly_34 = bigint_nondet_quot!(ctx, x253, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x253, bigint_mul!(x254, x1, 66), 66),
        276359,
        4,
    )?;
    let x255: BytePoly_64 = bigint_mul!(x252, x252, 64);
    let x256: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x255, x241, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x257: BytePoly_34 = bigint_nondet_quot!(ctx, x256, x1, 34);
    let x258: BytePoly_32 = bigint_nondet_rem!(ctx, x256, x1, 32);
    let x259: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x252, x258, 64),
                        bigint_add!(bigint_sub!(x244, bigint_mul!(x252, x241, 64), 64), x1, 64),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x260: BytePoly_34 = bigint_nondet_quot!(ctx, x259, x1, 34);
    let x261: BytePoly_32 = bigint_nondet_rem!(ctx, x259, x1, 32);
    let x262: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x255, bigint_mul!(x257, x1, 66), 66), x241, 66),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x258,
        66
    );
    eqz(ctx, &x262, 276359, 4)?;
    let x263: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x260, x1, 66), x261, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x252, bigint_sub!(x241, x258, 32), 64), x244, 64),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x263, 276359, 4)?;
    let x264: BytePoly_32 = bigint_add!(bigint_sub!(x5, x261, 32), x1, 32);
    let x265: BytePoly_32 = bigint_add!(bigint_sub!(x4, x258, 32), x1, 32);
    let x266: BytePoly_32 = bigint_nondet_inv!(ctx, x265, x1, 32);
    let x267: BytePoly_64 = bigint_mul!(x265, x266, 64);
    let x268: BytePoly_34 = bigint_nondet_quot!(ctx, x267, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x267, bigint_mul!(x268, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x269: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x264, x266, 64), x1, 32);
    let x270: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x269, x265, 64), x264, 64), x1, 64),
        x1,
        64
    );
    let x271: BytePoly_34 = bigint_nondet_quot!(ctx, x270, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x270, bigint_mul!(x271, x1, 66), 66),
        276359,
        4,
    )?;
    let x272: BytePoly_64 = bigint_mul!(x269, x269, 64);
    let x273: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x272, x258, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x274: BytePoly_34 = bigint_nondet_quot!(ctx, x273, x1, 34);
    let x275: BytePoly_32 = bigint_nondet_rem!(ctx, x273, x1, 32);
    let x276: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x269, x275, 64),
                        bigint_add!(bigint_sub!(x261, bigint_mul!(x269, x258, 64), 64), x1, 64),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x277: BytePoly_34 = bigint_nondet_quot!(ctx, x276, x1, 34);
    let x278: BytePoly_32 = bigint_nondet_rem!(ctx, x276, x1, 32);
    let x279: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x272, bigint_mul!(x274, x1, 66), 66), x258, 66),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x275,
        66
    );
    eqz(ctx, &x279, 276359, 4)?;
    let x280: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x277, x1, 66), x278, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x269, bigint_sub!(x258, x275, 32), 64), x261, 64),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x280, 276359, 4)?;
    let x281: BytePoly_32 = bigint_add!(bigint_sub!(x5, x278, 32), x1, 32);
    let x282: BytePoly_32 = bigint_add!(bigint_sub!(x4, x275, 32), x1, 32);
    let x283: BytePoly_32 = bigint_nondet_inv!(ctx, x282, x1, 32);
    let x284: BytePoly_64 = bigint_mul!(x282, x283, 64);
    let x285: BytePoly_34 = bigint_nondet_quot!(ctx, x284, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x284, bigint_mul!(x285, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x286: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x281, x283, 64), x1, 32);
    let x287: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x286, x282, 64), x281, 64), x1, 64),
        x1,
        64
    );
    let x288: BytePoly_34 = bigint_nondet_quot!(ctx, x287, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x287, bigint_mul!(x288, x1, 66), 66),
        276359,
        4,
    )?;
    let x289: BytePoly_64 = bigint_mul!(x286, x286, 64);
    let x290: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x289, x275, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x291: BytePoly_34 = bigint_nondet_quot!(ctx, x290, x1, 34);
    let x292: BytePoly_32 = bigint_nondet_rem!(ctx, x290, x1, 32);
    let x293: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x286, x292, 64),
                        bigint_add!(bigint_sub!(x278, bigint_mul!(x286, x275, 64), 64), x1, 64),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x294: BytePoly_34 = bigint_nondet_quot!(ctx, x293, x1, 34);
    let x295: BytePoly_32 = bigint_nondet_rem!(ctx, x293, x1, 32);
    let x296: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x289, bigint_mul!(x291, x1, 66), 66), x275, 66),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x292,
        66
    );
    eqz(ctx, &x296, 276359, 4)?;
    let x297: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x294, x1, 66), x295, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x286, bigint_sub!(x275, x292, 32), 64), x278, 64),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x297, 276359, 4)?;
    let x298: BytePoly_32 = bigint_add!(bigint_sub!(x5, x295, 32), x1, 32);
    let x299: BytePoly_32 = bigint_add!(bigint_sub!(x4, x292, 32), x1, 32);
    let x300: BytePoly_32 = bigint_nondet_inv!(ctx, x299, x1, 32);
    let x301: BytePoly_64 = bigint_mul!(x299, x300, 64);
    let x302: BytePoly_34 = bigint_nondet_quot!(ctx, x301, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x301, bigint_mul!(x302, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x303: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x298, x300, 64), x1, 32);
    let x304: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x303, x299, 64), x298, 64), x1, 64),
        x1,
        64
    );
    let x305: BytePoly_34 = bigint_nondet_quot!(ctx, x304, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x304, bigint_mul!(x305, x1, 66), 66),
        276359,
        4,
    )?;
    let x306: BytePoly_64 = bigint_mul!(x303, x303, 64);
    let x307: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x306, x292, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x308: BytePoly_34 = bigint_nondet_quot!(ctx, x307, x1, 34);
    let x309: BytePoly_32 = bigint_nondet_rem!(ctx, x307, x1, 32);
    let x310: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x303, x309, 64),
                        bigint_add!(bigint_sub!(x295, bigint_mul!(x303, x292, 64), 64), x1, 64),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x311: BytePoly_34 = bigint_nondet_quot!(ctx, x310, x1, 34);
    let x312: BytePoly_32 = bigint_nondet_rem!(ctx, x310, x1, 32);
    let x313: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x306, bigint_mul!(x308, x1, 66), 66), x292, 66),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x309,
        66
    );
    eqz(ctx, &x313, 276359, 4)?;
    let x314: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x311, x1, 66), x312, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x303, bigint_sub!(x292, x309, 32), 64), x295, 64),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x314, 276359, 4)?;
    let x315: BytePoly_32 = bigint_add!(bigint_sub!(x5, x312, 32), x1, 32);
    let x316: BytePoly_32 = bigint_add!(bigint_sub!(x4, x309, 32), x1, 32);
    let x317: BytePoly_32 = bigint_nondet_inv!(ctx, x316, x1, 32);
    let x318: BytePoly_64 = bigint_mul!(x316, x317, 64);
    let x319: BytePoly_34 = bigint_nondet_quot!(ctx, x318, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x318, bigint_mul!(x319, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x320: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x315, x317, 64), x1, 32);
    let x321: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x320, x316, 64), x315, 64), x1, 64),
        x1,
        64
    );
    let x322: BytePoly_34 = bigint_nondet_quot!(ctx, x321, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x321, bigint_mul!(x322, x1, 66), 66),
        276359,
        4,
    )?;
    let x323: BytePoly_64 = bigint_mul!(x320, x320, 64);
    let x324: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x323, x309, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x325: BytePoly_34 = bigint_nondet_quot!(ctx, x324, x1, 34);
    let x326: BytePoly_32 = bigint_nondet_rem!(ctx, x324, x1, 32);
    let x327: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x320, x326, 64),
                        bigint_add!(bigint_sub!(x312, bigint_mul!(x320, x309, 64), 64), x1, 64),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x328: BytePoly_34 = bigint_nondet_quot!(ctx, x327, x1, 34);
    let x329: BytePoly_32 = bigint_nondet_rem!(ctx, x327, x1, 32);
    let x330: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x323, bigint_mul!(x325, x1, 66), 66), x309, 66),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x326,
        66
    );
    eqz(ctx, &x330, 276359, 4)?;
    let x331: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x328, x1, 66), x329, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x320, bigint_sub!(x309, x326, 32), 64), x312, 64),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x331, 276359, 4)?;
    let x332: BytePoly_32 = bigint_add!(bigint_sub!(x5, x329, 32), x1, 32);
    let x333: BytePoly_32 = bigint_add!(bigint_sub!(x4, x326, 32), x1, 32);
    let x334: BytePoly_32 = bigint_nondet_inv!(ctx, x333, x1, 32);
    let x335: BytePoly_64 = bigint_mul!(x333, x334, 64);
    let x336: BytePoly_34 = bigint_nondet_quot!(ctx, x335, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x335, bigint_mul!(x336, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x337: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x332, x334, 64), x1, 32);
    let x338: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x337, x333, 64), x332, 64), x1, 64),
        x1,
        64
    );
    let x339: BytePoly_34 = bigint_nondet_quot!(ctx, x338, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x338, bigint_mul!(x339, x1, 66), 66),
        276359,
        4,
    )?;
    let x340: BytePoly_64 = bigint_mul!(x337, x337, 64);
    let x341: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x340, x326, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x342: BytePoly_34 = bigint_nondet_quot!(ctx, x341, x1, 34);
    let x343: BytePoly_32 = bigint_nondet_rem!(ctx, x341, x1, 32);
    let x344: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x337, x343, 64),
                        bigint_add!(bigint_sub!(x329, bigint_mul!(x337, x326, 64), 64), x1, 64),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x345: BytePoly_34 = bigint_nondet_quot!(ctx, x344, x1, 34);
    let x346: BytePoly_32 = bigint_nondet_rem!(ctx, x344, x1, 32);
    let x347: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x340, bigint_mul!(x342, x1, 66), 66), x326, 66),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x343,
        66
    );
    eqz(ctx, &x347, 276359, 4)?;
    let x348: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x345, x1, 66), x346, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x337, bigint_sub!(x326, x343, 32), 64), x329, 64),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x348, 276359, 4)?;
    let x349: BytePoly_32 = bigint_add!(bigint_sub!(x5, x346, 32), x1, 32);
    let x350: BytePoly_32 = bigint_add!(bigint_sub!(x4, x343, 32), x1, 32);
    let x351: BytePoly_32 = bigint_nondet_inv!(ctx, x350, x1, 32);
    let x352: BytePoly_64 = bigint_mul!(x350, x351, 64);
    let x353: BytePoly_34 = bigint_nondet_quot!(ctx, x352, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x352, bigint_mul!(x353, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x354: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x349, x351, 64), x1, 32);
    let x355: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x354, x350, 64), x349, 64), x1, 64),
        x1,
        64
    );
    let x356: BytePoly_34 = bigint_nondet_quot!(ctx, x355, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x355, bigint_mul!(x356, x1, 66), 66),
        276359,
        4,
    )?;
    let x357: BytePoly_64 = bigint_mul!(x354, x354, 64);
    let x358: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x357, x343, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x359: BytePoly_34 = bigint_nondet_quot!(ctx, x358, x1, 34);
    let x360: BytePoly_32 = bigint_nondet_rem!(ctx, x358, x1, 32);
    let x361: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x354, x360, 64),
                        bigint_add!(bigint_sub!(x346, bigint_mul!(x354, x343, 64), 64), x1, 64),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x362: BytePoly_34 = bigint_nondet_quot!(ctx, x361, x1, 34);
    let x363: BytePoly_32 = bigint_nondet_rem!(ctx, x361, x1, 32);
    let x364: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x357, bigint_mul!(x359, x1, 66), 66), x343, 66),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x360,
        66
    );
    eqz(ctx, &x364, 276359, 4)?;
    let x365: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x362, x1, 66), x363, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x354, bigint_sub!(x343, x360, 32), 64), x346, 64),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x365, 276359, 4)?;
    let x366: BytePoly_32 = bigint_add!(bigint_sub!(x5, x363, 32), x1, 32);
    let x367: BytePoly_32 = bigint_add!(bigint_sub!(x4, x360, 32), x1, 32);
    let x368: BytePoly_32 = bigint_nondet_inv!(ctx, x367, x1, 32);
    let x369: BytePoly_64 = bigint_mul!(x367, x368, 64);
    let x370: BytePoly_34 = bigint_nondet_quot!(ctx, x369, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x369, bigint_mul!(x370, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x371: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x366, x368, 64), x1, 32);
    let x372: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x371, x367, 64), x366, 64), x1, 64),
        x1,
        64
    );
    let x373: BytePoly_34 = bigint_nondet_quot!(ctx, x372, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x372, bigint_mul!(x373, x1, 66), 66),
        276359,
        4,
    )?;
    let x374: BytePoly_64 = bigint_mul!(x371, x371, 64);
    let x375: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x374, x360, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x376: BytePoly_34 = bigint_nondet_quot!(ctx, x375, x1, 34);
    let x377: BytePoly_32 = bigint_nondet_rem!(ctx, x375, x1, 32);
    let x378: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x371, x377, 64),
                        bigint_add!(bigint_sub!(x363, bigint_mul!(x371, x360, 64), 64), x1, 64),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x379: BytePoly_34 = bigint_nondet_quot!(ctx, x378, x1, 34);
    let x380: BytePoly_32 = bigint_nondet_rem!(ctx, x378, x1, 32);
    let x381: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x374, bigint_mul!(x376, x1, 66), 66), x360, 66),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x377,
        66
    );
    eqz(ctx, &x381, 276359, 4)?;
    let x382: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x379, x1, 66), x380, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x371, bigint_sub!(x360, x377, 32), 64), x363, 64),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x382, 276359, 4)?;
    let x383: BytePoly_32 = bigint_add!(bigint_sub!(x5, x380, 32), x1, 32);
    let x384: BytePoly_32 = bigint_add!(bigint_sub!(x4, x377, 32), x1, 32);
    let x385: BytePoly_32 = bigint_nondet_inv!(ctx, x384, x1, 32);
    let x386: BytePoly_64 = bigint_mul!(x384, x385, 64);
    let x387: BytePoly_34 = bigint_nondet_quot!(ctx, x386, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x386, bigint_mul!(x387, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x388: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x383, x385, 64), x1, 32);
    let x389: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x388, x384, 64), x383, 64), x1, 64),
        x1,
        64
    );
    let x390: BytePoly_34 = bigint_nondet_quot!(ctx, x389, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x389, bigint_mul!(x390, x1, 66), 66),
        276359,
        4,
    )?;
    let x391: BytePoly_64 = bigint_mul!(x388, x388, 64);
    let x392: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x391, x377, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x393: BytePoly_34 = bigint_nondet_quot!(ctx, x392, x1, 34);
    let x394: BytePoly_32 = bigint_nondet_rem!(ctx, x392, x1, 32);
    let x395: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x388, x394, 64),
                        bigint_add!(bigint_sub!(x380, bigint_mul!(x388, x377, 64), 64), x1, 64),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x396: BytePoly_34 = bigint_nondet_quot!(ctx, x395, x1, 34);
    let x397: BytePoly_32 = bigint_nondet_rem!(ctx, x395, x1, 32);
    let x398: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x391, bigint_mul!(x393, x1, 66), 66), x377, 66),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x394,
        66
    );
    eqz(ctx, &x398, 276359, 4)?;
    let x399: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x396, x1, 66), x397, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x388, bigint_sub!(x377, x394, 32), 64), x380, 64),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x399, 276359, 4)?;
    let x400: BytePoly_32 = bigint_add!(bigint_sub!(x5, x397, 32), x1, 32);
    let x401: BytePoly_32 = bigint_add!(bigint_sub!(x4, x394, 32), x1, 32);
    let x402: BytePoly_32 = bigint_nondet_inv!(ctx, x401, x1, 32);
    let x403: BytePoly_64 = bigint_mul!(x401, x402, 64);
    let x404: BytePoly_34 = bigint_nondet_quot!(ctx, x403, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x403, bigint_mul!(x404, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x405: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x400, x402, 64), x1, 32);
    let x406: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x405, x401, 64), x400, 64), x1, 64),
        x1,
        64
    );
    let x407: BytePoly_34 = bigint_nondet_quot!(ctx, x406, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x406, bigint_mul!(x407, x1, 66), 66),
        276359,
        4,
    )?;
    let x408: BytePoly_64 = bigint_mul!(x405, x405, 64);
    let x409: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x408, x394, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x410: BytePoly_34 = bigint_nondet_quot!(ctx, x409, x1, 34);
    let x411: BytePoly_32 = bigint_nondet_rem!(ctx, x409, x1, 32);
    let x412: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x405, x411, 64),
                        bigint_add!(bigint_sub!(x397, bigint_mul!(x405, x394, 64), 64), x1, 64),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x413: BytePoly_34 = bigint_nondet_quot!(ctx, x412, x1, 34);
    let x414: BytePoly_32 = bigint_nondet_rem!(ctx, x412, x1, 32);
    let x415: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x408, bigint_mul!(x410, x1, 66), 66), x394, 66),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x411,
        66
    );
    eqz(ctx, &x415, 276359, 4)?;
    let x416: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x413, x1, 66), x414, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x405, bigint_sub!(x394, x411, 32), 64), x397, 64),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x416, 276359, 4)?;
    let x417: BytePoly_32 = bigint_add!(bigint_sub!(x5, x414, 32), x1, 32);
    let x418: BytePoly_32 = bigint_add!(bigint_sub!(x4, x411, 32), x1, 32);
    let x419: BytePoly_32 = bigint_nondet_inv!(ctx, x418, x1, 32);
    let x420: BytePoly_64 = bigint_mul!(x418, x419, 64);
    let x421: BytePoly_34 = bigint_nondet_quot!(ctx, x420, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x420, bigint_mul!(x421, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x422: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x417, x419, 64), x1, 32);
    let x423: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x422, x418, 64), x417, 64), x1, 64),
        x1,
        64
    );
    let x424: BytePoly_34 = bigint_nondet_quot!(ctx, x423, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x423, bigint_mul!(x424, x1, 66), 66),
        276359,
        4,
    )?;
    let x425: BytePoly_64 = bigint_mul!(x422, x422, 64);
    let x426: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x425, x411, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x427: BytePoly_34 = bigint_nondet_quot!(ctx, x426, x1, 34);
    let x428: BytePoly_32 = bigint_nondet_rem!(ctx, x426, x1, 32);
    let x429: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x422, x428, 64),
                        bigint_add!(bigint_sub!(x414, bigint_mul!(x422, x411, 64), 64), x1, 64),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x430: BytePoly_34 = bigint_nondet_quot!(ctx, x429, x1, 34);
    let x431: BytePoly_32 = bigint_nondet_rem!(ctx, x429, x1, 32);
    let x432: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x425, bigint_mul!(x427, x1, 66), 66), x411, 66),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x428,
        66
    );
    eqz(ctx, &x432, 276359, 4)?;
    let x433: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x430, x1, 66), x431, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x422, bigint_sub!(x411, x428, 32), 64), x414, 64),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x433, 276359, 4)?;
    let x434: BytePoly_32 = bigint_add!(bigint_sub!(x5, x431, 32), x1, 32);
    let x435: BytePoly_32 = bigint_add!(bigint_sub!(x4, x428, 32), x1, 32);
    let x436: BytePoly_32 = bigint_nondet_inv!(ctx, x435, x1, 32);
    let x437: BytePoly_64 = bigint_mul!(x435, x436, 64);
    let x438: BytePoly_34 = bigint_nondet_quot!(ctx, x437, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x437, bigint_mul!(x438, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x439: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x434, x436, 64), x1, 32);
    let x440: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x439, x435, 64), x434, 64), x1, 64),
        x1,
        64
    );
    let x441: BytePoly_34 = bigint_nondet_quot!(ctx, x440, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x440, bigint_mul!(x441, x1, 66), 66),
        276359,
        4,
    )?;
    let x442: BytePoly_64 = bigint_mul!(x439, x439, 64);
    let x443: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x442, x428, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x444: BytePoly_34 = bigint_nondet_quot!(ctx, x443, x1, 34);
    let x445: BytePoly_32 = bigint_nondet_rem!(ctx, x443, x1, 32);
    let x446: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x439, x445, 64),
                        bigint_add!(bigint_sub!(x431, bigint_mul!(x439, x428, 64), 64), x1, 64),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x447: BytePoly_34 = bigint_nondet_quot!(ctx, x446, x1, 34);
    let x448: BytePoly_32 = bigint_nondet_rem!(ctx, x446, x1, 32);
    let x449: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x442, bigint_mul!(x444, x1, 66), 66), x428, 66),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x445,
        66
    );
    eqz(ctx, &x449, 276359, 4)?;
    let x450: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x447, x1, 66), x448, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x439, bigint_sub!(x428, x445, 32), 64), x431, 64),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x450, 276359, 4)?;
    let x451: BytePoly_32 = bigint_add!(bigint_sub!(x5, x448, 32), x1, 32);
    let x452: BytePoly_32 = bigint_add!(bigint_sub!(x4, x445, 32), x1, 32);
    let x453: BytePoly_32 = bigint_nondet_inv!(ctx, x452, x1, 32);
    let x454: BytePoly_64 = bigint_mul!(x452, x453, 64);
    let x455: BytePoly_34 = bigint_nondet_quot!(ctx, x454, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x454, bigint_mul!(x455, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x456: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x451, x453, 64), x1, 32);
    let x457: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x456, x452, 64), x451, 64), x1, 64),
        x1,
        64
    );
    let x458: BytePoly_34 = bigint_nondet_quot!(ctx, x457, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x457, bigint_mul!(x458, x1, 66), 66),
        276359,
        4,
    )?;
    let x459: BytePoly_64 = bigint_mul!(x456, x456, 64);
    let x460: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x459, x445, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x461: BytePoly_34 = bigint_nondet_quot!(ctx, x460, x1, 34);
    let x462: BytePoly_32 = bigint_nondet_rem!(ctx, x460, x1, 32);
    let x463: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x456, x462, 64),
                        bigint_add!(bigint_sub!(x448, bigint_mul!(x456, x445, 64), 64), x1, 64),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x464: BytePoly_34 = bigint_nondet_quot!(ctx, x463, x1, 34);
    let x465: BytePoly_32 = bigint_nondet_rem!(ctx, x463, x1, 32);
    let x466: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x459, bigint_mul!(x461, x1, 66), 66), x445, 66),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x462,
        66
    );
    eqz(ctx, &x466, 276359, 4)?;
    let x467: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x464, x1, 66), x465, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x456, bigint_sub!(x445, x462, 32), 64), x448, 64),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x467, 276359, 4)?;
    let x468: BytePoly_32 = bigint_add!(bigint_sub!(x5, x465, 32), x1, 32);
    let x469: BytePoly_32 = bigint_add!(bigint_sub!(x4, x462, 32), x1, 32);
    let x470: BytePoly_32 = bigint_nondet_inv!(ctx, x469, x1, 32);
    let x471: BytePoly_64 = bigint_mul!(x469, x470, 64);
    let x472: BytePoly_34 = bigint_nondet_quot!(ctx, x471, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x471, bigint_mul!(x472, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x473: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x468, x470, 64), x1, 32);
    let x474: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x473, x469, 64), x468, 64), x1, 64),
        x1,
        64
    );
    let x475: BytePoly_34 = bigint_nondet_quot!(ctx, x474, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x474, bigint_mul!(x475, x1, 66), 66),
        276359,
        4,
    )?;
    let x476: BytePoly_64 = bigint_mul!(x473, x473, 64);
    let x477: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x476, x462, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x478: BytePoly_34 = bigint_nondet_quot!(ctx, x477, x1, 34);
    let x479: BytePoly_32 = bigint_nondet_rem!(ctx, x477, x1, 32);
    let x480: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x473, x479, 64),
                        bigint_add!(bigint_sub!(x465, bigint_mul!(x473, x462, 64), 64), x1, 64),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x481: BytePoly_34 = bigint_nondet_quot!(ctx, x480, x1, 34);
    let x482: BytePoly_32 = bigint_nondet_rem!(ctx, x480, x1, 32);
    let x483: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x476, bigint_mul!(x478, x1, 66), 66), x462, 66),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x479,
        66
    );
    eqz(ctx, &x483, 276359, 4)?;
    let x484: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x481, x1, 66), x482, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x473, bigint_sub!(x462, x479, 32), 64), x465, 64),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x484, 276359, 4)?;
    let x485: BytePoly_32 = bigint_add!(bigint_sub!(x5, x482, 32), x1, 32);
    let x486: BytePoly_32 = bigint_add!(bigint_sub!(x4, x479, 32), x1, 32);
    let x487: BytePoly_32 = bigint_nondet_inv!(ctx, x486, x1, 32);
    let x488: BytePoly_64 = bigint_mul!(x486, x487, 64);
    let x489: BytePoly_34 = bigint_nondet_quot!(ctx, x488, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x488, bigint_mul!(x489, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x490: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x485, x487, 64), x1, 32);
    let x491: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x490, x486, 64), x485, 64), x1, 64),
        x1,
        64
    );
    let x492: BytePoly_34 = bigint_nondet_quot!(ctx, x491, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x491, bigint_mul!(x492, x1, 66), 66),
        276359,
        4,
    )?;
    let x493: BytePoly_64 = bigint_mul!(x490, x490, 64);
    let x494: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x493, x479, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x495: BytePoly_34 = bigint_nondet_quot!(ctx, x494, x1, 34);
    let x496: BytePoly_32 = bigint_nondet_rem!(ctx, x494, x1, 32);
    let x497: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x490, x496, 64),
                        bigint_add!(bigint_sub!(x482, bigint_mul!(x490, x479, 64), 64), x1, 64),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x498: BytePoly_34 = bigint_nondet_quot!(ctx, x497, x1, 34);
    let x499: BytePoly_32 = bigint_nondet_rem!(ctx, x497, x1, 32);
    let x500: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x493, bigint_mul!(x495, x1, 66), 66), x479, 66),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x496,
        66
    );
    eqz(ctx, &x500, 276359, 4)?;
    let x501: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x498, x1, 66), x499, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x490, bigint_sub!(x479, x496, 32), 64), x482, 64),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x501, 276359, 4)?;
    let x502: BytePoly_32 = bigint_add!(bigint_sub!(x5, x499, 32), x1, 32);
    let x503: BytePoly_32 = bigint_add!(bigint_sub!(x4, x496, 32), x1, 32);
    let x504: BytePoly_32 = bigint_nondet_inv!(ctx, x503, x1, 32);
    let x505: BytePoly_64 = bigint_mul!(x503, x504, 64);
    let x506: BytePoly_34 = bigint_nondet_quot!(ctx, x505, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x505, bigint_mul!(x506, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x507: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x502, x504, 64), x1, 32);
    let x508: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x507, x503, 64), x502, 64), x1, 64),
        x1,
        64
    );
    let x509: BytePoly_34 = bigint_nondet_quot!(ctx, x508, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x508, bigint_mul!(x509, x1, 66), 66),
        276359,
        4,
    )?;
    let x510: BytePoly_64 = bigint_mul!(x507, x507, 64);
    let x511: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x510, x496, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x512: BytePoly_34 = bigint_nondet_quot!(ctx, x511, x1, 34);
    let x513: BytePoly_32 = bigint_nondet_rem!(ctx, x511, x1, 32);
    let x514: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x507, x513, 64),
                        bigint_add!(bigint_sub!(x499, bigint_mul!(x507, x496, 64), 64), x1, 64),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x515: BytePoly_34 = bigint_nondet_quot!(ctx, x514, x1, 34);
    let x516: BytePoly_32 = bigint_nondet_rem!(ctx, x514, x1, 32);
    let x517: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x510, bigint_mul!(x512, x1, 66), 66), x496, 66),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x513,
        66
    );
    eqz(ctx, &x517, 276359, 4)?;
    let x518: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x515, x1, 66), x516, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x507, bigint_sub!(x496, x513, 32), 64), x499, 64),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x518, 276359, 4)?;
    let x519: BytePoly_32 = bigint_add!(bigint_sub!(x5, x516, 32), x1, 32);
    let x520: BytePoly_32 = bigint_add!(bigint_sub!(x4, x513, 32), x1, 32);
    let x521: BytePoly_32 = bigint_nondet_inv!(ctx, x520, x1, 32);
    let x522: BytePoly_64 = bigint_mul!(x520, x521, 64);
    let x523: BytePoly_34 = bigint_nondet_quot!(ctx, x522, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x522, bigint_mul!(x523, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x524: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x519, x521, 64), x1, 32);
    let x525: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x524, x520, 64), x519, 64), x1, 64),
        x1,
        64
    );
    let x526: BytePoly_34 = bigint_nondet_quot!(ctx, x525, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x525, bigint_mul!(x526, x1, 66), 66),
        276359,
        4,
    )?;
    let x527: BytePoly_64 = bigint_mul!(x524, x524, 64);
    let x528: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x527, x513, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x529: BytePoly_34 = bigint_nondet_quot!(ctx, x528, x1, 34);
    let x530: BytePoly_32 = bigint_nondet_rem!(ctx, x528, x1, 32);
    let x531: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x524, x530, 64),
                        bigint_add!(bigint_sub!(x516, bigint_mul!(x524, x513, 64), 64), x1, 64),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x532: BytePoly_34 = bigint_nondet_quot!(ctx, x531, x1, 34);
    let x533: BytePoly_32 = bigint_nondet_rem!(ctx, x531, x1, 32);
    let x534: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x527, bigint_mul!(x529, x1, 66), 66), x513, 66),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x530,
        66
    );
    eqz(ctx, &x534, 276359, 4)?;
    let x535: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x532, x1, 66), x533, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x524, bigint_sub!(x513, x530, 32), 64), x516, 64),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x535, 276359, 4)?;
    let x536: BytePoly_32 = bigint_add!(bigint_sub!(x5, x533, 32), x1, 32);
    let x537: BytePoly_32 = bigint_add!(bigint_sub!(x4, x530, 32), x1, 32);
    let x538: BytePoly_32 = bigint_nondet_inv!(ctx, x537, x1, 32);
    let x539: BytePoly_64 = bigint_mul!(x537, x538, 64);
    let x540: BytePoly_34 = bigint_nondet_quot!(ctx, x539, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x539, bigint_mul!(x540, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x541: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x536, x538, 64), x1, 32);
    let x542: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x541, x537, 64), x536, 64), x1, 64),
        x1,
        64
    );
    let x543: BytePoly_34 = bigint_nondet_quot!(ctx, x542, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x542, bigint_mul!(x543, x1, 66), 66),
        276359,
        4,
    )?;
    let x544: BytePoly_64 = bigint_mul!(x541, x541, 64);
    let x545: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x544, x530, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x546: BytePoly_34 = bigint_nondet_quot!(ctx, x545, x1, 34);
    let x547: BytePoly_32 = bigint_nondet_rem!(ctx, x545, x1, 32);
    let x548: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x541, x547, 64),
                        bigint_add!(bigint_sub!(x533, bigint_mul!(x541, x530, 64), 64), x1, 64),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x549: BytePoly_34 = bigint_nondet_quot!(ctx, x548, x1, 34);
    let x550: BytePoly_32 = bigint_nondet_rem!(ctx, x548, x1, 32);
    let x551: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x544, bigint_mul!(x546, x1, 66), 66), x530, 66),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x547,
        66
    );
    eqz(ctx, &x551, 276359, 4)?;
    let x552: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x549, x1, 66), x550, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x541, bigint_sub!(x530, x547, 32), 64), x533, 64),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x552, 276359, 4)?;
    let x553: BytePoly_32 = bigint_add!(bigint_sub!(x5, x550, 32), x1, 32);
    let x554: BytePoly_32 = bigint_add!(bigint_sub!(x4, x547, 32), x1, 32);
    let x555: BytePoly_32 = bigint_nondet_inv!(ctx, x554, x1, 32);
    let x556: BytePoly_64 = bigint_mul!(x554, x555, 64);
    let x557: BytePoly_34 = bigint_nondet_quot!(ctx, x556, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x556, bigint_mul!(x557, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x558: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x553, x555, 64), x1, 32);
    let x559: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x558, x554, 64), x553, 64), x1, 64),
        x1,
        64
    );
    let x560: BytePoly_34 = bigint_nondet_quot!(ctx, x559, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x559, bigint_mul!(x560, x1, 66), 66),
        276359,
        4,
    )?;
    let x561: BytePoly_64 = bigint_mul!(x558, x558, 64);
    let x562: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x561, x547, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x563: BytePoly_34 = bigint_nondet_quot!(ctx, x562, x1, 34);
    let x564: BytePoly_32 = bigint_nondet_rem!(ctx, x562, x1, 32);
    let x565: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x558, x564, 64),
                        bigint_add!(bigint_sub!(x550, bigint_mul!(x558, x547, 64), 64), x1, 64),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x566: BytePoly_34 = bigint_nondet_quot!(ctx, x565, x1, 34);
    let x567: BytePoly_32 = bigint_nondet_rem!(ctx, x565, x1, 32);
    let x568: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x561, bigint_mul!(x563, x1, 66), 66), x547, 66),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x564,
        66
    );
    eqz(ctx, &x568, 276359, 4)?;
    let x569: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x566, x1, 66), x567, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x558, bigint_sub!(x547, x564, 32), 64), x550, 64),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x569, 276359, 4)?;
    let x570: BytePoly_32 = bigint_add!(bigint_sub!(x5, x567, 32), x1, 32);
    let x571: BytePoly_32 = bigint_add!(bigint_sub!(x4, x564, 32), x1, 32);
    let x572: BytePoly_32 = bigint_nondet_inv!(ctx, x571, x1, 32);
    let x573: BytePoly_64 = bigint_mul!(x571, x572, 64);
    let x574: BytePoly_34 = bigint_nondet_quot!(ctx, x573, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x573, bigint_mul!(x574, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x575: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x570, x572, 64), x1, 32);
    let x576: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x575, x571, 64), x570, 64), x1, 64),
        x1,
        64
    );
    let x577: BytePoly_34 = bigint_nondet_quot!(ctx, x576, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x576, bigint_mul!(x577, x1, 66), 66),
        276359,
        4,
    )?;
    let x578: BytePoly_64 = bigint_mul!(x575, x575, 64);
    let x579: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x578, x564, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x580: BytePoly_34 = bigint_nondet_quot!(ctx, x579, x1, 34);
    let x581: BytePoly_32 = bigint_nondet_rem!(ctx, x579, x1, 32);
    let x582: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x575, x581, 64),
                        bigint_add!(bigint_sub!(x567, bigint_mul!(x575, x564, 64), 64), x1, 64),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x583: BytePoly_34 = bigint_nondet_quot!(ctx, x582, x1, 34);
    let x584: BytePoly_32 = bigint_nondet_rem!(ctx, x582, x1, 32);
    let x585: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x578, bigint_mul!(x580, x1, 66), 66), x564, 66),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x581,
        66
    );
    eqz(ctx, &x585, 276359, 4)?;
    let x586: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x583, x1, 66), x584, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x575, bigint_sub!(x564, x581, 32), 64), x567, 64),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x586, 276359, 4)?;
    let x587: BytePoly_32 = bigint_add!(bigint_sub!(x5, x584, 32), x1, 32);
    let x588: BytePoly_32 = bigint_add!(bigint_sub!(x4, x581, 32), x1, 32);
    let x589: BytePoly_32 = bigint_nondet_inv!(ctx, x588, x1, 32);
    let x590: BytePoly_64 = bigint_mul!(x588, x589, 64);
    let x591: BytePoly_34 = bigint_nondet_quot!(ctx, x590, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x590, bigint_mul!(x591, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x592: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x587, x589, 64), x1, 32);
    let x593: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x592, x588, 64), x587, 64), x1, 64),
        x1,
        64
    );
    let x594: BytePoly_34 = bigint_nondet_quot!(ctx, x593, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x593, bigint_mul!(x594, x1, 66), 66),
        276359,
        4,
    )?;
    let x595: BytePoly_64 = bigint_mul!(x592, x592, 64);
    let x596: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x595, x581, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x597: BytePoly_34 = bigint_nondet_quot!(ctx, x596, x1, 34);
    let x598: BytePoly_32 = bigint_nondet_rem!(ctx, x596, x1, 32);
    let x599: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x592, x598, 64),
                        bigint_add!(bigint_sub!(x584, bigint_mul!(x592, x581, 64), 64), x1, 64),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x600: BytePoly_34 = bigint_nondet_quot!(ctx, x599, x1, 34);
    let x601: BytePoly_32 = bigint_nondet_rem!(ctx, x599, x1, 32);
    let x602: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x595, bigint_mul!(x597, x1, 66), 66), x581, 66),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x598,
        66
    );
    eqz(ctx, &x602, 276359, 4)?;
    let x603: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x600, x1, 66), x601, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x592, bigint_sub!(x581, x598, 32), 64), x584, 64),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x603, 276359, 4)?;
    let x604: BytePoly_32 = bigint_add!(bigint_sub!(x5, x601, 32), x1, 32);
    let x605: BytePoly_32 = bigint_add!(bigint_sub!(x4, x598, 32), x1, 32);
    let x606: BytePoly_32 = bigint_nondet_inv!(ctx, x605, x1, 32);
    let x607: BytePoly_64 = bigint_mul!(x605, x606, 64);
    let x608: BytePoly_34 = bigint_nondet_quot!(ctx, x607, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x607, bigint_mul!(x608, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x609: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x604, x606, 64), x1, 32);
    let x610: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x609, x605, 64), x604, 64), x1, 64),
        x1,
        64
    );
    let x611: BytePoly_34 = bigint_nondet_quot!(ctx, x610, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x610, bigint_mul!(x611, x1, 66), 66),
        276359,
        4,
    )?;
    let x612: BytePoly_64 = bigint_mul!(x609, x609, 64);
    let x613: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x612, x598, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x614: BytePoly_34 = bigint_nondet_quot!(ctx, x613, x1, 34);
    let x615: BytePoly_32 = bigint_nondet_rem!(ctx, x613, x1, 32);
    let x616: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x609, x615, 64),
                        bigint_add!(bigint_sub!(x601, bigint_mul!(x609, x598, 64), 64), x1, 64),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x617: BytePoly_34 = bigint_nondet_quot!(ctx, x616, x1, 34);
    let x618: BytePoly_32 = bigint_nondet_rem!(ctx, x616, x1, 32);
    let x619: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x612, bigint_mul!(x614, x1, 66), 66), x598, 66),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x615,
        66
    );
    eqz(ctx, &x619, 276359, 4)?;
    let x620: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x617, x1, 66), x618, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x609, bigint_sub!(x598, x615, 32), 64), x601, 64),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x620, 276359, 4)?;
    let x621: BytePoly_32 = bigint_add!(bigint_sub!(x5, x618, 32), x1, 32);
    let x622: BytePoly_32 = bigint_add!(bigint_sub!(x4, x615, 32), x1, 32);
    let x623: BytePoly_32 = bigint_nondet_inv!(ctx, x622, x1, 32);
    let x624: BytePoly_64 = bigint_mul!(x622, x623, 64);
    let x625: BytePoly_34 = bigint_nondet_quot!(ctx, x624, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x624, bigint_mul!(x625, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x626: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x621, x623, 64), x1, 32);
    let x627: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x626, x622, 64), x621, 64), x1, 64),
        x1,
        64
    );
    let x628: BytePoly_34 = bigint_nondet_quot!(ctx, x627, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x627, bigint_mul!(x628, x1, 66), 66),
        276359,
        4,
    )?;
    let x629: BytePoly_64 = bigint_mul!(x626, x626, 64);
    let x630: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x629, x615, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x631: BytePoly_34 = bigint_nondet_quot!(ctx, x630, x1, 34);
    let x632: BytePoly_32 = bigint_nondet_rem!(ctx, x630, x1, 32);
    let x633: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x626, x632, 64),
                        bigint_add!(bigint_sub!(x618, bigint_mul!(x626, x615, 64), 64), x1, 64),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x634: BytePoly_34 = bigint_nondet_quot!(ctx, x633, x1, 34);
    let x635: BytePoly_32 = bigint_nondet_rem!(ctx, x633, x1, 32);
    let x636: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x629, bigint_mul!(x631, x1, 66), 66), x615, 66),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x632,
        66
    );
    eqz(ctx, &x636, 276359, 4)?;
    let x637: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x634, x1, 66), x635, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x626, bigint_sub!(x615, x632, 32), 64), x618, 64),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x637, 276359, 4)?;
    let x638: BytePoly_32 = bigint_add!(bigint_sub!(x5, x635, 32), x1, 32);
    let x639: BytePoly_32 = bigint_add!(bigint_sub!(x4, x632, 32), x1, 32);
    let x640: BytePoly_32 = bigint_nondet_inv!(ctx, x639, x1, 32);
    let x641: BytePoly_64 = bigint_mul!(x639, x640, 64);
    let x642: BytePoly_34 = bigint_nondet_quot!(ctx, x641, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x641, bigint_mul!(x642, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x643: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x638, x640, 64), x1, 32);
    let x644: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x643, x639, 64), x638, 64), x1, 64),
        x1,
        64
    );
    let x645: BytePoly_34 = bigint_nondet_quot!(ctx, x644, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x644, bigint_mul!(x645, x1, 66), 66),
        276359,
        4,
    )?;
    let x646: BytePoly_64 = bigint_mul!(x643, x643, 64);
    let x647: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x646, x632, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x648: BytePoly_34 = bigint_nondet_quot!(ctx, x647, x1, 34);
    let x649: BytePoly_32 = bigint_nondet_rem!(ctx, x647, x1, 32);
    let x650: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x643, x649, 64),
                        bigint_add!(bigint_sub!(x635, bigint_mul!(x643, x632, 64), 64), x1, 64),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x651: BytePoly_34 = bigint_nondet_quot!(ctx, x650, x1, 34);
    let x652: BytePoly_32 = bigint_nondet_rem!(ctx, x650, x1, 32);
    let x653: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x646, bigint_mul!(x648, x1, 66), 66), x632, 66),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x649,
        66
    );
    eqz(ctx, &x653, 276359, 4)?;
    let x654: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x651, x1, 66), x652, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x643, bigint_sub!(x632, x649, 32), 64), x635, 64),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x654, 276359, 4)?;
    let x655: BytePoly_32 = bigint_add!(bigint_sub!(x5, x652, 32), x1, 32);
    let x656: BytePoly_32 = bigint_add!(bigint_sub!(x4, x649, 32), x1, 32);
    let x657: BytePoly_32 = bigint_nondet_inv!(ctx, x656, x1, 32);
    let x658: BytePoly_64 = bigint_mul!(x656, x657, 64);
    let x659: BytePoly_34 = bigint_nondet_quot!(ctx, x658, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x658, bigint_mul!(x659, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x660: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x655, x657, 64), x1, 32);
    let x661: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x660, x656, 64), x655, 64), x1, 64),
        x1,
        64
    );
    let x662: BytePoly_34 = bigint_nondet_quot!(ctx, x661, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x661, bigint_mul!(x662, x1, 66), 66),
        276359,
        4,
    )?;
    let x663: BytePoly_64 = bigint_mul!(x660, x660, 64);
    let x664: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x663, x649, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x665: BytePoly_34 = bigint_nondet_quot!(ctx, x664, x1, 34);
    let x666: BytePoly_32 = bigint_nondet_rem!(ctx, x664, x1, 32);
    let x667: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x660, x666, 64),
                        bigint_add!(bigint_sub!(x652, bigint_mul!(x660, x649, 64), 64), x1, 64),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x668: BytePoly_34 = bigint_nondet_quot!(ctx, x667, x1, 34);
    let x669: BytePoly_32 = bigint_nondet_rem!(ctx, x667, x1, 32);
    let x670: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x663, bigint_mul!(x665, x1, 66), 66), x649, 66),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x666,
        66
    );
    eqz(ctx, &x670, 276359, 4)?;
    let x671: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x668, x1, 66), x669, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x660, bigint_sub!(x649, x666, 32), 64), x652, 64),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x671, 276359, 4)?;
    let x672: BytePoly_32 = bigint_add!(bigint_sub!(x5, x669, 32), x1, 32);
    let x673: BytePoly_32 = bigint_add!(bigint_sub!(x4, x666, 32), x1, 32);
    let x674: BytePoly_32 = bigint_nondet_inv!(ctx, x673, x1, 32);
    let x675: BytePoly_64 = bigint_mul!(x673, x674, 64);
    let x676: BytePoly_34 = bigint_nondet_quot!(ctx, x675, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x675, bigint_mul!(x676, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x677: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x672, x674, 64), x1, 32);
    let x678: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x677, x673, 64), x672, 64), x1, 64),
        x1,
        64
    );
    let x679: BytePoly_34 = bigint_nondet_quot!(ctx, x678, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x678, bigint_mul!(x679, x1, 66), 66),
        276359,
        4,
    )?;
    let x680: BytePoly_64 = bigint_mul!(x677, x677, 64);
    let x681: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x680, x666, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x682: BytePoly_34 = bigint_nondet_quot!(ctx, x681, x1, 34);
    let x683: BytePoly_32 = bigint_nondet_rem!(ctx, x681, x1, 32);
    let x684: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x677, x683, 64),
                        bigint_add!(bigint_sub!(x669, bigint_mul!(x677, x666, 64), 64), x1, 64),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x685: BytePoly_34 = bigint_nondet_quot!(ctx, x684, x1, 34);
    let x686: BytePoly_32 = bigint_nondet_rem!(ctx, x684, x1, 32);
    let x687: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x680, bigint_mul!(x682, x1, 66), 66), x666, 66),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x683,
        66
    );
    eqz(ctx, &x687, 276359, 4)?;
    let x688: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x685, x1, 66), x686, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x677, bigint_sub!(x666, x683, 32), 64), x669, 64),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x688, 276359, 4)?;
    let x689: BytePoly_32 = bigint_add!(bigint_sub!(x5, x686, 32), x1, 32);
    let x690: BytePoly_32 = bigint_add!(bigint_sub!(x4, x683, 32), x1, 32);
    let x691: BytePoly_32 = bigint_nondet_inv!(ctx, x690, x1, 32);
    let x692: BytePoly_64 = bigint_mul!(x690, x691, 64);
    let x693: BytePoly_34 = bigint_nondet_quot!(ctx, x692, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x692, bigint_mul!(x693, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x694: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x689, x691, 64), x1, 32);
    let x695: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x694, x690, 64), x689, 64), x1, 64),
        x1,
        64
    );
    let x696: BytePoly_34 = bigint_nondet_quot!(ctx, x695, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x695, bigint_mul!(x696, x1, 66), 66),
        276359,
        4,
    )?;
    let x697: BytePoly_64 = bigint_mul!(x694, x694, 64);
    let x698: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x697, x683, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x699: BytePoly_34 = bigint_nondet_quot!(ctx, x698, x1, 34);
    let x700: BytePoly_32 = bigint_nondet_rem!(ctx, x698, x1, 32);
    let x701: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x694, x700, 64),
                        bigint_add!(bigint_sub!(x686, bigint_mul!(x694, x683, 64), 64), x1, 64),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x702: BytePoly_34 = bigint_nondet_quot!(ctx, x701, x1, 34);
    let x703: BytePoly_32 = bigint_nondet_rem!(ctx, x701, x1, 32);
    let x704: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x697, bigint_mul!(x699, x1, 66), 66), x683, 66),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x700,
        66
    );
    eqz(ctx, &x704, 276359, 4)?;
    let x705: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x702, x1, 66), x703, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x694, bigint_sub!(x683, x700, 32), 64), x686, 64),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x705, 276359, 4)?;
    let x706: BytePoly_32 = bigint_add!(bigint_sub!(x5, x703, 32), x1, 32);
    let x707: BytePoly_32 = bigint_add!(bigint_sub!(x4, x700, 32), x1, 32);
    let x708: BytePoly_32 = bigint_nondet_inv!(ctx, x707, x1, 32);
    let x709: BytePoly_64 = bigint_mul!(x707, x708, 64);
    let x710: BytePoly_34 = bigint_nondet_quot!(ctx, x709, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x709, bigint_mul!(x710, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x711: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x706, x708, 64), x1, 32);
    let x712: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x711, x707, 64), x706, 64), x1, 64),
        x1,
        64
    );
    let x713: BytePoly_34 = bigint_nondet_quot!(ctx, x712, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x712, bigint_mul!(x713, x1, 66), 66),
        276359,
        4,
    )?;
    let x714: BytePoly_64 = bigint_mul!(x711, x711, 64);
    let x715: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x714, x700, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x716: BytePoly_34 = bigint_nondet_quot!(ctx, x715, x1, 34);
    let x717: BytePoly_32 = bigint_nondet_rem!(ctx, x715, x1, 32);
    let x718: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x711, x717, 64),
                        bigint_add!(bigint_sub!(x703, bigint_mul!(x711, x700, 64), 64), x1, 64),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x719: BytePoly_34 = bigint_nondet_quot!(ctx, x718, x1, 34);
    let x720: BytePoly_32 = bigint_nondet_rem!(ctx, x718, x1, 32);
    let x721: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x714, bigint_mul!(x716, x1, 66), 66), x700, 66),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x717,
        66
    );
    eqz(ctx, &x721, 276359, 4)?;
    let x722: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x719, x1, 66), x720, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x711, bigint_sub!(x700, x717, 32), 64), x703, 64),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x722, 276359, 4)?;
    let x723: BytePoly_32 = bigint_add!(bigint_sub!(x5, x720, 32), x1, 32);
    let x724: BytePoly_32 = bigint_add!(bigint_sub!(x4, x717, 32), x1, 32);
    let x725: BytePoly_32 = bigint_nondet_inv!(ctx, x724, x1, 32);
    let x726: BytePoly_64 = bigint_mul!(x724, x725, 64);
    let x727: BytePoly_34 = bigint_nondet_quot!(ctx, x726, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x726, bigint_mul!(x727, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x728: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x723, x725, 64), x1, 32);
    let x729: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x728, x724, 64), x723, 64), x1, 64),
        x1,
        64
    );
    let x730: BytePoly_34 = bigint_nondet_quot!(ctx, x729, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x729, bigint_mul!(x730, x1, 66), 66),
        276359,
        4,
    )?;
    let x731: BytePoly_64 = bigint_mul!(x728, x728, 64);
    let x732: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x731, x717, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x733: BytePoly_34 = bigint_nondet_quot!(ctx, x732, x1, 34);
    let x734: BytePoly_32 = bigint_nondet_rem!(ctx, x732, x1, 32);
    let x735: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x728, x734, 64),
                        bigint_add!(bigint_sub!(x720, bigint_mul!(x728, x717, 64), 64), x1, 64),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x736: BytePoly_34 = bigint_nondet_quot!(ctx, x735, x1, 34);
    let x737: BytePoly_32 = bigint_nondet_rem!(ctx, x735, x1, 32);
    let x738: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x731, bigint_mul!(x733, x1, 66), 66), x717, 66),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x734,
        66
    );
    eqz(ctx, &x738, 276359, 4)?;
    let x739: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x736, x1, 66), x737, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x728, bigint_sub!(x717, x734, 32), 64), x720, 64),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x739, 276359, 4)?;
    let x740: BytePoly_32 = bigint_add!(bigint_sub!(x5, x737, 32), x1, 32);
    let x741: BytePoly_32 = bigint_add!(bigint_sub!(x4, x734, 32), x1, 32);
    let x742: BytePoly_32 = bigint_nondet_inv!(ctx, x741, x1, 32);
    let x743: BytePoly_64 = bigint_mul!(x741, x742, 64);
    let x744: BytePoly_34 = bigint_nondet_quot!(ctx, x743, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x743, bigint_mul!(x744, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x745: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x740, x742, 64), x1, 32);
    let x746: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x745, x741, 64), x740, 64), x1, 64),
        x1,
        64
    );
    let x747: BytePoly_34 = bigint_nondet_quot!(ctx, x746, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x746, bigint_mul!(x747, x1, 66), 66),
        276359,
        4,
    )?;
    let x748: BytePoly_64 = bigint_mul!(x745, x745, 64);
    let x749: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x748, x734, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x750: BytePoly_34 = bigint_nondet_quot!(ctx, x749, x1, 34);
    let x751: BytePoly_32 = bigint_nondet_rem!(ctx, x749, x1, 32);
    let x752: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x745, x751, 64),
                        bigint_add!(bigint_sub!(x737, bigint_mul!(x745, x734, 64), 64), x1, 64),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x753: BytePoly_34 = bigint_nondet_quot!(ctx, x752, x1, 34);
    let x754: BytePoly_32 = bigint_nondet_rem!(ctx, x752, x1, 32);
    let x755: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x748, bigint_mul!(x750, x1, 66), 66), x734, 66),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x751,
        66
    );
    eqz(ctx, &x755, 276359, 4)?;
    let x756: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x753, x1, 66), x754, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x745, bigint_sub!(x734, x751, 32), 64), x737, 64),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x756, 276359, 4)?;
    let x757: BytePoly_32 = bigint_add!(bigint_sub!(x5, x754, 32), x1, 32);
    let x758: BytePoly_32 = bigint_add!(bigint_sub!(x4, x751, 32), x1, 32);
    let x759: BytePoly_32 = bigint_nondet_inv!(ctx, x758, x1, 32);
    let x760: BytePoly_64 = bigint_mul!(x758, x759, 64);
    let x761: BytePoly_34 = bigint_nondet_quot!(ctx, x760, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x760, bigint_mul!(x761, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x762: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x757, x759, 64), x1, 32);
    let x763: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x762, x758, 64), x757, 64), x1, 64),
        x1,
        64
    );
    let x764: BytePoly_34 = bigint_nondet_quot!(ctx, x763, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x763, bigint_mul!(x764, x1, 66), 66),
        276359,
        4,
    )?;
    let x765: BytePoly_64 = bigint_mul!(x762, x762, 64);
    let x766: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x765, x751, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x767: BytePoly_34 = bigint_nondet_quot!(ctx, x766, x1, 34);
    let x768: BytePoly_32 = bigint_nondet_rem!(ctx, x766, x1, 32);
    let x769: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x762, x768, 64),
                        bigint_add!(bigint_sub!(x754, bigint_mul!(x762, x751, 64), 64), x1, 64),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x770: BytePoly_34 = bigint_nondet_quot!(ctx, x769, x1, 34);
    let x771: BytePoly_32 = bigint_nondet_rem!(ctx, x769, x1, 32);
    let x772: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x765, bigint_mul!(x767, x1, 66), 66), x751, 66),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x768,
        66
    );
    eqz(ctx, &x772, 276359, 4)?;
    let x773: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x770, x1, 66), x771, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x762, bigint_sub!(x751, x768, 32), 64), x754, 64),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x773, 276359, 4)?;
    let x774: BytePoly_32 = bigint_add!(bigint_sub!(x5, x771, 32), x1, 32);
    let x775: BytePoly_32 = bigint_add!(bigint_sub!(x4, x768, 32), x1, 32);
    let x776: BytePoly_32 = bigint_nondet_inv!(ctx, x775, x1, 32);
    let x777: BytePoly_64 = bigint_mul!(x775, x776, 64);
    let x778: BytePoly_34 = bigint_nondet_quot!(ctx, x777, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x777, bigint_mul!(x778, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x779: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x774, x776, 64), x1, 32);
    let x780: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x779, x775, 64), x774, 64), x1, 64),
        x1,
        64
    );
    let x781: BytePoly_34 = bigint_nondet_quot!(ctx, x780, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x780, bigint_mul!(x781, x1, 66), 66),
        276359,
        4,
    )?;
    let x782: BytePoly_64 = bigint_mul!(x779, x779, 64);
    let x783: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x782, x768, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x784: BytePoly_34 = bigint_nondet_quot!(ctx, x783, x1, 34);
    let x785: BytePoly_32 = bigint_nondet_rem!(ctx, x783, x1, 32);
    let x786: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x779, x785, 64),
                        bigint_add!(bigint_sub!(x771, bigint_mul!(x779, x768, 64), 64), x1, 64),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x787: BytePoly_34 = bigint_nondet_quot!(ctx, x786, x1, 34);
    let x788: BytePoly_32 = bigint_nondet_rem!(ctx, x786, x1, 32);
    let x789: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x782, bigint_mul!(x784, x1, 66), 66), x768, 66),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x785,
        66
    );
    eqz(ctx, &x789, 276359, 4)?;
    let x790: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x787, x1, 66), x788, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x779, bigint_sub!(x768, x785, 32), 64), x771, 64),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x790, 276359, 4)?;
    let x791: BytePoly_32 = bigint_add!(bigint_sub!(x5, x788, 32), x1, 32);
    let x792: BytePoly_32 = bigint_add!(bigint_sub!(x4, x785, 32), x1, 32);
    let x793: BytePoly_32 = bigint_nondet_inv!(ctx, x792, x1, 32);
    let x794: BytePoly_64 = bigint_mul!(x792, x793, 64);
    let x795: BytePoly_34 = bigint_nondet_quot!(ctx, x794, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x794, bigint_mul!(x795, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x796: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x791, x793, 64), x1, 32);
    let x797: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x796, x792, 64), x791, 64), x1, 64),
        x1,
        64
    );
    let x798: BytePoly_34 = bigint_nondet_quot!(ctx, x797, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x797, bigint_mul!(x798, x1, 66), 66),
        276359,
        4,
    )?;
    let x799: BytePoly_64 = bigint_mul!(x796, x796, 64);
    let x800: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x799, x785, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x801: BytePoly_34 = bigint_nondet_quot!(ctx, x800, x1, 34);
    let x802: BytePoly_32 = bigint_nondet_rem!(ctx, x800, x1, 32);
    let x803: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x796, x802, 64),
                        bigint_add!(bigint_sub!(x788, bigint_mul!(x796, x785, 64), 64), x1, 64),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x804: BytePoly_34 = bigint_nondet_quot!(ctx, x803, x1, 34);
    let x805: BytePoly_32 = bigint_nondet_rem!(ctx, x803, x1, 32);
    let x806: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x799, bigint_mul!(x801, x1, 66), 66), x785, 66),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x802,
        66
    );
    eqz(ctx, &x806, 276359, 4)?;
    let x807: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x804, x1, 66), x805, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x796, bigint_sub!(x785, x802, 32), 64), x788, 64),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x807, 276359, 4)?;
    let x808: BytePoly_32 = bigint_add!(bigint_sub!(x5, x805, 32), x1, 32);
    let x809: BytePoly_32 = bigint_add!(bigint_sub!(x4, x802, 32), x1, 32);
    let x810: BytePoly_32 = bigint_nondet_inv!(ctx, x809, x1, 32);
    let x811: BytePoly_64 = bigint_mul!(x809, x810, 64);
    let x812: BytePoly_34 = bigint_nondet_quot!(ctx, x811, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x811, bigint_mul!(x812, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x813: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x808, x810, 64), x1, 32);
    let x814: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x813, x809, 64), x808, 64), x1, 64),
        x1,
        64
    );
    let x815: BytePoly_34 = bigint_nondet_quot!(ctx, x814, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x814, bigint_mul!(x815, x1, 66), 66),
        276359,
        4,
    )?;
    let x816: BytePoly_64 = bigint_mul!(x813, x813, 64);
    let x817: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x816, x802, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x818: BytePoly_34 = bigint_nondet_quot!(ctx, x817, x1, 34);
    let x819: BytePoly_32 = bigint_nondet_rem!(ctx, x817, x1, 32);
    let x820: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x813, x819, 64),
                        bigint_add!(bigint_sub!(x805, bigint_mul!(x813, x802, 64), 64), x1, 64),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x821: BytePoly_34 = bigint_nondet_quot!(ctx, x820, x1, 34);
    let x822: BytePoly_32 = bigint_nondet_rem!(ctx, x820, x1, 32);
    let x823: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x816, bigint_mul!(x818, x1, 66), 66), x802, 66),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x819,
        66
    );
    eqz(ctx, &x823, 276359, 4)?;
    let x824: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x821, x1, 66), x822, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x813, bigint_sub!(x802, x819, 32), 64), x805, 64),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x824, 276359, 4)?;
    let x825: BytePoly_32 = bigint_add!(bigint_sub!(x5, x822, 32), x1, 32);
    let x826: BytePoly_32 = bigint_add!(bigint_sub!(x4, x819, 32), x1, 32);
    let x827: BytePoly_32 = bigint_nondet_inv!(ctx, x826, x1, 32);
    let x828: BytePoly_64 = bigint_mul!(x826, x827, 64);
    let x829: BytePoly_34 = bigint_nondet_quot!(ctx, x828, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x828, bigint_mul!(x829, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x830: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x825, x827, 64), x1, 32);
    let x831: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x830, x826, 64), x825, 64), x1, 64),
        x1,
        64
    );
    let x832: BytePoly_34 = bigint_nondet_quot!(ctx, x831, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x831, bigint_mul!(x832, x1, 66), 66),
        276359,
        4,
    )?;
    let x833: BytePoly_64 = bigint_mul!(x830, x830, 64);
    let x834: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x833, x819, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x835: BytePoly_34 = bigint_nondet_quot!(ctx, x834, x1, 34);
    let x836: BytePoly_32 = bigint_nondet_rem!(ctx, x834, x1, 32);
    let x837: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x830, x836, 64),
                        bigint_add!(bigint_sub!(x822, bigint_mul!(x830, x819, 64), 64), x1, 64),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x838: BytePoly_34 = bigint_nondet_quot!(ctx, x837, x1, 34);
    let x839: BytePoly_32 = bigint_nondet_rem!(ctx, x837, x1, 32);
    let x840: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x833, bigint_mul!(x835, x1, 66), 66), x819, 66),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x836,
        66
    );
    eqz(ctx, &x840, 276359, 4)?;
    let x841: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x838, x1, 66), x839, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x830, bigint_sub!(x819, x836, 32), 64), x822, 64),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x841, 276359, 4)?;
    let x842: BytePoly_32 = bigint_add!(bigint_sub!(x5, x839, 32), x1, 32);
    let x843: BytePoly_32 = bigint_add!(bigint_sub!(x4, x836, 32), x1, 32);
    let x844: BytePoly_32 = bigint_nondet_inv!(ctx, x843, x1, 32);
    let x845: BytePoly_64 = bigint_mul!(x843, x844, 64);
    let x846: BytePoly_34 = bigint_nondet_quot!(ctx, x845, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x845, bigint_mul!(x846, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x847: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x842, x844, 64), x1, 32);
    let x848: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x847, x843, 64), x842, 64), x1, 64),
        x1,
        64
    );
    let x849: BytePoly_34 = bigint_nondet_quot!(ctx, x848, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x848, bigint_mul!(x849, x1, 66), 66),
        276359,
        4,
    )?;
    let x850: BytePoly_64 = bigint_mul!(x847, x847, 64);
    let x851: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x850, x836, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x852: BytePoly_34 = bigint_nondet_quot!(ctx, x851, x1, 34);
    let x853: BytePoly_32 = bigint_nondet_rem!(ctx, x851, x1, 32);
    let x854: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x847, x853, 64),
                        bigint_add!(bigint_sub!(x839, bigint_mul!(x847, x836, 64), 64), x1, 64),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x855: BytePoly_34 = bigint_nondet_quot!(ctx, x854, x1, 34);
    let x856: BytePoly_32 = bigint_nondet_rem!(ctx, x854, x1, 32);
    let x857: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x850, bigint_mul!(x852, x1, 66), 66), x836, 66),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x853,
        66
    );
    eqz(ctx, &x857, 276359, 4)?;
    let x858: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x855, x1, 66), x856, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x847, bigint_sub!(x836, x853, 32), 64), x839, 64),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x858, 276359, 4)?;
    let x859: BytePoly_32 = bigint_add!(bigint_sub!(x5, x856, 32), x1, 32);
    let x860: BytePoly_32 = bigint_add!(bigint_sub!(x4, x853, 32), x1, 32);
    let x861: BytePoly_32 = bigint_nondet_inv!(ctx, x860, x1, 32);
    let x862: BytePoly_64 = bigint_mul!(x860, x861, 64);
    let x863: BytePoly_34 = bigint_nondet_quot!(ctx, x862, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x862, bigint_mul!(x863, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x864: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x859, x861, 64), x1, 32);
    let x865: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x864, x860, 64), x859, 64), x1, 64),
        x1,
        64
    );
    let x866: BytePoly_34 = bigint_nondet_quot!(ctx, x865, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x865, bigint_mul!(x866, x1, 66), 66),
        276359,
        4,
    )?;
    let x867: BytePoly_64 = bigint_mul!(x864, x864, 64);
    let x868: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x867, x853, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x869: BytePoly_34 = bigint_nondet_quot!(ctx, x868, x1, 34);
    let x870: BytePoly_32 = bigint_nondet_rem!(ctx, x868, x1, 32);
    let x871: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x864, x870, 64),
                        bigint_add!(bigint_sub!(x856, bigint_mul!(x864, x853, 64), 64), x1, 64),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x872: BytePoly_34 = bigint_nondet_quot!(ctx, x871, x1, 34);
    let x873: BytePoly_32 = bigint_nondet_rem!(ctx, x871, x1, 32);
    let x874: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x867, bigint_mul!(x869, x1, 66), 66), x853, 66),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x870,
        66
    );
    eqz(ctx, &x874, 276359, 4)?;
    let x875: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x872, x1, 66), x873, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x864, bigint_sub!(x853, x870, 32), 64), x856, 64),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x875, 276359, 4)?;
    let x876: BytePoly_32 = bigint_add!(bigint_sub!(x5, x873, 32), x1, 32);
    let x877: BytePoly_32 = bigint_add!(bigint_sub!(x4, x870, 32), x1, 32);
    let x878: BytePoly_32 = bigint_nondet_inv!(ctx, x877, x1, 32);
    let x879: BytePoly_64 = bigint_mul!(x877, x878, 64);
    let x880: BytePoly_34 = bigint_nondet_quot!(ctx, x879, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x879, bigint_mul!(x880, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x881: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x876, x878, 64), x1, 32);
    let x882: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x881, x877, 64), x876, 64), x1, 64),
        x1,
        64
    );
    let x883: BytePoly_34 = bigint_nondet_quot!(ctx, x882, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x882, bigint_mul!(x883, x1, 66), 66),
        276359,
        4,
    )?;
    let x884: BytePoly_64 = bigint_mul!(x881, x881, 64);
    let x885: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x884, x870, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x886: BytePoly_34 = bigint_nondet_quot!(ctx, x885, x1, 34);
    let x887: BytePoly_32 = bigint_nondet_rem!(ctx, x885, x1, 32);
    let x888: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x881, x887, 64),
                        bigint_add!(bigint_sub!(x873, bigint_mul!(x881, x870, 64), 64), x1, 64),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x889: BytePoly_34 = bigint_nondet_quot!(ctx, x888, x1, 34);
    let x890: BytePoly_32 = bigint_nondet_rem!(ctx, x888, x1, 32);
    let x891: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x884, bigint_mul!(x886, x1, 66), 66), x870, 66),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x887,
        66
    );
    eqz(ctx, &x891, 276359, 4)?;
    let x892: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x889, x1, 66), x890, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x881, bigint_sub!(x870, x887, 32), 64), x873, 64),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x892, 276359, 4)?;
    let x893: BytePoly_32 = bigint_add!(bigint_sub!(x5, x890, 32), x1, 32);
    let x894: BytePoly_32 = bigint_add!(bigint_sub!(x4, x887, 32), x1, 32);
    let x895: BytePoly_32 = bigint_nondet_inv!(ctx, x894, x1, 32);
    let x896: BytePoly_64 = bigint_mul!(x894, x895, 64);
    let x897: BytePoly_34 = bigint_nondet_quot!(ctx, x896, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x896, bigint_mul!(x897, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x898: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x893, x895, 64), x1, 32);
    let x899: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x898, x894, 64), x893, 64), x1, 64),
        x1,
        64
    );
    let x900: BytePoly_34 = bigint_nondet_quot!(ctx, x899, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x899, bigint_mul!(x900, x1, 66), 66),
        276359,
        4,
    )?;
    let x901: BytePoly_64 = bigint_mul!(x898, x898, 64);
    let x902: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x901, x887, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x903: BytePoly_34 = bigint_nondet_quot!(ctx, x902, x1, 34);
    let x904: BytePoly_32 = bigint_nondet_rem!(ctx, x902, x1, 32);
    let x905: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x898, x904, 64),
                        bigint_add!(bigint_sub!(x890, bigint_mul!(x898, x887, 64), 64), x1, 64),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x906: BytePoly_34 = bigint_nondet_quot!(ctx, x905, x1, 34);
    let x907: BytePoly_32 = bigint_nondet_rem!(ctx, x905, x1, 32);
    let x908: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x901, bigint_mul!(x903, x1, 66), 66), x887, 66),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x904,
        66
    );
    eqz(ctx, &x908, 276359, 4)?;
    let x909: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x906, x1, 66), x907, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x898, bigint_sub!(x887, x904, 32), 64), x890, 64),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x909, 276359, 4)?;
    let x910: BytePoly_32 = bigint_add!(bigint_sub!(x5, x907, 32), x1, 32);
    let x911: BytePoly_32 = bigint_add!(bigint_sub!(x4, x904, 32), x1, 32);
    let x912: BytePoly_32 = bigint_nondet_inv!(ctx, x911, x1, 32);
    let x913: BytePoly_64 = bigint_mul!(x911, x912, 64);
    let x914: BytePoly_34 = bigint_nondet_quot!(ctx, x913, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x913, bigint_mul!(x914, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x915: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x910, x912, 64), x1, 32);
    let x916: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x915, x911, 64), x910, 64), x1, 64),
        x1,
        64
    );
    let x917: BytePoly_34 = bigint_nondet_quot!(ctx, x916, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x916, bigint_mul!(x917, x1, 66), 66),
        276359,
        4,
    )?;
    let x918: BytePoly_64 = bigint_mul!(x915, x915, 64);
    let x919: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x918, x904, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x920: BytePoly_34 = bigint_nondet_quot!(ctx, x919, x1, 34);
    let x921: BytePoly_32 = bigint_nondet_rem!(ctx, x919, x1, 32);
    let x922: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x915, x921, 64),
                        bigint_add!(bigint_sub!(x907, bigint_mul!(x915, x904, 64), 64), x1, 64),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x923: BytePoly_34 = bigint_nondet_quot!(ctx, x922, x1, 34);
    let x924: BytePoly_32 = bigint_nondet_rem!(ctx, x922, x1, 32);
    let x925: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x918, bigint_mul!(x920, x1, 66), 66), x904, 66),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x921,
        66
    );
    eqz(ctx, &x925, 276359, 4)?;
    let x926: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x923, x1, 66), x924, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x915, bigint_sub!(x904, x921, 32), 64), x907, 64),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x926, 276359, 4)?;
    let x927: BytePoly_32 = bigint_add!(bigint_sub!(x5, x924, 32), x1, 32);
    let x928: BytePoly_32 = bigint_add!(bigint_sub!(x4, x921, 32), x1, 32);
    let x929: BytePoly_32 = bigint_nondet_inv!(ctx, x928, x1, 32);
    let x930: BytePoly_64 = bigint_mul!(x928, x929, 64);
    let x931: BytePoly_34 = bigint_nondet_quot!(ctx, x930, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x930, bigint_mul!(x931, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x932: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x927, x929, 64), x1, 32);
    let x933: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x932, x928, 64), x927, 64), x1, 64),
        x1,
        64
    );
    let x934: BytePoly_34 = bigint_nondet_quot!(ctx, x933, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x933, bigint_mul!(x934, x1, 66), 66),
        276359,
        4,
    )?;
    let x935: BytePoly_64 = bigint_mul!(x932, x932, 64);
    let x936: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x935, x921, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x937: BytePoly_34 = bigint_nondet_quot!(ctx, x936, x1, 34);
    let x938: BytePoly_32 = bigint_nondet_rem!(ctx, x936, x1, 32);
    let x939: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x932, x938, 64),
                        bigint_add!(bigint_sub!(x924, bigint_mul!(x932, x921, 64), 64), x1, 64),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x940: BytePoly_34 = bigint_nondet_quot!(ctx, x939, x1, 34);
    let x941: BytePoly_32 = bigint_nondet_rem!(ctx, x939, x1, 32);
    let x942: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x935, bigint_mul!(x937, x1, 66), 66), x921, 66),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x938,
        66
    );
    eqz(ctx, &x942, 276359, 4)?;
    let x943: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x940, x1, 66), x941, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x932, bigint_sub!(x921, x938, 32), 64), x924, 64),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x943, 276359, 4)?;
    let x944: BytePoly_32 = bigint_add!(bigint_sub!(x5, x941, 32), x1, 32);
    let x945: BytePoly_32 = bigint_add!(bigint_sub!(x4, x938, 32), x1, 32);
    let x946: BytePoly_32 = bigint_nondet_inv!(ctx, x945, x1, 32);
    let x947: BytePoly_64 = bigint_mul!(x945, x946, 64);
    let x948: BytePoly_34 = bigint_nondet_quot!(ctx, x947, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x947, bigint_mul!(x948, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x949: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x944, x946, 64), x1, 32);
    let x950: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x949, x945, 64), x944, 64), x1, 64),
        x1,
        64
    );
    let x951: BytePoly_34 = bigint_nondet_quot!(ctx, x950, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x950, bigint_mul!(x951, x1, 66), 66),
        276359,
        4,
    )?;
    let x952: BytePoly_64 = bigint_mul!(x949, x949, 64);
    let x953: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x952, x938, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x954: BytePoly_34 = bigint_nondet_quot!(ctx, x953, x1, 34);
    let x955: BytePoly_32 = bigint_nondet_rem!(ctx, x953, x1, 32);
    let x956: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x949, x955, 64),
                        bigint_add!(bigint_sub!(x941, bigint_mul!(x949, x938, 64), 64), x1, 64),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x957: BytePoly_34 = bigint_nondet_quot!(ctx, x956, x1, 34);
    let x958: BytePoly_32 = bigint_nondet_rem!(ctx, x956, x1, 32);
    let x959: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x952, bigint_mul!(x954, x1, 66), 66), x938, 66),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x955,
        66
    );
    eqz(ctx, &x959, 276359, 4)?;
    let x960: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x957, x1, 66), x958, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x949, bigint_sub!(x938, x955, 32), 64), x941, 64),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x960, 276359, 4)?;
    let x961: BytePoly_32 = bigint_add!(bigint_sub!(x5, x958, 32), x1, 32);
    let x962: BytePoly_32 = bigint_add!(bigint_sub!(x4, x955, 32), x1, 32);
    let x963: BytePoly_32 = bigint_nondet_inv!(ctx, x962, x1, 32);
    let x964: BytePoly_64 = bigint_mul!(x962, x963, 64);
    let x965: BytePoly_34 = bigint_nondet_quot!(ctx, x964, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x964, bigint_mul!(x965, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x966: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x961, x963, 64), x1, 32);
    let x967: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x966, x962, 64), x961, 64), x1, 64),
        x1,
        64
    );
    let x968: BytePoly_34 = bigint_nondet_quot!(ctx, x967, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x967, bigint_mul!(x968, x1, 66), 66),
        276359,
        4,
    )?;
    let x969: BytePoly_64 = bigint_mul!(x966, x966, 64);
    let x970: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x969, x955, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x971: BytePoly_34 = bigint_nondet_quot!(ctx, x970, x1, 34);
    let x972: BytePoly_32 = bigint_nondet_rem!(ctx, x970, x1, 32);
    let x973: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x966, x972, 64),
                        bigint_add!(bigint_sub!(x958, bigint_mul!(x966, x955, 64), 64), x1, 64),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x974: BytePoly_34 = bigint_nondet_quot!(ctx, x973, x1, 34);
    let x975: BytePoly_32 = bigint_nondet_rem!(ctx, x973, x1, 32);
    let x976: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x969, bigint_mul!(x971, x1, 66), 66), x955, 66),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x972,
        66
    );
    eqz(ctx, &x976, 276359, 4)?;
    let x977: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x974, x1, 66), x975, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x966, bigint_sub!(x955, x972, 32), 64), x958, 64),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x977, 276359, 4)?;
    let x978: BytePoly_32 = bigint_add!(bigint_sub!(x5, x975, 32), x1, 32);
    let x979: BytePoly_32 = bigint_add!(bigint_sub!(x4, x972, 32), x1, 32);
    let x980: BytePoly_32 = bigint_nondet_inv!(ctx, x979, x1, 32);
    let x981: BytePoly_64 = bigint_mul!(x979, x980, 64);
    let x982: BytePoly_34 = bigint_nondet_quot!(ctx, x981, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x981, bigint_mul!(x982, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x983: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x978, x980, 64), x1, 32);
    let x984: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x983, x979, 64), x978, 64), x1, 64),
        x1,
        64
    );
    let x985: BytePoly_34 = bigint_nondet_quot!(ctx, x984, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x984, bigint_mul!(x985, x1, 66), 66),
        276359,
        4,
    )?;
    let x986: BytePoly_64 = bigint_mul!(x983, x983, 64);
    let x987: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x986, x972, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x988: BytePoly_34 = bigint_nondet_quot!(ctx, x987, x1, 34);
    let x989: BytePoly_32 = bigint_nondet_rem!(ctx, x987, x1, 32);
    let x990: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x983, x989, 64),
                        bigint_add!(bigint_sub!(x975, bigint_mul!(x983, x972, 64), 64), x1, 64),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x991: BytePoly_34 = bigint_nondet_quot!(ctx, x990, x1, 34);
    let x992: BytePoly_32 = bigint_nondet_rem!(ctx, x990, x1, 32);
    let x993: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x986, bigint_mul!(x988, x1, 66), 66), x972, 66),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x989,
        66
    );
    eqz(ctx, &x993, 276359, 4)?;
    let x994: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x991, x1, 66), x992, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x983, bigint_sub!(x972, x989, 32), 64), x975, 64),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x994, 276359, 4)?;
    let x995: BytePoly_32 = bigint_add!(bigint_sub!(x5, x992, 32), x1, 32);
    let x996: BytePoly_32 = bigint_add!(bigint_sub!(x4, x989, 32), x1, 32);
    let x997: BytePoly_32 = bigint_nondet_inv!(ctx, x996, x1, 32);
    let x998: BytePoly_64 = bigint_mul!(x996, x997, 64);
    let x999: BytePoly_34 = bigint_nondet_quot!(ctx, x998, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x998, bigint_mul!(x999, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x1000: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x995, x997, 64), x1, 32);
    let x1001: BytePoly_64 = bigint_add!(
        bigint_add!(bigint_sub!(bigint_mul!(x1000, x996, 64), x995, 64), x1, 64),
        x1,
        64
    );
    let x1002: BytePoly_34 = bigint_nondet_quot!(ctx, x1001, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x1001, bigint_mul!(x1002, x1, 66), 66),
        276359,
        4,
    )?;
    let x1003: BytePoly_64 = bigint_mul!(x1000, x1000, 64);
    let x1004: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1003, x989, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x1005: BytePoly_34 = bigint_nondet_quot!(ctx, x1004, x1, 34);
    let x1006: BytePoly_32 = bigint_nondet_rem!(ctx, x1004, x1, 32);
    let x1007: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x1000, x1006, 64),
                        bigint_add!(bigint_sub!(x992, bigint_mul!(x1000, x989, 64), 64), x1, 64),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x1008: BytePoly_34 = bigint_nondet_quot!(ctx, x1007, x1, 34);
    let x1009: BytePoly_32 = bigint_nondet_rem!(ctx, x1007, x1, 32);
    let x1010: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x1003, bigint_mul!(x1005, x1, 66), 66), x989, 66),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x1006,
        66
    );
    eqz(ctx, &x1010, 276359, 4)?;
    let x1011: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x1008, x1, 66), x1009, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1000, bigint_sub!(x989, x1006, 32), 64),
                        x992,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x1011, 276359, 4)?;
    let x1012: BytePoly_32 = bigint_add!(bigint_sub!(x5, x1009, 32), x1, 32);
    let x1013: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1006, 32), x1, 32);
    let x1014: BytePoly_32 = bigint_nondet_inv!(ctx, x1013, x1, 32);
    let x1015: BytePoly_64 = bigint_mul!(x1013, x1014, 64);
    let x1016: BytePoly_34 = bigint_nondet_quot!(ctx, x1015, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1015, bigint_mul!(x1016, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x1017: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1012, x1014, 64), x1, 32);
    let x1018: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x1017, x1013, 64), x1012, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x1019: BytePoly_34 = bigint_nondet_quot!(ctx, x1018, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x1018, bigint_mul!(x1019, x1, 66), 66),
        276359,
        4,
    )?;
    let x1020: BytePoly_64 = bigint_mul!(x1017, x1017, 64);
    let x1021: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1020, x1006, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x1022: BytePoly_34 = bigint_nondet_quot!(ctx, x1021, x1, 34);
    let x1023: BytePoly_32 = bigint_nondet_rem!(ctx, x1021, x1, 32);
    let x1024: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x1017, x1023, 64),
                        bigint_add!(
                            bigint_sub!(x1009, bigint_mul!(x1017, x1006, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x1025: BytePoly_34 = bigint_nondet_quot!(ctx, x1024, x1, 34);
    let x1026: BytePoly_32 = bigint_nondet_rem!(ctx, x1024, x1, 32);
    let x1027: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1020, bigint_mul!(x1022, x1, 66), 66),
                        x1006,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x1023,
        66
    );
    eqz(ctx, &x1027, 276359, 4)?;
    let x1028: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x1025, x1, 66), x1026, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1017, bigint_sub!(x1006, x1023, 32), 64),
                        x1009,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x1028, 276359, 4)?;
    let x1029: BytePoly_32 = bigint_add!(bigint_sub!(x5, x1026, 32), x1, 32);
    let x1030: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1023, 32), x1, 32);
    let x1031: BytePoly_32 = bigint_nondet_inv!(ctx, x1030, x1, 32);
    let x1032: BytePoly_64 = bigint_mul!(x1030, x1031, 64);
    let x1033: BytePoly_34 = bigint_nondet_quot!(ctx, x1032, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1032, bigint_mul!(x1033, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x1034: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1029, x1031, 64), x1, 32);
    let x1035: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x1034, x1030, 64), x1029, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x1036: BytePoly_34 = bigint_nondet_quot!(ctx, x1035, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x1035, bigint_mul!(x1036, x1, 66), 66),
        276359,
        4,
    )?;
    let x1037: BytePoly_64 = bigint_mul!(x1034, x1034, 64);
    let x1038: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1037, x1023, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x1039: BytePoly_34 = bigint_nondet_quot!(ctx, x1038, x1, 34);
    let x1040: BytePoly_32 = bigint_nondet_rem!(ctx, x1038, x1, 32);
    let x1041: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x1034, x1040, 64),
                        bigint_add!(
                            bigint_sub!(x1026, bigint_mul!(x1034, x1023, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x1042: BytePoly_34 = bigint_nondet_quot!(ctx, x1041, x1, 34);
    let x1043: BytePoly_32 = bigint_nondet_rem!(ctx, x1041, x1, 32);
    let x1044: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1037, bigint_mul!(x1039, x1, 66), 66),
                        x1023,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x1040,
        66
    );
    eqz(ctx, &x1044, 276359, 4)?;
    let x1045: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x1042, x1, 66), x1043, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1034, bigint_sub!(x1023, x1040, 32), 64),
                        x1026,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x1045, 276359, 4)?;
    let x1046: BytePoly_32 = bigint_add!(bigint_sub!(x5, x1043, 32), x1, 32);
    let x1047: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1040, 32), x1, 32);
    let x1048: BytePoly_32 = bigint_nondet_inv!(ctx, x1047, x1, 32);
    let x1049: BytePoly_64 = bigint_mul!(x1047, x1048, 64);
    let x1050: BytePoly_34 = bigint_nondet_quot!(ctx, x1049, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1049, bigint_mul!(x1050, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x1051: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1046, x1048, 64), x1, 32);
    let x1052: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x1051, x1047, 64), x1046, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x1053: BytePoly_34 = bigint_nondet_quot!(ctx, x1052, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x1052, bigint_mul!(x1053, x1, 66), 66),
        276359,
        4,
    )?;
    let x1054: BytePoly_64 = bigint_mul!(x1051, x1051, 64);
    let x1055: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1054, x1040, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x1056: BytePoly_34 = bigint_nondet_quot!(ctx, x1055, x1, 34);
    let x1057: BytePoly_32 = bigint_nondet_rem!(ctx, x1055, x1, 32);
    let x1058: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x1051, x1057, 64),
                        bigint_add!(
                            bigint_sub!(x1043, bigint_mul!(x1051, x1040, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x1059: BytePoly_34 = bigint_nondet_quot!(ctx, x1058, x1, 34);
    let x1060: BytePoly_32 = bigint_nondet_rem!(ctx, x1058, x1, 32);
    let x1061: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1054, bigint_mul!(x1056, x1, 66), 66),
                        x1040,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x1057,
        66
    );
    eqz(ctx, &x1061, 276359, 4)?;
    let x1062: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x1059, x1, 66), x1060, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1051, bigint_sub!(x1040, x1057, 32), 64),
                        x1043,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x1062, 276359, 4)?;
    let x1063: BytePoly_32 = bigint_add!(bigint_sub!(x5, x1060, 32), x1, 32);
    let x1064: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1057, 32), x1, 32);
    let x1065: BytePoly_32 = bigint_nondet_inv!(ctx, x1064, x1, 32);
    let x1066: BytePoly_64 = bigint_mul!(x1064, x1065, 64);
    let x1067: BytePoly_34 = bigint_nondet_quot!(ctx, x1066, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1066, bigint_mul!(x1067, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x1068: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1063, x1065, 64), x1, 32);
    let x1069: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x1068, x1064, 64), x1063, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x1070: BytePoly_34 = bigint_nondet_quot!(ctx, x1069, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x1069, bigint_mul!(x1070, x1, 66), 66),
        276359,
        4,
    )?;
    let x1071: BytePoly_64 = bigint_mul!(x1068, x1068, 64);
    let x1072: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1071, x1057, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x1073: BytePoly_34 = bigint_nondet_quot!(ctx, x1072, x1, 34);
    let x1074: BytePoly_32 = bigint_nondet_rem!(ctx, x1072, x1, 32);
    let x1075: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x1068, x1074, 64),
                        bigint_add!(
                            bigint_sub!(x1060, bigint_mul!(x1068, x1057, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x1076: BytePoly_34 = bigint_nondet_quot!(ctx, x1075, x1, 34);
    let x1077: BytePoly_32 = bigint_nondet_rem!(ctx, x1075, x1, 32);
    let x1078: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1071, bigint_mul!(x1073, x1, 66), 66),
                        x1057,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x1074,
        66
    );
    eqz(ctx, &x1078, 276359, 4)?;
    let x1079: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x1076, x1, 66), x1077, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1068, bigint_sub!(x1057, x1074, 32), 64),
                        x1060,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x1079, 276359, 4)?;
    let x1080: BytePoly_32 = bigint_add!(bigint_sub!(x5, x1077, 32), x1, 32);
    let x1081: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1074, 32), x1, 32);
    let x1082: BytePoly_32 = bigint_nondet_inv!(ctx, x1081, x1, 32);
    let x1083: BytePoly_64 = bigint_mul!(x1081, x1082, 64);
    let x1084: BytePoly_34 = bigint_nondet_quot!(ctx, x1083, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1083, bigint_mul!(x1084, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x1085: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1080, x1082, 64), x1, 32);
    let x1086: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x1085, x1081, 64), x1080, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x1087: BytePoly_34 = bigint_nondet_quot!(ctx, x1086, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x1086, bigint_mul!(x1087, x1, 66), 66),
        276359,
        4,
    )?;
    let x1088: BytePoly_64 = bigint_mul!(x1085, x1085, 64);
    let x1089: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1088, x1074, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x1090: BytePoly_34 = bigint_nondet_quot!(ctx, x1089, x1, 34);
    let x1091: BytePoly_32 = bigint_nondet_rem!(ctx, x1089, x1, 32);
    let x1092: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x1085, x1091, 64),
                        bigint_add!(
                            bigint_sub!(x1077, bigint_mul!(x1085, x1074, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x1093: BytePoly_34 = bigint_nondet_quot!(ctx, x1092, x1, 34);
    let x1094: BytePoly_32 = bigint_nondet_rem!(ctx, x1092, x1, 32);
    let x1095: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1088, bigint_mul!(x1090, x1, 66), 66),
                        x1074,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x1091,
        66
    );
    eqz(ctx, &x1095, 276359, 4)?;
    let x1096: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x1093, x1, 66), x1094, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1085, bigint_sub!(x1074, x1091, 32), 64),
                        x1077,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x1096, 276359, 4)?;
    let x1097: BytePoly_32 = bigint_add!(bigint_sub!(x5, x1094, 32), x1, 32);
    let x1098: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1091, 32), x1, 32);
    let x1099: BytePoly_32 = bigint_nondet_inv!(ctx, x1098, x1, 32);
    let x1100: BytePoly_64 = bigint_mul!(x1098, x1099, 64);
    let x1101: BytePoly_34 = bigint_nondet_quot!(ctx, x1100, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1100, bigint_mul!(x1101, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x1102: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1097, x1099, 64), x1, 32);
    let x1103: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x1102, x1098, 64), x1097, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x1104: BytePoly_34 = bigint_nondet_quot!(ctx, x1103, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x1103, bigint_mul!(x1104, x1, 66), 66),
        276359,
        4,
    )?;
    let x1105: BytePoly_64 = bigint_mul!(x1102, x1102, 64);
    let x1106: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1105, x1091, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x1107: BytePoly_34 = bigint_nondet_quot!(ctx, x1106, x1, 34);
    let x1108: BytePoly_32 = bigint_nondet_rem!(ctx, x1106, x1, 32);
    let x1109: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x1102, x1108, 64),
                        bigint_add!(
                            bigint_sub!(x1094, bigint_mul!(x1102, x1091, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x1110: BytePoly_34 = bigint_nondet_quot!(ctx, x1109, x1, 34);
    let x1111: BytePoly_32 = bigint_nondet_rem!(ctx, x1109, x1, 32);
    let x1112: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1105, bigint_mul!(x1107, x1, 66), 66),
                        x1091,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x1108,
        66
    );
    eqz(ctx, &x1112, 276359, 4)?;
    let x1113: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x1110, x1, 66), x1111, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1102, bigint_sub!(x1091, x1108, 32), 64),
                        x1094,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x1113, 276359, 4)?;
    let x1114: BytePoly_32 = bigint_add!(bigint_sub!(x5, x1111, 32), x1, 32);
    let x1115: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1108, 32), x1, 32);
    let x1116: BytePoly_32 = bigint_nondet_inv!(ctx, x1115, x1, 32);
    let x1117: BytePoly_64 = bigint_mul!(x1115, x1116, 64);
    let x1118: BytePoly_34 = bigint_nondet_quot!(ctx, x1117, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1117, bigint_mul!(x1118, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x1119: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1114, x1116, 64), x1, 32);
    let x1120: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x1119, x1115, 64), x1114, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x1121: BytePoly_34 = bigint_nondet_quot!(ctx, x1120, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x1120, bigint_mul!(x1121, x1, 66), 66),
        276359,
        4,
    )?;
    let x1122: BytePoly_64 = bigint_mul!(x1119, x1119, 64);
    let x1123: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1122, x1108, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x1124: BytePoly_34 = bigint_nondet_quot!(ctx, x1123, x1, 34);
    let x1125: BytePoly_32 = bigint_nondet_rem!(ctx, x1123, x1, 32);
    let x1126: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x1119, x1125, 64),
                        bigint_add!(
                            bigint_sub!(x1111, bigint_mul!(x1119, x1108, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x1127: BytePoly_34 = bigint_nondet_quot!(ctx, x1126, x1, 34);
    let x1128: BytePoly_32 = bigint_nondet_rem!(ctx, x1126, x1, 32);
    let x1129: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1122, bigint_mul!(x1124, x1, 66), 66),
                        x1108,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x1125,
        66
    );
    eqz(ctx, &x1129, 276359, 4)?;
    let x1130: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x1127, x1, 66), x1128, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1119, bigint_sub!(x1108, x1125, 32), 64),
                        x1111,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x1130, 276359, 4)?;
    let x1131: BytePoly_32 = bigint_add!(bigint_sub!(x5, x1128, 32), x1, 32);
    let x1132: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1125, 32), x1, 32);
    let x1133: BytePoly_32 = bigint_nondet_inv!(ctx, x1132, x1, 32);
    let x1134: BytePoly_64 = bigint_mul!(x1132, x1133, 64);
    let x1135: BytePoly_34 = bigint_nondet_quot!(ctx, x1134, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1134, bigint_mul!(x1135, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x1136: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1131, x1133, 64), x1, 32);
    let x1137: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x1136, x1132, 64), x1131, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x1138: BytePoly_34 = bigint_nondet_quot!(ctx, x1137, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x1137, bigint_mul!(x1138, x1, 66), 66),
        276359,
        4,
    )?;
    let x1139: BytePoly_64 = bigint_mul!(x1136, x1136, 64);
    let x1140: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1139, x1125, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x1141: BytePoly_34 = bigint_nondet_quot!(ctx, x1140, x1, 34);
    let x1142: BytePoly_32 = bigint_nondet_rem!(ctx, x1140, x1, 32);
    let x1143: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x1136, x1142, 64),
                        bigint_add!(
                            bigint_sub!(x1128, bigint_mul!(x1136, x1125, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x1144: BytePoly_34 = bigint_nondet_quot!(ctx, x1143, x1, 34);
    let x1145: BytePoly_32 = bigint_nondet_rem!(ctx, x1143, x1, 32);
    let x1146: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1139, bigint_mul!(x1141, x1, 66), 66),
                        x1125,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x1142,
        66
    );
    eqz(ctx, &x1146, 276359, 4)?;
    let x1147: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x1144, x1, 66), x1145, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1136, bigint_sub!(x1125, x1142, 32), 64),
                        x1128,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x1147, 276359, 4)?;
    let x1148: BytePoly_32 = bigint_add!(bigint_sub!(x5, x1145, 32), x1, 32);
    let x1149: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1142, 32), x1, 32);
    let x1150: BytePoly_32 = bigint_nondet_inv!(ctx, x1149, x1, 32);
    let x1151: BytePoly_64 = bigint_mul!(x1149, x1150, 64);
    let x1152: BytePoly_34 = bigint_nondet_quot!(ctx, x1151, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1151, bigint_mul!(x1152, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x1153: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1148, x1150, 64), x1, 32);
    let x1154: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x1153, x1149, 64), x1148, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x1155: BytePoly_34 = bigint_nondet_quot!(ctx, x1154, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x1154, bigint_mul!(x1155, x1, 66), 66),
        276359,
        4,
    )?;
    let x1156: BytePoly_64 = bigint_mul!(x1153, x1153, 64);
    let x1157: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1156, x1142, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x1158: BytePoly_34 = bigint_nondet_quot!(ctx, x1157, x1, 34);
    let x1159: BytePoly_32 = bigint_nondet_rem!(ctx, x1157, x1, 32);
    let x1160: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x1153, x1159, 64),
                        bigint_add!(
                            bigint_sub!(x1145, bigint_mul!(x1153, x1142, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x1161: BytePoly_34 = bigint_nondet_quot!(ctx, x1160, x1, 34);
    let x1162: BytePoly_32 = bigint_nondet_rem!(ctx, x1160, x1, 32);
    let x1163: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1156, bigint_mul!(x1158, x1, 66), 66),
                        x1142,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x1159,
        66
    );
    eqz(ctx, &x1163, 276359, 4)?;
    let x1164: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x1161, x1, 66), x1162, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1153, bigint_sub!(x1142, x1159, 32), 64),
                        x1145,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x1164, 276359, 4)?;
    let x1165: BytePoly_32 = bigint_add!(bigint_sub!(x5, x1162, 32), x1, 32);
    let x1166: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1159, 32), x1, 32);
    let x1167: BytePoly_32 = bigint_nondet_inv!(ctx, x1166, x1, 32);
    let x1168: BytePoly_64 = bigint_mul!(x1166, x1167, 64);
    let x1169: BytePoly_34 = bigint_nondet_quot!(ctx, x1168, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1168, bigint_mul!(x1169, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x1170: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1165, x1167, 64), x1, 32);
    let x1171: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x1170, x1166, 64), x1165, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x1172: BytePoly_34 = bigint_nondet_quot!(ctx, x1171, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x1171, bigint_mul!(x1172, x1, 66), 66),
        276359,
        4,
    )?;
    let x1173: BytePoly_64 = bigint_mul!(x1170, x1170, 64);
    let x1174: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1173, x1159, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x1175: BytePoly_34 = bigint_nondet_quot!(ctx, x1174, x1, 34);
    let x1176: BytePoly_32 = bigint_nondet_rem!(ctx, x1174, x1, 32);
    let x1177: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x1170, x1176, 64),
                        bigint_add!(
                            bigint_sub!(x1162, bigint_mul!(x1170, x1159, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x1178: BytePoly_34 = bigint_nondet_quot!(ctx, x1177, x1, 34);
    let x1179: BytePoly_32 = bigint_nondet_rem!(ctx, x1177, x1, 32);
    let x1180: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1173, bigint_mul!(x1175, x1, 66), 66),
                        x1159,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x1176,
        66
    );
    eqz(ctx, &x1180, 276359, 4)?;
    let x1181: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x1178, x1, 66), x1179, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1170, bigint_sub!(x1159, x1176, 32), 64),
                        x1162,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x1181, 276359, 4)?;
    let x1182: BytePoly_32 = bigint_add!(bigint_sub!(x5, x1179, 32), x1, 32);
    let x1183: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1176, 32), x1, 32);
    let x1184: BytePoly_32 = bigint_nondet_inv!(ctx, x1183, x1, 32);
    let x1185: BytePoly_64 = bigint_mul!(x1183, x1184, 64);
    let x1186: BytePoly_34 = bigint_nondet_quot!(ctx, x1185, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1185, bigint_mul!(x1186, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x1187: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1182, x1184, 64), x1, 32);
    let x1188: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x1187, x1183, 64), x1182, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x1189: BytePoly_34 = bigint_nondet_quot!(ctx, x1188, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x1188, bigint_mul!(x1189, x1, 66), 66),
        276359,
        4,
    )?;
    let x1190: BytePoly_64 = bigint_mul!(x1187, x1187, 64);
    let x1191: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1190, x1176, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x1192: BytePoly_34 = bigint_nondet_quot!(ctx, x1191, x1, 34);
    let x1193: BytePoly_32 = bigint_nondet_rem!(ctx, x1191, x1, 32);
    let x1194: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x1187, x1193, 64),
                        bigint_add!(
                            bigint_sub!(x1179, bigint_mul!(x1187, x1176, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x1195: BytePoly_34 = bigint_nondet_quot!(ctx, x1194, x1, 34);
    let x1196: BytePoly_32 = bigint_nondet_rem!(ctx, x1194, x1, 32);
    let x1197: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1190, bigint_mul!(x1192, x1, 66), 66),
                        x1176,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x1193,
        66
    );
    eqz(ctx, &x1197, 276359, 4)?;
    let x1198: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x1195, x1, 66), x1196, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1187, bigint_sub!(x1176, x1193, 32), 64),
                        x1179,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x1198, 276359, 4)?;
    let x1199: BytePoly_32 = bigint_add!(bigint_sub!(x5, x1196, 32), x1, 32);
    let x1200: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1193, 32), x1, 32);
    let x1201: BytePoly_32 = bigint_nondet_inv!(ctx, x1200, x1, 32);
    let x1202: BytePoly_64 = bigint_mul!(x1200, x1201, 64);
    let x1203: BytePoly_34 = bigint_nondet_quot!(ctx, x1202, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1202, bigint_mul!(x1203, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x1204: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1199, x1201, 64), x1, 32);
    let x1205: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x1204, x1200, 64), x1199, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x1206: BytePoly_34 = bigint_nondet_quot!(ctx, x1205, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x1205, bigint_mul!(x1206, x1, 66), 66),
        276359,
        4,
    )?;
    let x1207: BytePoly_64 = bigint_mul!(x1204, x1204, 64);
    let x1208: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1207, x1193, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x1209: BytePoly_34 = bigint_nondet_quot!(ctx, x1208, x1, 34);
    let x1210: BytePoly_32 = bigint_nondet_rem!(ctx, x1208, x1, 32);
    let x1211: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x1204, x1210, 64),
                        bigint_add!(
                            bigint_sub!(x1196, bigint_mul!(x1204, x1193, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x1212: BytePoly_34 = bigint_nondet_quot!(ctx, x1211, x1, 34);
    let x1213: BytePoly_32 = bigint_nondet_rem!(ctx, x1211, x1, 32);
    let x1214: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1207, bigint_mul!(x1209, x1, 66), 66),
                        x1193,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x1210,
        66
    );
    eqz(ctx, &x1214, 276359, 4)?;
    let x1215: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x1212, x1, 66), x1213, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1204, bigint_sub!(x1193, x1210, 32), 64),
                        x1196,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x1215, 276359, 4)?;
    let x1216: BytePoly_32 = bigint_add!(bigint_sub!(x5, x1213, 32), x1, 32);
    let x1217: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1210, 32), x1, 32);
    let x1218: BytePoly_32 = bigint_nondet_inv!(ctx, x1217, x1, 32);
    let x1219: BytePoly_64 = bigint_mul!(x1217, x1218, 64);
    let x1220: BytePoly_34 = bigint_nondet_quot!(ctx, x1219, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1219, bigint_mul!(x1220, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x1221: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1216, x1218, 64), x1, 32);
    let x1222: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x1221, x1217, 64), x1216, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x1223: BytePoly_34 = bigint_nondet_quot!(ctx, x1222, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x1222, bigint_mul!(x1223, x1, 66), 66),
        276359,
        4,
    )?;
    let x1224: BytePoly_64 = bigint_mul!(x1221, x1221, 64);
    let x1225: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1224, x1210, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x1226: BytePoly_34 = bigint_nondet_quot!(ctx, x1225, x1, 34);
    let x1227: BytePoly_32 = bigint_nondet_rem!(ctx, x1225, x1, 32);
    let x1228: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x1221, x1227, 64),
                        bigint_add!(
                            bigint_sub!(x1213, bigint_mul!(x1221, x1210, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x1229: BytePoly_34 = bigint_nondet_quot!(ctx, x1228, x1, 34);
    let x1230: BytePoly_32 = bigint_nondet_rem!(ctx, x1228, x1, 32);
    let x1231: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1224, bigint_mul!(x1226, x1, 66), 66),
                        x1210,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x1227,
        66
    );
    eqz(ctx, &x1231, 276359, 4)?;
    let x1232: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x1229, x1, 66), x1230, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1221, bigint_sub!(x1210, x1227, 32), 64),
                        x1213,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x1232, 276359, 4)?;
    let x1233: BytePoly_32 = bigint_add!(bigint_sub!(x5, x1230, 32), x1, 32);
    let x1234: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1227, 32), x1, 32);
    let x1235: BytePoly_32 = bigint_nondet_inv!(ctx, x1234, x1, 32);
    let x1236: BytePoly_64 = bigint_mul!(x1234, x1235, 64);
    let x1237: BytePoly_34 = bigint_nondet_quot!(ctx, x1236, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1236, bigint_mul!(x1237, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x1238: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1233, x1235, 64), x1, 32);
    let x1239: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x1238, x1234, 64), x1233, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x1240: BytePoly_34 = bigint_nondet_quot!(ctx, x1239, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x1239, bigint_mul!(x1240, x1, 66), 66),
        276359,
        4,
    )?;
    let x1241: BytePoly_64 = bigint_mul!(x1238, x1238, 64);
    let x1242: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1241, x1227, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x1243: BytePoly_34 = bigint_nondet_quot!(ctx, x1242, x1, 34);
    let x1244: BytePoly_32 = bigint_nondet_rem!(ctx, x1242, x1, 32);
    let x1245: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x1238, x1244, 64),
                        bigint_add!(
                            bigint_sub!(x1230, bigint_mul!(x1238, x1227, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x1246: BytePoly_34 = bigint_nondet_quot!(ctx, x1245, x1, 34);
    let x1247: BytePoly_32 = bigint_nondet_rem!(ctx, x1245, x1, 32);
    let x1248: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1241, bigint_mul!(x1243, x1, 66), 66),
                        x1227,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x1244,
        66
    );
    eqz(ctx, &x1248, 276359, 4)?;
    let x1249: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x1246, x1, 66), x1247, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1238, bigint_sub!(x1227, x1244, 32), 64),
                        x1230,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x1249, 276359, 4)?;
    let x1250: BytePoly_32 = bigint_add!(bigint_sub!(x5, x1247, 32), x1, 32);
    let x1251: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1244, 32), x1, 32);
    let x1252: BytePoly_32 = bigint_nondet_inv!(ctx, x1251, x1, 32);
    let x1253: BytePoly_64 = bigint_mul!(x1251, x1252, 64);
    let x1254: BytePoly_34 = bigint_nondet_quot!(ctx, x1253, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1253, bigint_mul!(x1254, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x1255: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1250, x1252, 64), x1, 32);
    let x1256: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x1255, x1251, 64), x1250, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x1257: BytePoly_34 = bigint_nondet_quot!(ctx, x1256, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x1256, bigint_mul!(x1257, x1, 66), 66),
        276359,
        4,
    )?;
    let x1258: BytePoly_64 = bigint_mul!(x1255, x1255, 64);
    let x1259: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1258, x1244, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x1260: BytePoly_34 = bigint_nondet_quot!(ctx, x1259, x1, 34);
    let x1261: BytePoly_32 = bigint_nondet_rem!(ctx, x1259, x1, 32);
    let x1262: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x1255, x1261, 64),
                        bigint_add!(
                            bigint_sub!(x1247, bigint_mul!(x1255, x1244, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x1263: BytePoly_34 = bigint_nondet_quot!(ctx, x1262, x1, 34);
    let x1264: BytePoly_32 = bigint_nondet_rem!(ctx, x1262, x1, 32);
    let x1265: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1258, bigint_mul!(x1260, x1, 66), 66),
                        x1244,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x1261,
        66
    );
    eqz(ctx, &x1265, 276359, 4)?;
    let x1266: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x1263, x1, 66), x1264, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1255, bigint_sub!(x1244, x1261, 32), 64),
                        x1247,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x1266, 276359, 4)?;
    let x1267: BytePoly_32 = bigint_add!(bigint_sub!(x5, x1264, 32), x1, 32);
    let x1268: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1261, 32), x1, 32);
    let x1269: BytePoly_32 = bigint_nondet_inv!(ctx, x1268, x1, 32);
    let x1270: BytePoly_64 = bigint_mul!(x1268, x1269, 64);
    let x1271: BytePoly_34 = bigint_nondet_quot!(ctx, x1270, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1270, bigint_mul!(x1271, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x1272: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1267, x1269, 64), x1, 32);
    let x1273: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x1272, x1268, 64), x1267, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x1274: BytePoly_34 = bigint_nondet_quot!(ctx, x1273, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x1273, bigint_mul!(x1274, x1, 66), 66),
        276359,
        4,
    )?;
    let x1275: BytePoly_64 = bigint_mul!(x1272, x1272, 64);
    let x1276: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1275, x1261, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x1277: BytePoly_34 = bigint_nondet_quot!(ctx, x1276, x1, 34);
    let x1278: BytePoly_32 = bigint_nondet_rem!(ctx, x1276, x1, 32);
    let x1279: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x1272, x1278, 64),
                        bigint_add!(
                            bigint_sub!(x1264, bigint_mul!(x1272, x1261, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x1280: BytePoly_34 = bigint_nondet_quot!(ctx, x1279, x1, 34);
    let x1281: BytePoly_32 = bigint_nondet_rem!(ctx, x1279, x1, 32);
    let x1282: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1275, bigint_mul!(x1277, x1, 66), 66),
                        x1261,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x1278,
        66
    );
    eqz(ctx, &x1282, 276359, 4)?;
    let x1283: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x1280, x1, 66), x1281, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1272, bigint_sub!(x1261, x1278, 32), 64),
                        x1264,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x1283, 276359, 4)?;
    let x1284: BytePoly_32 = bigint_add!(bigint_sub!(x5, x1281, 32), x1, 32);
    let x1285: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1278, 32), x1, 32);
    let x1286: BytePoly_32 = bigint_nondet_inv!(ctx, x1285, x1, 32);
    let x1287: BytePoly_64 = bigint_mul!(x1285, x1286, 64);
    let x1288: BytePoly_34 = bigint_nondet_quot!(ctx, x1287, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1287, bigint_mul!(x1288, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x1289: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1284, x1286, 64), x1, 32);
    let x1290: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x1289, x1285, 64), x1284, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x1291: BytePoly_34 = bigint_nondet_quot!(ctx, x1290, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x1290, bigint_mul!(x1291, x1, 66), 66),
        276359,
        4,
    )?;
    let x1292: BytePoly_64 = bigint_mul!(x1289, x1289, 64);
    let x1293: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1292, x1278, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x1294: BytePoly_34 = bigint_nondet_quot!(ctx, x1293, x1, 34);
    let x1295: BytePoly_32 = bigint_nondet_rem!(ctx, x1293, x1, 32);
    let x1296: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x1289, x1295, 64),
                        bigint_add!(
                            bigint_sub!(x1281, bigint_mul!(x1289, x1278, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x1297: BytePoly_34 = bigint_nondet_quot!(ctx, x1296, x1, 34);
    let x1298: BytePoly_32 = bigint_nondet_rem!(ctx, x1296, x1, 32);
    let x1299: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1292, bigint_mul!(x1294, x1, 66), 66),
                        x1278,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x1295,
        66
    );
    eqz(ctx, &x1299, 276359, 4)?;
    let x1300: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x1297, x1, 66), x1298, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1289, bigint_sub!(x1278, x1295, 32), 64),
                        x1281,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x1300, 276359, 4)?;
    let x1301: BytePoly_32 = bigint_add!(bigint_sub!(x5, x1298, 32), x1, 32);
    let x1302: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1295, 32), x1, 32);
    let x1303: BytePoly_32 = bigint_nondet_inv!(ctx, x1302, x1, 32);
    let x1304: BytePoly_64 = bigint_mul!(x1302, x1303, 64);
    let x1305: BytePoly_34 = bigint_nondet_quot!(ctx, x1304, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1304, bigint_mul!(x1305, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x1306: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1301, x1303, 64), x1, 32);
    let x1307: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x1306, x1302, 64), x1301, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x1308: BytePoly_34 = bigint_nondet_quot!(ctx, x1307, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x1307, bigint_mul!(x1308, x1, 66), 66),
        276359,
        4,
    )?;
    let x1309: BytePoly_64 = bigint_mul!(x1306, x1306, 64);
    let x1310: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1309, x1295, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x1311: BytePoly_34 = bigint_nondet_quot!(ctx, x1310, x1, 34);
    let x1312: BytePoly_32 = bigint_nondet_rem!(ctx, x1310, x1, 32);
    let x1313: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x1306, x1312, 64),
                        bigint_add!(
                            bigint_sub!(x1298, bigint_mul!(x1306, x1295, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x1314: BytePoly_34 = bigint_nondet_quot!(ctx, x1313, x1, 34);
    let x1315: BytePoly_32 = bigint_nondet_rem!(ctx, x1313, x1, 32);
    let x1316: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1309, bigint_mul!(x1311, x1, 66), 66),
                        x1295,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x1312,
        66
    );
    eqz(ctx, &x1316, 276359, 4)?;
    let x1317: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x1314, x1, 66), x1315, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1306, bigint_sub!(x1295, x1312, 32), 64),
                        x1298,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x1317, 276359, 4)?;
    let x1318: BytePoly_32 = bigint_add!(bigint_sub!(x5, x1315, 32), x1, 32);
    let x1319: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1312, 32), x1, 32);
    let x1320: BytePoly_32 = bigint_nondet_inv!(ctx, x1319, x1, 32);
    let x1321: BytePoly_64 = bigint_mul!(x1319, x1320, 64);
    let x1322: BytePoly_34 = bigint_nondet_quot!(ctx, x1321, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1321, bigint_mul!(x1322, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x1323: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1318, x1320, 64), x1, 32);
    let x1324: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x1323, x1319, 64), x1318, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x1325: BytePoly_34 = bigint_nondet_quot!(ctx, x1324, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x1324, bigint_mul!(x1325, x1, 66), 66),
        276359,
        4,
    )?;
    let x1326: BytePoly_64 = bigint_mul!(x1323, x1323, 64);
    let x1327: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1326, x1312, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x1328: BytePoly_34 = bigint_nondet_quot!(ctx, x1327, x1, 34);
    let x1329: BytePoly_32 = bigint_nondet_rem!(ctx, x1327, x1, 32);
    let x1330: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x1323, x1329, 64),
                        bigint_add!(
                            bigint_sub!(x1315, bigint_mul!(x1323, x1312, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x1331: BytePoly_34 = bigint_nondet_quot!(ctx, x1330, x1, 34);
    let x1332: BytePoly_32 = bigint_nondet_rem!(ctx, x1330, x1, 32);
    let x1333: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1326, bigint_mul!(x1328, x1, 66), 66),
                        x1312,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x1329,
        66
    );
    eqz(ctx, &x1333, 276359, 4)?;
    let x1334: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x1331, x1, 66), x1332, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1323, bigint_sub!(x1312, x1329, 32), 64),
                        x1315,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x1334, 276359, 4)?;
    let x1335: BytePoly_32 = bigint_add!(bigint_sub!(x5, x1332, 32), x1, 32);
    let x1336: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1329, 32), x1, 32);
    let x1337: BytePoly_32 = bigint_nondet_inv!(ctx, x1336, x1, 32);
    let x1338: BytePoly_64 = bigint_mul!(x1336, x1337, 64);
    let x1339: BytePoly_34 = bigint_nondet_quot!(ctx, x1338, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1338, bigint_mul!(x1339, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x1340: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1335, x1337, 64), x1, 32);
    let x1341: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x1340, x1336, 64), x1335, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x1342: BytePoly_34 = bigint_nondet_quot!(ctx, x1341, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x1341, bigint_mul!(x1342, x1, 66), 66),
        276359,
        4,
    )?;
    let x1343: BytePoly_64 = bigint_mul!(x1340, x1340, 64);
    let x1344: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1343, x1329, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x1345: BytePoly_34 = bigint_nondet_quot!(ctx, x1344, x1, 34);
    let x1346: BytePoly_32 = bigint_nondet_rem!(ctx, x1344, x1, 32);
    let x1347: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x1340, x1346, 64),
                        bigint_add!(
                            bigint_sub!(x1332, bigint_mul!(x1340, x1329, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x1348: BytePoly_34 = bigint_nondet_quot!(ctx, x1347, x1, 34);
    let x1349: BytePoly_32 = bigint_nondet_rem!(ctx, x1347, x1, 32);
    let x1350: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1343, bigint_mul!(x1345, x1, 66), 66),
                        x1329,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x1346,
        66
    );
    eqz(ctx, &x1350, 276359, 4)?;
    let x1351: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x1348, x1, 66), x1349, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1340, bigint_sub!(x1329, x1346, 32), 64),
                        x1332,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x1351, 276359, 4)?;
    let x1352: BytePoly_32 = bigint_add!(bigint_sub!(x5, x1349, 32), x1, 32);
    let x1353: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1346, 32), x1, 32);
    let x1354: BytePoly_32 = bigint_nondet_inv!(ctx, x1353, x1, 32);
    let x1355: BytePoly_64 = bigint_mul!(x1353, x1354, 64);
    let x1356: BytePoly_34 = bigint_nondet_quot!(ctx, x1355, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1355, bigint_mul!(x1356, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x1357: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1352, x1354, 64), x1, 32);
    let x1358: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x1357, x1353, 64), x1352, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x1359: BytePoly_34 = bigint_nondet_quot!(ctx, x1358, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x1358, bigint_mul!(x1359, x1, 66), 66),
        276359,
        4,
    )?;
    let x1360: BytePoly_64 = bigint_mul!(x1357, x1357, 64);
    let x1361: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1360, x1346, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x1362: BytePoly_34 = bigint_nondet_quot!(ctx, x1361, x1, 34);
    let x1363: BytePoly_32 = bigint_nondet_rem!(ctx, x1361, x1, 32);
    let x1364: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x1357, x1363, 64),
                        bigint_add!(
                            bigint_sub!(x1349, bigint_mul!(x1357, x1346, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x1365: BytePoly_34 = bigint_nondet_quot!(ctx, x1364, x1, 34);
    let x1366: BytePoly_32 = bigint_nondet_rem!(ctx, x1364, x1, 32);
    let x1367: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1360, bigint_mul!(x1362, x1, 66), 66),
                        x1346,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x1363,
        66
    );
    eqz(ctx, &x1367, 276359, 4)?;
    let x1368: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x1365, x1, 66), x1366, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1357, bigint_sub!(x1346, x1363, 32), 64),
                        x1349,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x1368, 276359, 4)?;
    let x1369: BytePoly_32 = bigint_add!(bigint_sub!(x5, x1366, 32), x1, 32);
    let x1370: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1363, 32), x1, 32);
    let x1371: BytePoly_32 = bigint_nondet_inv!(ctx, x1370, x1, 32);
    let x1372: BytePoly_64 = bigint_mul!(x1370, x1371, 64);
    let x1373: BytePoly_34 = bigint_nondet_quot!(ctx, x1372, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1372, bigint_mul!(x1373, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x1374: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1369, x1371, 64), x1, 32);
    let x1375: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x1374, x1370, 64), x1369, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x1376: BytePoly_34 = bigint_nondet_quot!(ctx, x1375, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x1375, bigint_mul!(x1376, x1, 66), 66),
        276359,
        4,
    )?;
    let x1377: BytePoly_64 = bigint_mul!(x1374, x1374, 64);
    let x1378: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1377, x1363, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x1379: BytePoly_34 = bigint_nondet_quot!(ctx, x1378, x1, 34);
    let x1380: BytePoly_32 = bigint_nondet_rem!(ctx, x1378, x1, 32);
    let x1381: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x1374, x1380, 64),
                        bigint_add!(
                            bigint_sub!(x1366, bigint_mul!(x1374, x1363, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x1382: BytePoly_34 = bigint_nondet_quot!(ctx, x1381, x1, 34);
    let x1383: BytePoly_32 = bigint_nondet_rem!(ctx, x1381, x1, 32);
    let x1384: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1377, bigint_mul!(x1379, x1, 66), 66),
                        x1363,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x1380,
        66
    );
    eqz(ctx, &x1384, 276359, 4)?;
    let x1385: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x1382, x1, 66), x1383, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1374, bigint_sub!(x1363, x1380, 32), 64),
                        x1366,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x1385, 276359, 4)?;
    let x1386: BytePoly_32 = bigint_add!(bigint_sub!(x5, x1383, 32), x1, 32);
    let x1387: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1380, 32), x1, 32);
    let x1388: BytePoly_32 = bigint_nondet_inv!(ctx, x1387, x1, 32);
    let x1389: BytePoly_64 = bigint_mul!(x1387, x1388, 64);
    let x1390: BytePoly_34 = bigint_nondet_quot!(ctx, x1389, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1389, bigint_mul!(x1390, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x1391: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1386, x1388, 64), x1, 32);
    let x1392: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x1391, x1387, 64), x1386, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x1393: BytePoly_34 = bigint_nondet_quot!(ctx, x1392, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x1392, bigint_mul!(x1393, x1, 66), 66),
        276359,
        4,
    )?;
    let x1394: BytePoly_64 = bigint_mul!(x1391, x1391, 64);
    let x1395: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1394, x1380, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x1396: BytePoly_34 = bigint_nondet_quot!(ctx, x1395, x1, 34);
    let x1397: BytePoly_32 = bigint_nondet_rem!(ctx, x1395, x1, 32);
    let x1398: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x1391, x1397, 64),
                        bigint_add!(
                            bigint_sub!(x1383, bigint_mul!(x1391, x1380, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x1399: BytePoly_34 = bigint_nondet_quot!(ctx, x1398, x1, 34);
    let x1400: BytePoly_32 = bigint_nondet_rem!(ctx, x1398, x1, 32);
    let x1401: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1394, bigint_mul!(x1396, x1, 66), 66),
                        x1380,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x1397,
        66
    );
    eqz(ctx, &x1401, 276359, 4)?;
    let x1402: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x1399, x1, 66), x1400, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1391, bigint_sub!(x1380, x1397, 32), 64),
                        x1383,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x1402, 276359, 4)?;
    let x1403: BytePoly_32 = bigint_add!(bigint_sub!(x5, x1400, 32), x1, 32);
    let x1404: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1397, 32), x1, 32);
    let x1405: BytePoly_32 = bigint_nondet_inv!(ctx, x1404, x1, 32);
    let x1406: BytePoly_64 = bigint_mul!(x1404, x1405, 64);
    let x1407: BytePoly_34 = bigint_nondet_quot!(ctx, x1406, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1406, bigint_mul!(x1407, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x1408: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1403, x1405, 64), x1, 32);
    let x1409: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x1408, x1404, 64), x1403, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x1410: BytePoly_34 = bigint_nondet_quot!(ctx, x1409, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x1409, bigint_mul!(x1410, x1, 66), 66),
        276359,
        4,
    )?;
    let x1411: BytePoly_64 = bigint_mul!(x1408, x1408, 64);
    let x1412: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1411, x1397, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x1413: BytePoly_34 = bigint_nondet_quot!(ctx, x1412, x1, 34);
    let x1414: BytePoly_32 = bigint_nondet_rem!(ctx, x1412, x1, 32);
    let x1415: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x1408, x1414, 64),
                        bigint_add!(
                            bigint_sub!(x1400, bigint_mul!(x1408, x1397, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x1416: BytePoly_34 = bigint_nondet_quot!(ctx, x1415, x1, 34);
    let x1417: BytePoly_32 = bigint_nondet_rem!(ctx, x1415, x1, 32);
    let x1418: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1411, bigint_mul!(x1413, x1, 66), 66),
                        x1397,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x1414,
        66
    );
    eqz(ctx, &x1418, 276359, 4)?;
    let x1419: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x1416, x1, 66), x1417, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1408, bigint_sub!(x1397, x1414, 32), 64),
                        x1400,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x1419, 276359, 4)?;
    let x1420: BytePoly_32 = bigint_add!(bigint_sub!(x5, x1417, 32), x1, 32);
    let x1421: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1414, 32), x1, 32);
    let x1422: BytePoly_32 = bigint_nondet_inv!(ctx, x1421, x1, 32);
    let x1423: BytePoly_64 = bigint_mul!(x1421, x1422, 64);
    let x1424: BytePoly_34 = bigint_nondet_quot!(ctx, x1423, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1423, bigint_mul!(x1424, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x1425: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1420, x1422, 64), x1, 32);
    let x1426: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x1425, x1421, 64), x1420, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x1427: BytePoly_34 = bigint_nondet_quot!(ctx, x1426, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x1426, bigint_mul!(x1427, x1, 66), 66),
        276359,
        4,
    )?;
    let x1428: BytePoly_64 = bigint_mul!(x1425, x1425, 64);
    let x1429: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1428, x1414, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x1430: BytePoly_34 = bigint_nondet_quot!(ctx, x1429, x1, 34);
    let x1431: BytePoly_32 = bigint_nondet_rem!(ctx, x1429, x1, 32);
    let x1432: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x1425, x1431, 64),
                        bigint_add!(
                            bigint_sub!(x1417, bigint_mul!(x1425, x1414, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x1433: BytePoly_34 = bigint_nondet_quot!(ctx, x1432, x1, 34);
    let x1434: BytePoly_32 = bigint_nondet_rem!(ctx, x1432, x1, 32);
    let x1435: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1428, bigint_mul!(x1430, x1, 66), 66),
                        x1414,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x1431,
        66
    );
    eqz(ctx, &x1435, 276359, 4)?;
    let x1436: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x1433, x1, 66), x1434, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1425, bigint_sub!(x1414, x1431, 32), 64),
                        x1417,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x1436, 276359, 4)?;
    let x1437: BytePoly_32 = bigint_add!(bigint_sub!(x5, x1434, 32), x1, 32);
    let x1438: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1431, 32), x1, 32);
    let x1439: BytePoly_32 = bigint_nondet_inv!(ctx, x1438, x1, 32);
    let x1440: BytePoly_64 = bigint_mul!(x1438, x1439, 64);
    let x1441: BytePoly_34 = bigint_nondet_quot!(ctx, x1440, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1440, bigint_mul!(x1441, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x1442: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1437, x1439, 64), x1, 32);
    let x1443: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x1442, x1438, 64), x1437, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x1444: BytePoly_34 = bigint_nondet_quot!(ctx, x1443, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x1443, bigint_mul!(x1444, x1, 66), 66),
        276359,
        4,
    )?;
    let x1445: BytePoly_64 = bigint_mul!(x1442, x1442, 64);
    let x1446: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1445, x1431, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x1447: BytePoly_34 = bigint_nondet_quot!(ctx, x1446, x1, 34);
    let x1448: BytePoly_32 = bigint_nondet_rem!(ctx, x1446, x1, 32);
    let x1449: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x1442, x1448, 64),
                        bigint_add!(
                            bigint_sub!(x1434, bigint_mul!(x1442, x1431, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x1450: BytePoly_34 = bigint_nondet_quot!(ctx, x1449, x1, 34);
    let x1451: BytePoly_32 = bigint_nondet_rem!(ctx, x1449, x1, 32);
    let x1452: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1445, bigint_mul!(x1447, x1, 66), 66),
                        x1431,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x1448,
        66
    );
    eqz(ctx, &x1452, 276359, 4)?;
    let x1453: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x1450, x1, 66), x1451, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1442, bigint_sub!(x1431, x1448, 32), 64),
                        x1434,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x1453, 276359, 4)?;
    let x1454: BytePoly_32 = bigint_add!(bigint_sub!(x5, x1451, 32), x1, 32);
    let x1455: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1448, 32), x1, 32);
    let x1456: BytePoly_32 = bigint_nondet_inv!(ctx, x1455, x1, 32);
    let x1457: BytePoly_64 = bigint_mul!(x1455, x1456, 64);
    let x1458: BytePoly_34 = bigint_nondet_quot!(ctx, x1457, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1457, bigint_mul!(x1458, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x1459: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1454, x1456, 64), x1, 32);
    let x1460: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x1459, x1455, 64), x1454, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x1461: BytePoly_34 = bigint_nondet_quot!(ctx, x1460, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x1460, bigint_mul!(x1461, x1, 66), 66),
        276359,
        4,
    )?;
    let x1462: BytePoly_64 = bigint_mul!(x1459, x1459, 64);
    let x1463: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1462, x1448, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x1464: BytePoly_34 = bigint_nondet_quot!(ctx, x1463, x1, 34);
    let x1465: BytePoly_32 = bigint_nondet_rem!(ctx, x1463, x1, 32);
    let x1466: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x1459, x1465, 64),
                        bigint_add!(
                            bigint_sub!(x1451, bigint_mul!(x1459, x1448, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x1467: BytePoly_34 = bigint_nondet_quot!(ctx, x1466, x1, 34);
    let x1468: BytePoly_32 = bigint_nondet_rem!(ctx, x1466, x1, 32);
    let x1469: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1462, bigint_mul!(x1464, x1, 66), 66),
                        x1448,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x1465,
        66
    );
    eqz(ctx, &x1469, 276359, 4)?;
    let x1470: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x1467, x1, 66), x1468, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1459, bigint_sub!(x1448, x1465, 32), 64),
                        x1451,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x1470, 276359, 4)?;
    let x1471: BytePoly_32 = bigint_add!(bigint_sub!(x5, x1468, 32), x1, 32);
    let x1472: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1465, 32), x1, 32);
    let x1473: BytePoly_32 = bigint_nondet_inv!(ctx, x1472, x1, 32);
    let x1474: BytePoly_64 = bigint_mul!(x1472, x1473, 64);
    let x1475: BytePoly_34 = bigint_nondet_quot!(ctx, x1474, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1474, bigint_mul!(x1475, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x1476: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1471, x1473, 64), x1, 32);
    let x1477: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x1476, x1472, 64), x1471, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x1478: BytePoly_34 = bigint_nondet_quot!(ctx, x1477, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x1477, bigint_mul!(x1478, x1, 66), 66),
        276359,
        4,
    )?;
    let x1479: BytePoly_64 = bigint_mul!(x1476, x1476, 64);
    let x1480: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1479, x1465, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x1481: BytePoly_34 = bigint_nondet_quot!(ctx, x1480, x1, 34);
    let x1482: BytePoly_32 = bigint_nondet_rem!(ctx, x1480, x1, 32);
    let x1483: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x1476, x1482, 64),
                        bigint_add!(
                            bigint_sub!(x1468, bigint_mul!(x1476, x1465, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x1484: BytePoly_34 = bigint_nondet_quot!(ctx, x1483, x1, 34);
    let x1485: BytePoly_32 = bigint_nondet_rem!(ctx, x1483, x1, 32);
    let x1486: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1479, bigint_mul!(x1481, x1, 66), 66),
                        x1465,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x1482,
        66
    );
    eqz(ctx, &x1486, 276359, 4)?;
    let x1487: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x1484, x1, 66), x1485, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1476, bigint_sub!(x1465, x1482, 32), 64),
                        x1468,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x1487, 276359, 4)?;
    let x1488: BytePoly_32 = bigint_add!(bigint_sub!(x5, x1485, 32), x1, 32);
    let x1489: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1482, 32), x1, 32);
    let x1490: BytePoly_32 = bigint_nondet_inv!(ctx, x1489, x1, 32);
    let x1491: BytePoly_64 = bigint_mul!(x1489, x1490, 64);
    let x1492: BytePoly_34 = bigint_nondet_quot!(ctx, x1491, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1491, bigint_mul!(x1492, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x1493: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1488, x1490, 64), x1, 32);
    let x1494: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x1493, x1489, 64), x1488, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x1495: BytePoly_34 = bigint_nondet_quot!(ctx, x1494, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x1494, bigint_mul!(x1495, x1, 66), 66),
        276359,
        4,
    )?;
    let x1496: BytePoly_64 = bigint_mul!(x1493, x1493, 64);
    let x1497: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1496, x1482, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x1498: BytePoly_34 = bigint_nondet_quot!(ctx, x1497, x1, 34);
    let x1499: BytePoly_32 = bigint_nondet_rem!(ctx, x1497, x1, 32);
    let x1500: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x1493, x1499, 64),
                        bigint_add!(
                            bigint_sub!(x1485, bigint_mul!(x1493, x1482, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x1501: BytePoly_34 = bigint_nondet_quot!(ctx, x1500, x1, 34);
    let x1502: BytePoly_32 = bigint_nondet_rem!(ctx, x1500, x1, 32);
    let x1503: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1496, bigint_mul!(x1498, x1, 66), 66),
                        x1482,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x1499,
        66
    );
    eqz(ctx, &x1503, 276359, 4)?;
    let x1504: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x1501, x1, 66), x1502, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1493, bigint_sub!(x1482, x1499, 32), 64),
                        x1485,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x1504, 276359, 4)?;
    let x1505: BytePoly_32 = bigint_add!(bigint_sub!(x5, x1502, 32), x1, 32);
    let x1506: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1499, 32), x1, 32);
    let x1507: BytePoly_32 = bigint_nondet_inv!(ctx, x1506, x1, 32);
    let x1508: BytePoly_64 = bigint_mul!(x1506, x1507, 64);
    let x1509: BytePoly_34 = bigint_nondet_quot!(ctx, x1508, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1508, bigint_mul!(x1509, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x1510: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1505, x1507, 64), x1, 32);
    let x1511: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x1510, x1506, 64), x1505, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x1512: BytePoly_34 = bigint_nondet_quot!(ctx, x1511, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x1511, bigint_mul!(x1512, x1, 66), 66),
        276359,
        4,
    )?;
    let x1513: BytePoly_64 = bigint_mul!(x1510, x1510, 64);
    let x1514: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1513, x1499, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x1515: BytePoly_34 = bigint_nondet_quot!(ctx, x1514, x1, 34);
    let x1516: BytePoly_32 = bigint_nondet_rem!(ctx, x1514, x1, 32);
    let x1517: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x1510, x1516, 64),
                        bigint_add!(
                            bigint_sub!(x1502, bigint_mul!(x1510, x1499, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x1518: BytePoly_34 = bigint_nondet_quot!(ctx, x1517, x1, 34);
    let x1519: BytePoly_32 = bigint_nondet_rem!(ctx, x1517, x1, 32);
    let x1520: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1513, bigint_mul!(x1515, x1, 66), 66),
                        x1499,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x1516,
        66
    );
    eqz(ctx, &x1520, 276359, 4)?;
    let x1521: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x1518, x1, 66), x1519, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1510, bigint_sub!(x1499, x1516, 32), 64),
                        x1502,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x1521, 276359, 4)?;
    let x1522: BytePoly_32 = bigint_add!(bigint_sub!(x5, x1519, 32), x1, 32);
    let x1523: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1516, 32), x1, 32);
    let x1524: BytePoly_32 = bigint_nondet_inv!(ctx, x1523, x1, 32);
    let x1525: BytePoly_64 = bigint_mul!(x1523, x1524, 64);
    let x1526: BytePoly_34 = bigint_nondet_quot!(ctx, x1525, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1525, bigint_mul!(x1526, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x1527: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1522, x1524, 64), x1, 32);
    let x1528: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x1527, x1523, 64), x1522, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x1529: BytePoly_34 = bigint_nondet_quot!(ctx, x1528, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x1528, bigint_mul!(x1529, x1, 66), 66),
        276359,
        4,
    )?;
    let x1530: BytePoly_64 = bigint_mul!(x1527, x1527, 64);
    let x1531: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1530, x1516, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x1532: BytePoly_34 = bigint_nondet_quot!(ctx, x1531, x1, 34);
    let x1533: BytePoly_32 = bigint_nondet_rem!(ctx, x1531, x1, 32);
    let x1534: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x1527, x1533, 64),
                        bigint_add!(
                            bigint_sub!(x1519, bigint_mul!(x1527, x1516, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x1535: BytePoly_34 = bigint_nondet_quot!(ctx, x1534, x1, 34);
    let x1536: BytePoly_32 = bigint_nondet_rem!(ctx, x1534, x1, 32);
    let x1537: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1530, bigint_mul!(x1532, x1, 66), 66),
                        x1516,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x1533,
        66
    );
    eqz(ctx, &x1537, 276359, 4)?;
    let x1538: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x1535, x1, 66), x1536, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1527, bigint_sub!(x1516, x1533, 32), 64),
                        x1519,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x1538, 276359, 4)?;
    let x1539: BytePoly_32 = bigint_add!(bigint_sub!(x5, x1536, 32), x1, 32);
    let x1540: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1533, 32), x1, 32);
    let x1541: BytePoly_32 = bigint_nondet_inv!(ctx, x1540, x1, 32);
    let x1542: BytePoly_64 = bigint_mul!(x1540, x1541, 64);
    let x1543: BytePoly_34 = bigint_nondet_quot!(ctx, x1542, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1542, bigint_mul!(x1543, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x1544: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1539, x1541, 64), x1, 32);
    let x1545: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x1544, x1540, 64), x1539, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x1546: BytePoly_34 = bigint_nondet_quot!(ctx, x1545, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x1545, bigint_mul!(x1546, x1, 66), 66),
        276359,
        4,
    )?;
    let x1547: BytePoly_64 = bigint_mul!(x1544, x1544, 64);
    let x1548: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1547, x1533, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x1549: BytePoly_34 = bigint_nondet_quot!(ctx, x1548, x1, 34);
    let x1550: BytePoly_32 = bigint_nondet_rem!(ctx, x1548, x1, 32);
    let x1551: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x1544, x1550, 64),
                        bigint_add!(
                            bigint_sub!(x1536, bigint_mul!(x1544, x1533, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x1552: BytePoly_34 = bigint_nondet_quot!(ctx, x1551, x1, 34);
    let x1553: BytePoly_32 = bigint_nondet_rem!(ctx, x1551, x1, 32);
    let x1554: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1547, bigint_mul!(x1549, x1, 66), 66),
                        x1533,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x1550,
        66
    );
    eqz(ctx, &x1554, 276359, 4)?;
    let x1555: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x1552, x1, 66), x1553, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1544, bigint_sub!(x1533, x1550, 32), 64),
                        x1536,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x1555, 276359, 4)?;
    let x1556: BytePoly_32 = bigint_add!(bigint_sub!(x5, x1553, 32), x1, 32);
    let x1557: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1550, 32), x1, 32);
    let x1558: BytePoly_32 = bigint_nondet_inv!(ctx, x1557, x1, 32);
    let x1559: BytePoly_64 = bigint_mul!(x1557, x1558, 64);
    let x1560: BytePoly_34 = bigint_nondet_quot!(ctx, x1559, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1559, bigint_mul!(x1560, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x1561: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1556, x1558, 64), x1, 32);
    let x1562: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x1561, x1557, 64), x1556, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x1563: BytePoly_34 = bigint_nondet_quot!(ctx, x1562, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x1562, bigint_mul!(x1563, x1, 66), 66),
        276359,
        4,
    )?;
    let x1564: BytePoly_64 = bigint_mul!(x1561, x1561, 64);
    let x1565: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1564, x1550, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x1566: BytePoly_34 = bigint_nondet_quot!(ctx, x1565, x1, 34);
    let x1567: BytePoly_32 = bigint_nondet_rem!(ctx, x1565, x1, 32);
    let x1568: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x1561, x1567, 64),
                        bigint_add!(
                            bigint_sub!(x1553, bigint_mul!(x1561, x1550, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x1569: BytePoly_34 = bigint_nondet_quot!(ctx, x1568, x1, 34);
    let x1570: BytePoly_32 = bigint_nondet_rem!(ctx, x1568, x1, 32);
    let x1571: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1564, bigint_mul!(x1566, x1, 66), 66),
                        x1550,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x1567,
        66
    );
    eqz(ctx, &x1571, 276359, 4)?;
    let x1572: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x1569, x1, 66), x1570, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1561, bigint_sub!(x1550, x1567, 32), 64),
                        x1553,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x1572, 276359, 4)?;
    let x1573: BytePoly_32 = bigint_add!(bigint_sub!(x5, x1570, 32), x1, 32);
    let x1574: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1567, 32), x1, 32);
    let x1575: BytePoly_32 = bigint_nondet_inv!(ctx, x1574, x1, 32);
    let x1576: BytePoly_64 = bigint_mul!(x1574, x1575, 64);
    let x1577: BytePoly_34 = bigint_nondet_quot!(ctx, x1576, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1576, bigint_mul!(x1577, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x1578: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1573, x1575, 64), x1, 32);
    let x1579: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x1578, x1574, 64), x1573, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x1580: BytePoly_34 = bigint_nondet_quot!(ctx, x1579, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x1579, bigint_mul!(x1580, x1, 66), 66),
        276359,
        4,
    )?;
    let x1581: BytePoly_64 = bigint_mul!(x1578, x1578, 64);
    let x1582: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1581, x1567, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x1583: BytePoly_34 = bigint_nondet_quot!(ctx, x1582, x1, 34);
    let x1584: BytePoly_32 = bigint_nondet_rem!(ctx, x1582, x1, 32);
    let x1585: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x1578, x1584, 64),
                        bigint_add!(
                            bigint_sub!(x1570, bigint_mul!(x1578, x1567, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x1586: BytePoly_34 = bigint_nondet_quot!(ctx, x1585, x1, 34);
    let x1587: BytePoly_32 = bigint_nondet_rem!(ctx, x1585, x1, 32);
    let x1588: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1581, bigint_mul!(x1583, x1, 66), 66),
                        x1567,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x1584,
        66
    );
    eqz(ctx, &x1588, 276359, 4)?;
    let x1589: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x1586, x1, 66), x1587, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1578, bigint_sub!(x1567, x1584, 32), 64),
                        x1570,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x1589, 276359, 4)?;
    let x1590: BytePoly_32 = bigint_add!(bigint_sub!(x5, x1587, 32), x1, 32);
    let x1591: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1584, 32), x1, 32);
    let x1592: BytePoly_32 = bigint_nondet_inv!(ctx, x1591, x1, 32);
    let x1593: BytePoly_64 = bigint_mul!(x1591, x1592, 64);
    let x1594: BytePoly_34 = bigint_nondet_quot!(ctx, x1593, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1593, bigint_mul!(x1594, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x1595: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1590, x1592, 64), x1, 32);
    let x1596: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x1595, x1591, 64), x1590, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x1597: BytePoly_34 = bigint_nondet_quot!(ctx, x1596, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x1596, bigint_mul!(x1597, x1, 66), 66),
        276359,
        4,
    )?;
    let x1598: BytePoly_64 = bigint_mul!(x1595, x1595, 64);
    let x1599: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1598, x1584, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x1600: BytePoly_34 = bigint_nondet_quot!(ctx, x1599, x1, 34);
    let x1601: BytePoly_32 = bigint_nondet_rem!(ctx, x1599, x1, 32);
    let x1602: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x1595, x1601, 64),
                        bigint_add!(
                            bigint_sub!(x1587, bigint_mul!(x1595, x1584, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x1603: BytePoly_34 = bigint_nondet_quot!(ctx, x1602, x1, 34);
    let x1604: BytePoly_32 = bigint_nondet_rem!(ctx, x1602, x1, 32);
    let x1605: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1598, bigint_mul!(x1600, x1, 66), 66),
                        x1584,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x1601,
        66
    );
    eqz(ctx, &x1605, 276359, 4)?;
    let x1606: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x1603, x1, 66), x1604, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1595, bigint_sub!(x1584, x1601, 32), 64),
                        x1587,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x1606, 276359, 4)?;
    let x1607: BytePoly_32 = bigint_add!(bigint_sub!(x5, x1604, 32), x1, 32);
    let x1608: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1601, 32), x1, 32);
    let x1609: BytePoly_32 = bigint_nondet_inv!(ctx, x1608, x1, 32);
    let x1610: BytePoly_64 = bigint_mul!(x1608, x1609, 64);
    let x1611: BytePoly_34 = bigint_nondet_quot!(ctx, x1610, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1610, bigint_mul!(x1611, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x1612: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1607, x1609, 64), x1, 32);
    let x1613: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x1612, x1608, 64), x1607, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x1614: BytePoly_34 = bigint_nondet_quot!(ctx, x1613, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x1613, bigint_mul!(x1614, x1, 66), 66),
        276359,
        4,
    )?;
    let x1615: BytePoly_64 = bigint_mul!(x1612, x1612, 64);
    let x1616: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1615, x1601, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x1617: BytePoly_34 = bigint_nondet_quot!(ctx, x1616, x1, 34);
    let x1618: BytePoly_32 = bigint_nondet_rem!(ctx, x1616, x1, 32);
    let x1619: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x1612, x1618, 64),
                        bigint_add!(
                            bigint_sub!(x1604, bigint_mul!(x1612, x1601, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x1620: BytePoly_34 = bigint_nondet_quot!(ctx, x1619, x1, 34);
    let x1621: BytePoly_32 = bigint_nondet_rem!(ctx, x1619, x1, 32);
    let x1622: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1615, bigint_mul!(x1617, x1, 66), 66),
                        x1601,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x1618,
        66
    );
    eqz(ctx, &x1622, 276359, 4)?;
    let x1623: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x1620, x1, 66), x1621, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1612, bigint_sub!(x1601, x1618, 32), 64),
                        x1604,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x1623, 276359, 4)?;
    let x1624: BytePoly_32 = bigint_add!(bigint_sub!(x5, x1621, 32), x1, 32);
    let x1625: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1618, 32), x1, 32);
    let x1626: BytePoly_32 = bigint_nondet_inv!(ctx, x1625, x1, 32);
    let x1627: BytePoly_64 = bigint_mul!(x1625, x1626, 64);
    let x1628: BytePoly_34 = bigint_nondet_quot!(ctx, x1627, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1627, bigint_mul!(x1628, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x1629: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1624, x1626, 64), x1, 32);
    let x1630: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x1629, x1625, 64), x1624, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x1631: BytePoly_34 = bigint_nondet_quot!(ctx, x1630, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x1630, bigint_mul!(x1631, x1, 66), 66),
        276359,
        4,
    )?;
    let x1632: BytePoly_64 = bigint_mul!(x1629, x1629, 64);
    let x1633: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1632, x1618, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x1634: BytePoly_34 = bigint_nondet_quot!(ctx, x1633, x1, 34);
    let x1635: BytePoly_32 = bigint_nondet_rem!(ctx, x1633, x1, 32);
    let x1636: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x1629, x1635, 64),
                        bigint_add!(
                            bigint_sub!(x1621, bigint_mul!(x1629, x1618, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x1637: BytePoly_34 = bigint_nondet_quot!(ctx, x1636, x1, 34);
    let x1638: BytePoly_32 = bigint_nondet_rem!(ctx, x1636, x1, 32);
    let x1639: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1632, bigint_mul!(x1634, x1, 66), 66),
                        x1618,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x1635,
        66
    );
    eqz(ctx, &x1639, 276359, 4)?;
    let x1640: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x1637, x1, 66), x1638, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1629, bigint_sub!(x1618, x1635, 32), 64),
                        x1621,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x1640, 276359, 4)?;
    let x1641: BytePoly_32 = bigint_add!(bigint_sub!(x5, x1638, 32), x1, 32);
    let x1642: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1635, 32), x1, 32);
    let x1643: BytePoly_32 = bigint_nondet_inv!(ctx, x1642, x1, 32);
    let x1644: BytePoly_64 = bigint_mul!(x1642, x1643, 64);
    let x1645: BytePoly_34 = bigint_nondet_quot!(ctx, x1644, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1644, bigint_mul!(x1645, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x1646: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1641, x1643, 64), x1, 32);
    let x1647: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x1646, x1642, 64), x1641, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x1648: BytePoly_34 = bigint_nondet_quot!(ctx, x1647, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x1647, bigint_mul!(x1648, x1, 66), 66),
        276359,
        4,
    )?;
    let x1649: BytePoly_64 = bigint_mul!(x1646, x1646, 64);
    let x1650: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1649, x1635, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x1651: BytePoly_34 = bigint_nondet_quot!(ctx, x1650, x1, 34);
    let x1652: BytePoly_32 = bigint_nondet_rem!(ctx, x1650, x1, 32);
    let x1653: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x1646, x1652, 64),
                        bigint_add!(
                            bigint_sub!(x1638, bigint_mul!(x1646, x1635, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x1654: BytePoly_34 = bigint_nondet_quot!(ctx, x1653, x1, 34);
    let x1655: BytePoly_32 = bigint_nondet_rem!(ctx, x1653, x1, 32);
    let x1656: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1649, bigint_mul!(x1651, x1, 66), 66),
                        x1635,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x1652,
        66
    );
    eqz(ctx, &x1656, 276359, 4)?;
    let x1657: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x1654, x1, 66), x1655, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1646, bigint_sub!(x1635, x1652, 32), 64),
                        x1638,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x1657, 276359, 4)?;
    let x1658: BytePoly_32 = bigint_add!(bigint_sub!(x5, x1655, 32), x1, 32);
    let x1659: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1652, 32), x1, 32);
    let x1660: BytePoly_32 = bigint_nondet_inv!(ctx, x1659, x1, 32);
    let x1661: BytePoly_64 = bigint_mul!(x1659, x1660, 64);
    let x1662: BytePoly_34 = bigint_nondet_quot!(ctx, x1661, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1661, bigint_mul!(x1662, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x1663: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1658, x1660, 64), x1, 32);
    let x1664: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x1663, x1659, 64), x1658, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x1665: BytePoly_34 = bigint_nondet_quot!(ctx, x1664, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x1664, bigint_mul!(x1665, x1, 66), 66),
        276359,
        4,
    )?;
    let x1666: BytePoly_64 = bigint_mul!(x1663, x1663, 64);
    let x1667: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1666, x1652, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x1668: BytePoly_34 = bigint_nondet_quot!(ctx, x1667, x1, 34);
    let x1669: BytePoly_32 = bigint_nondet_rem!(ctx, x1667, x1, 32);
    let x1670: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x1663, x1669, 64),
                        bigint_add!(
                            bigint_sub!(x1655, bigint_mul!(x1663, x1652, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x1671: BytePoly_34 = bigint_nondet_quot!(ctx, x1670, x1, 34);
    let x1672: BytePoly_32 = bigint_nondet_rem!(ctx, x1670, x1, 32);
    let x1673: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1666, bigint_mul!(x1668, x1, 66), 66),
                        x1652,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x1669,
        66
    );
    eqz(ctx, &x1673, 276359, 4)?;
    let x1674: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x1671, x1, 66), x1672, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1663, bigint_sub!(x1652, x1669, 32), 64),
                        x1655,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x1674, 276359, 4)?;
    let x1675: BytePoly_32 = bigint_add!(bigint_sub!(x5, x1672, 32), x1, 32);
    let x1676: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1669, 32), x1, 32);
    let x1677: BytePoly_32 = bigint_nondet_inv!(ctx, x1676, x1, 32);
    let x1678: BytePoly_64 = bigint_mul!(x1676, x1677, 64);
    let x1679: BytePoly_34 = bigint_nondet_quot!(ctx, x1678, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1678, bigint_mul!(x1679, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x1680: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1675, x1677, 64), x1, 32);
    let x1681: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x1680, x1676, 64), x1675, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x1682: BytePoly_34 = bigint_nondet_quot!(ctx, x1681, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x1681, bigint_mul!(x1682, x1, 66), 66),
        276359,
        4,
    )?;
    let x1683: BytePoly_64 = bigint_mul!(x1680, x1680, 64);
    let x1684: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1683, x1669, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x1685: BytePoly_34 = bigint_nondet_quot!(ctx, x1684, x1, 34);
    let x1686: BytePoly_32 = bigint_nondet_rem!(ctx, x1684, x1, 32);
    let x1687: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x1680, x1686, 64),
                        bigint_add!(
                            bigint_sub!(x1672, bigint_mul!(x1680, x1669, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x1688: BytePoly_34 = bigint_nondet_quot!(ctx, x1687, x1, 34);
    let x1689: BytePoly_32 = bigint_nondet_rem!(ctx, x1687, x1, 32);
    let x1690: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1683, bigint_mul!(x1685, x1, 66), 66),
                        x1669,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x1686,
        66
    );
    eqz(ctx, &x1690, 276359, 4)?;
    let x1691: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x1688, x1, 66), x1689, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1680, bigint_sub!(x1669, x1686, 32), 64),
                        x1672,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x1691, 276359, 4)?;
    let x1692: BytePoly_32 = bigint_add!(bigint_sub!(x5, x1689, 32), x1, 32);
    let x1693: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1686, 32), x1, 32);
    let x1694: BytePoly_32 = bigint_nondet_inv!(ctx, x1693, x1, 32);
    let x1695: BytePoly_64 = bigint_mul!(x1693, x1694, 64);
    let x1696: BytePoly_34 = bigint_nondet_quot!(ctx, x1695, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1695, bigint_mul!(x1696, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x1697: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1692, x1694, 64), x1, 32);
    let x1698: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x1697, x1693, 64), x1692, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x1699: BytePoly_34 = bigint_nondet_quot!(ctx, x1698, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x1698, bigint_mul!(x1699, x1, 66), 66),
        276359,
        4,
    )?;
    let x1700: BytePoly_64 = bigint_mul!(x1697, x1697, 64);
    let x1701: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1700, x1686, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x1702: BytePoly_34 = bigint_nondet_quot!(ctx, x1701, x1, 34);
    let x1703: BytePoly_32 = bigint_nondet_rem!(ctx, x1701, x1, 32);
    let x1704: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x1697, x1703, 64),
                        bigint_add!(
                            bigint_sub!(x1689, bigint_mul!(x1697, x1686, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x1705: BytePoly_34 = bigint_nondet_quot!(ctx, x1704, x1, 34);
    let x1706: BytePoly_32 = bigint_nondet_rem!(ctx, x1704, x1, 32);
    let x1707: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1700, bigint_mul!(x1702, x1, 66), 66),
                        x1686,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x1703,
        66
    );
    eqz(ctx, &x1707, 276359, 4)?;
    let x1708: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x1705, x1, 66), x1706, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1697, bigint_sub!(x1686, x1703, 32), 64),
                        x1689,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x1708, 276359, 4)?;
    let x1709: BytePoly_32 = bigint_add!(bigint_sub!(x5, x1706, 32), x1, 32);
    let x1710: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1703, 32), x1, 32);
    let x1711: BytePoly_32 = bigint_nondet_inv!(ctx, x1710, x1, 32);
    let x1712: BytePoly_64 = bigint_mul!(x1710, x1711, 64);
    let x1713: BytePoly_34 = bigint_nondet_quot!(ctx, x1712, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1712, bigint_mul!(x1713, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x1714: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1709, x1711, 64), x1, 32);
    let x1715: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x1714, x1710, 64), x1709, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x1716: BytePoly_34 = bigint_nondet_quot!(ctx, x1715, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x1715, bigint_mul!(x1716, x1, 66), 66),
        276359,
        4,
    )?;
    let x1717: BytePoly_64 = bigint_mul!(x1714, x1714, 64);
    let x1718: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1717, x1703, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x1719: BytePoly_34 = bigint_nondet_quot!(ctx, x1718, x1, 34);
    let x1720: BytePoly_32 = bigint_nondet_rem!(ctx, x1718, x1, 32);
    let x1721: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x1714, x1720, 64),
                        bigint_add!(
                            bigint_sub!(x1706, bigint_mul!(x1714, x1703, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x1722: BytePoly_34 = bigint_nondet_quot!(ctx, x1721, x1, 34);
    let x1723: BytePoly_32 = bigint_nondet_rem!(ctx, x1721, x1, 32);
    let x1724: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1717, bigint_mul!(x1719, x1, 66), 66),
                        x1703,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x1720,
        66
    );
    eqz(ctx, &x1724, 276359, 4)?;
    let x1725: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x1722, x1, 66), x1723, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1714, bigint_sub!(x1703, x1720, 32), 64),
                        x1706,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x1725, 276359, 4)?;
    let x1726: BytePoly_32 = bigint_add!(bigint_sub!(x5, x1723, 32), x1, 32);
    let x1727: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1720, 32), x1, 32);
    let x1728: BytePoly_32 = bigint_nondet_inv!(ctx, x1727, x1, 32);
    let x1729: BytePoly_64 = bigint_mul!(x1727, x1728, 64);
    let x1730: BytePoly_34 = bigint_nondet_quot!(ctx, x1729, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1729, bigint_mul!(x1730, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x1731: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1726, x1728, 64), x1, 32);
    let x1732: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x1731, x1727, 64), x1726, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x1733: BytePoly_34 = bigint_nondet_quot!(ctx, x1732, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x1732, bigint_mul!(x1733, x1, 66), 66),
        276359,
        4,
    )?;
    let x1734: BytePoly_64 = bigint_mul!(x1731, x1731, 64);
    let x1735: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1734, x1720, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x1736: BytePoly_34 = bigint_nondet_quot!(ctx, x1735, x1, 34);
    let x1737: BytePoly_32 = bigint_nondet_rem!(ctx, x1735, x1, 32);
    let x1738: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x1731, x1737, 64),
                        bigint_add!(
                            bigint_sub!(x1723, bigint_mul!(x1731, x1720, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x1739: BytePoly_34 = bigint_nondet_quot!(ctx, x1738, x1, 34);
    let x1740: BytePoly_32 = bigint_nondet_rem!(ctx, x1738, x1, 32);
    let x1741: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1734, bigint_mul!(x1736, x1, 66), 66),
                        x1720,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x1737,
        66
    );
    eqz(ctx, &x1741, 276359, 4)?;
    let x1742: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x1739, x1, 66), x1740, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1731, bigint_sub!(x1720, x1737, 32), 64),
                        x1723,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x1742, 276359, 4)?;
    let x1743: BytePoly_32 = bigint_add!(bigint_sub!(x5, x1740, 32), x1, 32);
    let x1744: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1737, 32), x1, 32);
    let x1745: BytePoly_32 = bigint_nondet_inv!(ctx, x1744, x1, 32);
    let x1746: BytePoly_64 = bigint_mul!(x1744, x1745, 64);
    let x1747: BytePoly_34 = bigint_nondet_quot!(ctx, x1746, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1746, bigint_mul!(x1747, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x1748: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1743, x1745, 64), x1, 32);
    let x1749: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x1748, x1744, 64), x1743, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x1750: BytePoly_34 = bigint_nondet_quot!(ctx, x1749, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x1749, bigint_mul!(x1750, x1, 66), 66),
        276359,
        4,
    )?;
    let x1751: BytePoly_64 = bigint_mul!(x1748, x1748, 64);
    let x1752: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1751, x1737, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x1753: BytePoly_34 = bigint_nondet_quot!(ctx, x1752, x1, 34);
    let x1754: BytePoly_32 = bigint_nondet_rem!(ctx, x1752, x1, 32);
    let x1755: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x1748, x1754, 64),
                        bigint_add!(
                            bigint_sub!(x1740, bigint_mul!(x1748, x1737, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x1756: BytePoly_34 = bigint_nondet_quot!(ctx, x1755, x1, 34);
    let x1757: BytePoly_32 = bigint_nondet_rem!(ctx, x1755, x1, 32);
    let x1758: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1751, bigint_mul!(x1753, x1, 66), 66),
                        x1737,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x1754,
        66
    );
    eqz(ctx, &x1758, 276359, 4)?;
    let x1759: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x1756, x1, 66), x1757, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1748, bigint_sub!(x1737, x1754, 32), 64),
                        x1740,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x1759, 276359, 4)?;
    let x1760: BytePoly_32 = bigint_add!(bigint_sub!(x5, x1757, 32), x1, 32);
    let x1761: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1754, 32), x1, 32);
    let x1762: BytePoly_32 = bigint_nondet_inv!(ctx, x1761, x1, 32);
    let x1763: BytePoly_64 = bigint_mul!(x1761, x1762, 64);
    let x1764: BytePoly_34 = bigint_nondet_quot!(ctx, x1763, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1763, bigint_mul!(x1764, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x1765: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1760, x1762, 64), x1, 32);
    let x1766: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x1765, x1761, 64), x1760, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x1767: BytePoly_34 = bigint_nondet_quot!(ctx, x1766, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x1766, bigint_mul!(x1767, x1, 66), 66),
        276359,
        4,
    )?;
    let x1768: BytePoly_64 = bigint_mul!(x1765, x1765, 64);
    let x1769: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1768, x1754, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x1770: BytePoly_34 = bigint_nondet_quot!(ctx, x1769, x1, 34);
    let x1771: BytePoly_32 = bigint_nondet_rem!(ctx, x1769, x1, 32);
    let x1772: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x1765, x1771, 64),
                        bigint_add!(
                            bigint_sub!(x1757, bigint_mul!(x1765, x1754, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x1773: BytePoly_34 = bigint_nondet_quot!(ctx, x1772, x1, 34);
    let x1774: BytePoly_32 = bigint_nondet_rem!(ctx, x1772, x1, 32);
    let x1775: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1768, bigint_mul!(x1770, x1, 66), 66),
                        x1754,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x1771,
        66
    );
    eqz(ctx, &x1775, 276359, 4)?;
    let x1776: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x1773, x1, 66), x1774, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1765, bigint_sub!(x1754, x1771, 32), 64),
                        x1757,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x1776, 276359, 4)?;
    let x1777: BytePoly_32 = bigint_add!(bigint_sub!(x5, x1774, 32), x1, 32);
    let x1778: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1771, 32), x1, 32);
    let x1779: BytePoly_32 = bigint_nondet_inv!(ctx, x1778, x1, 32);
    let x1780: BytePoly_64 = bigint_mul!(x1778, x1779, 64);
    let x1781: BytePoly_34 = bigint_nondet_quot!(ctx, x1780, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1780, bigint_mul!(x1781, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x1782: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1777, x1779, 64), x1, 32);
    let x1783: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x1782, x1778, 64), x1777, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x1784: BytePoly_34 = bigint_nondet_quot!(ctx, x1783, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x1783, bigint_mul!(x1784, x1, 66), 66),
        276359,
        4,
    )?;
    let x1785: BytePoly_64 = bigint_mul!(x1782, x1782, 64);
    let x1786: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1785, x1771, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x1787: BytePoly_34 = bigint_nondet_quot!(ctx, x1786, x1, 34);
    let x1788: BytePoly_32 = bigint_nondet_rem!(ctx, x1786, x1, 32);
    let x1789: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x1782, x1788, 64),
                        bigint_add!(
                            bigint_sub!(x1774, bigint_mul!(x1782, x1771, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x1790: BytePoly_34 = bigint_nondet_quot!(ctx, x1789, x1, 34);
    let x1791: BytePoly_32 = bigint_nondet_rem!(ctx, x1789, x1, 32);
    let x1792: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1785, bigint_mul!(x1787, x1, 66), 66),
                        x1771,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x1788,
        66
    );
    eqz(ctx, &x1792, 276359, 4)?;
    let x1793: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x1790, x1, 66), x1791, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1782, bigint_sub!(x1771, x1788, 32), 64),
                        x1774,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x1793, 276359, 4)?;
    let x1794: BytePoly_32 = bigint_add!(bigint_sub!(x5, x1791, 32), x1, 32);
    let x1795: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1788, 32), x1, 32);
    let x1796: BytePoly_32 = bigint_nondet_inv!(ctx, x1795, x1, 32);
    let x1797: BytePoly_64 = bigint_mul!(x1795, x1796, 64);
    let x1798: BytePoly_34 = bigint_nondet_quot!(ctx, x1797, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1797, bigint_mul!(x1798, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x1799: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1794, x1796, 64), x1, 32);
    let x1800: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x1799, x1795, 64), x1794, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x1801: BytePoly_34 = bigint_nondet_quot!(ctx, x1800, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x1800, bigint_mul!(x1801, x1, 66), 66),
        276359,
        4,
    )?;
    let x1802: BytePoly_64 = bigint_mul!(x1799, x1799, 64);
    let x1803: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1802, x1788, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x1804: BytePoly_34 = bigint_nondet_quot!(ctx, x1803, x1, 34);
    let x1805: BytePoly_32 = bigint_nondet_rem!(ctx, x1803, x1, 32);
    let x1806: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x1799, x1805, 64),
                        bigint_add!(
                            bigint_sub!(x1791, bigint_mul!(x1799, x1788, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x1807: BytePoly_34 = bigint_nondet_quot!(ctx, x1806, x1, 34);
    let x1808: BytePoly_32 = bigint_nondet_rem!(ctx, x1806, x1, 32);
    let x1809: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1802, bigint_mul!(x1804, x1, 66), 66),
                        x1788,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x1805,
        66
    );
    eqz(ctx, &x1809, 276359, 4)?;
    let x1810: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x1807, x1, 66), x1808, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1799, bigint_sub!(x1788, x1805, 32), 64),
                        x1791,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x1810, 276359, 4)?;
    let x1811: BytePoly_32 = bigint_add!(bigint_sub!(x5, x1808, 32), x1, 32);
    let x1812: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1805, 32), x1, 32);
    let x1813: BytePoly_32 = bigint_nondet_inv!(ctx, x1812, x1, 32);
    let x1814: BytePoly_64 = bigint_mul!(x1812, x1813, 64);
    let x1815: BytePoly_34 = bigint_nondet_quot!(ctx, x1814, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1814, bigint_mul!(x1815, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x1816: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1811, x1813, 64), x1, 32);
    let x1817: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x1816, x1812, 64), x1811, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x1818: BytePoly_34 = bigint_nondet_quot!(ctx, x1817, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x1817, bigint_mul!(x1818, x1, 66), 66),
        276359,
        4,
    )?;
    let x1819: BytePoly_64 = bigint_mul!(x1816, x1816, 64);
    let x1820: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1819, x1805, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x1821: BytePoly_34 = bigint_nondet_quot!(ctx, x1820, x1, 34);
    let x1822: BytePoly_32 = bigint_nondet_rem!(ctx, x1820, x1, 32);
    let x1823: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x1816, x1822, 64),
                        bigint_add!(
                            bigint_sub!(x1808, bigint_mul!(x1816, x1805, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x1824: BytePoly_34 = bigint_nondet_quot!(ctx, x1823, x1, 34);
    let x1825: BytePoly_32 = bigint_nondet_rem!(ctx, x1823, x1, 32);
    let x1826: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1819, bigint_mul!(x1821, x1, 66), 66),
                        x1805,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x1822,
        66
    );
    eqz(ctx, &x1826, 276359, 4)?;
    let x1827: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x1824, x1, 66), x1825, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1816, bigint_sub!(x1805, x1822, 32), 64),
                        x1808,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x1827, 276359, 4)?;
    let x1828: BytePoly_32 = bigint_add!(bigint_sub!(x5, x1825, 32), x1, 32);
    let x1829: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1822, 32), x1, 32);
    let x1830: BytePoly_32 = bigint_nondet_inv!(ctx, x1829, x1, 32);
    let x1831: BytePoly_64 = bigint_mul!(x1829, x1830, 64);
    let x1832: BytePoly_34 = bigint_nondet_quot!(ctx, x1831, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1831, bigint_mul!(x1832, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x1833: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1828, x1830, 64), x1, 32);
    let x1834: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x1833, x1829, 64), x1828, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x1835: BytePoly_34 = bigint_nondet_quot!(ctx, x1834, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x1834, bigint_mul!(x1835, x1, 66), 66),
        276359,
        4,
    )?;
    let x1836: BytePoly_64 = bigint_mul!(x1833, x1833, 64);
    let x1837: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1836, x1822, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x1838: BytePoly_34 = bigint_nondet_quot!(ctx, x1837, x1, 34);
    let x1839: BytePoly_32 = bigint_nondet_rem!(ctx, x1837, x1, 32);
    let x1840: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x1833, x1839, 64),
                        bigint_add!(
                            bigint_sub!(x1825, bigint_mul!(x1833, x1822, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x1841: BytePoly_34 = bigint_nondet_quot!(ctx, x1840, x1, 34);
    let x1842: BytePoly_32 = bigint_nondet_rem!(ctx, x1840, x1, 32);
    let x1843: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1836, bigint_mul!(x1838, x1, 66), 66),
                        x1822,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x1839,
        66
    );
    eqz(ctx, &x1843, 276359, 4)?;
    let x1844: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x1841, x1, 66), x1842, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1833, bigint_sub!(x1822, x1839, 32), 64),
                        x1825,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x1844, 276359, 4)?;
    let x1845: BytePoly_32 = bigint_add!(bigint_sub!(x5, x1842, 32), x1, 32);
    let x1846: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1839, 32), x1, 32);
    let x1847: BytePoly_32 = bigint_nondet_inv!(ctx, x1846, x1, 32);
    let x1848: BytePoly_64 = bigint_mul!(x1846, x1847, 64);
    let x1849: BytePoly_34 = bigint_nondet_quot!(ctx, x1848, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1848, bigint_mul!(x1849, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x1850: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1845, x1847, 64), x1, 32);
    let x1851: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x1850, x1846, 64), x1845, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x1852: BytePoly_34 = bigint_nondet_quot!(ctx, x1851, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x1851, bigint_mul!(x1852, x1, 66), 66),
        276359,
        4,
    )?;
    let x1853: BytePoly_64 = bigint_mul!(x1850, x1850, 64);
    let x1854: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1853, x1839, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x1855: BytePoly_34 = bigint_nondet_quot!(ctx, x1854, x1, 34);
    let x1856: BytePoly_32 = bigint_nondet_rem!(ctx, x1854, x1, 32);
    let x1857: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x1850, x1856, 64),
                        bigint_add!(
                            bigint_sub!(x1842, bigint_mul!(x1850, x1839, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x1858: BytePoly_34 = bigint_nondet_quot!(ctx, x1857, x1, 34);
    let x1859: BytePoly_32 = bigint_nondet_rem!(ctx, x1857, x1, 32);
    let x1860: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1853, bigint_mul!(x1855, x1, 66), 66),
                        x1839,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x1856,
        66
    );
    eqz(ctx, &x1860, 276359, 4)?;
    let x1861: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x1858, x1, 66), x1859, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1850, bigint_sub!(x1839, x1856, 32), 64),
                        x1842,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x1861, 276359, 4)?;
    let x1862: BytePoly_32 = bigint_add!(bigint_sub!(x5, x1859, 32), x1, 32);
    let x1863: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1856, 32), x1, 32);
    let x1864: BytePoly_32 = bigint_nondet_inv!(ctx, x1863, x1, 32);
    let x1865: BytePoly_64 = bigint_mul!(x1863, x1864, 64);
    let x1866: BytePoly_34 = bigint_nondet_quot!(ctx, x1865, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1865, bigint_mul!(x1866, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x1867: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1862, x1864, 64), x1, 32);
    let x1868: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x1867, x1863, 64), x1862, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x1869: BytePoly_34 = bigint_nondet_quot!(ctx, x1868, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x1868, bigint_mul!(x1869, x1, 66), 66),
        276359,
        4,
    )?;
    let x1870: BytePoly_64 = bigint_mul!(x1867, x1867, 64);
    let x1871: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1870, x1856, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x1872: BytePoly_34 = bigint_nondet_quot!(ctx, x1871, x1, 34);
    let x1873: BytePoly_32 = bigint_nondet_rem!(ctx, x1871, x1, 32);
    let x1874: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x1867, x1873, 64),
                        bigint_add!(
                            bigint_sub!(x1859, bigint_mul!(x1867, x1856, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x1875: BytePoly_34 = bigint_nondet_quot!(ctx, x1874, x1, 34);
    let x1876: BytePoly_32 = bigint_nondet_rem!(ctx, x1874, x1, 32);
    let x1877: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1870, bigint_mul!(x1872, x1, 66), 66),
                        x1856,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x1873,
        66
    );
    eqz(ctx, &x1877, 276359, 4)?;
    let x1878: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x1875, x1, 66), x1876, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1867, bigint_sub!(x1856, x1873, 32), 64),
                        x1859,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x1878, 276359, 4)?;
    let x1879: BytePoly_32 = bigint_add!(bigint_sub!(x5, x1876, 32), x1, 32);
    let x1880: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1873, 32), x1, 32);
    let x1881: BytePoly_32 = bigint_nondet_inv!(ctx, x1880, x1, 32);
    let x1882: BytePoly_64 = bigint_mul!(x1880, x1881, 64);
    let x1883: BytePoly_34 = bigint_nondet_quot!(ctx, x1882, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1882, bigint_mul!(x1883, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x1884: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1879, x1881, 64), x1, 32);
    let x1885: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x1884, x1880, 64), x1879, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x1886: BytePoly_34 = bigint_nondet_quot!(ctx, x1885, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x1885, bigint_mul!(x1886, x1, 66), 66),
        276359,
        4,
    )?;
    let x1887: BytePoly_64 = bigint_mul!(x1884, x1884, 64);
    let x1888: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1887, x1873, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x1889: BytePoly_34 = bigint_nondet_quot!(ctx, x1888, x1, 34);
    let x1890: BytePoly_32 = bigint_nondet_rem!(ctx, x1888, x1, 32);
    let x1891: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x1884, x1890, 64),
                        bigint_add!(
                            bigint_sub!(x1876, bigint_mul!(x1884, x1873, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x1892: BytePoly_34 = bigint_nondet_quot!(ctx, x1891, x1, 34);
    let x1893: BytePoly_32 = bigint_nondet_rem!(ctx, x1891, x1, 32);
    let x1894: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1887, bigint_mul!(x1889, x1, 66), 66),
                        x1873,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x1890,
        66
    );
    eqz(ctx, &x1894, 276359, 4)?;
    let x1895: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x1892, x1, 66), x1893, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1884, bigint_sub!(x1873, x1890, 32), 64),
                        x1876,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x1895, 276359, 4)?;
    let x1896: BytePoly_32 = bigint_add!(bigint_sub!(x5, x1893, 32), x1, 32);
    let x1897: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1890, 32), x1, 32);
    let x1898: BytePoly_32 = bigint_nondet_inv!(ctx, x1897, x1, 32);
    let x1899: BytePoly_64 = bigint_mul!(x1897, x1898, 64);
    let x1900: BytePoly_34 = bigint_nondet_quot!(ctx, x1899, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1899, bigint_mul!(x1900, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x1901: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1896, x1898, 64), x1, 32);
    let x1902: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x1901, x1897, 64), x1896, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x1903: BytePoly_34 = bigint_nondet_quot!(ctx, x1902, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x1902, bigint_mul!(x1903, x1, 66), 66),
        276359,
        4,
    )?;
    let x1904: BytePoly_64 = bigint_mul!(x1901, x1901, 64);
    let x1905: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1904, x1890, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x1906: BytePoly_34 = bigint_nondet_quot!(ctx, x1905, x1, 34);
    let x1907: BytePoly_32 = bigint_nondet_rem!(ctx, x1905, x1, 32);
    let x1908: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x1901, x1907, 64),
                        bigint_add!(
                            bigint_sub!(x1893, bigint_mul!(x1901, x1890, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x1909: BytePoly_34 = bigint_nondet_quot!(ctx, x1908, x1, 34);
    let x1910: BytePoly_32 = bigint_nondet_rem!(ctx, x1908, x1, 32);
    let x1911: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1904, bigint_mul!(x1906, x1, 66), 66),
                        x1890,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x1907,
        66
    );
    eqz(ctx, &x1911, 276359, 4)?;
    let x1912: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x1909, x1, 66), x1910, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1901, bigint_sub!(x1890, x1907, 32), 64),
                        x1893,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x1912, 276359, 4)?;
    let x1913: BytePoly_32 = bigint_add!(bigint_sub!(x5, x1910, 32), x1, 32);
    let x1914: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1907, 32), x1, 32);
    let x1915: BytePoly_32 = bigint_nondet_inv!(ctx, x1914, x1, 32);
    let x1916: BytePoly_64 = bigint_mul!(x1914, x1915, 64);
    let x1917: BytePoly_34 = bigint_nondet_quot!(ctx, x1916, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1916, bigint_mul!(x1917, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x1918: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1913, x1915, 64), x1, 32);
    let x1919: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x1918, x1914, 64), x1913, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x1920: BytePoly_34 = bigint_nondet_quot!(ctx, x1919, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x1919, bigint_mul!(x1920, x1, 66), 66),
        276359,
        4,
    )?;
    let x1921: BytePoly_64 = bigint_mul!(x1918, x1918, 64);
    let x1922: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1921, x1907, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x1923: BytePoly_34 = bigint_nondet_quot!(ctx, x1922, x1, 34);
    let x1924: BytePoly_32 = bigint_nondet_rem!(ctx, x1922, x1, 32);
    let x1925: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x1918, x1924, 64),
                        bigint_add!(
                            bigint_sub!(x1910, bigint_mul!(x1918, x1907, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x1926: BytePoly_34 = bigint_nondet_quot!(ctx, x1925, x1, 34);
    let x1927: BytePoly_32 = bigint_nondet_rem!(ctx, x1925, x1, 32);
    let x1928: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1921, bigint_mul!(x1923, x1, 66), 66),
                        x1907,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x1924,
        66
    );
    eqz(ctx, &x1928, 276359, 4)?;
    let x1929: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x1926, x1, 66), x1927, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1918, bigint_sub!(x1907, x1924, 32), 64),
                        x1910,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x1929, 276359, 4)?;
    let x1930: BytePoly_32 = bigint_add!(bigint_sub!(x5, x1927, 32), x1, 32);
    let x1931: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1924, 32), x1, 32);
    let x1932: BytePoly_32 = bigint_nondet_inv!(ctx, x1931, x1, 32);
    let x1933: BytePoly_64 = bigint_mul!(x1931, x1932, 64);
    let x1934: BytePoly_34 = bigint_nondet_quot!(ctx, x1933, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1933, bigint_mul!(x1934, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x1935: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1930, x1932, 64), x1, 32);
    let x1936: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x1935, x1931, 64), x1930, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x1937: BytePoly_34 = bigint_nondet_quot!(ctx, x1936, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x1936, bigint_mul!(x1937, x1, 66), 66),
        276359,
        4,
    )?;
    let x1938: BytePoly_64 = bigint_mul!(x1935, x1935, 64);
    let x1939: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1938, x1924, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x1940: BytePoly_34 = bigint_nondet_quot!(ctx, x1939, x1, 34);
    let x1941: BytePoly_32 = bigint_nondet_rem!(ctx, x1939, x1, 32);
    let x1942: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x1935, x1941, 64),
                        bigint_add!(
                            bigint_sub!(x1927, bigint_mul!(x1935, x1924, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x1943: BytePoly_34 = bigint_nondet_quot!(ctx, x1942, x1, 34);
    let x1944: BytePoly_32 = bigint_nondet_rem!(ctx, x1942, x1, 32);
    let x1945: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1938, bigint_mul!(x1940, x1, 66), 66),
                        x1924,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x1941,
        66
    );
    eqz(ctx, &x1945, 276359, 4)?;
    let x1946: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x1943, x1, 66), x1944, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1935, bigint_sub!(x1924, x1941, 32), 64),
                        x1927,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x1946, 276359, 4)?;
    let x1947: BytePoly_32 = bigint_add!(bigint_sub!(x5, x1944, 32), x1, 32);
    let x1948: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1941, 32), x1, 32);
    let x1949: BytePoly_32 = bigint_nondet_inv!(ctx, x1948, x1, 32);
    let x1950: BytePoly_64 = bigint_mul!(x1948, x1949, 64);
    let x1951: BytePoly_34 = bigint_nondet_quot!(ctx, x1950, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1950, bigint_mul!(x1951, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x1952: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1947, x1949, 64), x1, 32);
    let x1953: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x1952, x1948, 64), x1947, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x1954: BytePoly_34 = bigint_nondet_quot!(ctx, x1953, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x1953, bigint_mul!(x1954, x1, 66), 66),
        276359,
        4,
    )?;
    let x1955: BytePoly_64 = bigint_mul!(x1952, x1952, 64);
    let x1956: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1955, x1941, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x1957: BytePoly_34 = bigint_nondet_quot!(ctx, x1956, x1, 34);
    let x1958: BytePoly_32 = bigint_nondet_rem!(ctx, x1956, x1, 32);
    let x1959: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x1952, x1958, 64),
                        bigint_add!(
                            bigint_sub!(x1944, bigint_mul!(x1952, x1941, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x1960: BytePoly_34 = bigint_nondet_quot!(ctx, x1959, x1, 34);
    let x1961: BytePoly_32 = bigint_nondet_rem!(ctx, x1959, x1, 32);
    let x1962: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1955, bigint_mul!(x1957, x1, 66), 66),
                        x1941,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x1958,
        66
    );
    eqz(ctx, &x1962, 276359, 4)?;
    let x1963: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x1960, x1, 66), x1961, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1952, bigint_sub!(x1941, x1958, 32), 64),
                        x1944,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x1963, 276359, 4)?;
    let x1964: BytePoly_32 = bigint_add!(bigint_sub!(x5, x1961, 32), x1, 32);
    let x1965: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1958, 32), x1, 32);
    let x1966: BytePoly_32 = bigint_nondet_inv!(ctx, x1965, x1, 32);
    let x1967: BytePoly_64 = bigint_mul!(x1965, x1966, 64);
    let x1968: BytePoly_34 = bigint_nondet_quot!(ctx, x1967, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1967, bigint_mul!(x1968, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x1969: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1964, x1966, 64), x1, 32);
    let x1970: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x1969, x1965, 64), x1964, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x1971: BytePoly_34 = bigint_nondet_quot!(ctx, x1970, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x1970, bigint_mul!(x1971, x1, 66), 66),
        276359,
        4,
    )?;
    let x1972: BytePoly_64 = bigint_mul!(x1969, x1969, 64);
    let x1973: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1972, x1958, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x1974: BytePoly_34 = bigint_nondet_quot!(ctx, x1973, x1, 34);
    let x1975: BytePoly_32 = bigint_nondet_rem!(ctx, x1973, x1, 32);
    let x1976: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x1969, x1975, 64),
                        bigint_add!(
                            bigint_sub!(x1961, bigint_mul!(x1969, x1958, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x1977: BytePoly_34 = bigint_nondet_quot!(ctx, x1976, x1, 34);
    let x1978: BytePoly_32 = bigint_nondet_rem!(ctx, x1976, x1, 32);
    let x1979: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1972, bigint_mul!(x1974, x1, 66), 66),
                        x1958,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x1975,
        66
    );
    eqz(ctx, &x1979, 276359, 4)?;
    let x1980: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x1977, x1, 66), x1978, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1969, bigint_sub!(x1958, x1975, 32), 64),
                        x1961,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x1980, 276359, 4)?;
    let x1981: BytePoly_32 = bigint_add!(bigint_sub!(x5, x1978, 32), x1, 32);
    let x1982: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1975, 32), x1, 32);
    let x1983: BytePoly_32 = bigint_nondet_inv!(ctx, x1982, x1, 32);
    let x1984: BytePoly_64 = bigint_mul!(x1982, x1983, 64);
    let x1985: BytePoly_34 = bigint_nondet_quot!(ctx, x1984, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x1984, bigint_mul!(x1985, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x1986: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1981, x1983, 64), x1, 32);
    let x1987: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x1986, x1982, 64), x1981, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x1988: BytePoly_34 = bigint_nondet_quot!(ctx, x1987, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x1987, bigint_mul!(x1988, x1, 66), 66),
        276359,
        4,
    )?;
    let x1989: BytePoly_64 = bigint_mul!(x1986, x1986, 64);
    let x1990: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1989, x1975, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x1991: BytePoly_34 = bigint_nondet_quot!(ctx, x1990, x1, 34);
    let x1992: BytePoly_32 = bigint_nondet_rem!(ctx, x1990, x1, 32);
    let x1993: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x1986, x1992, 64),
                        bigint_add!(
                            bigint_sub!(x1978, bigint_mul!(x1986, x1975, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x1994: BytePoly_34 = bigint_nondet_quot!(ctx, x1993, x1, 34);
    let x1995: BytePoly_32 = bigint_nondet_rem!(ctx, x1993, x1, 32);
    let x1996: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1989, bigint_mul!(x1991, x1, 66), 66),
                        x1975,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x1992,
        66
    );
    eqz(ctx, &x1996, 276359, 4)?;
    let x1997: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x1994, x1, 66), x1995, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1986, bigint_sub!(x1975, x1992, 32), 64),
                        x1978,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x1997, 276359, 4)?;
    let x1998: BytePoly_32 = bigint_add!(bigint_sub!(x5, x1995, 32), x1, 32);
    let x1999: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1992, 32), x1, 32);
    let x2000: BytePoly_32 = bigint_nondet_inv!(ctx, x1999, x1, 32);
    let x2001: BytePoly_64 = bigint_mul!(x1999, x2000, 64);
    let x2002: BytePoly_34 = bigint_nondet_quot!(ctx, x2001, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x2001, bigint_mul!(x2002, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x2003: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1998, x2000, 64), x1, 32);
    let x2004: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x2003, x1999, 64), x1998, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x2005: BytePoly_34 = bigint_nondet_quot!(ctx, x2004, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x2004, bigint_mul!(x2005, x1, 66), 66),
        276359,
        4,
    )?;
    let x2006: BytePoly_64 = bigint_mul!(x2003, x2003, 64);
    let x2007: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2006, x1992, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x2008: BytePoly_34 = bigint_nondet_quot!(ctx, x2007, x1, 34);
    let x2009: BytePoly_32 = bigint_nondet_rem!(ctx, x2007, x1, 32);
    let x2010: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x2003, x2009, 64),
                        bigint_add!(
                            bigint_sub!(x1995, bigint_mul!(x2003, x1992, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x2011: BytePoly_34 = bigint_nondet_quot!(ctx, x2010, x1, 34);
    let x2012: BytePoly_32 = bigint_nondet_rem!(ctx, x2010, x1, 32);
    let x2013: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2006, bigint_mul!(x2008, x1, 66), 66),
                        x1992,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x2009,
        66
    );
    eqz(ctx, &x2013, 276359, 4)?;
    let x2014: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x2011, x1, 66), x2012, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2003, bigint_sub!(x1992, x2009, 32), 64),
                        x1995,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x2014, 276359, 4)?;
    let x2015: BytePoly_32 = bigint_add!(bigint_sub!(x5, x2012, 32), x1, 32);
    let x2016: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2009, 32), x1, 32);
    let x2017: BytePoly_32 = bigint_nondet_inv!(ctx, x2016, x1, 32);
    let x2018: BytePoly_64 = bigint_mul!(x2016, x2017, 64);
    let x2019: BytePoly_34 = bigint_nondet_quot!(ctx, x2018, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x2018, bigint_mul!(x2019, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x2020: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2015, x2017, 64), x1, 32);
    let x2021: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x2020, x2016, 64), x2015, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x2022: BytePoly_34 = bigint_nondet_quot!(ctx, x2021, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x2021, bigint_mul!(x2022, x1, 66), 66),
        276359,
        4,
    )?;
    let x2023: BytePoly_64 = bigint_mul!(x2020, x2020, 64);
    let x2024: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2023, x2009, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x2025: BytePoly_34 = bigint_nondet_quot!(ctx, x2024, x1, 34);
    let x2026: BytePoly_32 = bigint_nondet_rem!(ctx, x2024, x1, 32);
    let x2027: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x2020, x2026, 64),
                        bigint_add!(
                            bigint_sub!(x2012, bigint_mul!(x2020, x2009, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x2028: BytePoly_34 = bigint_nondet_quot!(ctx, x2027, x1, 34);
    let x2029: BytePoly_32 = bigint_nondet_rem!(ctx, x2027, x1, 32);
    let x2030: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2023, bigint_mul!(x2025, x1, 66), 66),
                        x2009,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x2026,
        66
    );
    eqz(ctx, &x2030, 276359, 4)?;
    let x2031: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x2028, x1, 66), x2029, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2020, bigint_sub!(x2009, x2026, 32), 64),
                        x2012,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x2031, 276359, 4)?;
    let x2032: BytePoly_32 = bigint_add!(bigint_sub!(x5, x2029, 32), x1, 32);
    let x2033: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2026, 32), x1, 32);
    let x2034: BytePoly_32 = bigint_nondet_inv!(ctx, x2033, x1, 32);
    let x2035: BytePoly_64 = bigint_mul!(x2033, x2034, 64);
    let x2036: BytePoly_34 = bigint_nondet_quot!(ctx, x2035, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x2035, bigint_mul!(x2036, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x2037: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2032, x2034, 64), x1, 32);
    let x2038: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x2037, x2033, 64), x2032, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x2039: BytePoly_34 = bigint_nondet_quot!(ctx, x2038, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x2038, bigint_mul!(x2039, x1, 66), 66),
        276359,
        4,
    )?;
    let x2040: BytePoly_64 = bigint_mul!(x2037, x2037, 64);
    let x2041: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2040, x2026, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x2042: BytePoly_34 = bigint_nondet_quot!(ctx, x2041, x1, 34);
    let x2043: BytePoly_32 = bigint_nondet_rem!(ctx, x2041, x1, 32);
    let x2044: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x2037, x2043, 64),
                        bigint_add!(
                            bigint_sub!(x2029, bigint_mul!(x2037, x2026, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x2045: BytePoly_34 = bigint_nondet_quot!(ctx, x2044, x1, 34);
    let x2046: BytePoly_32 = bigint_nondet_rem!(ctx, x2044, x1, 32);
    let x2047: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2040, bigint_mul!(x2042, x1, 66), 66),
                        x2026,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x2043,
        66
    );
    eqz(ctx, &x2047, 276359, 4)?;
    let x2048: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x2045, x1, 66), x2046, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2037, bigint_sub!(x2026, x2043, 32), 64),
                        x2029,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x2048, 276359, 4)?;
    let x2049: BytePoly_32 = bigint_add!(bigint_sub!(x5, x2046, 32), x1, 32);
    let x2050: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2043, 32), x1, 32);
    let x2051: BytePoly_32 = bigint_nondet_inv!(ctx, x2050, x1, 32);
    let x2052: BytePoly_64 = bigint_mul!(x2050, x2051, 64);
    let x2053: BytePoly_34 = bigint_nondet_quot!(ctx, x2052, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x2052, bigint_mul!(x2053, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x2054: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2049, x2051, 64), x1, 32);
    let x2055: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x2054, x2050, 64), x2049, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x2056: BytePoly_34 = bigint_nondet_quot!(ctx, x2055, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x2055, bigint_mul!(x2056, x1, 66), 66),
        276359,
        4,
    )?;
    let x2057: BytePoly_64 = bigint_mul!(x2054, x2054, 64);
    let x2058: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2057, x2043, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x2059: BytePoly_34 = bigint_nondet_quot!(ctx, x2058, x1, 34);
    let x2060: BytePoly_32 = bigint_nondet_rem!(ctx, x2058, x1, 32);
    let x2061: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x2054, x2060, 64),
                        bigint_add!(
                            bigint_sub!(x2046, bigint_mul!(x2054, x2043, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x2062: BytePoly_34 = bigint_nondet_quot!(ctx, x2061, x1, 34);
    let x2063: BytePoly_32 = bigint_nondet_rem!(ctx, x2061, x1, 32);
    let x2064: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2057, bigint_mul!(x2059, x1, 66), 66),
                        x2043,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x2060,
        66
    );
    eqz(ctx, &x2064, 276359, 4)?;
    let x2065: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x2062, x1, 66), x2063, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2054, bigint_sub!(x2043, x2060, 32), 64),
                        x2046,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x2065, 276359, 4)?;
    let x2066: BytePoly_32 = bigint_add!(bigint_sub!(x5, x2063, 32), x1, 32);
    let x2067: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2060, 32), x1, 32);
    let x2068: BytePoly_32 = bigint_nondet_inv!(ctx, x2067, x1, 32);
    let x2069: BytePoly_64 = bigint_mul!(x2067, x2068, 64);
    let x2070: BytePoly_34 = bigint_nondet_quot!(ctx, x2069, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x2069, bigint_mul!(x2070, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x2071: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2066, x2068, 64), x1, 32);
    let x2072: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x2071, x2067, 64), x2066, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x2073: BytePoly_34 = bigint_nondet_quot!(ctx, x2072, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x2072, bigint_mul!(x2073, x1, 66), 66),
        276359,
        4,
    )?;
    let x2074: BytePoly_64 = bigint_mul!(x2071, x2071, 64);
    let x2075: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2074, x2060, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x2076: BytePoly_34 = bigint_nondet_quot!(ctx, x2075, x1, 34);
    let x2077: BytePoly_32 = bigint_nondet_rem!(ctx, x2075, x1, 32);
    let x2078: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x2071, x2077, 64),
                        bigint_add!(
                            bigint_sub!(x2063, bigint_mul!(x2071, x2060, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x2079: BytePoly_34 = bigint_nondet_quot!(ctx, x2078, x1, 34);
    let x2080: BytePoly_32 = bigint_nondet_rem!(ctx, x2078, x1, 32);
    let x2081: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2074, bigint_mul!(x2076, x1, 66), 66),
                        x2060,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x2077,
        66
    );
    eqz(ctx, &x2081, 276359, 4)?;
    let x2082: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x2079, x1, 66), x2080, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2071, bigint_sub!(x2060, x2077, 32), 64),
                        x2063,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x2082, 276359, 4)?;
    let x2083: BytePoly_32 = bigint_add!(bigint_sub!(x5, x2080, 32), x1, 32);
    let x2084: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2077, 32), x1, 32);
    let x2085: BytePoly_32 = bigint_nondet_inv!(ctx, x2084, x1, 32);
    let x2086: BytePoly_64 = bigint_mul!(x2084, x2085, 64);
    let x2087: BytePoly_34 = bigint_nondet_quot!(ctx, x2086, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x2086, bigint_mul!(x2087, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x2088: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2083, x2085, 64), x1, 32);
    let x2089: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x2088, x2084, 64), x2083, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x2090: BytePoly_34 = bigint_nondet_quot!(ctx, x2089, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x2089, bigint_mul!(x2090, x1, 66), 66),
        276359,
        4,
    )?;
    let x2091: BytePoly_64 = bigint_mul!(x2088, x2088, 64);
    let x2092: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2091, x2077, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x2093: BytePoly_34 = bigint_nondet_quot!(ctx, x2092, x1, 34);
    let x2094: BytePoly_32 = bigint_nondet_rem!(ctx, x2092, x1, 32);
    let x2095: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x2088, x2094, 64),
                        bigint_add!(
                            bigint_sub!(x2080, bigint_mul!(x2088, x2077, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x2096: BytePoly_34 = bigint_nondet_quot!(ctx, x2095, x1, 34);
    let x2097: BytePoly_32 = bigint_nondet_rem!(ctx, x2095, x1, 32);
    let x2098: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2091, bigint_mul!(x2093, x1, 66), 66),
                        x2077,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x2094,
        66
    );
    eqz(ctx, &x2098, 276359, 4)?;
    let x2099: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x2096, x1, 66), x2097, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2088, bigint_sub!(x2077, x2094, 32), 64),
                        x2080,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x2099, 276359, 4)?;
    let x2100: BytePoly_32 = bigint_add!(bigint_sub!(x5, x2097, 32), x1, 32);
    let x2101: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2094, 32), x1, 32);
    let x2102: BytePoly_32 = bigint_nondet_inv!(ctx, x2101, x1, 32);
    let x2103: BytePoly_64 = bigint_mul!(x2101, x2102, 64);
    let x2104: BytePoly_34 = bigint_nondet_quot!(ctx, x2103, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x2103, bigint_mul!(x2104, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x2105: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2100, x2102, 64), x1, 32);
    let x2106: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x2105, x2101, 64), x2100, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x2107: BytePoly_34 = bigint_nondet_quot!(ctx, x2106, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x2106, bigint_mul!(x2107, x1, 66), 66),
        276359,
        4,
    )?;
    let x2108: BytePoly_64 = bigint_mul!(x2105, x2105, 64);
    let x2109: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2108, x2094, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x2110: BytePoly_34 = bigint_nondet_quot!(ctx, x2109, x1, 34);
    let x2111: BytePoly_32 = bigint_nondet_rem!(ctx, x2109, x1, 32);
    let x2112: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x2105, x2111, 64),
                        bigint_add!(
                            bigint_sub!(x2097, bigint_mul!(x2105, x2094, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x2113: BytePoly_34 = bigint_nondet_quot!(ctx, x2112, x1, 34);
    let x2114: BytePoly_32 = bigint_nondet_rem!(ctx, x2112, x1, 32);
    let x2115: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2108, bigint_mul!(x2110, x1, 66), 66),
                        x2094,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x2111,
        66
    );
    eqz(ctx, &x2115, 276359, 4)?;
    let x2116: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x2113, x1, 66), x2114, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2105, bigint_sub!(x2094, x2111, 32), 64),
                        x2097,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x2116, 276359, 4)?;
    let x2117: BytePoly_32 = bigint_add!(bigint_sub!(x5, x2114, 32), x1, 32);
    let x2118: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2111, 32), x1, 32);
    let x2119: BytePoly_32 = bigint_nondet_inv!(ctx, x2118, x1, 32);
    let x2120: BytePoly_64 = bigint_mul!(x2118, x2119, 64);
    let x2121: BytePoly_34 = bigint_nondet_quot!(ctx, x2120, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x2120, bigint_mul!(x2121, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x2122: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2117, x2119, 64), x1, 32);
    let x2123: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x2122, x2118, 64), x2117, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x2124: BytePoly_34 = bigint_nondet_quot!(ctx, x2123, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x2123, bigint_mul!(x2124, x1, 66), 66),
        276359,
        4,
    )?;
    let x2125: BytePoly_64 = bigint_mul!(x2122, x2122, 64);
    let x2126: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2125, x2111, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x2127: BytePoly_34 = bigint_nondet_quot!(ctx, x2126, x1, 34);
    let x2128: BytePoly_32 = bigint_nondet_rem!(ctx, x2126, x1, 32);
    let x2129: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x2122, x2128, 64),
                        bigint_add!(
                            bigint_sub!(x2114, bigint_mul!(x2122, x2111, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x2130: BytePoly_34 = bigint_nondet_quot!(ctx, x2129, x1, 34);
    let x2131: BytePoly_32 = bigint_nondet_rem!(ctx, x2129, x1, 32);
    let x2132: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2125, bigint_mul!(x2127, x1, 66), 66),
                        x2111,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x2128,
        66
    );
    eqz(ctx, &x2132, 276359, 4)?;
    let x2133: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x2130, x1, 66), x2131, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2122, bigint_sub!(x2111, x2128, 32), 64),
                        x2114,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x2133, 276359, 4)?;
    let x2134: BytePoly_32 = bigint_add!(bigint_sub!(x5, x2131, 32), x1, 32);
    let x2135: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2128, 32), x1, 32);
    let x2136: BytePoly_32 = bigint_nondet_inv!(ctx, x2135, x1, 32);
    let x2137: BytePoly_64 = bigint_mul!(x2135, x2136, 64);
    let x2138: BytePoly_34 = bigint_nondet_quot!(ctx, x2137, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x2137, bigint_mul!(x2138, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x2139: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2134, x2136, 64), x1, 32);
    let x2140: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x2139, x2135, 64), x2134, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x2141: BytePoly_34 = bigint_nondet_quot!(ctx, x2140, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x2140, bigint_mul!(x2141, x1, 66), 66),
        276359,
        4,
    )?;
    let x2142: BytePoly_64 = bigint_mul!(x2139, x2139, 64);
    let x2143: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2142, x2128, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x2144: BytePoly_34 = bigint_nondet_quot!(ctx, x2143, x1, 34);
    let x2145: BytePoly_32 = bigint_nondet_rem!(ctx, x2143, x1, 32);
    let x2146: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x2139, x2145, 64),
                        bigint_add!(
                            bigint_sub!(x2131, bigint_mul!(x2139, x2128, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x2147: BytePoly_34 = bigint_nondet_quot!(ctx, x2146, x1, 34);
    let x2148: BytePoly_32 = bigint_nondet_rem!(ctx, x2146, x1, 32);
    let x2149: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2142, bigint_mul!(x2144, x1, 66), 66),
                        x2128,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x2145,
        66
    );
    eqz(ctx, &x2149, 276359, 4)?;
    let x2150: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x2147, x1, 66), x2148, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2139, bigint_sub!(x2128, x2145, 32), 64),
                        x2131,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x2150, 276359, 4)?;
    let x2151: BytePoly_32 = bigint_add!(bigint_sub!(x5, x2148, 32), x1, 32);
    let x2152: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2145, 32), x1, 32);
    let x2153: BytePoly_32 = bigint_nondet_inv!(ctx, x2152, x1, 32);
    let x2154: BytePoly_64 = bigint_mul!(x2152, x2153, 64);
    let x2155: BytePoly_34 = bigint_nondet_quot!(ctx, x2154, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x2154, bigint_mul!(x2155, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x2156: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2151, x2153, 64), x1, 32);
    let x2157: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x2156, x2152, 64), x2151, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x2158: BytePoly_34 = bigint_nondet_quot!(ctx, x2157, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x2157, bigint_mul!(x2158, x1, 66), 66),
        276359,
        4,
    )?;
    let x2159: BytePoly_64 = bigint_mul!(x2156, x2156, 64);
    let x2160: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2159, x2145, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x2161: BytePoly_34 = bigint_nondet_quot!(ctx, x2160, x1, 34);
    let x2162: BytePoly_32 = bigint_nondet_rem!(ctx, x2160, x1, 32);
    let x2163: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x2156, x2162, 64),
                        bigint_add!(
                            bigint_sub!(x2148, bigint_mul!(x2156, x2145, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x2164: BytePoly_34 = bigint_nondet_quot!(ctx, x2163, x1, 34);
    let x2165: BytePoly_32 = bigint_nondet_rem!(ctx, x2163, x1, 32);
    let x2166: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2159, bigint_mul!(x2161, x1, 66), 66),
                        x2145,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x2162,
        66
    );
    eqz(ctx, &x2166, 276359, 4)?;
    let x2167: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x2164, x1, 66), x2165, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2156, bigint_sub!(x2145, x2162, 32), 64),
                        x2148,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x2167, 276359, 4)?;
    let x2168: BytePoly_32 = bigint_add!(bigint_sub!(x5, x2165, 32), x1, 32);
    let x2169: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2162, 32), x1, 32);
    let x2170: BytePoly_32 = bigint_nondet_inv!(ctx, x2169, x1, 32);
    let x2171: BytePoly_64 = bigint_mul!(x2169, x2170, 64);
    let x2172: BytePoly_34 = bigint_nondet_quot!(ctx, x2171, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x2171, bigint_mul!(x2172, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x2173: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2168, x2170, 64), x1, 32);
    let x2174: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x2173, x2169, 64), x2168, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x2175: BytePoly_34 = bigint_nondet_quot!(ctx, x2174, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x2174, bigint_mul!(x2175, x1, 66), 66),
        276359,
        4,
    )?;
    let x2176: BytePoly_64 = bigint_mul!(x2173, x2173, 64);
    let x2177: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2176, x2162, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x2178: BytePoly_34 = bigint_nondet_quot!(ctx, x2177, x1, 34);
    let x2179: BytePoly_32 = bigint_nondet_rem!(ctx, x2177, x1, 32);
    let x2180: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x2173, x2179, 64),
                        bigint_add!(
                            bigint_sub!(x2165, bigint_mul!(x2173, x2162, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x2181: BytePoly_34 = bigint_nondet_quot!(ctx, x2180, x1, 34);
    let x2182: BytePoly_32 = bigint_nondet_rem!(ctx, x2180, x1, 32);
    let x2183: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2176, bigint_mul!(x2178, x1, 66), 66),
                        x2162,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x2179,
        66
    );
    eqz(ctx, &x2183, 276359, 4)?;
    let x2184: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x2181, x1, 66), x2182, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2173, bigint_sub!(x2162, x2179, 32), 64),
                        x2165,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x2184, 276359, 4)?;
    let x2185: BytePoly_32 = bigint_add!(bigint_sub!(x5, x2182, 32), x1, 32);
    let x2186: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2179, 32), x1, 32);
    let x2187: BytePoly_32 = bigint_nondet_inv!(ctx, x2186, x1, 32);
    let x2188: BytePoly_64 = bigint_mul!(x2186, x2187, 64);
    let x2189: BytePoly_34 = bigint_nondet_quot!(ctx, x2188, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x2188, bigint_mul!(x2189, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x2190: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2185, x2187, 64), x1, 32);
    let x2191: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x2190, x2186, 64), x2185, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x2192: BytePoly_34 = bigint_nondet_quot!(ctx, x2191, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x2191, bigint_mul!(x2192, x1, 66), 66),
        276359,
        4,
    )?;
    let x2193: BytePoly_64 = bigint_mul!(x2190, x2190, 64);
    let x2194: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2193, x2179, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x2195: BytePoly_34 = bigint_nondet_quot!(ctx, x2194, x1, 34);
    let x2196: BytePoly_32 = bigint_nondet_rem!(ctx, x2194, x1, 32);
    let x2197: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x2190, x2196, 64),
                        bigint_add!(
                            bigint_sub!(x2182, bigint_mul!(x2190, x2179, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x2198: BytePoly_34 = bigint_nondet_quot!(ctx, x2197, x1, 34);
    let x2199: BytePoly_32 = bigint_nondet_rem!(ctx, x2197, x1, 32);
    let x2200: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2193, bigint_mul!(x2195, x1, 66), 66),
                        x2179,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x2196,
        66
    );
    eqz(ctx, &x2200, 276359, 4)?;
    let x2201: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x2198, x1, 66), x2199, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2190, bigint_sub!(x2179, x2196, 32), 64),
                        x2182,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x2201, 276359, 4)?;
    let x2202: BytePoly_32 = bigint_add!(bigint_sub!(x5, x2199, 32), x1, 32);
    let x2203: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2196, 32), x1, 32);
    let x2204: BytePoly_32 = bigint_nondet_inv!(ctx, x2203, x1, 32);
    let x2205: BytePoly_64 = bigint_mul!(x2203, x2204, 64);
    let x2206: BytePoly_34 = bigint_nondet_quot!(ctx, x2205, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x2205, bigint_mul!(x2206, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x2207: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2202, x2204, 64), x1, 32);
    let x2208: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x2207, x2203, 64), x2202, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x2209: BytePoly_34 = bigint_nondet_quot!(ctx, x2208, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x2208, bigint_mul!(x2209, x1, 66), 66),
        276359,
        4,
    )?;
    let x2210: BytePoly_64 = bigint_mul!(x2207, x2207, 64);
    let x2211: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2210, x2196, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x2212: BytePoly_34 = bigint_nondet_quot!(ctx, x2211, x1, 34);
    let x2213: BytePoly_32 = bigint_nondet_rem!(ctx, x2211, x1, 32);
    let x2214: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x2207, x2213, 64),
                        bigint_add!(
                            bigint_sub!(x2199, bigint_mul!(x2207, x2196, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x2215: BytePoly_34 = bigint_nondet_quot!(ctx, x2214, x1, 34);
    let x2216: BytePoly_32 = bigint_nondet_rem!(ctx, x2214, x1, 32);
    let x2217: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2210, bigint_mul!(x2212, x1, 66), 66),
                        x2196,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x2213,
        66
    );
    eqz(ctx, &x2217, 276359, 4)?;
    let x2218: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x2215, x1, 66), x2216, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2207, bigint_sub!(x2196, x2213, 32), 64),
                        x2199,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x2218, 276359, 4)?;
    let x2219: BytePoly_32 = bigint_add!(bigint_sub!(x5, x2216, 32), x1, 32);
    let x2220: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2213, 32), x1, 32);
    let x2221: BytePoly_32 = bigint_nondet_inv!(ctx, x2220, x1, 32);
    let x2222: BytePoly_64 = bigint_mul!(x2220, x2221, 64);
    let x2223: BytePoly_34 = bigint_nondet_quot!(ctx, x2222, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x2222, bigint_mul!(x2223, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x2224: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2219, x2221, 64), x1, 32);
    let x2225: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x2224, x2220, 64), x2219, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x2226: BytePoly_34 = bigint_nondet_quot!(ctx, x2225, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x2225, bigint_mul!(x2226, x1, 66), 66),
        276359,
        4,
    )?;
    let x2227: BytePoly_64 = bigint_mul!(x2224, x2224, 64);
    let x2228: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2227, x2213, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x2229: BytePoly_34 = bigint_nondet_quot!(ctx, x2228, x1, 34);
    let x2230: BytePoly_32 = bigint_nondet_rem!(ctx, x2228, x1, 32);
    let x2231: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x2224, x2230, 64),
                        bigint_add!(
                            bigint_sub!(x2216, bigint_mul!(x2224, x2213, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x2232: BytePoly_34 = bigint_nondet_quot!(ctx, x2231, x1, 34);
    let x2233: BytePoly_32 = bigint_nondet_rem!(ctx, x2231, x1, 32);
    let x2234: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2227, bigint_mul!(x2229, x1, 66), 66),
                        x2213,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x2230,
        66
    );
    eqz(ctx, &x2234, 276359, 4)?;
    let x2235: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x2232, x1, 66), x2233, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2224, bigint_sub!(x2213, x2230, 32), 64),
                        x2216,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x2235, 276359, 4)?;
    let x2236: BytePoly_32 = bigint_add!(bigint_sub!(x5, x2233, 32), x1, 32);
    let x2237: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2230, 32), x1, 32);
    let x2238: BytePoly_32 = bigint_nondet_inv!(ctx, x2237, x1, 32);
    let x2239: BytePoly_64 = bigint_mul!(x2237, x2238, 64);
    let x2240: BytePoly_34 = bigint_nondet_quot!(ctx, x2239, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x2239, bigint_mul!(x2240, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x2241: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2236, x2238, 64), x1, 32);
    let x2242: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x2241, x2237, 64), x2236, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x2243: BytePoly_34 = bigint_nondet_quot!(ctx, x2242, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x2242, bigint_mul!(x2243, x1, 66), 66),
        276359,
        4,
    )?;
    let x2244: BytePoly_64 = bigint_mul!(x2241, x2241, 64);
    let x2245: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2244, x2230, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x2246: BytePoly_34 = bigint_nondet_quot!(ctx, x2245, x1, 34);
    let x2247: BytePoly_32 = bigint_nondet_rem!(ctx, x2245, x1, 32);
    let x2248: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x2241, x2247, 64),
                        bigint_add!(
                            bigint_sub!(x2233, bigint_mul!(x2241, x2230, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x2249: BytePoly_34 = bigint_nondet_quot!(ctx, x2248, x1, 34);
    let x2250: BytePoly_32 = bigint_nondet_rem!(ctx, x2248, x1, 32);
    let x2251: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2244, bigint_mul!(x2246, x1, 66), 66),
                        x2230,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x2247,
        66
    );
    eqz(ctx, &x2251, 276359, 4)?;
    let x2252: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x2249, x1, 66), x2250, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2241, bigint_sub!(x2230, x2247, 32), 64),
                        x2233,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x2252, 276359, 4)?;
    let x2253: BytePoly_32 = bigint_add!(bigint_sub!(x5, x2250, 32), x1, 32);
    let x2254: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2247, 32), x1, 32);
    let x2255: BytePoly_32 = bigint_nondet_inv!(ctx, x2254, x1, 32);
    let x2256: BytePoly_64 = bigint_mul!(x2254, x2255, 64);
    let x2257: BytePoly_34 = bigint_nondet_quot!(ctx, x2256, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x2256, bigint_mul!(x2257, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x2258: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2253, x2255, 64), x1, 32);
    let x2259: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x2258, x2254, 64), x2253, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x2260: BytePoly_34 = bigint_nondet_quot!(ctx, x2259, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x2259, bigint_mul!(x2260, x1, 66), 66),
        276359,
        4,
    )?;
    let x2261: BytePoly_64 = bigint_mul!(x2258, x2258, 64);
    let x2262: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2261, x2247, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x2263: BytePoly_34 = bigint_nondet_quot!(ctx, x2262, x1, 34);
    let x2264: BytePoly_32 = bigint_nondet_rem!(ctx, x2262, x1, 32);
    let x2265: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x2258, x2264, 64),
                        bigint_add!(
                            bigint_sub!(x2250, bigint_mul!(x2258, x2247, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x2266: BytePoly_34 = bigint_nondet_quot!(ctx, x2265, x1, 34);
    let x2267: BytePoly_32 = bigint_nondet_rem!(ctx, x2265, x1, 32);
    let x2268: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2261, bigint_mul!(x2263, x1, 66), 66),
                        x2247,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x2264,
        66
    );
    eqz(ctx, &x2268, 276359, 4)?;
    let x2269: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x2266, x1, 66), x2267, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2258, bigint_sub!(x2247, x2264, 32), 64),
                        x2250,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x2269, 276359, 4)?;
    let x2270: BytePoly_32 = bigint_add!(bigint_sub!(x5, x2267, 32), x1, 32);
    let x2271: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2264, 32), x1, 32);
    let x2272: BytePoly_32 = bigint_nondet_inv!(ctx, x2271, x1, 32);
    let x2273: BytePoly_64 = bigint_mul!(x2271, x2272, 64);
    let x2274: BytePoly_34 = bigint_nondet_quot!(ctx, x2273, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x2273, bigint_mul!(x2274, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x2275: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2270, x2272, 64), x1, 32);
    let x2276: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x2275, x2271, 64), x2270, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x2277: BytePoly_34 = bigint_nondet_quot!(ctx, x2276, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x2276, bigint_mul!(x2277, x1, 66), 66),
        276359,
        4,
    )?;
    let x2278: BytePoly_64 = bigint_mul!(x2275, x2275, 64);
    let x2279: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2278, x2264, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x2280: BytePoly_34 = bigint_nondet_quot!(ctx, x2279, x1, 34);
    let x2281: BytePoly_32 = bigint_nondet_rem!(ctx, x2279, x1, 32);
    let x2282: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x2275, x2281, 64),
                        bigint_add!(
                            bigint_sub!(x2267, bigint_mul!(x2275, x2264, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x2283: BytePoly_34 = bigint_nondet_quot!(ctx, x2282, x1, 34);
    let x2284: BytePoly_32 = bigint_nondet_rem!(ctx, x2282, x1, 32);
    let x2285: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2278, bigint_mul!(x2280, x1, 66), 66),
                        x2264,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x2281,
        66
    );
    eqz(ctx, &x2285, 276359, 4)?;
    let x2286: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x2283, x1, 66), x2284, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2275, bigint_sub!(x2264, x2281, 32), 64),
                        x2267,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x2286, 276359, 4)?;
    let x2287: BytePoly_32 = bigint_add!(bigint_sub!(x5, x2284, 32), x1, 32);
    let x2288: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2281, 32), x1, 32);
    let x2289: BytePoly_32 = bigint_nondet_inv!(ctx, x2288, x1, 32);
    let x2290: BytePoly_64 = bigint_mul!(x2288, x2289, 64);
    let x2291: BytePoly_34 = bigint_nondet_quot!(ctx, x2290, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x2290, bigint_mul!(x2291, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x2292: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2287, x2289, 64), x1, 32);
    let x2293: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x2292, x2288, 64), x2287, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x2294: BytePoly_34 = bigint_nondet_quot!(ctx, x2293, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x2293, bigint_mul!(x2294, x1, 66), 66),
        276359,
        4,
    )?;
    let x2295: BytePoly_64 = bigint_mul!(x2292, x2292, 64);
    let x2296: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2295, x2281, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x2297: BytePoly_34 = bigint_nondet_quot!(ctx, x2296, x1, 34);
    let x2298: BytePoly_32 = bigint_nondet_rem!(ctx, x2296, x1, 32);
    let x2299: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x2292, x2298, 64),
                        bigint_add!(
                            bigint_sub!(x2284, bigint_mul!(x2292, x2281, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x2300: BytePoly_34 = bigint_nondet_quot!(ctx, x2299, x1, 34);
    let x2301: BytePoly_32 = bigint_nondet_rem!(ctx, x2299, x1, 32);
    let x2302: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2295, bigint_mul!(x2297, x1, 66), 66),
                        x2281,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x2298,
        66
    );
    eqz(ctx, &x2302, 276359, 4)?;
    let x2303: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x2300, x1, 66), x2301, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2292, bigint_sub!(x2281, x2298, 32), 64),
                        x2284,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x2303, 276359, 4)?;
    let x2304: BytePoly_32 = bigint_add!(bigint_sub!(x5, x2301, 32), x1, 32);
    let x2305: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2298, 32), x1, 32);
    let x2306: BytePoly_32 = bigint_nondet_inv!(ctx, x2305, x1, 32);
    let x2307: BytePoly_64 = bigint_mul!(x2305, x2306, 64);
    let x2308: BytePoly_34 = bigint_nondet_quot!(ctx, x2307, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x2307, bigint_mul!(x2308, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x2309: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2304, x2306, 64), x1, 32);
    let x2310: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x2309, x2305, 64), x2304, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x2311: BytePoly_34 = bigint_nondet_quot!(ctx, x2310, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x2310, bigint_mul!(x2311, x1, 66), 66),
        276359,
        4,
    )?;
    let x2312: BytePoly_64 = bigint_mul!(x2309, x2309, 64);
    let x2313: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2312, x2298, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x2314: BytePoly_34 = bigint_nondet_quot!(ctx, x2313, x1, 34);
    let x2315: BytePoly_32 = bigint_nondet_rem!(ctx, x2313, x1, 32);
    let x2316: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x2309, x2315, 64),
                        bigint_add!(
                            bigint_sub!(x2301, bigint_mul!(x2309, x2298, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x2317: BytePoly_34 = bigint_nondet_quot!(ctx, x2316, x1, 34);
    let x2318: BytePoly_32 = bigint_nondet_rem!(ctx, x2316, x1, 32);
    let x2319: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2312, bigint_mul!(x2314, x1, 66), 66),
                        x2298,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x2315,
        66
    );
    eqz(ctx, &x2319, 276359, 4)?;
    let x2320: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x2317, x1, 66), x2318, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2309, bigint_sub!(x2298, x2315, 32), 64),
                        x2301,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x2320, 276359, 4)?;
    let x2321: BytePoly_32 = bigint_add!(bigint_sub!(x5, x2318, 32), x1, 32);
    let x2322: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2315, 32), x1, 32);
    let x2323: BytePoly_32 = bigint_nondet_inv!(ctx, x2322, x1, 32);
    let x2324: BytePoly_64 = bigint_mul!(x2322, x2323, 64);
    let x2325: BytePoly_34 = bigint_nondet_quot!(ctx, x2324, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x2324, bigint_mul!(x2325, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x2326: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2321, x2323, 64), x1, 32);
    let x2327: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x2326, x2322, 64), x2321, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x2328: BytePoly_34 = bigint_nondet_quot!(ctx, x2327, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x2327, bigint_mul!(x2328, x1, 66), 66),
        276359,
        4,
    )?;
    let x2329: BytePoly_64 = bigint_mul!(x2326, x2326, 64);
    let x2330: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2329, x2315, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x2331: BytePoly_34 = bigint_nondet_quot!(ctx, x2330, x1, 34);
    let x2332: BytePoly_32 = bigint_nondet_rem!(ctx, x2330, x1, 32);
    let x2333: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x2326, x2332, 64),
                        bigint_add!(
                            bigint_sub!(x2318, bigint_mul!(x2326, x2315, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x2334: BytePoly_34 = bigint_nondet_quot!(ctx, x2333, x1, 34);
    let x2335: BytePoly_32 = bigint_nondet_rem!(ctx, x2333, x1, 32);
    let x2336: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2329, bigint_mul!(x2331, x1, 66), 66),
                        x2315,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x2332,
        66
    );
    eqz(ctx, &x2336, 276359, 4)?;
    let x2337: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x2334, x1, 66), x2335, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2326, bigint_sub!(x2315, x2332, 32), 64),
                        x2318,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x2337, 276359, 4)?;
    let x2338: BytePoly_32 = bigint_add!(bigint_sub!(x5, x2335, 32), x1, 32);
    let x2339: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2332, 32), x1, 32);
    let x2340: BytePoly_32 = bigint_nondet_inv!(ctx, x2339, x1, 32);
    let x2341: BytePoly_64 = bigint_mul!(x2339, x2340, 64);
    let x2342: BytePoly_34 = bigint_nondet_quot!(ctx, x2341, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x2341, bigint_mul!(x2342, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x2343: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2338, x2340, 64), x1, 32);
    let x2344: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x2343, x2339, 64), x2338, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x2345: BytePoly_34 = bigint_nondet_quot!(ctx, x2344, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x2344, bigint_mul!(x2345, x1, 66), 66),
        276359,
        4,
    )?;
    let x2346: BytePoly_64 = bigint_mul!(x2343, x2343, 64);
    let x2347: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2346, x2332, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x2348: BytePoly_34 = bigint_nondet_quot!(ctx, x2347, x1, 34);
    let x2349: BytePoly_32 = bigint_nondet_rem!(ctx, x2347, x1, 32);
    let x2350: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x2343, x2349, 64),
                        bigint_add!(
                            bigint_sub!(x2335, bigint_mul!(x2343, x2332, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x2351: BytePoly_34 = bigint_nondet_quot!(ctx, x2350, x1, 34);
    let x2352: BytePoly_32 = bigint_nondet_rem!(ctx, x2350, x1, 32);
    let x2353: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2346, bigint_mul!(x2348, x1, 66), 66),
                        x2332,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x2349,
        66
    );
    eqz(ctx, &x2353, 276359, 4)?;
    let x2354: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x2351, x1, 66), x2352, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2343, bigint_sub!(x2332, x2349, 32), 64),
                        x2335,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x2354, 276359, 4)?;
    let x2355: BytePoly_32 = bigint_add!(bigint_sub!(x5, x2352, 32), x1, 32);
    let x2356: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2349, 32), x1, 32);
    let x2357: BytePoly_32 = bigint_nondet_inv!(ctx, x2356, x1, 32);
    let x2358: BytePoly_64 = bigint_mul!(x2356, x2357, 64);
    let x2359: BytePoly_34 = bigint_nondet_quot!(ctx, x2358, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x2358, bigint_mul!(x2359, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x2360: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2355, x2357, 64), x1, 32);
    let x2361: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x2360, x2356, 64), x2355, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x2362: BytePoly_34 = bigint_nondet_quot!(ctx, x2361, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x2361, bigint_mul!(x2362, x1, 66), 66),
        276359,
        4,
    )?;
    let x2363: BytePoly_64 = bigint_mul!(x2360, x2360, 64);
    let x2364: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2363, x2349, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x2365: BytePoly_34 = bigint_nondet_quot!(ctx, x2364, x1, 34);
    let x2366: BytePoly_32 = bigint_nondet_rem!(ctx, x2364, x1, 32);
    let x2367: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x2360, x2366, 64),
                        bigint_add!(
                            bigint_sub!(x2352, bigint_mul!(x2360, x2349, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x2368: BytePoly_34 = bigint_nondet_quot!(ctx, x2367, x1, 34);
    let x2369: BytePoly_32 = bigint_nondet_rem!(ctx, x2367, x1, 32);
    let x2370: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2363, bigint_mul!(x2365, x1, 66), 66),
                        x2349,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x2366,
        66
    );
    eqz(ctx, &x2370, 276359, 4)?;
    let x2371: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x2368, x1, 66), x2369, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2360, bigint_sub!(x2349, x2366, 32), 64),
                        x2352,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x2371, 276359, 4)?;
    let x2372: BytePoly_32 = bigint_add!(bigint_sub!(x5, x2369, 32), x1, 32);
    let x2373: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2366, 32), x1, 32);
    let x2374: BytePoly_32 = bigint_nondet_inv!(ctx, x2373, x1, 32);
    let x2375: BytePoly_64 = bigint_mul!(x2373, x2374, 64);
    let x2376: BytePoly_34 = bigint_nondet_quot!(ctx, x2375, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x2375, bigint_mul!(x2376, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x2377: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2372, x2374, 64), x1, 32);
    let x2378: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x2377, x2373, 64), x2372, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x2379: BytePoly_34 = bigint_nondet_quot!(ctx, x2378, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x2378, bigint_mul!(x2379, x1, 66), 66),
        276359,
        4,
    )?;
    let x2380: BytePoly_64 = bigint_mul!(x2377, x2377, 64);
    let x2381: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2380, x2366, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x2382: BytePoly_34 = bigint_nondet_quot!(ctx, x2381, x1, 34);
    let x2383: BytePoly_32 = bigint_nondet_rem!(ctx, x2381, x1, 32);
    let x2384: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x2377, x2383, 64),
                        bigint_add!(
                            bigint_sub!(x2369, bigint_mul!(x2377, x2366, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x2385: BytePoly_34 = bigint_nondet_quot!(ctx, x2384, x1, 34);
    let x2386: BytePoly_32 = bigint_nondet_rem!(ctx, x2384, x1, 32);
    let x2387: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2380, bigint_mul!(x2382, x1, 66), 66),
                        x2366,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x2383,
        66
    );
    eqz(ctx, &x2387, 276359, 4)?;
    let x2388: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x2385, x1, 66), x2386, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2377, bigint_sub!(x2366, x2383, 32), 64),
                        x2369,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x2388, 276359, 4)?;
    let x2389: BytePoly_32 = bigint_add!(bigint_sub!(x5, x2386, 32), x1, 32);
    let x2390: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2383, 32), x1, 32);
    let x2391: BytePoly_32 = bigint_nondet_inv!(ctx, x2390, x1, 32);
    let x2392: BytePoly_64 = bigint_mul!(x2390, x2391, 64);
    let x2393: BytePoly_34 = bigint_nondet_quot!(ctx, x2392, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x2392, bigint_mul!(x2393, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x2394: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2389, x2391, 64), x1, 32);
    let x2395: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x2394, x2390, 64), x2389, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x2396: BytePoly_34 = bigint_nondet_quot!(ctx, x2395, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x2395, bigint_mul!(x2396, x1, 66), 66),
        276359,
        4,
    )?;
    let x2397: BytePoly_64 = bigint_mul!(x2394, x2394, 64);
    let x2398: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2397, x2383, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x2399: BytePoly_34 = bigint_nondet_quot!(ctx, x2398, x1, 34);
    let x2400: BytePoly_32 = bigint_nondet_rem!(ctx, x2398, x1, 32);
    let x2401: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x2394, x2400, 64),
                        bigint_add!(
                            bigint_sub!(x2386, bigint_mul!(x2394, x2383, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x2402: BytePoly_34 = bigint_nondet_quot!(ctx, x2401, x1, 34);
    let x2403: BytePoly_32 = bigint_nondet_rem!(ctx, x2401, x1, 32);
    let x2404: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2397, bigint_mul!(x2399, x1, 66), 66),
                        x2383,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x2400,
        66
    );
    eqz(ctx, &x2404, 276359, 4)?;
    let x2405: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x2402, x1, 66), x2403, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2394, bigint_sub!(x2383, x2400, 32), 64),
                        x2386,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x2405, 276359, 4)?;
    let x2406: BytePoly_32 = bigint_add!(bigint_sub!(x5, x2403, 32), x1, 32);
    let x2407: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2400, 32), x1, 32);
    let x2408: BytePoly_32 = bigint_nondet_inv!(ctx, x2407, x1, 32);
    let x2409: BytePoly_64 = bigint_mul!(x2407, x2408, 64);
    let x2410: BytePoly_34 = bigint_nondet_quot!(ctx, x2409, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x2409, bigint_mul!(x2410, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x2411: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2406, x2408, 64), x1, 32);
    let x2412: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x2411, x2407, 64), x2406, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x2413: BytePoly_34 = bigint_nondet_quot!(ctx, x2412, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x2412, bigint_mul!(x2413, x1, 66), 66),
        276359,
        4,
    )?;
    let x2414: BytePoly_64 = bigint_mul!(x2411, x2411, 64);
    let x2415: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2414, x2400, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x2416: BytePoly_34 = bigint_nondet_quot!(ctx, x2415, x1, 34);
    let x2417: BytePoly_32 = bigint_nondet_rem!(ctx, x2415, x1, 32);
    let x2418: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x2411, x2417, 64),
                        bigint_add!(
                            bigint_sub!(x2403, bigint_mul!(x2411, x2400, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x2419: BytePoly_34 = bigint_nondet_quot!(ctx, x2418, x1, 34);
    let x2420: BytePoly_32 = bigint_nondet_rem!(ctx, x2418, x1, 32);
    let x2421: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2414, bigint_mul!(x2416, x1, 66), 66),
                        x2400,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x2417,
        66
    );
    eqz(ctx, &x2421, 276359, 4)?;
    let x2422: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x2419, x1, 66), x2420, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2411, bigint_sub!(x2400, x2417, 32), 64),
                        x2403,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x2422, 276359, 4)?;
    let x2423: BytePoly_32 = bigint_add!(bigint_sub!(x5, x2420, 32), x1, 32);
    let x2424: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2417, 32), x1, 32);
    let x2425: BytePoly_32 = bigint_nondet_inv!(ctx, x2424, x1, 32);
    let x2426: BytePoly_64 = bigint_mul!(x2424, x2425, 64);
    let x2427: BytePoly_34 = bigint_nondet_quot!(ctx, x2426, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x2426, bigint_mul!(x2427, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x2428: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2423, x2425, 64), x1, 32);
    let x2429: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x2428, x2424, 64), x2423, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x2430: BytePoly_34 = bigint_nondet_quot!(ctx, x2429, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x2429, bigint_mul!(x2430, x1, 66), 66),
        276359,
        4,
    )?;
    let x2431: BytePoly_64 = bigint_mul!(x2428, x2428, 64);
    let x2432: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2431, x2417, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x2433: BytePoly_34 = bigint_nondet_quot!(ctx, x2432, x1, 34);
    let x2434: BytePoly_32 = bigint_nondet_rem!(ctx, x2432, x1, 32);
    let x2435: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x2428, x2434, 64),
                        bigint_add!(
                            bigint_sub!(x2420, bigint_mul!(x2428, x2417, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x2436: BytePoly_34 = bigint_nondet_quot!(ctx, x2435, x1, 34);
    let x2437: BytePoly_32 = bigint_nondet_rem!(ctx, x2435, x1, 32);
    let x2438: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2431, bigint_mul!(x2433, x1, 66), 66),
                        x2417,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x2434,
        66
    );
    eqz(ctx, &x2438, 276359, 4)?;
    let x2439: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x2436, x1, 66), x2437, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2428, bigint_sub!(x2417, x2434, 32), 64),
                        x2420,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x2439, 276359, 4)?;
    let x2440: BytePoly_32 = bigint_add!(bigint_sub!(x5, x2437, 32), x1, 32);
    let x2441: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2434, 32), x1, 32);
    let x2442: BytePoly_32 = bigint_nondet_inv!(ctx, x2441, x1, 32);
    let x2443: BytePoly_64 = bigint_mul!(x2441, x2442, 64);
    let x2444: BytePoly_34 = bigint_nondet_quot!(ctx, x2443, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x2443, bigint_mul!(x2444, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x2445: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2440, x2442, 64), x1, 32);
    let x2446: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x2445, x2441, 64), x2440, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x2447: BytePoly_34 = bigint_nondet_quot!(ctx, x2446, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x2446, bigint_mul!(x2447, x1, 66), 66),
        276359,
        4,
    )?;
    let x2448: BytePoly_64 = bigint_mul!(x2445, x2445, 64);
    let x2449: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2448, x2434, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x2450: BytePoly_34 = bigint_nondet_quot!(ctx, x2449, x1, 34);
    let x2451: BytePoly_32 = bigint_nondet_rem!(ctx, x2449, x1, 32);
    let x2452: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x2445, x2451, 64),
                        bigint_add!(
                            bigint_sub!(x2437, bigint_mul!(x2445, x2434, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x2453: BytePoly_34 = bigint_nondet_quot!(ctx, x2452, x1, 34);
    let x2454: BytePoly_32 = bigint_nondet_rem!(ctx, x2452, x1, 32);
    let x2455: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2448, bigint_mul!(x2450, x1, 66), 66),
                        x2434,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x2451,
        66
    );
    eqz(ctx, &x2455, 276359, 4)?;
    let x2456: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x2453, x1, 66), x2454, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2445, bigint_sub!(x2434, x2451, 32), 64),
                        x2437,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x2456, 276359, 4)?;
    let x2457: BytePoly_32 = bigint_add!(bigint_sub!(x5, x2454, 32), x1, 32);
    let x2458: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2451, 32), x1, 32);
    let x2459: BytePoly_32 = bigint_nondet_inv!(ctx, x2458, x1, 32);
    let x2460: BytePoly_64 = bigint_mul!(x2458, x2459, 64);
    let x2461: BytePoly_34 = bigint_nondet_quot!(ctx, x2460, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x2460, bigint_mul!(x2461, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x2462: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2457, x2459, 64), x1, 32);
    let x2463: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x2462, x2458, 64), x2457, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x2464: BytePoly_34 = bigint_nondet_quot!(ctx, x2463, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x2463, bigint_mul!(x2464, x1, 66), 66),
        276359,
        4,
    )?;
    let x2465: BytePoly_64 = bigint_mul!(x2462, x2462, 64);
    let x2466: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2465, x2451, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x2467: BytePoly_34 = bigint_nondet_quot!(ctx, x2466, x1, 34);
    let x2468: BytePoly_32 = bigint_nondet_rem!(ctx, x2466, x1, 32);
    let x2469: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x2462, x2468, 64),
                        bigint_add!(
                            bigint_sub!(x2454, bigint_mul!(x2462, x2451, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x2470: BytePoly_34 = bigint_nondet_quot!(ctx, x2469, x1, 34);
    let x2471: BytePoly_32 = bigint_nondet_rem!(ctx, x2469, x1, 32);
    let x2472: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2465, bigint_mul!(x2467, x1, 66), 66),
                        x2451,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x2468,
        66
    );
    eqz(ctx, &x2472, 276359, 4)?;
    let x2473: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x2470, x1, 66), x2471, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2462, bigint_sub!(x2451, x2468, 32), 64),
                        x2454,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x2473, 276359, 4)?;
    let x2474: BytePoly_32 = bigint_add!(bigint_sub!(x5, x2471, 32), x1, 32);
    let x2475: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2468, 32), x1, 32);
    let x2476: BytePoly_32 = bigint_nondet_inv!(ctx, x2475, x1, 32);
    let x2477: BytePoly_64 = bigint_mul!(x2475, x2476, 64);
    let x2478: BytePoly_34 = bigint_nondet_quot!(ctx, x2477, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x2477, bigint_mul!(x2478, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x2479: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2474, x2476, 64), x1, 32);
    let x2480: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x2479, x2475, 64), x2474, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x2481: BytePoly_34 = bigint_nondet_quot!(ctx, x2480, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x2480, bigint_mul!(x2481, x1, 66), 66),
        276359,
        4,
    )?;
    let x2482: BytePoly_64 = bigint_mul!(x2479, x2479, 64);
    let x2483: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2482, x2468, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x2484: BytePoly_34 = bigint_nondet_quot!(ctx, x2483, x1, 34);
    let x2485: BytePoly_32 = bigint_nondet_rem!(ctx, x2483, x1, 32);
    let x2486: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x2479, x2485, 64),
                        bigint_add!(
                            bigint_sub!(x2471, bigint_mul!(x2479, x2468, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x2487: BytePoly_34 = bigint_nondet_quot!(ctx, x2486, x1, 34);
    let x2488: BytePoly_32 = bigint_nondet_rem!(ctx, x2486, x1, 32);
    let x2489: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2482, bigint_mul!(x2484, x1, 66), 66),
                        x2468,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x2485,
        66
    );
    eqz(ctx, &x2489, 276359, 4)?;
    let x2490: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x2487, x1, 66), x2488, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2479, bigint_sub!(x2468, x2485, 32), 64),
                        x2471,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x2490, 276359, 4)?;
    let x2491: BytePoly_32 = bigint_add!(bigint_sub!(x5, x2488, 32), x1, 32);
    let x2492: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2485, 32), x1, 32);
    let x2493: BytePoly_32 = bigint_nondet_inv!(ctx, x2492, x1, 32);
    let x2494: BytePoly_64 = bigint_mul!(x2492, x2493, 64);
    let x2495: BytePoly_34 = bigint_nondet_quot!(ctx, x2494, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x2494, bigint_mul!(x2495, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x2496: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2491, x2493, 64), x1, 32);
    let x2497: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x2496, x2492, 64), x2491, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x2498: BytePoly_34 = bigint_nondet_quot!(ctx, x2497, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x2497, bigint_mul!(x2498, x1, 66), 66),
        276359,
        4,
    )?;
    let x2499: BytePoly_64 = bigint_mul!(x2496, x2496, 64);
    let x2500: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2499, x2485, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x2501: BytePoly_34 = bigint_nondet_quot!(ctx, x2500, x1, 34);
    let x2502: BytePoly_32 = bigint_nondet_rem!(ctx, x2500, x1, 32);
    let x2503: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x2496, x2502, 64),
                        bigint_add!(
                            bigint_sub!(x2488, bigint_mul!(x2496, x2485, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x2504: BytePoly_34 = bigint_nondet_quot!(ctx, x2503, x1, 34);
    let x2505: BytePoly_32 = bigint_nondet_rem!(ctx, x2503, x1, 32);
    let x2506: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2499, bigint_mul!(x2501, x1, 66), 66),
                        x2485,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x2502,
        66
    );
    eqz(ctx, &x2506, 276359, 4)?;
    let x2507: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x2504, x1, 66), x2505, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2496, bigint_sub!(x2485, x2502, 32), 64),
                        x2488,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x2507, 276359, 4)?;
    let x2508: BytePoly_32 = bigint_add!(bigint_sub!(x5, x2505, 32), x1, 32);
    let x2509: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2502, 32), x1, 32);
    let x2510: BytePoly_32 = bigint_nondet_inv!(ctx, x2509, x1, 32);
    let x2511: BytePoly_64 = bigint_mul!(x2509, x2510, 64);
    let x2512: BytePoly_34 = bigint_nondet_quot!(ctx, x2511, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x2511, bigint_mul!(x2512, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x2513: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2508, x2510, 64), x1, 32);
    let x2514: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x2513, x2509, 64), x2508, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x2515: BytePoly_34 = bigint_nondet_quot!(ctx, x2514, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x2514, bigint_mul!(x2515, x1, 66), 66),
        276359,
        4,
    )?;
    let x2516: BytePoly_64 = bigint_mul!(x2513, x2513, 64);
    let x2517: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2516, x2502, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x2518: BytePoly_34 = bigint_nondet_quot!(ctx, x2517, x1, 34);
    let x2519: BytePoly_32 = bigint_nondet_rem!(ctx, x2517, x1, 32);
    let x2520: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x2513, x2519, 64),
                        bigint_add!(
                            bigint_sub!(x2505, bigint_mul!(x2513, x2502, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x2521: BytePoly_34 = bigint_nondet_quot!(ctx, x2520, x1, 34);
    let x2522: BytePoly_32 = bigint_nondet_rem!(ctx, x2520, x1, 32);
    let x2523: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2516, bigint_mul!(x2518, x1, 66), 66),
                        x2502,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x2519,
        66
    );
    eqz(ctx, &x2523, 276359, 4)?;
    let x2524: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x2521, x1, 66), x2522, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2513, bigint_sub!(x2502, x2519, 32), 64),
                        x2505,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x2524, 276359, 4)?;
    let x2525: BytePoly_32 = bigint_add!(bigint_sub!(x5, x2522, 32), x1, 32);
    let x2526: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2519, 32), x1, 32);
    let x2527: BytePoly_32 = bigint_nondet_inv!(ctx, x2526, x1, 32);
    let x2528: BytePoly_64 = bigint_mul!(x2526, x2527, 64);
    let x2529: BytePoly_34 = bigint_nondet_quot!(ctx, x2528, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x2528, bigint_mul!(x2529, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x2530: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2525, x2527, 64), x1, 32);
    let x2531: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x2530, x2526, 64), x2525, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x2532: BytePoly_34 = bigint_nondet_quot!(ctx, x2531, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x2531, bigint_mul!(x2532, x1, 66), 66),
        276359,
        4,
    )?;
    let x2533: BytePoly_64 = bigint_mul!(x2530, x2530, 64);
    let x2534: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2533, x2519, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x2535: BytePoly_34 = bigint_nondet_quot!(ctx, x2534, x1, 34);
    let x2536: BytePoly_32 = bigint_nondet_rem!(ctx, x2534, x1, 32);
    let x2537: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x2530, x2536, 64),
                        bigint_add!(
                            bigint_sub!(x2522, bigint_mul!(x2530, x2519, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x2538: BytePoly_34 = bigint_nondet_quot!(ctx, x2537, x1, 34);
    let x2539: BytePoly_32 = bigint_nondet_rem!(ctx, x2537, x1, 32);
    let x2540: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2533, bigint_mul!(x2535, x1, 66), 66),
                        x2519,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x2536,
        66
    );
    eqz(ctx, &x2540, 276359, 4)?;
    let x2541: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x2538, x1, 66), x2539, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2530, bigint_sub!(x2519, x2536, 32), 64),
                        x2522,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x2541, 276359, 4)?;
    let x2542: BytePoly_32 = bigint_add!(bigint_sub!(x5, x2539, 32), x1, 32);
    let x2543: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2536, 32), x1, 32);
    let x2544: BytePoly_32 = bigint_nondet_inv!(ctx, x2543, x1, 32);
    let x2545: BytePoly_64 = bigint_mul!(x2543, x2544, 64);
    let x2546: BytePoly_34 = bigint_nondet_quot!(ctx, x2545, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x2545, bigint_mul!(x2546, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x2547: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2542, x2544, 64), x1, 32);
    let x2548: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x2547, x2543, 64), x2542, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x2549: BytePoly_34 = bigint_nondet_quot!(ctx, x2548, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x2548, bigint_mul!(x2549, x1, 66), 66),
        276359,
        4,
    )?;
    let x2550: BytePoly_64 = bigint_mul!(x2547, x2547, 64);
    let x2551: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2550, x2536, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x2552: BytePoly_34 = bigint_nondet_quot!(ctx, x2551, x1, 34);
    let x2553: BytePoly_32 = bigint_nondet_rem!(ctx, x2551, x1, 32);
    let x2554: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x2547, x2553, 64),
                        bigint_add!(
                            bigint_sub!(x2539, bigint_mul!(x2547, x2536, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x2555: BytePoly_34 = bigint_nondet_quot!(ctx, x2554, x1, 34);
    let x2556: BytePoly_32 = bigint_nondet_rem!(ctx, x2554, x1, 32);
    let x2557: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2550, bigint_mul!(x2552, x1, 66), 66),
                        x2536,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x2553,
        66
    );
    eqz(ctx, &x2557, 276359, 4)?;
    let x2558: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x2555, x1, 66), x2556, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2547, bigint_sub!(x2536, x2553, 32), 64),
                        x2539,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x2558, 276359, 4)?;
    let x2559: BytePoly_32 = bigint_add!(bigint_sub!(x5, x2556, 32), x1, 32);
    let x2560: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2553, 32), x1, 32);
    let x2561: BytePoly_32 = bigint_nondet_inv!(ctx, x2560, x1, 32);
    let x2562: BytePoly_64 = bigint_mul!(x2560, x2561, 64);
    let x2563: BytePoly_34 = bigint_nondet_quot!(ctx, x2562, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x2562, bigint_mul!(x2563, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x2564: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2559, x2561, 64), x1, 32);
    let x2565: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x2564, x2560, 64), x2559, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x2566: BytePoly_34 = bigint_nondet_quot!(ctx, x2565, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x2565, bigint_mul!(x2566, x1, 66), 66),
        276359,
        4,
    )?;
    let x2567: BytePoly_64 = bigint_mul!(x2564, x2564, 64);
    let x2568: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2567, x2553, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x2569: BytePoly_34 = bigint_nondet_quot!(ctx, x2568, x1, 34);
    let x2570: BytePoly_32 = bigint_nondet_rem!(ctx, x2568, x1, 32);
    let x2571: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x2564, x2570, 64),
                        bigint_add!(
                            bigint_sub!(x2556, bigint_mul!(x2564, x2553, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x2572: BytePoly_34 = bigint_nondet_quot!(ctx, x2571, x1, 34);
    let x2573: BytePoly_32 = bigint_nondet_rem!(ctx, x2571, x1, 32);
    let x2574: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2567, bigint_mul!(x2569, x1, 66), 66),
                        x2553,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x2570,
        66
    );
    eqz(ctx, &x2574, 276359, 4)?;
    let x2575: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x2572, x1, 66), x2573, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2564, bigint_sub!(x2553, x2570, 32), 64),
                        x2556,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x2575, 276359, 4)?;
    let x2576: BytePoly_32 = bigint_add!(bigint_sub!(x5, x2573, 32), x1, 32);
    let x2577: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2570, 32), x1, 32);
    let x2578: BytePoly_32 = bigint_nondet_inv!(ctx, x2577, x1, 32);
    let x2579: BytePoly_64 = bigint_mul!(x2577, x2578, 64);
    let x2580: BytePoly_34 = bigint_nondet_quot!(ctx, x2579, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x2579, bigint_mul!(x2580, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x2581: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2576, x2578, 64), x1, 32);
    let x2582: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x2581, x2577, 64), x2576, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x2583: BytePoly_34 = bigint_nondet_quot!(ctx, x2582, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x2582, bigint_mul!(x2583, x1, 66), 66),
        276359,
        4,
    )?;
    let x2584: BytePoly_64 = bigint_mul!(x2581, x2581, 64);
    let x2585: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2584, x2570, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x2586: BytePoly_34 = bigint_nondet_quot!(ctx, x2585, x1, 34);
    let x2587: BytePoly_32 = bigint_nondet_rem!(ctx, x2585, x1, 32);
    let x2588: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x2581, x2587, 64),
                        bigint_add!(
                            bigint_sub!(x2573, bigint_mul!(x2581, x2570, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x2589: BytePoly_34 = bigint_nondet_quot!(ctx, x2588, x1, 34);
    let x2590: BytePoly_32 = bigint_nondet_rem!(ctx, x2588, x1, 32);
    let x2591: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2584, bigint_mul!(x2586, x1, 66), 66),
                        x2570,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x2587,
        66
    );
    eqz(ctx, &x2591, 276359, 4)?;
    let x2592: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x2589, x1, 66), x2590, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2581, bigint_sub!(x2570, x2587, 32), 64),
                        x2573,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x2592, 276359, 4)?;
    let x2593: BytePoly_32 = bigint_add!(bigint_sub!(x5, x2590, 32), x1, 32);
    let x2594: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2587, 32), x1, 32);
    let x2595: BytePoly_32 = bigint_nondet_inv!(ctx, x2594, x1, 32);
    let x2596: BytePoly_64 = bigint_mul!(x2594, x2595, 64);
    let x2597: BytePoly_34 = bigint_nondet_quot!(ctx, x2596, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x2596, bigint_mul!(x2597, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x2598: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2593, x2595, 64), x1, 32);
    let x2599: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x2598, x2594, 64), x2593, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x2600: BytePoly_34 = bigint_nondet_quot!(ctx, x2599, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x2599, bigint_mul!(x2600, x1, 66), 66),
        276359,
        4,
    )?;
    let x2601: BytePoly_64 = bigint_mul!(x2598, x2598, 64);
    let x2602: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2601, x2587, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x2603: BytePoly_34 = bigint_nondet_quot!(ctx, x2602, x1, 34);
    let x2604: BytePoly_32 = bigint_nondet_rem!(ctx, x2602, x1, 32);
    let x2605: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x2598, x2604, 64),
                        bigint_add!(
                            bigint_sub!(x2590, bigint_mul!(x2598, x2587, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x2606: BytePoly_34 = bigint_nondet_quot!(ctx, x2605, x1, 34);
    let x2607: BytePoly_32 = bigint_nondet_rem!(ctx, x2605, x1, 32);
    let x2608: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2601, bigint_mul!(x2603, x1, 66), 66),
                        x2587,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x2604,
        66
    );
    eqz(ctx, &x2608, 276359, 4)?;
    let x2609: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x2606, x1, 66), x2607, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2598, bigint_sub!(x2587, x2604, 32), 64),
                        x2590,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x2609, 276359, 4)?;
    let x2610: BytePoly_32 = bigint_add!(bigint_sub!(x5, x2607, 32), x1, 32);
    let x2611: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2604, 32), x1, 32);
    let x2612: BytePoly_32 = bigint_nondet_inv!(ctx, x2611, x1, 32);
    let x2613: BytePoly_64 = bigint_mul!(x2611, x2612, 64);
    let x2614: BytePoly_34 = bigint_nondet_quot!(ctx, x2613, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x2613, bigint_mul!(x2614, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x2615: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2610, x2612, 64), x1, 32);
    let x2616: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x2615, x2611, 64), x2610, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x2617: BytePoly_34 = bigint_nondet_quot!(ctx, x2616, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x2616, bigint_mul!(x2617, x1, 66), 66),
        276359,
        4,
    )?;
    let x2618: BytePoly_64 = bigint_mul!(x2615, x2615, 64);
    let x2619: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2618, x2604, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x2620: BytePoly_34 = bigint_nondet_quot!(ctx, x2619, x1, 34);
    let x2621: BytePoly_32 = bigint_nondet_rem!(ctx, x2619, x1, 32);
    let x2622: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x2615, x2621, 64),
                        bigint_add!(
                            bigint_sub!(x2607, bigint_mul!(x2615, x2604, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x2623: BytePoly_34 = bigint_nondet_quot!(ctx, x2622, x1, 34);
    let x2624: BytePoly_32 = bigint_nondet_rem!(ctx, x2622, x1, 32);
    let x2625: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2618, bigint_mul!(x2620, x1, 66), 66),
                        x2604,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x2621,
        66
    );
    eqz(ctx, &x2625, 276359, 4)?;
    let x2626: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x2623, x1, 66), x2624, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2615, bigint_sub!(x2604, x2621, 32), 64),
                        x2607,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x2626, 276359, 4)?;
    let x2627: BytePoly_32 = bigint_add!(bigint_sub!(x5, x2624, 32), x1, 32);
    let x2628: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2621, 32), x1, 32);
    let x2629: BytePoly_32 = bigint_nondet_inv!(ctx, x2628, x1, 32);
    let x2630: BytePoly_64 = bigint_mul!(x2628, x2629, 64);
    let x2631: BytePoly_34 = bigint_nondet_quot!(ctx, x2630, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x2630, bigint_mul!(x2631, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x2632: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2627, x2629, 64), x1, 32);
    let x2633: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x2632, x2628, 64), x2627, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x2634: BytePoly_34 = bigint_nondet_quot!(ctx, x2633, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x2633, bigint_mul!(x2634, x1, 66), 66),
        276359,
        4,
    )?;
    let x2635: BytePoly_64 = bigint_mul!(x2632, x2632, 64);
    let x2636: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2635, x2621, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x2637: BytePoly_34 = bigint_nondet_quot!(ctx, x2636, x1, 34);
    let x2638: BytePoly_32 = bigint_nondet_rem!(ctx, x2636, x1, 32);
    let x2639: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x2632, x2638, 64),
                        bigint_add!(
                            bigint_sub!(x2624, bigint_mul!(x2632, x2621, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x2640: BytePoly_34 = bigint_nondet_quot!(ctx, x2639, x1, 34);
    let x2641: BytePoly_32 = bigint_nondet_rem!(ctx, x2639, x1, 32);
    let x2642: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2635, bigint_mul!(x2637, x1, 66), 66),
                        x2621,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x2638,
        66
    );
    eqz(ctx, &x2642, 276359, 4)?;
    let x2643: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x2640, x1, 66), x2641, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2632, bigint_sub!(x2621, x2638, 32), 64),
                        x2624,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x2643, 276359, 4)?;
    let x2644: BytePoly_32 = bigint_add!(bigint_sub!(x5, x2641, 32), x1, 32);
    let x2645: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2638, 32), x1, 32);
    let x2646: BytePoly_32 = bigint_nondet_inv!(ctx, x2645, x1, 32);
    let x2647: BytePoly_64 = bigint_mul!(x2645, x2646, 64);
    let x2648: BytePoly_34 = bigint_nondet_quot!(ctx, x2647, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x2647, bigint_mul!(x2648, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x2649: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2644, x2646, 64), x1, 32);
    let x2650: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x2649, x2645, 64), x2644, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x2651: BytePoly_34 = bigint_nondet_quot!(ctx, x2650, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x2650, bigint_mul!(x2651, x1, 66), 66),
        276359,
        4,
    )?;
    let x2652: BytePoly_64 = bigint_mul!(x2649, x2649, 64);
    let x2653: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2652, x2638, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x2654: BytePoly_34 = bigint_nondet_quot!(ctx, x2653, x1, 34);
    let x2655: BytePoly_32 = bigint_nondet_rem!(ctx, x2653, x1, 32);
    let x2656: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x2649, x2655, 64),
                        bigint_add!(
                            bigint_sub!(x2641, bigint_mul!(x2649, x2638, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x2657: BytePoly_34 = bigint_nondet_quot!(ctx, x2656, x1, 34);
    let x2658: BytePoly_32 = bigint_nondet_rem!(ctx, x2656, x1, 32);
    let x2659: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2652, bigint_mul!(x2654, x1, 66), 66),
                        x2638,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x2655,
        66
    );
    eqz(ctx, &x2659, 276359, 4)?;
    let x2660: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x2657, x1, 66), x2658, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2649, bigint_sub!(x2638, x2655, 32), 64),
                        x2641,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x2660, 276359, 4)?;
    let x2661: BytePoly_32 = bigint_add!(bigint_sub!(x5, x2658, 32), x1, 32);
    let x2662: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2655, 32), x1, 32);
    let x2663: BytePoly_32 = bigint_nondet_inv!(ctx, x2662, x1, 32);
    let x2664: BytePoly_64 = bigint_mul!(x2662, x2663, 64);
    let x2665: BytePoly_34 = bigint_nondet_quot!(ctx, x2664, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x2664, bigint_mul!(x2665, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x2666: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2661, x2663, 64), x1, 32);
    let x2667: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x2666, x2662, 64), x2661, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x2668: BytePoly_34 = bigint_nondet_quot!(ctx, x2667, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x2667, bigint_mul!(x2668, x1, 66), 66),
        276359,
        4,
    )?;
    let x2669: BytePoly_64 = bigint_mul!(x2666, x2666, 64);
    let x2670: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2669, x2655, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x2671: BytePoly_34 = bigint_nondet_quot!(ctx, x2670, x1, 34);
    let x2672: BytePoly_32 = bigint_nondet_rem!(ctx, x2670, x1, 32);
    let x2673: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x2666, x2672, 64),
                        bigint_add!(
                            bigint_sub!(x2658, bigint_mul!(x2666, x2655, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x2674: BytePoly_34 = bigint_nondet_quot!(ctx, x2673, x1, 34);
    let x2675: BytePoly_32 = bigint_nondet_rem!(ctx, x2673, x1, 32);
    let x2676: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2669, bigint_mul!(x2671, x1, 66), 66),
                        x2655,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x2672,
        66
    );
    eqz(ctx, &x2676, 276359, 4)?;
    let x2677: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x2674, x1, 66), x2675, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2666, bigint_sub!(x2655, x2672, 32), 64),
                        x2658,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x2677, 276359, 4)?;
    let x2678: BytePoly_32 = bigint_add!(bigint_sub!(x5, x2675, 32), x1, 32);
    let x2679: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2672, 32), x1, 32);
    let x2680: BytePoly_32 = bigint_nondet_inv!(ctx, x2679, x1, 32);
    let x2681: BytePoly_64 = bigint_mul!(x2679, x2680, 64);
    let x2682: BytePoly_34 = bigint_nondet_quot!(ctx, x2681, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x2681, bigint_mul!(x2682, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x2683: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2678, x2680, 64), x1, 32);
    let x2684: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x2683, x2679, 64), x2678, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x2685: BytePoly_34 = bigint_nondet_quot!(ctx, x2684, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x2684, bigint_mul!(x2685, x1, 66), 66),
        276359,
        4,
    )?;
    let x2686: BytePoly_64 = bigint_mul!(x2683, x2683, 64);
    let x2687: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2686, x2672, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x2688: BytePoly_34 = bigint_nondet_quot!(ctx, x2687, x1, 34);
    let x2689: BytePoly_32 = bigint_nondet_rem!(ctx, x2687, x1, 32);
    let x2690: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x2683, x2689, 64),
                        bigint_add!(
                            bigint_sub!(x2675, bigint_mul!(x2683, x2672, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x2691: BytePoly_34 = bigint_nondet_quot!(ctx, x2690, x1, 34);
    let x2692: BytePoly_32 = bigint_nondet_rem!(ctx, x2690, x1, 32);
    let x2693: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2686, bigint_mul!(x2688, x1, 66), 66),
                        x2672,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x2689,
        66
    );
    eqz(ctx, &x2693, 276359, 4)?;
    let x2694: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x2691, x1, 66), x2692, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2683, bigint_sub!(x2672, x2689, 32), 64),
                        x2675,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x2694, 276359, 4)?;
    let x2695: BytePoly_32 = bigint_add!(bigint_sub!(x5, x2692, 32), x1, 32);
    let x2696: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2689, 32), x1, 32);
    let x2697: BytePoly_32 = bigint_nondet_inv!(ctx, x2696, x1, 32);
    let x2698: BytePoly_64 = bigint_mul!(x2696, x2697, 64);
    let x2699: BytePoly_34 = bigint_nondet_quot!(ctx, x2698, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x2698, bigint_mul!(x2699, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x2700: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2695, x2697, 64), x1, 32);
    let x2701: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x2700, x2696, 64), x2695, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x2702: BytePoly_34 = bigint_nondet_quot!(ctx, x2701, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x2701, bigint_mul!(x2702, x1, 66), 66),
        276359,
        4,
    )?;
    let x2703: BytePoly_64 = bigint_mul!(x2700, x2700, 64);
    let x2704: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2703, x2689, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x2705: BytePoly_34 = bigint_nondet_quot!(ctx, x2704, x1, 34);
    let x2706: BytePoly_32 = bigint_nondet_rem!(ctx, x2704, x1, 32);
    let x2707: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x2700, x2706, 64),
                        bigint_add!(
                            bigint_sub!(x2692, bigint_mul!(x2700, x2689, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x2708: BytePoly_34 = bigint_nondet_quot!(ctx, x2707, x1, 34);
    let x2709: BytePoly_32 = bigint_nondet_rem!(ctx, x2707, x1, 32);
    let x2710: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2703, bigint_mul!(x2705, x1, 66), 66),
                        x2689,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x2706,
        66
    );
    eqz(ctx, &x2710, 276359, 4)?;
    let x2711: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x2708, x1, 66), x2709, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2700, bigint_sub!(x2689, x2706, 32), 64),
                        x2692,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x2711, 276359, 4)?;
    let x2712: BytePoly_32 = bigint_add!(bigint_sub!(x5, x2709, 32), x1, 32);
    let x2713: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2706, 32), x1, 32);
    let x2714: BytePoly_32 = bigint_nondet_inv!(ctx, x2713, x1, 32);
    let x2715: BytePoly_64 = bigint_mul!(x2713, x2714, 64);
    let x2716: BytePoly_34 = bigint_nondet_quot!(ctx, x2715, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x2715, bigint_mul!(x2716, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x2717: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2712, x2714, 64), x1, 32);
    let x2718: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x2717, x2713, 64), x2712, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x2719: BytePoly_34 = bigint_nondet_quot!(ctx, x2718, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x2718, bigint_mul!(x2719, x1, 66), 66),
        276359,
        4,
    )?;
    let x2720: BytePoly_64 = bigint_mul!(x2717, x2717, 64);
    let x2721: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2720, x2706, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x2722: BytePoly_34 = bigint_nondet_quot!(ctx, x2721, x1, 34);
    let x2723: BytePoly_32 = bigint_nondet_rem!(ctx, x2721, x1, 32);
    let x2724: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x2717, x2723, 64),
                        bigint_add!(
                            bigint_sub!(x2709, bigint_mul!(x2717, x2706, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x2725: BytePoly_34 = bigint_nondet_quot!(ctx, x2724, x1, 34);
    let x2726: BytePoly_32 = bigint_nondet_rem!(ctx, x2724, x1, 32);
    let x2727: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2720, bigint_mul!(x2722, x1, 66), 66),
                        x2706,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x2723,
        66
    );
    eqz(ctx, &x2727, 276359, 4)?;
    let x2728: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x2725, x1, 66), x2726, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2717, bigint_sub!(x2706, x2723, 32), 64),
                        x2709,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x2728, 276359, 4)?;
    let x2729: BytePoly_32 = bigint_add!(bigint_sub!(x5, x2726, 32), x1, 32);
    let x2730: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2723, 32), x1, 32);
    let x2731: BytePoly_32 = bigint_nondet_inv!(ctx, x2730, x1, 32);
    let x2732: BytePoly_64 = bigint_mul!(x2730, x2731, 64);
    let x2733: BytePoly_34 = bigint_nondet_quot!(ctx, x2732, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x2732, bigint_mul!(x2733, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x2734: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2729, x2731, 64), x1, 32);
    let x2735: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x2734, x2730, 64), x2729, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x2736: BytePoly_34 = bigint_nondet_quot!(ctx, x2735, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x2735, bigint_mul!(x2736, x1, 66), 66),
        276359,
        4,
    )?;
    let x2737: BytePoly_64 = bigint_mul!(x2734, x2734, 64);
    let x2738: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2737, x2723, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x2739: BytePoly_34 = bigint_nondet_quot!(ctx, x2738, x1, 34);
    let x2740: BytePoly_32 = bigint_nondet_rem!(ctx, x2738, x1, 32);
    let x2741: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x2734, x2740, 64),
                        bigint_add!(
                            bigint_sub!(x2726, bigint_mul!(x2734, x2723, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x2742: BytePoly_34 = bigint_nondet_quot!(ctx, x2741, x1, 34);
    let x2743: BytePoly_32 = bigint_nondet_rem!(ctx, x2741, x1, 32);
    let x2744: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2737, bigint_mul!(x2739, x1, 66), 66),
                        x2723,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x2740,
        66
    );
    eqz(ctx, &x2744, 276359, 4)?;
    let x2745: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x2742, x1, 66), x2743, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2734, bigint_sub!(x2723, x2740, 32), 64),
                        x2726,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x2745, 276359, 4)?;
    let x2746: BytePoly_32 = bigint_add!(bigint_sub!(x5, x2743, 32), x1, 32);
    let x2747: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2740, 32), x1, 32);
    let x2748: BytePoly_32 = bigint_nondet_inv!(ctx, x2747, x1, 32);
    let x2749: BytePoly_64 = bigint_mul!(x2747, x2748, 64);
    let x2750: BytePoly_34 = bigint_nondet_quot!(ctx, x2749, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x2749, bigint_mul!(x2750, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x2751: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2746, x2748, 64), x1, 32);
    let x2752: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x2751, x2747, 64), x2746, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x2753: BytePoly_34 = bigint_nondet_quot!(ctx, x2752, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x2752, bigint_mul!(x2753, x1, 66), 66),
        276359,
        4,
    )?;
    let x2754: BytePoly_64 = bigint_mul!(x2751, x2751, 64);
    let x2755: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2754, x2740, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x2756: BytePoly_34 = bigint_nondet_quot!(ctx, x2755, x1, 34);
    let x2757: BytePoly_32 = bigint_nondet_rem!(ctx, x2755, x1, 32);
    let x2758: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x2751, x2757, 64),
                        bigint_add!(
                            bigint_sub!(x2743, bigint_mul!(x2751, x2740, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x2759: BytePoly_34 = bigint_nondet_quot!(ctx, x2758, x1, 34);
    let x2760: BytePoly_32 = bigint_nondet_rem!(ctx, x2758, x1, 32);
    let x2761: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2754, bigint_mul!(x2756, x1, 66), 66),
                        x2740,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x2757,
        66
    );
    eqz(ctx, &x2761, 276359, 4)?;
    let x2762: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x2759, x1, 66), x2760, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2751, bigint_sub!(x2740, x2757, 32), 64),
                        x2743,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x2762, 276359, 4)?;
    let x2763: BytePoly_32 = bigint_add!(bigint_sub!(x5, x2760, 32), x1, 32);
    let x2764: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2757, 32), x1, 32);
    let x2765: BytePoly_32 = bigint_nondet_inv!(ctx, x2764, x1, 32);
    let x2766: BytePoly_64 = bigint_mul!(x2764, x2765, 64);
    let x2767: BytePoly_34 = bigint_nondet_quot!(ctx, x2766, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x2766, bigint_mul!(x2767, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x2768: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2763, x2765, 64), x1, 32);
    let x2769: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x2768, x2764, 64), x2763, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x2770: BytePoly_34 = bigint_nondet_quot!(ctx, x2769, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x2769, bigint_mul!(x2770, x1, 66), 66),
        276359,
        4,
    )?;
    let x2771: BytePoly_64 = bigint_mul!(x2768, x2768, 64);
    let x2772: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2771, x2757, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x2773: BytePoly_34 = bigint_nondet_quot!(ctx, x2772, x1, 34);
    let x2774: BytePoly_32 = bigint_nondet_rem!(ctx, x2772, x1, 32);
    let x2775: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x2768, x2774, 64),
                        bigint_add!(
                            bigint_sub!(x2760, bigint_mul!(x2768, x2757, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x2776: BytePoly_34 = bigint_nondet_quot!(ctx, x2775, x1, 34);
    let x2777: BytePoly_32 = bigint_nondet_rem!(ctx, x2775, x1, 32);
    let x2778: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2771, bigint_mul!(x2773, x1, 66), 66),
                        x2757,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x2774,
        66
    );
    eqz(ctx, &x2778, 276359, 4)?;
    let x2779: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x2776, x1, 66), x2777, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2768, bigint_sub!(x2757, x2774, 32), 64),
                        x2760,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x2779, 276359, 4)?;
    let x2780: BytePoly_32 = bigint_add!(bigint_sub!(x5, x2777, 32), x1, 32);
    let x2781: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2774, 32), x1, 32);
    let x2782: BytePoly_32 = bigint_nondet_inv!(ctx, x2781, x1, 32);
    let x2783: BytePoly_64 = bigint_mul!(x2781, x2782, 64);
    let x2784: BytePoly_34 = bigint_nondet_quot!(ctx, x2783, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x2783, bigint_mul!(x2784, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x2785: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2780, x2782, 64), x1, 32);
    let x2786: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x2785, x2781, 64), x2780, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x2787: BytePoly_34 = bigint_nondet_quot!(ctx, x2786, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x2786, bigint_mul!(x2787, x1, 66), 66),
        276359,
        4,
    )?;
    let x2788: BytePoly_64 = bigint_mul!(x2785, x2785, 64);
    let x2789: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2788, x2774, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x2790: BytePoly_34 = bigint_nondet_quot!(ctx, x2789, x1, 34);
    let x2791: BytePoly_32 = bigint_nondet_rem!(ctx, x2789, x1, 32);
    let x2792: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x2785, x2791, 64),
                        bigint_add!(
                            bigint_sub!(x2777, bigint_mul!(x2785, x2774, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x2793: BytePoly_34 = bigint_nondet_quot!(ctx, x2792, x1, 34);
    let x2794: BytePoly_32 = bigint_nondet_rem!(ctx, x2792, x1, 32);
    let x2795: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2788, bigint_mul!(x2790, x1, 66), 66),
                        x2774,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x2791,
        66
    );
    eqz(ctx, &x2795, 276359, 4)?;
    let x2796: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x2793, x1, 66), x2794, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2785, bigint_sub!(x2774, x2791, 32), 64),
                        x2777,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x2796, 276359, 4)?;
    let x2797: BytePoly_32 = bigint_add!(bigint_sub!(x5, x2794, 32), x1, 32);
    let x2798: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2791, 32), x1, 32);
    let x2799: BytePoly_32 = bigint_nondet_inv!(ctx, x2798, x1, 32);
    let x2800: BytePoly_64 = bigint_mul!(x2798, x2799, 64);
    let x2801: BytePoly_34 = bigint_nondet_quot!(ctx, x2800, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x2800, bigint_mul!(x2801, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x2802: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2797, x2799, 64), x1, 32);
    let x2803: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x2802, x2798, 64), x2797, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x2804: BytePoly_34 = bigint_nondet_quot!(ctx, x2803, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x2803, bigint_mul!(x2804, x1, 66), 66),
        276359,
        4,
    )?;
    let x2805: BytePoly_64 = bigint_mul!(x2802, x2802, 64);
    let x2806: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2805, x2791, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x2807: BytePoly_34 = bigint_nondet_quot!(ctx, x2806, x1, 34);
    let x2808: BytePoly_32 = bigint_nondet_rem!(ctx, x2806, x1, 32);
    let x2809: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x2802, x2808, 64),
                        bigint_add!(
                            bigint_sub!(x2794, bigint_mul!(x2802, x2791, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x2810: BytePoly_34 = bigint_nondet_quot!(ctx, x2809, x1, 34);
    let x2811: BytePoly_32 = bigint_nondet_rem!(ctx, x2809, x1, 32);
    let x2812: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2805, bigint_mul!(x2807, x1, 66), 66),
                        x2791,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x2808,
        66
    );
    eqz(ctx, &x2812, 276359, 4)?;
    let x2813: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x2810, x1, 66), x2811, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2802, bigint_sub!(x2791, x2808, 32), 64),
                        x2794,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x2813, 276359, 4)?;
    let x2814: BytePoly_32 = bigint_add!(bigint_sub!(x5, x2811, 32), x1, 32);
    let x2815: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2808, 32), x1, 32);
    let x2816: BytePoly_32 = bigint_nondet_inv!(ctx, x2815, x1, 32);
    let x2817: BytePoly_64 = bigint_mul!(x2815, x2816, 64);
    let x2818: BytePoly_34 = bigint_nondet_quot!(ctx, x2817, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x2817, bigint_mul!(x2818, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x2819: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2814, x2816, 64), x1, 32);
    let x2820: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x2819, x2815, 64), x2814, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x2821: BytePoly_34 = bigint_nondet_quot!(ctx, x2820, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x2820, bigint_mul!(x2821, x1, 66), 66),
        276359,
        4,
    )?;
    let x2822: BytePoly_64 = bigint_mul!(x2819, x2819, 64);
    let x2823: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2822, x2808, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x2824: BytePoly_34 = bigint_nondet_quot!(ctx, x2823, x1, 34);
    let x2825: BytePoly_32 = bigint_nondet_rem!(ctx, x2823, x1, 32);
    let x2826: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x2819, x2825, 64),
                        bigint_add!(
                            bigint_sub!(x2811, bigint_mul!(x2819, x2808, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x2827: BytePoly_34 = bigint_nondet_quot!(ctx, x2826, x1, 34);
    let x2828: BytePoly_32 = bigint_nondet_rem!(ctx, x2826, x1, 32);
    let x2829: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2822, bigint_mul!(x2824, x1, 66), 66),
                        x2808,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x2825,
        66
    );
    eqz(ctx, &x2829, 276359, 4)?;
    let x2830: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x2827, x1, 66), x2828, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2819, bigint_sub!(x2808, x2825, 32), 64),
                        x2811,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x2830, 276359, 4)?;
    let x2831: BytePoly_32 = bigint_add!(bigint_sub!(x5, x2828, 32), x1, 32);
    let x2832: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2825, 32), x1, 32);
    let x2833: BytePoly_32 = bigint_nondet_inv!(ctx, x2832, x1, 32);
    let x2834: BytePoly_64 = bigint_mul!(x2832, x2833, 64);
    let x2835: BytePoly_34 = bigint_nondet_quot!(ctx, x2834, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x2834, bigint_mul!(x2835, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x2836: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2831, x2833, 64), x1, 32);
    let x2837: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x2836, x2832, 64), x2831, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x2838: BytePoly_34 = bigint_nondet_quot!(ctx, x2837, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x2837, bigint_mul!(x2838, x1, 66), 66),
        276359,
        4,
    )?;
    let x2839: BytePoly_64 = bigint_mul!(x2836, x2836, 64);
    let x2840: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2839, x2825, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x2841: BytePoly_34 = bigint_nondet_quot!(ctx, x2840, x1, 34);
    let x2842: BytePoly_32 = bigint_nondet_rem!(ctx, x2840, x1, 32);
    let x2843: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x2836, x2842, 64),
                        bigint_add!(
                            bigint_sub!(x2828, bigint_mul!(x2836, x2825, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x2844: BytePoly_34 = bigint_nondet_quot!(ctx, x2843, x1, 34);
    let x2845: BytePoly_32 = bigint_nondet_rem!(ctx, x2843, x1, 32);
    let x2846: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2839, bigint_mul!(x2841, x1, 66), 66),
                        x2825,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x2842,
        66
    );
    eqz(ctx, &x2846, 276359, 4)?;
    let x2847: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x2844, x1, 66), x2845, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2836, bigint_sub!(x2825, x2842, 32), 64),
                        x2828,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x2847, 276359, 4)?;
    let x2848: BytePoly_32 = bigint_add!(bigint_sub!(x5, x2845, 32), x1, 32);
    let x2849: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2842, 32), x1, 32);
    let x2850: BytePoly_32 = bigint_nondet_inv!(ctx, x2849, x1, 32);
    let x2851: BytePoly_64 = bigint_mul!(x2849, x2850, 64);
    let x2852: BytePoly_34 = bigint_nondet_quot!(ctx, x2851, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x2851, bigint_mul!(x2852, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x2853: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2848, x2850, 64), x1, 32);
    let x2854: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x2853, x2849, 64), x2848, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x2855: BytePoly_34 = bigint_nondet_quot!(ctx, x2854, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x2854, bigint_mul!(x2855, x1, 66), 66),
        276359,
        4,
    )?;
    let x2856: BytePoly_64 = bigint_mul!(x2853, x2853, 64);
    let x2857: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2856, x2842, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x2858: BytePoly_34 = bigint_nondet_quot!(ctx, x2857, x1, 34);
    let x2859: BytePoly_32 = bigint_nondet_rem!(ctx, x2857, x1, 32);
    let x2860: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x2853, x2859, 64),
                        bigint_add!(
                            bigint_sub!(x2845, bigint_mul!(x2853, x2842, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x2861: BytePoly_34 = bigint_nondet_quot!(ctx, x2860, x1, 34);
    let x2862: BytePoly_32 = bigint_nondet_rem!(ctx, x2860, x1, 32);
    let x2863: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2856, bigint_mul!(x2858, x1, 66), 66),
                        x2842,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x2859,
        66
    );
    eqz(ctx, &x2863, 276359, 4)?;
    let x2864: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x2861, x1, 66), x2862, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2853, bigint_sub!(x2842, x2859, 32), 64),
                        x2845,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x2864, 276359, 4)?;
    let x2865: BytePoly_32 = bigint_add!(bigint_sub!(x5, x2862, 32), x1, 32);
    let x2866: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2859, 32), x1, 32);
    let x2867: BytePoly_32 = bigint_nondet_inv!(ctx, x2866, x1, 32);
    let x2868: BytePoly_64 = bigint_mul!(x2866, x2867, 64);
    let x2869: BytePoly_34 = bigint_nondet_quot!(ctx, x2868, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x2868, bigint_mul!(x2869, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x2870: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2865, x2867, 64), x1, 32);
    let x2871: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x2870, x2866, 64), x2865, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x2872: BytePoly_34 = bigint_nondet_quot!(ctx, x2871, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x2871, bigint_mul!(x2872, x1, 66), 66),
        276359,
        4,
    )?;
    let x2873: BytePoly_64 = bigint_mul!(x2870, x2870, 64);
    let x2874: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2873, x2859, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x2875: BytePoly_34 = bigint_nondet_quot!(ctx, x2874, x1, 34);
    let x2876: BytePoly_32 = bigint_nondet_rem!(ctx, x2874, x1, 32);
    let x2877: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x2870, x2876, 64),
                        bigint_add!(
                            bigint_sub!(x2862, bigint_mul!(x2870, x2859, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x2878: BytePoly_34 = bigint_nondet_quot!(ctx, x2877, x1, 34);
    let x2879: BytePoly_32 = bigint_nondet_rem!(ctx, x2877, x1, 32);
    let x2880: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2873, bigint_mul!(x2875, x1, 66), 66),
                        x2859,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x2876,
        66
    );
    eqz(ctx, &x2880, 276359, 4)?;
    let x2881: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x2878, x1, 66), x2879, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2870, bigint_sub!(x2859, x2876, 32), 64),
                        x2862,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x2881, 276359, 4)?;
    let x2882: BytePoly_32 = bigint_add!(bigint_sub!(x5, x2879, 32), x1, 32);
    let x2883: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2876, 32), x1, 32);
    let x2884: BytePoly_32 = bigint_nondet_inv!(ctx, x2883, x1, 32);
    let x2885: BytePoly_64 = bigint_mul!(x2883, x2884, 64);
    let x2886: BytePoly_34 = bigint_nondet_quot!(ctx, x2885, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x2885, bigint_mul!(x2886, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x2887: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2882, x2884, 64), x1, 32);
    let x2888: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x2887, x2883, 64), x2882, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x2889: BytePoly_34 = bigint_nondet_quot!(ctx, x2888, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x2888, bigint_mul!(x2889, x1, 66), 66),
        276359,
        4,
    )?;
    let x2890: BytePoly_64 = bigint_mul!(x2887, x2887, 64);
    let x2891: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2890, x2876, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x2892: BytePoly_34 = bigint_nondet_quot!(ctx, x2891, x1, 34);
    let x2893: BytePoly_32 = bigint_nondet_rem!(ctx, x2891, x1, 32);
    let x2894: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x2887, x2893, 64),
                        bigint_add!(
                            bigint_sub!(x2879, bigint_mul!(x2887, x2876, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x2895: BytePoly_34 = bigint_nondet_quot!(ctx, x2894, x1, 34);
    let x2896: BytePoly_32 = bigint_nondet_rem!(ctx, x2894, x1, 32);
    let x2897: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2890, bigint_mul!(x2892, x1, 66), 66),
                        x2876,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x2893,
        66
    );
    eqz(ctx, &x2897, 276359, 4)?;
    let x2898: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x2895, x1, 66), x2896, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2887, bigint_sub!(x2876, x2893, 32), 64),
                        x2879,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x2898, 276359, 4)?;
    let x2899: BytePoly_32 = bigint_add!(bigint_sub!(x5, x2896, 32), x1, 32);
    let x2900: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2893, 32), x1, 32);
    let x2901: BytePoly_32 = bigint_nondet_inv!(ctx, x2900, x1, 32);
    let x2902: BytePoly_64 = bigint_mul!(x2900, x2901, 64);
    let x2903: BytePoly_34 = bigint_nondet_quot!(ctx, x2902, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x2902, bigint_mul!(x2903, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x2904: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2899, x2901, 64), x1, 32);
    let x2905: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x2904, x2900, 64), x2899, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x2906: BytePoly_34 = bigint_nondet_quot!(ctx, x2905, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x2905, bigint_mul!(x2906, x1, 66), 66),
        276359,
        4,
    )?;
    let x2907: BytePoly_64 = bigint_mul!(x2904, x2904, 64);
    let x2908: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2907, x2893, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x2909: BytePoly_34 = bigint_nondet_quot!(ctx, x2908, x1, 34);
    let x2910: BytePoly_32 = bigint_nondet_rem!(ctx, x2908, x1, 32);
    let x2911: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x2904, x2910, 64),
                        bigint_add!(
                            bigint_sub!(x2896, bigint_mul!(x2904, x2893, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x2912: BytePoly_34 = bigint_nondet_quot!(ctx, x2911, x1, 34);
    let x2913: BytePoly_32 = bigint_nondet_rem!(ctx, x2911, x1, 32);
    let x2914: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2907, bigint_mul!(x2909, x1, 66), 66),
                        x2893,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x2910,
        66
    );
    eqz(ctx, &x2914, 276359, 4)?;
    let x2915: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x2912, x1, 66), x2913, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2904, bigint_sub!(x2893, x2910, 32), 64),
                        x2896,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x2915, 276359, 4)?;
    let x2916: BytePoly_32 = bigint_add!(bigint_sub!(x5, x2913, 32), x1, 32);
    let x2917: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2910, 32), x1, 32);
    let x2918: BytePoly_32 = bigint_nondet_inv!(ctx, x2917, x1, 32);
    let x2919: BytePoly_64 = bigint_mul!(x2917, x2918, 64);
    let x2920: BytePoly_34 = bigint_nondet_quot!(ctx, x2919, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x2919, bigint_mul!(x2920, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x2921: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2916, x2918, 64), x1, 32);
    let x2922: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x2921, x2917, 64), x2916, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x2923: BytePoly_34 = bigint_nondet_quot!(ctx, x2922, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x2922, bigint_mul!(x2923, x1, 66), 66),
        276359,
        4,
    )?;
    let x2924: BytePoly_64 = bigint_mul!(x2921, x2921, 64);
    let x2925: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2924, x2910, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x2926: BytePoly_34 = bigint_nondet_quot!(ctx, x2925, x1, 34);
    let x2927: BytePoly_32 = bigint_nondet_rem!(ctx, x2925, x1, 32);
    let x2928: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x2921, x2927, 64),
                        bigint_add!(
                            bigint_sub!(x2913, bigint_mul!(x2921, x2910, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x2929: BytePoly_34 = bigint_nondet_quot!(ctx, x2928, x1, 34);
    let x2930: BytePoly_32 = bigint_nondet_rem!(ctx, x2928, x1, 32);
    let x2931: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2924, bigint_mul!(x2926, x1, 66), 66),
                        x2910,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x2927,
        66
    );
    eqz(ctx, &x2931, 276359, 4)?;
    let x2932: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x2929, x1, 66), x2930, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2921, bigint_sub!(x2910, x2927, 32), 64),
                        x2913,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x2932, 276359, 4)?;
    let x2933: BytePoly_32 = bigint_add!(bigint_sub!(x5, x2930, 32), x1, 32);
    let x2934: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2927, 32), x1, 32);
    let x2935: BytePoly_32 = bigint_nondet_inv!(ctx, x2934, x1, 32);
    let x2936: BytePoly_64 = bigint_mul!(x2934, x2935, 64);
    let x2937: BytePoly_34 = bigint_nondet_quot!(ctx, x2936, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x2936, bigint_mul!(x2937, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x2938: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2933, x2935, 64), x1, 32);
    let x2939: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x2938, x2934, 64), x2933, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x2940: BytePoly_34 = bigint_nondet_quot!(ctx, x2939, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x2939, bigint_mul!(x2940, x1, 66), 66),
        276359,
        4,
    )?;
    let x2941: BytePoly_64 = bigint_mul!(x2938, x2938, 64);
    let x2942: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2941, x2927, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x2943: BytePoly_34 = bigint_nondet_quot!(ctx, x2942, x1, 34);
    let x2944: BytePoly_32 = bigint_nondet_rem!(ctx, x2942, x1, 32);
    let x2945: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x2938, x2944, 64),
                        bigint_add!(
                            bigint_sub!(x2930, bigint_mul!(x2938, x2927, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x2946: BytePoly_34 = bigint_nondet_quot!(ctx, x2945, x1, 34);
    let x2947: BytePoly_32 = bigint_nondet_rem!(ctx, x2945, x1, 32);
    let x2948: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2941, bigint_mul!(x2943, x1, 66), 66),
                        x2927,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x2944,
        66
    );
    eqz(ctx, &x2948, 276359, 4)?;
    let x2949: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x2946, x1, 66), x2947, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2938, bigint_sub!(x2927, x2944, 32), 64),
                        x2930,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x2949, 276359, 4)?;
    let x2950: BytePoly_32 = bigint_add!(bigint_sub!(x5, x2947, 32), x1, 32);
    let x2951: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2944, 32), x1, 32);
    let x2952: BytePoly_32 = bigint_nondet_inv!(ctx, x2951, x1, 32);
    let x2953: BytePoly_64 = bigint_mul!(x2951, x2952, 64);
    let x2954: BytePoly_34 = bigint_nondet_quot!(ctx, x2953, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x2953, bigint_mul!(x2954, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x2955: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2950, x2952, 64), x1, 32);
    let x2956: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x2955, x2951, 64), x2950, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x2957: BytePoly_34 = bigint_nondet_quot!(ctx, x2956, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x2956, bigint_mul!(x2957, x1, 66), 66),
        276359,
        4,
    )?;
    let x2958: BytePoly_64 = bigint_mul!(x2955, x2955, 64);
    let x2959: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2958, x2944, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x2960: BytePoly_34 = bigint_nondet_quot!(ctx, x2959, x1, 34);
    let x2961: BytePoly_32 = bigint_nondet_rem!(ctx, x2959, x1, 32);
    let x2962: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x2955, x2961, 64),
                        bigint_add!(
                            bigint_sub!(x2947, bigint_mul!(x2955, x2944, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x2963: BytePoly_34 = bigint_nondet_quot!(ctx, x2962, x1, 34);
    let x2964: BytePoly_32 = bigint_nondet_rem!(ctx, x2962, x1, 32);
    let x2965: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2958, bigint_mul!(x2960, x1, 66), 66),
                        x2944,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x2961,
        66
    );
    eqz(ctx, &x2965, 276359, 4)?;
    let x2966: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x2963, x1, 66), x2964, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2955, bigint_sub!(x2944, x2961, 32), 64),
                        x2947,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x2966, 276359, 4)?;
    let x2967: BytePoly_32 = bigint_add!(bigint_sub!(x5, x2964, 32), x1, 32);
    let x2968: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2961, 32), x1, 32);
    let x2969: BytePoly_32 = bigint_nondet_inv!(ctx, x2968, x1, 32);
    let x2970: BytePoly_64 = bigint_mul!(x2968, x2969, 64);
    let x2971: BytePoly_34 = bigint_nondet_quot!(ctx, x2970, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x2970, bigint_mul!(x2971, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x2972: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2967, x2969, 64), x1, 32);
    let x2973: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x2972, x2968, 64), x2967, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x2974: BytePoly_34 = bigint_nondet_quot!(ctx, x2973, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x2973, bigint_mul!(x2974, x1, 66), 66),
        276359,
        4,
    )?;
    let x2975: BytePoly_64 = bigint_mul!(x2972, x2972, 64);
    let x2976: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2975, x2961, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x2977: BytePoly_34 = bigint_nondet_quot!(ctx, x2976, x1, 34);
    let x2978: BytePoly_32 = bigint_nondet_rem!(ctx, x2976, x1, 32);
    let x2979: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x2972, x2978, 64),
                        bigint_add!(
                            bigint_sub!(x2964, bigint_mul!(x2972, x2961, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x2980: BytePoly_34 = bigint_nondet_quot!(ctx, x2979, x1, 34);
    let x2981: BytePoly_32 = bigint_nondet_rem!(ctx, x2979, x1, 32);
    let x2982: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2975, bigint_mul!(x2977, x1, 66), 66),
                        x2961,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x2978,
        66
    );
    eqz(ctx, &x2982, 276359, 4)?;
    let x2983: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x2980, x1, 66), x2981, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2972, bigint_sub!(x2961, x2978, 32), 64),
                        x2964,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x2983, 276359, 4)?;
    let x2984: BytePoly_32 = bigint_add!(bigint_sub!(x5, x2981, 32), x1, 32);
    let x2985: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2978, 32), x1, 32);
    let x2986: BytePoly_32 = bigint_nondet_inv!(ctx, x2985, x1, 32);
    let x2987: BytePoly_64 = bigint_mul!(x2985, x2986, 64);
    let x2988: BytePoly_34 = bigint_nondet_quot!(ctx, x2987, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x2987, bigint_mul!(x2988, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x2989: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2984, x2986, 64), x1, 32);
    let x2990: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x2989, x2985, 64), x2984, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x2991: BytePoly_34 = bigint_nondet_quot!(ctx, x2990, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x2990, bigint_mul!(x2991, x1, 66), 66),
        276359,
        4,
    )?;
    let x2992: BytePoly_64 = bigint_mul!(x2989, x2989, 64);
    let x2993: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2992, x2978, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x2994: BytePoly_34 = bigint_nondet_quot!(ctx, x2993, x1, 34);
    let x2995: BytePoly_32 = bigint_nondet_rem!(ctx, x2993, x1, 32);
    let x2996: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x2989, x2995, 64),
                        bigint_add!(
                            bigint_sub!(x2981, bigint_mul!(x2989, x2978, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x2997: BytePoly_34 = bigint_nondet_quot!(ctx, x2996, x1, 34);
    let x2998: BytePoly_32 = bigint_nondet_rem!(ctx, x2996, x1, 32);
    let x2999: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2992, bigint_mul!(x2994, x1, 66), 66),
                        x2978,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x2995,
        66
    );
    eqz(ctx, &x2999, 276359, 4)?;
    let x3000: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x2997, x1, 66), x2998, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2989, bigint_sub!(x2978, x2995, 32), 64),
                        x2981,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x3000, 276359, 4)?;
    let x3001: BytePoly_32 = bigint_add!(bigint_sub!(x5, x2998, 32), x1, 32);
    let x3002: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2995, 32), x1, 32);
    let x3003: BytePoly_32 = bigint_nondet_inv!(ctx, x3002, x1, 32);
    let x3004: BytePoly_64 = bigint_mul!(x3002, x3003, 64);
    let x3005: BytePoly_34 = bigint_nondet_quot!(ctx, x3004, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x3004, bigint_mul!(x3005, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x3006: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3001, x3003, 64), x1, 32);
    let x3007: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x3006, x3002, 64), x3001, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x3008: BytePoly_34 = bigint_nondet_quot!(ctx, x3007, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x3007, bigint_mul!(x3008, x1, 66), 66),
        276359,
        4,
    )?;
    let x3009: BytePoly_64 = bigint_mul!(x3006, x3006, 64);
    let x3010: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3009, x2995, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x3011: BytePoly_34 = bigint_nondet_quot!(ctx, x3010, x1, 34);
    let x3012: BytePoly_32 = bigint_nondet_rem!(ctx, x3010, x1, 32);
    let x3013: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x3006, x3012, 64),
                        bigint_add!(
                            bigint_sub!(x2998, bigint_mul!(x3006, x2995, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x3014: BytePoly_34 = bigint_nondet_quot!(ctx, x3013, x1, 34);
    let x3015: BytePoly_32 = bigint_nondet_rem!(ctx, x3013, x1, 32);
    let x3016: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3009, bigint_mul!(x3011, x1, 66), 66),
                        x2995,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x3012,
        66
    );
    eqz(ctx, &x3016, 276359, 4)?;
    let x3017: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x3014, x1, 66), x3015, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3006, bigint_sub!(x2995, x3012, 32), 64),
                        x2998,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x3017, 276359, 4)?;
    let x3018: BytePoly_32 = bigint_add!(bigint_sub!(x5, x3015, 32), x1, 32);
    let x3019: BytePoly_32 = bigint_add!(bigint_sub!(x4, x3012, 32), x1, 32);
    let x3020: BytePoly_32 = bigint_nondet_inv!(ctx, x3019, x1, 32);
    let x3021: BytePoly_64 = bigint_mul!(x3019, x3020, 64);
    let x3022: BytePoly_34 = bigint_nondet_quot!(ctx, x3021, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x3021, bigint_mul!(x3022, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x3023: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3018, x3020, 64), x1, 32);
    let x3024: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x3023, x3019, 64), x3018, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x3025: BytePoly_34 = bigint_nondet_quot!(ctx, x3024, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x3024, bigint_mul!(x3025, x1, 66), 66),
        276359,
        4,
    )?;
    let x3026: BytePoly_64 = bigint_mul!(x3023, x3023, 64);
    let x3027: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3026, x3012, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x3028: BytePoly_34 = bigint_nondet_quot!(ctx, x3027, x1, 34);
    let x3029: BytePoly_32 = bigint_nondet_rem!(ctx, x3027, x1, 32);
    let x3030: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x3023, x3029, 64),
                        bigint_add!(
                            bigint_sub!(x3015, bigint_mul!(x3023, x3012, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x3031: BytePoly_34 = bigint_nondet_quot!(ctx, x3030, x1, 34);
    let x3032: BytePoly_32 = bigint_nondet_rem!(ctx, x3030, x1, 32);
    let x3033: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3026, bigint_mul!(x3028, x1, 66), 66),
                        x3012,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x3029,
        66
    );
    eqz(ctx, &x3033, 276359, 4)?;
    let x3034: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x3031, x1, 66), x3032, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3023, bigint_sub!(x3012, x3029, 32), 64),
                        x3015,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x3034, 276359, 4)?;
    let x3035: BytePoly_32 = bigint_add!(bigint_sub!(x5, x3032, 32), x1, 32);
    let x3036: BytePoly_32 = bigint_add!(bigint_sub!(x4, x3029, 32), x1, 32);
    let x3037: BytePoly_32 = bigint_nondet_inv!(ctx, x3036, x1, 32);
    let x3038: BytePoly_64 = bigint_mul!(x3036, x3037, 64);
    let x3039: BytePoly_34 = bigint_nondet_quot!(ctx, x3038, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x3038, bigint_mul!(x3039, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x3040: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3035, x3037, 64), x1, 32);
    let x3041: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x3040, x3036, 64), x3035, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x3042: BytePoly_34 = bigint_nondet_quot!(ctx, x3041, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x3041, bigint_mul!(x3042, x1, 66), 66),
        276359,
        4,
    )?;
    let x3043: BytePoly_64 = bigint_mul!(x3040, x3040, 64);
    let x3044: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3043, x3029, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x3045: BytePoly_34 = bigint_nondet_quot!(ctx, x3044, x1, 34);
    let x3046: BytePoly_32 = bigint_nondet_rem!(ctx, x3044, x1, 32);
    let x3047: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x3040, x3046, 64),
                        bigint_add!(
                            bigint_sub!(x3032, bigint_mul!(x3040, x3029, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x3048: BytePoly_34 = bigint_nondet_quot!(ctx, x3047, x1, 34);
    let x3049: BytePoly_32 = bigint_nondet_rem!(ctx, x3047, x1, 32);
    let x3050: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3043, bigint_mul!(x3045, x1, 66), 66),
                        x3029,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x3046,
        66
    );
    eqz(ctx, &x3050, 276359, 4)?;
    let x3051: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x3048, x1, 66), x3049, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3040, bigint_sub!(x3029, x3046, 32), 64),
                        x3032,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x3051, 276359, 4)?;
    let x3052: BytePoly_32 = bigint_add!(bigint_sub!(x5, x3049, 32), x1, 32);
    let x3053: BytePoly_32 = bigint_add!(bigint_sub!(x4, x3046, 32), x1, 32);
    let x3054: BytePoly_32 = bigint_nondet_inv!(ctx, x3053, x1, 32);
    let x3055: BytePoly_64 = bigint_mul!(x3053, x3054, 64);
    let x3056: BytePoly_34 = bigint_nondet_quot!(ctx, x3055, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x3055, bigint_mul!(x3056, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x3057: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3052, x3054, 64), x1, 32);
    let x3058: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x3057, x3053, 64), x3052, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x3059: BytePoly_34 = bigint_nondet_quot!(ctx, x3058, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x3058, bigint_mul!(x3059, x1, 66), 66),
        276359,
        4,
    )?;
    let x3060: BytePoly_64 = bigint_mul!(x3057, x3057, 64);
    let x3061: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3060, x3046, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x3062: BytePoly_34 = bigint_nondet_quot!(ctx, x3061, x1, 34);
    let x3063: BytePoly_32 = bigint_nondet_rem!(ctx, x3061, x1, 32);
    let x3064: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x3057, x3063, 64),
                        bigint_add!(
                            bigint_sub!(x3049, bigint_mul!(x3057, x3046, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x3065: BytePoly_34 = bigint_nondet_quot!(ctx, x3064, x1, 34);
    let x3066: BytePoly_32 = bigint_nondet_rem!(ctx, x3064, x1, 32);
    let x3067: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3060, bigint_mul!(x3062, x1, 66), 66),
                        x3046,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x3063,
        66
    );
    eqz(ctx, &x3067, 276359, 4)?;
    let x3068: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x3065, x1, 66), x3066, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3057, bigint_sub!(x3046, x3063, 32), 64),
                        x3049,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x3068, 276359, 4)?;
    let x3069: BytePoly_32 = bigint_add!(bigint_sub!(x5, x3066, 32), x1, 32);
    let x3070: BytePoly_32 = bigint_add!(bigint_sub!(x4, x3063, 32), x1, 32);
    let x3071: BytePoly_32 = bigint_nondet_inv!(ctx, x3070, x1, 32);
    let x3072: BytePoly_64 = bigint_mul!(x3070, x3071, 64);
    let x3073: BytePoly_34 = bigint_nondet_quot!(ctx, x3072, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x3072, bigint_mul!(x3073, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x3074: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3069, x3071, 64), x1, 32);
    let x3075: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x3074, x3070, 64), x3069, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x3076: BytePoly_34 = bigint_nondet_quot!(ctx, x3075, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x3075, bigint_mul!(x3076, x1, 66), 66),
        276359,
        4,
    )?;
    let x3077: BytePoly_64 = bigint_mul!(x3074, x3074, 64);
    let x3078: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3077, x3063, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x3079: BytePoly_34 = bigint_nondet_quot!(ctx, x3078, x1, 34);
    let x3080: BytePoly_32 = bigint_nondet_rem!(ctx, x3078, x1, 32);
    let x3081: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x3074, x3080, 64),
                        bigint_add!(
                            bigint_sub!(x3066, bigint_mul!(x3074, x3063, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x3082: BytePoly_34 = bigint_nondet_quot!(ctx, x3081, x1, 34);
    let x3083: BytePoly_32 = bigint_nondet_rem!(ctx, x3081, x1, 32);
    let x3084: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3077, bigint_mul!(x3079, x1, 66), 66),
                        x3063,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x3080,
        66
    );
    eqz(ctx, &x3084, 276359, 4)?;
    let x3085: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x3082, x1, 66), x3083, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3074, bigint_sub!(x3063, x3080, 32), 64),
                        x3066,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x3085, 276359, 4)?;
    let x3086: BytePoly_32 = bigint_add!(bigint_sub!(x5, x3083, 32), x1, 32);
    let x3087: BytePoly_32 = bigint_add!(bigint_sub!(x4, x3080, 32), x1, 32);
    let x3088: BytePoly_32 = bigint_nondet_inv!(ctx, x3087, x1, 32);
    let x3089: BytePoly_64 = bigint_mul!(x3087, x3088, 64);
    let x3090: BytePoly_34 = bigint_nondet_quot!(ctx, x3089, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x3089, bigint_mul!(x3090, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x3091: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3086, x3088, 64), x1, 32);
    let x3092: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x3091, x3087, 64), x3086, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x3093: BytePoly_34 = bigint_nondet_quot!(ctx, x3092, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x3092, bigint_mul!(x3093, x1, 66), 66),
        276359,
        4,
    )?;
    let x3094: BytePoly_64 = bigint_mul!(x3091, x3091, 64);
    let x3095: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3094, x3080, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x3096: BytePoly_34 = bigint_nondet_quot!(ctx, x3095, x1, 34);
    let x3097: BytePoly_32 = bigint_nondet_rem!(ctx, x3095, x1, 32);
    let x3098: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x3091, x3097, 64),
                        bigint_add!(
                            bigint_sub!(x3083, bigint_mul!(x3091, x3080, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x3099: BytePoly_34 = bigint_nondet_quot!(ctx, x3098, x1, 34);
    let x3100: BytePoly_32 = bigint_nondet_rem!(ctx, x3098, x1, 32);
    let x3101: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3094, bigint_mul!(x3096, x1, 66), 66),
                        x3080,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x3097,
        66
    );
    eqz(ctx, &x3101, 276359, 4)?;
    let x3102: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x3099, x1, 66), x3100, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3091, bigint_sub!(x3080, x3097, 32), 64),
                        x3083,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x3102, 276359, 4)?;
    let x3103: BytePoly_32 = bigint_add!(bigint_sub!(x5, x3100, 32), x1, 32);
    let x3104: BytePoly_32 = bigint_add!(bigint_sub!(x4, x3097, 32), x1, 32);
    let x3105: BytePoly_32 = bigint_nondet_inv!(ctx, x3104, x1, 32);
    let x3106: BytePoly_64 = bigint_mul!(x3104, x3105, 64);
    let x3107: BytePoly_34 = bigint_nondet_quot!(ctx, x3106, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x3106, bigint_mul!(x3107, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x3108: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3103, x3105, 64), x1, 32);
    let x3109: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x3108, x3104, 64), x3103, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x3110: BytePoly_34 = bigint_nondet_quot!(ctx, x3109, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x3109, bigint_mul!(x3110, x1, 66), 66),
        276359,
        4,
    )?;
    let x3111: BytePoly_64 = bigint_mul!(x3108, x3108, 64);
    let x3112: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3111, x3097, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x3113: BytePoly_34 = bigint_nondet_quot!(ctx, x3112, x1, 34);
    let x3114: BytePoly_32 = bigint_nondet_rem!(ctx, x3112, x1, 32);
    let x3115: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x3108, x3114, 64),
                        bigint_add!(
                            bigint_sub!(x3100, bigint_mul!(x3108, x3097, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x3116: BytePoly_34 = bigint_nondet_quot!(ctx, x3115, x1, 34);
    let x3117: BytePoly_32 = bigint_nondet_rem!(ctx, x3115, x1, 32);
    let x3118: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3111, bigint_mul!(x3113, x1, 66), 66),
                        x3097,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x3114,
        66
    );
    eqz(ctx, &x3118, 276359, 4)?;
    let x3119: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x3116, x1, 66), x3117, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3108, bigint_sub!(x3097, x3114, 32), 64),
                        x3100,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x3119, 276359, 4)?;
    let x3120: BytePoly_32 = bigint_add!(bigint_sub!(x5, x3117, 32), x1, 32);
    let x3121: BytePoly_32 = bigint_add!(bigint_sub!(x4, x3114, 32), x1, 32);
    let x3122: BytePoly_32 = bigint_nondet_inv!(ctx, x3121, x1, 32);
    let x3123: BytePoly_64 = bigint_mul!(x3121, x3122, 64);
    let x3124: BytePoly_34 = bigint_nondet_quot!(ctx, x3123, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x3123, bigint_mul!(x3124, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x3125: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3120, x3122, 64), x1, 32);
    let x3126: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x3125, x3121, 64), x3120, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x3127: BytePoly_34 = bigint_nondet_quot!(ctx, x3126, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x3126, bigint_mul!(x3127, x1, 66), 66),
        276359,
        4,
    )?;
    let x3128: BytePoly_64 = bigint_mul!(x3125, x3125, 64);
    let x3129: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3128, x3114, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x3130: BytePoly_34 = bigint_nondet_quot!(ctx, x3129, x1, 34);
    let x3131: BytePoly_32 = bigint_nondet_rem!(ctx, x3129, x1, 32);
    let x3132: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x3125, x3131, 64),
                        bigint_add!(
                            bigint_sub!(x3117, bigint_mul!(x3125, x3114, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x3133: BytePoly_34 = bigint_nondet_quot!(ctx, x3132, x1, 34);
    let x3134: BytePoly_32 = bigint_nondet_rem!(ctx, x3132, x1, 32);
    let x3135: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3128, bigint_mul!(x3130, x1, 66), 66),
                        x3114,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x3131,
        66
    );
    eqz(ctx, &x3135, 276359, 4)?;
    let x3136: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x3133, x1, 66), x3134, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3125, bigint_sub!(x3114, x3131, 32), 64),
                        x3117,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x3136, 276359, 4)?;
    let x3137: BytePoly_32 = bigint_add!(bigint_sub!(x5, x3134, 32), x1, 32);
    let x3138: BytePoly_32 = bigint_add!(bigint_sub!(x4, x3131, 32), x1, 32);
    let x3139: BytePoly_32 = bigint_nondet_inv!(ctx, x3138, x1, 32);
    let x3140: BytePoly_64 = bigint_mul!(x3138, x3139, 64);
    let x3141: BytePoly_34 = bigint_nondet_quot!(ctx, x3140, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x3140, bigint_mul!(x3141, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x3142: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3137, x3139, 64), x1, 32);
    let x3143: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x3142, x3138, 64), x3137, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x3144: BytePoly_34 = bigint_nondet_quot!(ctx, x3143, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x3143, bigint_mul!(x3144, x1, 66), 66),
        276359,
        4,
    )?;
    let x3145: BytePoly_64 = bigint_mul!(x3142, x3142, 64);
    let x3146: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3145, x3131, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x3147: BytePoly_34 = bigint_nondet_quot!(ctx, x3146, x1, 34);
    let x3148: BytePoly_32 = bigint_nondet_rem!(ctx, x3146, x1, 32);
    let x3149: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x3142, x3148, 64),
                        bigint_add!(
                            bigint_sub!(x3134, bigint_mul!(x3142, x3131, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x3150: BytePoly_34 = bigint_nondet_quot!(ctx, x3149, x1, 34);
    let x3151: BytePoly_32 = bigint_nondet_rem!(ctx, x3149, x1, 32);
    let x3152: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3145, bigint_mul!(x3147, x1, 66), 66),
                        x3131,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x3148,
        66
    );
    eqz(ctx, &x3152, 276359, 4)?;
    let x3153: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x3150, x1, 66), x3151, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3142, bigint_sub!(x3131, x3148, 32), 64),
                        x3134,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x3153, 276359, 4)?;
    let x3154: BytePoly_32 = bigint_add!(bigint_sub!(x5, x3151, 32), x1, 32);
    let x3155: BytePoly_32 = bigint_add!(bigint_sub!(x4, x3148, 32), x1, 32);
    let x3156: BytePoly_32 = bigint_nondet_inv!(ctx, x3155, x1, 32);
    let x3157: BytePoly_64 = bigint_mul!(x3155, x3156, 64);
    let x3158: BytePoly_34 = bigint_nondet_quot!(ctx, x3157, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x3157, bigint_mul!(x3158, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x3159: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3154, x3156, 64), x1, 32);
    let x3160: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x3159, x3155, 64), x3154, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x3161: BytePoly_34 = bigint_nondet_quot!(ctx, x3160, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x3160, bigint_mul!(x3161, x1, 66), 66),
        276359,
        4,
    )?;
    let x3162: BytePoly_64 = bigint_mul!(x3159, x3159, 64);
    let x3163: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3162, x3148, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x3164: BytePoly_34 = bigint_nondet_quot!(ctx, x3163, x1, 34);
    let x3165: BytePoly_32 = bigint_nondet_rem!(ctx, x3163, x1, 32);
    let x3166: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x3159, x3165, 64),
                        bigint_add!(
                            bigint_sub!(x3151, bigint_mul!(x3159, x3148, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x3167: BytePoly_34 = bigint_nondet_quot!(ctx, x3166, x1, 34);
    let x3168: BytePoly_32 = bigint_nondet_rem!(ctx, x3166, x1, 32);
    let x3169: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3162, bigint_mul!(x3164, x1, 66), 66),
                        x3148,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x3165,
        66
    );
    eqz(ctx, &x3169, 276359, 4)?;
    let x3170: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x3167, x1, 66), x3168, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3159, bigint_sub!(x3148, x3165, 32), 64),
                        x3151,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x3170, 276359, 4)?;
    let x3171: BytePoly_32 = bigint_add!(bigint_sub!(x5, x3168, 32), x1, 32);
    let x3172: BytePoly_32 = bigint_add!(bigint_sub!(x4, x3165, 32), x1, 32);
    let x3173: BytePoly_32 = bigint_nondet_inv!(ctx, x3172, x1, 32);
    let x3174: BytePoly_64 = bigint_mul!(x3172, x3173, 64);
    let x3175: BytePoly_34 = bigint_nondet_quot!(ctx, x3174, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x3174, bigint_mul!(x3175, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x3176: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3171, x3173, 64), x1, 32);
    let x3177: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x3176, x3172, 64), x3171, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x3178: BytePoly_34 = bigint_nondet_quot!(ctx, x3177, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x3177, bigint_mul!(x3178, x1, 66), 66),
        276359,
        4,
    )?;
    let x3179: BytePoly_64 = bigint_mul!(x3176, x3176, 64);
    let x3180: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3179, x3165, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x3181: BytePoly_34 = bigint_nondet_quot!(ctx, x3180, x1, 34);
    let x3182: BytePoly_32 = bigint_nondet_rem!(ctx, x3180, x1, 32);
    let x3183: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x3176, x3182, 64),
                        bigint_add!(
                            bigint_sub!(x3168, bigint_mul!(x3176, x3165, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x3184: BytePoly_34 = bigint_nondet_quot!(ctx, x3183, x1, 34);
    let x3185: BytePoly_32 = bigint_nondet_rem!(ctx, x3183, x1, 32);
    let x3186: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3179, bigint_mul!(x3181, x1, 66), 66),
                        x3165,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x3182,
        66
    );
    eqz(ctx, &x3186, 276359, 4)?;
    let x3187: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x3184, x1, 66), x3185, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3176, bigint_sub!(x3165, x3182, 32), 64),
                        x3168,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x3187, 276359, 4)?;
    let x3188: BytePoly_32 = bigint_add!(bigint_sub!(x5, x3185, 32), x1, 32);
    let x3189: BytePoly_32 = bigint_add!(bigint_sub!(x4, x3182, 32), x1, 32);
    let x3190: BytePoly_32 = bigint_nondet_inv!(ctx, x3189, x1, 32);
    let x3191: BytePoly_64 = bigint_mul!(x3189, x3190, 64);
    let x3192: BytePoly_34 = bigint_nondet_quot!(ctx, x3191, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x3191, bigint_mul!(x3192, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x3193: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3188, x3190, 64), x1, 32);
    let x3194: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x3193, x3189, 64), x3188, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x3195: BytePoly_34 = bigint_nondet_quot!(ctx, x3194, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x3194, bigint_mul!(x3195, x1, 66), 66),
        276359,
        4,
    )?;
    let x3196: BytePoly_64 = bigint_mul!(x3193, x3193, 64);
    let x3197: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3196, x3182, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x3198: BytePoly_34 = bigint_nondet_quot!(ctx, x3197, x1, 34);
    let x3199: BytePoly_32 = bigint_nondet_rem!(ctx, x3197, x1, 32);
    let x3200: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x3193, x3199, 64),
                        bigint_add!(
                            bigint_sub!(x3185, bigint_mul!(x3193, x3182, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x3201: BytePoly_34 = bigint_nondet_quot!(ctx, x3200, x1, 34);
    let x3202: BytePoly_32 = bigint_nondet_rem!(ctx, x3200, x1, 32);
    let x3203: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3196, bigint_mul!(x3198, x1, 66), 66),
                        x3182,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x3199,
        66
    );
    eqz(ctx, &x3203, 276359, 4)?;
    let x3204: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x3201, x1, 66), x3202, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3193, bigint_sub!(x3182, x3199, 32), 64),
                        x3185,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x3204, 276359, 4)?;
    let x3205: BytePoly_32 = bigint_add!(bigint_sub!(x5, x3202, 32), x1, 32);
    let x3206: BytePoly_32 = bigint_add!(bigint_sub!(x4, x3199, 32), x1, 32);
    let x3207: BytePoly_32 = bigint_nondet_inv!(ctx, x3206, x1, 32);
    let x3208: BytePoly_64 = bigint_mul!(x3206, x3207, 64);
    let x3209: BytePoly_34 = bigint_nondet_quot!(ctx, x3208, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x3208, bigint_mul!(x3209, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x3210: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3205, x3207, 64), x1, 32);
    let x3211: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x3210, x3206, 64), x3205, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x3212: BytePoly_34 = bigint_nondet_quot!(ctx, x3211, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x3211, bigint_mul!(x3212, x1, 66), 66),
        276359,
        4,
    )?;
    let x3213: BytePoly_64 = bigint_mul!(x3210, x3210, 64);
    let x3214: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3213, x3199, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x3215: BytePoly_34 = bigint_nondet_quot!(ctx, x3214, x1, 34);
    let x3216: BytePoly_32 = bigint_nondet_rem!(ctx, x3214, x1, 32);
    let x3217: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x3210, x3216, 64),
                        bigint_add!(
                            bigint_sub!(x3202, bigint_mul!(x3210, x3199, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x3218: BytePoly_34 = bigint_nondet_quot!(ctx, x3217, x1, 34);
    let x3219: BytePoly_32 = bigint_nondet_rem!(ctx, x3217, x1, 32);
    let x3220: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3213, bigint_mul!(x3215, x1, 66), 66),
                        x3199,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x3216,
        66
    );
    eqz(ctx, &x3220, 276359, 4)?;
    let x3221: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x3218, x1, 66), x3219, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3210, bigint_sub!(x3199, x3216, 32), 64),
                        x3202,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x3221, 276359, 4)?;
    let x3222: BytePoly_32 = bigint_add!(bigint_sub!(x5, x3219, 32), x1, 32);
    let x3223: BytePoly_32 = bigint_add!(bigint_sub!(x4, x3216, 32), x1, 32);
    let x3224: BytePoly_32 = bigint_nondet_inv!(ctx, x3223, x1, 32);
    let x3225: BytePoly_64 = bigint_mul!(x3223, x3224, 64);
    let x3226: BytePoly_34 = bigint_nondet_quot!(ctx, x3225, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x3225, bigint_mul!(x3226, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x3227: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3222, x3224, 64), x1, 32);
    let x3228: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x3227, x3223, 64), x3222, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x3229: BytePoly_34 = bigint_nondet_quot!(ctx, x3228, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x3228, bigint_mul!(x3229, x1, 66), 66),
        276359,
        4,
    )?;
    let x3230: BytePoly_64 = bigint_mul!(x3227, x3227, 64);
    let x3231: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3230, x3216, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x3232: BytePoly_34 = bigint_nondet_quot!(ctx, x3231, x1, 34);
    let x3233: BytePoly_32 = bigint_nondet_rem!(ctx, x3231, x1, 32);
    let x3234: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x3227, x3233, 64),
                        bigint_add!(
                            bigint_sub!(x3219, bigint_mul!(x3227, x3216, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x3235: BytePoly_34 = bigint_nondet_quot!(ctx, x3234, x1, 34);
    let x3236: BytePoly_32 = bigint_nondet_rem!(ctx, x3234, x1, 32);
    let x3237: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3230, bigint_mul!(x3232, x1, 66), 66),
                        x3216,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x3233,
        66
    );
    eqz(ctx, &x3237, 276359, 4)?;
    let x3238: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x3235, x1, 66), x3236, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3227, bigint_sub!(x3216, x3233, 32), 64),
                        x3219,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x3238, 276359, 4)?;
    let x3239: BytePoly_32 = bigint_add!(bigint_sub!(x5, x3236, 32), x1, 32);
    let x3240: BytePoly_32 = bigint_add!(bigint_sub!(x4, x3233, 32), x1, 32);
    let x3241: BytePoly_32 = bigint_nondet_inv!(ctx, x3240, x1, 32);
    let x3242: BytePoly_64 = bigint_mul!(x3240, x3241, 64);
    let x3243: BytePoly_34 = bigint_nondet_quot!(ctx, x3242, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x3242, bigint_mul!(x3243, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x3244: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3239, x3241, 64), x1, 32);
    let x3245: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x3244, x3240, 64), x3239, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x3246: BytePoly_34 = bigint_nondet_quot!(ctx, x3245, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x3245, bigint_mul!(x3246, x1, 66), 66),
        276359,
        4,
    )?;
    let x3247: BytePoly_64 = bigint_mul!(x3244, x3244, 64);
    let x3248: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3247, x3233, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x3249: BytePoly_34 = bigint_nondet_quot!(ctx, x3248, x1, 34);
    let x3250: BytePoly_32 = bigint_nondet_rem!(ctx, x3248, x1, 32);
    let x3251: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x3244, x3250, 64),
                        bigint_add!(
                            bigint_sub!(x3236, bigint_mul!(x3244, x3233, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x3252: BytePoly_34 = bigint_nondet_quot!(ctx, x3251, x1, 34);
    let x3253: BytePoly_32 = bigint_nondet_rem!(ctx, x3251, x1, 32);
    let x3254: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3247, bigint_mul!(x3249, x1, 66), 66),
                        x3233,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x3250,
        66
    );
    eqz(ctx, &x3254, 276359, 4)?;
    let x3255: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x3252, x1, 66), x3253, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3244, bigint_sub!(x3233, x3250, 32), 64),
                        x3236,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x3255, 276359, 4)?;
    let x3256: BytePoly_32 = bigint_add!(bigint_sub!(x5, x3253, 32), x1, 32);
    let x3257: BytePoly_32 = bigint_add!(bigint_sub!(x4, x3250, 32), x1, 32);
    let x3258: BytePoly_32 = bigint_nondet_inv!(ctx, x3257, x1, 32);
    let x3259: BytePoly_64 = bigint_mul!(x3257, x3258, 64);
    let x3260: BytePoly_34 = bigint_nondet_quot!(ctx, x3259, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x3259, bigint_mul!(x3260, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x3261: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3256, x3258, 64), x1, 32);
    let x3262: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x3261, x3257, 64), x3256, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x3263: BytePoly_34 = bigint_nondet_quot!(ctx, x3262, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x3262, bigint_mul!(x3263, x1, 66), 66),
        276359,
        4,
    )?;
    let x3264: BytePoly_64 = bigint_mul!(x3261, x3261, 64);
    let x3265: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3264, x3250, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x3266: BytePoly_34 = bigint_nondet_quot!(ctx, x3265, x1, 34);
    let x3267: BytePoly_32 = bigint_nondet_rem!(ctx, x3265, x1, 32);
    let x3268: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x3261, x3267, 64),
                        bigint_add!(
                            bigint_sub!(x3253, bigint_mul!(x3261, x3250, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x3269: BytePoly_34 = bigint_nondet_quot!(ctx, x3268, x1, 34);
    let x3270: BytePoly_32 = bigint_nondet_rem!(ctx, x3268, x1, 32);
    let x3271: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3264, bigint_mul!(x3266, x1, 66), 66),
                        x3250,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x3267,
        66
    );
    eqz(ctx, &x3271, 276359, 4)?;
    let x3272: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x3269, x1, 66), x3270, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3261, bigint_sub!(x3250, x3267, 32), 64),
                        x3253,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x3272, 276359, 4)?;
    let x3273: BytePoly_32 = bigint_add!(bigint_sub!(x5, x3270, 32), x1, 32);
    let x3274: BytePoly_32 = bigint_add!(bigint_sub!(x4, x3267, 32), x1, 32);
    let x3275: BytePoly_32 = bigint_nondet_inv!(ctx, x3274, x1, 32);
    let x3276: BytePoly_64 = bigint_mul!(x3274, x3275, 64);
    let x3277: BytePoly_34 = bigint_nondet_quot!(ctx, x3276, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x3276, bigint_mul!(x3277, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x3278: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3273, x3275, 64), x1, 32);
    let x3279: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x3278, x3274, 64), x3273, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x3280: BytePoly_34 = bigint_nondet_quot!(ctx, x3279, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x3279, bigint_mul!(x3280, x1, 66), 66),
        276359,
        4,
    )?;
    let x3281: BytePoly_64 = bigint_mul!(x3278, x3278, 64);
    let x3282: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3281, x3267, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x3283: BytePoly_34 = bigint_nondet_quot!(ctx, x3282, x1, 34);
    let x3284: BytePoly_32 = bigint_nondet_rem!(ctx, x3282, x1, 32);
    let x3285: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x3278, x3284, 64),
                        bigint_add!(
                            bigint_sub!(x3270, bigint_mul!(x3278, x3267, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x3286: BytePoly_34 = bigint_nondet_quot!(ctx, x3285, x1, 34);
    let x3287: BytePoly_32 = bigint_nondet_rem!(ctx, x3285, x1, 32);
    let x3288: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3281, bigint_mul!(x3283, x1, 66), 66),
                        x3267,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x3284,
        66
    );
    eqz(ctx, &x3288, 276359, 4)?;
    let x3289: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x3286, x1, 66), x3287, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3278, bigint_sub!(x3267, x3284, 32), 64),
                        x3270,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x3289, 276359, 4)?;
    let x3290: BytePoly_32 = bigint_add!(bigint_sub!(x5, x3287, 32), x1, 32);
    let x3291: BytePoly_32 = bigint_add!(bigint_sub!(x4, x3284, 32), x1, 32);
    let x3292: BytePoly_32 = bigint_nondet_inv!(ctx, x3291, x1, 32);
    let x3293: BytePoly_64 = bigint_mul!(x3291, x3292, 64);
    let x3294: BytePoly_34 = bigint_nondet_quot!(ctx, x3293, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x3293, bigint_mul!(x3294, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x3295: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3290, x3292, 64), x1, 32);
    let x3296: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x3295, x3291, 64), x3290, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x3297: BytePoly_34 = bigint_nondet_quot!(ctx, x3296, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x3296, bigint_mul!(x3297, x1, 66), 66),
        276359,
        4,
    )?;
    let x3298: BytePoly_64 = bigint_mul!(x3295, x3295, 64);
    let x3299: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3298, x3284, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x3300: BytePoly_34 = bigint_nondet_quot!(ctx, x3299, x1, 34);
    let x3301: BytePoly_32 = bigint_nondet_rem!(ctx, x3299, x1, 32);
    let x3302: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x3295, x3301, 64),
                        bigint_add!(
                            bigint_sub!(x3287, bigint_mul!(x3295, x3284, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x3303: BytePoly_34 = bigint_nondet_quot!(ctx, x3302, x1, 34);
    let x3304: BytePoly_32 = bigint_nondet_rem!(ctx, x3302, x1, 32);
    let x3305: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3298, bigint_mul!(x3300, x1, 66), 66),
                        x3284,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x3301,
        66
    );
    eqz(ctx, &x3305, 276359, 4)?;
    let x3306: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x3303, x1, 66), x3304, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3295, bigint_sub!(x3284, x3301, 32), 64),
                        x3287,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x3306, 276359, 4)?;
    let x3307: BytePoly_32 = bigint_add!(bigint_sub!(x5, x3304, 32), x1, 32);
    let x3308: BytePoly_32 = bigint_add!(bigint_sub!(x4, x3301, 32), x1, 32);
    let x3309: BytePoly_32 = bigint_nondet_inv!(ctx, x3308, x1, 32);
    let x3310: BytePoly_64 = bigint_mul!(x3308, x3309, 64);
    let x3311: BytePoly_34 = bigint_nondet_quot!(ctx, x3310, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x3310, bigint_mul!(x3311, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x3312: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3307, x3309, 64), x1, 32);
    let x3313: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x3312, x3308, 64), x3307, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x3314: BytePoly_34 = bigint_nondet_quot!(ctx, x3313, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x3313, bigint_mul!(x3314, x1, 66), 66),
        276359,
        4,
    )?;
    let x3315: BytePoly_64 = bigint_mul!(x3312, x3312, 64);
    let x3316: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3315, x3301, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x3317: BytePoly_34 = bigint_nondet_quot!(ctx, x3316, x1, 34);
    let x3318: BytePoly_32 = bigint_nondet_rem!(ctx, x3316, x1, 32);
    let x3319: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x3312, x3318, 64),
                        bigint_add!(
                            bigint_sub!(x3304, bigint_mul!(x3312, x3301, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x3320: BytePoly_34 = bigint_nondet_quot!(ctx, x3319, x1, 34);
    let x3321: BytePoly_32 = bigint_nondet_rem!(ctx, x3319, x1, 32);
    let x3322: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3315, bigint_mul!(x3317, x1, 66), 66),
                        x3301,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x3318,
        66
    );
    eqz(ctx, &x3322, 276359, 4)?;
    let x3323: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x3320, x1, 66), x3321, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3312, bigint_sub!(x3301, x3318, 32), 64),
                        x3304,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x3323, 276359, 4)?;
    let x3324: BytePoly_32 = bigint_add!(bigint_sub!(x5, x3321, 32), x1, 32);
    let x3325: BytePoly_32 = bigint_add!(bigint_sub!(x4, x3318, 32), x1, 32);
    let x3326: BytePoly_32 = bigint_nondet_inv!(ctx, x3325, x1, 32);
    let x3327: BytePoly_64 = bigint_mul!(x3325, x3326, 64);
    let x3328: BytePoly_34 = bigint_nondet_quot!(ctx, x3327, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x3327, bigint_mul!(x3328, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x3329: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3324, x3326, 64), x1, 32);
    let x3330: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x3329, x3325, 64), x3324, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x3331: BytePoly_34 = bigint_nondet_quot!(ctx, x3330, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x3330, bigint_mul!(x3331, x1, 66), 66),
        276359,
        4,
    )?;
    let x3332: BytePoly_64 = bigint_mul!(x3329, x3329, 64);
    let x3333: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3332, x3318, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x3334: BytePoly_34 = bigint_nondet_quot!(ctx, x3333, x1, 34);
    let x3335: BytePoly_32 = bigint_nondet_rem!(ctx, x3333, x1, 32);
    let x3336: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x3329, x3335, 64),
                        bigint_add!(
                            bigint_sub!(x3321, bigint_mul!(x3329, x3318, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x3337: BytePoly_34 = bigint_nondet_quot!(ctx, x3336, x1, 34);
    let x3338: BytePoly_32 = bigint_nondet_rem!(ctx, x3336, x1, 32);
    let x3339: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3332, bigint_mul!(x3334, x1, 66), 66),
                        x3318,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x3335,
        66
    );
    eqz(ctx, &x3339, 276359, 4)?;
    let x3340: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x3337, x1, 66), x3338, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3329, bigint_sub!(x3318, x3335, 32), 64),
                        x3321,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x3340, 276359, 4)?;
    let x3341: BytePoly_32 = bigint_add!(bigint_sub!(x5, x3338, 32), x1, 32);
    let x3342: BytePoly_32 = bigint_add!(bigint_sub!(x4, x3335, 32), x1, 32);
    let x3343: BytePoly_32 = bigint_nondet_inv!(ctx, x3342, x1, 32);
    let x3344: BytePoly_64 = bigint_mul!(x3342, x3343, 64);
    let x3345: BytePoly_34 = bigint_nondet_quot!(ctx, x3344, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x3344, bigint_mul!(x3345, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x3346: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3341, x3343, 64), x1, 32);
    let x3347: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x3346, x3342, 64), x3341, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x3348: BytePoly_34 = bigint_nondet_quot!(ctx, x3347, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x3347, bigint_mul!(x3348, x1, 66), 66),
        276359,
        4,
    )?;
    let x3349: BytePoly_64 = bigint_mul!(x3346, x3346, 64);
    let x3350: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3349, x3335, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x3351: BytePoly_34 = bigint_nondet_quot!(ctx, x3350, x1, 34);
    let x3352: BytePoly_32 = bigint_nondet_rem!(ctx, x3350, x1, 32);
    let x3353: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x3346, x3352, 64),
                        bigint_add!(
                            bigint_sub!(x3338, bigint_mul!(x3346, x3335, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x3354: BytePoly_34 = bigint_nondet_quot!(ctx, x3353, x1, 34);
    let x3355: BytePoly_32 = bigint_nondet_rem!(ctx, x3353, x1, 32);
    let x3356: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3349, bigint_mul!(x3351, x1, 66), 66),
                        x3335,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x3352,
        66
    );
    eqz(ctx, &x3356, 276359, 4)?;
    let x3357: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x3354, x1, 66), x3355, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3346, bigint_sub!(x3335, x3352, 32), 64),
                        x3338,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x3357, 276359, 4)?;
    let x3358: BytePoly_32 = bigint_add!(bigint_sub!(x5, x3355, 32), x1, 32);
    let x3359: BytePoly_32 = bigint_add!(bigint_sub!(x4, x3352, 32), x1, 32);
    let x3360: BytePoly_32 = bigint_nondet_inv!(ctx, x3359, x1, 32);
    let x3361: BytePoly_64 = bigint_mul!(x3359, x3360, 64);
    let x3362: BytePoly_34 = bigint_nondet_quot!(ctx, x3361, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x3361, bigint_mul!(x3362, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x3363: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3358, x3360, 64), x1, 32);
    let x3364: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x3363, x3359, 64), x3358, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x3365: BytePoly_34 = bigint_nondet_quot!(ctx, x3364, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x3364, bigint_mul!(x3365, x1, 66), 66),
        276359,
        4,
    )?;
    let x3366: BytePoly_64 = bigint_mul!(x3363, x3363, 64);
    let x3367: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3366, x3352, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x3368: BytePoly_34 = bigint_nondet_quot!(ctx, x3367, x1, 34);
    let x3369: BytePoly_32 = bigint_nondet_rem!(ctx, x3367, x1, 32);
    let x3370: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x3363, x3369, 64),
                        bigint_add!(
                            bigint_sub!(x3355, bigint_mul!(x3363, x3352, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x3371: BytePoly_34 = bigint_nondet_quot!(ctx, x3370, x1, 34);
    let x3372: BytePoly_32 = bigint_nondet_rem!(ctx, x3370, x1, 32);
    let x3373: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3366, bigint_mul!(x3368, x1, 66), 66),
                        x3352,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x3369,
        66
    );
    eqz(ctx, &x3373, 276359, 4)?;
    let x3374: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x3371, x1, 66), x3372, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3363, bigint_sub!(x3352, x3369, 32), 64),
                        x3355,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x3374, 276359, 4)?;
    let x3375: BytePoly_32 = bigint_add!(bigint_sub!(x5, x3372, 32), x1, 32);
    let x3376: BytePoly_32 = bigint_add!(bigint_sub!(x4, x3369, 32), x1, 32);
    let x3377: BytePoly_32 = bigint_nondet_inv!(ctx, x3376, x1, 32);
    let x3378: BytePoly_64 = bigint_mul!(x3376, x3377, 64);
    let x3379: BytePoly_34 = bigint_nondet_quot!(ctx, x3378, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x3378, bigint_mul!(x3379, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x3380: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3375, x3377, 64), x1, 32);
    let x3381: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x3380, x3376, 64), x3375, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x3382: BytePoly_34 = bigint_nondet_quot!(ctx, x3381, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x3381, bigint_mul!(x3382, x1, 66), 66),
        276359,
        4,
    )?;
    let x3383: BytePoly_64 = bigint_mul!(x3380, x3380, 64);
    let x3384: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3383, x3369, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x3385: BytePoly_34 = bigint_nondet_quot!(ctx, x3384, x1, 34);
    let x3386: BytePoly_32 = bigint_nondet_rem!(ctx, x3384, x1, 32);
    let x3387: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x3380, x3386, 64),
                        bigint_add!(
                            bigint_sub!(x3372, bigint_mul!(x3380, x3369, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x3388: BytePoly_34 = bigint_nondet_quot!(ctx, x3387, x1, 34);
    let x3389: BytePoly_32 = bigint_nondet_rem!(ctx, x3387, x1, 32);
    let x3390: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3383, bigint_mul!(x3385, x1, 66), 66),
                        x3369,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x3386,
        66
    );
    eqz(ctx, &x3390, 276359, 4)?;
    let x3391: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x3388, x1, 66), x3389, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3380, bigint_sub!(x3369, x3386, 32), 64),
                        x3372,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x3391, 276359, 4)?;
    let x3392: BytePoly_32 = bigint_add!(bigint_sub!(x5, x3389, 32), x1, 32);
    let x3393: BytePoly_32 = bigint_add!(bigint_sub!(x4, x3386, 32), x1, 32);
    let x3394: BytePoly_32 = bigint_nondet_inv!(ctx, x3393, x1, 32);
    let x3395: BytePoly_64 = bigint_mul!(x3393, x3394, 64);
    let x3396: BytePoly_34 = bigint_nondet_quot!(ctx, x3395, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x3395, bigint_mul!(x3396, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x3397: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3392, x3394, 64), x1, 32);
    let x3398: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x3397, x3393, 64), x3392, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x3399: BytePoly_34 = bigint_nondet_quot!(ctx, x3398, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x3398, bigint_mul!(x3399, x1, 66), 66),
        276359,
        4,
    )?;
    let x3400: BytePoly_64 = bigint_mul!(x3397, x3397, 64);
    let x3401: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3400, x3386, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x3402: BytePoly_34 = bigint_nondet_quot!(ctx, x3401, x1, 34);
    let x3403: BytePoly_32 = bigint_nondet_rem!(ctx, x3401, x1, 32);
    let x3404: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x3397, x3403, 64),
                        bigint_add!(
                            bigint_sub!(x3389, bigint_mul!(x3397, x3386, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x3405: BytePoly_34 = bigint_nondet_quot!(ctx, x3404, x1, 34);
    let x3406: BytePoly_32 = bigint_nondet_rem!(ctx, x3404, x1, 32);
    let x3407: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3400, bigint_mul!(x3402, x1, 66), 66),
                        x3386,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x3403,
        66
    );
    eqz(ctx, &x3407, 276359, 4)?;
    let x3408: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x3405, x1, 66), x3406, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3397, bigint_sub!(x3386, x3403, 32), 64),
                        x3389,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x3408, 276359, 4)?;
    let x3409: BytePoly_32 = bigint_add!(bigint_sub!(x5, x3406, 32), x1, 32);
    let x3410: BytePoly_32 = bigint_add!(bigint_sub!(x4, x3403, 32), x1, 32);
    let x3411: BytePoly_32 = bigint_nondet_inv!(ctx, x3410, x1, 32);
    let x3412: BytePoly_64 = bigint_mul!(x3410, x3411, 64);
    let x3413: BytePoly_34 = bigint_nondet_quot!(ctx, x3412, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x3412, bigint_mul!(x3413, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x3414: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3409, x3411, 64), x1, 32);
    let x3415: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x3414, x3410, 64), x3409, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x3416: BytePoly_34 = bigint_nondet_quot!(ctx, x3415, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x3415, bigint_mul!(x3416, x1, 66), 66),
        276359,
        4,
    )?;
    let x3417: BytePoly_64 = bigint_mul!(x3414, x3414, 64);
    let x3418: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3417, x3403, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x3419: BytePoly_34 = bigint_nondet_quot!(ctx, x3418, x1, 34);
    let x3420: BytePoly_32 = bigint_nondet_rem!(ctx, x3418, x1, 32);
    let x3421: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x3414, x3420, 64),
                        bigint_add!(
                            bigint_sub!(x3406, bigint_mul!(x3414, x3403, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x3422: BytePoly_34 = bigint_nondet_quot!(ctx, x3421, x1, 34);
    let x3423: BytePoly_32 = bigint_nondet_rem!(ctx, x3421, x1, 32);
    let x3424: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3417, bigint_mul!(x3419, x1, 66), 66),
                        x3403,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x3420,
        66
    );
    eqz(ctx, &x3424, 276359, 4)?;
    let x3425: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x3422, x1, 66), x3423, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3414, bigint_sub!(x3403, x3420, 32), 64),
                        x3406,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x3425, 276359, 4)?;
    let x3426: BytePoly_32 = bigint_add!(bigint_sub!(x5, x3423, 32), x1, 32);
    let x3427: BytePoly_32 = bigint_add!(bigint_sub!(x4, x3420, 32), x1, 32);
    let x3428: BytePoly_32 = bigint_nondet_inv!(ctx, x3427, x1, 32);
    let x3429: BytePoly_64 = bigint_mul!(x3427, x3428, 64);
    let x3430: BytePoly_34 = bigint_nondet_quot!(ctx, x3429, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x3429, bigint_mul!(x3430, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x3431: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3426, x3428, 64), x1, 32);
    let x3432: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x3431, x3427, 64), x3426, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x3433: BytePoly_34 = bigint_nondet_quot!(ctx, x3432, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x3432, bigint_mul!(x3433, x1, 66), 66),
        276359,
        4,
    )?;
    let x3434: BytePoly_64 = bigint_mul!(x3431, x3431, 64);
    let x3435: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3434, x3420, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x3436: BytePoly_34 = bigint_nondet_quot!(ctx, x3435, x1, 34);
    let x3437: BytePoly_32 = bigint_nondet_rem!(ctx, x3435, x1, 32);
    let x3438: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x3431, x3437, 64),
                        bigint_add!(
                            bigint_sub!(x3423, bigint_mul!(x3431, x3420, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x3439: BytePoly_34 = bigint_nondet_quot!(ctx, x3438, x1, 34);
    let x3440: BytePoly_32 = bigint_nondet_rem!(ctx, x3438, x1, 32);
    let x3441: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3434, bigint_mul!(x3436, x1, 66), 66),
                        x3420,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x3437,
        66
    );
    eqz(ctx, &x3441, 276359, 4)?;
    let x3442: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x3439, x1, 66), x3440, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3431, bigint_sub!(x3420, x3437, 32), 64),
                        x3423,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x3442, 276359, 4)?;
    let x3443: BytePoly_32 = bigint_add!(bigint_sub!(x5, x3440, 32), x1, 32);
    let x3444: BytePoly_32 = bigint_add!(bigint_sub!(x4, x3437, 32), x1, 32);
    let x3445: BytePoly_32 = bigint_nondet_inv!(ctx, x3444, x1, 32);
    let x3446: BytePoly_64 = bigint_mul!(x3444, x3445, 64);
    let x3447: BytePoly_34 = bigint_nondet_quot!(ctx, x3446, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x3446, bigint_mul!(x3447, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x3448: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3443, x3445, 64), x1, 32);
    let x3449: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x3448, x3444, 64), x3443, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x3450: BytePoly_34 = bigint_nondet_quot!(ctx, x3449, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x3449, bigint_mul!(x3450, x1, 66), 66),
        276359,
        4,
    )?;
    let x3451: BytePoly_64 = bigint_mul!(x3448, x3448, 64);
    let x3452: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3451, x3437, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x3453: BytePoly_34 = bigint_nondet_quot!(ctx, x3452, x1, 34);
    let x3454: BytePoly_32 = bigint_nondet_rem!(ctx, x3452, x1, 32);
    let x3455: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x3448, x3454, 64),
                        bigint_add!(
                            bigint_sub!(x3440, bigint_mul!(x3448, x3437, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x3456: BytePoly_34 = bigint_nondet_quot!(ctx, x3455, x1, 34);
    let x3457: BytePoly_32 = bigint_nondet_rem!(ctx, x3455, x1, 32);
    let x3458: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3451, bigint_mul!(x3453, x1, 66), 66),
                        x3437,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x3454,
        66
    );
    eqz(ctx, &x3458, 276359, 4)?;
    let x3459: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x3456, x1, 66), x3457, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3448, bigint_sub!(x3437, x3454, 32), 64),
                        x3440,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x3459, 276359, 4)?;
    let x3460: BytePoly_32 = bigint_add!(bigint_sub!(x5, x3457, 32), x1, 32);
    let x3461: BytePoly_32 = bigint_add!(bigint_sub!(x4, x3454, 32), x1, 32);
    let x3462: BytePoly_32 = bigint_nondet_inv!(ctx, x3461, x1, 32);
    let x3463: BytePoly_64 = bigint_mul!(x3461, x3462, 64);
    let x3464: BytePoly_34 = bigint_nondet_quot!(ctx, x3463, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x3463, bigint_mul!(x3464, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x3465: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3460, x3462, 64), x1, 32);
    let x3466: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x3465, x3461, 64), x3460, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x3467: BytePoly_34 = bigint_nondet_quot!(ctx, x3466, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x3466, bigint_mul!(x3467, x1, 66), 66),
        276359,
        4,
    )?;
    let x3468: BytePoly_64 = bigint_mul!(x3465, x3465, 64);
    let x3469: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3468, x3454, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x3470: BytePoly_34 = bigint_nondet_quot!(ctx, x3469, x1, 34);
    let x3471: BytePoly_32 = bigint_nondet_rem!(ctx, x3469, x1, 32);
    let x3472: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x3465, x3471, 64),
                        bigint_add!(
                            bigint_sub!(x3457, bigint_mul!(x3465, x3454, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x3473: BytePoly_34 = bigint_nondet_quot!(ctx, x3472, x1, 34);
    let x3474: BytePoly_32 = bigint_nondet_rem!(ctx, x3472, x1, 32);
    let x3475: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3468, bigint_mul!(x3470, x1, 66), 66),
                        x3454,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x3471,
        66
    );
    eqz(ctx, &x3475, 276359, 4)?;
    let x3476: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x3473, x1, 66), x3474, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3465, bigint_sub!(x3454, x3471, 32), 64),
                        x3457,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x3476, 276359, 4)?;
    let x3477: BytePoly_32 = bigint_add!(bigint_sub!(x5, x3474, 32), x1, 32);
    let x3478: BytePoly_32 = bigint_add!(bigint_sub!(x4, x3471, 32), x1, 32);
    let x3479: BytePoly_32 = bigint_nondet_inv!(ctx, x3478, x1, 32);
    let x3480: BytePoly_64 = bigint_mul!(x3478, x3479, 64);
    let x3481: BytePoly_34 = bigint_nondet_quot!(ctx, x3480, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x3480, bigint_mul!(x3481, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x3482: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3477, x3479, 64), x1, 32);
    let x3483: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x3482, x3478, 64), x3477, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x3484: BytePoly_34 = bigint_nondet_quot!(ctx, x3483, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x3483, bigint_mul!(x3484, x1, 66), 66),
        276359,
        4,
    )?;
    let x3485: BytePoly_64 = bigint_mul!(x3482, x3482, 64);
    let x3486: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3485, x3471, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x3487: BytePoly_34 = bigint_nondet_quot!(ctx, x3486, x1, 34);
    let x3488: BytePoly_32 = bigint_nondet_rem!(ctx, x3486, x1, 32);
    let x3489: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x3482, x3488, 64),
                        bigint_add!(
                            bigint_sub!(x3474, bigint_mul!(x3482, x3471, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x3490: BytePoly_34 = bigint_nondet_quot!(ctx, x3489, x1, 34);
    let x3491: BytePoly_32 = bigint_nondet_rem!(ctx, x3489, x1, 32);
    let x3492: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3485, bigint_mul!(x3487, x1, 66), 66),
                        x3471,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x3488,
        66
    );
    eqz(ctx, &x3492, 276359, 4)?;
    let x3493: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x3490, x1, 66), x3491, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3482, bigint_sub!(x3471, x3488, 32), 64),
                        x3474,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x3493, 276359, 4)?;
    let x3494: BytePoly_32 = bigint_add!(bigint_sub!(x5, x3491, 32), x1, 32);
    let x3495: BytePoly_32 = bigint_add!(bigint_sub!(x4, x3488, 32), x1, 32);
    let x3496: BytePoly_32 = bigint_nondet_inv!(ctx, x3495, x1, 32);
    let x3497: BytePoly_64 = bigint_mul!(x3495, x3496, 64);
    let x3498: BytePoly_34 = bigint_nondet_quot!(ctx, x3497, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x3497, bigint_mul!(x3498, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x3499: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3494, x3496, 64), x1, 32);
    let x3500: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x3499, x3495, 64), x3494, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x3501: BytePoly_34 = bigint_nondet_quot!(ctx, x3500, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x3500, bigint_mul!(x3501, x1, 66), 66),
        276359,
        4,
    )?;
    let x3502: BytePoly_64 = bigint_mul!(x3499, x3499, 64);
    let x3503: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3502, x3488, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x3504: BytePoly_34 = bigint_nondet_quot!(ctx, x3503, x1, 34);
    let x3505: BytePoly_32 = bigint_nondet_rem!(ctx, x3503, x1, 32);
    let x3506: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x3499, x3505, 64),
                        bigint_add!(
                            bigint_sub!(x3491, bigint_mul!(x3499, x3488, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x3507: BytePoly_34 = bigint_nondet_quot!(ctx, x3506, x1, 34);
    let x3508: BytePoly_32 = bigint_nondet_rem!(ctx, x3506, x1, 32);
    let x3509: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3502, bigint_mul!(x3504, x1, 66), 66),
                        x3488,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x3505,
        66
    );
    eqz(ctx, &x3509, 276359, 4)?;
    let x3510: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x3507, x1, 66), x3508, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3499, bigint_sub!(x3488, x3505, 32), 64),
                        x3491,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x3510, 276359, 4)?;
    let x3511: BytePoly_32 = bigint_add!(bigint_sub!(x5, x3508, 32), x1, 32);
    let x3512: BytePoly_32 = bigint_add!(bigint_sub!(x4, x3505, 32), x1, 32);
    let x3513: BytePoly_32 = bigint_nondet_inv!(ctx, x3512, x1, 32);
    let x3514: BytePoly_64 = bigint_mul!(x3512, x3513, 64);
    let x3515: BytePoly_34 = bigint_nondet_quot!(ctx, x3514, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x3514, bigint_mul!(x3515, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x3516: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3511, x3513, 64), x1, 32);
    let x3517: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x3516, x3512, 64), x3511, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x3518: BytePoly_34 = bigint_nondet_quot!(ctx, x3517, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x3517, bigint_mul!(x3518, x1, 66), 66),
        276359,
        4,
    )?;
    let x3519: BytePoly_64 = bigint_mul!(x3516, x3516, 64);
    let x3520: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3519, x3505, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x3521: BytePoly_34 = bigint_nondet_quot!(ctx, x3520, x1, 34);
    let x3522: BytePoly_32 = bigint_nondet_rem!(ctx, x3520, x1, 32);
    let x3523: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x3516, x3522, 64),
                        bigint_add!(
                            bigint_sub!(x3508, bigint_mul!(x3516, x3505, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x3524: BytePoly_34 = bigint_nondet_quot!(ctx, x3523, x1, 34);
    let x3525: BytePoly_32 = bigint_nondet_rem!(ctx, x3523, x1, 32);
    let x3526: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3519, bigint_mul!(x3521, x1, 66), 66),
                        x3505,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x3522,
        66
    );
    eqz(ctx, &x3526, 276359, 4)?;
    let x3527: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x3524, x1, 66), x3525, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3516, bigint_sub!(x3505, x3522, 32), 64),
                        x3508,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x3527, 276359, 4)?;
    let x3528: BytePoly_32 = bigint_add!(bigint_sub!(x5, x3525, 32), x1, 32);
    let x3529: BytePoly_32 = bigint_add!(bigint_sub!(x4, x3522, 32), x1, 32);
    let x3530: BytePoly_32 = bigint_nondet_inv!(ctx, x3529, x1, 32);
    let x3531: BytePoly_64 = bigint_mul!(x3529, x3530, 64);
    let x3532: BytePoly_34 = bigint_nondet_quot!(ctx, x3531, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x3531, bigint_mul!(x3532, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x3533: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3528, x3530, 64), x1, 32);
    let x3534: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x3533, x3529, 64), x3528, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x3535: BytePoly_34 = bigint_nondet_quot!(ctx, x3534, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x3534, bigint_mul!(x3535, x1, 66), 66),
        276359,
        4,
    )?;
    let x3536: BytePoly_64 = bigint_mul!(x3533, x3533, 64);
    let x3537: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3536, x3522, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x3538: BytePoly_34 = bigint_nondet_quot!(ctx, x3537, x1, 34);
    let x3539: BytePoly_32 = bigint_nondet_rem!(ctx, x3537, x1, 32);
    let x3540: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x3533, x3539, 64),
                        bigint_add!(
                            bigint_sub!(x3525, bigint_mul!(x3533, x3522, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x3541: BytePoly_34 = bigint_nondet_quot!(ctx, x3540, x1, 34);
    let x3542: BytePoly_32 = bigint_nondet_rem!(ctx, x3540, x1, 32);
    let x3543: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3536, bigint_mul!(x3538, x1, 66), 66),
                        x3522,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x3539,
        66
    );
    eqz(ctx, &x3543, 276359, 4)?;
    let x3544: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x3541, x1, 66), x3542, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3533, bigint_sub!(x3522, x3539, 32), 64),
                        x3525,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x3544, 276359, 4)?;
    let x3545: BytePoly_32 = bigint_add!(bigint_sub!(x5, x3542, 32), x1, 32);
    let x3546: BytePoly_32 = bigint_add!(bigint_sub!(x4, x3539, 32), x1, 32);
    let x3547: BytePoly_32 = bigint_nondet_inv!(ctx, x3546, x1, 32);
    let x3548: BytePoly_64 = bigint_mul!(x3546, x3547, 64);
    let x3549: BytePoly_34 = bigint_nondet_quot!(ctx, x3548, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x3548, bigint_mul!(x3549, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x3550: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3545, x3547, 64), x1, 32);
    let x3551: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x3550, x3546, 64), x3545, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x3552: BytePoly_34 = bigint_nondet_quot!(ctx, x3551, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x3551, bigint_mul!(x3552, x1, 66), 66),
        276359,
        4,
    )?;
    let x3553: BytePoly_64 = bigint_mul!(x3550, x3550, 64);
    let x3554: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3553, x3539, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x3555: BytePoly_34 = bigint_nondet_quot!(ctx, x3554, x1, 34);
    let x3556: BytePoly_32 = bigint_nondet_rem!(ctx, x3554, x1, 32);
    let x3557: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x3550, x3556, 64),
                        bigint_add!(
                            bigint_sub!(x3542, bigint_mul!(x3550, x3539, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x3558: BytePoly_34 = bigint_nondet_quot!(ctx, x3557, x1, 34);
    let x3559: BytePoly_32 = bigint_nondet_rem!(ctx, x3557, x1, 32);
    let x3560: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3553, bigint_mul!(x3555, x1, 66), 66),
                        x3539,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x3556,
        66
    );
    eqz(ctx, &x3560, 276359, 4)?;
    let x3561: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x3558, x1, 66), x3559, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3550, bigint_sub!(x3539, x3556, 32), 64),
                        x3542,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x3561, 276359, 4)?;
    let x3562: BytePoly_32 = bigint_add!(bigint_sub!(x5, x3559, 32), x1, 32);
    let x3563: BytePoly_32 = bigint_add!(bigint_sub!(x4, x3556, 32), x1, 32);
    let x3564: BytePoly_32 = bigint_nondet_inv!(ctx, x3563, x1, 32);
    let x3565: BytePoly_64 = bigint_mul!(x3563, x3564, 64);
    let x3566: BytePoly_34 = bigint_nondet_quot!(ctx, x3565, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x3565, bigint_mul!(x3566, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x3567: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3562, x3564, 64), x1, 32);
    let x3568: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x3567, x3563, 64), x3562, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x3569: BytePoly_34 = bigint_nondet_quot!(ctx, x3568, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x3568, bigint_mul!(x3569, x1, 66), 66),
        276359,
        4,
    )?;
    let x3570: BytePoly_64 = bigint_mul!(x3567, x3567, 64);
    let x3571: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3570, x3556, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x3572: BytePoly_34 = bigint_nondet_quot!(ctx, x3571, x1, 34);
    let x3573: BytePoly_32 = bigint_nondet_rem!(ctx, x3571, x1, 32);
    let x3574: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x3567, x3573, 64),
                        bigint_add!(
                            bigint_sub!(x3559, bigint_mul!(x3567, x3556, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x3575: BytePoly_34 = bigint_nondet_quot!(ctx, x3574, x1, 34);
    let x3576: BytePoly_32 = bigint_nondet_rem!(ctx, x3574, x1, 32);
    let x3577: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3570, bigint_mul!(x3572, x1, 66), 66),
                        x3556,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x3573,
        66
    );
    eqz(ctx, &x3577, 276359, 4)?;
    let x3578: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x3575, x1, 66), x3576, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3567, bigint_sub!(x3556, x3573, 32), 64),
                        x3559,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x3578, 276359, 4)?;
    let x3579: BytePoly_32 = bigint_add!(bigint_sub!(x5, x3576, 32), x1, 32);
    let x3580: BytePoly_32 = bigint_add!(bigint_sub!(x4, x3573, 32), x1, 32);
    let x3581: BytePoly_32 = bigint_nondet_inv!(ctx, x3580, x1, 32);
    let x3582: BytePoly_64 = bigint_mul!(x3580, x3581, 64);
    let x3583: BytePoly_34 = bigint_nondet_quot!(ctx, x3582, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x3582, bigint_mul!(x3583, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x3584: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3579, x3581, 64), x1, 32);
    let x3585: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x3584, x3580, 64), x3579, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x3586: BytePoly_34 = bigint_nondet_quot!(ctx, x3585, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x3585, bigint_mul!(x3586, x1, 66), 66),
        276359,
        4,
    )?;
    let x3587: BytePoly_64 = bigint_mul!(x3584, x3584, 64);
    let x3588: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3587, x3573, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x3589: BytePoly_34 = bigint_nondet_quot!(ctx, x3588, x1, 34);
    let x3590: BytePoly_32 = bigint_nondet_rem!(ctx, x3588, x1, 32);
    let x3591: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x3584, x3590, 64),
                        bigint_add!(
                            bigint_sub!(x3576, bigint_mul!(x3584, x3573, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x3592: BytePoly_34 = bigint_nondet_quot!(ctx, x3591, x1, 34);
    let x3593: BytePoly_32 = bigint_nondet_rem!(ctx, x3591, x1, 32);
    let x3594: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3587, bigint_mul!(x3589, x1, 66), 66),
                        x3573,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x3590,
        66
    );
    eqz(ctx, &x3594, 276359, 4)?;
    let x3595: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x3592, x1, 66), x3593, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3584, bigint_sub!(x3573, x3590, 32), 64),
                        x3576,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x3595, 276359, 4)?;
    let x3596: BytePoly_32 = bigint_add!(bigint_sub!(x5, x3593, 32), x1, 32);
    let x3597: BytePoly_32 = bigint_add!(bigint_sub!(x4, x3590, 32), x1, 32);
    let x3598: BytePoly_32 = bigint_nondet_inv!(ctx, x3597, x1, 32);
    let x3599: BytePoly_64 = bigint_mul!(x3597, x3598, 64);
    let x3600: BytePoly_34 = bigint_nondet_quot!(ctx, x3599, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x3599, bigint_mul!(x3600, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x3601: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3596, x3598, 64), x1, 32);
    let x3602: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x3601, x3597, 64), x3596, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x3603: BytePoly_34 = bigint_nondet_quot!(ctx, x3602, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x3602, bigint_mul!(x3603, x1, 66), 66),
        276359,
        4,
    )?;
    let x3604: BytePoly_64 = bigint_mul!(x3601, x3601, 64);
    let x3605: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3604, x3590, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x3606: BytePoly_34 = bigint_nondet_quot!(ctx, x3605, x1, 34);
    let x3607: BytePoly_32 = bigint_nondet_rem!(ctx, x3605, x1, 32);
    let x3608: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x3601, x3607, 64),
                        bigint_add!(
                            bigint_sub!(x3593, bigint_mul!(x3601, x3590, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x3609: BytePoly_34 = bigint_nondet_quot!(ctx, x3608, x1, 34);
    let x3610: BytePoly_32 = bigint_nondet_rem!(ctx, x3608, x1, 32);
    let x3611: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3604, bigint_mul!(x3606, x1, 66), 66),
                        x3590,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x3607,
        66
    );
    eqz(ctx, &x3611, 276359, 4)?;
    let x3612: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x3609, x1, 66), x3610, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3601, bigint_sub!(x3590, x3607, 32), 64),
                        x3593,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x3612, 276359, 4)?;
    let x3613: BytePoly_32 = bigint_add!(bigint_sub!(x5, x3610, 32), x1, 32);
    let x3614: BytePoly_32 = bigint_add!(bigint_sub!(x4, x3607, 32), x1, 32);
    let x3615: BytePoly_32 = bigint_nondet_inv!(ctx, x3614, x1, 32);
    let x3616: BytePoly_64 = bigint_mul!(x3614, x3615, 64);
    let x3617: BytePoly_34 = bigint_nondet_quot!(ctx, x3616, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x3616, bigint_mul!(x3617, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x3618: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3613, x3615, 64), x1, 32);
    let x3619: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x3618, x3614, 64), x3613, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x3620: BytePoly_34 = bigint_nondet_quot!(ctx, x3619, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x3619, bigint_mul!(x3620, x1, 66), 66),
        276359,
        4,
    )?;
    let x3621: BytePoly_64 = bigint_mul!(x3618, x3618, 64);
    let x3622: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3621, x3607, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x3623: BytePoly_34 = bigint_nondet_quot!(ctx, x3622, x1, 34);
    let x3624: BytePoly_32 = bigint_nondet_rem!(ctx, x3622, x1, 32);
    let x3625: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x3618, x3624, 64),
                        bigint_add!(
                            bigint_sub!(x3610, bigint_mul!(x3618, x3607, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x3626: BytePoly_34 = bigint_nondet_quot!(ctx, x3625, x1, 34);
    let x3627: BytePoly_32 = bigint_nondet_rem!(ctx, x3625, x1, 32);
    let x3628: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3621, bigint_mul!(x3623, x1, 66), 66),
                        x3607,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x3624,
        66
    );
    eqz(ctx, &x3628, 276359, 4)?;
    let x3629: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x3626, x1, 66), x3627, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3618, bigint_sub!(x3607, x3624, 32), 64),
                        x3610,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x3629, 276359, 4)?;
    let x3630: BytePoly_32 = bigint_add!(bigint_sub!(x5, x3627, 32), x1, 32);
    let x3631: BytePoly_32 = bigint_add!(bigint_sub!(x4, x3624, 32), x1, 32);
    let x3632: BytePoly_32 = bigint_nondet_inv!(ctx, x3631, x1, 32);
    let x3633: BytePoly_64 = bigint_mul!(x3631, x3632, 64);
    let x3634: BytePoly_34 = bigint_nondet_quot!(ctx, x3633, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x3633, bigint_mul!(x3634, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x3635: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3630, x3632, 64), x1, 32);
    let x3636: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x3635, x3631, 64), x3630, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x3637: BytePoly_34 = bigint_nondet_quot!(ctx, x3636, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x3636, bigint_mul!(x3637, x1, 66), 66),
        276359,
        4,
    )?;
    let x3638: BytePoly_64 = bigint_mul!(x3635, x3635, 64);
    let x3639: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3638, x3624, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x3640: BytePoly_34 = bigint_nondet_quot!(ctx, x3639, x1, 34);
    let x3641: BytePoly_32 = bigint_nondet_rem!(ctx, x3639, x1, 32);
    let x3642: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x3635, x3641, 64),
                        bigint_add!(
                            bigint_sub!(x3627, bigint_mul!(x3635, x3624, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x3643: BytePoly_34 = bigint_nondet_quot!(ctx, x3642, x1, 34);
    let x3644: BytePoly_32 = bigint_nondet_rem!(ctx, x3642, x1, 32);
    let x3645: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3638, bigint_mul!(x3640, x1, 66), 66),
                        x3624,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x3641,
        66
    );
    eqz(ctx, &x3645, 276359, 4)?;
    let x3646: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x3643, x1, 66), x3644, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3635, bigint_sub!(x3624, x3641, 32), 64),
                        x3627,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x3646, 276359, 4)?;
    let x3647: BytePoly_32 = bigint_add!(bigint_sub!(x5, x3644, 32), x1, 32);
    let x3648: BytePoly_32 = bigint_add!(bigint_sub!(x4, x3641, 32), x1, 32);
    let x3649: BytePoly_32 = bigint_nondet_inv!(ctx, x3648, x1, 32);
    let x3650: BytePoly_64 = bigint_mul!(x3648, x3649, 64);
    let x3651: BytePoly_34 = bigint_nondet_quot!(ctx, x3650, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x3650, bigint_mul!(x3651, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x3652: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3647, x3649, 64), x1, 32);
    let x3653: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x3652, x3648, 64), x3647, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x3654: BytePoly_34 = bigint_nondet_quot!(ctx, x3653, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x3653, bigint_mul!(x3654, x1, 66), 66),
        276359,
        4,
    )?;
    let x3655: BytePoly_64 = bigint_mul!(x3652, x3652, 64);
    let x3656: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3655, x3641, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x3657: BytePoly_34 = bigint_nondet_quot!(ctx, x3656, x1, 34);
    let x3658: BytePoly_32 = bigint_nondet_rem!(ctx, x3656, x1, 32);
    let x3659: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x3652, x3658, 64),
                        bigint_add!(
                            bigint_sub!(x3644, bigint_mul!(x3652, x3641, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x3660: BytePoly_34 = bigint_nondet_quot!(ctx, x3659, x1, 34);
    let x3661: BytePoly_32 = bigint_nondet_rem!(ctx, x3659, x1, 32);
    let x3662: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3655, bigint_mul!(x3657, x1, 66), 66),
                        x3641,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x3658,
        66
    );
    eqz(ctx, &x3662, 276359, 4)?;
    let x3663: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x3660, x1, 66), x3661, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3652, bigint_sub!(x3641, x3658, 32), 64),
                        x3644,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x3663, 276359, 4)?;
    let x3664: BytePoly_32 = bigint_add!(bigint_sub!(x5, x3661, 32), x1, 32);
    let x3665: BytePoly_32 = bigint_add!(bigint_sub!(x4, x3658, 32), x1, 32);
    let x3666: BytePoly_32 = bigint_nondet_inv!(ctx, x3665, x1, 32);
    let x3667: BytePoly_64 = bigint_mul!(x3665, x3666, 64);
    let x3668: BytePoly_34 = bigint_nondet_quot!(ctx, x3667, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x3667, bigint_mul!(x3668, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x3669: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3664, x3666, 64), x1, 32);
    let x3670: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x3669, x3665, 64), x3664, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x3671: BytePoly_34 = bigint_nondet_quot!(ctx, x3670, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x3670, bigint_mul!(x3671, x1, 66), 66),
        276359,
        4,
    )?;
    let x3672: BytePoly_64 = bigint_mul!(x3669, x3669, 64);
    let x3673: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3672, x3658, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x3674: BytePoly_34 = bigint_nondet_quot!(ctx, x3673, x1, 34);
    let x3675: BytePoly_32 = bigint_nondet_rem!(ctx, x3673, x1, 32);
    let x3676: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x3669, x3675, 64),
                        bigint_add!(
                            bigint_sub!(x3661, bigint_mul!(x3669, x3658, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x3677: BytePoly_34 = bigint_nondet_quot!(ctx, x3676, x1, 34);
    let x3678: BytePoly_32 = bigint_nondet_rem!(ctx, x3676, x1, 32);
    let x3679: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3672, bigint_mul!(x3674, x1, 66), 66),
                        x3658,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x3675,
        66
    );
    eqz(ctx, &x3679, 276359, 4)?;
    let x3680: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x3677, x1, 66), x3678, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3669, bigint_sub!(x3658, x3675, 32), 64),
                        x3661,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x3680, 276359, 4)?;
    let x3681: BytePoly_32 = bigint_add!(bigint_sub!(x5, x3678, 32), x1, 32);
    let x3682: BytePoly_32 = bigint_add!(bigint_sub!(x4, x3675, 32), x1, 32);
    let x3683: BytePoly_32 = bigint_nondet_inv!(ctx, x3682, x1, 32);
    let x3684: BytePoly_64 = bigint_mul!(x3682, x3683, 64);
    let x3685: BytePoly_34 = bigint_nondet_quot!(ctx, x3684, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x3684, bigint_mul!(x3685, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x3686: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3681, x3683, 64), x1, 32);
    let x3687: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x3686, x3682, 64), x3681, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x3688: BytePoly_34 = bigint_nondet_quot!(ctx, x3687, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x3687, bigint_mul!(x3688, x1, 66), 66),
        276359,
        4,
    )?;
    let x3689: BytePoly_64 = bigint_mul!(x3686, x3686, 64);
    let x3690: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3689, x3675, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x3691: BytePoly_34 = bigint_nondet_quot!(ctx, x3690, x1, 34);
    let x3692: BytePoly_32 = bigint_nondet_rem!(ctx, x3690, x1, 32);
    let x3693: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x3686, x3692, 64),
                        bigint_add!(
                            bigint_sub!(x3678, bigint_mul!(x3686, x3675, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x3694: BytePoly_34 = bigint_nondet_quot!(ctx, x3693, x1, 34);
    let x3695: BytePoly_32 = bigint_nondet_rem!(ctx, x3693, x1, 32);
    let x3696: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3689, bigint_mul!(x3691, x1, 66), 66),
                        x3675,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x3692,
        66
    );
    eqz(ctx, &x3696, 276359, 4)?;
    let x3697: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x3694, x1, 66), x3695, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3686, bigint_sub!(x3675, x3692, 32), 64),
                        x3678,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x3697, 276359, 4)?;
    let x3698: BytePoly_32 = bigint_add!(bigint_sub!(x5, x3695, 32), x1, 32);
    let x3699: BytePoly_32 = bigint_add!(bigint_sub!(x4, x3692, 32), x1, 32);
    let x3700: BytePoly_32 = bigint_nondet_inv!(ctx, x3699, x1, 32);
    let x3701: BytePoly_64 = bigint_mul!(x3699, x3700, 64);
    let x3702: BytePoly_34 = bigint_nondet_quot!(ctx, x3701, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x3701, bigint_mul!(x3702, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x3703: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3698, x3700, 64), x1, 32);
    let x3704: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x3703, x3699, 64), x3698, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x3705: BytePoly_34 = bigint_nondet_quot!(ctx, x3704, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x3704, bigint_mul!(x3705, x1, 66), 66),
        276359,
        4,
    )?;
    let x3706: BytePoly_64 = bigint_mul!(x3703, x3703, 64);
    let x3707: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3706, x3692, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x3708: BytePoly_34 = bigint_nondet_quot!(ctx, x3707, x1, 34);
    let x3709: BytePoly_32 = bigint_nondet_rem!(ctx, x3707, x1, 32);
    let x3710: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x3703, x3709, 64),
                        bigint_add!(
                            bigint_sub!(x3695, bigint_mul!(x3703, x3692, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x3711: BytePoly_34 = bigint_nondet_quot!(ctx, x3710, x1, 34);
    let x3712: BytePoly_32 = bigint_nondet_rem!(ctx, x3710, x1, 32);
    let x3713: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3706, bigint_mul!(x3708, x1, 66), 66),
                        x3692,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x3709,
        66
    );
    eqz(ctx, &x3713, 276359, 4)?;
    let x3714: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x3711, x1, 66), x3712, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3703, bigint_sub!(x3692, x3709, 32), 64),
                        x3695,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x3714, 276359, 4)?;
    let x3715: BytePoly_32 = bigint_add!(bigint_sub!(x5, x3712, 32), x1, 32);
    let x3716: BytePoly_32 = bigint_add!(bigint_sub!(x4, x3709, 32), x1, 32);
    let x3717: BytePoly_32 = bigint_nondet_inv!(ctx, x3716, x1, 32);
    let x3718: BytePoly_64 = bigint_mul!(x3716, x3717, 64);
    let x3719: BytePoly_34 = bigint_nondet_quot!(ctx, x3718, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x3718, bigint_mul!(x3719, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x3720: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3715, x3717, 64), x1, 32);
    let x3721: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x3720, x3716, 64), x3715, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x3722: BytePoly_34 = bigint_nondet_quot!(ctx, x3721, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x3721, bigint_mul!(x3722, x1, 66), 66),
        276359,
        4,
    )?;
    let x3723: BytePoly_64 = bigint_mul!(x3720, x3720, 64);
    let x3724: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3723, x3709, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x3725: BytePoly_34 = bigint_nondet_quot!(ctx, x3724, x1, 34);
    let x3726: BytePoly_32 = bigint_nondet_rem!(ctx, x3724, x1, 32);
    let x3727: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x3720, x3726, 64),
                        bigint_add!(
                            bigint_sub!(x3712, bigint_mul!(x3720, x3709, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x3728: BytePoly_34 = bigint_nondet_quot!(ctx, x3727, x1, 34);
    let x3729: BytePoly_32 = bigint_nondet_rem!(ctx, x3727, x1, 32);
    let x3730: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3723, bigint_mul!(x3725, x1, 66), 66),
                        x3709,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x3726,
        66
    );
    eqz(ctx, &x3730, 276359, 4)?;
    let x3731: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x3728, x1, 66), x3729, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3720, bigint_sub!(x3709, x3726, 32), 64),
                        x3712,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x3731, 276359, 4)?;
    let x3732: BytePoly_32 = bigint_add!(bigint_sub!(x5, x3729, 32), x1, 32);
    let x3733: BytePoly_32 = bigint_add!(bigint_sub!(x4, x3726, 32), x1, 32);
    let x3734: BytePoly_32 = bigint_nondet_inv!(ctx, x3733, x1, 32);
    let x3735: BytePoly_64 = bigint_mul!(x3733, x3734, 64);
    let x3736: BytePoly_34 = bigint_nondet_quot!(ctx, x3735, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x3735, bigint_mul!(x3736, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x3737: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3732, x3734, 64), x1, 32);
    let x3738: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x3737, x3733, 64), x3732, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x3739: BytePoly_34 = bigint_nondet_quot!(ctx, x3738, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x3738, bigint_mul!(x3739, x1, 66), 66),
        276359,
        4,
    )?;
    let x3740: BytePoly_64 = bigint_mul!(x3737, x3737, 64);
    let x3741: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3740, x3726, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x3742: BytePoly_34 = bigint_nondet_quot!(ctx, x3741, x1, 34);
    let x3743: BytePoly_32 = bigint_nondet_rem!(ctx, x3741, x1, 32);
    let x3744: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x3737, x3743, 64),
                        bigint_add!(
                            bigint_sub!(x3729, bigint_mul!(x3737, x3726, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x3745: BytePoly_34 = bigint_nondet_quot!(ctx, x3744, x1, 34);
    let x3746: BytePoly_32 = bigint_nondet_rem!(ctx, x3744, x1, 32);
    let x3747: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3740, bigint_mul!(x3742, x1, 66), 66),
                        x3726,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x3743,
        66
    );
    eqz(ctx, &x3747, 276359, 4)?;
    let x3748: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x3745, x1, 66), x3746, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3737, bigint_sub!(x3726, x3743, 32), 64),
                        x3729,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x3748, 276359, 4)?;
    let x3749: BytePoly_32 = bigint_add!(bigint_sub!(x5, x3746, 32), x1, 32);
    let x3750: BytePoly_32 = bigint_add!(bigint_sub!(x4, x3743, 32), x1, 32);
    let x3751: BytePoly_32 = bigint_nondet_inv!(ctx, x3750, x1, 32);
    let x3752: BytePoly_64 = bigint_mul!(x3750, x3751, 64);
    let x3753: BytePoly_34 = bigint_nondet_quot!(ctx, x3752, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x3752, bigint_mul!(x3753, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x3754: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3749, x3751, 64), x1, 32);
    let x3755: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x3754, x3750, 64), x3749, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x3756: BytePoly_34 = bigint_nondet_quot!(ctx, x3755, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x3755, bigint_mul!(x3756, x1, 66), 66),
        276359,
        4,
    )?;
    let x3757: BytePoly_64 = bigint_mul!(x3754, x3754, 64);
    let x3758: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3757, x3743, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x3759: BytePoly_34 = bigint_nondet_quot!(ctx, x3758, x1, 34);
    let x3760: BytePoly_32 = bigint_nondet_rem!(ctx, x3758, x1, 32);
    let x3761: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x3754, x3760, 64),
                        bigint_add!(
                            bigint_sub!(x3746, bigint_mul!(x3754, x3743, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x3762: BytePoly_34 = bigint_nondet_quot!(ctx, x3761, x1, 34);
    let x3763: BytePoly_32 = bigint_nondet_rem!(ctx, x3761, x1, 32);
    let x3764: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3757, bigint_mul!(x3759, x1, 66), 66),
                        x3743,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x3760,
        66
    );
    eqz(ctx, &x3764, 276359, 4)?;
    let x3765: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x3762, x1, 66), x3763, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3754, bigint_sub!(x3743, x3760, 32), 64),
                        x3746,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x3765, 276359, 4)?;
    let x3766: BytePoly_32 = bigint_add!(bigint_sub!(x5, x3763, 32), x1, 32);
    let x3767: BytePoly_32 = bigint_add!(bigint_sub!(x4, x3760, 32), x1, 32);
    let x3768: BytePoly_32 = bigint_nondet_inv!(ctx, x3767, x1, 32);
    let x3769: BytePoly_64 = bigint_mul!(x3767, x3768, 64);
    let x3770: BytePoly_34 = bigint_nondet_quot!(ctx, x3769, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x3769, bigint_mul!(x3770, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x3771: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3766, x3768, 64), x1, 32);
    let x3772: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x3771, x3767, 64), x3766, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x3773: BytePoly_34 = bigint_nondet_quot!(ctx, x3772, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x3772, bigint_mul!(x3773, x1, 66), 66),
        276359,
        4,
    )?;
    let x3774: BytePoly_64 = bigint_mul!(x3771, x3771, 64);
    let x3775: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3774, x3760, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x3776: BytePoly_34 = bigint_nondet_quot!(ctx, x3775, x1, 34);
    let x3777: BytePoly_32 = bigint_nondet_rem!(ctx, x3775, x1, 32);
    let x3778: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x3771, x3777, 64),
                        bigint_add!(
                            bigint_sub!(x3763, bigint_mul!(x3771, x3760, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x3779: BytePoly_34 = bigint_nondet_quot!(ctx, x3778, x1, 34);
    let x3780: BytePoly_32 = bigint_nondet_rem!(ctx, x3778, x1, 32);
    let x3781: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3774, bigint_mul!(x3776, x1, 66), 66),
                        x3760,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x3777,
        66
    );
    eqz(ctx, &x3781, 276359, 4)?;
    let x3782: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x3779, x1, 66), x3780, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3771, bigint_sub!(x3760, x3777, 32), 64),
                        x3763,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x3782, 276359, 4)?;
    let x3783: BytePoly_32 = bigint_add!(bigint_sub!(x5, x3780, 32), x1, 32);
    let x3784: BytePoly_32 = bigint_add!(bigint_sub!(x4, x3777, 32), x1, 32);
    let x3785: BytePoly_32 = bigint_nondet_inv!(ctx, x3784, x1, 32);
    let x3786: BytePoly_64 = bigint_mul!(x3784, x3785, 64);
    let x3787: BytePoly_34 = bigint_nondet_quot!(ctx, x3786, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x3786, bigint_mul!(x3787, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x3788: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3783, x3785, 64), x1, 32);
    let x3789: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x3788, x3784, 64), x3783, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x3790: BytePoly_34 = bigint_nondet_quot!(ctx, x3789, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x3789, bigint_mul!(x3790, x1, 66), 66),
        276359,
        4,
    )?;
    let x3791: BytePoly_64 = bigint_mul!(x3788, x3788, 64);
    let x3792: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3791, x3777, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x3793: BytePoly_34 = bigint_nondet_quot!(ctx, x3792, x1, 34);
    let x3794: BytePoly_32 = bigint_nondet_rem!(ctx, x3792, x1, 32);
    let x3795: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x3788, x3794, 64),
                        bigint_add!(
                            bigint_sub!(x3780, bigint_mul!(x3788, x3777, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x3796: BytePoly_34 = bigint_nondet_quot!(ctx, x3795, x1, 34);
    let x3797: BytePoly_32 = bigint_nondet_rem!(ctx, x3795, x1, 32);
    let x3798: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3791, bigint_mul!(x3793, x1, 66), 66),
                        x3777,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x3794,
        66
    );
    eqz(ctx, &x3798, 276359, 4)?;
    let x3799: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x3796, x1, 66), x3797, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3788, bigint_sub!(x3777, x3794, 32), 64),
                        x3780,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x3799, 276359, 4)?;
    let x3800: BytePoly_32 = bigint_add!(bigint_sub!(x5, x3797, 32), x1, 32);
    let x3801: BytePoly_32 = bigint_add!(bigint_sub!(x4, x3794, 32), x1, 32);
    let x3802: BytePoly_32 = bigint_nondet_inv!(ctx, x3801, x1, 32);
    let x3803: BytePoly_64 = bigint_mul!(x3801, x3802, 64);
    let x3804: BytePoly_34 = bigint_nondet_quot!(ctx, x3803, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x3803, bigint_mul!(x3804, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x3805: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3800, x3802, 64), x1, 32);
    let x3806: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x3805, x3801, 64), x3800, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x3807: BytePoly_34 = bigint_nondet_quot!(ctx, x3806, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x3806, bigint_mul!(x3807, x1, 66), 66),
        276359,
        4,
    )?;
    let x3808: BytePoly_64 = bigint_mul!(x3805, x3805, 64);
    let x3809: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3808, x3794, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x3810: BytePoly_34 = bigint_nondet_quot!(ctx, x3809, x1, 34);
    let x3811: BytePoly_32 = bigint_nondet_rem!(ctx, x3809, x1, 32);
    let x3812: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x3805, x3811, 64),
                        bigint_add!(
                            bigint_sub!(x3797, bigint_mul!(x3805, x3794, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x3813: BytePoly_34 = bigint_nondet_quot!(ctx, x3812, x1, 34);
    let x3814: BytePoly_32 = bigint_nondet_rem!(ctx, x3812, x1, 32);
    let x3815: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3808, bigint_mul!(x3810, x1, 66), 66),
                        x3794,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x3811,
        66
    );
    eqz(ctx, &x3815, 276359, 4)?;
    let x3816: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x3813, x1, 66), x3814, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3805, bigint_sub!(x3794, x3811, 32), 64),
                        x3797,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x3816, 276359, 4)?;
    let x3817: BytePoly_32 = bigint_add!(bigint_sub!(x5, x3814, 32), x1, 32);
    let x3818: BytePoly_32 = bigint_add!(bigint_sub!(x4, x3811, 32), x1, 32);
    let x3819: BytePoly_32 = bigint_nondet_inv!(ctx, x3818, x1, 32);
    let x3820: BytePoly_64 = bigint_mul!(x3818, x3819, 64);
    let x3821: BytePoly_34 = bigint_nondet_quot!(ctx, x3820, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x3820, bigint_mul!(x3821, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x3822: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3817, x3819, 64), x1, 32);
    let x3823: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x3822, x3818, 64), x3817, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x3824: BytePoly_34 = bigint_nondet_quot!(ctx, x3823, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x3823, bigint_mul!(x3824, x1, 66), 66),
        276359,
        4,
    )?;
    let x3825: BytePoly_64 = bigint_mul!(x3822, x3822, 64);
    let x3826: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3825, x3811, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x3827: BytePoly_34 = bigint_nondet_quot!(ctx, x3826, x1, 34);
    let x3828: BytePoly_32 = bigint_nondet_rem!(ctx, x3826, x1, 32);
    let x3829: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x3822, x3828, 64),
                        bigint_add!(
                            bigint_sub!(x3814, bigint_mul!(x3822, x3811, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x3830: BytePoly_34 = bigint_nondet_quot!(ctx, x3829, x1, 34);
    let x3831: BytePoly_32 = bigint_nondet_rem!(ctx, x3829, x1, 32);
    let x3832: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3825, bigint_mul!(x3827, x1, 66), 66),
                        x3811,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x3828,
        66
    );
    eqz(ctx, &x3832, 276359, 4)?;
    let x3833: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x3830, x1, 66), x3831, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3822, bigint_sub!(x3811, x3828, 32), 64),
                        x3814,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x3833, 276359, 4)?;
    let x3834: BytePoly_32 = bigint_add!(bigint_sub!(x5, x3831, 32), x1, 32);
    let x3835: BytePoly_32 = bigint_add!(bigint_sub!(x4, x3828, 32), x1, 32);
    let x3836: BytePoly_32 = bigint_nondet_inv!(ctx, x3835, x1, 32);
    let x3837: BytePoly_64 = bigint_mul!(x3835, x3836, 64);
    let x3838: BytePoly_34 = bigint_nondet_quot!(ctx, x3837, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x3837, bigint_mul!(x3838, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x3839: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3834, x3836, 64), x1, 32);
    let x3840: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x3839, x3835, 64), x3834, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x3841: BytePoly_34 = bigint_nondet_quot!(ctx, x3840, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x3840, bigint_mul!(x3841, x1, 66), 66),
        276359,
        4,
    )?;
    let x3842: BytePoly_64 = bigint_mul!(x3839, x3839, 64);
    let x3843: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3842, x3828, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x3844: BytePoly_34 = bigint_nondet_quot!(ctx, x3843, x1, 34);
    let x3845: BytePoly_32 = bigint_nondet_rem!(ctx, x3843, x1, 32);
    let x3846: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x3839, x3845, 64),
                        bigint_add!(
                            bigint_sub!(x3831, bigint_mul!(x3839, x3828, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x3847: BytePoly_34 = bigint_nondet_quot!(ctx, x3846, x1, 34);
    let x3848: BytePoly_32 = bigint_nondet_rem!(ctx, x3846, x1, 32);
    let x3849: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3842, bigint_mul!(x3844, x1, 66), 66),
                        x3828,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x3845,
        66
    );
    eqz(ctx, &x3849, 276359, 4)?;
    let x3850: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x3847, x1, 66), x3848, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3839, bigint_sub!(x3828, x3845, 32), 64),
                        x3831,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x3850, 276359, 4)?;
    let x3851: BytePoly_32 = bigint_add!(bigint_sub!(x5, x3848, 32), x1, 32);
    let x3852: BytePoly_32 = bigint_add!(bigint_sub!(x4, x3845, 32), x1, 32);
    let x3853: BytePoly_32 = bigint_nondet_inv!(ctx, x3852, x1, 32);
    let x3854: BytePoly_64 = bigint_mul!(x3852, x3853, 64);
    let x3855: BytePoly_34 = bigint_nondet_quot!(ctx, x3854, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x3854, bigint_mul!(x3855, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x3856: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3851, x3853, 64), x1, 32);
    let x3857: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x3856, x3852, 64), x3851, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x3858: BytePoly_34 = bigint_nondet_quot!(ctx, x3857, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x3857, bigint_mul!(x3858, x1, 66), 66),
        276359,
        4,
    )?;
    let x3859: BytePoly_64 = bigint_mul!(x3856, x3856, 64);
    let x3860: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3859, x3845, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x3861: BytePoly_34 = bigint_nondet_quot!(ctx, x3860, x1, 34);
    let x3862: BytePoly_32 = bigint_nondet_rem!(ctx, x3860, x1, 32);
    let x3863: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x3856, x3862, 64),
                        bigint_add!(
                            bigint_sub!(x3848, bigint_mul!(x3856, x3845, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x3864: BytePoly_34 = bigint_nondet_quot!(ctx, x3863, x1, 34);
    let x3865: BytePoly_32 = bigint_nondet_rem!(ctx, x3863, x1, 32);
    let x3866: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3859, bigint_mul!(x3861, x1, 66), 66),
                        x3845,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x3862,
        66
    );
    eqz(ctx, &x3866, 276359, 4)?;
    let x3867: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x3864, x1, 66), x3865, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3856, bigint_sub!(x3845, x3862, 32), 64),
                        x3848,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x3867, 276359, 4)?;
    let x3868: BytePoly_32 = bigint_add!(bigint_sub!(x5, x3865, 32), x1, 32);
    let x3869: BytePoly_32 = bigint_add!(bigint_sub!(x4, x3862, 32), x1, 32);
    let x3870: BytePoly_32 = bigint_nondet_inv!(ctx, x3869, x1, 32);
    let x3871: BytePoly_64 = bigint_mul!(x3869, x3870, 64);
    let x3872: BytePoly_34 = bigint_nondet_quot!(ctx, x3871, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x3871, bigint_mul!(x3872, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x3873: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3868, x3870, 64), x1, 32);
    let x3874: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x3873, x3869, 64), x3868, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x3875: BytePoly_34 = bigint_nondet_quot!(ctx, x3874, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x3874, bigint_mul!(x3875, x1, 66), 66),
        276359,
        4,
    )?;
    let x3876: BytePoly_64 = bigint_mul!(x3873, x3873, 64);
    let x3877: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3876, x3862, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x3878: BytePoly_34 = bigint_nondet_quot!(ctx, x3877, x1, 34);
    let x3879: BytePoly_32 = bigint_nondet_rem!(ctx, x3877, x1, 32);
    let x3880: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x3873, x3879, 64),
                        bigint_add!(
                            bigint_sub!(x3865, bigint_mul!(x3873, x3862, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x3881: BytePoly_34 = bigint_nondet_quot!(ctx, x3880, x1, 34);
    let x3882: BytePoly_32 = bigint_nondet_rem!(ctx, x3880, x1, 32);
    let x3883: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3876, bigint_mul!(x3878, x1, 66), 66),
                        x3862,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x3879,
        66
    );
    eqz(ctx, &x3883, 276359, 4)?;
    let x3884: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x3881, x1, 66), x3882, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3873, bigint_sub!(x3862, x3879, 32), 64),
                        x3865,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x3884, 276359, 4)?;
    let x3885: BytePoly_32 = bigint_add!(bigint_sub!(x5, x3882, 32), x1, 32);
    let x3886: BytePoly_32 = bigint_add!(bigint_sub!(x4, x3879, 32), x1, 32);
    let x3887: BytePoly_32 = bigint_nondet_inv!(ctx, x3886, x1, 32);
    let x3888: BytePoly_64 = bigint_mul!(x3886, x3887, 64);
    let x3889: BytePoly_34 = bigint_nondet_quot!(ctx, x3888, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x3888, bigint_mul!(x3889, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x3890: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3885, x3887, 64), x1, 32);
    let x3891: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x3890, x3886, 64), x3885, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x3892: BytePoly_34 = bigint_nondet_quot!(ctx, x3891, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x3891, bigint_mul!(x3892, x1, 66), 66),
        276359,
        4,
    )?;
    let x3893: BytePoly_64 = bigint_mul!(x3890, x3890, 64);
    let x3894: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3893, x3879, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x3895: BytePoly_34 = bigint_nondet_quot!(ctx, x3894, x1, 34);
    let x3896: BytePoly_32 = bigint_nondet_rem!(ctx, x3894, x1, 32);
    let x3897: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x3890, x3896, 64),
                        bigint_add!(
                            bigint_sub!(x3882, bigint_mul!(x3890, x3879, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x3898: BytePoly_34 = bigint_nondet_quot!(ctx, x3897, x1, 34);
    let x3899: BytePoly_32 = bigint_nondet_rem!(ctx, x3897, x1, 32);
    let x3900: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3893, bigint_mul!(x3895, x1, 66), 66),
                        x3879,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x3896,
        66
    );
    eqz(ctx, &x3900, 276359, 4)?;
    let x3901: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x3898, x1, 66), x3899, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3890, bigint_sub!(x3879, x3896, 32), 64),
                        x3882,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x3901, 276359, 4)?;
    let x3902: BytePoly_32 = bigint_add!(bigint_sub!(x5, x3899, 32), x1, 32);
    let x3903: BytePoly_32 = bigint_add!(bigint_sub!(x4, x3896, 32), x1, 32);
    let x3904: BytePoly_32 = bigint_nondet_inv!(ctx, x3903, x1, 32);
    let x3905: BytePoly_64 = bigint_mul!(x3903, x3904, 64);
    let x3906: BytePoly_34 = bigint_nondet_quot!(ctx, x3905, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x3905, bigint_mul!(x3906, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x3907: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3902, x3904, 64), x1, 32);
    let x3908: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x3907, x3903, 64), x3902, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x3909: BytePoly_34 = bigint_nondet_quot!(ctx, x3908, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x3908, bigint_mul!(x3909, x1, 66), 66),
        276359,
        4,
    )?;
    let x3910: BytePoly_64 = bigint_mul!(x3907, x3907, 64);
    let x3911: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3910, x3896, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x3912: BytePoly_34 = bigint_nondet_quot!(ctx, x3911, x1, 34);
    let x3913: BytePoly_32 = bigint_nondet_rem!(ctx, x3911, x1, 32);
    let x3914: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x3907, x3913, 64),
                        bigint_add!(
                            bigint_sub!(x3899, bigint_mul!(x3907, x3896, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x3915: BytePoly_34 = bigint_nondet_quot!(ctx, x3914, x1, 34);
    let x3916: BytePoly_32 = bigint_nondet_rem!(ctx, x3914, x1, 32);
    let x3917: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3910, bigint_mul!(x3912, x1, 66), 66),
                        x3896,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x3913,
        66
    );
    eqz(ctx, &x3917, 276359, 4)?;
    let x3918: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x3915, x1, 66), x3916, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3907, bigint_sub!(x3896, x3913, 32), 64),
                        x3899,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x3918, 276359, 4)?;
    let x3919: BytePoly_32 = bigint_add!(bigint_sub!(x5, x3916, 32), x1, 32);
    let x3920: BytePoly_32 = bigint_add!(bigint_sub!(x4, x3913, 32), x1, 32);
    let x3921: BytePoly_32 = bigint_nondet_inv!(ctx, x3920, x1, 32);
    let x3922: BytePoly_64 = bigint_mul!(x3920, x3921, 64);
    let x3923: BytePoly_34 = bigint_nondet_quot!(ctx, x3922, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x3922, bigint_mul!(x3923, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x3924: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3919, x3921, 64), x1, 32);
    let x3925: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x3924, x3920, 64), x3919, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x3926: BytePoly_34 = bigint_nondet_quot!(ctx, x3925, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x3925, bigint_mul!(x3926, x1, 66), 66),
        276359,
        4,
    )?;
    let x3927: BytePoly_64 = bigint_mul!(x3924, x3924, 64);
    let x3928: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3927, x3913, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x3929: BytePoly_34 = bigint_nondet_quot!(ctx, x3928, x1, 34);
    let x3930: BytePoly_32 = bigint_nondet_rem!(ctx, x3928, x1, 32);
    let x3931: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x3924, x3930, 64),
                        bigint_add!(
                            bigint_sub!(x3916, bigint_mul!(x3924, x3913, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x3932: BytePoly_34 = bigint_nondet_quot!(ctx, x3931, x1, 34);
    let x3933: BytePoly_32 = bigint_nondet_rem!(ctx, x3931, x1, 32);
    let x3934: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3927, bigint_mul!(x3929, x1, 66), 66),
                        x3913,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x3930,
        66
    );
    eqz(ctx, &x3934, 276359, 4)?;
    let x3935: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x3932, x1, 66), x3933, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3924, bigint_sub!(x3913, x3930, 32), 64),
                        x3916,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x3935, 276359, 4)?;
    let x3936: BytePoly_32 = bigint_add!(bigint_sub!(x5, x3933, 32), x1, 32);
    let x3937: BytePoly_32 = bigint_add!(bigint_sub!(x4, x3930, 32), x1, 32);
    let x3938: BytePoly_32 = bigint_nondet_inv!(ctx, x3937, x1, 32);
    let x3939: BytePoly_64 = bigint_mul!(x3937, x3938, 64);
    let x3940: BytePoly_34 = bigint_nondet_quot!(ctx, x3939, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x3939, bigint_mul!(x3940, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x3941: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3936, x3938, 64), x1, 32);
    let x3942: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x3941, x3937, 64), x3936, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x3943: BytePoly_34 = bigint_nondet_quot!(ctx, x3942, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x3942, bigint_mul!(x3943, x1, 66), 66),
        276359,
        4,
    )?;
    let x3944: BytePoly_64 = bigint_mul!(x3941, x3941, 64);
    let x3945: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3944, x3930, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x3946: BytePoly_34 = bigint_nondet_quot!(ctx, x3945, x1, 34);
    let x3947: BytePoly_32 = bigint_nondet_rem!(ctx, x3945, x1, 32);
    let x3948: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x3941, x3947, 64),
                        bigint_add!(
                            bigint_sub!(x3933, bigint_mul!(x3941, x3930, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x3949: BytePoly_34 = bigint_nondet_quot!(ctx, x3948, x1, 34);
    let x3950: BytePoly_32 = bigint_nondet_rem!(ctx, x3948, x1, 32);
    let x3951: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3944, bigint_mul!(x3946, x1, 66), 66),
                        x3930,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x3947,
        66
    );
    eqz(ctx, &x3951, 276359, 4)?;
    let x3952: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x3949, x1, 66), x3950, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3941, bigint_sub!(x3930, x3947, 32), 64),
                        x3933,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x3952, 276359, 4)?;
    let x3953: BytePoly_32 = bigint_add!(bigint_sub!(x5, x3950, 32), x1, 32);
    let x3954: BytePoly_32 = bigint_add!(bigint_sub!(x4, x3947, 32), x1, 32);
    let x3955: BytePoly_32 = bigint_nondet_inv!(ctx, x3954, x1, 32);
    let x3956: BytePoly_64 = bigint_mul!(x3954, x3955, 64);
    let x3957: BytePoly_34 = bigint_nondet_quot!(ctx, x3956, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x3956, bigint_mul!(x3957, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x3958: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3953, x3955, 64), x1, 32);
    let x3959: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x3958, x3954, 64), x3953, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x3960: BytePoly_34 = bigint_nondet_quot!(ctx, x3959, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x3959, bigint_mul!(x3960, x1, 66), 66),
        276359,
        4,
    )?;
    let x3961: BytePoly_64 = bigint_mul!(x3958, x3958, 64);
    let x3962: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3961, x3947, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x3963: BytePoly_34 = bigint_nondet_quot!(ctx, x3962, x1, 34);
    let x3964: BytePoly_32 = bigint_nondet_rem!(ctx, x3962, x1, 32);
    let x3965: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x3958, x3964, 64),
                        bigint_add!(
                            bigint_sub!(x3950, bigint_mul!(x3958, x3947, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x3966: BytePoly_34 = bigint_nondet_quot!(ctx, x3965, x1, 34);
    let x3967: BytePoly_32 = bigint_nondet_rem!(ctx, x3965, x1, 32);
    let x3968: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3961, bigint_mul!(x3963, x1, 66), 66),
                        x3947,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x3964,
        66
    );
    eqz(ctx, &x3968, 276359, 4)?;
    let x3969: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x3966, x1, 66), x3967, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3958, bigint_sub!(x3947, x3964, 32), 64),
                        x3950,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x3969, 276359, 4)?;
    let x3970: BytePoly_32 = bigint_add!(bigint_sub!(x5, x3967, 32), x1, 32);
    let x3971: BytePoly_32 = bigint_add!(bigint_sub!(x4, x3964, 32), x1, 32);
    let x3972: BytePoly_32 = bigint_nondet_inv!(ctx, x3971, x1, 32);
    let x3973: BytePoly_64 = bigint_mul!(x3971, x3972, 64);
    let x3974: BytePoly_34 = bigint_nondet_quot!(ctx, x3973, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x3973, bigint_mul!(x3974, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x3975: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3970, x3972, 64), x1, 32);
    let x3976: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x3975, x3971, 64), x3970, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x3977: BytePoly_34 = bigint_nondet_quot!(ctx, x3976, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x3976, bigint_mul!(x3977, x1, 66), 66),
        276359,
        4,
    )?;
    let x3978: BytePoly_64 = bigint_mul!(x3975, x3975, 64);
    let x3979: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3978, x3964, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x3980: BytePoly_34 = bigint_nondet_quot!(ctx, x3979, x1, 34);
    let x3981: BytePoly_32 = bigint_nondet_rem!(ctx, x3979, x1, 32);
    let x3982: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x3975, x3981, 64),
                        bigint_add!(
                            bigint_sub!(x3967, bigint_mul!(x3975, x3964, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x3983: BytePoly_34 = bigint_nondet_quot!(ctx, x3982, x1, 34);
    let x3984: BytePoly_32 = bigint_nondet_rem!(ctx, x3982, x1, 32);
    let x3985: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3978, bigint_mul!(x3980, x1, 66), 66),
                        x3964,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x3981,
        66
    );
    eqz(ctx, &x3985, 276359, 4)?;
    let x3986: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x3983, x1, 66), x3984, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3975, bigint_sub!(x3964, x3981, 32), 64),
                        x3967,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x3986, 276359, 4)?;
    let x3987: BytePoly_32 = bigint_add!(bigint_sub!(x5, x3984, 32), x1, 32);
    let x3988: BytePoly_32 = bigint_add!(bigint_sub!(x4, x3981, 32), x1, 32);
    let x3989: BytePoly_32 = bigint_nondet_inv!(ctx, x3988, x1, 32);
    let x3990: BytePoly_64 = bigint_mul!(x3988, x3989, 64);
    let x3991: BytePoly_34 = bigint_nondet_quot!(ctx, x3990, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x3990, bigint_mul!(x3991, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x3992: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3987, x3989, 64), x1, 32);
    let x3993: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x3992, x3988, 64), x3987, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x3994: BytePoly_34 = bigint_nondet_quot!(ctx, x3993, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x3993, bigint_mul!(x3994, x1, 66), 66),
        276359,
        4,
    )?;
    let x3995: BytePoly_64 = bigint_mul!(x3992, x3992, 64);
    let x3996: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3995, x3981, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x3997: BytePoly_34 = bigint_nondet_quot!(ctx, x3996, x1, 34);
    let x3998: BytePoly_32 = bigint_nondet_rem!(ctx, x3996, x1, 32);
    let x3999: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x3992, x3998, 64),
                        bigint_add!(
                            bigint_sub!(x3984, bigint_mul!(x3992, x3981, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x4000: BytePoly_34 = bigint_nondet_quot!(ctx, x3999, x1, 34);
    let x4001: BytePoly_32 = bigint_nondet_rem!(ctx, x3999, x1, 32);
    let x4002: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3995, bigint_mul!(x3997, x1, 66), 66),
                        x3981,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x3998,
        66
    );
    eqz(ctx, &x4002, 276359, 4)?;
    let x4003: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x4000, x1, 66), x4001, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3992, bigint_sub!(x3981, x3998, 32), 64),
                        x3984,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x4003, 276359, 4)?;
    let x4004: BytePoly_32 = bigint_add!(bigint_sub!(x5, x4001, 32), x1, 32);
    let x4005: BytePoly_32 = bigint_add!(bigint_sub!(x4, x3998, 32), x1, 32);
    let x4006: BytePoly_32 = bigint_nondet_inv!(ctx, x4005, x1, 32);
    let x4007: BytePoly_64 = bigint_mul!(x4005, x4006, 64);
    let x4008: BytePoly_34 = bigint_nondet_quot!(ctx, x4007, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x4007, bigint_mul!(x4008, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x4009: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x4004, x4006, 64), x1, 32);
    let x4010: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x4009, x4005, 64), x4004, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x4011: BytePoly_34 = bigint_nondet_quot!(ctx, x4010, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x4010, bigint_mul!(x4011, x1, 66), 66),
        276359,
        4,
    )?;
    let x4012: BytePoly_64 = bigint_mul!(x4009, x4009, 64);
    let x4013: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x4012, x3998, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x4014: BytePoly_34 = bigint_nondet_quot!(ctx, x4013, x1, 34);
    let x4015: BytePoly_32 = bigint_nondet_rem!(ctx, x4013, x1, 32);
    let x4016: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x4009, x4015, 64),
                        bigint_add!(
                            bigint_sub!(x4001, bigint_mul!(x4009, x3998, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x4017: BytePoly_34 = bigint_nondet_quot!(ctx, x4016, x1, 34);
    let x4018: BytePoly_32 = bigint_nondet_rem!(ctx, x4016, x1, 32);
    let x4019: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x4012, bigint_mul!(x4014, x1, 66), 66),
                        x3998,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x4015,
        66
    );
    eqz(ctx, &x4019, 276359, 4)?;
    let x4020: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x4017, x1, 66), x4018, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x4009, bigint_sub!(x3998, x4015, 32), 64),
                        x4001,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x4020, 276359, 4)?;
    let x4021: BytePoly_32 = bigint_add!(bigint_sub!(x5, x4018, 32), x1, 32);
    let x4022: BytePoly_32 = bigint_add!(bigint_sub!(x4, x4015, 32), x1, 32);
    let x4023: BytePoly_32 = bigint_nondet_inv!(ctx, x4022, x1, 32);
    let x4024: BytePoly_64 = bigint_mul!(x4022, x4023, 64);
    let x4025: BytePoly_34 = bigint_nondet_quot!(ctx, x4024, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x4024, bigint_mul!(x4025, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x4026: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x4021, x4023, 64), x1, 32);
    let x4027: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x4026, x4022, 64), x4021, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x4028: BytePoly_34 = bigint_nondet_quot!(ctx, x4027, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x4027, bigint_mul!(x4028, x1, 66), 66),
        276359,
        4,
    )?;
    let x4029: BytePoly_64 = bigint_mul!(x4026, x4026, 64);
    let x4030: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x4029, x4015, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x4031: BytePoly_34 = bigint_nondet_quot!(ctx, x4030, x1, 34);
    let x4032: BytePoly_32 = bigint_nondet_rem!(ctx, x4030, x1, 32);
    let x4033: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x4026, x4032, 64),
                        bigint_add!(
                            bigint_sub!(x4018, bigint_mul!(x4026, x4015, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x4034: BytePoly_34 = bigint_nondet_quot!(ctx, x4033, x1, 34);
    let x4035: BytePoly_32 = bigint_nondet_rem!(ctx, x4033, x1, 32);
    let x4036: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x4029, bigint_mul!(x4031, x1, 66), 66),
                        x4015,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x4032,
        66
    );
    eqz(ctx, &x4036, 276359, 4)?;
    let x4037: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x4034, x1, 66), x4035, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x4026, bigint_sub!(x4015, x4032, 32), 64),
                        x4018,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x4037, 276359, 4)?;
    let x4038: BytePoly_32 = bigint_add!(bigint_sub!(x5, x4035, 32), x1, 32);
    let x4039: BytePoly_32 = bigint_add!(bigint_sub!(x4, x4032, 32), x1, 32);
    let x4040: BytePoly_32 = bigint_nondet_inv!(ctx, x4039, x1, 32);
    let x4041: BytePoly_64 = bigint_mul!(x4039, x4040, 64);
    let x4042: BytePoly_34 = bigint_nondet_quot!(ctx, x4041, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x4041, bigint_mul!(x4042, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x4043: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x4038, x4040, 64), x1, 32);
    let x4044: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x4043, x4039, 64), x4038, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x4045: BytePoly_34 = bigint_nondet_quot!(ctx, x4044, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x4044, bigint_mul!(x4045, x1, 66), 66),
        276359,
        4,
    )?;
    let x4046: BytePoly_64 = bigint_mul!(x4043, x4043, 64);
    let x4047: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x4046, x4032, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x4048: BytePoly_34 = bigint_nondet_quot!(ctx, x4047, x1, 34);
    let x4049: BytePoly_32 = bigint_nondet_rem!(ctx, x4047, x1, 32);
    let x4050: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x4043, x4049, 64),
                        bigint_add!(
                            bigint_sub!(x4035, bigint_mul!(x4043, x4032, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x4051: BytePoly_34 = bigint_nondet_quot!(ctx, x4050, x1, 34);
    let x4052: BytePoly_32 = bigint_nondet_rem!(ctx, x4050, x1, 32);
    let x4053: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x4046, bigint_mul!(x4048, x1, 66), 66),
                        x4032,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x4049,
        66
    );
    eqz(ctx, &x4053, 276359, 4)?;
    let x4054: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x4051, x1, 66), x4052, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x4043, bigint_sub!(x4032, x4049, 32), 64),
                        x4035,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x4054, 276359, 4)?;
    let x4055: BytePoly_32 = bigint_add!(bigint_sub!(x5, x4052, 32), x1, 32);
    let x4056: BytePoly_32 = bigint_add!(bigint_sub!(x4, x4049, 32), x1, 32);
    let x4057: BytePoly_32 = bigint_nondet_inv!(ctx, x4056, x1, 32);
    let x4058: BytePoly_64 = bigint_mul!(x4056, x4057, 64);
    let x4059: BytePoly_34 = bigint_nondet_quot!(ctx, x4058, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x4058, bigint_mul!(x4059, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x4060: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x4055, x4057, 64), x1, 32);
    let x4061: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x4060, x4056, 64), x4055, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x4062: BytePoly_34 = bigint_nondet_quot!(ctx, x4061, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x4061, bigint_mul!(x4062, x1, 66), 66),
        276359,
        4,
    )?;
    let x4063: BytePoly_64 = bigint_mul!(x4060, x4060, 64);
    let x4064: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x4063, x4049, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x4065: BytePoly_34 = bigint_nondet_quot!(ctx, x4064, x1, 34);
    let x4066: BytePoly_32 = bigint_nondet_rem!(ctx, x4064, x1, 32);
    let x4067: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x4060, x4066, 64),
                        bigint_add!(
                            bigint_sub!(x4052, bigint_mul!(x4060, x4049, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x4068: BytePoly_34 = bigint_nondet_quot!(ctx, x4067, x1, 34);
    let x4069: BytePoly_32 = bigint_nondet_rem!(ctx, x4067, x1, 32);
    let x4070: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x4063, bigint_mul!(x4065, x1, 66), 66),
                        x4049,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x4066,
        66
    );
    eqz(ctx, &x4070, 276359, 4)?;
    let x4071: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x4068, x1, 66), x4069, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x4060, bigint_sub!(x4049, x4066, 32), 64),
                        x4052,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x4071, 276359, 4)?;
    let x4072: BytePoly_32 = bigint_add!(bigint_sub!(x5, x4069, 32), x1, 32);
    let x4073: BytePoly_32 = bigint_add!(bigint_sub!(x4, x4066, 32), x1, 32);
    let x4074: BytePoly_32 = bigint_nondet_inv!(ctx, x4073, x1, 32);
    let x4075: BytePoly_64 = bigint_mul!(x4073, x4074, 64);
    let x4076: BytePoly_34 = bigint_nondet_quot!(ctx, x4075, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x4075, bigint_mul!(x4076, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x4077: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x4072, x4074, 64), x1, 32);
    let x4078: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x4077, x4073, 64), x4072, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x4079: BytePoly_34 = bigint_nondet_quot!(ctx, x4078, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x4078, bigint_mul!(x4079, x1, 66), 66),
        276359,
        4,
    )?;
    let x4080: BytePoly_64 = bigint_mul!(x4077, x4077, 64);
    let x4081: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x4080, x4066, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x4082: BytePoly_34 = bigint_nondet_quot!(ctx, x4081, x1, 34);
    let x4083: BytePoly_32 = bigint_nondet_rem!(ctx, x4081, x1, 32);
    let x4084: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x4077, x4083, 64),
                        bigint_add!(
                            bigint_sub!(x4069, bigint_mul!(x4077, x4066, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x4085: BytePoly_34 = bigint_nondet_quot!(ctx, x4084, x1, 34);
    let x4086: BytePoly_32 = bigint_nondet_rem!(ctx, x4084, x1, 32);
    let x4087: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x4080, bigint_mul!(x4082, x1, 66), 66),
                        x4066,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x4083,
        66
    );
    eqz(ctx, &x4087, 276359, 4)?;
    let x4088: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x4085, x1, 66), x4086, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x4077, bigint_sub!(x4066, x4083, 32), 64),
                        x4069,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x4088, 276359, 4)?;
    let x4089: BytePoly_32 = bigint_add!(bigint_sub!(x5, x4086, 32), x1, 32);
    let x4090: BytePoly_32 = bigint_add!(bigint_sub!(x4, x4083, 32), x1, 32);
    let x4091: BytePoly_32 = bigint_nondet_inv!(ctx, x4090, x1, 32);
    let x4092: BytePoly_64 = bigint_mul!(x4090, x4091, 64);
    let x4093: BytePoly_34 = bigint_nondet_quot!(ctx, x4092, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x4092, bigint_mul!(x4093, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x4094: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x4089, x4091, 64), x1, 32);
    let x4095: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x4094, x4090, 64), x4089, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x4096: BytePoly_34 = bigint_nondet_quot!(ctx, x4095, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x4095, bigint_mul!(x4096, x1, 66), 66),
        276359,
        4,
    )?;
    let x4097: BytePoly_64 = bigint_mul!(x4094, x4094, 64);
    let x4098: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x4097, x4083, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x4099: BytePoly_34 = bigint_nondet_quot!(ctx, x4098, x1, 34);
    let x4100: BytePoly_32 = bigint_nondet_rem!(ctx, x4098, x1, 32);
    let x4101: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x4094, x4100, 64),
                        bigint_add!(
                            bigint_sub!(x4086, bigint_mul!(x4094, x4083, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x4102: BytePoly_34 = bigint_nondet_quot!(ctx, x4101, x1, 34);
    let x4103: BytePoly_32 = bigint_nondet_rem!(ctx, x4101, x1, 32);
    let x4104: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x4097, bigint_mul!(x4099, x1, 66), 66),
                        x4083,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x4100,
        66
    );
    eqz(ctx, &x4104, 276359, 4)?;
    let x4105: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x4102, x1, 66), x4103, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x4094, bigint_sub!(x4083, x4100, 32), 64),
                        x4086,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x4105, 276359, 4)?;
    let x4106: BytePoly_32 = bigint_add!(bigint_sub!(x5, x4103, 32), x1, 32);
    let x4107: BytePoly_32 = bigint_add!(bigint_sub!(x4, x4100, 32), x1, 32);
    let x4108: BytePoly_32 = bigint_nondet_inv!(ctx, x4107, x1, 32);
    let x4109: BytePoly_64 = bigint_mul!(x4107, x4108, 64);
    let x4110: BytePoly_34 = bigint_nondet_quot!(ctx, x4109, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x4109, bigint_mul!(x4110, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x4111: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x4106, x4108, 64), x1, 32);
    let x4112: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x4111, x4107, 64), x4106, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x4113: BytePoly_34 = bigint_nondet_quot!(ctx, x4112, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x4112, bigint_mul!(x4113, x1, 66), 66),
        276359,
        4,
    )?;
    let x4114: BytePoly_64 = bigint_mul!(x4111, x4111, 64);
    let x4115: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x4114, x4100, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x4116: BytePoly_34 = bigint_nondet_quot!(ctx, x4115, x1, 34);
    let x4117: BytePoly_32 = bigint_nondet_rem!(ctx, x4115, x1, 32);
    let x4118: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x4111, x4117, 64),
                        bigint_add!(
                            bigint_sub!(x4103, bigint_mul!(x4111, x4100, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x4119: BytePoly_34 = bigint_nondet_quot!(ctx, x4118, x1, 34);
    let x4120: BytePoly_32 = bigint_nondet_rem!(ctx, x4118, x1, 32);
    let x4121: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x4114, bigint_mul!(x4116, x1, 66), 66),
                        x4100,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x4117,
        66
    );
    eqz(ctx, &x4121, 276359, 4)?;
    let x4122: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x4119, x1, 66), x4120, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x4111, bigint_sub!(x4100, x4117, 32), 64),
                        x4103,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x4122, 276359, 4)?;
    let x4123: BytePoly_32 = bigint_add!(bigint_sub!(x5, x4120, 32), x1, 32);
    let x4124: BytePoly_32 = bigint_add!(bigint_sub!(x4, x4117, 32), x1, 32);
    let x4125: BytePoly_32 = bigint_nondet_inv!(ctx, x4124, x1, 32);
    let x4126: BytePoly_64 = bigint_mul!(x4124, x4125, 64);
    let x4127: BytePoly_34 = bigint_nondet_quot!(ctx, x4126, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x4126, bigint_mul!(x4127, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x4128: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x4123, x4125, 64), x1, 32);
    let x4129: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x4128, x4124, 64), x4123, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x4130: BytePoly_34 = bigint_nondet_quot!(ctx, x4129, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x4129, bigint_mul!(x4130, x1, 66), 66),
        276359,
        4,
    )?;
    let x4131: BytePoly_64 = bigint_mul!(x4128, x4128, 64);
    let x4132: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x4131, x4117, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x4133: BytePoly_34 = bigint_nondet_quot!(ctx, x4132, x1, 34);
    let x4134: BytePoly_32 = bigint_nondet_rem!(ctx, x4132, x1, 32);
    let x4135: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x4128, x4134, 64),
                        bigint_add!(
                            bigint_sub!(x4120, bigint_mul!(x4128, x4117, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x4136: BytePoly_34 = bigint_nondet_quot!(ctx, x4135, x1, 34);
    let x4137: BytePoly_32 = bigint_nondet_rem!(ctx, x4135, x1, 32);
    let x4138: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x4131, bigint_mul!(x4133, x1, 66), 66),
                        x4117,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x4134,
        66
    );
    eqz(ctx, &x4138, 276359, 4)?;
    let x4139: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x4136, x1, 66), x4137, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x4128, bigint_sub!(x4117, x4134, 32), 64),
                        x4120,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x4139, 276359, 4)?;
    let x4140: BytePoly_32 = bigint_add!(bigint_sub!(x5, x4137, 32), x1, 32);
    let x4141: BytePoly_32 = bigint_add!(bigint_sub!(x4, x4134, 32), x1, 32);
    let x4142: BytePoly_32 = bigint_nondet_inv!(ctx, x4141, x1, 32);
    let x4143: BytePoly_64 = bigint_mul!(x4141, x4142, 64);
    let x4144: BytePoly_34 = bigint_nondet_quot!(ctx, x4143, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x4143, bigint_mul!(x4144, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x4145: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x4140, x4142, 64), x1, 32);
    let x4146: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x4145, x4141, 64), x4140, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x4147: BytePoly_34 = bigint_nondet_quot!(ctx, x4146, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x4146, bigint_mul!(x4147, x1, 66), 66),
        276359,
        4,
    )?;
    let x4148: BytePoly_64 = bigint_mul!(x4145, x4145, 64);
    let x4149: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x4148, x4134, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x4150: BytePoly_34 = bigint_nondet_quot!(ctx, x4149, x1, 34);
    let x4151: BytePoly_32 = bigint_nondet_rem!(ctx, x4149, x1, 32);
    let x4152: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x4145, x4151, 64),
                        bigint_add!(
                            bigint_sub!(x4137, bigint_mul!(x4145, x4134, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x4153: BytePoly_34 = bigint_nondet_quot!(ctx, x4152, x1, 34);
    let x4154: BytePoly_32 = bigint_nondet_rem!(ctx, x4152, x1, 32);
    let x4155: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x4148, bigint_mul!(x4150, x1, 66), 66),
                        x4134,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x4151,
        66
    );
    eqz(ctx, &x4155, 276359, 4)?;
    let x4156: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x4153, x1, 66), x4154, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x4145, bigint_sub!(x4134, x4151, 32), 64),
                        x4137,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x4156, 276359, 4)?;
    let x4157: BytePoly_32 = bigint_add!(bigint_sub!(x5, x4154, 32), x1, 32);
    let x4158: BytePoly_32 = bigint_add!(bigint_sub!(x4, x4151, 32), x1, 32);
    let x4159: BytePoly_32 = bigint_nondet_inv!(ctx, x4158, x1, 32);
    let x4160: BytePoly_64 = bigint_mul!(x4158, x4159, 64);
    let x4161: BytePoly_34 = bigint_nondet_quot!(ctx, x4160, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x4160, bigint_mul!(x4161, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x4162: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x4157, x4159, 64), x1, 32);
    let x4163: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x4162, x4158, 64), x4157, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x4164: BytePoly_34 = bigint_nondet_quot!(ctx, x4163, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x4163, bigint_mul!(x4164, x1, 66), 66),
        276359,
        4,
    )?;
    let x4165: BytePoly_64 = bigint_mul!(x4162, x4162, 64);
    let x4166: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x4165, x4151, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x4167: BytePoly_34 = bigint_nondet_quot!(ctx, x4166, x1, 34);
    let x4168: BytePoly_32 = bigint_nondet_rem!(ctx, x4166, x1, 32);
    let x4169: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x4162, x4168, 64),
                        bigint_add!(
                            bigint_sub!(x4154, bigint_mul!(x4162, x4151, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x4170: BytePoly_34 = bigint_nondet_quot!(ctx, x4169, x1, 34);
    let x4171: BytePoly_32 = bigint_nondet_rem!(ctx, x4169, x1, 32);
    let x4172: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x4165, bigint_mul!(x4167, x1, 66), 66),
                        x4151,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x4168,
        66
    );
    eqz(ctx, &x4172, 276359, 4)?;
    let x4173: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x4170, x1, 66), x4171, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x4162, bigint_sub!(x4151, x4168, 32), 64),
                        x4154,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x4173, 276359, 4)?;
    let x4174: BytePoly_32 = bigint_add!(bigint_sub!(x5, x4171, 32), x1, 32);
    let x4175: BytePoly_32 = bigint_add!(bigint_sub!(x4, x4168, 32), x1, 32);
    let x4176: BytePoly_32 = bigint_nondet_inv!(ctx, x4175, x1, 32);
    let x4177: BytePoly_64 = bigint_mul!(x4175, x4176, 64);
    let x4178: BytePoly_34 = bigint_nondet_quot!(ctx, x4177, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x4177, bigint_mul!(x4178, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x4179: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x4174, x4176, 64), x1, 32);
    let x4180: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x4179, x4175, 64), x4174, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x4181: BytePoly_34 = bigint_nondet_quot!(ctx, x4180, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x4180, bigint_mul!(x4181, x1, 66), 66),
        276359,
        4,
    )?;
    let x4182: BytePoly_64 = bigint_mul!(x4179, x4179, 64);
    let x4183: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x4182, x4168, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x4184: BytePoly_34 = bigint_nondet_quot!(ctx, x4183, x1, 34);
    let x4185: BytePoly_32 = bigint_nondet_rem!(ctx, x4183, x1, 32);
    let x4186: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x4179, x4185, 64),
                        bigint_add!(
                            bigint_sub!(x4171, bigint_mul!(x4179, x4168, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x4187: BytePoly_34 = bigint_nondet_quot!(ctx, x4186, x1, 34);
    let x4188: BytePoly_32 = bigint_nondet_rem!(ctx, x4186, x1, 32);
    let x4189: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x4182, bigint_mul!(x4184, x1, 66), 66),
                        x4168,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x4185,
        66
    );
    eqz(ctx, &x4189, 276359, 4)?;
    let x4190: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x4187, x1, 66), x4188, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x4179, bigint_sub!(x4168, x4185, 32), 64),
                        x4171,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x4190, 276359, 4)?;
    let x4191: BytePoly_32 = bigint_add!(bigint_sub!(x5, x4188, 32), x1, 32);
    let x4192: BytePoly_32 = bigint_add!(bigint_sub!(x4, x4185, 32), x1, 32);
    let x4193: BytePoly_32 = bigint_nondet_inv!(ctx, x4192, x1, 32);
    let x4194: BytePoly_64 = bigint_mul!(x4192, x4193, 64);
    let x4195: BytePoly_34 = bigint_nondet_quot!(ctx, x4194, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x4194, bigint_mul!(x4195, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x4196: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x4191, x4193, 64), x1, 32);
    let x4197: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x4196, x4192, 64), x4191, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x4198: BytePoly_34 = bigint_nondet_quot!(ctx, x4197, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x4197, bigint_mul!(x4198, x1, 66), 66),
        276359,
        4,
    )?;
    let x4199: BytePoly_64 = bigint_mul!(x4196, x4196, 64);
    let x4200: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x4199, x4185, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x4201: BytePoly_34 = bigint_nondet_quot!(ctx, x4200, x1, 34);
    let x4202: BytePoly_32 = bigint_nondet_rem!(ctx, x4200, x1, 32);
    let x4203: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x4196, x4202, 64),
                        bigint_add!(
                            bigint_sub!(x4188, bigint_mul!(x4196, x4185, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x4204: BytePoly_34 = bigint_nondet_quot!(ctx, x4203, x1, 34);
    let x4205: BytePoly_32 = bigint_nondet_rem!(ctx, x4203, x1, 32);
    let x4206: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x4199, bigint_mul!(x4201, x1, 66), 66),
                        x4185,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x4202,
        66
    );
    eqz(ctx, &x4206, 276359, 4)?;
    let x4207: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x4204, x1, 66), x4205, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x4196, bigint_sub!(x4185, x4202, 32), 64),
                        x4188,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x4207, 276359, 4)?;
    let x4208: BytePoly_32 = bigint_add!(bigint_sub!(x5, x4205, 32), x1, 32);
    let x4209: BytePoly_32 = bigint_add!(bigint_sub!(x4, x4202, 32), x1, 32);
    let x4210: BytePoly_32 = bigint_nondet_inv!(ctx, x4209, x1, 32);
    let x4211: BytePoly_64 = bigint_mul!(x4209, x4210, 64);
    let x4212: BytePoly_34 = bigint_nondet_quot!(ctx, x4211, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x4211, bigint_mul!(x4212, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x4213: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x4208, x4210, 64), x1, 32);
    let x4214: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x4213, x4209, 64), x4208, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x4215: BytePoly_34 = bigint_nondet_quot!(ctx, x4214, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x4214, bigint_mul!(x4215, x1, 66), 66),
        276359,
        4,
    )?;
    let x4216: BytePoly_64 = bigint_mul!(x4213, x4213, 64);
    let x4217: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x4216, x4202, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x4218: BytePoly_34 = bigint_nondet_quot!(ctx, x4217, x1, 34);
    let x4219: BytePoly_32 = bigint_nondet_rem!(ctx, x4217, x1, 32);
    let x4220: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x4213, x4219, 64),
                        bigint_add!(
                            bigint_sub!(x4205, bigint_mul!(x4213, x4202, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x4221: BytePoly_34 = bigint_nondet_quot!(ctx, x4220, x1, 34);
    let x4222: BytePoly_32 = bigint_nondet_rem!(ctx, x4220, x1, 32);
    let x4223: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x4216, bigint_mul!(x4218, x1, 66), 66),
                        x4202,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x4219,
        66
    );
    eqz(ctx, &x4223, 276359, 4)?;
    let x4224: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x4221, x1, 66), x4222, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x4213, bigint_sub!(x4202, x4219, 32), 64),
                        x4205,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x4224, 276359, 4)?;
    let x4225: BytePoly_32 = bigint_add!(bigint_sub!(x5, x4222, 32), x1, 32);
    let x4226: BytePoly_32 = bigint_add!(bigint_sub!(x4, x4219, 32), x1, 32);
    let x4227: BytePoly_32 = bigint_nondet_inv!(ctx, x4226, x1, 32);
    let x4228: BytePoly_64 = bigint_mul!(x4226, x4227, 64);
    let x4229: BytePoly_34 = bigint_nondet_quot!(ctx, x4228, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x4228, bigint_mul!(x4229, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x4230: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x4225, x4227, 64), x1, 32);
    let x4231: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x4230, x4226, 64), x4225, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x4232: BytePoly_34 = bigint_nondet_quot!(ctx, x4231, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x4231, bigint_mul!(x4232, x1, 66), 66),
        276359,
        4,
    )?;
    let x4233: BytePoly_64 = bigint_mul!(x4230, x4230, 64);
    let x4234: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x4233, x4219, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x4235: BytePoly_34 = bigint_nondet_quot!(ctx, x4234, x1, 34);
    let x4236: BytePoly_32 = bigint_nondet_rem!(ctx, x4234, x1, 32);
    let x4237: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x4230, x4236, 64),
                        bigint_add!(
                            bigint_sub!(x4222, bigint_mul!(x4230, x4219, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x4238: BytePoly_34 = bigint_nondet_quot!(ctx, x4237, x1, 34);
    let x4239: BytePoly_32 = bigint_nondet_rem!(ctx, x4237, x1, 32);
    let x4240: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x4233, bigint_mul!(x4235, x1, 66), 66),
                        x4219,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x4236,
        66
    );
    eqz(ctx, &x4240, 276359, 4)?;
    let x4241: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x4238, x1, 66), x4239, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x4230, bigint_sub!(x4219, x4236, 32), 64),
                        x4222,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x4241, 276359, 4)?;
    let x4242: BytePoly_32 = bigint_add!(bigint_sub!(x5, x4239, 32), x1, 32);
    let x4243: BytePoly_32 = bigint_add!(bigint_sub!(x4, x4236, 32), x1, 32);
    let x4244: BytePoly_32 = bigint_nondet_inv!(ctx, x4243, x1, 32);
    let x4245: BytePoly_64 = bigint_mul!(x4243, x4244, 64);
    let x4246: BytePoly_34 = bigint_nondet_quot!(ctx, x4245, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x4245, bigint_mul!(x4246, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x4247: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x4242, x4244, 64), x1, 32);
    let x4248: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x4247, x4243, 64), x4242, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x4249: BytePoly_34 = bigint_nondet_quot!(ctx, x4248, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x4248, bigint_mul!(x4249, x1, 66), 66),
        276359,
        4,
    )?;
    let x4250: BytePoly_64 = bigint_mul!(x4247, x4247, 64);
    let x4251: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x4250, x4236, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x4252: BytePoly_34 = bigint_nondet_quot!(ctx, x4251, x1, 34);
    let x4253: BytePoly_32 = bigint_nondet_rem!(ctx, x4251, x1, 32);
    let x4254: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x4247, x4253, 64),
                        bigint_add!(
                            bigint_sub!(x4239, bigint_mul!(x4247, x4236, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x4255: BytePoly_34 = bigint_nondet_quot!(ctx, x4254, x1, 34);
    let x4256: BytePoly_32 = bigint_nondet_rem!(ctx, x4254, x1, 32);
    let x4257: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x4250, bigint_mul!(x4252, x1, 66), 66),
                        x4236,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x4253,
        66
    );
    eqz(ctx, &x4257, 276359, 4)?;
    let x4258: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x4255, x1, 66), x4256, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x4247, bigint_sub!(x4236, x4253, 32), 64),
                        x4239,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x4258, 276359, 4)?;
    let x4259: BytePoly_32 = bigint_add!(bigint_sub!(x5, x4256, 32), x1, 32);
    let x4260: BytePoly_32 = bigint_add!(bigint_sub!(x4, x4253, 32), x1, 32);
    let x4261: BytePoly_32 = bigint_nondet_inv!(ctx, x4260, x1, 32);
    let x4262: BytePoly_64 = bigint_mul!(x4260, x4261, 64);
    let x4263: BytePoly_34 = bigint_nondet_quot!(ctx, x4262, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x4262, bigint_mul!(x4263, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x4264: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x4259, x4261, 64), x1, 32);
    let x4265: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x4264, x4260, 64), x4259, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x4266: BytePoly_34 = bigint_nondet_quot!(ctx, x4265, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x4265, bigint_mul!(x4266, x1, 66), 66),
        276359,
        4,
    )?;
    let x4267: BytePoly_64 = bigint_mul!(x4264, x4264, 64);
    let x4268: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x4267, x4253, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x4269: BytePoly_34 = bigint_nondet_quot!(ctx, x4268, x1, 34);
    let x4270: BytePoly_32 = bigint_nondet_rem!(ctx, x4268, x1, 32);
    let x4271: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x4264, x4270, 64),
                        bigint_add!(
                            bigint_sub!(x4256, bigint_mul!(x4264, x4253, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x4272: BytePoly_34 = bigint_nondet_quot!(ctx, x4271, x1, 34);
    let x4273: BytePoly_32 = bigint_nondet_rem!(ctx, x4271, x1, 32);
    let x4274: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x4267, bigint_mul!(x4269, x1, 66), 66),
                        x4253,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x4270,
        66
    );
    eqz(ctx, &x4274, 276359, 4)?;
    let x4275: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x4272, x1, 66), x4273, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x4264, bigint_sub!(x4253, x4270, 32), 64),
                        x4256,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x4275, 276359, 4)?;
    let x4276: BytePoly_32 = bigint_add!(bigint_sub!(x5, x4273, 32), x1, 32);
    let x4277: BytePoly_32 = bigint_add!(bigint_sub!(x4, x4270, 32), x1, 32);
    let x4278: BytePoly_32 = bigint_nondet_inv!(ctx, x4277, x1, 32);
    let x4279: BytePoly_64 = bigint_mul!(x4277, x4278, 64);
    let x4280: BytePoly_34 = bigint_nondet_quot!(ctx, x4279, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x4279, bigint_mul!(x4280, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x4281: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x4276, x4278, 64), x1, 32);
    let x4282: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x4281, x4277, 64), x4276, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x4283: BytePoly_34 = bigint_nondet_quot!(ctx, x4282, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x4282, bigint_mul!(x4283, x1, 66), 66),
        276359,
        4,
    )?;
    let x4284: BytePoly_64 = bigint_mul!(x4281, x4281, 64);
    let x4285: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x4284, x4270, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x4286: BytePoly_34 = bigint_nondet_quot!(ctx, x4285, x1, 34);
    let x4287: BytePoly_32 = bigint_nondet_rem!(ctx, x4285, x1, 32);
    let x4288: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x4281, x4287, 64),
                        bigint_add!(
                            bigint_sub!(x4273, bigint_mul!(x4281, x4270, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x4289: BytePoly_34 = bigint_nondet_quot!(ctx, x4288, x1, 34);
    let x4290: BytePoly_32 = bigint_nondet_rem!(ctx, x4288, x1, 32);
    let x4291: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x4284, bigint_mul!(x4286, x1, 66), 66),
                        x4270,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x4287,
        66
    );
    eqz(ctx, &x4291, 276359, 4)?;
    let x4292: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x4289, x1, 66), x4290, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x4281, bigint_sub!(x4270, x4287, 32), 64),
                        x4273,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x4292, 276359, 4)?;
    let x4293: BytePoly_32 = bigint_add!(bigint_sub!(x5, x4290, 32), x1, 32);
    let x4294: BytePoly_32 = bigint_add!(bigint_sub!(x4, x4287, 32), x1, 32);
    let x4295: BytePoly_32 = bigint_nondet_inv!(ctx, x4294, x1, 32);
    let x4296: BytePoly_64 = bigint_mul!(x4294, x4295, 64);
    let x4297: BytePoly_34 = bigint_nondet_quot!(ctx, x4296, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x4296, bigint_mul!(x4297, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x4298: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x4293, x4295, 64), x1, 32);
    let x4299: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x4298, x4294, 64), x4293, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x4300: BytePoly_34 = bigint_nondet_quot!(ctx, x4299, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x4299, bigint_mul!(x4300, x1, 66), 66),
        276359,
        4,
    )?;
    let x4301: BytePoly_64 = bigint_mul!(x4298, x4298, 64);
    let x4302: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x4301, x4287, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x4303: BytePoly_34 = bigint_nondet_quot!(ctx, x4302, x1, 34);
    let x4304: BytePoly_32 = bigint_nondet_rem!(ctx, x4302, x1, 32);
    let x4305: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x4298, x4304, 64),
                        bigint_add!(
                            bigint_sub!(x4290, bigint_mul!(x4298, x4287, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x4306: BytePoly_34 = bigint_nondet_quot!(ctx, x4305, x1, 34);
    let x4307: BytePoly_32 = bigint_nondet_rem!(ctx, x4305, x1, 32);
    let x4308: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x4301, bigint_mul!(x4303, x1, 66), 66),
                        x4287,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x4304,
        66
    );
    eqz(ctx, &x4308, 276359, 4)?;
    let x4309: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x4306, x1, 66), x4307, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x4298, bigint_sub!(x4287, x4304, 32), 64),
                        x4290,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x4309, 276359, 4)?;
    let x4310: BytePoly_32 = bigint_add!(bigint_sub!(x5, x4307, 32), x1, 32);
    let x4311: BytePoly_32 = bigint_add!(bigint_sub!(x4, x4304, 32), x1, 32);
    let x4312: BytePoly_32 = bigint_nondet_inv!(ctx, x4311, x1, 32);
    let x4313: BytePoly_64 = bigint_mul!(x4311, x4312, 64);
    let x4314: BytePoly_34 = bigint_nondet_quot!(ctx, x4313, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x4313, bigint_mul!(x4314, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x4315: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x4310, x4312, 64), x1, 32);
    let x4316: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x4315, x4311, 64), x4310, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x4317: BytePoly_34 = bigint_nondet_quot!(ctx, x4316, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x4316, bigint_mul!(x4317, x1, 66), 66),
        276359,
        4,
    )?;
    let x4318: BytePoly_64 = bigint_mul!(x4315, x4315, 64);
    let x4319: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x4318, x4304, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x4320: BytePoly_34 = bigint_nondet_quot!(ctx, x4319, x1, 34);
    let x4321: BytePoly_32 = bigint_nondet_rem!(ctx, x4319, x1, 32);
    let x4322: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x4315, x4321, 64),
                        bigint_add!(
                            bigint_sub!(x4307, bigint_mul!(x4315, x4304, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x4323: BytePoly_34 = bigint_nondet_quot!(ctx, x4322, x1, 34);
    let x4324: BytePoly_32 = bigint_nondet_rem!(ctx, x4322, x1, 32);
    let x4325: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x4318, bigint_mul!(x4320, x1, 66), 66),
                        x4304,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x4321,
        66
    );
    eqz(ctx, &x4325, 276359, 4)?;
    let x4326: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x4323, x1, 66), x4324, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x4315, bigint_sub!(x4304, x4321, 32), 64),
                        x4307,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x4326, 276359, 4)?;
    let x4327: BytePoly_32 = bigint_add!(bigint_sub!(x5, x4324, 32), x1, 32);
    let x4328: BytePoly_32 = bigint_add!(bigint_sub!(x4, x4321, 32), x1, 32);
    let x4329: BytePoly_32 = bigint_nondet_inv!(ctx, x4328, x1, 32);
    let x4330: BytePoly_64 = bigint_mul!(x4328, x4329, 64);
    let x4331: BytePoly_34 = bigint_nondet_quot!(ctx, x4330, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x4330, bigint_mul!(x4331, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x4332: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x4327, x4329, 64), x1, 32);
    let x4333: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x4332, x4328, 64), x4327, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x4334: BytePoly_34 = bigint_nondet_quot!(ctx, x4333, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x4333, bigint_mul!(x4334, x1, 66), 66),
        276359,
        4,
    )?;
    let x4335: BytePoly_64 = bigint_mul!(x4332, x4332, 64);
    let x4336: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x4335, x4321, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x4337: BytePoly_34 = bigint_nondet_quot!(ctx, x4336, x1, 34);
    let x4338: BytePoly_32 = bigint_nondet_rem!(ctx, x4336, x1, 32);
    let x4339: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x4332, x4338, 64),
                        bigint_add!(
                            bigint_sub!(x4324, bigint_mul!(x4332, x4321, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x4340: BytePoly_34 = bigint_nondet_quot!(ctx, x4339, x1, 34);
    let x4341: BytePoly_32 = bigint_nondet_rem!(ctx, x4339, x1, 32);
    let x4342: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x4335, bigint_mul!(x4337, x1, 66), 66),
                        x4321,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x4338,
        66
    );
    eqz(ctx, &x4342, 276359, 4)?;
    let x4343: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x4340, x1, 66), x4341, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x4332, bigint_sub!(x4321, x4338, 32), 64),
                        x4324,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x4343, 276359, 4)?;
    let x4344: BytePoly_32 = bigint_add!(bigint_sub!(x5, x4341, 32), x1, 32);
    let x4345: BytePoly_32 = bigint_add!(bigint_sub!(x4, x4338, 32), x1, 32);
    let x4346: BytePoly_32 = bigint_nondet_inv!(ctx, x4345, x1, 32);
    let x4347: BytePoly_64 = bigint_mul!(x4345, x4346, 64);
    let x4348: BytePoly_34 = bigint_nondet_quot!(ctx, x4347, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_sub!(x4347, bigint_mul!(x4348, x1, 66), 66), x0, 66),
        276359,
        4,
    )?;
    let x4349: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x4344, x4346, 64), x1, 32);
    let x4350: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(bigint_mul!(x4349, x4345, 64), x4344, 64),
            x1,
            64
        ),
        x1,
        64
    );
    let x4351: BytePoly_34 = bigint_nondet_quot!(ctx, x4350, x1, 34);
    eqz(
        ctx,
        &bigint_sub!(x4350, bigint_mul!(x4351, x1, 66), 66),
        276359,
        4,
    )?;
    let x4352: BytePoly_64 = bigint_mul!(x4349, x4349, 64);
    let x4353: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x4352, x4338, 64), x1, 64), x4, 64),
        x1,
        64
    );
    let x4354: BytePoly_34 = bigint_nondet_quot!(ctx, x4353, x1, 34);
    let x4355: BytePoly_32 = bigint_nondet_rem!(ctx, x4353, x1, 32);
    let x4356: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    x1,
                    bigint_add!(
                        bigint_mul!(x4349, x4355, 64),
                        bigint_add!(
                            bigint_sub!(x4341, bigint_mul!(x4349, x4338, 64), 64),
                            x1,
                            64
                        ),
                        64
                    ),
                    64
                ),
                x1,
                64
            ),
            x1,
            64
        ),
        x20,
        64
    );
    let x4357: BytePoly_34 = bigint_nondet_quot!(ctx, x4356, x1, 34);
    let x4358: BytePoly_32 = bigint_nondet_rem!(ctx, x4356, x1, 32);
    let x4359: BytePoly_66 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x4352, bigint_mul!(x4354, x1, 66), 66),
                        x4338,
                        66
                    ),
                    x4,
                    66
                ),
                x1,
                66
            ),
            x1,
            66
        ),
        x4355,
        66
    );
    eqz(ctx, &x4359, 276359, 4)?;
    let x4360: BytePoly_66 = bigint_sub!(
        bigint_add!(bigint_mul!(x4357, x1, 66), x4358, 66),
        bigint_add!(
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x4349, bigint_sub!(x4338, x4355, 32), 64),
                        x4341,
                        64
                    ),
                    x1,
                    64
                ),
                x1,
                64
            ),
            x20,
            64
        ),
        66
    );
    eqz(ctx, &x4360, 276359, 4)?;
    eqz(ctx, &bigint_sub!(x4355, x6, 32), 34, 1)?;
    eqz(ctx, &bigint_sub!(x4358, x7, 32), 34, 1)?;
    return Ok(());
}
pub fn rep_ec_aff_doub_test_full_256_r5(ctx: &mut BigIntContext) -> Result<()> {
    let x0: BytePoly_1 = bigint_const!(ctx, 0);
    let x1: BytePoly_32 = bigint_const!(
        ctx, 47, 252, 255, 255, 254, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
        255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255
    );
    let x2: BytePoly_32 = bigint_def!(ctx, 32, 0, 1);
    let x3: BytePoly_32 = bigint_def!(ctx, 32, 1, 1);
    let x4: BytePoly_32 = bigint_def!(ctx, 32, 2, 1);
    let x5: BytePoly_32 = bigint_def!(ctx, 32, 3, 1);
    let x6: BytePoly_64 = bigint_mul!(x2, x2, 64);
    let x7: BytePoly_64 = bigint_add!(bigint_add!(bigint_add!(x6, x6, 64), x6, 64), x0, 64);
    let x8: BytePoly_64 = bigint_mul!(x1, x1, 64);
    let x9: BytePoly_64 = bigint_add!(bigint_add!(x8, x8, 64), x7, 64);
    let x10: BytePoly_32 = bigint_add!(x3, x3, 32);
    let x11: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x12: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x11, 96), x1, 32);
    let x13: BytePoly_64 = bigint_mul!(x3, x12, 64);
    let x14: BytePoly_64 = bigint_add!(x13, x13, 64);
    let x15: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x14, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x15, x1, 66), x14, 66), x9, 66),
        276359,
        4,
    )?;
    let x16: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x12, x12, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x17: BytePoly_34 = bigint_nondet_quot!(ctx, x16, x1, 34);
    let x18: BytePoly_32 = bigint_nondet_rem!(ctx, x16, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x17, x1, 66), x18, 66), x16, 66),
        276359,
        4,
    )?;
    let x19: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x12, x18, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x12, x2, 64),
        64
    );
    let x20: BytePoly_34 = bigint_nondet_quot!(ctx, x19, x1, 34);
    let x21: BytePoly_32 = bigint_nondet_rem!(ctx, x19, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x20, x1, 66), x21, 66), x19, 66),
        276359,
        4,
    )?;
    let x22: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x23: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x22, 96), x1, 32);
    let x24: BytePoly_64 = bigint_mul!(x3, x23, 64);
    let x25: BytePoly_64 = bigint_add!(x24, x24, 64);
    let x26: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x25, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x26, x1, 66), x25, 66), x9, 66),
        276359,
        4,
    )?;
    let x27: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x23, x23, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x28: BytePoly_34 = bigint_nondet_quot!(ctx, x27, x1, 34);
    let x29: BytePoly_32 = bigint_nondet_rem!(ctx, x27, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x28, x1, 66), x29, 66), x27, 66),
        276359,
        4,
    )?;
    let x30: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x23, x29, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x23, x2, 64),
        64
    );
    let x31: BytePoly_34 = bigint_nondet_quot!(ctx, x30, x1, 34);
    let x32: BytePoly_32 = bigint_nondet_rem!(ctx, x30, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x31, x1, 66), x32, 66), x30, 66),
        276359,
        4,
    )?;
    let x33: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x34: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x33, 96), x1, 32);
    let x35: BytePoly_64 = bigint_mul!(x3, x34, 64);
    let x36: BytePoly_64 = bigint_add!(x35, x35, 64);
    let x37: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x36, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x37, x1, 66), x36, 66), x9, 66),
        276359,
        4,
    )?;
    let x38: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x34, x34, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x39: BytePoly_34 = bigint_nondet_quot!(ctx, x38, x1, 34);
    let x40: BytePoly_32 = bigint_nondet_rem!(ctx, x38, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x39, x1, 66), x40, 66), x38, 66),
        276359,
        4,
    )?;
    let x41: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x34, x40, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x34, x2, 64),
        64
    );
    let x42: BytePoly_34 = bigint_nondet_quot!(ctx, x41, x1, 34);
    let x43: BytePoly_32 = bigint_nondet_rem!(ctx, x41, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x42, x1, 66), x43, 66), x41, 66),
        276359,
        4,
    )?;
    let x44: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x45: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x44, 96), x1, 32);
    let x46: BytePoly_64 = bigint_mul!(x3, x45, 64);
    let x47: BytePoly_64 = bigint_add!(x46, x46, 64);
    let x48: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x47, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x48, x1, 66), x47, 66), x9, 66),
        276359,
        4,
    )?;
    let x49: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x45, x45, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x50: BytePoly_34 = bigint_nondet_quot!(ctx, x49, x1, 34);
    let x51: BytePoly_32 = bigint_nondet_rem!(ctx, x49, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x50, x1, 66), x51, 66), x49, 66),
        276359,
        4,
    )?;
    let x52: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x45, x51, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x45, x2, 64),
        64
    );
    let x53: BytePoly_34 = bigint_nondet_quot!(ctx, x52, x1, 34);
    let x54: BytePoly_32 = bigint_nondet_rem!(ctx, x52, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x53, x1, 66), x54, 66), x52, 66),
        276359,
        4,
    )?;
    let x55: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x56: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x55, 96), x1, 32);
    let x57: BytePoly_64 = bigint_mul!(x3, x56, 64);
    let x58: BytePoly_64 = bigint_add!(x57, x57, 64);
    let x59: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x58, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x59, x1, 66), x58, 66), x9, 66),
        276359,
        4,
    )?;
    let x60: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x56, x56, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x61: BytePoly_34 = bigint_nondet_quot!(ctx, x60, x1, 34);
    let x62: BytePoly_32 = bigint_nondet_rem!(ctx, x60, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x61, x1, 66), x62, 66), x60, 66),
        276359,
        4,
    )?;
    let x63: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x56, x62, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x56, x2, 64),
        64
    );
    let x64: BytePoly_34 = bigint_nondet_quot!(ctx, x63, x1, 34);
    let x65: BytePoly_32 = bigint_nondet_rem!(ctx, x63, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x64, x1, 66), x65, 66), x63, 66),
        276359,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x62, x4, 32), 34, 1)?;
    eqz(ctx, &bigint_sub!(x65, x5, 32), 34, 1)?;
    return Ok(());
}
pub fn rep_ec_aff_doub_test_full_256_r10(ctx: &mut BigIntContext) -> Result<()> {
    let x0: BytePoly_1 = bigint_const!(ctx, 0);
    let x1: BytePoly_32 = bigint_const!(
        ctx, 47, 252, 255, 255, 254, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
        255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255
    );
    let x2: BytePoly_32 = bigint_def!(ctx, 32, 0, 1);
    let x3: BytePoly_32 = bigint_def!(ctx, 32, 1, 1);
    let x4: BytePoly_32 = bigint_def!(ctx, 32, 2, 1);
    let x5: BytePoly_32 = bigint_def!(ctx, 32, 3, 1);
    let x6: BytePoly_64 = bigint_mul!(x2, x2, 64);
    let x7: BytePoly_64 = bigint_add!(bigint_add!(bigint_add!(x6, x6, 64), x6, 64), x0, 64);
    let x8: BytePoly_64 = bigint_mul!(x1, x1, 64);
    let x9: BytePoly_64 = bigint_add!(bigint_add!(x8, x8, 64), x7, 64);
    let x10: BytePoly_32 = bigint_add!(x3, x3, 32);
    let x11: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x12: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x11, 96), x1, 32);
    let x13: BytePoly_64 = bigint_mul!(x3, x12, 64);
    let x14: BytePoly_64 = bigint_add!(x13, x13, 64);
    let x15: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x14, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x15, x1, 66), x14, 66), x9, 66),
        276359,
        4,
    )?;
    let x16: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x12, x12, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x17: BytePoly_34 = bigint_nondet_quot!(ctx, x16, x1, 34);
    let x18: BytePoly_32 = bigint_nondet_rem!(ctx, x16, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x17, x1, 66), x18, 66), x16, 66),
        276359,
        4,
    )?;
    let x19: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x12, x18, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x12, x2, 64),
        64
    );
    let x20: BytePoly_34 = bigint_nondet_quot!(ctx, x19, x1, 34);
    let x21: BytePoly_32 = bigint_nondet_rem!(ctx, x19, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x20, x1, 66), x21, 66), x19, 66),
        276359,
        4,
    )?;
    let x22: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x23: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x22, 96), x1, 32);
    let x24: BytePoly_64 = bigint_mul!(x3, x23, 64);
    let x25: BytePoly_64 = bigint_add!(x24, x24, 64);
    let x26: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x25, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x26, x1, 66), x25, 66), x9, 66),
        276359,
        4,
    )?;
    let x27: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x23, x23, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x28: BytePoly_34 = bigint_nondet_quot!(ctx, x27, x1, 34);
    let x29: BytePoly_32 = bigint_nondet_rem!(ctx, x27, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x28, x1, 66), x29, 66), x27, 66),
        276359,
        4,
    )?;
    let x30: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x23, x29, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x23, x2, 64),
        64
    );
    let x31: BytePoly_34 = bigint_nondet_quot!(ctx, x30, x1, 34);
    let x32: BytePoly_32 = bigint_nondet_rem!(ctx, x30, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x31, x1, 66), x32, 66), x30, 66),
        276359,
        4,
    )?;
    let x33: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x34: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x33, 96), x1, 32);
    let x35: BytePoly_64 = bigint_mul!(x3, x34, 64);
    let x36: BytePoly_64 = bigint_add!(x35, x35, 64);
    let x37: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x36, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x37, x1, 66), x36, 66), x9, 66),
        276359,
        4,
    )?;
    let x38: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x34, x34, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x39: BytePoly_34 = bigint_nondet_quot!(ctx, x38, x1, 34);
    let x40: BytePoly_32 = bigint_nondet_rem!(ctx, x38, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x39, x1, 66), x40, 66), x38, 66),
        276359,
        4,
    )?;
    let x41: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x34, x40, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x34, x2, 64),
        64
    );
    let x42: BytePoly_34 = bigint_nondet_quot!(ctx, x41, x1, 34);
    let x43: BytePoly_32 = bigint_nondet_rem!(ctx, x41, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x42, x1, 66), x43, 66), x41, 66),
        276359,
        4,
    )?;
    let x44: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x45: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x44, 96), x1, 32);
    let x46: BytePoly_64 = bigint_mul!(x3, x45, 64);
    let x47: BytePoly_64 = bigint_add!(x46, x46, 64);
    let x48: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x47, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x48, x1, 66), x47, 66), x9, 66),
        276359,
        4,
    )?;
    let x49: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x45, x45, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x50: BytePoly_34 = bigint_nondet_quot!(ctx, x49, x1, 34);
    let x51: BytePoly_32 = bigint_nondet_rem!(ctx, x49, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x50, x1, 66), x51, 66), x49, 66),
        276359,
        4,
    )?;
    let x52: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x45, x51, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x45, x2, 64),
        64
    );
    let x53: BytePoly_34 = bigint_nondet_quot!(ctx, x52, x1, 34);
    let x54: BytePoly_32 = bigint_nondet_rem!(ctx, x52, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x53, x1, 66), x54, 66), x52, 66),
        276359,
        4,
    )?;
    let x55: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x56: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x55, 96), x1, 32);
    let x57: BytePoly_64 = bigint_mul!(x3, x56, 64);
    let x58: BytePoly_64 = bigint_add!(x57, x57, 64);
    let x59: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x58, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x59, x1, 66), x58, 66), x9, 66),
        276359,
        4,
    )?;
    let x60: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x56, x56, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x61: BytePoly_34 = bigint_nondet_quot!(ctx, x60, x1, 34);
    let x62: BytePoly_32 = bigint_nondet_rem!(ctx, x60, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x61, x1, 66), x62, 66), x60, 66),
        276359,
        4,
    )?;
    let x63: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x56, x62, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x56, x2, 64),
        64
    );
    let x64: BytePoly_34 = bigint_nondet_quot!(ctx, x63, x1, 34);
    let x65: BytePoly_32 = bigint_nondet_rem!(ctx, x63, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x64, x1, 66), x65, 66), x63, 66),
        276359,
        4,
    )?;
    let x66: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x67: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x66, 96), x1, 32);
    let x68: BytePoly_64 = bigint_mul!(x3, x67, 64);
    let x69: BytePoly_64 = bigint_add!(x68, x68, 64);
    let x70: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x69, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x70, x1, 66), x69, 66), x9, 66),
        276359,
        4,
    )?;
    let x71: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x67, x67, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x72: BytePoly_34 = bigint_nondet_quot!(ctx, x71, x1, 34);
    let x73: BytePoly_32 = bigint_nondet_rem!(ctx, x71, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x72, x1, 66), x73, 66), x71, 66),
        276359,
        4,
    )?;
    let x74: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x67, x73, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x67, x2, 64),
        64
    );
    let x75: BytePoly_34 = bigint_nondet_quot!(ctx, x74, x1, 34);
    let x76: BytePoly_32 = bigint_nondet_rem!(ctx, x74, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x75, x1, 66), x76, 66), x74, 66),
        276359,
        4,
    )?;
    let x77: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x78: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x77, 96), x1, 32);
    let x79: BytePoly_64 = bigint_mul!(x3, x78, 64);
    let x80: BytePoly_64 = bigint_add!(x79, x79, 64);
    let x81: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x80, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x81, x1, 66), x80, 66), x9, 66),
        276359,
        4,
    )?;
    let x82: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x78, x78, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x83: BytePoly_34 = bigint_nondet_quot!(ctx, x82, x1, 34);
    let x84: BytePoly_32 = bigint_nondet_rem!(ctx, x82, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x83, x1, 66), x84, 66), x82, 66),
        276359,
        4,
    )?;
    let x85: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x78, x84, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x78, x2, 64),
        64
    );
    let x86: BytePoly_34 = bigint_nondet_quot!(ctx, x85, x1, 34);
    let x87: BytePoly_32 = bigint_nondet_rem!(ctx, x85, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x86, x1, 66), x87, 66), x85, 66),
        276359,
        4,
    )?;
    let x88: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x89: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x88, 96), x1, 32);
    let x90: BytePoly_64 = bigint_mul!(x3, x89, 64);
    let x91: BytePoly_64 = bigint_add!(x90, x90, 64);
    let x92: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x91, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x92, x1, 66), x91, 66), x9, 66),
        276359,
        4,
    )?;
    let x93: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x89, x89, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x94: BytePoly_34 = bigint_nondet_quot!(ctx, x93, x1, 34);
    let x95: BytePoly_32 = bigint_nondet_rem!(ctx, x93, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x94, x1, 66), x95, 66), x93, 66),
        276359,
        4,
    )?;
    let x96: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x89, x95, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x89, x2, 64),
        64
    );
    let x97: BytePoly_34 = bigint_nondet_quot!(ctx, x96, x1, 34);
    let x98: BytePoly_32 = bigint_nondet_rem!(ctx, x96, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x97, x1, 66), x98, 66), x96, 66),
        276359,
        4,
    )?;
    let x99: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x100: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x99, 96), x1, 32);
    let x101: BytePoly_64 = bigint_mul!(x3, x100, 64);
    let x102: BytePoly_64 = bigint_add!(x101, x101, 64);
    let x103: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x102, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x103, x1, 66), x102, 66), x9, 66),
        276359,
        4,
    )?;
    let x104: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x100, x100, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x105: BytePoly_34 = bigint_nondet_quot!(ctx, x104, x1, 34);
    let x106: BytePoly_32 = bigint_nondet_rem!(ctx, x104, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x105, x1, 66), x106, 66), x104, 66),
        276359,
        4,
    )?;
    let x107: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x100, x106, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x100, x2, 64),
        64
    );
    let x108: BytePoly_34 = bigint_nondet_quot!(ctx, x107, x1, 34);
    let x109: BytePoly_32 = bigint_nondet_rem!(ctx, x107, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x108, x1, 66), x109, 66), x107, 66),
        276359,
        4,
    )?;
    let x110: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x111: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x110, 96), x1, 32);
    let x112: BytePoly_64 = bigint_mul!(x3, x111, 64);
    let x113: BytePoly_64 = bigint_add!(x112, x112, 64);
    let x114: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x113, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x114, x1, 66), x113, 66), x9, 66),
        276359,
        4,
    )?;
    let x115: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x111, x111, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x116: BytePoly_34 = bigint_nondet_quot!(ctx, x115, x1, 34);
    let x117: BytePoly_32 = bigint_nondet_rem!(ctx, x115, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x116, x1, 66), x117, 66), x115, 66),
        276359,
        4,
    )?;
    let x118: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x111, x117, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x111, x2, 64),
        64
    );
    let x119: BytePoly_34 = bigint_nondet_quot!(ctx, x118, x1, 34);
    let x120: BytePoly_32 = bigint_nondet_rem!(ctx, x118, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x119, x1, 66), x120, 66), x118, 66),
        276359,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x117, x4, 32), 34, 1)?;
    eqz(ctx, &bigint_sub!(x120, x5, 32), 34, 1)?;
    return Ok(());
}
pub fn rep_ec_aff_doub_test_full_256_r256(ctx: &mut BigIntContext) -> Result<()> {
    let x0: BytePoly_1 = bigint_const!(ctx, 0);
    let x1: BytePoly_32 = bigint_const!(
        ctx, 47, 252, 255, 255, 254, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
        255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255
    );
    let x2: BytePoly_32 = bigint_def!(ctx, 32, 0, 1);
    let x3: BytePoly_32 = bigint_def!(ctx, 32, 1, 1);
    let x4: BytePoly_32 = bigint_def!(ctx, 32, 2, 1);
    let x5: BytePoly_32 = bigint_def!(ctx, 32, 3, 1);
    let x6: BytePoly_64 = bigint_mul!(x2, x2, 64);
    let x7: BytePoly_64 = bigint_add!(bigint_add!(bigint_add!(x6, x6, 64), x6, 64), x0, 64);
    let x8: BytePoly_64 = bigint_mul!(x1, x1, 64);
    let x9: BytePoly_64 = bigint_add!(bigint_add!(x8, x8, 64), x7, 64);
    let x10: BytePoly_32 = bigint_add!(x3, x3, 32);
    let x11: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x12: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x11, 96), x1, 32);
    let x13: BytePoly_64 = bigint_mul!(x3, x12, 64);
    let x14: BytePoly_64 = bigint_add!(x13, x13, 64);
    let x15: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x14, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x15, x1, 66), x14, 66), x9, 66),
        276359,
        4,
    )?;
    let x16: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x12, x12, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x17: BytePoly_34 = bigint_nondet_quot!(ctx, x16, x1, 34);
    let x18: BytePoly_32 = bigint_nondet_rem!(ctx, x16, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x17, x1, 66), x18, 66), x16, 66),
        276359,
        4,
    )?;
    let x19: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x12, x18, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x12, x2, 64),
        64
    );
    let x20: BytePoly_34 = bigint_nondet_quot!(ctx, x19, x1, 34);
    let x21: BytePoly_32 = bigint_nondet_rem!(ctx, x19, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x20, x1, 66), x21, 66), x19, 66),
        276359,
        4,
    )?;
    let x22: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x23: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x22, 96), x1, 32);
    let x24: BytePoly_64 = bigint_mul!(x3, x23, 64);
    let x25: BytePoly_64 = bigint_add!(x24, x24, 64);
    let x26: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x25, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x26, x1, 66), x25, 66), x9, 66),
        276359,
        4,
    )?;
    let x27: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x23, x23, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x28: BytePoly_34 = bigint_nondet_quot!(ctx, x27, x1, 34);
    let x29: BytePoly_32 = bigint_nondet_rem!(ctx, x27, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x28, x1, 66), x29, 66), x27, 66),
        276359,
        4,
    )?;
    let x30: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x23, x29, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x23, x2, 64),
        64
    );
    let x31: BytePoly_34 = bigint_nondet_quot!(ctx, x30, x1, 34);
    let x32: BytePoly_32 = bigint_nondet_rem!(ctx, x30, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x31, x1, 66), x32, 66), x30, 66),
        276359,
        4,
    )?;
    let x33: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x34: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x33, 96), x1, 32);
    let x35: BytePoly_64 = bigint_mul!(x3, x34, 64);
    let x36: BytePoly_64 = bigint_add!(x35, x35, 64);
    let x37: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x36, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x37, x1, 66), x36, 66), x9, 66),
        276359,
        4,
    )?;
    let x38: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x34, x34, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x39: BytePoly_34 = bigint_nondet_quot!(ctx, x38, x1, 34);
    let x40: BytePoly_32 = bigint_nondet_rem!(ctx, x38, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x39, x1, 66), x40, 66), x38, 66),
        276359,
        4,
    )?;
    let x41: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x34, x40, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x34, x2, 64),
        64
    );
    let x42: BytePoly_34 = bigint_nondet_quot!(ctx, x41, x1, 34);
    let x43: BytePoly_32 = bigint_nondet_rem!(ctx, x41, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x42, x1, 66), x43, 66), x41, 66),
        276359,
        4,
    )?;
    let x44: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x45: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x44, 96), x1, 32);
    let x46: BytePoly_64 = bigint_mul!(x3, x45, 64);
    let x47: BytePoly_64 = bigint_add!(x46, x46, 64);
    let x48: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x47, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x48, x1, 66), x47, 66), x9, 66),
        276359,
        4,
    )?;
    let x49: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x45, x45, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x50: BytePoly_34 = bigint_nondet_quot!(ctx, x49, x1, 34);
    let x51: BytePoly_32 = bigint_nondet_rem!(ctx, x49, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x50, x1, 66), x51, 66), x49, 66),
        276359,
        4,
    )?;
    let x52: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x45, x51, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x45, x2, 64),
        64
    );
    let x53: BytePoly_34 = bigint_nondet_quot!(ctx, x52, x1, 34);
    let x54: BytePoly_32 = bigint_nondet_rem!(ctx, x52, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x53, x1, 66), x54, 66), x52, 66),
        276359,
        4,
    )?;
    let x55: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x56: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x55, 96), x1, 32);
    let x57: BytePoly_64 = bigint_mul!(x3, x56, 64);
    let x58: BytePoly_64 = bigint_add!(x57, x57, 64);
    let x59: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x58, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x59, x1, 66), x58, 66), x9, 66),
        276359,
        4,
    )?;
    let x60: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x56, x56, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x61: BytePoly_34 = bigint_nondet_quot!(ctx, x60, x1, 34);
    let x62: BytePoly_32 = bigint_nondet_rem!(ctx, x60, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x61, x1, 66), x62, 66), x60, 66),
        276359,
        4,
    )?;
    let x63: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x56, x62, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x56, x2, 64),
        64
    );
    let x64: BytePoly_34 = bigint_nondet_quot!(ctx, x63, x1, 34);
    let x65: BytePoly_32 = bigint_nondet_rem!(ctx, x63, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x64, x1, 66), x65, 66), x63, 66),
        276359,
        4,
    )?;
    let x66: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x67: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x66, 96), x1, 32);
    let x68: BytePoly_64 = bigint_mul!(x3, x67, 64);
    let x69: BytePoly_64 = bigint_add!(x68, x68, 64);
    let x70: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x69, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x70, x1, 66), x69, 66), x9, 66),
        276359,
        4,
    )?;
    let x71: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x67, x67, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x72: BytePoly_34 = bigint_nondet_quot!(ctx, x71, x1, 34);
    let x73: BytePoly_32 = bigint_nondet_rem!(ctx, x71, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x72, x1, 66), x73, 66), x71, 66),
        276359,
        4,
    )?;
    let x74: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x67, x73, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x67, x2, 64),
        64
    );
    let x75: BytePoly_34 = bigint_nondet_quot!(ctx, x74, x1, 34);
    let x76: BytePoly_32 = bigint_nondet_rem!(ctx, x74, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x75, x1, 66), x76, 66), x74, 66),
        276359,
        4,
    )?;
    let x77: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x78: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x77, 96), x1, 32);
    let x79: BytePoly_64 = bigint_mul!(x3, x78, 64);
    let x80: BytePoly_64 = bigint_add!(x79, x79, 64);
    let x81: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x80, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x81, x1, 66), x80, 66), x9, 66),
        276359,
        4,
    )?;
    let x82: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x78, x78, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x83: BytePoly_34 = bigint_nondet_quot!(ctx, x82, x1, 34);
    let x84: BytePoly_32 = bigint_nondet_rem!(ctx, x82, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x83, x1, 66), x84, 66), x82, 66),
        276359,
        4,
    )?;
    let x85: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x78, x84, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x78, x2, 64),
        64
    );
    let x86: BytePoly_34 = bigint_nondet_quot!(ctx, x85, x1, 34);
    let x87: BytePoly_32 = bigint_nondet_rem!(ctx, x85, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x86, x1, 66), x87, 66), x85, 66),
        276359,
        4,
    )?;
    let x88: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x89: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x88, 96), x1, 32);
    let x90: BytePoly_64 = bigint_mul!(x3, x89, 64);
    let x91: BytePoly_64 = bigint_add!(x90, x90, 64);
    let x92: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x91, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x92, x1, 66), x91, 66), x9, 66),
        276359,
        4,
    )?;
    let x93: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x89, x89, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x94: BytePoly_34 = bigint_nondet_quot!(ctx, x93, x1, 34);
    let x95: BytePoly_32 = bigint_nondet_rem!(ctx, x93, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x94, x1, 66), x95, 66), x93, 66),
        276359,
        4,
    )?;
    let x96: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x89, x95, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x89, x2, 64),
        64
    );
    let x97: BytePoly_34 = bigint_nondet_quot!(ctx, x96, x1, 34);
    let x98: BytePoly_32 = bigint_nondet_rem!(ctx, x96, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x97, x1, 66), x98, 66), x96, 66),
        276359,
        4,
    )?;
    let x99: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x100: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x99, 96), x1, 32);
    let x101: BytePoly_64 = bigint_mul!(x3, x100, 64);
    let x102: BytePoly_64 = bigint_add!(x101, x101, 64);
    let x103: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x102, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x103, x1, 66), x102, 66), x9, 66),
        276359,
        4,
    )?;
    let x104: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x100, x100, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x105: BytePoly_34 = bigint_nondet_quot!(ctx, x104, x1, 34);
    let x106: BytePoly_32 = bigint_nondet_rem!(ctx, x104, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x105, x1, 66), x106, 66), x104, 66),
        276359,
        4,
    )?;
    let x107: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x100, x106, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x100, x2, 64),
        64
    );
    let x108: BytePoly_34 = bigint_nondet_quot!(ctx, x107, x1, 34);
    let x109: BytePoly_32 = bigint_nondet_rem!(ctx, x107, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x108, x1, 66), x109, 66), x107, 66),
        276359,
        4,
    )?;
    let x110: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x111: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x110, 96), x1, 32);
    let x112: BytePoly_64 = bigint_mul!(x3, x111, 64);
    let x113: BytePoly_64 = bigint_add!(x112, x112, 64);
    let x114: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x113, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x114, x1, 66), x113, 66), x9, 66),
        276359,
        4,
    )?;
    let x115: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x111, x111, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x116: BytePoly_34 = bigint_nondet_quot!(ctx, x115, x1, 34);
    let x117: BytePoly_32 = bigint_nondet_rem!(ctx, x115, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x116, x1, 66), x117, 66), x115, 66),
        276359,
        4,
    )?;
    let x118: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x111, x117, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x111, x2, 64),
        64
    );
    let x119: BytePoly_34 = bigint_nondet_quot!(ctx, x118, x1, 34);
    let x120: BytePoly_32 = bigint_nondet_rem!(ctx, x118, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x119, x1, 66), x120, 66), x118, 66),
        276359,
        4,
    )?;
    let x121: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x122: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x121, 96), x1, 32);
    let x123: BytePoly_64 = bigint_mul!(x3, x122, 64);
    let x124: BytePoly_64 = bigint_add!(x123, x123, 64);
    let x125: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x124, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x125, x1, 66), x124, 66), x9, 66),
        276359,
        4,
    )?;
    let x126: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x122, x122, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x127: BytePoly_34 = bigint_nondet_quot!(ctx, x126, x1, 34);
    let x128: BytePoly_32 = bigint_nondet_rem!(ctx, x126, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x127, x1, 66), x128, 66), x126, 66),
        276359,
        4,
    )?;
    let x129: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x122, x128, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x122, x2, 64),
        64
    );
    let x130: BytePoly_34 = bigint_nondet_quot!(ctx, x129, x1, 34);
    let x131: BytePoly_32 = bigint_nondet_rem!(ctx, x129, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x130, x1, 66), x131, 66), x129, 66),
        276359,
        4,
    )?;
    let x132: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x133: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x132, 96), x1, 32);
    let x134: BytePoly_64 = bigint_mul!(x3, x133, 64);
    let x135: BytePoly_64 = bigint_add!(x134, x134, 64);
    let x136: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x135, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x136, x1, 66), x135, 66), x9, 66),
        276359,
        4,
    )?;
    let x137: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x133, x133, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x138: BytePoly_34 = bigint_nondet_quot!(ctx, x137, x1, 34);
    let x139: BytePoly_32 = bigint_nondet_rem!(ctx, x137, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x138, x1, 66), x139, 66), x137, 66),
        276359,
        4,
    )?;
    let x140: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x133, x139, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x133, x2, 64),
        64
    );
    let x141: BytePoly_34 = bigint_nondet_quot!(ctx, x140, x1, 34);
    let x142: BytePoly_32 = bigint_nondet_rem!(ctx, x140, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x141, x1, 66), x142, 66), x140, 66),
        276359,
        4,
    )?;
    let x143: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x144: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x143, 96), x1, 32);
    let x145: BytePoly_64 = bigint_mul!(x3, x144, 64);
    let x146: BytePoly_64 = bigint_add!(x145, x145, 64);
    let x147: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x146, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x147, x1, 66), x146, 66), x9, 66),
        276359,
        4,
    )?;
    let x148: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x144, x144, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x149: BytePoly_34 = bigint_nondet_quot!(ctx, x148, x1, 34);
    let x150: BytePoly_32 = bigint_nondet_rem!(ctx, x148, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x149, x1, 66), x150, 66), x148, 66),
        276359,
        4,
    )?;
    let x151: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x144, x150, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x144, x2, 64),
        64
    );
    let x152: BytePoly_34 = bigint_nondet_quot!(ctx, x151, x1, 34);
    let x153: BytePoly_32 = bigint_nondet_rem!(ctx, x151, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x152, x1, 66), x153, 66), x151, 66),
        276359,
        4,
    )?;
    let x154: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x155: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x154, 96), x1, 32);
    let x156: BytePoly_64 = bigint_mul!(x3, x155, 64);
    let x157: BytePoly_64 = bigint_add!(x156, x156, 64);
    let x158: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x157, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x158, x1, 66), x157, 66), x9, 66),
        276359,
        4,
    )?;
    let x159: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x155, x155, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x160: BytePoly_34 = bigint_nondet_quot!(ctx, x159, x1, 34);
    let x161: BytePoly_32 = bigint_nondet_rem!(ctx, x159, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x160, x1, 66), x161, 66), x159, 66),
        276359,
        4,
    )?;
    let x162: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x155, x161, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x155, x2, 64),
        64
    );
    let x163: BytePoly_34 = bigint_nondet_quot!(ctx, x162, x1, 34);
    let x164: BytePoly_32 = bigint_nondet_rem!(ctx, x162, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x163, x1, 66), x164, 66), x162, 66),
        276359,
        4,
    )?;
    let x165: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x166: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x165, 96), x1, 32);
    let x167: BytePoly_64 = bigint_mul!(x3, x166, 64);
    let x168: BytePoly_64 = bigint_add!(x167, x167, 64);
    let x169: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x168, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x169, x1, 66), x168, 66), x9, 66),
        276359,
        4,
    )?;
    let x170: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x166, x166, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x171: BytePoly_34 = bigint_nondet_quot!(ctx, x170, x1, 34);
    let x172: BytePoly_32 = bigint_nondet_rem!(ctx, x170, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x171, x1, 66), x172, 66), x170, 66),
        276359,
        4,
    )?;
    let x173: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x166, x172, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x166, x2, 64),
        64
    );
    let x174: BytePoly_34 = bigint_nondet_quot!(ctx, x173, x1, 34);
    let x175: BytePoly_32 = bigint_nondet_rem!(ctx, x173, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x174, x1, 66), x175, 66), x173, 66),
        276359,
        4,
    )?;
    let x176: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x177: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x176, 96), x1, 32);
    let x178: BytePoly_64 = bigint_mul!(x3, x177, 64);
    let x179: BytePoly_64 = bigint_add!(x178, x178, 64);
    let x180: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x179, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x180, x1, 66), x179, 66), x9, 66),
        276359,
        4,
    )?;
    let x181: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x177, x177, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x182: BytePoly_34 = bigint_nondet_quot!(ctx, x181, x1, 34);
    let x183: BytePoly_32 = bigint_nondet_rem!(ctx, x181, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x182, x1, 66), x183, 66), x181, 66),
        276359,
        4,
    )?;
    let x184: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x177, x183, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x177, x2, 64),
        64
    );
    let x185: BytePoly_34 = bigint_nondet_quot!(ctx, x184, x1, 34);
    let x186: BytePoly_32 = bigint_nondet_rem!(ctx, x184, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x185, x1, 66), x186, 66), x184, 66),
        276359,
        4,
    )?;
    let x187: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x188: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x187, 96), x1, 32);
    let x189: BytePoly_64 = bigint_mul!(x3, x188, 64);
    let x190: BytePoly_64 = bigint_add!(x189, x189, 64);
    let x191: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x190, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x191, x1, 66), x190, 66), x9, 66),
        276359,
        4,
    )?;
    let x192: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x188, x188, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x193: BytePoly_34 = bigint_nondet_quot!(ctx, x192, x1, 34);
    let x194: BytePoly_32 = bigint_nondet_rem!(ctx, x192, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x193, x1, 66), x194, 66), x192, 66),
        276359,
        4,
    )?;
    let x195: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x188, x194, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x188, x2, 64),
        64
    );
    let x196: BytePoly_34 = bigint_nondet_quot!(ctx, x195, x1, 34);
    let x197: BytePoly_32 = bigint_nondet_rem!(ctx, x195, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x196, x1, 66), x197, 66), x195, 66),
        276359,
        4,
    )?;
    let x198: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x199: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x198, 96), x1, 32);
    let x200: BytePoly_64 = bigint_mul!(x3, x199, 64);
    let x201: BytePoly_64 = bigint_add!(x200, x200, 64);
    let x202: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x201, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x202, x1, 66), x201, 66), x9, 66),
        276359,
        4,
    )?;
    let x203: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x199, x199, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x204: BytePoly_34 = bigint_nondet_quot!(ctx, x203, x1, 34);
    let x205: BytePoly_32 = bigint_nondet_rem!(ctx, x203, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x204, x1, 66), x205, 66), x203, 66),
        276359,
        4,
    )?;
    let x206: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x199, x205, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x199, x2, 64),
        64
    );
    let x207: BytePoly_34 = bigint_nondet_quot!(ctx, x206, x1, 34);
    let x208: BytePoly_32 = bigint_nondet_rem!(ctx, x206, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x207, x1, 66), x208, 66), x206, 66),
        276359,
        4,
    )?;
    let x209: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x210: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x209, 96), x1, 32);
    let x211: BytePoly_64 = bigint_mul!(x3, x210, 64);
    let x212: BytePoly_64 = bigint_add!(x211, x211, 64);
    let x213: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x212, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x213, x1, 66), x212, 66), x9, 66),
        276359,
        4,
    )?;
    let x214: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x210, x210, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x215: BytePoly_34 = bigint_nondet_quot!(ctx, x214, x1, 34);
    let x216: BytePoly_32 = bigint_nondet_rem!(ctx, x214, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x215, x1, 66), x216, 66), x214, 66),
        276359,
        4,
    )?;
    let x217: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x210, x216, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x210, x2, 64),
        64
    );
    let x218: BytePoly_34 = bigint_nondet_quot!(ctx, x217, x1, 34);
    let x219: BytePoly_32 = bigint_nondet_rem!(ctx, x217, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x218, x1, 66), x219, 66), x217, 66),
        276359,
        4,
    )?;
    let x220: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x221: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x220, 96), x1, 32);
    let x222: BytePoly_64 = bigint_mul!(x3, x221, 64);
    let x223: BytePoly_64 = bigint_add!(x222, x222, 64);
    let x224: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x223, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x224, x1, 66), x223, 66), x9, 66),
        276359,
        4,
    )?;
    let x225: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x221, x221, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x226: BytePoly_34 = bigint_nondet_quot!(ctx, x225, x1, 34);
    let x227: BytePoly_32 = bigint_nondet_rem!(ctx, x225, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x226, x1, 66), x227, 66), x225, 66),
        276359,
        4,
    )?;
    let x228: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x221, x227, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x221, x2, 64),
        64
    );
    let x229: BytePoly_34 = bigint_nondet_quot!(ctx, x228, x1, 34);
    let x230: BytePoly_32 = bigint_nondet_rem!(ctx, x228, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x229, x1, 66), x230, 66), x228, 66),
        276359,
        4,
    )?;
    let x231: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x232: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x231, 96), x1, 32);
    let x233: BytePoly_64 = bigint_mul!(x3, x232, 64);
    let x234: BytePoly_64 = bigint_add!(x233, x233, 64);
    let x235: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x234, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x235, x1, 66), x234, 66), x9, 66),
        276359,
        4,
    )?;
    let x236: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x232, x232, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x237: BytePoly_34 = bigint_nondet_quot!(ctx, x236, x1, 34);
    let x238: BytePoly_32 = bigint_nondet_rem!(ctx, x236, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x237, x1, 66), x238, 66), x236, 66),
        276359,
        4,
    )?;
    let x239: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x232, x238, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x232, x2, 64),
        64
    );
    let x240: BytePoly_34 = bigint_nondet_quot!(ctx, x239, x1, 34);
    let x241: BytePoly_32 = bigint_nondet_rem!(ctx, x239, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x240, x1, 66), x241, 66), x239, 66),
        276359,
        4,
    )?;
    let x242: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x243: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x242, 96), x1, 32);
    let x244: BytePoly_64 = bigint_mul!(x3, x243, 64);
    let x245: BytePoly_64 = bigint_add!(x244, x244, 64);
    let x246: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x245, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x246, x1, 66), x245, 66), x9, 66),
        276359,
        4,
    )?;
    let x247: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x243, x243, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x248: BytePoly_34 = bigint_nondet_quot!(ctx, x247, x1, 34);
    let x249: BytePoly_32 = bigint_nondet_rem!(ctx, x247, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x248, x1, 66), x249, 66), x247, 66),
        276359,
        4,
    )?;
    let x250: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x243, x249, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x243, x2, 64),
        64
    );
    let x251: BytePoly_34 = bigint_nondet_quot!(ctx, x250, x1, 34);
    let x252: BytePoly_32 = bigint_nondet_rem!(ctx, x250, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x251, x1, 66), x252, 66), x250, 66),
        276359,
        4,
    )?;
    let x253: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x254: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x253, 96), x1, 32);
    let x255: BytePoly_64 = bigint_mul!(x3, x254, 64);
    let x256: BytePoly_64 = bigint_add!(x255, x255, 64);
    let x257: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x256, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x257, x1, 66), x256, 66), x9, 66),
        276359,
        4,
    )?;
    let x258: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x254, x254, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x259: BytePoly_34 = bigint_nondet_quot!(ctx, x258, x1, 34);
    let x260: BytePoly_32 = bigint_nondet_rem!(ctx, x258, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x259, x1, 66), x260, 66), x258, 66),
        276359,
        4,
    )?;
    let x261: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x254, x260, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x254, x2, 64),
        64
    );
    let x262: BytePoly_34 = bigint_nondet_quot!(ctx, x261, x1, 34);
    let x263: BytePoly_32 = bigint_nondet_rem!(ctx, x261, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x262, x1, 66), x263, 66), x261, 66),
        276359,
        4,
    )?;
    let x264: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x265: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x264, 96), x1, 32);
    let x266: BytePoly_64 = bigint_mul!(x3, x265, 64);
    let x267: BytePoly_64 = bigint_add!(x266, x266, 64);
    let x268: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x267, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x268, x1, 66), x267, 66), x9, 66),
        276359,
        4,
    )?;
    let x269: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x265, x265, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x270: BytePoly_34 = bigint_nondet_quot!(ctx, x269, x1, 34);
    let x271: BytePoly_32 = bigint_nondet_rem!(ctx, x269, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x270, x1, 66), x271, 66), x269, 66),
        276359,
        4,
    )?;
    let x272: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x265, x271, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x265, x2, 64),
        64
    );
    let x273: BytePoly_34 = bigint_nondet_quot!(ctx, x272, x1, 34);
    let x274: BytePoly_32 = bigint_nondet_rem!(ctx, x272, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x273, x1, 66), x274, 66), x272, 66),
        276359,
        4,
    )?;
    let x275: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x276: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x275, 96), x1, 32);
    let x277: BytePoly_64 = bigint_mul!(x3, x276, 64);
    let x278: BytePoly_64 = bigint_add!(x277, x277, 64);
    let x279: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x278, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x279, x1, 66), x278, 66), x9, 66),
        276359,
        4,
    )?;
    let x280: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x276, x276, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x281: BytePoly_34 = bigint_nondet_quot!(ctx, x280, x1, 34);
    let x282: BytePoly_32 = bigint_nondet_rem!(ctx, x280, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x281, x1, 66), x282, 66), x280, 66),
        276359,
        4,
    )?;
    let x283: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x276, x282, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x276, x2, 64),
        64
    );
    let x284: BytePoly_34 = bigint_nondet_quot!(ctx, x283, x1, 34);
    let x285: BytePoly_32 = bigint_nondet_rem!(ctx, x283, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x284, x1, 66), x285, 66), x283, 66),
        276359,
        4,
    )?;
    let x286: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x287: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x286, 96), x1, 32);
    let x288: BytePoly_64 = bigint_mul!(x3, x287, 64);
    let x289: BytePoly_64 = bigint_add!(x288, x288, 64);
    let x290: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x289, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x290, x1, 66), x289, 66), x9, 66),
        276359,
        4,
    )?;
    let x291: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x287, x287, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x292: BytePoly_34 = bigint_nondet_quot!(ctx, x291, x1, 34);
    let x293: BytePoly_32 = bigint_nondet_rem!(ctx, x291, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x292, x1, 66), x293, 66), x291, 66),
        276359,
        4,
    )?;
    let x294: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x287, x293, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x287, x2, 64),
        64
    );
    let x295: BytePoly_34 = bigint_nondet_quot!(ctx, x294, x1, 34);
    let x296: BytePoly_32 = bigint_nondet_rem!(ctx, x294, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x295, x1, 66), x296, 66), x294, 66),
        276359,
        4,
    )?;
    let x297: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x298: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x297, 96), x1, 32);
    let x299: BytePoly_64 = bigint_mul!(x3, x298, 64);
    let x300: BytePoly_64 = bigint_add!(x299, x299, 64);
    let x301: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x300, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x301, x1, 66), x300, 66), x9, 66),
        276359,
        4,
    )?;
    let x302: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x298, x298, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x303: BytePoly_34 = bigint_nondet_quot!(ctx, x302, x1, 34);
    let x304: BytePoly_32 = bigint_nondet_rem!(ctx, x302, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x303, x1, 66), x304, 66), x302, 66),
        276359,
        4,
    )?;
    let x305: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x298, x304, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x298, x2, 64),
        64
    );
    let x306: BytePoly_34 = bigint_nondet_quot!(ctx, x305, x1, 34);
    let x307: BytePoly_32 = bigint_nondet_rem!(ctx, x305, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x306, x1, 66), x307, 66), x305, 66),
        276359,
        4,
    )?;
    let x308: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x309: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x308, 96), x1, 32);
    let x310: BytePoly_64 = bigint_mul!(x3, x309, 64);
    let x311: BytePoly_64 = bigint_add!(x310, x310, 64);
    let x312: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x311, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x312, x1, 66), x311, 66), x9, 66),
        276359,
        4,
    )?;
    let x313: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x309, x309, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x314: BytePoly_34 = bigint_nondet_quot!(ctx, x313, x1, 34);
    let x315: BytePoly_32 = bigint_nondet_rem!(ctx, x313, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x314, x1, 66), x315, 66), x313, 66),
        276359,
        4,
    )?;
    let x316: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x309, x315, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x309, x2, 64),
        64
    );
    let x317: BytePoly_34 = bigint_nondet_quot!(ctx, x316, x1, 34);
    let x318: BytePoly_32 = bigint_nondet_rem!(ctx, x316, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x317, x1, 66), x318, 66), x316, 66),
        276359,
        4,
    )?;
    let x319: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x320: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x319, 96), x1, 32);
    let x321: BytePoly_64 = bigint_mul!(x3, x320, 64);
    let x322: BytePoly_64 = bigint_add!(x321, x321, 64);
    let x323: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x322, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x323, x1, 66), x322, 66), x9, 66),
        276359,
        4,
    )?;
    let x324: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x320, x320, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x325: BytePoly_34 = bigint_nondet_quot!(ctx, x324, x1, 34);
    let x326: BytePoly_32 = bigint_nondet_rem!(ctx, x324, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x325, x1, 66), x326, 66), x324, 66),
        276359,
        4,
    )?;
    let x327: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x320, x326, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x320, x2, 64),
        64
    );
    let x328: BytePoly_34 = bigint_nondet_quot!(ctx, x327, x1, 34);
    let x329: BytePoly_32 = bigint_nondet_rem!(ctx, x327, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x328, x1, 66), x329, 66), x327, 66),
        276359,
        4,
    )?;
    let x330: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x331: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x330, 96), x1, 32);
    let x332: BytePoly_64 = bigint_mul!(x3, x331, 64);
    let x333: BytePoly_64 = bigint_add!(x332, x332, 64);
    let x334: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x333, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x334, x1, 66), x333, 66), x9, 66),
        276359,
        4,
    )?;
    let x335: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x331, x331, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x336: BytePoly_34 = bigint_nondet_quot!(ctx, x335, x1, 34);
    let x337: BytePoly_32 = bigint_nondet_rem!(ctx, x335, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x336, x1, 66), x337, 66), x335, 66),
        276359,
        4,
    )?;
    let x338: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x331, x337, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x331, x2, 64),
        64
    );
    let x339: BytePoly_34 = bigint_nondet_quot!(ctx, x338, x1, 34);
    let x340: BytePoly_32 = bigint_nondet_rem!(ctx, x338, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x339, x1, 66), x340, 66), x338, 66),
        276359,
        4,
    )?;
    let x341: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x342: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x341, 96), x1, 32);
    let x343: BytePoly_64 = bigint_mul!(x3, x342, 64);
    let x344: BytePoly_64 = bigint_add!(x343, x343, 64);
    let x345: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x344, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x345, x1, 66), x344, 66), x9, 66),
        276359,
        4,
    )?;
    let x346: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x342, x342, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x347: BytePoly_34 = bigint_nondet_quot!(ctx, x346, x1, 34);
    let x348: BytePoly_32 = bigint_nondet_rem!(ctx, x346, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x347, x1, 66), x348, 66), x346, 66),
        276359,
        4,
    )?;
    let x349: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x342, x348, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x342, x2, 64),
        64
    );
    let x350: BytePoly_34 = bigint_nondet_quot!(ctx, x349, x1, 34);
    let x351: BytePoly_32 = bigint_nondet_rem!(ctx, x349, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x350, x1, 66), x351, 66), x349, 66),
        276359,
        4,
    )?;
    let x352: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x353: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x352, 96), x1, 32);
    let x354: BytePoly_64 = bigint_mul!(x3, x353, 64);
    let x355: BytePoly_64 = bigint_add!(x354, x354, 64);
    let x356: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x355, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x356, x1, 66), x355, 66), x9, 66),
        276359,
        4,
    )?;
    let x357: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x353, x353, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x358: BytePoly_34 = bigint_nondet_quot!(ctx, x357, x1, 34);
    let x359: BytePoly_32 = bigint_nondet_rem!(ctx, x357, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x358, x1, 66), x359, 66), x357, 66),
        276359,
        4,
    )?;
    let x360: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x353, x359, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x353, x2, 64),
        64
    );
    let x361: BytePoly_34 = bigint_nondet_quot!(ctx, x360, x1, 34);
    let x362: BytePoly_32 = bigint_nondet_rem!(ctx, x360, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x361, x1, 66), x362, 66), x360, 66),
        276359,
        4,
    )?;
    let x363: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x364: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x363, 96), x1, 32);
    let x365: BytePoly_64 = bigint_mul!(x3, x364, 64);
    let x366: BytePoly_64 = bigint_add!(x365, x365, 64);
    let x367: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x366, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x367, x1, 66), x366, 66), x9, 66),
        276359,
        4,
    )?;
    let x368: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x364, x364, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x369: BytePoly_34 = bigint_nondet_quot!(ctx, x368, x1, 34);
    let x370: BytePoly_32 = bigint_nondet_rem!(ctx, x368, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x369, x1, 66), x370, 66), x368, 66),
        276359,
        4,
    )?;
    let x371: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x364, x370, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x364, x2, 64),
        64
    );
    let x372: BytePoly_34 = bigint_nondet_quot!(ctx, x371, x1, 34);
    let x373: BytePoly_32 = bigint_nondet_rem!(ctx, x371, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x372, x1, 66), x373, 66), x371, 66),
        276359,
        4,
    )?;
    let x374: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x375: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x374, 96), x1, 32);
    let x376: BytePoly_64 = bigint_mul!(x3, x375, 64);
    let x377: BytePoly_64 = bigint_add!(x376, x376, 64);
    let x378: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x377, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x378, x1, 66), x377, 66), x9, 66),
        276359,
        4,
    )?;
    let x379: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x375, x375, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x380: BytePoly_34 = bigint_nondet_quot!(ctx, x379, x1, 34);
    let x381: BytePoly_32 = bigint_nondet_rem!(ctx, x379, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x380, x1, 66), x381, 66), x379, 66),
        276359,
        4,
    )?;
    let x382: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x375, x381, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x375, x2, 64),
        64
    );
    let x383: BytePoly_34 = bigint_nondet_quot!(ctx, x382, x1, 34);
    let x384: BytePoly_32 = bigint_nondet_rem!(ctx, x382, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x383, x1, 66), x384, 66), x382, 66),
        276359,
        4,
    )?;
    let x385: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x386: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x385, 96), x1, 32);
    let x387: BytePoly_64 = bigint_mul!(x3, x386, 64);
    let x388: BytePoly_64 = bigint_add!(x387, x387, 64);
    let x389: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x388, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x389, x1, 66), x388, 66), x9, 66),
        276359,
        4,
    )?;
    let x390: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x386, x386, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x391: BytePoly_34 = bigint_nondet_quot!(ctx, x390, x1, 34);
    let x392: BytePoly_32 = bigint_nondet_rem!(ctx, x390, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x391, x1, 66), x392, 66), x390, 66),
        276359,
        4,
    )?;
    let x393: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x386, x392, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x386, x2, 64),
        64
    );
    let x394: BytePoly_34 = bigint_nondet_quot!(ctx, x393, x1, 34);
    let x395: BytePoly_32 = bigint_nondet_rem!(ctx, x393, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x394, x1, 66), x395, 66), x393, 66),
        276359,
        4,
    )?;
    let x396: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x397: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x396, 96), x1, 32);
    let x398: BytePoly_64 = bigint_mul!(x3, x397, 64);
    let x399: BytePoly_64 = bigint_add!(x398, x398, 64);
    let x400: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x399, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x400, x1, 66), x399, 66), x9, 66),
        276359,
        4,
    )?;
    let x401: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x397, x397, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x402: BytePoly_34 = bigint_nondet_quot!(ctx, x401, x1, 34);
    let x403: BytePoly_32 = bigint_nondet_rem!(ctx, x401, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x402, x1, 66), x403, 66), x401, 66),
        276359,
        4,
    )?;
    let x404: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x397, x403, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x397, x2, 64),
        64
    );
    let x405: BytePoly_34 = bigint_nondet_quot!(ctx, x404, x1, 34);
    let x406: BytePoly_32 = bigint_nondet_rem!(ctx, x404, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x405, x1, 66), x406, 66), x404, 66),
        276359,
        4,
    )?;
    let x407: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x408: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x407, 96), x1, 32);
    let x409: BytePoly_64 = bigint_mul!(x3, x408, 64);
    let x410: BytePoly_64 = bigint_add!(x409, x409, 64);
    let x411: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x410, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x411, x1, 66), x410, 66), x9, 66),
        276359,
        4,
    )?;
    let x412: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x408, x408, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x413: BytePoly_34 = bigint_nondet_quot!(ctx, x412, x1, 34);
    let x414: BytePoly_32 = bigint_nondet_rem!(ctx, x412, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x413, x1, 66), x414, 66), x412, 66),
        276359,
        4,
    )?;
    let x415: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x408, x414, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x408, x2, 64),
        64
    );
    let x416: BytePoly_34 = bigint_nondet_quot!(ctx, x415, x1, 34);
    let x417: BytePoly_32 = bigint_nondet_rem!(ctx, x415, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x416, x1, 66), x417, 66), x415, 66),
        276359,
        4,
    )?;
    let x418: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x419: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x418, 96), x1, 32);
    let x420: BytePoly_64 = bigint_mul!(x3, x419, 64);
    let x421: BytePoly_64 = bigint_add!(x420, x420, 64);
    let x422: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x421, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x422, x1, 66), x421, 66), x9, 66),
        276359,
        4,
    )?;
    let x423: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x419, x419, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x424: BytePoly_34 = bigint_nondet_quot!(ctx, x423, x1, 34);
    let x425: BytePoly_32 = bigint_nondet_rem!(ctx, x423, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x424, x1, 66), x425, 66), x423, 66),
        276359,
        4,
    )?;
    let x426: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x419, x425, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x419, x2, 64),
        64
    );
    let x427: BytePoly_34 = bigint_nondet_quot!(ctx, x426, x1, 34);
    let x428: BytePoly_32 = bigint_nondet_rem!(ctx, x426, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x427, x1, 66), x428, 66), x426, 66),
        276359,
        4,
    )?;
    let x429: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x430: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x429, 96), x1, 32);
    let x431: BytePoly_64 = bigint_mul!(x3, x430, 64);
    let x432: BytePoly_64 = bigint_add!(x431, x431, 64);
    let x433: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x432, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x433, x1, 66), x432, 66), x9, 66),
        276359,
        4,
    )?;
    let x434: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x430, x430, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x435: BytePoly_34 = bigint_nondet_quot!(ctx, x434, x1, 34);
    let x436: BytePoly_32 = bigint_nondet_rem!(ctx, x434, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x435, x1, 66), x436, 66), x434, 66),
        276359,
        4,
    )?;
    let x437: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x430, x436, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x430, x2, 64),
        64
    );
    let x438: BytePoly_34 = bigint_nondet_quot!(ctx, x437, x1, 34);
    let x439: BytePoly_32 = bigint_nondet_rem!(ctx, x437, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x438, x1, 66), x439, 66), x437, 66),
        276359,
        4,
    )?;
    let x440: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x441: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x440, 96), x1, 32);
    let x442: BytePoly_64 = bigint_mul!(x3, x441, 64);
    let x443: BytePoly_64 = bigint_add!(x442, x442, 64);
    let x444: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x443, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x444, x1, 66), x443, 66), x9, 66),
        276359,
        4,
    )?;
    let x445: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x441, x441, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x446: BytePoly_34 = bigint_nondet_quot!(ctx, x445, x1, 34);
    let x447: BytePoly_32 = bigint_nondet_rem!(ctx, x445, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x446, x1, 66), x447, 66), x445, 66),
        276359,
        4,
    )?;
    let x448: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x441, x447, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x441, x2, 64),
        64
    );
    let x449: BytePoly_34 = bigint_nondet_quot!(ctx, x448, x1, 34);
    let x450: BytePoly_32 = bigint_nondet_rem!(ctx, x448, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x449, x1, 66), x450, 66), x448, 66),
        276359,
        4,
    )?;
    let x451: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x452: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x451, 96), x1, 32);
    let x453: BytePoly_64 = bigint_mul!(x3, x452, 64);
    let x454: BytePoly_64 = bigint_add!(x453, x453, 64);
    let x455: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x454, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x455, x1, 66), x454, 66), x9, 66),
        276359,
        4,
    )?;
    let x456: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x452, x452, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x457: BytePoly_34 = bigint_nondet_quot!(ctx, x456, x1, 34);
    let x458: BytePoly_32 = bigint_nondet_rem!(ctx, x456, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x457, x1, 66), x458, 66), x456, 66),
        276359,
        4,
    )?;
    let x459: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x452, x458, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x452, x2, 64),
        64
    );
    let x460: BytePoly_34 = bigint_nondet_quot!(ctx, x459, x1, 34);
    let x461: BytePoly_32 = bigint_nondet_rem!(ctx, x459, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x460, x1, 66), x461, 66), x459, 66),
        276359,
        4,
    )?;
    let x462: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x463: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x462, 96), x1, 32);
    let x464: BytePoly_64 = bigint_mul!(x3, x463, 64);
    let x465: BytePoly_64 = bigint_add!(x464, x464, 64);
    let x466: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x465, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x466, x1, 66), x465, 66), x9, 66),
        276359,
        4,
    )?;
    let x467: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x463, x463, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x468: BytePoly_34 = bigint_nondet_quot!(ctx, x467, x1, 34);
    let x469: BytePoly_32 = bigint_nondet_rem!(ctx, x467, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x468, x1, 66), x469, 66), x467, 66),
        276359,
        4,
    )?;
    let x470: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x463, x469, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x463, x2, 64),
        64
    );
    let x471: BytePoly_34 = bigint_nondet_quot!(ctx, x470, x1, 34);
    let x472: BytePoly_32 = bigint_nondet_rem!(ctx, x470, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x471, x1, 66), x472, 66), x470, 66),
        276359,
        4,
    )?;
    let x473: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x474: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x473, 96), x1, 32);
    let x475: BytePoly_64 = bigint_mul!(x3, x474, 64);
    let x476: BytePoly_64 = bigint_add!(x475, x475, 64);
    let x477: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x476, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x477, x1, 66), x476, 66), x9, 66),
        276359,
        4,
    )?;
    let x478: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x474, x474, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x479: BytePoly_34 = bigint_nondet_quot!(ctx, x478, x1, 34);
    let x480: BytePoly_32 = bigint_nondet_rem!(ctx, x478, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x479, x1, 66), x480, 66), x478, 66),
        276359,
        4,
    )?;
    let x481: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x474, x480, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x474, x2, 64),
        64
    );
    let x482: BytePoly_34 = bigint_nondet_quot!(ctx, x481, x1, 34);
    let x483: BytePoly_32 = bigint_nondet_rem!(ctx, x481, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x482, x1, 66), x483, 66), x481, 66),
        276359,
        4,
    )?;
    let x484: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x485: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x484, 96), x1, 32);
    let x486: BytePoly_64 = bigint_mul!(x3, x485, 64);
    let x487: BytePoly_64 = bigint_add!(x486, x486, 64);
    let x488: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x487, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x488, x1, 66), x487, 66), x9, 66),
        276359,
        4,
    )?;
    let x489: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x485, x485, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x490: BytePoly_34 = bigint_nondet_quot!(ctx, x489, x1, 34);
    let x491: BytePoly_32 = bigint_nondet_rem!(ctx, x489, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x490, x1, 66), x491, 66), x489, 66),
        276359,
        4,
    )?;
    let x492: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x485, x491, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x485, x2, 64),
        64
    );
    let x493: BytePoly_34 = bigint_nondet_quot!(ctx, x492, x1, 34);
    let x494: BytePoly_32 = bigint_nondet_rem!(ctx, x492, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x493, x1, 66), x494, 66), x492, 66),
        276359,
        4,
    )?;
    let x495: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x496: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x495, 96), x1, 32);
    let x497: BytePoly_64 = bigint_mul!(x3, x496, 64);
    let x498: BytePoly_64 = bigint_add!(x497, x497, 64);
    let x499: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x498, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x499, x1, 66), x498, 66), x9, 66),
        276359,
        4,
    )?;
    let x500: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x496, x496, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x501: BytePoly_34 = bigint_nondet_quot!(ctx, x500, x1, 34);
    let x502: BytePoly_32 = bigint_nondet_rem!(ctx, x500, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x501, x1, 66), x502, 66), x500, 66),
        276359,
        4,
    )?;
    let x503: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x496, x502, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x496, x2, 64),
        64
    );
    let x504: BytePoly_34 = bigint_nondet_quot!(ctx, x503, x1, 34);
    let x505: BytePoly_32 = bigint_nondet_rem!(ctx, x503, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x504, x1, 66), x505, 66), x503, 66),
        276359,
        4,
    )?;
    let x506: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x507: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x506, 96), x1, 32);
    let x508: BytePoly_64 = bigint_mul!(x3, x507, 64);
    let x509: BytePoly_64 = bigint_add!(x508, x508, 64);
    let x510: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x509, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x510, x1, 66), x509, 66), x9, 66),
        276359,
        4,
    )?;
    let x511: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x507, x507, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x512: BytePoly_34 = bigint_nondet_quot!(ctx, x511, x1, 34);
    let x513: BytePoly_32 = bigint_nondet_rem!(ctx, x511, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x512, x1, 66), x513, 66), x511, 66),
        276359,
        4,
    )?;
    let x514: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x507, x513, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x507, x2, 64),
        64
    );
    let x515: BytePoly_34 = bigint_nondet_quot!(ctx, x514, x1, 34);
    let x516: BytePoly_32 = bigint_nondet_rem!(ctx, x514, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x515, x1, 66), x516, 66), x514, 66),
        276359,
        4,
    )?;
    let x517: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x518: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x517, 96), x1, 32);
    let x519: BytePoly_64 = bigint_mul!(x3, x518, 64);
    let x520: BytePoly_64 = bigint_add!(x519, x519, 64);
    let x521: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x520, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x521, x1, 66), x520, 66), x9, 66),
        276359,
        4,
    )?;
    let x522: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x518, x518, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x523: BytePoly_34 = bigint_nondet_quot!(ctx, x522, x1, 34);
    let x524: BytePoly_32 = bigint_nondet_rem!(ctx, x522, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x523, x1, 66), x524, 66), x522, 66),
        276359,
        4,
    )?;
    let x525: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x518, x524, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x518, x2, 64),
        64
    );
    let x526: BytePoly_34 = bigint_nondet_quot!(ctx, x525, x1, 34);
    let x527: BytePoly_32 = bigint_nondet_rem!(ctx, x525, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x526, x1, 66), x527, 66), x525, 66),
        276359,
        4,
    )?;
    let x528: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x529: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x528, 96), x1, 32);
    let x530: BytePoly_64 = bigint_mul!(x3, x529, 64);
    let x531: BytePoly_64 = bigint_add!(x530, x530, 64);
    let x532: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x531, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x532, x1, 66), x531, 66), x9, 66),
        276359,
        4,
    )?;
    let x533: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x529, x529, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x534: BytePoly_34 = bigint_nondet_quot!(ctx, x533, x1, 34);
    let x535: BytePoly_32 = bigint_nondet_rem!(ctx, x533, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x534, x1, 66), x535, 66), x533, 66),
        276359,
        4,
    )?;
    let x536: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x529, x535, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x529, x2, 64),
        64
    );
    let x537: BytePoly_34 = bigint_nondet_quot!(ctx, x536, x1, 34);
    let x538: BytePoly_32 = bigint_nondet_rem!(ctx, x536, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x537, x1, 66), x538, 66), x536, 66),
        276359,
        4,
    )?;
    let x539: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x540: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x539, 96), x1, 32);
    let x541: BytePoly_64 = bigint_mul!(x3, x540, 64);
    let x542: BytePoly_64 = bigint_add!(x541, x541, 64);
    let x543: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x542, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x543, x1, 66), x542, 66), x9, 66),
        276359,
        4,
    )?;
    let x544: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x540, x540, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x545: BytePoly_34 = bigint_nondet_quot!(ctx, x544, x1, 34);
    let x546: BytePoly_32 = bigint_nondet_rem!(ctx, x544, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x545, x1, 66), x546, 66), x544, 66),
        276359,
        4,
    )?;
    let x547: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x540, x546, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x540, x2, 64),
        64
    );
    let x548: BytePoly_34 = bigint_nondet_quot!(ctx, x547, x1, 34);
    let x549: BytePoly_32 = bigint_nondet_rem!(ctx, x547, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x548, x1, 66), x549, 66), x547, 66),
        276359,
        4,
    )?;
    let x550: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x551: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x550, 96), x1, 32);
    let x552: BytePoly_64 = bigint_mul!(x3, x551, 64);
    let x553: BytePoly_64 = bigint_add!(x552, x552, 64);
    let x554: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x553, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x554, x1, 66), x553, 66), x9, 66),
        276359,
        4,
    )?;
    let x555: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x551, x551, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x556: BytePoly_34 = bigint_nondet_quot!(ctx, x555, x1, 34);
    let x557: BytePoly_32 = bigint_nondet_rem!(ctx, x555, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x556, x1, 66), x557, 66), x555, 66),
        276359,
        4,
    )?;
    let x558: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x551, x557, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x551, x2, 64),
        64
    );
    let x559: BytePoly_34 = bigint_nondet_quot!(ctx, x558, x1, 34);
    let x560: BytePoly_32 = bigint_nondet_rem!(ctx, x558, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x559, x1, 66), x560, 66), x558, 66),
        276359,
        4,
    )?;
    let x561: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x562: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x561, 96), x1, 32);
    let x563: BytePoly_64 = bigint_mul!(x3, x562, 64);
    let x564: BytePoly_64 = bigint_add!(x563, x563, 64);
    let x565: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x564, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x565, x1, 66), x564, 66), x9, 66),
        276359,
        4,
    )?;
    let x566: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x562, x562, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x567: BytePoly_34 = bigint_nondet_quot!(ctx, x566, x1, 34);
    let x568: BytePoly_32 = bigint_nondet_rem!(ctx, x566, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x567, x1, 66), x568, 66), x566, 66),
        276359,
        4,
    )?;
    let x569: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x562, x568, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x562, x2, 64),
        64
    );
    let x570: BytePoly_34 = bigint_nondet_quot!(ctx, x569, x1, 34);
    let x571: BytePoly_32 = bigint_nondet_rem!(ctx, x569, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x570, x1, 66), x571, 66), x569, 66),
        276359,
        4,
    )?;
    let x572: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x573: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x572, 96), x1, 32);
    let x574: BytePoly_64 = bigint_mul!(x3, x573, 64);
    let x575: BytePoly_64 = bigint_add!(x574, x574, 64);
    let x576: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x575, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x576, x1, 66), x575, 66), x9, 66),
        276359,
        4,
    )?;
    let x577: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x573, x573, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x578: BytePoly_34 = bigint_nondet_quot!(ctx, x577, x1, 34);
    let x579: BytePoly_32 = bigint_nondet_rem!(ctx, x577, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x578, x1, 66), x579, 66), x577, 66),
        276359,
        4,
    )?;
    let x580: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x573, x579, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x573, x2, 64),
        64
    );
    let x581: BytePoly_34 = bigint_nondet_quot!(ctx, x580, x1, 34);
    let x582: BytePoly_32 = bigint_nondet_rem!(ctx, x580, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x581, x1, 66), x582, 66), x580, 66),
        276359,
        4,
    )?;
    let x583: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x584: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x583, 96), x1, 32);
    let x585: BytePoly_64 = bigint_mul!(x3, x584, 64);
    let x586: BytePoly_64 = bigint_add!(x585, x585, 64);
    let x587: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x586, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x587, x1, 66), x586, 66), x9, 66),
        276359,
        4,
    )?;
    let x588: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x584, x584, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x589: BytePoly_34 = bigint_nondet_quot!(ctx, x588, x1, 34);
    let x590: BytePoly_32 = bigint_nondet_rem!(ctx, x588, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x589, x1, 66), x590, 66), x588, 66),
        276359,
        4,
    )?;
    let x591: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x584, x590, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x584, x2, 64),
        64
    );
    let x592: BytePoly_34 = bigint_nondet_quot!(ctx, x591, x1, 34);
    let x593: BytePoly_32 = bigint_nondet_rem!(ctx, x591, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x592, x1, 66), x593, 66), x591, 66),
        276359,
        4,
    )?;
    let x594: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x595: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x594, 96), x1, 32);
    let x596: BytePoly_64 = bigint_mul!(x3, x595, 64);
    let x597: BytePoly_64 = bigint_add!(x596, x596, 64);
    let x598: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x597, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x598, x1, 66), x597, 66), x9, 66),
        276359,
        4,
    )?;
    let x599: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x595, x595, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x600: BytePoly_34 = bigint_nondet_quot!(ctx, x599, x1, 34);
    let x601: BytePoly_32 = bigint_nondet_rem!(ctx, x599, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x600, x1, 66), x601, 66), x599, 66),
        276359,
        4,
    )?;
    let x602: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x595, x601, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x595, x2, 64),
        64
    );
    let x603: BytePoly_34 = bigint_nondet_quot!(ctx, x602, x1, 34);
    let x604: BytePoly_32 = bigint_nondet_rem!(ctx, x602, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x603, x1, 66), x604, 66), x602, 66),
        276359,
        4,
    )?;
    let x605: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x606: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x605, 96), x1, 32);
    let x607: BytePoly_64 = bigint_mul!(x3, x606, 64);
    let x608: BytePoly_64 = bigint_add!(x607, x607, 64);
    let x609: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x608, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x609, x1, 66), x608, 66), x9, 66),
        276359,
        4,
    )?;
    let x610: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x606, x606, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x611: BytePoly_34 = bigint_nondet_quot!(ctx, x610, x1, 34);
    let x612: BytePoly_32 = bigint_nondet_rem!(ctx, x610, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x611, x1, 66), x612, 66), x610, 66),
        276359,
        4,
    )?;
    let x613: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x606, x612, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x606, x2, 64),
        64
    );
    let x614: BytePoly_34 = bigint_nondet_quot!(ctx, x613, x1, 34);
    let x615: BytePoly_32 = bigint_nondet_rem!(ctx, x613, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x614, x1, 66), x615, 66), x613, 66),
        276359,
        4,
    )?;
    let x616: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x617: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x616, 96), x1, 32);
    let x618: BytePoly_64 = bigint_mul!(x3, x617, 64);
    let x619: BytePoly_64 = bigint_add!(x618, x618, 64);
    let x620: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x619, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x620, x1, 66), x619, 66), x9, 66),
        276359,
        4,
    )?;
    let x621: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x617, x617, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x622: BytePoly_34 = bigint_nondet_quot!(ctx, x621, x1, 34);
    let x623: BytePoly_32 = bigint_nondet_rem!(ctx, x621, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x622, x1, 66), x623, 66), x621, 66),
        276359,
        4,
    )?;
    let x624: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x617, x623, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x617, x2, 64),
        64
    );
    let x625: BytePoly_34 = bigint_nondet_quot!(ctx, x624, x1, 34);
    let x626: BytePoly_32 = bigint_nondet_rem!(ctx, x624, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x625, x1, 66), x626, 66), x624, 66),
        276359,
        4,
    )?;
    let x627: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x628: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x627, 96), x1, 32);
    let x629: BytePoly_64 = bigint_mul!(x3, x628, 64);
    let x630: BytePoly_64 = bigint_add!(x629, x629, 64);
    let x631: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x630, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x631, x1, 66), x630, 66), x9, 66),
        276359,
        4,
    )?;
    let x632: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x628, x628, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x633: BytePoly_34 = bigint_nondet_quot!(ctx, x632, x1, 34);
    let x634: BytePoly_32 = bigint_nondet_rem!(ctx, x632, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x633, x1, 66), x634, 66), x632, 66),
        276359,
        4,
    )?;
    let x635: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x628, x634, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x628, x2, 64),
        64
    );
    let x636: BytePoly_34 = bigint_nondet_quot!(ctx, x635, x1, 34);
    let x637: BytePoly_32 = bigint_nondet_rem!(ctx, x635, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x636, x1, 66), x637, 66), x635, 66),
        276359,
        4,
    )?;
    let x638: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x639: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x638, 96), x1, 32);
    let x640: BytePoly_64 = bigint_mul!(x3, x639, 64);
    let x641: BytePoly_64 = bigint_add!(x640, x640, 64);
    let x642: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x641, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x642, x1, 66), x641, 66), x9, 66),
        276359,
        4,
    )?;
    let x643: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x639, x639, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x644: BytePoly_34 = bigint_nondet_quot!(ctx, x643, x1, 34);
    let x645: BytePoly_32 = bigint_nondet_rem!(ctx, x643, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x644, x1, 66), x645, 66), x643, 66),
        276359,
        4,
    )?;
    let x646: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x639, x645, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x639, x2, 64),
        64
    );
    let x647: BytePoly_34 = bigint_nondet_quot!(ctx, x646, x1, 34);
    let x648: BytePoly_32 = bigint_nondet_rem!(ctx, x646, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x647, x1, 66), x648, 66), x646, 66),
        276359,
        4,
    )?;
    let x649: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x650: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x649, 96), x1, 32);
    let x651: BytePoly_64 = bigint_mul!(x3, x650, 64);
    let x652: BytePoly_64 = bigint_add!(x651, x651, 64);
    let x653: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x652, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x653, x1, 66), x652, 66), x9, 66),
        276359,
        4,
    )?;
    let x654: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x650, x650, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x655: BytePoly_34 = bigint_nondet_quot!(ctx, x654, x1, 34);
    let x656: BytePoly_32 = bigint_nondet_rem!(ctx, x654, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x655, x1, 66), x656, 66), x654, 66),
        276359,
        4,
    )?;
    let x657: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x650, x656, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x650, x2, 64),
        64
    );
    let x658: BytePoly_34 = bigint_nondet_quot!(ctx, x657, x1, 34);
    let x659: BytePoly_32 = bigint_nondet_rem!(ctx, x657, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x658, x1, 66), x659, 66), x657, 66),
        276359,
        4,
    )?;
    let x660: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x661: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x660, 96), x1, 32);
    let x662: BytePoly_64 = bigint_mul!(x3, x661, 64);
    let x663: BytePoly_64 = bigint_add!(x662, x662, 64);
    let x664: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x663, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x664, x1, 66), x663, 66), x9, 66),
        276359,
        4,
    )?;
    let x665: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x661, x661, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x666: BytePoly_34 = bigint_nondet_quot!(ctx, x665, x1, 34);
    let x667: BytePoly_32 = bigint_nondet_rem!(ctx, x665, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x666, x1, 66), x667, 66), x665, 66),
        276359,
        4,
    )?;
    let x668: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x661, x667, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x661, x2, 64),
        64
    );
    let x669: BytePoly_34 = bigint_nondet_quot!(ctx, x668, x1, 34);
    let x670: BytePoly_32 = bigint_nondet_rem!(ctx, x668, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x669, x1, 66), x670, 66), x668, 66),
        276359,
        4,
    )?;
    let x671: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x672: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x671, 96), x1, 32);
    let x673: BytePoly_64 = bigint_mul!(x3, x672, 64);
    let x674: BytePoly_64 = bigint_add!(x673, x673, 64);
    let x675: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x674, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x675, x1, 66), x674, 66), x9, 66),
        276359,
        4,
    )?;
    let x676: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x672, x672, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x677: BytePoly_34 = bigint_nondet_quot!(ctx, x676, x1, 34);
    let x678: BytePoly_32 = bigint_nondet_rem!(ctx, x676, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x677, x1, 66), x678, 66), x676, 66),
        276359,
        4,
    )?;
    let x679: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x672, x678, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x672, x2, 64),
        64
    );
    let x680: BytePoly_34 = bigint_nondet_quot!(ctx, x679, x1, 34);
    let x681: BytePoly_32 = bigint_nondet_rem!(ctx, x679, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x680, x1, 66), x681, 66), x679, 66),
        276359,
        4,
    )?;
    let x682: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x683: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x682, 96), x1, 32);
    let x684: BytePoly_64 = bigint_mul!(x3, x683, 64);
    let x685: BytePoly_64 = bigint_add!(x684, x684, 64);
    let x686: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x685, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x686, x1, 66), x685, 66), x9, 66),
        276359,
        4,
    )?;
    let x687: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x683, x683, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x688: BytePoly_34 = bigint_nondet_quot!(ctx, x687, x1, 34);
    let x689: BytePoly_32 = bigint_nondet_rem!(ctx, x687, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x688, x1, 66), x689, 66), x687, 66),
        276359,
        4,
    )?;
    let x690: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x683, x689, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x683, x2, 64),
        64
    );
    let x691: BytePoly_34 = bigint_nondet_quot!(ctx, x690, x1, 34);
    let x692: BytePoly_32 = bigint_nondet_rem!(ctx, x690, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x691, x1, 66), x692, 66), x690, 66),
        276359,
        4,
    )?;
    let x693: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x694: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x693, 96), x1, 32);
    let x695: BytePoly_64 = bigint_mul!(x3, x694, 64);
    let x696: BytePoly_64 = bigint_add!(x695, x695, 64);
    let x697: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x696, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x697, x1, 66), x696, 66), x9, 66),
        276359,
        4,
    )?;
    let x698: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x694, x694, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x699: BytePoly_34 = bigint_nondet_quot!(ctx, x698, x1, 34);
    let x700: BytePoly_32 = bigint_nondet_rem!(ctx, x698, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x699, x1, 66), x700, 66), x698, 66),
        276359,
        4,
    )?;
    let x701: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x694, x700, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x694, x2, 64),
        64
    );
    let x702: BytePoly_34 = bigint_nondet_quot!(ctx, x701, x1, 34);
    let x703: BytePoly_32 = bigint_nondet_rem!(ctx, x701, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x702, x1, 66), x703, 66), x701, 66),
        276359,
        4,
    )?;
    let x704: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x705: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x704, 96), x1, 32);
    let x706: BytePoly_64 = bigint_mul!(x3, x705, 64);
    let x707: BytePoly_64 = bigint_add!(x706, x706, 64);
    let x708: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x707, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x708, x1, 66), x707, 66), x9, 66),
        276359,
        4,
    )?;
    let x709: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x705, x705, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x710: BytePoly_34 = bigint_nondet_quot!(ctx, x709, x1, 34);
    let x711: BytePoly_32 = bigint_nondet_rem!(ctx, x709, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x710, x1, 66), x711, 66), x709, 66),
        276359,
        4,
    )?;
    let x712: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x705, x711, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x705, x2, 64),
        64
    );
    let x713: BytePoly_34 = bigint_nondet_quot!(ctx, x712, x1, 34);
    let x714: BytePoly_32 = bigint_nondet_rem!(ctx, x712, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x713, x1, 66), x714, 66), x712, 66),
        276359,
        4,
    )?;
    let x715: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x716: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x715, 96), x1, 32);
    let x717: BytePoly_64 = bigint_mul!(x3, x716, 64);
    let x718: BytePoly_64 = bigint_add!(x717, x717, 64);
    let x719: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x718, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x719, x1, 66), x718, 66), x9, 66),
        276359,
        4,
    )?;
    let x720: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x716, x716, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x721: BytePoly_34 = bigint_nondet_quot!(ctx, x720, x1, 34);
    let x722: BytePoly_32 = bigint_nondet_rem!(ctx, x720, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x721, x1, 66), x722, 66), x720, 66),
        276359,
        4,
    )?;
    let x723: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x716, x722, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x716, x2, 64),
        64
    );
    let x724: BytePoly_34 = bigint_nondet_quot!(ctx, x723, x1, 34);
    let x725: BytePoly_32 = bigint_nondet_rem!(ctx, x723, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x724, x1, 66), x725, 66), x723, 66),
        276359,
        4,
    )?;
    let x726: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x727: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x726, 96), x1, 32);
    let x728: BytePoly_64 = bigint_mul!(x3, x727, 64);
    let x729: BytePoly_64 = bigint_add!(x728, x728, 64);
    let x730: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x729, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x730, x1, 66), x729, 66), x9, 66),
        276359,
        4,
    )?;
    let x731: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x727, x727, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x732: BytePoly_34 = bigint_nondet_quot!(ctx, x731, x1, 34);
    let x733: BytePoly_32 = bigint_nondet_rem!(ctx, x731, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x732, x1, 66), x733, 66), x731, 66),
        276359,
        4,
    )?;
    let x734: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x727, x733, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x727, x2, 64),
        64
    );
    let x735: BytePoly_34 = bigint_nondet_quot!(ctx, x734, x1, 34);
    let x736: BytePoly_32 = bigint_nondet_rem!(ctx, x734, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x735, x1, 66), x736, 66), x734, 66),
        276359,
        4,
    )?;
    let x737: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x738: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x737, 96), x1, 32);
    let x739: BytePoly_64 = bigint_mul!(x3, x738, 64);
    let x740: BytePoly_64 = bigint_add!(x739, x739, 64);
    let x741: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x740, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x741, x1, 66), x740, 66), x9, 66),
        276359,
        4,
    )?;
    let x742: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x738, x738, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x743: BytePoly_34 = bigint_nondet_quot!(ctx, x742, x1, 34);
    let x744: BytePoly_32 = bigint_nondet_rem!(ctx, x742, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x743, x1, 66), x744, 66), x742, 66),
        276359,
        4,
    )?;
    let x745: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x738, x744, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x738, x2, 64),
        64
    );
    let x746: BytePoly_34 = bigint_nondet_quot!(ctx, x745, x1, 34);
    let x747: BytePoly_32 = bigint_nondet_rem!(ctx, x745, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x746, x1, 66), x747, 66), x745, 66),
        276359,
        4,
    )?;
    let x748: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x749: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x748, 96), x1, 32);
    let x750: BytePoly_64 = bigint_mul!(x3, x749, 64);
    let x751: BytePoly_64 = bigint_add!(x750, x750, 64);
    let x752: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x751, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x752, x1, 66), x751, 66), x9, 66),
        276359,
        4,
    )?;
    let x753: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x749, x749, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x754: BytePoly_34 = bigint_nondet_quot!(ctx, x753, x1, 34);
    let x755: BytePoly_32 = bigint_nondet_rem!(ctx, x753, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x754, x1, 66), x755, 66), x753, 66),
        276359,
        4,
    )?;
    let x756: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x749, x755, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x749, x2, 64),
        64
    );
    let x757: BytePoly_34 = bigint_nondet_quot!(ctx, x756, x1, 34);
    let x758: BytePoly_32 = bigint_nondet_rem!(ctx, x756, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x757, x1, 66), x758, 66), x756, 66),
        276359,
        4,
    )?;
    let x759: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x760: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x759, 96), x1, 32);
    let x761: BytePoly_64 = bigint_mul!(x3, x760, 64);
    let x762: BytePoly_64 = bigint_add!(x761, x761, 64);
    let x763: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x762, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x763, x1, 66), x762, 66), x9, 66),
        276359,
        4,
    )?;
    let x764: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x760, x760, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x765: BytePoly_34 = bigint_nondet_quot!(ctx, x764, x1, 34);
    let x766: BytePoly_32 = bigint_nondet_rem!(ctx, x764, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x765, x1, 66), x766, 66), x764, 66),
        276359,
        4,
    )?;
    let x767: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x760, x766, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x760, x2, 64),
        64
    );
    let x768: BytePoly_34 = bigint_nondet_quot!(ctx, x767, x1, 34);
    let x769: BytePoly_32 = bigint_nondet_rem!(ctx, x767, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x768, x1, 66), x769, 66), x767, 66),
        276359,
        4,
    )?;
    let x770: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x771: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x770, 96), x1, 32);
    let x772: BytePoly_64 = bigint_mul!(x3, x771, 64);
    let x773: BytePoly_64 = bigint_add!(x772, x772, 64);
    let x774: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x773, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x774, x1, 66), x773, 66), x9, 66),
        276359,
        4,
    )?;
    let x775: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x771, x771, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x776: BytePoly_34 = bigint_nondet_quot!(ctx, x775, x1, 34);
    let x777: BytePoly_32 = bigint_nondet_rem!(ctx, x775, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x776, x1, 66), x777, 66), x775, 66),
        276359,
        4,
    )?;
    let x778: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x771, x777, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x771, x2, 64),
        64
    );
    let x779: BytePoly_34 = bigint_nondet_quot!(ctx, x778, x1, 34);
    let x780: BytePoly_32 = bigint_nondet_rem!(ctx, x778, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x779, x1, 66), x780, 66), x778, 66),
        276359,
        4,
    )?;
    let x781: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x782: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x781, 96), x1, 32);
    let x783: BytePoly_64 = bigint_mul!(x3, x782, 64);
    let x784: BytePoly_64 = bigint_add!(x783, x783, 64);
    let x785: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x784, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x785, x1, 66), x784, 66), x9, 66),
        276359,
        4,
    )?;
    let x786: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x782, x782, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x787: BytePoly_34 = bigint_nondet_quot!(ctx, x786, x1, 34);
    let x788: BytePoly_32 = bigint_nondet_rem!(ctx, x786, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x787, x1, 66), x788, 66), x786, 66),
        276359,
        4,
    )?;
    let x789: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x782, x788, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x782, x2, 64),
        64
    );
    let x790: BytePoly_34 = bigint_nondet_quot!(ctx, x789, x1, 34);
    let x791: BytePoly_32 = bigint_nondet_rem!(ctx, x789, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x790, x1, 66), x791, 66), x789, 66),
        276359,
        4,
    )?;
    let x792: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x793: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x792, 96), x1, 32);
    let x794: BytePoly_64 = bigint_mul!(x3, x793, 64);
    let x795: BytePoly_64 = bigint_add!(x794, x794, 64);
    let x796: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x795, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x796, x1, 66), x795, 66), x9, 66),
        276359,
        4,
    )?;
    let x797: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x793, x793, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x798: BytePoly_34 = bigint_nondet_quot!(ctx, x797, x1, 34);
    let x799: BytePoly_32 = bigint_nondet_rem!(ctx, x797, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x798, x1, 66), x799, 66), x797, 66),
        276359,
        4,
    )?;
    let x800: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x793, x799, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x793, x2, 64),
        64
    );
    let x801: BytePoly_34 = bigint_nondet_quot!(ctx, x800, x1, 34);
    let x802: BytePoly_32 = bigint_nondet_rem!(ctx, x800, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x801, x1, 66), x802, 66), x800, 66),
        276359,
        4,
    )?;
    let x803: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x804: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x803, 96), x1, 32);
    let x805: BytePoly_64 = bigint_mul!(x3, x804, 64);
    let x806: BytePoly_64 = bigint_add!(x805, x805, 64);
    let x807: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x806, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x807, x1, 66), x806, 66), x9, 66),
        276359,
        4,
    )?;
    let x808: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x804, x804, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x809: BytePoly_34 = bigint_nondet_quot!(ctx, x808, x1, 34);
    let x810: BytePoly_32 = bigint_nondet_rem!(ctx, x808, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x809, x1, 66), x810, 66), x808, 66),
        276359,
        4,
    )?;
    let x811: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x804, x810, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x804, x2, 64),
        64
    );
    let x812: BytePoly_34 = bigint_nondet_quot!(ctx, x811, x1, 34);
    let x813: BytePoly_32 = bigint_nondet_rem!(ctx, x811, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x812, x1, 66), x813, 66), x811, 66),
        276359,
        4,
    )?;
    let x814: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x815: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x814, 96), x1, 32);
    let x816: BytePoly_64 = bigint_mul!(x3, x815, 64);
    let x817: BytePoly_64 = bigint_add!(x816, x816, 64);
    let x818: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x817, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x818, x1, 66), x817, 66), x9, 66),
        276359,
        4,
    )?;
    let x819: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x815, x815, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x820: BytePoly_34 = bigint_nondet_quot!(ctx, x819, x1, 34);
    let x821: BytePoly_32 = bigint_nondet_rem!(ctx, x819, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x820, x1, 66), x821, 66), x819, 66),
        276359,
        4,
    )?;
    let x822: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x815, x821, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x815, x2, 64),
        64
    );
    let x823: BytePoly_34 = bigint_nondet_quot!(ctx, x822, x1, 34);
    let x824: BytePoly_32 = bigint_nondet_rem!(ctx, x822, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x823, x1, 66), x824, 66), x822, 66),
        276359,
        4,
    )?;
    let x825: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x826: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x825, 96), x1, 32);
    let x827: BytePoly_64 = bigint_mul!(x3, x826, 64);
    let x828: BytePoly_64 = bigint_add!(x827, x827, 64);
    let x829: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x828, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x829, x1, 66), x828, 66), x9, 66),
        276359,
        4,
    )?;
    let x830: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x826, x826, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x831: BytePoly_34 = bigint_nondet_quot!(ctx, x830, x1, 34);
    let x832: BytePoly_32 = bigint_nondet_rem!(ctx, x830, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x831, x1, 66), x832, 66), x830, 66),
        276359,
        4,
    )?;
    let x833: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x826, x832, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x826, x2, 64),
        64
    );
    let x834: BytePoly_34 = bigint_nondet_quot!(ctx, x833, x1, 34);
    let x835: BytePoly_32 = bigint_nondet_rem!(ctx, x833, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x834, x1, 66), x835, 66), x833, 66),
        276359,
        4,
    )?;
    let x836: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x837: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x836, 96), x1, 32);
    let x838: BytePoly_64 = bigint_mul!(x3, x837, 64);
    let x839: BytePoly_64 = bigint_add!(x838, x838, 64);
    let x840: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x839, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x840, x1, 66), x839, 66), x9, 66),
        276359,
        4,
    )?;
    let x841: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x837, x837, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x842: BytePoly_34 = bigint_nondet_quot!(ctx, x841, x1, 34);
    let x843: BytePoly_32 = bigint_nondet_rem!(ctx, x841, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x842, x1, 66), x843, 66), x841, 66),
        276359,
        4,
    )?;
    let x844: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x837, x843, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x837, x2, 64),
        64
    );
    let x845: BytePoly_34 = bigint_nondet_quot!(ctx, x844, x1, 34);
    let x846: BytePoly_32 = bigint_nondet_rem!(ctx, x844, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x845, x1, 66), x846, 66), x844, 66),
        276359,
        4,
    )?;
    let x847: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x848: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x847, 96), x1, 32);
    let x849: BytePoly_64 = bigint_mul!(x3, x848, 64);
    let x850: BytePoly_64 = bigint_add!(x849, x849, 64);
    let x851: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x850, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x851, x1, 66), x850, 66), x9, 66),
        276359,
        4,
    )?;
    let x852: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x848, x848, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x853: BytePoly_34 = bigint_nondet_quot!(ctx, x852, x1, 34);
    let x854: BytePoly_32 = bigint_nondet_rem!(ctx, x852, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x853, x1, 66), x854, 66), x852, 66),
        276359,
        4,
    )?;
    let x855: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x848, x854, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x848, x2, 64),
        64
    );
    let x856: BytePoly_34 = bigint_nondet_quot!(ctx, x855, x1, 34);
    let x857: BytePoly_32 = bigint_nondet_rem!(ctx, x855, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x856, x1, 66), x857, 66), x855, 66),
        276359,
        4,
    )?;
    let x858: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x859: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x858, 96), x1, 32);
    let x860: BytePoly_64 = bigint_mul!(x3, x859, 64);
    let x861: BytePoly_64 = bigint_add!(x860, x860, 64);
    let x862: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x861, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x862, x1, 66), x861, 66), x9, 66),
        276359,
        4,
    )?;
    let x863: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x859, x859, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x864: BytePoly_34 = bigint_nondet_quot!(ctx, x863, x1, 34);
    let x865: BytePoly_32 = bigint_nondet_rem!(ctx, x863, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x864, x1, 66), x865, 66), x863, 66),
        276359,
        4,
    )?;
    let x866: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x859, x865, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x859, x2, 64),
        64
    );
    let x867: BytePoly_34 = bigint_nondet_quot!(ctx, x866, x1, 34);
    let x868: BytePoly_32 = bigint_nondet_rem!(ctx, x866, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x867, x1, 66), x868, 66), x866, 66),
        276359,
        4,
    )?;
    let x869: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x870: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x869, 96), x1, 32);
    let x871: BytePoly_64 = bigint_mul!(x3, x870, 64);
    let x872: BytePoly_64 = bigint_add!(x871, x871, 64);
    let x873: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x872, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x873, x1, 66), x872, 66), x9, 66),
        276359,
        4,
    )?;
    let x874: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x870, x870, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x875: BytePoly_34 = bigint_nondet_quot!(ctx, x874, x1, 34);
    let x876: BytePoly_32 = bigint_nondet_rem!(ctx, x874, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x875, x1, 66), x876, 66), x874, 66),
        276359,
        4,
    )?;
    let x877: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x870, x876, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x870, x2, 64),
        64
    );
    let x878: BytePoly_34 = bigint_nondet_quot!(ctx, x877, x1, 34);
    let x879: BytePoly_32 = bigint_nondet_rem!(ctx, x877, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x878, x1, 66), x879, 66), x877, 66),
        276359,
        4,
    )?;
    let x880: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x881: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x880, 96), x1, 32);
    let x882: BytePoly_64 = bigint_mul!(x3, x881, 64);
    let x883: BytePoly_64 = bigint_add!(x882, x882, 64);
    let x884: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x883, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x884, x1, 66), x883, 66), x9, 66),
        276359,
        4,
    )?;
    let x885: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x881, x881, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x886: BytePoly_34 = bigint_nondet_quot!(ctx, x885, x1, 34);
    let x887: BytePoly_32 = bigint_nondet_rem!(ctx, x885, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x886, x1, 66), x887, 66), x885, 66),
        276359,
        4,
    )?;
    let x888: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x881, x887, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x881, x2, 64),
        64
    );
    let x889: BytePoly_34 = bigint_nondet_quot!(ctx, x888, x1, 34);
    let x890: BytePoly_32 = bigint_nondet_rem!(ctx, x888, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x889, x1, 66), x890, 66), x888, 66),
        276359,
        4,
    )?;
    let x891: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x892: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x891, 96), x1, 32);
    let x893: BytePoly_64 = bigint_mul!(x3, x892, 64);
    let x894: BytePoly_64 = bigint_add!(x893, x893, 64);
    let x895: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x894, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x895, x1, 66), x894, 66), x9, 66),
        276359,
        4,
    )?;
    let x896: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x892, x892, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x897: BytePoly_34 = bigint_nondet_quot!(ctx, x896, x1, 34);
    let x898: BytePoly_32 = bigint_nondet_rem!(ctx, x896, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x897, x1, 66), x898, 66), x896, 66),
        276359,
        4,
    )?;
    let x899: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x892, x898, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x892, x2, 64),
        64
    );
    let x900: BytePoly_34 = bigint_nondet_quot!(ctx, x899, x1, 34);
    let x901: BytePoly_32 = bigint_nondet_rem!(ctx, x899, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x900, x1, 66), x901, 66), x899, 66),
        276359,
        4,
    )?;
    let x902: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x903: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x902, 96), x1, 32);
    let x904: BytePoly_64 = bigint_mul!(x3, x903, 64);
    let x905: BytePoly_64 = bigint_add!(x904, x904, 64);
    let x906: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x905, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x906, x1, 66), x905, 66), x9, 66),
        276359,
        4,
    )?;
    let x907: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x903, x903, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x908: BytePoly_34 = bigint_nondet_quot!(ctx, x907, x1, 34);
    let x909: BytePoly_32 = bigint_nondet_rem!(ctx, x907, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x908, x1, 66), x909, 66), x907, 66),
        276359,
        4,
    )?;
    let x910: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x903, x909, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x903, x2, 64),
        64
    );
    let x911: BytePoly_34 = bigint_nondet_quot!(ctx, x910, x1, 34);
    let x912: BytePoly_32 = bigint_nondet_rem!(ctx, x910, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x911, x1, 66), x912, 66), x910, 66),
        276359,
        4,
    )?;
    let x913: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x914: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x913, 96), x1, 32);
    let x915: BytePoly_64 = bigint_mul!(x3, x914, 64);
    let x916: BytePoly_64 = bigint_add!(x915, x915, 64);
    let x917: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x916, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x917, x1, 66), x916, 66), x9, 66),
        276359,
        4,
    )?;
    let x918: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x914, x914, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x919: BytePoly_34 = bigint_nondet_quot!(ctx, x918, x1, 34);
    let x920: BytePoly_32 = bigint_nondet_rem!(ctx, x918, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x919, x1, 66), x920, 66), x918, 66),
        276359,
        4,
    )?;
    let x921: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x914, x920, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x914, x2, 64),
        64
    );
    let x922: BytePoly_34 = bigint_nondet_quot!(ctx, x921, x1, 34);
    let x923: BytePoly_32 = bigint_nondet_rem!(ctx, x921, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x922, x1, 66), x923, 66), x921, 66),
        276359,
        4,
    )?;
    let x924: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x925: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x924, 96), x1, 32);
    let x926: BytePoly_64 = bigint_mul!(x3, x925, 64);
    let x927: BytePoly_64 = bigint_add!(x926, x926, 64);
    let x928: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x927, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x928, x1, 66), x927, 66), x9, 66),
        276359,
        4,
    )?;
    let x929: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x925, x925, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x930: BytePoly_34 = bigint_nondet_quot!(ctx, x929, x1, 34);
    let x931: BytePoly_32 = bigint_nondet_rem!(ctx, x929, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x930, x1, 66), x931, 66), x929, 66),
        276359,
        4,
    )?;
    let x932: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x925, x931, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x925, x2, 64),
        64
    );
    let x933: BytePoly_34 = bigint_nondet_quot!(ctx, x932, x1, 34);
    let x934: BytePoly_32 = bigint_nondet_rem!(ctx, x932, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x933, x1, 66), x934, 66), x932, 66),
        276359,
        4,
    )?;
    let x935: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x936: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x935, 96), x1, 32);
    let x937: BytePoly_64 = bigint_mul!(x3, x936, 64);
    let x938: BytePoly_64 = bigint_add!(x937, x937, 64);
    let x939: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x938, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x939, x1, 66), x938, 66), x9, 66),
        276359,
        4,
    )?;
    let x940: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x936, x936, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x941: BytePoly_34 = bigint_nondet_quot!(ctx, x940, x1, 34);
    let x942: BytePoly_32 = bigint_nondet_rem!(ctx, x940, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x941, x1, 66), x942, 66), x940, 66),
        276359,
        4,
    )?;
    let x943: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x936, x942, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x936, x2, 64),
        64
    );
    let x944: BytePoly_34 = bigint_nondet_quot!(ctx, x943, x1, 34);
    let x945: BytePoly_32 = bigint_nondet_rem!(ctx, x943, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x944, x1, 66), x945, 66), x943, 66),
        276359,
        4,
    )?;
    let x946: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x947: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x946, 96), x1, 32);
    let x948: BytePoly_64 = bigint_mul!(x3, x947, 64);
    let x949: BytePoly_64 = bigint_add!(x948, x948, 64);
    let x950: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x949, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x950, x1, 66), x949, 66), x9, 66),
        276359,
        4,
    )?;
    let x951: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x947, x947, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x952: BytePoly_34 = bigint_nondet_quot!(ctx, x951, x1, 34);
    let x953: BytePoly_32 = bigint_nondet_rem!(ctx, x951, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x952, x1, 66), x953, 66), x951, 66),
        276359,
        4,
    )?;
    let x954: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x947, x953, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x947, x2, 64),
        64
    );
    let x955: BytePoly_34 = bigint_nondet_quot!(ctx, x954, x1, 34);
    let x956: BytePoly_32 = bigint_nondet_rem!(ctx, x954, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x955, x1, 66), x956, 66), x954, 66),
        276359,
        4,
    )?;
    let x957: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x958: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x957, 96), x1, 32);
    let x959: BytePoly_64 = bigint_mul!(x3, x958, 64);
    let x960: BytePoly_64 = bigint_add!(x959, x959, 64);
    let x961: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x960, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x961, x1, 66), x960, 66), x9, 66),
        276359,
        4,
    )?;
    let x962: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x958, x958, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x963: BytePoly_34 = bigint_nondet_quot!(ctx, x962, x1, 34);
    let x964: BytePoly_32 = bigint_nondet_rem!(ctx, x962, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x963, x1, 66), x964, 66), x962, 66),
        276359,
        4,
    )?;
    let x965: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x958, x964, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x958, x2, 64),
        64
    );
    let x966: BytePoly_34 = bigint_nondet_quot!(ctx, x965, x1, 34);
    let x967: BytePoly_32 = bigint_nondet_rem!(ctx, x965, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x966, x1, 66), x967, 66), x965, 66),
        276359,
        4,
    )?;
    let x968: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x969: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x968, 96), x1, 32);
    let x970: BytePoly_64 = bigint_mul!(x3, x969, 64);
    let x971: BytePoly_64 = bigint_add!(x970, x970, 64);
    let x972: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x971, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x972, x1, 66), x971, 66), x9, 66),
        276359,
        4,
    )?;
    let x973: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x969, x969, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x974: BytePoly_34 = bigint_nondet_quot!(ctx, x973, x1, 34);
    let x975: BytePoly_32 = bigint_nondet_rem!(ctx, x973, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x974, x1, 66), x975, 66), x973, 66),
        276359,
        4,
    )?;
    let x976: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x969, x975, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x969, x2, 64),
        64
    );
    let x977: BytePoly_34 = bigint_nondet_quot!(ctx, x976, x1, 34);
    let x978: BytePoly_32 = bigint_nondet_rem!(ctx, x976, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x977, x1, 66), x978, 66), x976, 66),
        276359,
        4,
    )?;
    let x979: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x980: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x979, 96), x1, 32);
    let x981: BytePoly_64 = bigint_mul!(x3, x980, 64);
    let x982: BytePoly_64 = bigint_add!(x981, x981, 64);
    let x983: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x982, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x983, x1, 66), x982, 66), x9, 66),
        276359,
        4,
    )?;
    let x984: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x980, x980, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x985: BytePoly_34 = bigint_nondet_quot!(ctx, x984, x1, 34);
    let x986: BytePoly_32 = bigint_nondet_rem!(ctx, x984, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x985, x1, 66), x986, 66), x984, 66),
        276359,
        4,
    )?;
    let x987: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x980, x986, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x980, x2, 64),
        64
    );
    let x988: BytePoly_34 = bigint_nondet_quot!(ctx, x987, x1, 34);
    let x989: BytePoly_32 = bigint_nondet_rem!(ctx, x987, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x988, x1, 66), x989, 66), x987, 66),
        276359,
        4,
    )?;
    let x990: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x991: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x990, 96), x1, 32);
    let x992: BytePoly_64 = bigint_mul!(x3, x991, 64);
    let x993: BytePoly_64 = bigint_add!(x992, x992, 64);
    let x994: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x993, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x994, x1, 66), x993, 66), x9, 66),
        276359,
        4,
    )?;
    let x995: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x991, x991, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x996: BytePoly_34 = bigint_nondet_quot!(ctx, x995, x1, 34);
    let x997: BytePoly_32 = bigint_nondet_rem!(ctx, x995, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x996, x1, 66), x997, 66), x995, 66),
        276359,
        4,
    )?;
    let x998: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x991, x997, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x991, x2, 64),
        64
    );
    let x999: BytePoly_34 = bigint_nondet_quot!(ctx, x998, x1, 34);
    let x1000: BytePoly_32 = bigint_nondet_rem!(ctx, x998, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x999, x1, 66), x1000, 66), x998, 66),
        276359,
        4,
    )?;
    let x1001: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x1002: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x1001, 96), x1, 32);
    let x1003: BytePoly_64 = bigint_mul!(x3, x1002, 64);
    let x1004: BytePoly_64 = bigint_add!(x1003, x1003, 64);
    let x1005: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x1004, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1005, x1, 66), x1004, 66), x9, 66),
        276359,
        4,
    )?;
    let x1006: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1002, x1002, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x1007: BytePoly_34 = bigint_nondet_quot!(ctx, x1006, x1, 34);
    let x1008: BytePoly_32 = bigint_nondet_rem!(ctx, x1006, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1007, x1, 66), x1008, 66),
            x1006,
            66
        ),
        276359,
        4,
    )?;
    let x1009: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x1002, x1008, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x1002, x2, 64),
        64
    );
    let x1010: BytePoly_34 = bigint_nondet_quot!(ctx, x1009, x1, 34);
    let x1011: BytePoly_32 = bigint_nondet_rem!(ctx, x1009, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1010, x1, 66), x1011, 66),
            x1009,
            66
        ),
        276359,
        4,
    )?;
    let x1012: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x1013: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x1012, 96), x1, 32);
    let x1014: BytePoly_64 = bigint_mul!(x3, x1013, 64);
    let x1015: BytePoly_64 = bigint_add!(x1014, x1014, 64);
    let x1016: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x1015, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1016, x1, 66), x1015, 66), x9, 66),
        276359,
        4,
    )?;
    let x1017: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1013, x1013, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x1018: BytePoly_34 = bigint_nondet_quot!(ctx, x1017, x1, 34);
    let x1019: BytePoly_32 = bigint_nondet_rem!(ctx, x1017, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1018, x1, 66), x1019, 66),
            x1017,
            66
        ),
        276359,
        4,
    )?;
    let x1020: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x1013, x1019, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x1013, x2, 64),
        64
    );
    let x1021: BytePoly_34 = bigint_nondet_quot!(ctx, x1020, x1, 34);
    let x1022: BytePoly_32 = bigint_nondet_rem!(ctx, x1020, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1021, x1, 66), x1022, 66),
            x1020,
            66
        ),
        276359,
        4,
    )?;
    let x1023: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x1024: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x1023, 96), x1, 32);
    let x1025: BytePoly_64 = bigint_mul!(x3, x1024, 64);
    let x1026: BytePoly_64 = bigint_add!(x1025, x1025, 64);
    let x1027: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x1026, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1027, x1, 66), x1026, 66), x9, 66),
        276359,
        4,
    )?;
    let x1028: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1024, x1024, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x1029: BytePoly_34 = bigint_nondet_quot!(ctx, x1028, x1, 34);
    let x1030: BytePoly_32 = bigint_nondet_rem!(ctx, x1028, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1029, x1, 66), x1030, 66),
            x1028,
            66
        ),
        276359,
        4,
    )?;
    let x1031: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x1024, x1030, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x1024, x2, 64),
        64
    );
    let x1032: BytePoly_34 = bigint_nondet_quot!(ctx, x1031, x1, 34);
    let x1033: BytePoly_32 = bigint_nondet_rem!(ctx, x1031, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1032, x1, 66), x1033, 66),
            x1031,
            66
        ),
        276359,
        4,
    )?;
    let x1034: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x1035: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x1034, 96), x1, 32);
    let x1036: BytePoly_64 = bigint_mul!(x3, x1035, 64);
    let x1037: BytePoly_64 = bigint_add!(x1036, x1036, 64);
    let x1038: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x1037, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1038, x1, 66), x1037, 66), x9, 66),
        276359,
        4,
    )?;
    let x1039: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1035, x1035, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x1040: BytePoly_34 = bigint_nondet_quot!(ctx, x1039, x1, 34);
    let x1041: BytePoly_32 = bigint_nondet_rem!(ctx, x1039, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1040, x1, 66), x1041, 66),
            x1039,
            66
        ),
        276359,
        4,
    )?;
    let x1042: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x1035, x1041, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x1035, x2, 64),
        64
    );
    let x1043: BytePoly_34 = bigint_nondet_quot!(ctx, x1042, x1, 34);
    let x1044: BytePoly_32 = bigint_nondet_rem!(ctx, x1042, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1043, x1, 66), x1044, 66),
            x1042,
            66
        ),
        276359,
        4,
    )?;
    let x1045: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x1046: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x1045, 96), x1, 32);
    let x1047: BytePoly_64 = bigint_mul!(x3, x1046, 64);
    let x1048: BytePoly_64 = bigint_add!(x1047, x1047, 64);
    let x1049: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x1048, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1049, x1, 66), x1048, 66), x9, 66),
        276359,
        4,
    )?;
    let x1050: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1046, x1046, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x1051: BytePoly_34 = bigint_nondet_quot!(ctx, x1050, x1, 34);
    let x1052: BytePoly_32 = bigint_nondet_rem!(ctx, x1050, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1051, x1, 66), x1052, 66),
            x1050,
            66
        ),
        276359,
        4,
    )?;
    let x1053: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x1046, x1052, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x1046, x2, 64),
        64
    );
    let x1054: BytePoly_34 = bigint_nondet_quot!(ctx, x1053, x1, 34);
    let x1055: BytePoly_32 = bigint_nondet_rem!(ctx, x1053, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1054, x1, 66), x1055, 66),
            x1053,
            66
        ),
        276359,
        4,
    )?;
    let x1056: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x1057: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x1056, 96), x1, 32);
    let x1058: BytePoly_64 = bigint_mul!(x3, x1057, 64);
    let x1059: BytePoly_64 = bigint_add!(x1058, x1058, 64);
    let x1060: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x1059, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1060, x1, 66), x1059, 66), x9, 66),
        276359,
        4,
    )?;
    let x1061: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1057, x1057, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x1062: BytePoly_34 = bigint_nondet_quot!(ctx, x1061, x1, 34);
    let x1063: BytePoly_32 = bigint_nondet_rem!(ctx, x1061, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1062, x1, 66), x1063, 66),
            x1061,
            66
        ),
        276359,
        4,
    )?;
    let x1064: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x1057, x1063, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x1057, x2, 64),
        64
    );
    let x1065: BytePoly_34 = bigint_nondet_quot!(ctx, x1064, x1, 34);
    let x1066: BytePoly_32 = bigint_nondet_rem!(ctx, x1064, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1065, x1, 66), x1066, 66),
            x1064,
            66
        ),
        276359,
        4,
    )?;
    let x1067: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x1068: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x1067, 96), x1, 32);
    let x1069: BytePoly_64 = bigint_mul!(x3, x1068, 64);
    let x1070: BytePoly_64 = bigint_add!(x1069, x1069, 64);
    let x1071: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x1070, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1071, x1, 66), x1070, 66), x9, 66),
        276359,
        4,
    )?;
    let x1072: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1068, x1068, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x1073: BytePoly_34 = bigint_nondet_quot!(ctx, x1072, x1, 34);
    let x1074: BytePoly_32 = bigint_nondet_rem!(ctx, x1072, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1073, x1, 66), x1074, 66),
            x1072,
            66
        ),
        276359,
        4,
    )?;
    let x1075: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x1068, x1074, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x1068, x2, 64),
        64
    );
    let x1076: BytePoly_34 = bigint_nondet_quot!(ctx, x1075, x1, 34);
    let x1077: BytePoly_32 = bigint_nondet_rem!(ctx, x1075, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1076, x1, 66), x1077, 66),
            x1075,
            66
        ),
        276359,
        4,
    )?;
    let x1078: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x1079: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x1078, 96), x1, 32);
    let x1080: BytePoly_64 = bigint_mul!(x3, x1079, 64);
    let x1081: BytePoly_64 = bigint_add!(x1080, x1080, 64);
    let x1082: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x1081, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1082, x1, 66), x1081, 66), x9, 66),
        276359,
        4,
    )?;
    let x1083: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1079, x1079, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x1084: BytePoly_34 = bigint_nondet_quot!(ctx, x1083, x1, 34);
    let x1085: BytePoly_32 = bigint_nondet_rem!(ctx, x1083, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1084, x1, 66), x1085, 66),
            x1083,
            66
        ),
        276359,
        4,
    )?;
    let x1086: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x1079, x1085, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x1079, x2, 64),
        64
    );
    let x1087: BytePoly_34 = bigint_nondet_quot!(ctx, x1086, x1, 34);
    let x1088: BytePoly_32 = bigint_nondet_rem!(ctx, x1086, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1087, x1, 66), x1088, 66),
            x1086,
            66
        ),
        276359,
        4,
    )?;
    let x1089: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x1090: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x1089, 96), x1, 32);
    let x1091: BytePoly_64 = bigint_mul!(x3, x1090, 64);
    let x1092: BytePoly_64 = bigint_add!(x1091, x1091, 64);
    let x1093: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x1092, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1093, x1, 66), x1092, 66), x9, 66),
        276359,
        4,
    )?;
    let x1094: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1090, x1090, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x1095: BytePoly_34 = bigint_nondet_quot!(ctx, x1094, x1, 34);
    let x1096: BytePoly_32 = bigint_nondet_rem!(ctx, x1094, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1095, x1, 66), x1096, 66),
            x1094,
            66
        ),
        276359,
        4,
    )?;
    let x1097: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x1090, x1096, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x1090, x2, 64),
        64
    );
    let x1098: BytePoly_34 = bigint_nondet_quot!(ctx, x1097, x1, 34);
    let x1099: BytePoly_32 = bigint_nondet_rem!(ctx, x1097, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1098, x1, 66), x1099, 66),
            x1097,
            66
        ),
        276359,
        4,
    )?;
    let x1100: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x1101: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x1100, 96), x1, 32);
    let x1102: BytePoly_64 = bigint_mul!(x3, x1101, 64);
    let x1103: BytePoly_64 = bigint_add!(x1102, x1102, 64);
    let x1104: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x1103, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1104, x1, 66), x1103, 66), x9, 66),
        276359,
        4,
    )?;
    let x1105: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1101, x1101, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x1106: BytePoly_34 = bigint_nondet_quot!(ctx, x1105, x1, 34);
    let x1107: BytePoly_32 = bigint_nondet_rem!(ctx, x1105, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1106, x1, 66), x1107, 66),
            x1105,
            66
        ),
        276359,
        4,
    )?;
    let x1108: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x1101, x1107, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x1101, x2, 64),
        64
    );
    let x1109: BytePoly_34 = bigint_nondet_quot!(ctx, x1108, x1, 34);
    let x1110: BytePoly_32 = bigint_nondet_rem!(ctx, x1108, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1109, x1, 66), x1110, 66),
            x1108,
            66
        ),
        276359,
        4,
    )?;
    let x1111: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x1112: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x1111, 96), x1, 32);
    let x1113: BytePoly_64 = bigint_mul!(x3, x1112, 64);
    let x1114: BytePoly_64 = bigint_add!(x1113, x1113, 64);
    let x1115: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x1114, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1115, x1, 66), x1114, 66), x9, 66),
        276359,
        4,
    )?;
    let x1116: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1112, x1112, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x1117: BytePoly_34 = bigint_nondet_quot!(ctx, x1116, x1, 34);
    let x1118: BytePoly_32 = bigint_nondet_rem!(ctx, x1116, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1117, x1, 66), x1118, 66),
            x1116,
            66
        ),
        276359,
        4,
    )?;
    let x1119: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x1112, x1118, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x1112, x2, 64),
        64
    );
    let x1120: BytePoly_34 = bigint_nondet_quot!(ctx, x1119, x1, 34);
    let x1121: BytePoly_32 = bigint_nondet_rem!(ctx, x1119, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1120, x1, 66), x1121, 66),
            x1119,
            66
        ),
        276359,
        4,
    )?;
    let x1122: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x1123: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x1122, 96), x1, 32);
    let x1124: BytePoly_64 = bigint_mul!(x3, x1123, 64);
    let x1125: BytePoly_64 = bigint_add!(x1124, x1124, 64);
    let x1126: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x1125, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1126, x1, 66), x1125, 66), x9, 66),
        276359,
        4,
    )?;
    let x1127: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1123, x1123, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x1128: BytePoly_34 = bigint_nondet_quot!(ctx, x1127, x1, 34);
    let x1129: BytePoly_32 = bigint_nondet_rem!(ctx, x1127, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1128, x1, 66), x1129, 66),
            x1127,
            66
        ),
        276359,
        4,
    )?;
    let x1130: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x1123, x1129, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x1123, x2, 64),
        64
    );
    let x1131: BytePoly_34 = bigint_nondet_quot!(ctx, x1130, x1, 34);
    let x1132: BytePoly_32 = bigint_nondet_rem!(ctx, x1130, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1131, x1, 66), x1132, 66),
            x1130,
            66
        ),
        276359,
        4,
    )?;
    let x1133: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x1134: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x1133, 96), x1, 32);
    let x1135: BytePoly_64 = bigint_mul!(x3, x1134, 64);
    let x1136: BytePoly_64 = bigint_add!(x1135, x1135, 64);
    let x1137: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x1136, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1137, x1, 66), x1136, 66), x9, 66),
        276359,
        4,
    )?;
    let x1138: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1134, x1134, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x1139: BytePoly_34 = bigint_nondet_quot!(ctx, x1138, x1, 34);
    let x1140: BytePoly_32 = bigint_nondet_rem!(ctx, x1138, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1139, x1, 66), x1140, 66),
            x1138,
            66
        ),
        276359,
        4,
    )?;
    let x1141: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x1134, x1140, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x1134, x2, 64),
        64
    );
    let x1142: BytePoly_34 = bigint_nondet_quot!(ctx, x1141, x1, 34);
    let x1143: BytePoly_32 = bigint_nondet_rem!(ctx, x1141, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1142, x1, 66), x1143, 66),
            x1141,
            66
        ),
        276359,
        4,
    )?;
    let x1144: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x1145: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x1144, 96), x1, 32);
    let x1146: BytePoly_64 = bigint_mul!(x3, x1145, 64);
    let x1147: BytePoly_64 = bigint_add!(x1146, x1146, 64);
    let x1148: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x1147, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1148, x1, 66), x1147, 66), x9, 66),
        276359,
        4,
    )?;
    let x1149: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1145, x1145, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x1150: BytePoly_34 = bigint_nondet_quot!(ctx, x1149, x1, 34);
    let x1151: BytePoly_32 = bigint_nondet_rem!(ctx, x1149, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1150, x1, 66), x1151, 66),
            x1149,
            66
        ),
        276359,
        4,
    )?;
    let x1152: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x1145, x1151, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x1145, x2, 64),
        64
    );
    let x1153: BytePoly_34 = bigint_nondet_quot!(ctx, x1152, x1, 34);
    let x1154: BytePoly_32 = bigint_nondet_rem!(ctx, x1152, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1153, x1, 66), x1154, 66),
            x1152,
            66
        ),
        276359,
        4,
    )?;
    let x1155: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x1156: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x1155, 96), x1, 32);
    let x1157: BytePoly_64 = bigint_mul!(x3, x1156, 64);
    let x1158: BytePoly_64 = bigint_add!(x1157, x1157, 64);
    let x1159: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x1158, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1159, x1, 66), x1158, 66), x9, 66),
        276359,
        4,
    )?;
    let x1160: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1156, x1156, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x1161: BytePoly_34 = bigint_nondet_quot!(ctx, x1160, x1, 34);
    let x1162: BytePoly_32 = bigint_nondet_rem!(ctx, x1160, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1161, x1, 66), x1162, 66),
            x1160,
            66
        ),
        276359,
        4,
    )?;
    let x1163: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x1156, x1162, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x1156, x2, 64),
        64
    );
    let x1164: BytePoly_34 = bigint_nondet_quot!(ctx, x1163, x1, 34);
    let x1165: BytePoly_32 = bigint_nondet_rem!(ctx, x1163, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1164, x1, 66), x1165, 66),
            x1163,
            66
        ),
        276359,
        4,
    )?;
    let x1166: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x1167: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x1166, 96), x1, 32);
    let x1168: BytePoly_64 = bigint_mul!(x3, x1167, 64);
    let x1169: BytePoly_64 = bigint_add!(x1168, x1168, 64);
    let x1170: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x1169, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1170, x1, 66), x1169, 66), x9, 66),
        276359,
        4,
    )?;
    let x1171: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1167, x1167, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x1172: BytePoly_34 = bigint_nondet_quot!(ctx, x1171, x1, 34);
    let x1173: BytePoly_32 = bigint_nondet_rem!(ctx, x1171, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1172, x1, 66), x1173, 66),
            x1171,
            66
        ),
        276359,
        4,
    )?;
    let x1174: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x1167, x1173, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x1167, x2, 64),
        64
    );
    let x1175: BytePoly_34 = bigint_nondet_quot!(ctx, x1174, x1, 34);
    let x1176: BytePoly_32 = bigint_nondet_rem!(ctx, x1174, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1175, x1, 66), x1176, 66),
            x1174,
            66
        ),
        276359,
        4,
    )?;
    let x1177: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x1178: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x1177, 96), x1, 32);
    let x1179: BytePoly_64 = bigint_mul!(x3, x1178, 64);
    let x1180: BytePoly_64 = bigint_add!(x1179, x1179, 64);
    let x1181: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x1180, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1181, x1, 66), x1180, 66), x9, 66),
        276359,
        4,
    )?;
    let x1182: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1178, x1178, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x1183: BytePoly_34 = bigint_nondet_quot!(ctx, x1182, x1, 34);
    let x1184: BytePoly_32 = bigint_nondet_rem!(ctx, x1182, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1183, x1, 66), x1184, 66),
            x1182,
            66
        ),
        276359,
        4,
    )?;
    let x1185: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x1178, x1184, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x1178, x2, 64),
        64
    );
    let x1186: BytePoly_34 = bigint_nondet_quot!(ctx, x1185, x1, 34);
    let x1187: BytePoly_32 = bigint_nondet_rem!(ctx, x1185, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1186, x1, 66), x1187, 66),
            x1185,
            66
        ),
        276359,
        4,
    )?;
    let x1188: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x1189: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x1188, 96), x1, 32);
    let x1190: BytePoly_64 = bigint_mul!(x3, x1189, 64);
    let x1191: BytePoly_64 = bigint_add!(x1190, x1190, 64);
    let x1192: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x1191, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1192, x1, 66), x1191, 66), x9, 66),
        276359,
        4,
    )?;
    let x1193: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1189, x1189, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x1194: BytePoly_34 = bigint_nondet_quot!(ctx, x1193, x1, 34);
    let x1195: BytePoly_32 = bigint_nondet_rem!(ctx, x1193, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1194, x1, 66), x1195, 66),
            x1193,
            66
        ),
        276359,
        4,
    )?;
    let x1196: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x1189, x1195, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x1189, x2, 64),
        64
    );
    let x1197: BytePoly_34 = bigint_nondet_quot!(ctx, x1196, x1, 34);
    let x1198: BytePoly_32 = bigint_nondet_rem!(ctx, x1196, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1197, x1, 66), x1198, 66),
            x1196,
            66
        ),
        276359,
        4,
    )?;
    let x1199: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x1200: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x1199, 96), x1, 32);
    let x1201: BytePoly_64 = bigint_mul!(x3, x1200, 64);
    let x1202: BytePoly_64 = bigint_add!(x1201, x1201, 64);
    let x1203: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x1202, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1203, x1, 66), x1202, 66), x9, 66),
        276359,
        4,
    )?;
    let x1204: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1200, x1200, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x1205: BytePoly_34 = bigint_nondet_quot!(ctx, x1204, x1, 34);
    let x1206: BytePoly_32 = bigint_nondet_rem!(ctx, x1204, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1205, x1, 66), x1206, 66),
            x1204,
            66
        ),
        276359,
        4,
    )?;
    let x1207: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x1200, x1206, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x1200, x2, 64),
        64
    );
    let x1208: BytePoly_34 = bigint_nondet_quot!(ctx, x1207, x1, 34);
    let x1209: BytePoly_32 = bigint_nondet_rem!(ctx, x1207, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1208, x1, 66), x1209, 66),
            x1207,
            66
        ),
        276359,
        4,
    )?;
    let x1210: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x1211: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x1210, 96), x1, 32);
    let x1212: BytePoly_64 = bigint_mul!(x3, x1211, 64);
    let x1213: BytePoly_64 = bigint_add!(x1212, x1212, 64);
    let x1214: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x1213, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1214, x1, 66), x1213, 66), x9, 66),
        276359,
        4,
    )?;
    let x1215: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1211, x1211, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x1216: BytePoly_34 = bigint_nondet_quot!(ctx, x1215, x1, 34);
    let x1217: BytePoly_32 = bigint_nondet_rem!(ctx, x1215, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1216, x1, 66), x1217, 66),
            x1215,
            66
        ),
        276359,
        4,
    )?;
    let x1218: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x1211, x1217, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x1211, x2, 64),
        64
    );
    let x1219: BytePoly_34 = bigint_nondet_quot!(ctx, x1218, x1, 34);
    let x1220: BytePoly_32 = bigint_nondet_rem!(ctx, x1218, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1219, x1, 66), x1220, 66),
            x1218,
            66
        ),
        276359,
        4,
    )?;
    let x1221: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x1222: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x1221, 96), x1, 32);
    let x1223: BytePoly_64 = bigint_mul!(x3, x1222, 64);
    let x1224: BytePoly_64 = bigint_add!(x1223, x1223, 64);
    let x1225: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x1224, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1225, x1, 66), x1224, 66), x9, 66),
        276359,
        4,
    )?;
    let x1226: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1222, x1222, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x1227: BytePoly_34 = bigint_nondet_quot!(ctx, x1226, x1, 34);
    let x1228: BytePoly_32 = bigint_nondet_rem!(ctx, x1226, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1227, x1, 66), x1228, 66),
            x1226,
            66
        ),
        276359,
        4,
    )?;
    let x1229: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x1222, x1228, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x1222, x2, 64),
        64
    );
    let x1230: BytePoly_34 = bigint_nondet_quot!(ctx, x1229, x1, 34);
    let x1231: BytePoly_32 = bigint_nondet_rem!(ctx, x1229, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1230, x1, 66), x1231, 66),
            x1229,
            66
        ),
        276359,
        4,
    )?;
    let x1232: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x1233: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x1232, 96), x1, 32);
    let x1234: BytePoly_64 = bigint_mul!(x3, x1233, 64);
    let x1235: BytePoly_64 = bigint_add!(x1234, x1234, 64);
    let x1236: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x1235, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1236, x1, 66), x1235, 66), x9, 66),
        276359,
        4,
    )?;
    let x1237: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1233, x1233, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x1238: BytePoly_34 = bigint_nondet_quot!(ctx, x1237, x1, 34);
    let x1239: BytePoly_32 = bigint_nondet_rem!(ctx, x1237, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1238, x1, 66), x1239, 66),
            x1237,
            66
        ),
        276359,
        4,
    )?;
    let x1240: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x1233, x1239, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x1233, x2, 64),
        64
    );
    let x1241: BytePoly_34 = bigint_nondet_quot!(ctx, x1240, x1, 34);
    let x1242: BytePoly_32 = bigint_nondet_rem!(ctx, x1240, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1241, x1, 66), x1242, 66),
            x1240,
            66
        ),
        276359,
        4,
    )?;
    let x1243: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x1244: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x1243, 96), x1, 32);
    let x1245: BytePoly_64 = bigint_mul!(x3, x1244, 64);
    let x1246: BytePoly_64 = bigint_add!(x1245, x1245, 64);
    let x1247: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x1246, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1247, x1, 66), x1246, 66), x9, 66),
        276359,
        4,
    )?;
    let x1248: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1244, x1244, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x1249: BytePoly_34 = bigint_nondet_quot!(ctx, x1248, x1, 34);
    let x1250: BytePoly_32 = bigint_nondet_rem!(ctx, x1248, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1249, x1, 66), x1250, 66),
            x1248,
            66
        ),
        276359,
        4,
    )?;
    let x1251: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x1244, x1250, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x1244, x2, 64),
        64
    );
    let x1252: BytePoly_34 = bigint_nondet_quot!(ctx, x1251, x1, 34);
    let x1253: BytePoly_32 = bigint_nondet_rem!(ctx, x1251, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1252, x1, 66), x1253, 66),
            x1251,
            66
        ),
        276359,
        4,
    )?;
    let x1254: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x1255: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x1254, 96), x1, 32);
    let x1256: BytePoly_64 = bigint_mul!(x3, x1255, 64);
    let x1257: BytePoly_64 = bigint_add!(x1256, x1256, 64);
    let x1258: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x1257, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1258, x1, 66), x1257, 66), x9, 66),
        276359,
        4,
    )?;
    let x1259: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1255, x1255, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x1260: BytePoly_34 = bigint_nondet_quot!(ctx, x1259, x1, 34);
    let x1261: BytePoly_32 = bigint_nondet_rem!(ctx, x1259, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1260, x1, 66), x1261, 66),
            x1259,
            66
        ),
        276359,
        4,
    )?;
    let x1262: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x1255, x1261, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x1255, x2, 64),
        64
    );
    let x1263: BytePoly_34 = bigint_nondet_quot!(ctx, x1262, x1, 34);
    let x1264: BytePoly_32 = bigint_nondet_rem!(ctx, x1262, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1263, x1, 66), x1264, 66),
            x1262,
            66
        ),
        276359,
        4,
    )?;
    let x1265: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x1266: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x1265, 96), x1, 32);
    let x1267: BytePoly_64 = bigint_mul!(x3, x1266, 64);
    let x1268: BytePoly_64 = bigint_add!(x1267, x1267, 64);
    let x1269: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x1268, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1269, x1, 66), x1268, 66), x9, 66),
        276359,
        4,
    )?;
    let x1270: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1266, x1266, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x1271: BytePoly_34 = bigint_nondet_quot!(ctx, x1270, x1, 34);
    let x1272: BytePoly_32 = bigint_nondet_rem!(ctx, x1270, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1271, x1, 66), x1272, 66),
            x1270,
            66
        ),
        276359,
        4,
    )?;
    let x1273: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x1266, x1272, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x1266, x2, 64),
        64
    );
    let x1274: BytePoly_34 = bigint_nondet_quot!(ctx, x1273, x1, 34);
    let x1275: BytePoly_32 = bigint_nondet_rem!(ctx, x1273, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1274, x1, 66), x1275, 66),
            x1273,
            66
        ),
        276359,
        4,
    )?;
    let x1276: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x1277: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x1276, 96), x1, 32);
    let x1278: BytePoly_64 = bigint_mul!(x3, x1277, 64);
    let x1279: BytePoly_64 = bigint_add!(x1278, x1278, 64);
    let x1280: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x1279, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1280, x1, 66), x1279, 66), x9, 66),
        276359,
        4,
    )?;
    let x1281: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1277, x1277, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x1282: BytePoly_34 = bigint_nondet_quot!(ctx, x1281, x1, 34);
    let x1283: BytePoly_32 = bigint_nondet_rem!(ctx, x1281, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1282, x1, 66), x1283, 66),
            x1281,
            66
        ),
        276359,
        4,
    )?;
    let x1284: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x1277, x1283, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x1277, x2, 64),
        64
    );
    let x1285: BytePoly_34 = bigint_nondet_quot!(ctx, x1284, x1, 34);
    let x1286: BytePoly_32 = bigint_nondet_rem!(ctx, x1284, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1285, x1, 66), x1286, 66),
            x1284,
            66
        ),
        276359,
        4,
    )?;
    let x1287: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x1288: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x1287, 96), x1, 32);
    let x1289: BytePoly_64 = bigint_mul!(x3, x1288, 64);
    let x1290: BytePoly_64 = bigint_add!(x1289, x1289, 64);
    let x1291: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x1290, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1291, x1, 66), x1290, 66), x9, 66),
        276359,
        4,
    )?;
    let x1292: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1288, x1288, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x1293: BytePoly_34 = bigint_nondet_quot!(ctx, x1292, x1, 34);
    let x1294: BytePoly_32 = bigint_nondet_rem!(ctx, x1292, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1293, x1, 66), x1294, 66),
            x1292,
            66
        ),
        276359,
        4,
    )?;
    let x1295: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x1288, x1294, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x1288, x2, 64),
        64
    );
    let x1296: BytePoly_34 = bigint_nondet_quot!(ctx, x1295, x1, 34);
    let x1297: BytePoly_32 = bigint_nondet_rem!(ctx, x1295, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1296, x1, 66), x1297, 66),
            x1295,
            66
        ),
        276359,
        4,
    )?;
    let x1298: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x1299: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x1298, 96), x1, 32);
    let x1300: BytePoly_64 = bigint_mul!(x3, x1299, 64);
    let x1301: BytePoly_64 = bigint_add!(x1300, x1300, 64);
    let x1302: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x1301, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1302, x1, 66), x1301, 66), x9, 66),
        276359,
        4,
    )?;
    let x1303: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1299, x1299, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x1304: BytePoly_34 = bigint_nondet_quot!(ctx, x1303, x1, 34);
    let x1305: BytePoly_32 = bigint_nondet_rem!(ctx, x1303, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1304, x1, 66), x1305, 66),
            x1303,
            66
        ),
        276359,
        4,
    )?;
    let x1306: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x1299, x1305, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x1299, x2, 64),
        64
    );
    let x1307: BytePoly_34 = bigint_nondet_quot!(ctx, x1306, x1, 34);
    let x1308: BytePoly_32 = bigint_nondet_rem!(ctx, x1306, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1307, x1, 66), x1308, 66),
            x1306,
            66
        ),
        276359,
        4,
    )?;
    let x1309: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x1310: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x1309, 96), x1, 32);
    let x1311: BytePoly_64 = bigint_mul!(x3, x1310, 64);
    let x1312: BytePoly_64 = bigint_add!(x1311, x1311, 64);
    let x1313: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x1312, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1313, x1, 66), x1312, 66), x9, 66),
        276359,
        4,
    )?;
    let x1314: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1310, x1310, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x1315: BytePoly_34 = bigint_nondet_quot!(ctx, x1314, x1, 34);
    let x1316: BytePoly_32 = bigint_nondet_rem!(ctx, x1314, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1315, x1, 66), x1316, 66),
            x1314,
            66
        ),
        276359,
        4,
    )?;
    let x1317: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x1310, x1316, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x1310, x2, 64),
        64
    );
    let x1318: BytePoly_34 = bigint_nondet_quot!(ctx, x1317, x1, 34);
    let x1319: BytePoly_32 = bigint_nondet_rem!(ctx, x1317, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1318, x1, 66), x1319, 66),
            x1317,
            66
        ),
        276359,
        4,
    )?;
    let x1320: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x1321: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x1320, 96), x1, 32);
    let x1322: BytePoly_64 = bigint_mul!(x3, x1321, 64);
    let x1323: BytePoly_64 = bigint_add!(x1322, x1322, 64);
    let x1324: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x1323, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1324, x1, 66), x1323, 66), x9, 66),
        276359,
        4,
    )?;
    let x1325: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1321, x1321, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x1326: BytePoly_34 = bigint_nondet_quot!(ctx, x1325, x1, 34);
    let x1327: BytePoly_32 = bigint_nondet_rem!(ctx, x1325, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1326, x1, 66), x1327, 66),
            x1325,
            66
        ),
        276359,
        4,
    )?;
    let x1328: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x1321, x1327, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x1321, x2, 64),
        64
    );
    let x1329: BytePoly_34 = bigint_nondet_quot!(ctx, x1328, x1, 34);
    let x1330: BytePoly_32 = bigint_nondet_rem!(ctx, x1328, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1329, x1, 66), x1330, 66),
            x1328,
            66
        ),
        276359,
        4,
    )?;
    let x1331: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x1332: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x1331, 96), x1, 32);
    let x1333: BytePoly_64 = bigint_mul!(x3, x1332, 64);
    let x1334: BytePoly_64 = bigint_add!(x1333, x1333, 64);
    let x1335: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x1334, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1335, x1, 66), x1334, 66), x9, 66),
        276359,
        4,
    )?;
    let x1336: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1332, x1332, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x1337: BytePoly_34 = bigint_nondet_quot!(ctx, x1336, x1, 34);
    let x1338: BytePoly_32 = bigint_nondet_rem!(ctx, x1336, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1337, x1, 66), x1338, 66),
            x1336,
            66
        ),
        276359,
        4,
    )?;
    let x1339: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x1332, x1338, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x1332, x2, 64),
        64
    );
    let x1340: BytePoly_34 = bigint_nondet_quot!(ctx, x1339, x1, 34);
    let x1341: BytePoly_32 = bigint_nondet_rem!(ctx, x1339, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1340, x1, 66), x1341, 66),
            x1339,
            66
        ),
        276359,
        4,
    )?;
    let x1342: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x1343: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x1342, 96), x1, 32);
    let x1344: BytePoly_64 = bigint_mul!(x3, x1343, 64);
    let x1345: BytePoly_64 = bigint_add!(x1344, x1344, 64);
    let x1346: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x1345, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1346, x1, 66), x1345, 66), x9, 66),
        276359,
        4,
    )?;
    let x1347: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1343, x1343, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x1348: BytePoly_34 = bigint_nondet_quot!(ctx, x1347, x1, 34);
    let x1349: BytePoly_32 = bigint_nondet_rem!(ctx, x1347, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1348, x1, 66), x1349, 66),
            x1347,
            66
        ),
        276359,
        4,
    )?;
    let x1350: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x1343, x1349, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x1343, x2, 64),
        64
    );
    let x1351: BytePoly_34 = bigint_nondet_quot!(ctx, x1350, x1, 34);
    let x1352: BytePoly_32 = bigint_nondet_rem!(ctx, x1350, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1351, x1, 66), x1352, 66),
            x1350,
            66
        ),
        276359,
        4,
    )?;
    let x1353: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x1354: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x1353, 96), x1, 32);
    let x1355: BytePoly_64 = bigint_mul!(x3, x1354, 64);
    let x1356: BytePoly_64 = bigint_add!(x1355, x1355, 64);
    let x1357: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x1356, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1357, x1, 66), x1356, 66), x9, 66),
        276359,
        4,
    )?;
    let x1358: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1354, x1354, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x1359: BytePoly_34 = bigint_nondet_quot!(ctx, x1358, x1, 34);
    let x1360: BytePoly_32 = bigint_nondet_rem!(ctx, x1358, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1359, x1, 66), x1360, 66),
            x1358,
            66
        ),
        276359,
        4,
    )?;
    let x1361: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x1354, x1360, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x1354, x2, 64),
        64
    );
    let x1362: BytePoly_34 = bigint_nondet_quot!(ctx, x1361, x1, 34);
    let x1363: BytePoly_32 = bigint_nondet_rem!(ctx, x1361, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1362, x1, 66), x1363, 66),
            x1361,
            66
        ),
        276359,
        4,
    )?;
    let x1364: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x1365: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x1364, 96), x1, 32);
    let x1366: BytePoly_64 = bigint_mul!(x3, x1365, 64);
    let x1367: BytePoly_64 = bigint_add!(x1366, x1366, 64);
    let x1368: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x1367, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1368, x1, 66), x1367, 66), x9, 66),
        276359,
        4,
    )?;
    let x1369: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1365, x1365, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x1370: BytePoly_34 = bigint_nondet_quot!(ctx, x1369, x1, 34);
    let x1371: BytePoly_32 = bigint_nondet_rem!(ctx, x1369, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1370, x1, 66), x1371, 66),
            x1369,
            66
        ),
        276359,
        4,
    )?;
    let x1372: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x1365, x1371, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x1365, x2, 64),
        64
    );
    let x1373: BytePoly_34 = bigint_nondet_quot!(ctx, x1372, x1, 34);
    let x1374: BytePoly_32 = bigint_nondet_rem!(ctx, x1372, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1373, x1, 66), x1374, 66),
            x1372,
            66
        ),
        276359,
        4,
    )?;
    let x1375: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x1376: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x1375, 96), x1, 32);
    let x1377: BytePoly_64 = bigint_mul!(x3, x1376, 64);
    let x1378: BytePoly_64 = bigint_add!(x1377, x1377, 64);
    let x1379: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x1378, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1379, x1, 66), x1378, 66), x9, 66),
        276359,
        4,
    )?;
    let x1380: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1376, x1376, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x1381: BytePoly_34 = bigint_nondet_quot!(ctx, x1380, x1, 34);
    let x1382: BytePoly_32 = bigint_nondet_rem!(ctx, x1380, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1381, x1, 66), x1382, 66),
            x1380,
            66
        ),
        276359,
        4,
    )?;
    let x1383: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x1376, x1382, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x1376, x2, 64),
        64
    );
    let x1384: BytePoly_34 = bigint_nondet_quot!(ctx, x1383, x1, 34);
    let x1385: BytePoly_32 = bigint_nondet_rem!(ctx, x1383, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1384, x1, 66), x1385, 66),
            x1383,
            66
        ),
        276359,
        4,
    )?;
    let x1386: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x1387: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x1386, 96), x1, 32);
    let x1388: BytePoly_64 = bigint_mul!(x3, x1387, 64);
    let x1389: BytePoly_64 = bigint_add!(x1388, x1388, 64);
    let x1390: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x1389, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1390, x1, 66), x1389, 66), x9, 66),
        276359,
        4,
    )?;
    let x1391: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1387, x1387, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x1392: BytePoly_34 = bigint_nondet_quot!(ctx, x1391, x1, 34);
    let x1393: BytePoly_32 = bigint_nondet_rem!(ctx, x1391, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1392, x1, 66), x1393, 66),
            x1391,
            66
        ),
        276359,
        4,
    )?;
    let x1394: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x1387, x1393, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x1387, x2, 64),
        64
    );
    let x1395: BytePoly_34 = bigint_nondet_quot!(ctx, x1394, x1, 34);
    let x1396: BytePoly_32 = bigint_nondet_rem!(ctx, x1394, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1395, x1, 66), x1396, 66),
            x1394,
            66
        ),
        276359,
        4,
    )?;
    let x1397: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x1398: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x1397, 96), x1, 32);
    let x1399: BytePoly_64 = bigint_mul!(x3, x1398, 64);
    let x1400: BytePoly_64 = bigint_add!(x1399, x1399, 64);
    let x1401: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x1400, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1401, x1, 66), x1400, 66), x9, 66),
        276359,
        4,
    )?;
    let x1402: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1398, x1398, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x1403: BytePoly_34 = bigint_nondet_quot!(ctx, x1402, x1, 34);
    let x1404: BytePoly_32 = bigint_nondet_rem!(ctx, x1402, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1403, x1, 66), x1404, 66),
            x1402,
            66
        ),
        276359,
        4,
    )?;
    let x1405: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x1398, x1404, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x1398, x2, 64),
        64
    );
    let x1406: BytePoly_34 = bigint_nondet_quot!(ctx, x1405, x1, 34);
    let x1407: BytePoly_32 = bigint_nondet_rem!(ctx, x1405, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1406, x1, 66), x1407, 66),
            x1405,
            66
        ),
        276359,
        4,
    )?;
    let x1408: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x1409: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x1408, 96), x1, 32);
    let x1410: BytePoly_64 = bigint_mul!(x3, x1409, 64);
    let x1411: BytePoly_64 = bigint_add!(x1410, x1410, 64);
    let x1412: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x1411, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1412, x1, 66), x1411, 66), x9, 66),
        276359,
        4,
    )?;
    let x1413: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1409, x1409, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x1414: BytePoly_34 = bigint_nondet_quot!(ctx, x1413, x1, 34);
    let x1415: BytePoly_32 = bigint_nondet_rem!(ctx, x1413, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1414, x1, 66), x1415, 66),
            x1413,
            66
        ),
        276359,
        4,
    )?;
    let x1416: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x1409, x1415, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x1409, x2, 64),
        64
    );
    let x1417: BytePoly_34 = bigint_nondet_quot!(ctx, x1416, x1, 34);
    let x1418: BytePoly_32 = bigint_nondet_rem!(ctx, x1416, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1417, x1, 66), x1418, 66),
            x1416,
            66
        ),
        276359,
        4,
    )?;
    let x1419: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x1420: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x1419, 96), x1, 32);
    let x1421: BytePoly_64 = bigint_mul!(x3, x1420, 64);
    let x1422: BytePoly_64 = bigint_add!(x1421, x1421, 64);
    let x1423: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x1422, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1423, x1, 66), x1422, 66), x9, 66),
        276359,
        4,
    )?;
    let x1424: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1420, x1420, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x1425: BytePoly_34 = bigint_nondet_quot!(ctx, x1424, x1, 34);
    let x1426: BytePoly_32 = bigint_nondet_rem!(ctx, x1424, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1425, x1, 66), x1426, 66),
            x1424,
            66
        ),
        276359,
        4,
    )?;
    let x1427: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x1420, x1426, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x1420, x2, 64),
        64
    );
    let x1428: BytePoly_34 = bigint_nondet_quot!(ctx, x1427, x1, 34);
    let x1429: BytePoly_32 = bigint_nondet_rem!(ctx, x1427, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1428, x1, 66), x1429, 66),
            x1427,
            66
        ),
        276359,
        4,
    )?;
    let x1430: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x1431: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x1430, 96), x1, 32);
    let x1432: BytePoly_64 = bigint_mul!(x3, x1431, 64);
    let x1433: BytePoly_64 = bigint_add!(x1432, x1432, 64);
    let x1434: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x1433, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1434, x1, 66), x1433, 66), x9, 66),
        276359,
        4,
    )?;
    let x1435: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1431, x1431, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x1436: BytePoly_34 = bigint_nondet_quot!(ctx, x1435, x1, 34);
    let x1437: BytePoly_32 = bigint_nondet_rem!(ctx, x1435, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1436, x1, 66), x1437, 66),
            x1435,
            66
        ),
        276359,
        4,
    )?;
    let x1438: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x1431, x1437, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x1431, x2, 64),
        64
    );
    let x1439: BytePoly_34 = bigint_nondet_quot!(ctx, x1438, x1, 34);
    let x1440: BytePoly_32 = bigint_nondet_rem!(ctx, x1438, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1439, x1, 66), x1440, 66),
            x1438,
            66
        ),
        276359,
        4,
    )?;
    let x1441: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x1442: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x1441, 96), x1, 32);
    let x1443: BytePoly_64 = bigint_mul!(x3, x1442, 64);
    let x1444: BytePoly_64 = bigint_add!(x1443, x1443, 64);
    let x1445: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x1444, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1445, x1, 66), x1444, 66), x9, 66),
        276359,
        4,
    )?;
    let x1446: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1442, x1442, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x1447: BytePoly_34 = bigint_nondet_quot!(ctx, x1446, x1, 34);
    let x1448: BytePoly_32 = bigint_nondet_rem!(ctx, x1446, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1447, x1, 66), x1448, 66),
            x1446,
            66
        ),
        276359,
        4,
    )?;
    let x1449: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x1442, x1448, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x1442, x2, 64),
        64
    );
    let x1450: BytePoly_34 = bigint_nondet_quot!(ctx, x1449, x1, 34);
    let x1451: BytePoly_32 = bigint_nondet_rem!(ctx, x1449, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1450, x1, 66), x1451, 66),
            x1449,
            66
        ),
        276359,
        4,
    )?;
    let x1452: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x1453: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x1452, 96), x1, 32);
    let x1454: BytePoly_64 = bigint_mul!(x3, x1453, 64);
    let x1455: BytePoly_64 = bigint_add!(x1454, x1454, 64);
    let x1456: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x1455, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1456, x1, 66), x1455, 66), x9, 66),
        276359,
        4,
    )?;
    let x1457: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1453, x1453, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x1458: BytePoly_34 = bigint_nondet_quot!(ctx, x1457, x1, 34);
    let x1459: BytePoly_32 = bigint_nondet_rem!(ctx, x1457, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1458, x1, 66), x1459, 66),
            x1457,
            66
        ),
        276359,
        4,
    )?;
    let x1460: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x1453, x1459, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x1453, x2, 64),
        64
    );
    let x1461: BytePoly_34 = bigint_nondet_quot!(ctx, x1460, x1, 34);
    let x1462: BytePoly_32 = bigint_nondet_rem!(ctx, x1460, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1461, x1, 66), x1462, 66),
            x1460,
            66
        ),
        276359,
        4,
    )?;
    let x1463: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x1464: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x1463, 96), x1, 32);
    let x1465: BytePoly_64 = bigint_mul!(x3, x1464, 64);
    let x1466: BytePoly_64 = bigint_add!(x1465, x1465, 64);
    let x1467: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x1466, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1467, x1, 66), x1466, 66), x9, 66),
        276359,
        4,
    )?;
    let x1468: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1464, x1464, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x1469: BytePoly_34 = bigint_nondet_quot!(ctx, x1468, x1, 34);
    let x1470: BytePoly_32 = bigint_nondet_rem!(ctx, x1468, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1469, x1, 66), x1470, 66),
            x1468,
            66
        ),
        276359,
        4,
    )?;
    let x1471: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x1464, x1470, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x1464, x2, 64),
        64
    );
    let x1472: BytePoly_34 = bigint_nondet_quot!(ctx, x1471, x1, 34);
    let x1473: BytePoly_32 = bigint_nondet_rem!(ctx, x1471, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1472, x1, 66), x1473, 66),
            x1471,
            66
        ),
        276359,
        4,
    )?;
    let x1474: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x1475: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x1474, 96), x1, 32);
    let x1476: BytePoly_64 = bigint_mul!(x3, x1475, 64);
    let x1477: BytePoly_64 = bigint_add!(x1476, x1476, 64);
    let x1478: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x1477, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1478, x1, 66), x1477, 66), x9, 66),
        276359,
        4,
    )?;
    let x1479: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1475, x1475, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x1480: BytePoly_34 = bigint_nondet_quot!(ctx, x1479, x1, 34);
    let x1481: BytePoly_32 = bigint_nondet_rem!(ctx, x1479, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1480, x1, 66), x1481, 66),
            x1479,
            66
        ),
        276359,
        4,
    )?;
    let x1482: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x1475, x1481, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x1475, x2, 64),
        64
    );
    let x1483: BytePoly_34 = bigint_nondet_quot!(ctx, x1482, x1, 34);
    let x1484: BytePoly_32 = bigint_nondet_rem!(ctx, x1482, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1483, x1, 66), x1484, 66),
            x1482,
            66
        ),
        276359,
        4,
    )?;
    let x1485: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x1486: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x1485, 96), x1, 32);
    let x1487: BytePoly_64 = bigint_mul!(x3, x1486, 64);
    let x1488: BytePoly_64 = bigint_add!(x1487, x1487, 64);
    let x1489: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x1488, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1489, x1, 66), x1488, 66), x9, 66),
        276359,
        4,
    )?;
    let x1490: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1486, x1486, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x1491: BytePoly_34 = bigint_nondet_quot!(ctx, x1490, x1, 34);
    let x1492: BytePoly_32 = bigint_nondet_rem!(ctx, x1490, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1491, x1, 66), x1492, 66),
            x1490,
            66
        ),
        276359,
        4,
    )?;
    let x1493: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x1486, x1492, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x1486, x2, 64),
        64
    );
    let x1494: BytePoly_34 = bigint_nondet_quot!(ctx, x1493, x1, 34);
    let x1495: BytePoly_32 = bigint_nondet_rem!(ctx, x1493, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1494, x1, 66), x1495, 66),
            x1493,
            66
        ),
        276359,
        4,
    )?;
    let x1496: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x1497: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x1496, 96), x1, 32);
    let x1498: BytePoly_64 = bigint_mul!(x3, x1497, 64);
    let x1499: BytePoly_64 = bigint_add!(x1498, x1498, 64);
    let x1500: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x1499, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1500, x1, 66), x1499, 66), x9, 66),
        276359,
        4,
    )?;
    let x1501: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1497, x1497, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x1502: BytePoly_34 = bigint_nondet_quot!(ctx, x1501, x1, 34);
    let x1503: BytePoly_32 = bigint_nondet_rem!(ctx, x1501, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1502, x1, 66), x1503, 66),
            x1501,
            66
        ),
        276359,
        4,
    )?;
    let x1504: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x1497, x1503, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x1497, x2, 64),
        64
    );
    let x1505: BytePoly_34 = bigint_nondet_quot!(ctx, x1504, x1, 34);
    let x1506: BytePoly_32 = bigint_nondet_rem!(ctx, x1504, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1505, x1, 66), x1506, 66),
            x1504,
            66
        ),
        276359,
        4,
    )?;
    let x1507: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x1508: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x1507, 96), x1, 32);
    let x1509: BytePoly_64 = bigint_mul!(x3, x1508, 64);
    let x1510: BytePoly_64 = bigint_add!(x1509, x1509, 64);
    let x1511: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x1510, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1511, x1, 66), x1510, 66), x9, 66),
        276359,
        4,
    )?;
    let x1512: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1508, x1508, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x1513: BytePoly_34 = bigint_nondet_quot!(ctx, x1512, x1, 34);
    let x1514: BytePoly_32 = bigint_nondet_rem!(ctx, x1512, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1513, x1, 66), x1514, 66),
            x1512,
            66
        ),
        276359,
        4,
    )?;
    let x1515: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x1508, x1514, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x1508, x2, 64),
        64
    );
    let x1516: BytePoly_34 = bigint_nondet_quot!(ctx, x1515, x1, 34);
    let x1517: BytePoly_32 = bigint_nondet_rem!(ctx, x1515, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1516, x1, 66), x1517, 66),
            x1515,
            66
        ),
        276359,
        4,
    )?;
    let x1518: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x1519: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x1518, 96), x1, 32);
    let x1520: BytePoly_64 = bigint_mul!(x3, x1519, 64);
    let x1521: BytePoly_64 = bigint_add!(x1520, x1520, 64);
    let x1522: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x1521, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1522, x1, 66), x1521, 66), x9, 66),
        276359,
        4,
    )?;
    let x1523: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1519, x1519, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x1524: BytePoly_34 = bigint_nondet_quot!(ctx, x1523, x1, 34);
    let x1525: BytePoly_32 = bigint_nondet_rem!(ctx, x1523, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1524, x1, 66), x1525, 66),
            x1523,
            66
        ),
        276359,
        4,
    )?;
    let x1526: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x1519, x1525, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x1519, x2, 64),
        64
    );
    let x1527: BytePoly_34 = bigint_nondet_quot!(ctx, x1526, x1, 34);
    let x1528: BytePoly_32 = bigint_nondet_rem!(ctx, x1526, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1527, x1, 66), x1528, 66),
            x1526,
            66
        ),
        276359,
        4,
    )?;
    let x1529: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x1530: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x1529, 96), x1, 32);
    let x1531: BytePoly_64 = bigint_mul!(x3, x1530, 64);
    let x1532: BytePoly_64 = bigint_add!(x1531, x1531, 64);
    let x1533: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x1532, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1533, x1, 66), x1532, 66), x9, 66),
        276359,
        4,
    )?;
    let x1534: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1530, x1530, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x1535: BytePoly_34 = bigint_nondet_quot!(ctx, x1534, x1, 34);
    let x1536: BytePoly_32 = bigint_nondet_rem!(ctx, x1534, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1535, x1, 66), x1536, 66),
            x1534,
            66
        ),
        276359,
        4,
    )?;
    let x1537: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x1530, x1536, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x1530, x2, 64),
        64
    );
    let x1538: BytePoly_34 = bigint_nondet_quot!(ctx, x1537, x1, 34);
    let x1539: BytePoly_32 = bigint_nondet_rem!(ctx, x1537, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1538, x1, 66), x1539, 66),
            x1537,
            66
        ),
        276359,
        4,
    )?;
    let x1540: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x1541: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x1540, 96), x1, 32);
    let x1542: BytePoly_64 = bigint_mul!(x3, x1541, 64);
    let x1543: BytePoly_64 = bigint_add!(x1542, x1542, 64);
    let x1544: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x1543, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1544, x1, 66), x1543, 66), x9, 66),
        276359,
        4,
    )?;
    let x1545: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1541, x1541, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x1546: BytePoly_34 = bigint_nondet_quot!(ctx, x1545, x1, 34);
    let x1547: BytePoly_32 = bigint_nondet_rem!(ctx, x1545, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1546, x1, 66), x1547, 66),
            x1545,
            66
        ),
        276359,
        4,
    )?;
    let x1548: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x1541, x1547, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x1541, x2, 64),
        64
    );
    let x1549: BytePoly_34 = bigint_nondet_quot!(ctx, x1548, x1, 34);
    let x1550: BytePoly_32 = bigint_nondet_rem!(ctx, x1548, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1549, x1, 66), x1550, 66),
            x1548,
            66
        ),
        276359,
        4,
    )?;
    let x1551: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x1552: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x1551, 96), x1, 32);
    let x1553: BytePoly_64 = bigint_mul!(x3, x1552, 64);
    let x1554: BytePoly_64 = bigint_add!(x1553, x1553, 64);
    let x1555: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x1554, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1555, x1, 66), x1554, 66), x9, 66),
        276359,
        4,
    )?;
    let x1556: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1552, x1552, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x1557: BytePoly_34 = bigint_nondet_quot!(ctx, x1556, x1, 34);
    let x1558: BytePoly_32 = bigint_nondet_rem!(ctx, x1556, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1557, x1, 66), x1558, 66),
            x1556,
            66
        ),
        276359,
        4,
    )?;
    let x1559: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x1552, x1558, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x1552, x2, 64),
        64
    );
    let x1560: BytePoly_34 = bigint_nondet_quot!(ctx, x1559, x1, 34);
    let x1561: BytePoly_32 = bigint_nondet_rem!(ctx, x1559, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1560, x1, 66), x1561, 66),
            x1559,
            66
        ),
        276359,
        4,
    )?;
    let x1562: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x1563: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x1562, 96), x1, 32);
    let x1564: BytePoly_64 = bigint_mul!(x3, x1563, 64);
    let x1565: BytePoly_64 = bigint_add!(x1564, x1564, 64);
    let x1566: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x1565, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1566, x1, 66), x1565, 66), x9, 66),
        276359,
        4,
    )?;
    let x1567: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1563, x1563, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x1568: BytePoly_34 = bigint_nondet_quot!(ctx, x1567, x1, 34);
    let x1569: BytePoly_32 = bigint_nondet_rem!(ctx, x1567, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1568, x1, 66), x1569, 66),
            x1567,
            66
        ),
        276359,
        4,
    )?;
    let x1570: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x1563, x1569, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x1563, x2, 64),
        64
    );
    let x1571: BytePoly_34 = bigint_nondet_quot!(ctx, x1570, x1, 34);
    let x1572: BytePoly_32 = bigint_nondet_rem!(ctx, x1570, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1571, x1, 66), x1572, 66),
            x1570,
            66
        ),
        276359,
        4,
    )?;
    let x1573: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x1574: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x1573, 96), x1, 32);
    let x1575: BytePoly_64 = bigint_mul!(x3, x1574, 64);
    let x1576: BytePoly_64 = bigint_add!(x1575, x1575, 64);
    let x1577: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x1576, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1577, x1, 66), x1576, 66), x9, 66),
        276359,
        4,
    )?;
    let x1578: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1574, x1574, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x1579: BytePoly_34 = bigint_nondet_quot!(ctx, x1578, x1, 34);
    let x1580: BytePoly_32 = bigint_nondet_rem!(ctx, x1578, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1579, x1, 66), x1580, 66),
            x1578,
            66
        ),
        276359,
        4,
    )?;
    let x1581: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x1574, x1580, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x1574, x2, 64),
        64
    );
    let x1582: BytePoly_34 = bigint_nondet_quot!(ctx, x1581, x1, 34);
    let x1583: BytePoly_32 = bigint_nondet_rem!(ctx, x1581, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1582, x1, 66), x1583, 66),
            x1581,
            66
        ),
        276359,
        4,
    )?;
    let x1584: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x1585: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x1584, 96), x1, 32);
    let x1586: BytePoly_64 = bigint_mul!(x3, x1585, 64);
    let x1587: BytePoly_64 = bigint_add!(x1586, x1586, 64);
    let x1588: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x1587, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1588, x1, 66), x1587, 66), x9, 66),
        276359,
        4,
    )?;
    let x1589: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1585, x1585, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x1590: BytePoly_34 = bigint_nondet_quot!(ctx, x1589, x1, 34);
    let x1591: BytePoly_32 = bigint_nondet_rem!(ctx, x1589, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1590, x1, 66), x1591, 66),
            x1589,
            66
        ),
        276359,
        4,
    )?;
    let x1592: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x1585, x1591, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x1585, x2, 64),
        64
    );
    let x1593: BytePoly_34 = bigint_nondet_quot!(ctx, x1592, x1, 34);
    let x1594: BytePoly_32 = bigint_nondet_rem!(ctx, x1592, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1593, x1, 66), x1594, 66),
            x1592,
            66
        ),
        276359,
        4,
    )?;
    let x1595: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x1596: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x1595, 96), x1, 32);
    let x1597: BytePoly_64 = bigint_mul!(x3, x1596, 64);
    let x1598: BytePoly_64 = bigint_add!(x1597, x1597, 64);
    let x1599: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x1598, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1599, x1, 66), x1598, 66), x9, 66),
        276359,
        4,
    )?;
    let x1600: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1596, x1596, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x1601: BytePoly_34 = bigint_nondet_quot!(ctx, x1600, x1, 34);
    let x1602: BytePoly_32 = bigint_nondet_rem!(ctx, x1600, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1601, x1, 66), x1602, 66),
            x1600,
            66
        ),
        276359,
        4,
    )?;
    let x1603: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x1596, x1602, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x1596, x2, 64),
        64
    );
    let x1604: BytePoly_34 = bigint_nondet_quot!(ctx, x1603, x1, 34);
    let x1605: BytePoly_32 = bigint_nondet_rem!(ctx, x1603, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1604, x1, 66), x1605, 66),
            x1603,
            66
        ),
        276359,
        4,
    )?;
    let x1606: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x1607: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x1606, 96), x1, 32);
    let x1608: BytePoly_64 = bigint_mul!(x3, x1607, 64);
    let x1609: BytePoly_64 = bigint_add!(x1608, x1608, 64);
    let x1610: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x1609, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1610, x1, 66), x1609, 66), x9, 66),
        276359,
        4,
    )?;
    let x1611: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1607, x1607, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x1612: BytePoly_34 = bigint_nondet_quot!(ctx, x1611, x1, 34);
    let x1613: BytePoly_32 = bigint_nondet_rem!(ctx, x1611, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1612, x1, 66), x1613, 66),
            x1611,
            66
        ),
        276359,
        4,
    )?;
    let x1614: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x1607, x1613, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x1607, x2, 64),
        64
    );
    let x1615: BytePoly_34 = bigint_nondet_quot!(ctx, x1614, x1, 34);
    let x1616: BytePoly_32 = bigint_nondet_rem!(ctx, x1614, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1615, x1, 66), x1616, 66),
            x1614,
            66
        ),
        276359,
        4,
    )?;
    let x1617: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x1618: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x1617, 96), x1, 32);
    let x1619: BytePoly_64 = bigint_mul!(x3, x1618, 64);
    let x1620: BytePoly_64 = bigint_add!(x1619, x1619, 64);
    let x1621: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x1620, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1621, x1, 66), x1620, 66), x9, 66),
        276359,
        4,
    )?;
    let x1622: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1618, x1618, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x1623: BytePoly_34 = bigint_nondet_quot!(ctx, x1622, x1, 34);
    let x1624: BytePoly_32 = bigint_nondet_rem!(ctx, x1622, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1623, x1, 66), x1624, 66),
            x1622,
            66
        ),
        276359,
        4,
    )?;
    let x1625: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x1618, x1624, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x1618, x2, 64),
        64
    );
    let x1626: BytePoly_34 = bigint_nondet_quot!(ctx, x1625, x1, 34);
    let x1627: BytePoly_32 = bigint_nondet_rem!(ctx, x1625, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1626, x1, 66), x1627, 66),
            x1625,
            66
        ),
        276359,
        4,
    )?;
    let x1628: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x1629: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x1628, 96), x1, 32);
    let x1630: BytePoly_64 = bigint_mul!(x3, x1629, 64);
    let x1631: BytePoly_64 = bigint_add!(x1630, x1630, 64);
    let x1632: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x1631, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1632, x1, 66), x1631, 66), x9, 66),
        276359,
        4,
    )?;
    let x1633: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1629, x1629, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x1634: BytePoly_34 = bigint_nondet_quot!(ctx, x1633, x1, 34);
    let x1635: BytePoly_32 = bigint_nondet_rem!(ctx, x1633, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1634, x1, 66), x1635, 66),
            x1633,
            66
        ),
        276359,
        4,
    )?;
    let x1636: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x1629, x1635, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x1629, x2, 64),
        64
    );
    let x1637: BytePoly_34 = bigint_nondet_quot!(ctx, x1636, x1, 34);
    let x1638: BytePoly_32 = bigint_nondet_rem!(ctx, x1636, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1637, x1, 66), x1638, 66),
            x1636,
            66
        ),
        276359,
        4,
    )?;
    let x1639: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x1640: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x1639, 96), x1, 32);
    let x1641: BytePoly_64 = bigint_mul!(x3, x1640, 64);
    let x1642: BytePoly_64 = bigint_add!(x1641, x1641, 64);
    let x1643: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x1642, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1643, x1, 66), x1642, 66), x9, 66),
        276359,
        4,
    )?;
    let x1644: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1640, x1640, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x1645: BytePoly_34 = bigint_nondet_quot!(ctx, x1644, x1, 34);
    let x1646: BytePoly_32 = bigint_nondet_rem!(ctx, x1644, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1645, x1, 66), x1646, 66),
            x1644,
            66
        ),
        276359,
        4,
    )?;
    let x1647: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x1640, x1646, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x1640, x2, 64),
        64
    );
    let x1648: BytePoly_34 = bigint_nondet_quot!(ctx, x1647, x1, 34);
    let x1649: BytePoly_32 = bigint_nondet_rem!(ctx, x1647, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1648, x1, 66), x1649, 66),
            x1647,
            66
        ),
        276359,
        4,
    )?;
    let x1650: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x1651: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x1650, 96), x1, 32);
    let x1652: BytePoly_64 = bigint_mul!(x3, x1651, 64);
    let x1653: BytePoly_64 = bigint_add!(x1652, x1652, 64);
    let x1654: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x1653, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1654, x1, 66), x1653, 66), x9, 66),
        276359,
        4,
    )?;
    let x1655: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1651, x1651, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x1656: BytePoly_34 = bigint_nondet_quot!(ctx, x1655, x1, 34);
    let x1657: BytePoly_32 = bigint_nondet_rem!(ctx, x1655, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1656, x1, 66), x1657, 66),
            x1655,
            66
        ),
        276359,
        4,
    )?;
    let x1658: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x1651, x1657, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x1651, x2, 64),
        64
    );
    let x1659: BytePoly_34 = bigint_nondet_quot!(ctx, x1658, x1, 34);
    let x1660: BytePoly_32 = bigint_nondet_rem!(ctx, x1658, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1659, x1, 66), x1660, 66),
            x1658,
            66
        ),
        276359,
        4,
    )?;
    let x1661: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x1662: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x1661, 96), x1, 32);
    let x1663: BytePoly_64 = bigint_mul!(x3, x1662, 64);
    let x1664: BytePoly_64 = bigint_add!(x1663, x1663, 64);
    let x1665: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x1664, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1665, x1, 66), x1664, 66), x9, 66),
        276359,
        4,
    )?;
    let x1666: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1662, x1662, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x1667: BytePoly_34 = bigint_nondet_quot!(ctx, x1666, x1, 34);
    let x1668: BytePoly_32 = bigint_nondet_rem!(ctx, x1666, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1667, x1, 66), x1668, 66),
            x1666,
            66
        ),
        276359,
        4,
    )?;
    let x1669: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x1662, x1668, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x1662, x2, 64),
        64
    );
    let x1670: BytePoly_34 = bigint_nondet_quot!(ctx, x1669, x1, 34);
    let x1671: BytePoly_32 = bigint_nondet_rem!(ctx, x1669, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1670, x1, 66), x1671, 66),
            x1669,
            66
        ),
        276359,
        4,
    )?;
    let x1672: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x1673: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x1672, 96), x1, 32);
    let x1674: BytePoly_64 = bigint_mul!(x3, x1673, 64);
    let x1675: BytePoly_64 = bigint_add!(x1674, x1674, 64);
    let x1676: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x1675, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1676, x1, 66), x1675, 66), x9, 66),
        276359,
        4,
    )?;
    let x1677: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1673, x1673, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x1678: BytePoly_34 = bigint_nondet_quot!(ctx, x1677, x1, 34);
    let x1679: BytePoly_32 = bigint_nondet_rem!(ctx, x1677, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1678, x1, 66), x1679, 66),
            x1677,
            66
        ),
        276359,
        4,
    )?;
    let x1680: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x1673, x1679, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x1673, x2, 64),
        64
    );
    let x1681: BytePoly_34 = bigint_nondet_quot!(ctx, x1680, x1, 34);
    let x1682: BytePoly_32 = bigint_nondet_rem!(ctx, x1680, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1681, x1, 66), x1682, 66),
            x1680,
            66
        ),
        276359,
        4,
    )?;
    let x1683: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x1684: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x1683, 96), x1, 32);
    let x1685: BytePoly_64 = bigint_mul!(x3, x1684, 64);
    let x1686: BytePoly_64 = bigint_add!(x1685, x1685, 64);
    let x1687: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x1686, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1687, x1, 66), x1686, 66), x9, 66),
        276359,
        4,
    )?;
    let x1688: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1684, x1684, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x1689: BytePoly_34 = bigint_nondet_quot!(ctx, x1688, x1, 34);
    let x1690: BytePoly_32 = bigint_nondet_rem!(ctx, x1688, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1689, x1, 66), x1690, 66),
            x1688,
            66
        ),
        276359,
        4,
    )?;
    let x1691: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x1684, x1690, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x1684, x2, 64),
        64
    );
    let x1692: BytePoly_34 = bigint_nondet_quot!(ctx, x1691, x1, 34);
    let x1693: BytePoly_32 = bigint_nondet_rem!(ctx, x1691, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1692, x1, 66), x1693, 66),
            x1691,
            66
        ),
        276359,
        4,
    )?;
    let x1694: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x1695: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x1694, 96), x1, 32);
    let x1696: BytePoly_64 = bigint_mul!(x3, x1695, 64);
    let x1697: BytePoly_64 = bigint_add!(x1696, x1696, 64);
    let x1698: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x1697, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1698, x1, 66), x1697, 66), x9, 66),
        276359,
        4,
    )?;
    let x1699: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1695, x1695, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x1700: BytePoly_34 = bigint_nondet_quot!(ctx, x1699, x1, 34);
    let x1701: BytePoly_32 = bigint_nondet_rem!(ctx, x1699, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1700, x1, 66), x1701, 66),
            x1699,
            66
        ),
        276359,
        4,
    )?;
    let x1702: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x1695, x1701, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x1695, x2, 64),
        64
    );
    let x1703: BytePoly_34 = bigint_nondet_quot!(ctx, x1702, x1, 34);
    let x1704: BytePoly_32 = bigint_nondet_rem!(ctx, x1702, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1703, x1, 66), x1704, 66),
            x1702,
            66
        ),
        276359,
        4,
    )?;
    let x1705: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x1706: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x1705, 96), x1, 32);
    let x1707: BytePoly_64 = bigint_mul!(x3, x1706, 64);
    let x1708: BytePoly_64 = bigint_add!(x1707, x1707, 64);
    let x1709: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x1708, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1709, x1, 66), x1708, 66), x9, 66),
        276359,
        4,
    )?;
    let x1710: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1706, x1706, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x1711: BytePoly_34 = bigint_nondet_quot!(ctx, x1710, x1, 34);
    let x1712: BytePoly_32 = bigint_nondet_rem!(ctx, x1710, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1711, x1, 66), x1712, 66),
            x1710,
            66
        ),
        276359,
        4,
    )?;
    let x1713: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x1706, x1712, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x1706, x2, 64),
        64
    );
    let x1714: BytePoly_34 = bigint_nondet_quot!(ctx, x1713, x1, 34);
    let x1715: BytePoly_32 = bigint_nondet_rem!(ctx, x1713, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1714, x1, 66), x1715, 66),
            x1713,
            66
        ),
        276359,
        4,
    )?;
    let x1716: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x1717: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x1716, 96), x1, 32);
    let x1718: BytePoly_64 = bigint_mul!(x3, x1717, 64);
    let x1719: BytePoly_64 = bigint_add!(x1718, x1718, 64);
    let x1720: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x1719, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1720, x1, 66), x1719, 66), x9, 66),
        276359,
        4,
    )?;
    let x1721: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1717, x1717, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x1722: BytePoly_34 = bigint_nondet_quot!(ctx, x1721, x1, 34);
    let x1723: BytePoly_32 = bigint_nondet_rem!(ctx, x1721, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1722, x1, 66), x1723, 66),
            x1721,
            66
        ),
        276359,
        4,
    )?;
    let x1724: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x1717, x1723, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x1717, x2, 64),
        64
    );
    let x1725: BytePoly_34 = bigint_nondet_quot!(ctx, x1724, x1, 34);
    let x1726: BytePoly_32 = bigint_nondet_rem!(ctx, x1724, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1725, x1, 66), x1726, 66),
            x1724,
            66
        ),
        276359,
        4,
    )?;
    let x1727: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x1728: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x1727, 96), x1, 32);
    let x1729: BytePoly_64 = bigint_mul!(x3, x1728, 64);
    let x1730: BytePoly_64 = bigint_add!(x1729, x1729, 64);
    let x1731: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x1730, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1731, x1, 66), x1730, 66), x9, 66),
        276359,
        4,
    )?;
    let x1732: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1728, x1728, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x1733: BytePoly_34 = bigint_nondet_quot!(ctx, x1732, x1, 34);
    let x1734: BytePoly_32 = bigint_nondet_rem!(ctx, x1732, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1733, x1, 66), x1734, 66),
            x1732,
            66
        ),
        276359,
        4,
    )?;
    let x1735: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x1728, x1734, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x1728, x2, 64),
        64
    );
    let x1736: BytePoly_34 = bigint_nondet_quot!(ctx, x1735, x1, 34);
    let x1737: BytePoly_32 = bigint_nondet_rem!(ctx, x1735, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1736, x1, 66), x1737, 66),
            x1735,
            66
        ),
        276359,
        4,
    )?;
    let x1738: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x1739: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x1738, 96), x1, 32);
    let x1740: BytePoly_64 = bigint_mul!(x3, x1739, 64);
    let x1741: BytePoly_64 = bigint_add!(x1740, x1740, 64);
    let x1742: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x1741, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1742, x1, 66), x1741, 66), x9, 66),
        276359,
        4,
    )?;
    let x1743: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1739, x1739, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x1744: BytePoly_34 = bigint_nondet_quot!(ctx, x1743, x1, 34);
    let x1745: BytePoly_32 = bigint_nondet_rem!(ctx, x1743, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1744, x1, 66), x1745, 66),
            x1743,
            66
        ),
        276359,
        4,
    )?;
    let x1746: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x1739, x1745, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x1739, x2, 64),
        64
    );
    let x1747: BytePoly_34 = bigint_nondet_quot!(ctx, x1746, x1, 34);
    let x1748: BytePoly_32 = bigint_nondet_rem!(ctx, x1746, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1747, x1, 66), x1748, 66),
            x1746,
            66
        ),
        276359,
        4,
    )?;
    let x1749: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x1750: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x1749, 96), x1, 32);
    let x1751: BytePoly_64 = bigint_mul!(x3, x1750, 64);
    let x1752: BytePoly_64 = bigint_add!(x1751, x1751, 64);
    let x1753: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x1752, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1753, x1, 66), x1752, 66), x9, 66),
        276359,
        4,
    )?;
    let x1754: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1750, x1750, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x1755: BytePoly_34 = bigint_nondet_quot!(ctx, x1754, x1, 34);
    let x1756: BytePoly_32 = bigint_nondet_rem!(ctx, x1754, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1755, x1, 66), x1756, 66),
            x1754,
            66
        ),
        276359,
        4,
    )?;
    let x1757: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x1750, x1756, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x1750, x2, 64),
        64
    );
    let x1758: BytePoly_34 = bigint_nondet_quot!(ctx, x1757, x1, 34);
    let x1759: BytePoly_32 = bigint_nondet_rem!(ctx, x1757, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1758, x1, 66), x1759, 66),
            x1757,
            66
        ),
        276359,
        4,
    )?;
    let x1760: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x1761: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x1760, 96), x1, 32);
    let x1762: BytePoly_64 = bigint_mul!(x3, x1761, 64);
    let x1763: BytePoly_64 = bigint_add!(x1762, x1762, 64);
    let x1764: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x1763, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1764, x1, 66), x1763, 66), x9, 66),
        276359,
        4,
    )?;
    let x1765: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1761, x1761, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x1766: BytePoly_34 = bigint_nondet_quot!(ctx, x1765, x1, 34);
    let x1767: BytePoly_32 = bigint_nondet_rem!(ctx, x1765, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1766, x1, 66), x1767, 66),
            x1765,
            66
        ),
        276359,
        4,
    )?;
    let x1768: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x1761, x1767, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x1761, x2, 64),
        64
    );
    let x1769: BytePoly_34 = bigint_nondet_quot!(ctx, x1768, x1, 34);
    let x1770: BytePoly_32 = bigint_nondet_rem!(ctx, x1768, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1769, x1, 66), x1770, 66),
            x1768,
            66
        ),
        276359,
        4,
    )?;
    let x1771: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x1772: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x1771, 96), x1, 32);
    let x1773: BytePoly_64 = bigint_mul!(x3, x1772, 64);
    let x1774: BytePoly_64 = bigint_add!(x1773, x1773, 64);
    let x1775: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x1774, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1775, x1, 66), x1774, 66), x9, 66),
        276359,
        4,
    )?;
    let x1776: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1772, x1772, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x1777: BytePoly_34 = bigint_nondet_quot!(ctx, x1776, x1, 34);
    let x1778: BytePoly_32 = bigint_nondet_rem!(ctx, x1776, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1777, x1, 66), x1778, 66),
            x1776,
            66
        ),
        276359,
        4,
    )?;
    let x1779: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x1772, x1778, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x1772, x2, 64),
        64
    );
    let x1780: BytePoly_34 = bigint_nondet_quot!(ctx, x1779, x1, 34);
    let x1781: BytePoly_32 = bigint_nondet_rem!(ctx, x1779, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1780, x1, 66), x1781, 66),
            x1779,
            66
        ),
        276359,
        4,
    )?;
    let x1782: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x1783: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x1782, 96), x1, 32);
    let x1784: BytePoly_64 = bigint_mul!(x3, x1783, 64);
    let x1785: BytePoly_64 = bigint_add!(x1784, x1784, 64);
    let x1786: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x1785, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1786, x1, 66), x1785, 66), x9, 66),
        276359,
        4,
    )?;
    let x1787: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1783, x1783, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x1788: BytePoly_34 = bigint_nondet_quot!(ctx, x1787, x1, 34);
    let x1789: BytePoly_32 = bigint_nondet_rem!(ctx, x1787, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1788, x1, 66), x1789, 66),
            x1787,
            66
        ),
        276359,
        4,
    )?;
    let x1790: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x1783, x1789, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x1783, x2, 64),
        64
    );
    let x1791: BytePoly_34 = bigint_nondet_quot!(ctx, x1790, x1, 34);
    let x1792: BytePoly_32 = bigint_nondet_rem!(ctx, x1790, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1791, x1, 66), x1792, 66),
            x1790,
            66
        ),
        276359,
        4,
    )?;
    let x1793: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x1794: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x1793, 96), x1, 32);
    let x1795: BytePoly_64 = bigint_mul!(x3, x1794, 64);
    let x1796: BytePoly_64 = bigint_add!(x1795, x1795, 64);
    let x1797: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x1796, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1797, x1, 66), x1796, 66), x9, 66),
        276359,
        4,
    )?;
    let x1798: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1794, x1794, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x1799: BytePoly_34 = bigint_nondet_quot!(ctx, x1798, x1, 34);
    let x1800: BytePoly_32 = bigint_nondet_rem!(ctx, x1798, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1799, x1, 66), x1800, 66),
            x1798,
            66
        ),
        276359,
        4,
    )?;
    let x1801: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x1794, x1800, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x1794, x2, 64),
        64
    );
    let x1802: BytePoly_34 = bigint_nondet_quot!(ctx, x1801, x1, 34);
    let x1803: BytePoly_32 = bigint_nondet_rem!(ctx, x1801, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1802, x1, 66), x1803, 66),
            x1801,
            66
        ),
        276359,
        4,
    )?;
    let x1804: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x1805: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x1804, 96), x1, 32);
    let x1806: BytePoly_64 = bigint_mul!(x3, x1805, 64);
    let x1807: BytePoly_64 = bigint_add!(x1806, x1806, 64);
    let x1808: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x1807, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1808, x1, 66), x1807, 66), x9, 66),
        276359,
        4,
    )?;
    let x1809: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1805, x1805, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x1810: BytePoly_34 = bigint_nondet_quot!(ctx, x1809, x1, 34);
    let x1811: BytePoly_32 = bigint_nondet_rem!(ctx, x1809, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1810, x1, 66), x1811, 66),
            x1809,
            66
        ),
        276359,
        4,
    )?;
    let x1812: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x1805, x1811, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x1805, x2, 64),
        64
    );
    let x1813: BytePoly_34 = bigint_nondet_quot!(ctx, x1812, x1, 34);
    let x1814: BytePoly_32 = bigint_nondet_rem!(ctx, x1812, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1813, x1, 66), x1814, 66),
            x1812,
            66
        ),
        276359,
        4,
    )?;
    let x1815: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x1816: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x1815, 96), x1, 32);
    let x1817: BytePoly_64 = bigint_mul!(x3, x1816, 64);
    let x1818: BytePoly_64 = bigint_add!(x1817, x1817, 64);
    let x1819: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x1818, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1819, x1, 66), x1818, 66), x9, 66),
        276359,
        4,
    )?;
    let x1820: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1816, x1816, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x1821: BytePoly_34 = bigint_nondet_quot!(ctx, x1820, x1, 34);
    let x1822: BytePoly_32 = bigint_nondet_rem!(ctx, x1820, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1821, x1, 66), x1822, 66),
            x1820,
            66
        ),
        276359,
        4,
    )?;
    let x1823: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x1816, x1822, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x1816, x2, 64),
        64
    );
    let x1824: BytePoly_34 = bigint_nondet_quot!(ctx, x1823, x1, 34);
    let x1825: BytePoly_32 = bigint_nondet_rem!(ctx, x1823, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1824, x1, 66), x1825, 66),
            x1823,
            66
        ),
        276359,
        4,
    )?;
    let x1826: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x1827: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x1826, 96), x1, 32);
    let x1828: BytePoly_64 = bigint_mul!(x3, x1827, 64);
    let x1829: BytePoly_64 = bigint_add!(x1828, x1828, 64);
    let x1830: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x1829, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1830, x1, 66), x1829, 66), x9, 66),
        276359,
        4,
    )?;
    let x1831: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1827, x1827, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x1832: BytePoly_34 = bigint_nondet_quot!(ctx, x1831, x1, 34);
    let x1833: BytePoly_32 = bigint_nondet_rem!(ctx, x1831, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1832, x1, 66), x1833, 66),
            x1831,
            66
        ),
        276359,
        4,
    )?;
    let x1834: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x1827, x1833, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x1827, x2, 64),
        64
    );
    let x1835: BytePoly_34 = bigint_nondet_quot!(ctx, x1834, x1, 34);
    let x1836: BytePoly_32 = bigint_nondet_rem!(ctx, x1834, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1835, x1, 66), x1836, 66),
            x1834,
            66
        ),
        276359,
        4,
    )?;
    let x1837: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x1838: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x1837, 96), x1, 32);
    let x1839: BytePoly_64 = bigint_mul!(x3, x1838, 64);
    let x1840: BytePoly_64 = bigint_add!(x1839, x1839, 64);
    let x1841: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x1840, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1841, x1, 66), x1840, 66), x9, 66),
        276359,
        4,
    )?;
    let x1842: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1838, x1838, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x1843: BytePoly_34 = bigint_nondet_quot!(ctx, x1842, x1, 34);
    let x1844: BytePoly_32 = bigint_nondet_rem!(ctx, x1842, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1843, x1, 66), x1844, 66),
            x1842,
            66
        ),
        276359,
        4,
    )?;
    let x1845: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x1838, x1844, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x1838, x2, 64),
        64
    );
    let x1846: BytePoly_34 = bigint_nondet_quot!(ctx, x1845, x1, 34);
    let x1847: BytePoly_32 = bigint_nondet_rem!(ctx, x1845, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1846, x1, 66), x1847, 66),
            x1845,
            66
        ),
        276359,
        4,
    )?;
    let x1848: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x1849: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x1848, 96), x1, 32);
    let x1850: BytePoly_64 = bigint_mul!(x3, x1849, 64);
    let x1851: BytePoly_64 = bigint_add!(x1850, x1850, 64);
    let x1852: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x1851, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1852, x1, 66), x1851, 66), x9, 66),
        276359,
        4,
    )?;
    let x1853: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1849, x1849, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x1854: BytePoly_34 = bigint_nondet_quot!(ctx, x1853, x1, 34);
    let x1855: BytePoly_32 = bigint_nondet_rem!(ctx, x1853, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1854, x1, 66), x1855, 66),
            x1853,
            66
        ),
        276359,
        4,
    )?;
    let x1856: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x1849, x1855, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x1849, x2, 64),
        64
    );
    let x1857: BytePoly_34 = bigint_nondet_quot!(ctx, x1856, x1, 34);
    let x1858: BytePoly_32 = bigint_nondet_rem!(ctx, x1856, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1857, x1, 66), x1858, 66),
            x1856,
            66
        ),
        276359,
        4,
    )?;
    let x1859: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x1860: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x1859, 96), x1, 32);
    let x1861: BytePoly_64 = bigint_mul!(x3, x1860, 64);
    let x1862: BytePoly_64 = bigint_add!(x1861, x1861, 64);
    let x1863: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x1862, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1863, x1, 66), x1862, 66), x9, 66),
        276359,
        4,
    )?;
    let x1864: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1860, x1860, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x1865: BytePoly_34 = bigint_nondet_quot!(ctx, x1864, x1, 34);
    let x1866: BytePoly_32 = bigint_nondet_rem!(ctx, x1864, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1865, x1, 66), x1866, 66),
            x1864,
            66
        ),
        276359,
        4,
    )?;
    let x1867: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x1860, x1866, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x1860, x2, 64),
        64
    );
    let x1868: BytePoly_34 = bigint_nondet_quot!(ctx, x1867, x1, 34);
    let x1869: BytePoly_32 = bigint_nondet_rem!(ctx, x1867, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1868, x1, 66), x1869, 66),
            x1867,
            66
        ),
        276359,
        4,
    )?;
    let x1870: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x1871: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x1870, 96), x1, 32);
    let x1872: BytePoly_64 = bigint_mul!(x3, x1871, 64);
    let x1873: BytePoly_64 = bigint_add!(x1872, x1872, 64);
    let x1874: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x1873, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1874, x1, 66), x1873, 66), x9, 66),
        276359,
        4,
    )?;
    let x1875: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1871, x1871, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x1876: BytePoly_34 = bigint_nondet_quot!(ctx, x1875, x1, 34);
    let x1877: BytePoly_32 = bigint_nondet_rem!(ctx, x1875, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1876, x1, 66), x1877, 66),
            x1875,
            66
        ),
        276359,
        4,
    )?;
    let x1878: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x1871, x1877, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x1871, x2, 64),
        64
    );
    let x1879: BytePoly_34 = bigint_nondet_quot!(ctx, x1878, x1, 34);
    let x1880: BytePoly_32 = bigint_nondet_rem!(ctx, x1878, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1879, x1, 66), x1880, 66),
            x1878,
            66
        ),
        276359,
        4,
    )?;
    let x1881: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x1882: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x1881, 96), x1, 32);
    let x1883: BytePoly_64 = bigint_mul!(x3, x1882, 64);
    let x1884: BytePoly_64 = bigint_add!(x1883, x1883, 64);
    let x1885: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x1884, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1885, x1, 66), x1884, 66), x9, 66),
        276359,
        4,
    )?;
    let x1886: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1882, x1882, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x1887: BytePoly_34 = bigint_nondet_quot!(ctx, x1886, x1, 34);
    let x1888: BytePoly_32 = bigint_nondet_rem!(ctx, x1886, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1887, x1, 66), x1888, 66),
            x1886,
            66
        ),
        276359,
        4,
    )?;
    let x1889: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x1882, x1888, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x1882, x2, 64),
        64
    );
    let x1890: BytePoly_34 = bigint_nondet_quot!(ctx, x1889, x1, 34);
    let x1891: BytePoly_32 = bigint_nondet_rem!(ctx, x1889, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1890, x1, 66), x1891, 66),
            x1889,
            66
        ),
        276359,
        4,
    )?;
    let x1892: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x1893: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x1892, 96), x1, 32);
    let x1894: BytePoly_64 = bigint_mul!(x3, x1893, 64);
    let x1895: BytePoly_64 = bigint_add!(x1894, x1894, 64);
    let x1896: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x1895, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1896, x1, 66), x1895, 66), x9, 66),
        276359,
        4,
    )?;
    let x1897: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1893, x1893, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x1898: BytePoly_34 = bigint_nondet_quot!(ctx, x1897, x1, 34);
    let x1899: BytePoly_32 = bigint_nondet_rem!(ctx, x1897, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1898, x1, 66), x1899, 66),
            x1897,
            66
        ),
        276359,
        4,
    )?;
    let x1900: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x1893, x1899, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x1893, x2, 64),
        64
    );
    let x1901: BytePoly_34 = bigint_nondet_quot!(ctx, x1900, x1, 34);
    let x1902: BytePoly_32 = bigint_nondet_rem!(ctx, x1900, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1901, x1, 66), x1902, 66),
            x1900,
            66
        ),
        276359,
        4,
    )?;
    let x1903: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x1904: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x1903, 96), x1, 32);
    let x1905: BytePoly_64 = bigint_mul!(x3, x1904, 64);
    let x1906: BytePoly_64 = bigint_add!(x1905, x1905, 64);
    let x1907: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x1906, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1907, x1, 66), x1906, 66), x9, 66),
        276359,
        4,
    )?;
    let x1908: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1904, x1904, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x1909: BytePoly_34 = bigint_nondet_quot!(ctx, x1908, x1, 34);
    let x1910: BytePoly_32 = bigint_nondet_rem!(ctx, x1908, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1909, x1, 66), x1910, 66),
            x1908,
            66
        ),
        276359,
        4,
    )?;
    let x1911: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x1904, x1910, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x1904, x2, 64),
        64
    );
    let x1912: BytePoly_34 = bigint_nondet_quot!(ctx, x1911, x1, 34);
    let x1913: BytePoly_32 = bigint_nondet_rem!(ctx, x1911, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1912, x1, 66), x1913, 66),
            x1911,
            66
        ),
        276359,
        4,
    )?;
    let x1914: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x1915: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x1914, 96), x1, 32);
    let x1916: BytePoly_64 = bigint_mul!(x3, x1915, 64);
    let x1917: BytePoly_64 = bigint_add!(x1916, x1916, 64);
    let x1918: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x1917, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1918, x1, 66), x1917, 66), x9, 66),
        276359,
        4,
    )?;
    let x1919: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1915, x1915, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x1920: BytePoly_34 = bigint_nondet_quot!(ctx, x1919, x1, 34);
    let x1921: BytePoly_32 = bigint_nondet_rem!(ctx, x1919, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1920, x1, 66), x1921, 66),
            x1919,
            66
        ),
        276359,
        4,
    )?;
    let x1922: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x1915, x1921, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x1915, x2, 64),
        64
    );
    let x1923: BytePoly_34 = bigint_nondet_quot!(ctx, x1922, x1, 34);
    let x1924: BytePoly_32 = bigint_nondet_rem!(ctx, x1922, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1923, x1, 66), x1924, 66),
            x1922,
            66
        ),
        276359,
        4,
    )?;
    let x1925: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x1926: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x1925, 96), x1, 32);
    let x1927: BytePoly_64 = bigint_mul!(x3, x1926, 64);
    let x1928: BytePoly_64 = bigint_add!(x1927, x1927, 64);
    let x1929: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x1928, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1929, x1, 66), x1928, 66), x9, 66),
        276359,
        4,
    )?;
    let x1930: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1926, x1926, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x1931: BytePoly_34 = bigint_nondet_quot!(ctx, x1930, x1, 34);
    let x1932: BytePoly_32 = bigint_nondet_rem!(ctx, x1930, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1931, x1, 66), x1932, 66),
            x1930,
            66
        ),
        276359,
        4,
    )?;
    let x1933: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x1926, x1932, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x1926, x2, 64),
        64
    );
    let x1934: BytePoly_34 = bigint_nondet_quot!(ctx, x1933, x1, 34);
    let x1935: BytePoly_32 = bigint_nondet_rem!(ctx, x1933, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1934, x1, 66), x1935, 66),
            x1933,
            66
        ),
        276359,
        4,
    )?;
    let x1936: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x1937: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x1936, 96), x1, 32);
    let x1938: BytePoly_64 = bigint_mul!(x3, x1937, 64);
    let x1939: BytePoly_64 = bigint_add!(x1938, x1938, 64);
    let x1940: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x1939, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1940, x1, 66), x1939, 66), x9, 66),
        276359,
        4,
    )?;
    let x1941: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1937, x1937, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x1942: BytePoly_34 = bigint_nondet_quot!(ctx, x1941, x1, 34);
    let x1943: BytePoly_32 = bigint_nondet_rem!(ctx, x1941, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1942, x1, 66), x1943, 66),
            x1941,
            66
        ),
        276359,
        4,
    )?;
    let x1944: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x1937, x1943, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x1937, x2, 64),
        64
    );
    let x1945: BytePoly_34 = bigint_nondet_quot!(ctx, x1944, x1, 34);
    let x1946: BytePoly_32 = bigint_nondet_rem!(ctx, x1944, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1945, x1, 66), x1946, 66),
            x1944,
            66
        ),
        276359,
        4,
    )?;
    let x1947: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x1948: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x1947, 96), x1, 32);
    let x1949: BytePoly_64 = bigint_mul!(x3, x1948, 64);
    let x1950: BytePoly_64 = bigint_add!(x1949, x1949, 64);
    let x1951: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x1950, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1951, x1, 66), x1950, 66), x9, 66),
        276359,
        4,
    )?;
    let x1952: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1948, x1948, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x1953: BytePoly_34 = bigint_nondet_quot!(ctx, x1952, x1, 34);
    let x1954: BytePoly_32 = bigint_nondet_rem!(ctx, x1952, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1953, x1, 66), x1954, 66),
            x1952,
            66
        ),
        276359,
        4,
    )?;
    let x1955: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x1948, x1954, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x1948, x2, 64),
        64
    );
    let x1956: BytePoly_34 = bigint_nondet_quot!(ctx, x1955, x1, 34);
    let x1957: BytePoly_32 = bigint_nondet_rem!(ctx, x1955, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1956, x1, 66), x1957, 66),
            x1955,
            66
        ),
        276359,
        4,
    )?;
    let x1958: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x1959: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x1958, 96), x1, 32);
    let x1960: BytePoly_64 = bigint_mul!(x3, x1959, 64);
    let x1961: BytePoly_64 = bigint_add!(x1960, x1960, 64);
    let x1962: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x1961, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1962, x1, 66), x1961, 66), x9, 66),
        276359,
        4,
    )?;
    let x1963: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1959, x1959, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x1964: BytePoly_34 = bigint_nondet_quot!(ctx, x1963, x1, 34);
    let x1965: BytePoly_32 = bigint_nondet_rem!(ctx, x1963, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1964, x1, 66), x1965, 66),
            x1963,
            66
        ),
        276359,
        4,
    )?;
    let x1966: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x1959, x1965, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x1959, x2, 64),
        64
    );
    let x1967: BytePoly_34 = bigint_nondet_quot!(ctx, x1966, x1, 34);
    let x1968: BytePoly_32 = bigint_nondet_rem!(ctx, x1966, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1967, x1, 66), x1968, 66),
            x1966,
            66
        ),
        276359,
        4,
    )?;
    let x1969: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x1970: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x1969, 96), x1, 32);
    let x1971: BytePoly_64 = bigint_mul!(x3, x1970, 64);
    let x1972: BytePoly_64 = bigint_add!(x1971, x1971, 64);
    let x1973: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x1972, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1973, x1, 66), x1972, 66), x9, 66),
        276359,
        4,
    )?;
    let x1974: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1970, x1970, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x1975: BytePoly_34 = bigint_nondet_quot!(ctx, x1974, x1, 34);
    let x1976: BytePoly_32 = bigint_nondet_rem!(ctx, x1974, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1975, x1, 66), x1976, 66),
            x1974,
            66
        ),
        276359,
        4,
    )?;
    let x1977: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x1970, x1976, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x1970, x2, 64),
        64
    );
    let x1978: BytePoly_34 = bigint_nondet_quot!(ctx, x1977, x1, 34);
    let x1979: BytePoly_32 = bigint_nondet_rem!(ctx, x1977, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1978, x1, 66), x1979, 66),
            x1977,
            66
        ),
        276359,
        4,
    )?;
    let x1980: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x1981: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x1980, 96), x1, 32);
    let x1982: BytePoly_64 = bigint_mul!(x3, x1981, 64);
    let x1983: BytePoly_64 = bigint_add!(x1982, x1982, 64);
    let x1984: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x1983, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1984, x1, 66), x1983, 66), x9, 66),
        276359,
        4,
    )?;
    let x1985: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1981, x1981, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x1986: BytePoly_34 = bigint_nondet_quot!(ctx, x1985, x1, 34);
    let x1987: BytePoly_32 = bigint_nondet_rem!(ctx, x1985, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1986, x1, 66), x1987, 66),
            x1985,
            66
        ),
        276359,
        4,
    )?;
    let x1988: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x1981, x1987, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x1981, x2, 64),
        64
    );
    let x1989: BytePoly_34 = bigint_nondet_quot!(ctx, x1988, x1, 34);
    let x1990: BytePoly_32 = bigint_nondet_rem!(ctx, x1988, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1989, x1, 66), x1990, 66),
            x1988,
            66
        ),
        276359,
        4,
    )?;
    let x1991: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x1992: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x1991, 96), x1, 32);
    let x1993: BytePoly_64 = bigint_mul!(x3, x1992, 64);
    let x1994: BytePoly_64 = bigint_add!(x1993, x1993, 64);
    let x1995: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x1994, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1995, x1, 66), x1994, 66), x9, 66),
        276359,
        4,
    )?;
    let x1996: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x1992, x1992, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x1997: BytePoly_34 = bigint_nondet_quot!(ctx, x1996, x1, 34);
    let x1998: BytePoly_32 = bigint_nondet_rem!(ctx, x1996, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1997, x1, 66), x1998, 66),
            x1996,
            66
        ),
        276359,
        4,
    )?;
    let x1999: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x1992, x1998, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x1992, x2, 64),
        64
    );
    let x2000: BytePoly_34 = bigint_nondet_quot!(ctx, x1999, x1, 34);
    let x2001: BytePoly_32 = bigint_nondet_rem!(ctx, x1999, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2000, x1, 66), x2001, 66),
            x1999,
            66
        ),
        276359,
        4,
    )?;
    let x2002: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x2003: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x2002, 96), x1, 32);
    let x2004: BytePoly_64 = bigint_mul!(x3, x2003, 64);
    let x2005: BytePoly_64 = bigint_add!(x2004, x2004, 64);
    let x2006: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x2005, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2006, x1, 66), x2005, 66), x9, 66),
        276359,
        4,
    )?;
    let x2007: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2003, x2003, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x2008: BytePoly_34 = bigint_nondet_quot!(ctx, x2007, x1, 34);
    let x2009: BytePoly_32 = bigint_nondet_rem!(ctx, x2007, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2008, x1, 66), x2009, 66),
            x2007,
            66
        ),
        276359,
        4,
    )?;
    let x2010: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x2003, x2009, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x2003, x2, 64),
        64
    );
    let x2011: BytePoly_34 = bigint_nondet_quot!(ctx, x2010, x1, 34);
    let x2012: BytePoly_32 = bigint_nondet_rem!(ctx, x2010, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2011, x1, 66), x2012, 66),
            x2010,
            66
        ),
        276359,
        4,
    )?;
    let x2013: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x2014: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x2013, 96), x1, 32);
    let x2015: BytePoly_64 = bigint_mul!(x3, x2014, 64);
    let x2016: BytePoly_64 = bigint_add!(x2015, x2015, 64);
    let x2017: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x2016, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2017, x1, 66), x2016, 66), x9, 66),
        276359,
        4,
    )?;
    let x2018: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2014, x2014, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x2019: BytePoly_34 = bigint_nondet_quot!(ctx, x2018, x1, 34);
    let x2020: BytePoly_32 = bigint_nondet_rem!(ctx, x2018, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2019, x1, 66), x2020, 66),
            x2018,
            66
        ),
        276359,
        4,
    )?;
    let x2021: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x2014, x2020, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x2014, x2, 64),
        64
    );
    let x2022: BytePoly_34 = bigint_nondet_quot!(ctx, x2021, x1, 34);
    let x2023: BytePoly_32 = bigint_nondet_rem!(ctx, x2021, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2022, x1, 66), x2023, 66),
            x2021,
            66
        ),
        276359,
        4,
    )?;
    let x2024: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x2025: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x2024, 96), x1, 32);
    let x2026: BytePoly_64 = bigint_mul!(x3, x2025, 64);
    let x2027: BytePoly_64 = bigint_add!(x2026, x2026, 64);
    let x2028: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x2027, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2028, x1, 66), x2027, 66), x9, 66),
        276359,
        4,
    )?;
    let x2029: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2025, x2025, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x2030: BytePoly_34 = bigint_nondet_quot!(ctx, x2029, x1, 34);
    let x2031: BytePoly_32 = bigint_nondet_rem!(ctx, x2029, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2030, x1, 66), x2031, 66),
            x2029,
            66
        ),
        276359,
        4,
    )?;
    let x2032: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x2025, x2031, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x2025, x2, 64),
        64
    );
    let x2033: BytePoly_34 = bigint_nondet_quot!(ctx, x2032, x1, 34);
    let x2034: BytePoly_32 = bigint_nondet_rem!(ctx, x2032, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2033, x1, 66), x2034, 66),
            x2032,
            66
        ),
        276359,
        4,
    )?;
    let x2035: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x2036: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x2035, 96), x1, 32);
    let x2037: BytePoly_64 = bigint_mul!(x3, x2036, 64);
    let x2038: BytePoly_64 = bigint_add!(x2037, x2037, 64);
    let x2039: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x2038, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2039, x1, 66), x2038, 66), x9, 66),
        276359,
        4,
    )?;
    let x2040: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2036, x2036, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x2041: BytePoly_34 = bigint_nondet_quot!(ctx, x2040, x1, 34);
    let x2042: BytePoly_32 = bigint_nondet_rem!(ctx, x2040, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2041, x1, 66), x2042, 66),
            x2040,
            66
        ),
        276359,
        4,
    )?;
    let x2043: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x2036, x2042, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x2036, x2, 64),
        64
    );
    let x2044: BytePoly_34 = bigint_nondet_quot!(ctx, x2043, x1, 34);
    let x2045: BytePoly_32 = bigint_nondet_rem!(ctx, x2043, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2044, x1, 66), x2045, 66),
            x2043,
            66
        ),
        276359,
        4,
    )?;
    let x2046: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x2047: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x2046, 96), x1, 32);
    let x2048: BytePoly_64 = bigint_mul!(x3, x2047, 64);
    let x2049: BytePoly_64 = bigint_add!(x2048, x2048, 64);
    let x2050: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x2049, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2050, x1, 66), x2049, 66), x9, 66),
        276359,
        4,
    )?;
    let x2051: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2047, x2047, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x2052: BytePoly_34 = bigint_nondet_quot!(ctx, x2051, x1, 34);
    let x2053: BytePoly_32 = bigint_nondet_rem!(ctx, x2051, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2052, x1, 66), x2053, 66),
            x2051,
            66
        ),
        276359,
        4,
    )?;
    let x2054: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x2047, x2053, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x2047, x2, 64),
        64
    );
    let x2055: BytePoly_34 = bigint_nondet_quot!(ctx, x2054, x1, 34);
    let x2056: BytePoly_32 = bigint_nondet_rem!(ctx, x2054, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2055, x1, 66), x2056, 66),
            x2054,
            66
        ),
        276359,
        4,
    )?;
    let x2057: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x2058: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x2057, 96), x1, 32);
    let x2059: BytePoly_64 = bigint_mul!(x3, x2058, 64);
    let x2060: BytePoly_64 = bigint_add!(x2059, x2059, 64);
    let x2061: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x2060, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2061, x1, 66), x2060, 66), x9, 66),
        276359,
        4,
    )?;
    let x2062: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2058, x2058, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x2063: BytePoly_34 = bigint_nondet_quot!(ctx, x2062, x1, 34);
    let x2064: BytePoly_32 = bigint_nondet_rem!(ctx, x2062, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2063, x1, 66), x2064, 66),
            x2062,
            66
        ),
        276359,
        4,
    )?;
    let x2065: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x2058, x2064, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x2058, x2, 64),
        64
    );
    let x2066: BytePoly_34 = bigint_nondet_quot!(ctx, x2065, x1, 34);
    let x2067: BytePoly_32 = bigint_nondet_rem!(ctx, x2065, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2066, x1, 66), x2067, 66),
            x2065,
            66
        ),
        276359,
        4,
    )?;
    let x2068: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x2069: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x2068, 96), x1, 32);
    let x2070: BytePoly_64 = bigint_mul!(x3, x2069, 64);
    let x2071: BytePoly_64 = bigint_add!(x2070, x2070, 64);
    let x2072: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x2071, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2072, x1, 66), x2071, 66), x9, 66),
        276359,
        4,
    )?;
    let x2073: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2069, x2069, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x2074: BytePoly_34 = bigint_nondet_quot!(ctx, x2073, x1, 34);
    let x2075: BytePoly_32 = bigint_nondet_rem!(ctx, x2073, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2074, x1, 66), x2075, 66),
            x2073,
            66
        ),
        276359,
        4,
    )?;
    let x2076: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x2069, x2075, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x2069, x2, 64),
        64
    );
    let x2077: BytePoly_34 = bigint_nondet_quot!(ctx, x2076, x1, 34);
    let x2078: BytePoly_32 = bigint_nondet_rem!(ctx, x2076, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2077, x1, 66), x2078, 66),
            x2076,
            66
        ),
        276359,
        4,
    )?;
    let x2079: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x2080: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x2079, 96), x1, 32);
    let x2081: BytePoly_64 = bigint_mul!(x3, x2080, 64);
    let x2082: BytePoly_64 = bigint_add!(x2081, x2081, 64);
    let x2083: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x2082, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2083, x1, 66), x2082, 66), x9, 66),
        276359,
        4,
    )?;
    let x2084: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2080, x2080, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x2085: BytePoly_34 = bigint_nondet_quot!(ctx, x2084, x1, 34);
    let x2086: BytePoly_32 = bigint_nondet_rem!(ctx, x2084, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2085, x1, 66), x2086, 66),
            x2084,
            66
        ),
        276359,
        4,
    )?;
    let x2087: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x2080, x2086, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x2080, x2, 64),
        64
    );
    let x2088: BytePoly_34 = bigint_nondet_quot!(ctx, x2087, x1, 34);
    let x2089: BytePoly_32 = bigint_nondet_rem!(ctx, x2087, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2088, x1, 66), x2089, 66),
            x2087,
            66
        ),
        276359,
        4,
    )?;
    let x2090: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x2091: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x2090, 96), x1, 32);
    let x2092: BytePoly_64 = bigint_mul!(x3, x2091, 64);
    let x2093: BytePoly_64 = bigint_add!(x2092, x2092, 64);
    let x2094: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x2093, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2094, x1, 66), x2093, 66), x9, 66),
        276359,
        4,
    )?;
    let x2095: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2091, x2091, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x2096: BytePoly_34 = bigint_nondet_quot!(ctx, x2095, x1, 34);
    let x2097: BytePoly_32 = bigint_nondet_rem!(ctx, x2095, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2096, x1, 66), x2097, 66),
            x2095,
            66
        ),
        276359,
        4,
    )?;
    let x2098: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x2091, x2097, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x2091, x2, 64),
        64
    );
    let x2099: BytePoly_34 = bigint_nondet_quot!(ctx, x2098, x1, 34);
    let x2100: BytePoly_32 = bigint_nondet_rem!(ctx, x2098, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2099, x1, 66), x2100, 66),
            x2098,
            66
        ),
        276359,
        4,
    )?;
    let x2101: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x2102: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x2101, 96), x1, 32);
    let x2103: BytePoly_64 = bigint_mul!(x3, x2102, 64);
    let x2104: BytePoly_64 = bigint_add!(x2103, x2103, 64);
    let x2105: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x2104, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2105, x1, 66), x2104, 66), x9, 66),
        276359,
        4,
    )?;
    let x2106: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2102, x2102, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x2107: BytePoly_34 = bigint_nondet_quot!(ctx, x2106, x1, 34);
    let x2108: BytePoly_32 = bigint_nondet_rem!(ctx, x2106, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2107, x1, 66), x2108, 66),
            x2106,
            66
        ),
        276359,
        4,
    )?;
    let x2109: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x2102, x2108, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x2102, x2, 64),
        64
    );
    let x2110: BytePoly_34 = bigint_nondet_quot!(ctx, x2109, x1, 34);
    let x2111: BytePoly_32 = bigint_nondet_rem!(ctx, x2109, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2110, x1, 66), x2111, 66),
            x2109,
            66
        ),
        276359,
        4,
    )?;
    let x2112: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x2113: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x2112, 96), x1, 32);
    let x2114: BytePoly_64 = bigint_mul!(x3, x2113, 64);
    let x2115: BytePoly_64 = bigint_add!(x2114, x2114, 64);
    let x2116: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x2115, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2116, x1, 66), x2115, 66), x9, 66),
        276359,
        4,
    )?;
    let x2117: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2113, x2113, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x2118: BytePoly_34 = bigint_nondet_quot!(ctx, x2117, x1, 34);
    let x2119: BytePoly_32 = bigint_nondet_rem!(ctx, x2117, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2118, x1, 66), x2119, 66),
            x2117,
            66
        ),
        276359,
        4,
    )?;
    let x2120: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x2113, x2119, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x2113, x2, 64),
        64
    );
    let x2121: BytePoly_34 = bigint_nondet_quot!(ctx, x2120, x1, 34);
    let x2122: BytePoly_32 = bigint_nondet_rem!(ctx, x2120, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2121, x1, 66), x2122, 66),
            x2120,
            66
        ),
        276359,
        4,
    )?;
    let x2123: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x2124: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x2123, 96), x1, 32);
    let x2125: BytePoly_64 = bigint_mul!(x3, x2124, 64);
    let x2126: BytePoly_64 = bigint_add!(x2125, x2125, 64);
    let x2127: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x2126, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2127, x1, 66), x2126, 66), x9, 66),
        276359,
        4,
    )?;
    let x2128: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2124, x2124, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x2129: BytePoly_34 = bigint_nondet_quot!(ctx, x2128, x1, 34);
    let x2130: BytePoly_32 = bigint_nondet_rem!(ctx, x2128, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2129, x1, 66), x2130, 66),
            x2128,
            66
        ),
        276359,
        4,
    )?;
    let x2131: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x2124, x2130, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x2124, x2, 64),
        64
    );
    let x2132: BytePoly_34 = bigint_nondet_quot!(ctx, x2131, x1, 34);
    let x2133: BytePoly_32 = bigint_nondet_rem!(ctx, x2131, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2132, x1, 66), x2133, 66),
            x2131,
            66
        ),
        276359,
        4,
    )?;
    let x2134: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x2135: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x2134, 96), x1, 32);
    let x2136: BytePoly_64 = bigint_mul!(x3, x2135, 64);
    let x2137: BytePoly_64 = bigint_add!(x2136, x2136, 64);
    let x2138: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x2137, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2138, x1, 66), x2137, 66), x9, 66),
        276359,
        4,
    )?;
    let x2139: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2135, x2135, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x2140: BytePoly_34 = bigint_nondet_quot!(ctx, x2139, x1, 34);
    let x2141: BytePoly_32 = bigint_nondet_rem!(ctx, x2139, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2140, x1, 66), x2141, 66),
            x2139,
            66
        ),
        276359,
        4,
    )?;
    let x2142: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x2135, x2141, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x2135, x2, 64),
        64
    );
    let x2143: BytePoly_34 = bigint_nondet_quot!(ctx, x2142, x1, 34);
    let x2144: BytePoly_32 = bigint_nondet_rem!(ctx, x2142, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2143, x1, 66), x2144, 66),
            x2142,
            66
        ),
        276359,
        4,
    )?;
    let x2145: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x2146: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x2145, 96), x1, 32);
    let x2147: BytePoly_64 = bigint_mul!(x3, x2146, 64);
    let x2148: BytePoly_64 = bigint_add!(x2147, x2147, 64);
    let x2149: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x2148, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2149, x1, 66), x2148, 66), x9, 66),
        276359,
        4,
    )?;
    let x2150: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2146, x2146, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x2151: BytePoly_34 = bigint_nondet_quot!(ctx, x2150, x1, 34);
    let x2152: BytePoly_32 = bigint_nondet_rem!(ctx, x2150, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2151, x1, 66), x2152, 66),
            x2150,
            66
        ),
        276359,
        4,
    )?;
    let x2153: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x2146, x2152, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x2146, x2, 64),
        64
    );
    let x2154: BytePoly_34 = bigint_nondet_quot!(ctx, x2153, x1, 34);
    let x2155: BytePoly_32 = bigint_nondet_rem!(ctx, x2153, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2154, x1, 66), x2155, 66),
            x2153,
            66
        ),
        276359,
        4,
    )?;
    let x2156: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x2157: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x2156, 96), x1, 32);
    let x2158: BytePoly_64 = bigint_mul!(x3, x2157, 64);
    let x2159: BytePoly_64 = bigint_add!(x2158, x2158, 64);
    let x2160: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x2159, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2160, x1, 66), x2159, 66), x9, 66),
        276359,
        4,
    )?;
    let x2161: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2157, x2157, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x2162: BytePoly_34 = bigint_nondet_quot!(ctx, x2161, x1, 34);
    let x2163: BytePoly_32 = bigint_nondet_rem!(ctx, x2161, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2162, x1, 66), x2163, 66),
            x2161,
            66
        ),
        276359,
        4,
    )?;
    let x2164: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x2157, x2163, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x2157, x2, 64),
        64
    );
    let x2165: BytePoly_34 = bigint_nondet_quot!(ctx, x2164, x1, 34);
    let x2166: BytePoly_32 = bigint_nondet_rem!(ctx, x2164, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2165, x1, 66), x2166, 66),
            x2164,
            66
        ),
        276359,
        4,
    )?;
    let x2167: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x2168: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x2167, 96), x1, 32);
    let x2169: BytePoly_64 = bigint_mul!(x3, x2168, 64);
    let x2170: BytePoly_64 = bigint_add!(x2169, x2169, 64);
    let x2171: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x2170, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2171, x1, 66), x2170, 66), x9, 66),
        276359,
        4,
    )?;
    let x2172: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2168, x2168, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x2173: BytePoly_34 = bigint_nondet_quot!(ctx, x2172, x1, 34);
    let x2174: BytePoly_32 = bigint_nondet_rem!(ctx, x2172, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2173, x1, 66), x2174, 66),
            x2172,
            66
        ),
        276359,
        4,
    )?;
    let x2175: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x2168, x2174, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x2168, x2, 64),
        64
    );
    let x2176: BytePoly_34 = bigint_nondet_quot!(ctx, x2175, x1, 34);
    let x2177: BytePoly_32 = bigint_nondet_rem!(ctx, x2175, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2176, x1, 66), x2177, 66),
            x2175,
            66
        ),
        276359,
        4,
    )?;
    let x2178: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x2179: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x2178, 96), x1, 32);
    let x2180: BytePoly_64 = bigint_mul!(x3, x2179, 64);
    let x2181: BytePoly_64 = bigint_add!(x2180, x2180, 64);
    let x2182: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x2181, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2182, x1, 66), x2181, 66), x9, 66),
        276359,
        4,
    )?;
    let x2183: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2179, x2179, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x2184: BytePoly_34 = bigint_nondet_quot!(ctx, x2183, x1, 34);
    let x2185: BytePoly_32 = bigint_nondet_rem!(ctx, x2183, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2184, x1, 66), x2185, 66),
            x2183,
            66
        ),
        276359,
        4,
    )?;
    let x2186: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x2179, x2185, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x2179, x2, 64),
        64
    );
    let x2187: BytePoly_34 = bigint_nondet_quot!(ctx, x2186, x1, 34);
    let x2188: BytePoly_32 = bigint_nondet_rem!(ctx, x2186, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2187, x1, 66), x2188, 66),
            x2186,
            66
        ),
        276359,
        4,
    )?;
    let x2189: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x2190: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x2189, 96), x1, 32);
    let x2191: BytePoly_64 = bigint_mul!(x3, x2190, 64);
    let x2192: BytePoly_64 = bigint_add!(x2191, x2191, 64);
    let x2193: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x2192, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2193, x1, 66), x2192, 66), x9, 66),
        276359,
        4,
    )?;
    let x2194: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2190, x2190, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x2195: BytePoly_34 = bigint_nondet_quot!(ctx, x2194, x1, 34);
    let x2196: BytePoly_32 = bigint_nondet_rem!(ctx, x2194, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2195, x1, 66), x2196, 66),
            x2194,
            66
        ),
        276359,
        4,
    )?;
    let x2197: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x2190, x2196, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x2190, x2, 64),
        64
    );
    let x2198: BytePoly_34 = bigint_nondet_quot!(ctx, x2197, x1, 34);
    let x2199: BytePoly_32 = bigint_nondet_rem!(ctx, x2197, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2198, x1, 66), x2199, 66),
            x2197,
            66
        ),
        276359,
        4,
    )?;
    let x2200: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x2201: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x2200, 96), x1, 32);
    let x2202: BytePoly_64 = bigint_mul!(x3, x2201, 64);
    let x2203: BytePoly_64 = bigint_add!(x2202, x2202, 64);
    let x2204: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x2203, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2204, x1, 66), x2203, 66), x9, 66),
        276359,
        4,
    )?;
    let x2205: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2201, x2201, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x2206: BytePoly_34 = bigint_nondet_quot!(ctx, x2205, x1, 34);
    let x2207: BytePoly_32 = bigint_nondet_rem!(ctx, x2205, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2206, x1, 66), x2207, 66),
            x2205,
            66
        ),
        276359,
        4,
    )?;
    let x2208: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x2201, x2207, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x2201, x2, 64),
        64
    );
    let x2209: BytePoly_34 = bigint_nondet_quot!(ctx, x2208, x1, 34);
    let x2210: BytePoly_32 = bigint_nondet_rem!(ctx, x2208, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2209, x1, 66), x2210, 66),
            x2208,
            66
        ),
        276359,
        4,
    )?;
    let x2211: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x2212: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x2211, 96), x1, 32);
    let x2213: BytePoly_64 = bigint_mul!(x3, x2212, 64);
    let x2214: BytePoly_64 = bigint_add!(x2213, x2213, 64);
    let x2215: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x2214, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2215, x1, 66), x2214, 66), x9, 66),
        276359,
        4,
    )?;
    let x2216: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2212, x2212, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x2217: BytePoly_34 = bigint_nondet_quot!(ctx, x2216, x1, 34);
    let x2218: BytePoly_32 = bigint_nondet_rem!(ctx, x2216, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2217, x1, 66), x2218, 66),
            x2216,
            66
        ),
        276359,
        4,
    )?;
    let x2219: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x2212, x2218, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x2212, x2, 64),
        64
    );
    let x2220: BytePoly_34 = bigint_nondet_quot!(ctx, x2219, x1, 34);
    let x2221: BytePoly_32 = bigint_nondet_rem!(ctx, x2219, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2220, x1, 66), x2221, 66),
            x2219,
            66
        ),
        276359,
        4,
    )?;
    let x2222: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x2223: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x2222, 96), x1, 32);
    let x2224: BytePoly_64 = bigint_mul!(x3, x2223, 64);
    let x2225: BytePoly_64 = bigint_add!(x2224, x2224, 64);
    let x2226: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x2225, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2226, x1, 66), x2225, 66), x9, 66),
        276359,
        4,
    )?;
    let x2227: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2223, x2223, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x2228: BytePoly_34 = bigint_nondet_quot!(ctx, x2227, x1, 34);
    let x2229: BytePoly_32 = bigint_nondet_rem!(ctx, x2227, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2228, x1, 66), x2229, 66),
            x2227,
            66
        ),
        276359,
        4,
    )?;
    let x2230: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x2223, x2229, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x2223, x2, 64),
        64
    );
    let x2231: BytePoly_34 = bigint_nondet_quot!(ctx, x2230, x1, 34);
    let x2232: BytePoly_32 = bigint_nondet_rem!(ctx, x2230, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2231, x1, 66), x2232, 66),
            x2230,
            66
        ),
        276359,
        4,
    )?;
    let x2233: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x2234: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x2233, 96), x1, 32);
    let x2235: BytePoly_64 = bigint_mul!(x3, x2234, 64);
    let x2236: BytePoly_64 = bigint_add!(x2235, x2235, 64);
    let x2237: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x2236, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2237, x1, 66), x2236, 66), x9, 66),
        276359,
        4,
    )?;
    let x2238: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2234, x2234, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x2239: BytePoly_34 = bigint_nondet_quot!(ctx, x2238, x1, 34);
    let x2240: BytePoly_32 = bigint_nondet_rem!(ctx, x2238, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2239, x1, 66), x2240, 66),
            x2238,
            66
        ),
        276359,
        4,
    )?;
    let x2241: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x2234, x2240, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x2234, x2, 64),
        64
    );
    let x2242: BytePoly_34 = bigint_nondet_quot!(ctx, x2241, x1, 34);
    let x2243: BytePoly_32 = bigint_nondet_rem!(ctx, x2241, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2242, x1, 66), x2243, 66),
            x2241,
            66
        ),
        276359,
        4,
    )?;
    let x2244: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x2245: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x2244, 96), x1, 32);
    let x2246: BytePoly_64 = bigint_mul!(x3, x2245, 64);
    let x2247: BytePoly_64 = bigint_add!(x2246, x2246, 64);
    let x2248: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x2247, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2248, x1, 66), x2247, 66), x9, 66),
        276359,
        4,
    )?;
    let x2249: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2245, x2245, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x2250: BytePoly_34 = bigint_nondet_quot!(ctx, x2249, x1, 34);
    let x2251: BytePoly_32 = bigint_nondet_rem!(ctx, x2249, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2250, x1, 66), x2251, 66),
            x2249,
            66
        ),
        276359,
        4,
    )?;
    let x2252: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x2245, x2251, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x2245, x2, 64),
        64
    );
    let x2253: BytePoly_34 = bigint_nondet_quot!(ctx, x2252, x1, 34);
    let x2254: BytePoly_32 = bigint_nondet_rem!(ctx, x2252, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2253, x1, 66), x2254, 66),
            x2252,
            66
        ),
        276359,
        4,
    )?;
    let x2255: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x2256: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x2255, 96), x1, 32);
    let x2257: BytePoly_64 = bigint_mul!(x3, x2256, 64);
    let x2258: BytePoly_64 = bigint_add!(x2257, x2257, 64);
    let x2259: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x2258, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2259, x1, 66), x2258, 66), x9, 66),
        276359,
        4,
    )?;
    let x2260: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2256, x2256, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x2261: BytePoly_34 = bigint_nondet_quot!(ctx, x2260, x1, 34);
    let x2262: BytePoly_32 = bigint_nondet_rem!(ctx, x2260, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2261, x1, 66), x2262, 66),
            x2260,
            66
        ),
        276359,
        4,
    )?;
    let x2263: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x2256, x2262, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x2256, x2, 64),
        64
    );
    let x2264: BytePoly_34 = bigint_nondet_quot!(ctx, x2263, x1, 34);
    let x2265: BytePoly_32 = bigint_nondet_rem!(ctx, x2263, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2264, x1, 66), x2265, 66),
            x2263,
            66
        ),
        276359,
        4,
    )?;
    let x2266: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x2267: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x2266, 96), x1, 32);
    let x2268: BytePoly_64 = bigint_mul!(x3, x2267, 64);
    let x2269: BytePoly_64 = bigint_add!(x2268, x2268, 64);
    let x2270: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x2269, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2270, x1, 66), x2269, 66), x9, 66),
        276359,
        4,
    )?;
    let x2271: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2267, x2267, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x2272: BytePoly_34 = bigint_nondet_quot!(ctx, x2271, x1, 34);
    let x2273: BytePoly_32 = bigint_nondet_rem!(ctx, x2271, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2272, x1, 66), x2273, 66),
            x2271,
            66
        ),
        276359,
        4,
    )?;
    let x2274: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x2267, x2273, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x2267, x2, 64),
        64
    );
    let x2275: BytePoly_34 = bigint_nondet_quot!(ctx, x2274, x1, 34);
    let x2276: BytePoly_32 = bigint_nondet_rem!(ctx, x2274, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2275, x1, 66), x2276, 66),
            x2274,
            66
        ),
        276359,
        4,
    )?;
    let x2277: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x2278: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x2277, 96), x1, 32);
    let x2279: BytePoly_64 = bigint_mul!(x3, x2278, 64);
    let x2280: BytePoly_64 = bigint_add!(x2279, x2279, 64);
    let x2281: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x2280, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2281, x1, 66), x2280, 66), x9, 66),
        276359,
        4,
    )?;
    let x2282: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2278, x2278, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x2283: BytePoly_34 = bigint_nondet_quot!(ctx, x2282, x1, 34);
    let x2284: BytePoly_32 = bigint_nondet_rem!(ctx, x2282, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2283, x1, 66), x2284, 66),
            x2282,
            66
        ),
        276359,
        4,
    )?;
    let x2285: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x2278, x2284, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x2278, x2, 64),
        64
    );
    let x2286: BytePoly_34 = bigint_nondet_quot!(ctx, x2285, x1, 34);
    let x2287: BytePoly_32 = bigint_nondet_rem!(ctx, x2285, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2286, x1, 66), x2287, 66),
            x2285,
            66
        ),
        276359,
        4,
    )?;
    let x2288: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x2289: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x2288, 96), x1, 32);
    let x2290: BytePoly_64 = bigint_mul!(x3, x2289, 64);
    let x2291: BytePoly_64 = bigint_add!(x2290, x2290, 64);
    let x2292: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x2291, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2292, x1, 66), x2291, 66), x9, 66),
        276359,
        4,
    )?;
    let x2293: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2289, x2289, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x2294: BytePoly_34 = bigint_nondet_quot!(ctx, x2293, x1, 34);
    let x2295: BytePoly_32 = bigint_nondet_rem!(ctx, x2293, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2294, x1, 66), x2295, 66),
            x2293,
            66
        ),
        276359,
        4,
    )?;
    let x2296: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x2289, x2295, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x2289, x2, 64),
        64
    );
    let x2297: BytePoly_34 = bigint_nondet_quot!(ctx, x2296, x1, 34);
    let x2298: BytePoly_32 = bigint_nondet_rem!(ctx, x2296, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2297, x1, 66), x2298, 66),
            x2296,
            66
        ),
        276359,
        4,
    )?;
    let x2299: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x2300: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x2299, 96), x1, 32);
    let x2301: BytePoly_64 = bigint_mul!(x3, x2300, 64);
    let x2302: BytePoly_64 = bigint_add!(x2301, x2301, 64);
    let x2303: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x2302, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2303, x1, 66), x2302, 66), x9, 66),
        276359,
        4,
    )?;
    let x2304: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2300, x2300, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x2305: BytePoly_34 = bigint_nondet_quot!(ctx, x2304, x1, 34);
    let x2306: BytePoly_32 = bigint_nondet_rem!(ctx, x2304, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2305, x1, 66), x2306, 66),
            x2304,
            66
        ),
        276359,
        4,
    )?;
    let x2307: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x2300, x2306, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x2300, x2, 64),
        64
    );
    let x2308: BytePoly_34 = bigint_nondet_quot!(ctx, x2307, x1, 34);
    let x2309: BytePoly_32 = bigint_nondet_rem!(ctx, x2307, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2308, x1, 66), x2309, 66),
            x2307,
            66
        ),
        276359,
        4,
    )?;
    let x2310: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x2311: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x2310, 96), x1, 32);
    let x2312: BytePoly_64 = bigint_mul!(x3, x2311, 64);
    let x2313: BytePoly_64 = bigint_add!(x2312, x2312, 64);
    let x2314: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x2313, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2314, x1, 66), x2313, 66), x9, 66),
        276359,
        4,
    )?;
    let x2315: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2311, x2311, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x2316: BytePoly_34 = bigint_nondet_quot!(ctx, x2315, x1, 34);
    let x2317: BytePoly_32 = bigint_nondet_rem!(ctx, x2315, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2316, x1, 66), x2317, 66),
            x2315,
            66
        ),
        276359,
        4,
    )?;
    let x2318: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x2311, x2317, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x2311, x2, 64),
        64
    );
    let x2319: BytePoly_34 = bigint_nondet_quot!(ctx, x2318, x1, 34);
    let x2320: BytePoly_32 = bigint_nondet_rem!(ctx, x2318, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2319, x1, 66), x2320, 66),
            x2318,
            66
        ),
        276359,
        4,
    )?;
    let x2321: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x2322: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x2321, 96), x1, 32);
    let x2323: BytePoly_64 = bigint_mul!(x3, x2322, 64);
    let x2324: BytePoly_64 = bigint_add!(x2323, x2323, 64);
    let x2325: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x2324, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2325, x1, 66), x2324, 66), x9, 66),
        276359,
        4,
    )?;
    let x2326: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2322, x2322, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x2327: BytePoly_34 = bigint_nondet_quot!(ctx, x2326, x1, 34);
    let x2328: BytePoly_32 = bigint_nondet_rem!(ctx, x2326, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2327, x1, 66), x2328, 66),
            x2326,
            66
        ),
        276359,
        4,
    )?;
    let x2329: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x2322, x2328, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x2322, x2, 64),
        64
    );
    let x2330: BytePoly_34 = bigint_nondet_quot!(ctx, x2329, x1, 34);
    let x2331: BytePoly_32 = bigint_nondet_rem!(ctx, x2329, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2330, x1, 66), x2331, 66),
            x2329,
            66
        ),
        276359,
        4,
    )?;
    let x2332: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x2333: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x2332, 96), x1, 32);
    let x2334: BytePoly_64 = bigint_mul!(x3, x2333, 64);
    let x2335: BytePoly_64 = bigint_add!(x2334, x2334, 64);
    let x2336: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x2335, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2336, x1, 66), x2335, 66), x9, 66),
        276359,
        4,
    )?;
    let x2337: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2333, x2333, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x2338: BytePoly_34 = bigint_nondet_quot!(ctx, x2337, x1, 34);
    let x2339: BytePoly_32 = bigint_nondet_rem!(ctx, x2337, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2338, x1, 66), x2339, 66),
            x2337,
            66
        ),
        276359,
        4,
    )?;
    let x2340: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x2333, x2339, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x2333, x2, 64),
        64
    );
    let x2341: BytePoly_34 = bigint_nondet_quot!(ctx, x2340, x1, 34);
    let x2342: BytePoly_32 = bigint_nondet_rem!(ctx, x2340, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2341, x1, 66), x2342, 66),
            x2340,
            66
        ),
        276359,
        4,
    )?;
    let x2343: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x2344: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x2343, 96), x1, 32);
    let x2345: BytePoly_64 = bigint_mul!(x3, x2344, 64);
    let x2346: BytePoly_64 = bigint_add!(x2345, x2345, 64);
    let x2347: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x2346, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2347, x1, 66), x2346, 66), x9, 66),
        276359,
        4,
    )?;
    let x2348: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2344, x2344, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x2349: BytePoly_34 = bigint_nondet_quot!(ctx, x2348, x1, 34);
    let x2350: BytePoly_32 = bigint_nondet_rem!(ctx, x2348, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2349, x1, 66), x2350, 66),
            x2348,
            66
        ),
        276359,
        4,
    )?;
    let x2351: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x2344, x2350, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x2344, x2, 64),
        64
    );
    let x2352: BytePoly_34 = bigint_nondet_quot!(ctx, x2351, x1, 34);
    let x2353: BytePoly_32 = bigint_nondet_rem!(ctx, x2351, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2352, x1, 66), x2353, 66),
            x2351,
            66
        ),
        276359,
        4,
    )?;
    let x2354: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x2355: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x2354, 96), x1, 32);
    let x2356: BytePoly_64 = bigint_mul!(x3, x2355, 64);
    let x2357: BytePoly_64 = bigint_add!(x2356, x2356, 64);
    let x2358: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x2357, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2358, x1, 66), x2357, 66), x9, 66),
        276359,
        4,
    )?;
    let x2359: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2355, x2355, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x2360: BytePoly_34 = bigint_nondet_quot!(ctx, x2359, x1, 34);
    let x2361: BytePoly_32 = bigint_nondet_rem!(ctx, x2359, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2360, x1, 66), x2361, 66),
            x2359,
            66
        ),
        276359,
        4,
    )?;
    let x2362: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x2355, x2361, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x2355, x2, 64),
        64
    );
    let x2363: BytePoly_34 = bigint_nondet_quot!(ctx, x2362, x1, 34);
    let x2364: BytePoly_32 = bigint_nondet_rem!(ctx, x2362, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2363, x1, 66), x2364, 66),
            x2362,
            66
        ),
        276359,
        4,
    )?;
    let x2365: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x2366: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x2365, 96), x1, 32);
    let x2367: BytePoly_64 = bigint_mul!(x3, x2366, 64);
    let x2368: BytePoly_64 = bigint_add!(x2367, x2367, 64);
    let x2369: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x2368, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2369, x1, 66), x2368, 66), x9, 66),
        276359,
        4,
    )?;
    let x2370: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2366, x2366, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x2371: BytePoly_34 = bigint_nondet_quot!(ctx, x2370, x1, 34);
    let x2372: BytePoly_32 = bigint_nondet_rem!(ctx, x2370, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2371, x1, 66), x2372, 66),
            x2370,
            66
        ),
        276359,
        4,
    )?;
    let x2373: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x2366, x2372, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x2366, x2, 64),
        64
    );
    let x2374: BytePoly_34 = bigint_nondet_quot!(ctx, x2373, x1, 34);
    let x2375: BytePoly_32 = bigint_nondet_rem!(ctx, x2373, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2374, x1, 66), x2375, 66),
            x2373,
            66
        ),
        276359,
        4,
    )?;
    let x2376: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x2377: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x2376, 96), x1, 32);
    let x2378: BytePoly_64 = bigint_mul!(x3, x2377, 64);
    let x2379: BytePoly_64 = bigint_add!(x2378, x2378, 64);
    let x2380: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x2379, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2380, x1, 66), x2379, 66), x9, 66),
        276359,
        4,
    )?;
    let x2381: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2377, x2377, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x2382: BytePoly_34 = bigint_nondet_quot!(ctx, x2381, x1, 34);
    let x2383: BytePoly_32 = bigint_nondet_rem!(ctx, x2381, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2382, x1, 66), x2383, 66),
            x2381,
            66
        ),
        276359,
        4,
    )?;
    let x2384: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x2377, x2383, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x2377, x2, 64),
        64
    );
    let x2385: BytePoly_34 = bigint_nondet_quot!(ctx, x2384, x1, 34);
    let x2386: BytePoly_32 = bigint_nondet_rem!(ctx, x2384, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2385, x1, 66), x2386, 66),
            x2384,
            66
        ),
        276359,
        4,
    )?;
    let x2387: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x2388: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x2387, 96), x1, 32);
    let x2389: BytePoly_64 = bigint_mul!(x3, x2388, 64);
    let x2390: BytePoly_64 = bigint_add!(x2389, x2389, 64);
    let x2391: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x2390, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2391, x1, 66), x2390, 66), x9, 66),
        276359,
        4,
    )?;
    let x2392: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2388, x2388, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x2393: BytePoly_34 = bigint_nondet_quot!(ctx, x2392, x1, 34);
    let x2394: BytePoly_32 = bigint_nondet_rem!(ctx, x2392, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2393, x1, 66), x2394, 66),
            x2392,
            66
        ),
        276359,
        4,
    )?;
    let x2395: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x2388, x2394, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x2388, x2, 64),
        64
    );
    let x2396: BytePoly_34 = bigint_nondet_quot!(ctx, x2395, x1, 34);
    let x2397: BytePoly_32 = bigint_nondet_rem!(ctx, x2395, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2396, x1, 66), x2397, 66),
            x2395,
            66
        ),
        276359,
        4,
    )?;
    let x2398: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x2399: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x2398, 96), x1, 32);
    let x2400: BytePoly_64 = bigint_mul!(x3, x2399, 64);
    let x2401: BytePoly_64 = bigint_add!(x2400, x2400, 64);
    let x2402: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x2401, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2402, x1, 66), x2401, 66), x9, 66),
        276359,
        4,
    )?;
    let x2403: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2399, x2399, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x2404: BytePoly_34 = bigint_nondet_quot!(ctx, x2403, x1, 34);
    let x2405: BytePoly_32 = bigint_nondet_rem!(ctx, x2403, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2404, x1, 66), x2405, 66),
            x2403,
            66
        ),
        276359,
        4,
    )?;
    let x2406: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x2399, x2405, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x2399, x2, 64),
        64
    );
    let x2407: BytePoly_34 = bigint_nondet_quot!(ctx, x2406, x1, 34);
    let x2408: BytePoly_32 = bigint_nondet_rem!(ctx, x2406, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2407, x1, 66), x2408, 66),
            x2406,
            66
        ),
        276359,
        4,
    )?;
    let x2409: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x2410: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x2409, 96), x1, 32);
    let x2411: BytePoly_64 = bigint_mul!(x3, x2410, 64);
    let x2412: BytePoly_64 = bigint_add!(x2411, x2411, 64);
    let x2413: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x2412, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2413, x1, 66), x2412, 66), x9, 66),
        276359,
        4,
    )?;
    let x2414: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2410, x2410, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x2415: BytePoly_34 = bigint_nondet_quot!(ctx, x2414, x1, 34);
    let x2416: BytePoly_32 = bigint_nondet_rem!(ctx, x2414, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2415, x1, 66), x2416, 66),
            x2414,
            66
        ),
        276359,
        4,
    )?;
    let x2417: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x2410, x2416, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x2410, x2, 64),
        64
    );
    let x2418: BytePoly_34 = bigint_nondet_quot!(ctx, x2417, x1, 34);
    let x2419: BytePoly_32 = bigint_nondet_rem!(ctx, x2417, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2418, x1, 66), x2419, 66),
            x2417,
            66
        ),
        276359,
        4,
    )?;
    let x2420: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x2421: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x2420, 96), x1, 32);
    let x2422: BytePoly_64 = bigint_mul!(x3, x2421, 64);
    let x2423: BytePoly_64 = bigint_add!(x2422, x2422, 64);
    let x2424: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x2423, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2424, x1, 66), x2423, 66), x9, 66),
        276359,
        4,
    )?;
    let x2425: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2421, x2421, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x2426: BytePoly_34 = bigint_nondet_quot!(ctx, x2425, x1, 34);
    let x2427: BytePoly_32 = bigint_nondet_rem!(ctx, x2425, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2426, x1, 66), x2427, 66),
            x2425,
            66
        ),
        276359,
        4,
    )?;
    let x2428: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x2421, x2427, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x2421, x2, 64),
        64
    );
    let x2429: BytePoly_34 = bigint_nondet_quot!(ctx, x2428, x1, 34);
    let x2430: BytePoly_32 = bigint_nondet_rem!(ctx, x2428, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2429, x1, 66), x2430, 66),
            x2428,
            66
        ),
        276359,
        4,
    )?;
    let x2431: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x2432: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x2431, 96), x1, 32);
    let x2433: BytePoly_64 = bigint_mul!(x3, x2432, 64);
    let x2434: BytePoly_64 = bigint_add!(x2433, x2433, 64);
    let x2435: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x2434, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2435, x1, 66), x2434, 66), x9, 66),
        276359,
        4,
    )?;
    let x2436: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2432, x2432, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x2437: BytePoly_34 = bigint_nondet_quot!(ctx, x2436, x1, 34);
    let x2438: BytePoly_32 = bigint_nondet_rem!(ctx, x2436, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2437, x1, 66), x2438, 66),
            x2436,
            66
        ),
        276359,
        4,
    )?;
    let x2439: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x2432, x2438, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x2432, x2, 64),
        64
    );
    let x2440: BytePoly_34 = bigint_nondet_quot!(ctx, x2439, x1, 34);
    let x2441: BytePoly_32 = bigint_nondet_rem!(ctx, x2439, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2440, x1, 66), x2441, 66),
            x2439,
            66
        ),
        276359,
        4,
    )?;
    let x2442: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x2443: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x2442, 96), x1, 32);
    let x2444: BytePoly_64 = bigint_mul!(x3, x2443, 64);
    let x2445: BytePoly_64 = bigint_add!(x2444, x2444, 64);
    let x2446: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x2445, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2446, x1, 66), x2445, 66), x9, 66),
        276359,
        4,
    )?;
    let x2447: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2443, x2443, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x2448: BytePoly_34 = bigint_nondet_quot!(ctx, x2447, x1, 34);
    let x2449: BytePoly_32 = bigint_nondet_rem!(ctx, x2447, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2448, x1, 66), x2449, 66),
            x2447,
            66
        ),
        276359,
        4,
    )?;
    let x2450: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x2443, x2449, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x2443, x2, 64),
        64
    );
    let x2451: BytePoly_34 = bigint_nondet_quot!(ctx, x2450, x1, 34);
    let x2452: BytePoly_32 = bigint_nondet_rem!(ctx, x2450, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2451, x1, 66), x2452, 66),
            x2450,
            66
        ),
        276359,
        4,
    )?;
    let x2453: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x2454: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x2453, 96), x1, 32);
    let x2455: BytePoly_64 = bigint_mul!(x3, x2454, 64);
    let x2456: BytePoly_64 = bigint_add!(x2455, x2455, 64);
    let x2457: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x2456, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2457, x1, 66), x2456, 66), x9, 66),
        276359,
        4,
    )?;
    let x2458: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2454, x2454, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x2459: BytePoly_34 = bigint_nondet_quot!(ctx, x2458, x1, 34);
    let x2460: BytePoly_32 = bigint_nondet_rem!(ctx, x2458, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2459, x1, 66), x2460, 66),
            x2458,
            66
        ),
        276359,
        4,
    )?;
    let x2461: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x2454, x2460, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x2454, x2, 64),
        64
    );
    let x2462: BytePoly_34 = bigint_nondet_quot!(ctx, x2461, x1, 34);
    let x2463: BytePoly_32 = bigint_nondet_rem!(ctx, x2461, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2462, x1, 66), x2463, 66),
            x2461,
            66
        ),
        276359,
        4,
    )?;
    let x2464: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x2465: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x2464, 96), x1, 32);
    let x2466: BytePoly_64 = bigint_mul!(x3, x2465, 64);
    let x2467: BytePoly_64 = bigint_add!(x2466, x2466, 64);
    let x2468: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x2467, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2468, x1, 66), x2467, 66), x9, 66),
        276359,
        4,
    )?;
    let x2469: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2465, x2465, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x2470: BytePoly_34 = bigint_nondet_quot!(ctx, x2469, x1, 34);
    let x2471: BytePoly_32 = bigint_nondet_rem!(ctx, x2469, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2470, x1, 66), x2471, 66),
            x2469,
            66
        ),
        276359,
        4,
    )?;
    let x2472: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x2465, x2471, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x2465, x2, 64),
        64
    );
    let x2473: BytePoly_34 = bigint_nondet_quot!(ctx, x2472, x1, 34);
    let x2474: BytePoly_32 = bigint_nondet_rem!(ctx, x2472, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2473, x1, 66), x2474, 66),
            x2472,
            66
        ),
        276359,
        4,
    )?;
    let x2475: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x2476: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x2475, 96), x1, 32);
    let x2477: BytePoly_64 = bigint_mul!(x3, x2476, 64);
    let x2478: BytePoly_64 = bigint_add!(x2477, x2477, 64);
    let x2479: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x2478, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2479, x1, 66), x2478, 66), x9, 66),
        276359,
        4,
    )?;
    let x2480: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2476, x2476, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x2481: BytePoly_34 = bigint_nondet_quot!(ctx, x2480, x1, 34);
    let x2482: BytePoly_32 = bigint_nondet_rem!(ctx, x2480, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2481, x1, 66), x2482, 66),
            x2480,
            66
        ),
        276359,
        4,
    )?;
    let x2483: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x2476, x2482, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x2476, x2, 64),
        64
    );
    let x2484: BytePoly_34 = bigint_nondet_quot!(ctx, x2483, x1, 34);
    let x2485: BytePoly_32 = bigint_nondet_rem!(ctx, x2483, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2484, x1, 66), x2485, 66),
            x2483,
            66
        ),
        276359,
        4,
    )?;
    let x2486: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x2487: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x2486, 96), x1, 32);
    let x2488: BytePoly_64 = bigint_mul!(x3, x2487, 64);
    let x2489: BytePoly_64 = bigint_add!(x2488, x2488, 64);
    let x2490: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x2489, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2490, x1, 66), x2489, 66), x9, 66),
        276359,
        4,
    )?;
    let x2491: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2487, x2487, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x2492: BytePoly_34 = bigint_nondet_quot!(ctx, x2491, x1, 34);
    let x2493: BytePoly_32 = bigint_nondet_rem!(ctx, x2491, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2492, x1, 66), x2493, 66),
            x2491,
            66
        ),
        276359,
        4,
    )?;
    let x2494: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x2487, x2493, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x2487, x2, 64),
        64
    );
    let x2495: BytePoly_34 = bigint_nondet_quot!(ctx, x2494, x1, 34);
    let x2496: BytePoly_32 = bigint_nondet_rem!(ctx, x2494, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2495, x1, 66), x2496, 66),
            x2494,
            66
        ),
        276359,
        4,
    )?;
    let x2497: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x2498: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x2497, 96), x1, 32);
    let x2499: BytePoly_64 = bigint_mul!(x3, x2498, 64);
    let x2500: BytePoly_64 = bigint_add!(x2499, x2499, 64);
    let x2501: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x2500, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2501, x1, 66), x2500, 66), x9, 66),
        276359,
        4,
    )?;
    let x2502: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2498, x2498, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x2503: BytePoly_34 = bigint_nondet_quot!(ctx, x2502, x1, 34);
    let x2504: BytePoly_32 = bigint_nondet_rem!(ctx, x2502, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2503, x1, 66), x2504, 66),
            x2502,
            66
        ),
        276359,
        4,
    )?;
    let x2505: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x2498, x2504, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x2498, x2, 64),
        64
    );
    let x2506: BytePoly_34 = bigint_nondet_quot!(ctx, x2505, x1, 34);
    let x2507: BytePoly_32 = bigint_nondet_rem!(ctx, x2505, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2506, x1, 66), x2507, 66),
            x2505,
            66
        ),
        276359,
        4,
    )?;
    let x2508: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x2509: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x2508, 96), x1, 32);
    let x2510: BytePoly_64 = bigint_mul!(x3, x2509, 64);
    let x2511: BytePoly_64 = bigint_add!(x2510, x2510, 64);
    let x2512: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x2511, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2512, x1, 66), x2511, 66), x9, 66),
        276359,
        4,
    )?;
    let x2513: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2509, x2509, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x2514: BytePoly_34 = bigint_nondet_quot!(ctx, x2513, x1, 34);
    let x2515: BytePoly_32 = bigint_nondet_rem!(ctx, x2513, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2514, x1, 66), x2515, 66),
            x2513,
            66
        ),
        276359,
        4,
    )?;
    let x2516: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x2509, x2515, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x2509, x2, 64),
        64
    );
    let x2517: BytePoly_34 = bigint_nondet_quot!(ctx, x2516, x1, 34);
    let x2518: BytePoly_32 = bigint_nondet_rem!(ctx, x2516, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2517, x1, 66), x2518, 66),
            x2516,
            66
        ),
        276359,
        4,
    )?;
    let x2519: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x2520: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x2519, 96), x1, 32);
    let x2521: BytePoly_64 = bigint_mul!(x3, x2520, 64);
    let x2522: BytePoly_64 = bigint_add!(x2521, x2521, 64);
    let x2523: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x2522, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2523, x1, 66), x2522, 66), x9, 66),
        276359,
        4,
    )?;
    let x2524: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2520, x2520, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x2525: BytePoly_34 = bigint_nondet_quot!(ctx, x2524, x1, 34);
    let x2526: BytePoly_32 = bigint_nondet_rem!(ctx, x2524, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2525, x1, 66), x2526, 66),
            x2524,
            66
        ),
        276359,
        4,
    )?;
    let x2527: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x2520, x2526, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x2520, x2, 64),
        64
    );
    let x2528: BytePoly_34 = bigint_nondet_quot!(ctx, x2527, x1, 34);
    let x2529: BytePoly_32 = bigint_nondet_rem!(ctx, x2527, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2528, x1, 66), x2529, 66),
            x2527,
            66
        ),
        276359,
        4,
    )?;
    let x2530: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x2531: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x2530, 96), x1, 32);
    let x2532: BytePoly_64 = bigint_mul!(x3, x2531, 64);
    let x2533: BytePoly_64 = bigint_add!(x2532, x2532, 64);
    let x2534: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x2533, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2534, x1, 66), x2533, 66), x9, 66),
        276359,
        4,
    )?;
    let x2535: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2531, x2531, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x2536: BytePoly_34 = bigint_nondet_quot!(ctx, x2535, x1, 34);
    let x2537: BytePoly_32 = bigint_nondet_rem!(ctx, x2535, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2536, x1, 66), x2537, 66),
            x2535,
            66
        ),
        276359,
        4,
    )?;
    let x2538: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x2531, x2537, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x2531, x2, 64),
        64
    );
    let x2539: BytePoly_34 = bigint_nondet_quot!(ctx, x2538, x1, 34);
    let x2540: BytePoly_32 = bigint_nondet_rem!(ctx, x2538, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2539, x1, 66), x2540, 66),
            x2538,
            66
        ),
        276359,
        4,
    )?;
    let x2541: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x2542: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x2541, 96), x1, 32);
    let x2543: BytePoly_64 = bigint_mul!(x3, x2542, 64);
    let x2544: BytePoly_64 = bigint_add!(x2543, x2543, 64);
    let x2545: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x2544, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2545, x1, 66), x2544, 66), x9, 66),
        276359,
        4,
    )?;
    let x2546: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2542, x2542, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x2547: BytePoly_34 = bigint_nondet_quot!(ctx, x2546, x1, 34);
    let x2548: BytePoly_32 = bigint_nondet_rem!(ctx, x2546, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2547, x1, 66), x2548, 66),
            x2546,
            66
        ),
        276359,
        4,
    )?;
    let x2549: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x2542, x2548, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x2542, x2, 64),
        64
    );
    let x2550: BytePoly_34 = bigint_nondet_quot!(ctx, x2549, x1, 34);
    let x2551: BytePoly_32 = bigint_nondet_rem!(ctx, x2549, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2550, x1, 66), x2551, 66),
            x2549,
            66
        ),
        276359,
        4,
    )?;
    let x2552: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x2553: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x2552, 96), x1, 32);
    let x2554: BytePoly_64 = bigint_mul!(x3, x2553, 64);
    let x2555: BytePoly_64 = bigint_add!(x2554, x2554, 64);
    let x2556: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x2555, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2556, x1, 66), x2555, 66), x9, 66),
        276359,
        4,
    )?;
    let x2557: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2553, x2553, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x2558: BytePoly_34 = bigint_nondet_quot!(ctx, x2557, x1, 34);
    let x2559: BytePoly_32 = bigint_nondet_rem!(ctx, x2557, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2558, x1, 66), x2559, 66),
            x2557,
            66
        ),
        276359,
        4,
    )?;
    let x2560: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x2553, x2559, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x2553, x2, 64),
        64
    );
    let x2561: BytePoly_34 = bigint_nondet_quot!(ctx, x2560, x1, 34);
    let x2562: BytePoly_32 = bigint_nondet_rem!(ctx, x2560, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2561, x1, 66), x2562, 66),
            x2560,
            66
        ),
        276359,
        4,
    )?;
    let x2563: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x2564: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x2563, 96), x1, 32);
    let x2565: BytePoly_64 = bigint_mul!(x3, x2564, 64);
    let x2566: BytePoly_64 = bigint_add!(x2565, x2565, 64);
    let x2567: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x2566, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2567, x1, 66), x2566, 66), x9, 66),
        276359,
        4,
    )?;
    let x2568: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2564, x2564, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x2569: BytePoly_34 = bigint_nondet_quot!(ctx, x2568, x1, 34);
    let x2570: BytePoly_32 = bigint_nondet_rem!(ctx, x2568, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2569, x1, 66), x2570, 66),
            x2568,
            66
        ),
        276359,
        4,
    )?;
    let x2571: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x2564, x2570, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x2564, x2, 64),
        64
    );
    let x2572: BytePoly_34 = bigint_nondet_quot!(ctx, x2571, x1, 34);
    let x2573: BytePoly_32 = bigint_nondet_rem!(ctx, x2571, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2572, x1, 66), x2573, 66),
            x2571,
            66
        ),
        276359,
        4,
    )?;
    let x2574: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x2575: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x2574, 96), x1, 32);
    let x2576: BytePoly_64 = bigint_mul!(x3, x2575, 64);
    let x2577: BytePoly_64 = bigint_add!(x2576, x2576, 64);
    let x2578: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x2577, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2578, x1, 66), x2577, 66), x9, 66),
        276359,
        4,
    )?;
    let x2579: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2575, x2575, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x2580: BytePoly_34 = bigint_nondet_quot!(ctx, x2579, x1, 34);
    let x2581: BytePoly_32 = bigint_nondet_rem!(ctx, x2579, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2580, x1, 66), x2581, 66),
            x2579,
            66
        ),
        276359,
        4,
    )?;
    let x2582: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x2575, x2581, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x2575, x2, 64),
        64
    );
    let x2583: BytePoly_34 = bigint_nondet_quot!(ctx, x2582, x1, 34);
    let x2584: BytePoly_32 = bigint_nondet_rem!(ctx, x2582, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2583, x1, 66), x2584, 66),
            x2582,
            66
        ),
        276359,
        4,
    )?;
    let x2585: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x2586: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x2585, 96), x1, 32);
    let x2587: BytePoly_64 = bigint_mul!(x3, x2586, 64);
    let x2588: BytePoly_64 = bigint_add!(x2587, x2587, 64);
    let x2589: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x2588, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2589, x1, 66), x2588, 66), x9, 66),
        276359,
        4,
    )?;
    let x2590: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2586, x2586, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x2591: BytePoly_34 = bigint_nondet_quot!(ctx, x2590, x1, 34);
    let x2592: BytePoly_32 = bigint_nondet_rem!(ctx, x2590, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2591, x1, 66), x2592, 66),
            x2590,
            66
        ),
        276359,
        4,
    )?;
    let x2593: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x2586, x2592, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x2586, x2, 64),
        64
    );
    let x2594: BytePoly_34 = bigint_nondet_quot!(ctx, x2593, x1, 34);
    let x2595: BytePoly_32 = bigint_nondet_rem!(ctx, x2593, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2594, x1, 66), x2595, 66),
            x2593,
            66
        ),
        276359,
        4,
    )?;
    let x2596: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x2597: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x2596, 96), x1, 32);
    let x2598: BytePoly_64 = bigint_mul!(x3, x2597, 64);
    let x2599: BytePoly_64 = bigint_add!(x2598, x2598, 64);
    let x2600: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x2599, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2600, x1, 66), x2599, 66), x9, 66),
        276359,
        4,
    )?;
    let x2601: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2597, x2597, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x2602: BytePoly_34 = bigint_nondet_quot!(ctx, x2601, x1, 34);
    let x2603: BytePoly_32 = bigint_nondet_rem!(ctx, x2601, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2602, x1, 66), x2603, 66),
            x2601,
            66
        ),
        276359,
        4,
    )?;
    let x2604: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x2597, x2603, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x2597, x2, 64),
        64
    );
    let x2605: BytePoly_34 = bigint_nondet_quot!(ctx, x2604, x1, 34);
    let x2606: BytePoly_32 = bigint_nondet_rem!(ctx, x2604, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2605, x1, 66), x2606, 66),
            x2604,
            66
        ),
        276359,
        4,
    )?;
    let x2607: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x2608: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x2607, 96), x1, 32);
    let x2609: BytePoly_64 = bigint_mul!(x3, x2608, 64);
    let x2610: BytePoly_64 = bigint_add!(x2609, x2609, 64);
    let x2611: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x2610, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2611, x1, 66), x2610, 66), x9, 66),
        276359,
        4,
    )?;
    let x2612: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2608, x2608, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x2613: BytePoly_34 = bigint_nondet_quot!(ctx, x2612, x1, 34);
    let x2614: BytePoly_32 = bigint_nondet_rem!(ctx, x2612, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2613, x1, 66), x2614, 66),
            x2612,
            66
        ),
        276359,
        4,
    )?;
    let x2615: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x2608, x2614, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x2608, x2, 64),
        64
    );
    let x2616: BytePoly_34 = bigint_nondet_quot!(ctx, x2615, x1, 34);
    let x2617: BytePoly_32 = bigint_nondet_rem!(ctx, x2615, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2616, x1, 66), x2617, 66),
            x2615,
            66
        ),
        276359,
        4,
    )?;
    let x2618: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x2619: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x2618, 96), x1, 32);
    let x2620: BytePoly_64 = bigint_mul!(x3, x2619, 64);
    let x2621: BytePoly_64 = bigint_add!(x2620, x2620, 64);
    let x2622: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x2621, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2622, x1, 66), x2621, 66), x9, 66),
        276359,
        4,
    )?;
    let x2623: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2619, x2619, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x2624: BytePoly_34 = bigint_nondet_quot!(ctx, x2623, x1, 34);
    let x2625: BytePoly_32 = bigint_nondet_rem!(ctx, x2623, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2624, x1, 66), x2625, 66),
            x2623,
            66
        ),
        276359,
        4,
    )?;
    let x2626: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x2619, x2625, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x2619, x2, 64),
        64
    );
    let x2627: BytePoly_34 = bigint_nondet_quot!(ctx, x2626, x1, 34);
    let x2628: BytePoly_32 = bigint_nondet_rem!(ctx, x2626, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2627, x1, 66), x2628, 66),
            x2626,
            66
        ),
        276359,
        4,
    )?;
    let x2629: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x2630: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x2629, 96), x1, 32);
    let x2631: BytePoly_64 = bigint_mul!(x3, x2630, 64);
    let x2632: BytePoly_64 = bigint_add!(x2631, x2631, 64);
    let x2633: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x2632, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2633, x1, 66), x2632, 66), x9, 66),
        276359,
        4,
    )?;
    let x2634: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2630, x2630, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x2635: BytePoly_34 = bigint_nondet_quot!(ctx, x2634, x1, 34);
    let x2636: BytePoly_32 = bigint_nondet_rem!(ctx, x2634, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2635, x1, 66), x2636, 66),
            x2634,
            66
        ),
        276359,
        4,
    )?;
    let x2637: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x2630, x2636, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x2630, x2, 64),
        64
    );
    let x2638: BytePoly_34 = bigint_nondet_quot!(ctx, x2637, x1, 34);
    let x2639: BytePoly_32 = bigint_nondet_rem!(ctx, x2637, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2638, x1, 66), x2639, 66),
            x2637,
            66
        ),
        276359,
        4,
    )?;
    let x2640: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x2641: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x2640, 96), x1, 32);
    let x2642: BytePoly_64 = bigint_mul!(x3, x2641, 64);
    let x2643: BytePoly_64 = bigint_add!(x2642, x2642, 64);
    let x2644: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x2643, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2644, x1, 66), x2643, 66), x9, 66),
        276359,
        4,
    )?;
    let x2645: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2641, x2641, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x2646: BytePoly_34 = bigint_nondet_quot!(ctx, x2645, x1, 34);
    let x2647: BytePoly_32 = bigint_nondet_rem!(ctx, x2645, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2646, x1, 66), x2647, 66),
            x2645,
            66
        ),
        276359,
        4,
    )?;
    let x2648: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x2641, x2647, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x2641, x2, 64),
        64
    );
    let x2649: BytePoly_34 = bigint_nondet_quot!(ctx, x2648, x1, 34);
    let x2650: BytePoly_32 = bigint_nondet_rem!(ctx, x2648, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2649, x1, 66), x2650, 66),
            x2648,
            66
        ),
        276359,
        4,
    )?;
    let x2651: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x2652: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x2651, 96), x1, 32);
    let x2653: BytePoly_64 = bigint_mul!(x3, x2652, 64);
    let x2654: BytePoly_64 = bigint_add!(x2653, x2653, 64);
    let x2655: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x2654, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2655, x1, 66), x2654, 66), x9, 66),
        276359,
        4,
    )?;
    let x2656: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2652, x2652, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x2657: BytePoly_34 = bigint_nondet_quot!(ctx, x2656, x1, 34);
    let x2658: BytePoly_32 = bigint_nondet_rem!(ctx, x2656, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2657, x1, 66), x2658, 66),
            x2656,
            66
        ),
        276359,
        4,
    )?;
    let x2659: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x2652, x2658, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x2652, x2, 64),
        64
    );
    let x2660: BytePoly_34 = bigint_nondet_quot!(ctx, x2659, x1, 34);
    let x2661: BytePoly_32 = bigint_nondet_rem!(ctx, x2659, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2660, x1, 66), x2661, 66),
            x2659,
            66
        ),
        276359,
        4,
    )?;
    let x2662: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x2663: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x2662, 96), x1, 32);
    let x2664: BytePoly_64 = bigint_mul!(x3, x2663, 64);
    let x2665: BytePoly_64 = bigint_add!(x2664, x2664, 64);
    let x2666: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x2665, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2666, x1, 66), x2665, 66), x9, 66),
        276359,
        4,
    )?;
    let x2667: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2663, x2663, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x2668: BytePoly_34 = bigint_nondet_quot!(ctx, x2667, x1, 34);
    let x2669: BytePoly_32 = bigint_nondet_rem!(ctx, x2667, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2668, x1, 66), x2669, 66),
            x2667,
            66
        ),
        276359,
        4,
    )?;
    let x2670: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x2663, x2669, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x2663, x2, 64),
        64
    );
    let x2671: BytePoly_34 = bigint_nondet_quot!(ctx, x2670, x1, 34);
    let x2672: BytePoly_32 = bigint_nondet_rem!(ctx, x2670, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2671, x1, 66), x2672, 66),
            x2670,
            66
        ),
        276359,
        4,
    )?;
    let x2673: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x2674: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x2673, 96), x1, 32);
    let x2675: BytePoly_64 = bigint_mul!(x3, x2674, 64);
    let x2676: BytePoly_64 = bigint_add!(x2675, x2675, 64);
    let x2677: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x2676, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2677, x1, 66), x2676, 66), x9, 66),
        276359,
        4,
    )?;
    let x2678: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2674, x2674, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x2679: BytePoly_34 = bigint_nondet_quot!(ctx, x2678, x1, 34);
    let x2680: BytePoly_32 = bigint_nondet_rem!(ctx, x2678, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2679, x1, 66), x2680, 66),
            x2678,
            66
        ),
        276359,
        4,
    )?;
    let x2681: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x2674, x2680, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x2674, x2, 64),
        64
    );
    let x2682: BytePoly_34 = bigint_nondet_quot!(ctx, x2681, x1, 34);
    let x2683: BytePoly_32 = bigint_nondet_rem!(ctx, x2681, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2682, x1, 66), x2683, 66),
            x2681,
            66
        ),
        276359,
        4,
    )?;
    let x2684: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x2685: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x2684, 96), x1, 32);
    let x2686: BytePoly_64 = bigint_mul!(x3, x2685, 64);
    let x2687: BytePoly_64 = bigint_add!(x2686, x2686, 64);
    let x2688: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x2687, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2688, x1, 66), x2687, 66), x9, 66),
        276359,
        4,
    )?;
    let x2689: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2685, x2685, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x2690: BytePoly_34 = bigint_nondet_quot!(ctx, x2689, x1, 34);
    let x2691: BytePoly_32 = bigint_nondet_rem!(ctx, x2689, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2690, x1, 66), x2691, 66),
            x2689,
            66
        ),
        276359,
        4,
    )?;
    let x2692: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x2685, x2691, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x2685, x2, 64),
        64
    );
    let x2693: BytePoly_34 = bigint_nondet_quot!(ctx, x2692, x1, 34);
    let x2694: BytePoly_32 = bigint_nondet_rem!(ctx, x2692, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2693, x1, 66), x2694, 66),
            x2692,
            66
        ),
        276359,
        4,
    )?;
    let x2695: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x2696: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x2695, 96), x1, 32);
    let x2697: BytePoly_64 = bigint_mul!(x3, x2696, 64);
    let x2698: BytePoly_64 = bigint_add!(x2697, x2697, 64);
    let x2699: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x2698, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2699, x1, 66), x2698, 66), x9, 66),
        276359,
        4,
    )?;
    let x2700: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2696, x2696, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x2701: BytePoly_34 = bigint_nondet_quot!(ctx, x2700, x1, 34);
    let x2702: BytePoly_32 = bigint_nondet_rem!(ctx, x2700, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2701, x1, 66), x2702, 66),
            x2700,
            66
        ),
        276359,
        4,
    )?;
    let x2703: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x2696, x2702, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x2696, x2, 64),
        64
    );
    let x2704: BytePoly_34 = bigint_nondet_quot!(ctx, x2703, x1, 34);
    let x2705: BytePoly_32 = bigint_nondet_rem!(ctx, x2703, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2704, x1, 66), x2705, 66),
            x2703,
            66
        ),
        276359,
        4,
    )?;
    let x2706: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x2707: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x2706, 96), x1, 32);
    let x2708: BytePoly_64 = bigint_mul!(x3, x2707, 64);
    let x2709: BytePoly_64 = bigint_add!(x2708, x2708, 64);
    let x2710: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x2709, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2710, x1, 66), x2709, 66), x9, 66),
        276359,
        4,
    )?;
    let x2711: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2707, x2707, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x2712: BytePoly_34 = bigint_nondet_quot!(ctx, x2711, x1, 34);
    let x2713: BytePoly_32 = bigint_nondet_rem!(ctx, x2711, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2712, x1, 66), x2713, 66),
            x2711,
            66
        ),
        276359,
        4,
    )?;
    let x2714: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x2707, x2713, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x2707, x2, 64),
        64
    );
    let x2715: BytePoly_34 = bigint_nondet_quot!(ctx, x2714, x1, 34);
    let x2716: BytePoly_32 = bigint_nondet_rem!(ctx, x2714, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2715, x1, 66), x2716, 66),
            x2714,
            66
        ),
        276359,
        4,
    )?;
    let x2717: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x2718: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x2717, 96), x1, 32);
    let x2719: BytePoly_64 = bigint_mul!(x3, x2718, 64);
    let x2720: BytePoly_64 = bigint_add!(x2719, x2719, 64);
    let x2721: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x2720, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2721, x1, 66), x2720, 66), x9, 66),
        276359,
        4,
    )?;
    let x2722: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2718, x2718, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x2723: BytePoly_34 = bigint_nondet_quot!(ctx, x2722, x1, 34);
    let x2724: BytePoly_32 = bigint_nondet_rem!(ctx, x2722, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2723, x1, 66), x2724, 66),
            x2722,
            66
        ),
        276359,
        4,
    )?;
    let x2725: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x2718, x2724, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x2718, x2, 64),
        64
    );
    let x2726: BytePoly_34 = bigint_nondet_quot!(ctx, x2725, x1, 34);
    let x2727: BytePoly_32 = bigint_nondet_rem!(ctx, x2725, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2726, x1, 66), x2727, 66),
            x2725,
            66
        ),
        276359,
        4,
    )?;
    let x2728: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x2729: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x2728, 96), x1, 32);
    let x2730: BytePoly_64 = bigint_mul!(x3, x2729, 64);
    let x2731: BytePoly_64 = bigint_add!(x2730, x2730, 64);
    let x2732: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x2731, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2732, x1, 66), x2731, 66), x9, 66),
        276359,
        4,
    )?;
    let x2733: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2729, x2729, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x2734: BytePoly_34 = bigint_nondet_quot!(ctx, x2733, x1, 34);
    let x2735: BytePoly_32 = bigint_nondet_rem!(ctx, x2733, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2734, x1, 66), x2735, 66),
            x2733,
            66
        ),
        276359,
        4,
    )?;
    let x2736: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x2729, x2735, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x2729, x2, 64),
        64
    );
    let x2737: BytePoly_34 = bigint_nondet_quot!(ctx, x2736, x1, 34);
    let x2738: BytePoly_32 = bigint_nondet_rem!(ctx, x2736, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2737, x1, 66), x2738, 66),
            x2736,
            66
        ),
        276359,
        4,
    )?;
    let x2739: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x2740: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x2739, 96), x1, 32);
    let x2741: BytePoly_64 = bigint_mul!(x3, x2740, 64);
    let x2742: BytePoly_64 = bigint_add!(x2741, x2741, 64);
    let x2743: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x2742, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2743, x1, 66), x2742, 66), x9, 66),
        276359,
        4,
    )?;
    let x2744: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2740, x2740, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x2745: BytePoly_34 = bigint_nondet_quot!(ctx, x2744, x1, 34);
    let x2746: BytePoly_32 = bigint_nondet_rem!(ctx, x2744, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2745, x1, 66), x2746, 66),
            x2744,
            66
        ),
        276359,
        4,
    )?;
    let x2747: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x2740, x2746, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x2740, x2, 64),
        64
    );
    let x2748: BytePoly_34 = bigint_nondet_quot!(ctx, x2747, x1, 34);
    let x2749: BytePoly_32 = bigint_nondet_rem!(ctx, x2747, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2748, x1, 66), x2749, 66),
            x2747,
            66
        ),
        276359,
        4,
    )?;
    let x2750: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x2751: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x2750, 96), x1, 32);
    let x2752: BytePoly_64 = bigint_mul!(x3, x2751, 64);
    let x2753: BytePoly_64 = bigint_add!(x2752, x2752, 64);
    let x2754: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x2753, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2754, x1, 66), x2753, 66), x9, 66),
        276359,
        4,
    )?;
    let x2755: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2751, x2751, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x2756: BytePoly_34 = bigint_nondet_quot!(ctx, x2755, x1, 34);
    let x2757: BytePoly_32 = bigint_nondet_rem!(ctx, x2755, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2756, x1, 66), x2757, 66),
            x2755,
            66
        ),
        276359,
        4,
    )?;
    let x2758: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x2751, x2757, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x2751, x2, 64),
        64
    );
    let x2759: BytePoly_34 = bigint_nondet_quot!(ctx, x2758, x1, 34);
    let x2760: BytePoly_32 = bigint_nondet_rem!(ctx, x2758, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2759, x1, 66), x2760, 66),
            x2758,
            66
        ),
        276359,
        4,
    )?;
    let x2761: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x2762: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x2761, 96), x1, 32);
    let x2763: BytePoly_64 = bigint_mul!(x3, x2762, 64);
    let x2764: BytePoly_64 = bigint_add!(x2763, x2763, 64);
    let x2765: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x2764, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2765, x1, 66), x2764, 66), x9, 66),
        276359,
        4,
    )?;
    let x2766: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2762, x2762, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x2767: BytePoly_34 = bigint_nondet_quot!(ctx, x2766, x1, 34);
    let x2768: BytePoly_32 = bigint_nondet_rem!(ctx, x2766, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2767, x1, 66), x2768, 66),
            x2766,
            66
        ),
        276359,
        4,
    )?;
    let x2769: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x2762, x2768, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x2762, x2, 64),
        64
    );
    let x2770: BytePoly_34 = bigint_nondet_quot!(ctx, x2769, x1, 34);
    let x2771: BytePoly_32 = bigint_nondet_rem!(ctx, x2769, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2770, x1, 66), x2771, 66),
            x2769,
            66
        ),
        276359,
        4,
    )?;
    let x2772: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x2773: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x2772, 96), x1, 32);
    let x2774: BytePoly_64 = bigint_mul!(x3, x2773, 64);
    let x2775: BytePoly_64 = bigint_add!(x2774, x2774, 64);
    let x2776: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x2775, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2776, x1, 66), x2775, 66), x9, 66),
        276359,
        4,
    )?;
    let x2777: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2773, x2773, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x2778: BytePoly_34 = bigint_nondet_quot!(ctx, x2777, x1, 34);
    let x2779: BytePoly_32 = bigint_nondet_rem!(ctx, x2777, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2778, x1, 66), x2779, 66),
            x2777,
            66
        ),
        276359,
        4,
    )?;
    let x2780: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x2773, x2779, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x2773, x2, 64),
        64
    );
    let x2781: BytePoly_34 = bigint_nondet_quot!(ctx, x2780, x1, 34);
    let x2782: BytePoly_32 = bigint_nondet_rem!(ctx, x2780, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2781, x1, 66), x2782, 66),
            x2780,
            66
        ),
        276359,
        4,
    )?;
    let x2783: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x2784: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x2783, 96), x1, 32);
    let x2785: BytePoly_64 = bigint_mul!(x3, x2784, 64);
    let x2786: BytePoly_64 = bigint_add!(x2785, x2785, 64);
    let x2787: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x2786, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2787, x1, 66), x2786, 66), x9, 66),
        276359,
        4,
    )?;
    let x2788: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2784, x2784, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x2789: BytePoly_34 = bigint_nondet_quot!(ctx, x2788, x1, 34);
    let x2790: BytePoly_32 = bigint_nondet_rem!(ctx, x2788, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2789, x1, 66), x2790, 66),
            x2788,
            66
        ),
        276359,
        4,
    )?;
    let x2791: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x2784, x2790, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x2784, x2, 64),
        64
    );
    let x2792: BytePoly_34 = bigint_nondet_quot!(ctx, x2791, x1, 34);
    let x2793: BytePoly_32 = bigint_nondet_rem!(ctx, x2791, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2792, x1, 66), x2793, 66),
            x2791,
            66
        ),
        276359,
        4,
    )?;
    let x2794: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x2795: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x2794, 96), x1, 32);
    let x2796: BytePoly_64 = bigint_mul!(x3, x2795, 64);
    let x2797: BytePoly_64 = bigint_add!(x2796, x2796, 64);
    let x2798: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x2797, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2798, x1, 66), x2797, 66), x9, 66),
        276359,
        4,
    )?;
    let x2799: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2795, x2795, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x2800: BytePoly_34 = bigint_nondet_quot!(ctx, x2799, x1, 34);
    let x2801: BytePoly_32 = bigint_nondet_rem!(ctx, x2799, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2800, x1, 66), x2801, 66),
            x2799,
            66
        ),
        276359,
        4,
    )?;
    let x2802: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x2795, x2801, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x2795, x2, 64),
        64
    );
    let x2803: BytePoly_34 = bigint_nondet_quot!(ctx, x2802, x1, 34);
    let x2804: BytePoly_32 = bigint_nondet_rem!(ctx, x2802, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2803, x1, 66), x2804, 66),
            x2802,
            66
        ),
        276359,
        4,
    )?;
    let x2805: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x2806: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x2805, 96), x1, 32);
    let x2807: BytePoly_64 = bigint_mul!(x3, x2806, 64);
    let x2808: BytePoly_64 = bigint_add!(x2807, x2807, 64);
    let x2809: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x2808, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2809, x1, 66), x2808, 66), x9, 66),
        276359,
        4,
    )?;
    let x2810: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2806, x2806, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x2811: BytePoly_34 = bigint_nondet_quot!(ctx, x2810, x1, 34);
    let x2812: BytePoly_32 = bigint_nondet_rem!(ctx, x2810, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2811, x1, 66), x2812, 66),
            x2810,
            66
        ),
        276359,
        4,
    )?;
    let x2813: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x2806, x2812, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x2806, x2, 64),
        64
    );
    let x2814: BytePoly_34 = bigint_nondet_quot!(ctx, x2813, x1, 34);
    let x2815: BytePoly_32 = bigint_nondet_rem!(ctx, x2813, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2814, x1, 66), x2815, 66),
            x2813,
            66
        ),
        276359,
        4,
    )?;
    let x2816: BytePoly_32 = bigint_nondet_inv!(ctx, x10, x1, 32);
    let x2817: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x2816, 96), x1, 32);
    let x2818: BytePoly_64 = bigint_mul!(x3, x2817, 64);
    let x2819: BytePoly_64 = bigint_add!(x2818, x2818, 64);
    let x2820: BytePoly_34 = bigint_nondet_quot!(ctx, bigint_sub!(x9, x2819, 64), x1, 34);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2820, x1, 66), x2819, 66), x9, 66),
        276359,
        4,
    )?;
    let x2821: BytePoly_64 = bigint_sub!(
        bigint_sub!(
            bigint_add!(bigint_add!(bigint_mul!(x2817, x2817, 64), x1, 64), x1, 64),
            x2,
            64
        ),
        x2,
        64
    );
    let x2822: BytePoly_34 = bigint_nondet_quot!(ctx, x2821, x1, 34);
    let x2823: BytePoly_32 = bigint_nondet_rem!(ctx, x2821, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2822, x1, 66), x2823, 66),
            x2821,
            66
        ),
        276359,
        4,
    )?;
    let x2824: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(x8, bigint_mul!(x2817, x2823, 64), 64), x1, 64),
            x3,
            64
        ),
        bigint_mul!(x2817, x2, 64),
        64
    );
    let x2825: BytePoly_34 = bigint_nondet_quot!(ctx, x2824, x1, 34);
    let x2826: BytePoly_32 = bigint_nondet_rem!(ctx, x2824, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2825, x1, 66), x2826, 66),
            x2824,
            66
        ),
        276359,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x2823, x4, 32), 34, 1)?;
    eqz(ctx, &bigint_sub!(x2826, x5, 32), 34, 1)?;
    return Ok(());
}
bigint_program_info! {rsa_256_x1, /*iters=*/1,
bigint_witness_info!(/*bits=*/256, /*label=*/0, /*public=*/ true, /*min_bits=*/255),
bigint_witness_info!(/*bits=*/256, /*label=*/1, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/2, /*public=*/ true, /*min_bits=*/0)}
bigint_program_info! {rsa_256_x2, /*iters=*/2,
bigint_witness_info!(/*bits=*/256, /*label=*/0, /*public=*/ true, /*min_bits=*/255),
bigint_witness_info!(/*bits=*/256, /*label=*/1, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/2, /*public=*/ true, /*min_bits=*/0)}
bigint_program_info! {rsa_3072_x15, /*iters=*/15,
bigint_witness_info!(/*bits=*/3072, /*label=*/0, /*public=*/ true, /*min_bits=*/3071),
bigint_witness_info!(/*bits=*/3072, /*label=*/1, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/3072, /*label=*/2, /*public=*/ true, /*min_bits=*/0)}
bigint_program_info! {nondet_inv_test_8, /*iters=*/1,
bigint_witness_info!(/*bits=*/8, /*label=*/0, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/1, /*public=*/ true, /*min_bits=*/7),
bigint_witness_info!(/*bits=*/8, /*label=*/2, /*public=*/ true, /*min_bits=*/0)}
bigint_program_info! {const_add_test_8, /*iters=*/1,
bigint_witness_info!(/*bits=*/8, /*label=*/0, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/17, /*label=*/1, /*public=*/ true, /*min_bits=*/0)}
bigint_program_info! {const_add_alt_test_16, /*iters=*/1,
bigint_witness_info!(/*bits=*/16, /*label=*/0, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/17, /*label=*/1, /*public=*/ true, /*min_bits=*/0)}
bigint_program_info! {const_mul_test_8, /*iters=*/1,
bigint_witness_info!(/*bits=*/8, /*label=*/0, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/24, /*label=*/1, /*public=*/ true, /*min_bits=*/0)}
bigint_program_info! {add_test_8, /*iters=*/1,
bigint_witness_info!(/*bits=*/8, /*label=*/0, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/1, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/9, /*label=*/2, /*public=*/ true, /*min_bits=*/0)}
bigint_program_info! {add_test_16, /*iters=*/1,
bigint_witness_info!(/*bits=*/16, /*label=*/0, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/16, /*label=*/1, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/17, /*label=*/2, /*public=*/ true, /*min_bits=*/0)}
bigint_program_info! {add_test_128, /*iters=*/1,
bigint_witness_info!(/*bits=*/128, /*label=*/0, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/128, /*label=*/1, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/129, /*label=*/2, /*public=*/ true, /*min_bits=*/0)}
bigint_program_info! {const_one_test_8, /*iters=*/1,
bigint_witness_info!(/*bits=*/8, /*label=*/0, /*public=*/ true, /*min_bits=*/0)}
bigint_program_info! {const_twobyte_test_16, /*iters=*/1,
bigint_witness_info!(/*bits=*/16, /*label=*/0, /*public=*/ true, /*min_bits=*/0)}
bigint_program_info! {sub_test_8, /*iters=*/1,
bigint_witness_info!(/*bits=*/8, /*label=*/0, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/1, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/2, /*public=*/ true, /*min_bits=*/0)}
bigint_program_info! {sub_test_128, /*iters=*/1,
bigint_witness_info!(/*bits=*/128, /*label=*/0, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/128, /*label=*/1, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/128, /*label=*/2, /*public=*/ true, /*min_bits=*/0)}
bigint_program_info! {mul_test_8, /*iters=*/1,
bigint_witness_info!(/*bits=*/8, /*label=*/0, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/1, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/16, /*label=*/2, /*public=*/ true, /*min_bits=*/0)}
bigint_program_info! {mul_test_128, /*iters=*/1,
bigint_witness_info!(/*bits=*/128, /*label=*/0, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/128, /*label=*/1, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/2, /*public=*/ true, /*min_bits=*/0)}
bigint_program_info! {reduce_test_8, /*iters=*/1,
bigint_witness_info!(/*bits=*/8, /*label=*/0, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/1, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/2, /*public=*/ true, /*min_bits=*/0)}
bigint_program_info! {reduce_test_128, /*iters=*/1,
bigint_witness_info!(/*bits=*/128, /*label=*/0, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/128, /*label=*/1, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/128, /*label=*/2, /*public=*/ true, /*min_bits=*/0)}
bigint_program_info! {ecdsa_verify_8, /*iters=*/1,
bigint_witness_info!(/*bits=*/8, /*label=*/0, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/1, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/2, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/3, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/9, /*label=*/4, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/9, /*label=*/5, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/9, /*label=*/6, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/7, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/8, /*public=*/ true, /*min_bits=*/0)}
bigint_program_info! {ecdsa_verify_32, /*iters=*/1,
bigint_witness_info!(/*bits=*/32, /*label=*/0, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/32, /*label=*/1, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/32, /*label=*/2, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/32, /*label=*/3, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/33, /*label=*/4, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/33, /*label=*/5, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/33, /*label=*/6, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/32, /*label=*/7, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/32, /*label=*/8, /*public=*/ true, /*min_bits=*/0)}
bigint_program_info! {ec_aff_add_test_8, /*iters=*/1,
bigint_witness_info!(/*bits=*/8, /*label=*/0, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/1, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/2, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/3, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/4, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/5, /*public=*/ true, /*min_bits=*/0)}
bigint_program_info! {ec_aff_add_test_256, /*iters=*/1,
bigint_witness_info!(/*bits=*/256, /*label=*/0, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/1, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/2, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/3, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/4, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/5, /*public=*/ true, /*min_bits=*/0)}
bigint_program_info! {ec_add_rz8test1, /*iters=*/1,
bigint_witness_info!(/*bits=*/8, /*label=*/0, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/1, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/2, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/3, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/4, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/5, /*public=*/ true, /*min_bits=*/0)}
bigint_program_info! {ec_add_secp256k1, /*iters=*/1,
bigint_witness_info!(/*bits=*/256, /*label=*/0, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/1, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/2, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/3, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/4, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/5, /*public=*/ true, /*min_bits=*/0)}
bigint_program_info! {ec_aff_doub_test_8, /*iters=*/1,
bigint_witness_info!(/*bits=*/8, /*label=*/0, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/1, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/2, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/3, /*public=*/ true, /*min_bits=*/0)}
bigint_program_info! {ec_aff_doub_test_256, /*iters=*/1,
bigint_witness_info!(/*bits=*/256, /*label=*/0, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/1, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/2, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/3, /*public=*/ true, /*min_bits=*/0)}
bigint_program_info! {ec_doub_rz8test1, /*iters=*/1,
bigint_witness_info!(/*bits=*/8, /*label=*/0, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/1, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/2, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/3, /*public=*/ true, /*min_bits=*/0)}
bigint_program_info! {ec_doub_secp256k1, /*iters=*/1,
bigint_witness_info!(/*bits=*/256, /*label=*/0, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/1, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/2, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/3, /*public=*/ true, /*min_bits=*/0)}
bigint_program_info! {ec_aff_mul_test_8, /*iters=*/1,
bigint_witness_info!(/*bits=*/8, /*label=*/0, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/1, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/2, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/3, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/4, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/5, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/6, /*public=*/ true, /*min_bits=*/0)}
bigint_program_info! {ec_aff_mul_test_32, /*iters=*/1,
bigint_witness_info!(/*bits=*/32, /*label=*/0, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/32, /*label=*/1, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/32, /*label=*/2, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/32, /*label=*/3, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/32, /*label=*/4, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/32, /*label=*/5, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/32, /*label=*/6, /*public=*/ true, /*min_bits=*/0)}
bigint_program_info! {ec_mul_rz8test1, /*iters=*/1,
bigint_witness_info!(/*bits=*/8, /*label=*/0, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/1, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/2, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/3, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/4, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/5, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/6, /*public=*/ true, /*min_bits=*/0)}
bigint_program_info! {ec_mul_secp256k1, /*iters=*/1,
bigint_witness_info!(/*bits=*/256, /*label=*/0, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/1, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/2, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/3, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/4, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/5, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/6, /*public=*/ true, /*min_bits=*/0)}
bigint_program_info! {ec_aff_neg_test_8, /*iters=*/1,
bigint_witness_info!(/*bits=*/8, /*label=*/0, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/1, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/2, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/3, /*public=*/ true, /*min_bits=*/0)}
bigint_program_info! {ec_neg_rz8test1, /*iters=*/1,
bigint_witness_info!(/*bits=*/8, /*label=*/0, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/1, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/2, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/3, /*public=*/ true, /*min_bits=*/0)}
bigint_program_info! {ec_neg_secp256k1, /*iters=*/1,
bigint_witness_info!(/*bits=*/256, /*label=*/0, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/1, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/2, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/3, /*public=*/ true, /*min_bits=*/0)}
bigint_program_info! {ec_aff_sub_test_8, /*iters=*/1,
bigint_witness_info!(/*bits=*/8, /*label=*/0, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/1, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/2, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/3, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/4, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/5, /*public=*/ true, /*min_bits=*/0)}
bigint_program_info! {ec_sub_rz8test1, /*iters=*/1,
bigint_witness_info!(/*bits=*/8, /*label=*/0, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/1, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/2, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/3, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/4, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/5, /*public=*/ true, /*min_bits=*/0)}
bigint_program_info! {ec_sub_secp256k1, /*iters=*/1,
bigint_witness_info!(/*bits=*/256, /*label=*/0, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/1, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/2, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/3, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/4, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/5, /*public=*/ true, /*min_bits=*/0)}
bigint_program_info! {ec_pts_eq_test_8, /*iters=*/1,
bigint_witness_info!(/*bits=*/8, /*label=*/0, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/1, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/2, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/3, /*public=*/ true, /*min_bits=*/0)}
bigint_program_info! {ec_pts_eq_rz8test1, /*iters=*/1,
bigint_witness_info!(/*bits=*/8, /*label=*/0, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/1, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/2, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/3, /*public=*/ true, /*min_bits=*/0)}
bigint_program_info! {ec_pts_eq_secp256k1, /*iters=*/1,
bigint_witness_info!(/*bits=*/256, /*label=*/0, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/1, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/2, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/3, /*public=*/ true, /*min_bits=*/0)}
bigint_program_info! {rep_ec_aff_add_test_full_256_r5, /*iters=*/1,
bigint_witness_info!(/*bits=*/256, /*label=*/0, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/1, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/2, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/3, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/4, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/5, /*public=*/ true, /*min_bits=*/0)}
bigint_program_info! {rep_ec_aff_add_test_full_256_r10, /*iters=*/1,
bigint_witness_info!(/*bits=*/256, /*label=*/0, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/1, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/2, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/3, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/4, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/5, /*public=*/ true, /*min_bits=*/0)}
bigint_program_info! {rep_ec_aff_add_test_full_256_r256, /*iters=*/1,
bigint_witness_info!(/*bits=*/256, /*label=*/0, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/1, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/2, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/3, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/4, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/5, /*public=*/ true, /*min_bits=*/0)}
bigint_program_info! {rep_ec_aff_doub_test_full_256_r5, /*iters=*/1,
bigint_witness_info!(/*bits=*/256, /*label=*/0, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/1, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/2, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/3, /*public=*/ true, /*min_bits=*/0)}
bigint_program_info! {rep_ec_aff_doub_test_full_256_r10, /*iters=*/1,
bigint_witness_info!(/*bits=*/256, /*label=*/0, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/1, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/2, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/3, /*public=*/ true, /*min_bits=*/0)}
bigint_program_info! {rep_ec_aff_doub_test_full_256_r256, /*iters=*/1,
bigint_witness_info!(/*bits=*/256, /*label=*/0, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/1, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/2, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/3, /*public=*/ true, /*min_bits=*/0)}
bigint_program_list! {rsa_256_x1, rsa_256_x2, rsa_3072_x15, nondet_inv_test_8, const_add_test_8, const_add_alt_test_16, const_mul_test_8, add_test_8, add_test_16, add_test_128, const_one_test_8, const_twobyte_test_16, sub_test_8, sub_test_128, mul_test_8, mul_test_128, reduce_test_8, reduce_test_128, ecdsa_verify_8, ecdsa_verify_32, ec_aff_add_test_8, ec_aff_add_test_256, ec_add_rz8test1, ec_add_secp256k1, ec_aff_doub_test_8, ec_aff_doub_test_256, ec_doub_rz8test1, ec_doub_secp256k1, ec_aff_mul_test_8, ec_aff_mul_test_32, ec_mul_rz8test1, ec_mul_secp256k1, ec_aff_neg_test_8, ec_neg_rz8test1, ec_neg_secp256k1, ec_aff_sub_test_8, ec_sub_rz8test1, ec_sub_secp256k1, ec_pts_eq_test_8, ec_pts_eq_rz8test1, ec_pts_eq_secp256k1, rep_ec_aff_add_test_full_256_r5, rep_ec_aff_add_test_full_256_r10, rep_ec_aff_add_test_full_256_r256, rep_ec_aff_doub_test_full_256_r5, rep_ec_aff_doub_test_full_256_r10, rep_ec_aff_doub_test_full_256_r256}
