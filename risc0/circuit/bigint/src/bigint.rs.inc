bigint_declare_byte_poly!(BytePoly_32, 32);
bigint_declare_byte_poly!(BytePoly_64, 64);
bigint_declare_byte_poly!(BytePoly_34, 34);
bigint_declare_byte_poly!(BytePoly_66, 66);
bigint_declare_byte_poly!(BytePoly_384, 384);
bigint_declare_byte_poly!(BytePoly_768, 768);
bigint_declare_byte_poly!(BytePoly_387, 387);
bigint_declare_byte_poly!(BytePoly_771, 771);
bigint_declare_byte_poly!(BytePoly_1, 1);
bigint_declare_byte_poly!(BytePoly_2, 2);
bigint_declare_byte_poly!(BytePoly_3, 3);
bigint_declare_byte_poly!(BytePoly_4, 4);
bigint_declare_byte_poly!(BytePoly_16, 16);
bigint_declare_byte_poly!(BytePoly_17, 17);
bigint_declare_byte_poly!(BytePoly_5, 5);
bigint_declare_byte_poly!(BytePoly_8, 8);
bigint_declare_byte_poly!(BytePoly_9, 9);
bigint_declare_byte_poly!(BytePoly_13, 13);
bigint_declare_byte_poly!(BytePoly_10, 10);
bigint_declare_byte_poly!(BytePoly_14, 14);
bigint_declare_byte_poly!(BytePoly_6, 6);
bigint_declare_byte_poly!(BytePoly_98, 98);
bigint_declare_byte_poly!(BytePoly_33, 33);
bigint_declare_byte_poly!(BytePoly_35, 35);
bigint_declare_byte_poly!(BytePoly_67, 67);
pub fn rsa_256_x1(ctx: &mut BigIntContext) -> Result<()> {
    let x0: BytePoly_32 = bigint_def!(ctx, 32, 0, 1);
    let x1: BytePoly_32 = bigint_def!(ctx, 32, 1, 1);
    let x2: BytePoly_32 = bigint_def!(ctx, 32, 2, 1);
    let x3: BytePoly_64 = bigint_mul!(x1, x1, 64);
    let x4: BytePoly_34 = bigint_nondet_quot!(ctx, x3, x0, 34);
    let x5: BytePoly_32 = bigint_nondet_rem!(ctx, x3, x0, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x4, x0, 66), x5, 66), x3, 66),
        276359,
        4,
    )?;
    let x6: BytePoly_64 = bigint_mul!(x5, x5, 64);
    let x7: BytePoly_34 = bigint_nondet_quot!(ctx, x6, x0, 34);
    let x8: BytePoly_32 = bigint_nondet_rem!(ctx, x6, x0, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x7, x0, 66), x8, 66), x6, 66),
        276359,
        4,
    )?;
    let x9: BytePoly_64 = bigint_mul!(x8, x8, 64);
    let x10: BytePoly_34 = bigint_nondet_quot!(ctx, x9, x0, 34);
    let x11: BytePoly_32 = bigint_nondet_rem!(ctx, x9, x0, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x10, x0, 66), x11, 66), x9, 66),
        276359,
        4,
    )?;
    let x12: BytePoly_64 = bigint_mul!(x11, x11, 64);
    let x13: BytePoly_34 = bigint_nondet_quot!(ctx, x12, x0, 34);
    let x14: BytePoly_32 = bigint_nondet_rem!(ctx, x12, x0, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x13, x0, 66), x14, 66), x12, 66),
        276359,
        4,
    )?;
    let x15: BytePoly_64 = bigint_mul!(x14, x14, 64);
    let x16: BytePoly_34 = bigint_nondet_quot!(ctx, x15, x0, 34);
    let x17: BytePoly_32 = bigint_nondet_rem!(ctx, x15, x0, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x16, x0, 66), x17, 66), x15, 66),
        276359,
        4,
    )?;
    let x18: BytePoly_64 = bigint_mul!(x17, x17, 64);
    let x19: BytePoly_34 = bigint_nondet_quot!(ctx, x18, x0, 34);
    let x20: BytePoly_32 = bigint_nondet_rem!(ctx, x18, x0, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x19, x0, 66), x20, 66), x18, 66),
        276359,
        4,
    )?;
    let x21: BytePoly_64 = bigint_mul!(x20, x20, 64);
    let x22: BytePoly_34 = bigint_nondet_quot!(ctx, x21, x0, 34);
    let x23: BytePoly_32 = bigint_nondet_rem!(ctx, x21, x0, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x22, x0, 66), x23, 66), x21, 66),
        276359,
        4,
    )?;
    let x24: BytePoly_64 = bigint_mul!(x23, x23, 64);
    let x25: BytePoly_34 = bigint_nondet_quot!(ctx, x24, x0, 34);
    let x26: BytePoly_32 = bigint_nondet_rem!(ctx, x24, x0, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x25, x0, 66), x26, 66), x24, 66),
        276359,
        4,
    )?;
    let x27: BytePoly_64 = bigint_mul!(x26, x26, 64);
    let x28: BytePoly_34 = bigint_nondet_quot!(ctx, x27, x0, 34);
    let x29: BytePoly_32 = bigint_nondet_rem!(ctx, x27, x0, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x28, x0, 66), x29, 66), x27, 66),
        276359,
        4,
    )?;
    let x30: BytePoly_64 = bigint_mul!(x29, x29, 64);
    let x31: BytePoly_34 = bigint_nondet_quot!(ctx, x30, x0, 34);
    let x32: BytePoly_32 = bigint_nondet_rem!(ctx, x30, x0, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x31, x0, 66), x32, 66), x30, 66),
        276359,
        4,
    )?;
    let x33: BytePoly_64 = bigint_mul!(x32, x32, 64);
    let x34: BytePoly_34 = bigint_nondet_quot!(ctx, x33, x0, 34);
    let x35: BytePoly_32 = bigint_nondet_rem!(ctx, x33, x0, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x34, x0, 66), x35, 66), x33, 66),
        276359,
        4,
    )?;
    let x36: BytePoly_64 = bigint_mul!(x35, x35, 64);
    let x37: BytePoly_34 = bigint_nondet_quot!(ctx, x36, x0, 34);
    let x38: BytePoly_32 = bigint_nondet_rem!(ctx, x36, x0, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x37, x0, 66), x38, 66), x36, 66),
        276359,
        4,
    )?;
    let x39: BytePoly_64 = bigint_mul!(x38, x38, 64);
    let x40: BytePoly_34 = bigint_nondet_quot!(ctx, x39, x0, 34);
    let x41: BytePoly_32 = bigint_nondet_rem!(ctx, x39, x0, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x40, x0, 66), x41, 66), x39, 66),
        276359,
        4,
    )?;
    let x42: BytePoly_64 = bigint_mul!(x41, x41, 64);
    let x43: BytePoly_34 = bigint_nondet_quot!(ctx, x42, x0, 34);
    let x44: BytePoly_32 = bigint_nondet_rem!(ctx, x42, x0, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x43, x0, 66), x44, 66), x42, 66),
        276359,
        4,
    )?;
    let x45: BytePoly_64 = bigint_mul!(x44, x44, 64);
    let x46: BytePoly_34 = bigint_nondet_quot!(ctx, x45, x0, 34);
    let x47: BytePoly_32 = bigint_nondet_rem!(ctx, x45, x0, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x46, x0, 66), x47, 66), x45, 66),
        276359,
        4,
    )?;
    let x48: BytePoly_64 = bigint_mul!(x47, x47, 64);
    let x49: BytePoly_34 = bigint_nondet_quot!(ctx, x48, x0, 34);
    let x50: BytePoly_32 = bigint_nondet_rem!(ctx, x48, x0, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x49, x0, 66), x50, 66), x48, 66),
        276359,
        4,
    )?;
    let x51: BytePoly_64 = bigint_mul!(x50, x1, 64);
    let x52: BytePoly_34 = bigint_nondet_quot!(ctx, x51, x0, 34);
    let x53: BytePoly_32 = bigint_nondet_rem!(ctx, x51, x0, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x52, x0, 66), x53, 66), x51, 66),
        276359,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x53, x2, 32), 34, 1)?;
    return Ok(());
}
pub fn rsa_256_x2(ctx: &mut BigIntContext) -> Result<()> {
    let x0: BytePoly_32 = bigint_def!(ctx, 32, 0, 1);
    let x1: BytePoly_32 = bigint_def!(ctx, 32, 1, 1);
    let x2: BytePoly_32 = bigint_def!(ctx, 32, 2, 1);
    let x3: BytePoly_64 = bigint_mul!(x1, x1, 64);
    let x4: BytePoly_34 = bigint_nondet_quot!(ctx, x3, x0, 34);
    let x5: BytePoly_32 = bigint_nondet_rem!(ctx, x3, x0, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x4, x0, 66), x5, 66), x3, 66),
        276359,
        4,
    )?;
    let x6: BytePoly_64 = bigint_mul!(x5, x5, 64);
    let x7: BytePoly_34 = bigint_nondet_quot!(ctx, x6, x0, 34);
    let x8: BytePoly_32 = bigint_nondet_rem!(ctx, x6, x0, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x7, x0, 66), x8, 66), x6, 66),
        276359,
        4,
    )?;
    let x9: BytePoly_64 = bigint_mul!(x8, x8, 64);
    let x10: BytePoly_34 = bigint_nondet_quot!(ctx, x9, x0, 34);
    let x11: BytePoly_32 = bigint_nondet_rem!(ctx, x9, x0, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x10, x0, 66), x11, 66), x9, 66),
        276359,
        4,
    )?;
    let x12: BytePoly_64 = bigint_mul!(x11, x11, 64);
    let x13: BytePoly_34 = bigint_nondet_quot!(ctx, x12, x0, 34);
    let x14: BytePoly_32 = bigint_nondet_rem!(ctx, x12, x0, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x13, x0, 66), x14, 66), x12, 66),
        276359,
        4,
    )?;
    let x15: BytePoly_64 = bigint_mul!(x14, x14, 64);
    let x16: BytePoly_34 = bigint_nondet_quot!(ctx, x15, x0, 34);
    let x17: BytePoly_32 = bigint_nondet_rem!(ctx, x15, x0, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x16, x0, 66), x17, 66), x15, 66),
        276359,
        4,
    )?;
    let x18: BytePoly_64 = bigint_mul!(x17, x17, 64);
    let x19: BytePoly_34 = bigint_nondet_quot!(ctx, x18, x0, 34);
    let x20: BytePoly_32 = bigint_nondet_rem!(ctx, x18, x0, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x19, x0, 66), x20, 66), x18, 66),
        276359,
        4,
    )?;
    let x21: BytePoly_64 = bigint_mul!(x20, x20, 64);
    let x22: BytePoly_34 = bigint_nondet_quot!(ctx, x21, x0, 34);
    let x23: BytePoly_32 = bigint_nondet_rem!(ctx, x21, x0, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x22, x0, 66), x23, 66), x21, 66),
        276359,
        4,
    )?;
    let x24: BytePoly_64 = bigint_mul!(x23, x23, 64);
    let x25: BytePoly_34 = bigint_nondet_quot!(ctx, x24, x0, 34);
    let x26: BytePoly_32 = bigint_nondet_rem!(ctx, x24, x0, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x25, x0, 66), x26, 66), x24, 66),
        276359,
        4,
    )?;
    let x27: BytePoly_64 = bigint_mul!(x26, x26, 64);
    let x28: BytePoly_34 = bigint_nondet_quot!(ctx, x27, x0, 34);
    let x29: BytePoly_32 = bigint_nondet_rem!(ctx, x27, x0, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x28, x0, 66), x29, 66), x27, 66),
        276359,
        4,
    )?;
    let x30: BytePoly_64 = bigint_mul!(x29, x29, 64);
    let x31: BytePoly_34 = bigint_nondet_quot!(ctx, x30, x0, 34);
    let x32: BytePoly_32 = bigint_nondet_rem!(ctx, x30, x0, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x31, x0, 66), x32, 66), x30, 66),
        276359,
        4,
    )?;
    let x33: BytePoly_64 = bigint_mul!(x32, x32, 64);
    let x34: BytePoly_34 = bigint_nondet_quot!(ctx, x33, x0, 34);
    let x35: BytePoly_32 = bigint_nondet_rem!(ctx, x33, x0, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x34, x0, 66), x35, 66), x33, 66),
        276359,
        4,
    )?;
    let x36: BytePoly_64 = bigint_mul!(x35, x35, 64);
    let x37: BytePoly_34 = bigint_nondet_quot!(ctx, x36, x0, 34);
    let x38: BytePoly_32 = bigint_nondet_rem!(ctx, x36, x0, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x37, x0, 66), x38, 66), x36, 66),
        276359,
        4,
    )?;
    let x39: BytePoly_64 = bigint_mul!(x38, x38, 64);
    let x40: BytePoly_34 = bigint_nondet_quot!(ctx, x39, x0, 34);
    let x41: BytePoly_32 = bigint_nondet_rem!(ctx, x39, x0, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x40, x0, 66), x41, 66), x39, 66),
        276359,
        4,
    )?;
    let x42: BytePoly_64 = bigint_mul!(x41, x41, 64);
    let x43: BytePoly_34 = bigint_nondet_quot!(ctx, x42, x0, 34);
    let x44: BytePoly_32 = bigint_nondet_rem!(ctx, x42, x0, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x43, x0, 66), x44, 66), x42, 66),
        276359,
        4,
    )?;
    let x45: BytePoly_64 = bigint_mul!(x44, x44, 64);
    let x46: BytePoly_34 = bigint_nondet_quot!(ctx, x45, x0, 34);
    let x47: BytePoly_32 = bigint_nondet_rem!(ctx, x45, x0, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x46, x0, 66), x47, 66), x45, 66),
        276359,
        4,
    )?;
    let x48: BytePoly_64 = bigint_mul!(x47, x47, 64);
    let x49: BytePoly_34 = bigint_nondet_quot!(ctx, x48, x0, 34);
    let x50: BytePoly_32 = bigint_nondet_rem!(ctx, x48, x0, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x49, x0, 66), x50, 66), x48, 66),
        276359,
        4,
    )?;
    let x51: BytePoly_64 = bigint_mul!(x50, x1, 64);
    let x52: BytePoly_34 = bigint_nondet_quot!(ctx, x51, x0, 34);
    let x53: BytePoly_32 = bigint_nondet_rem!(ctx, x51, x0, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x52, x0, 66), x53, 66), x51, 66),
        276359,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x53, x2, 32), 34, 1)?;
    return Ok(());
}
pub fn rsa_3072_x15(ctx: &mut BigIntContext) -> Result<()> {
    let x0: BytePoly_384 = bigint_def!(ctx, 384, 0, 1);
    let x1: BytePoly_384 = bigint_def!(ctx, 384, 1, 1);
    let x2: BytePoly_384 = bigint_def!(ctx, 384, 2, 1);
    let x3: BytePoly_768 = bigint_mul!(x1, x1, 768);
    let x4: BytePoly_387 = bigint_nondet_quot!(ctx, x3, x0, 387);
    let x5: BytePoly_384 = bigint_nondet_rem!(ctx, x3, x0, 384);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x4, x0, 771), x5, 771), x3, 771),
        3145587,
        4,
    )?;
    let x6: BytePoly_768 = bigint_mul!(x5, x5, 768);
    let x7: BytePoly_387 = bigint_nondet_quot!(ctx, x6, x0, 387);
    let x8: BytePoly_384 = bigint_nondet_rem!(ctx, x6, x0, 384);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x7, x0, 771), x8, 771), x6, 771),
        3145587,
        4,
    )?;
    let x9: BytePoly_768 = bigint_mul!(x8, x8, 768);
    let x10: BytePoly_387 = bigint_nondet_quot!(ctx, x9, x0, 387);
    let x11: BytePoly_384 = bigint_nondet_rem!(ctx, x9, x0, 384);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x10, x0, 771), x11, 771), x9, 771),
        3145587,
        4,
    )?;
    let x12: BytePoly_768 = bigint_mul!(x11, x11, 768);
    let x13: BytePoly_387 = bigint_nondet_quot!(ctx, x12, x0, 387);
    let x14: BytePoly_384 = bigint_nondet_rem!(ctx, x12, x0, 384);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x13, x0, 771), x14, 771), x12, 771),
        3145587,
        4,
    )?;
    let x15: BytePoly_768 = bigint_mul!(x14, x14, 768);
    let x16: BytePoly_387 = bigint_nondet_quot!(ctx, x15, x0, 387);
    let x17: BytePoly_384 = bigint_nondet_rem!(ctx, x15, x0, 384);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x16, x0, 771), x17, 771), x15, 771),
        3145587,
        4,
    )?;
    let x18: BytePoly_768 = bigint_mul!(x17, x17, 768);
    let x19: BytePoly_387 = bigint_nondet_quot!(ctx, x18, x0, 387);
    let x20: BytePoly_384 = bigint_nondet_rem!(ctx, x18, x0, 384);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x19, x0, 771), x20, 771), x18, 771),
        3145587,
        4,
    )?;
    let x21: BytePoly_768 = bigint_mul!(x20, x20, 768);
    let x22: BytePoly_387 = bigint_nondet_quot!(ctx, x21, x0, 387);
    let x23: BytePoly_384 = bigint_nondet_rem!(ctx, x21, x0, 384);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x22, x0, 771), x23, 771), x21, 771),
        3145587,
        4,
    )?;
    let x24: BytePoly_768 = bigint_mul!(x23, x23, 768);
    let x25: BytePoly_387 = bigint_nondet_quot!(ctx, x24, x0, 387);
    let x26: BytePoly_384 = bigint_nondet_rem!(ctx, x24, x0, 384);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x25, x0, 771), x26, 771), x24, 771),
        3145587,
        4,
    )?;
    let x27: BytePoly_768 = bigint_mul!(x26, x26, 768);
    let x28: BytePoly_387 = bigint_nondet_quot!(ctx, x27, x0, 387);
    let x29: BytePoly_384 = bigint_nondet_rem!(ctx, x27, x0, 384);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x28, x0, 771), x29, 771), x27, 771),
        3145587,
        4,
    )?;
    let x30: BytePoly_768 = bigint_mul!(x29, x29, 768);
    let x31: BytePoly_387 = bigint_nondet_quot!(ctx, x30, x0, 387);
    let x32: BytePoly_384 = bigint_nondet_rem!(ctx, x30, x0, 384);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x31, x0, 771), x32, 771), x30, 771),
        3145587,
        4,
    )?;
    let x33: BytePoly_768 = bigint_mul!(x32, x32, 768);
    let x34: BytePoly_387 = bigint_nondet_quot!(ctx, x33, x0, 387);
    let x35: BytePoly_384 = bigint_nondet_rem!(ctx, x33, x0, 384);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x34, x0, 771), x35, 771), x33, 771),
        3145587,
        4,
    )?;
    let x36: BytePoly_768 = bigint_mul!(x35, x35, 768);
    let x37: BytePoly_387 = bigint_nondet_quot!(ctx, x36, x0, 387);
    let x38: BytePoly_384 = bigint_nondet_rem!(ctx, x36, x0, 384);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x37, x0, 771), x38, 771), x36, 771),
        3145587,
        4,
    )?;
    let x39: BytePoly_768 = bigint_mul!(x38, x38, 768);
    let x40: BytePoly_387 = bigint_nondet_quot!(ctx, x39, x0, 387);
    let x41: BytePoly_384 = bigint_nondet_rem!(ctx, x39, x0, 384);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x40, x0, 771), x41, 771), x39, 771),
        3145587,
        4,
    )?;
    let x42: BytePoly_768 = bigint_mul!(x41, x41, 768);
    let x43: BytePoly_387 = bigint_nondet_quot!(ctx, x42, x0, 387);
    let x44: BytePoly_384 = bigint_nondet_rem!(ctx, x42, x0, 384);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x43, x0, 771), x44, 771), x42, 771),
        3145587,
        4,
    )?;
    let x45: BytePoly_768 = bigint_mul!(x44, x44, 768);
    let x46: BytePoly_387 = bigint_nondet_quot!(ctx, x45, x0, 387);
    let x47: BytePoly_384 = bigint_nondet_rem!(ctx, x45, x0, 384);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x46, x0, 771), x47, 771), x45, 771),
        3145587,
        4,
    )?;
    let x48: BytePoly_768 = bigint_mul!(x47, x47, 768);
    let x49: BytePoly_387 = bigint_nondet_quot!(ctx, x48, x0, 387);
    let x50: BytePoly_384 = bigint_nondet_rem!(ctx, x48, x0, 384);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x49, x0, 771), x50, 771), x48, 771),
        3145587,
        4,
    )?;
    let x51: BytePoly_768 = bigint_mul!(x50, x1, 768);
    let x52: BytePoly_387 = bigint_nondet_quot!(ctx, x51, x0, 387);
    let x53: BytePoly_384 = bigint_nondet_rem!(ctx, x51, x0, 384);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x52, x0, 771), x53, 771), x51, 771),
        3145587,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x53, x2, 384), 34, 1)?;
    return Ok(());
}
pub fn nondet_inv_test_8(ctx: &mut BigIntContext) -> Result<()> {
    let x0: BytePoly_1 = bigint_const!(ctx, 1);
    let x1: BytePoly_1 = bigint_def!(ctx, 1, 0, 1);
    let x2: BytePoly_1 = bigint_def!(ctx, 1, 1, 1);
    let x3: BytePoly_1 = bigint_def!(ctx, 1, 2, 1);
    let x4: BytePoly_1 = bigint_nondet_inv!(ctx, x1, x2, 1);
    let x5: BytePoly_2 = bigint_mul!(x1, x4, 2);
    let x6: BytePoly_3 = bigint_nondet_quot!(ctx, x5, x2, 3);
    let x7: BytePoly_1 = bigint_nondet_rem!(ctx, x5, x2, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x6, x2, 4), x7, 4), x5, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x7, x0, 1), 34, 1)?;
    eqz(ctx, &bigint_sub!(x4, x3, 1), 34, 1)?;
    return Ok(());
}
pub fn const_add_test_8(ctx: &mut BigIntContext) -> Result<()> {
    let x0: BytePoly_2 = bigint_const!(ctx, 71, 71);
    let x1: BytePoly_1 = bigint_def!(ctx, 1, 0, 1);
    let x2: BytePoly_3 = bigint_def!(ctx, 3, 1, 1);
    eqz(ctx, &bigint_sub!(bigint_add!(x1, x0, 2), x2, 3), 34, 1)?;
    return Ok(());
}
pub fn const_add_alt_test_16(ctx: &mut BigIntContext) -> Result<()> {
    let x0: BytePoly_2 = bigint_const!(ctx, 50, 84);
    let x1: BytePoly_2 = bigint_def!(ctx, 2, 0, 1);
    let x2: BytePoly_3 = bigint_def!(ctx, 3, 1, 1);
    eqz(ctx, &bigint_sub!(bigint_add!(x1, x0, 2), x2, 3), 34, 1)?;
    return Ok(());
}
pub fn const_mul_test_8(ctx: &mut BigIntContext) -> Result<()> {
    let x0: BytePoly_2 = bigint_const!(ctx, 50, 84);
    let x1: BytePoly_1 = bigint_def!(ctx, 1, 0, 1);
    let x2: BytePoly_3 = bigint_def!(ctx, 3, 1, 1);
    eqz(ctx, &bigint_sub!(bigint_mul!(x1, x0, 3), x2, 3), 16259, 2)?;
    return Ok(());
}
pub fn add_test_8(ctx: &mut BigIntContext) -> Result<()> {
    let x0: BytePoly_1 = bigint_def!(ctx, 1, 0, 1);
    let x1: BytePoly_1 = bigint_def!(ctx, 1, 1, 1);
    let x2: BytePoly_2 = bigint_def!(ctx, 2, 2, 1);
    eqz(ctx, &bigint_sub!(bigint_add!(x0, x1, 1), x2, 2), 34, 1)?;
    return Ok(());
}
pub fn add_test_16(ctx: &mut BigIntContext) -> Result<()> {
    let x0: BytePoly_2 = bigint_def!(ctx, 2, 0, 1);
    let x1: BytePoly_2 = bigint_def!(ctx, 2, 1, 1);
    let x2: BytePoly_3 = bigint_def!(ctx, 3, 2, 1);
    eqz(ctx, &bigint_sub!(bigint_add!(x0, x1, 2), x2, 3), 34, 1)?;
    return Ok(());
}
pub fn add_test_128(ctx: &mut BigIntContext) -> Result<()> {
    let x0: BytePoly_16 = bigint_def!(ctx, 16, 0, 1);
    let x1: BytePoly_16 = bigint_def!(ctx, 16, 1, 1);
    let x2: BytePoly_17 = bigint_def!(ctx, 17, 2, 1);
    eqz(ctx, &bigint_sub!(bigint_add!(x0, x1, 16), x2, 17), 34, 1)?;
    return Ok(());
}
pub fn const_one_test_8(ctx: &mut BigIntContext) -> Result<()> {
    let x0: BytePoly_1 = bigint_const!(ctx, 1);
    let x1: BytePoly_1 = bigint_def!(ctx, 1, 0, 1);
    eqz(ctx, &bigint_sub!(x0, x1, 1), 34, 1)?;
    return Ok(());
}
pub fn const_twobyte_test_16(ctx: &mut BigIntContext) -> Result<()> {
    let x0: BytePoly_2 = bigint_const!(ctx, 52, 18);
    let x1: BytePoly_2 = bigint_def!(ctx, 2, 0, 1);
    eqz(ctx, &bigint_sub!(x0, x1, 2), 34, 1)?;
    return Ok(());
}
pub fn sub_test_8(ctx: &mut BigIntContext) -> Result<()> {
    let x0: BytePoly_1 = bigint_def!(ctx, 1, 0, 1);
    let x1: BytePoly_1 = bigint_def!(ctx, 1, 1, 1);
    let x2: BytePoly_1 = bigint_def!(ctx, 1, 2, 1);
    eqz(ctx, &bigint_sub!(bigint_sub!(x0, x1, 1), x2, 1), 34, 1)?;
    return Ok(());
}
pub fn sub_test_128(ctx: &mut BigIntContext) -> Result<()> {
    let x0: BytePoly_16 = bigint_def!(ctx, 16, 0, 1);
    let x1: BytePoly_16 = bigint_def!(ctx, 16, 1, 1);
    let x2: BytePoly_16 = bigint_def!(ctx, 16, 2, 1);
    eqz(ctx, &bigint_sub!(bigint_sub!(x0, x1, 16), x2, 16), 34, 1)?;
    return Ok(());
}
pub fn mul_test_8(ctx: &mut BigIntContext) -> Result<()> {
    let x0: BytePoly_1 = bigint_def!(ctx, 1, 0, 1);
    let x1: BytePoly_1 = bigint_def!(ctx, 1, 1, 1);
    let x2: BytePoly_2 = bigint_def!(ctx, 2, 2, 1);
    eqz(ctx, &bigint_sub!(bigint_mul!(x0, x1, 2), x2, 2), 8131, 2)?;
    return Ok(());
}
pub fn mul_test_128(ctx: &mut BigIntContext) -> Result<()> {
    let x0: BytePoly_16 = bigint_def!(ctx, 16, 0, 1);
    let x1: BytePoly_16 = bigint_def!(ctx, 16, 1, 1);
    let x2: BytePoly_32 = bigint_def!(ctx, 32, 2, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_mul!(x0, x1, 32), x2, 32),
        130053,
        4,
    )?;
    return Ok(());
}
pub fn reduce_test_8(ctx: &mut BigIntContext) -> Result<()> {
    let x0: BytePoly_1 = bigint_def!(ctx, 1, 0, 1);
    let x1: BytePoly_1 = bigint_def!(ctx, 1, 1, 1);
    let x2: BytePoly_1 = bigint_def!(ctx, 1, 2, 1);
    let x3: BytePoly_1 = bigint_nondet_quot!(ctx, x0, x1, 1);
    let x4: BytePoly_1 = bigint_nondet_rem!(ctx, x0, x1, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3, x1, 2), x4, 2), x0, 2),
        8131,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x4, x2, 1), 34, 1)?;
    return Ok(());
}
pub fn reduce_test_128(ctx: &mut BigIntContext) -> Result<()> {
    let x0: BytePoly_16 = bigint_def!(ctx, 16, 0, 1);
    let x1: BytePoly_16 = bigint_def!(ctx, 16, 1, 1);
    let x2: BytePoly_16 = bigint_def!(ctx, 16, 2, 1);
    let x3: BytePoly_16 = bigint_nondet_quot!(ctx, x0, x1, 16);
    let x4: BytePoly_16 = bigint_nondet_rem!(ctx, x0, x1, 16);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3, x1, 32), x4, 32), x0, 32),
        130053,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x4, x2, 16), 34, 1)?;
    return Ok(());
}
pub fn ecdsa_verify_8(ctx: &mut BigIntContext) -> Result<()> {
    let x0: BytePoly_1 = bigint_const!(ctx, 3);
    let x1: BytePoly_1 = bigint_const!(ctx, 2);
    let x2: BytePoly_1 = bigint_const!(ctx, 1);
    let x3: BytePoly_1 = bigint_const!(ctx, 3);
    let x4: BytePoly_1 = bigint_const!(ctx, 0);
    let x5: BytePoly_1 = bigint_const!(ctx, 31);
    let x6: BytePoly_1 = bigint_const!(ctx, 43);
    let x7: BytePoly_1 = bigint_def!(ctx, 1, 0, 1);
    let x8: BytePoly_1 = bigint_def!(ctx, 1, 1, 1);
    let x9: BytePoly_2 = bigint_def!(ctx, 2, 2, 1);
    let x10: BytePoly_1 = bigint_def!(ctx, 1, 3, 1);
    let x11: BytePoly_1 = bigint_def!(ctx, 1, 4, 1);
    let x12: BytePoly_2 = bigint_def!(ctx, 2, 5, 1);
    let x13: BytePoly_2 = bigint_def!(ctx, 2, 6, 1);
    let x14: BytePoly_2 = bigint_def!(ctx, 2, 7, 1);
    let x15: BytePoly_1 = bigint_def!(ctx, 1, 8, 1);
    let x16: BytePoly_1 = bigint_def!(ctx, 1, 9, 1);
    let x17: BytePoly_2 = bigint_mul!(x10, x10, 2);
    let x18: BytePoly_3 = bigint_nondet_quot!(ctx, x17, x5, 3);
    let x19: BytePoly_1 = bigint_nondet_rem!(ctx, x17, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x18, x5, 4), x19, 4), x17, 4),
        24387,
        2,
    )?;
    let x20: BytePoly_2 = bigint_sub!(
        bigint_mul!(x11, x11, 2),
        bigint_add!(
            bigint_add!(bigint_mul!(x10, x19, 2), bigint_mul!(x10, x4, 2), 2),
            x3,
            2
        ),
        2
    );
    let x21: BytePoly_3 = bigint_nondet_quot!(ctx, x20, x5, 3);
    let x22: BytePoly_1 = bigint_nondet_rem!(ctx, x20, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x21, x5, 4), x22, 4), x20, 4),
        24387,
        2,
    )?;
    eqz(ctx, &x22, 34, 1)?;
    let x23: BytePoly_2 = bigint_mul!(x16, x16, 2);
    let x24: BytePoly_2 = bigint_mul!(x15, x15, 2);
    let x25: BytePoly_3 = bigint_nondet_quot!(ctx, x24, x5, 3);
    let x26: BytePoly_1 = bigint_nondet_rem!(ctx, x24, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x25, x5, 4), x26, 4), x24, 4),
        24387,
        2,
    )?;
    let x27: BytePoly_2 = bigint_mul!(x15, x4, 2);
    let x28: BytePoly_2 = bigint_sub!(
        x23,
        bigint_add!(bigint_add!(bigint_mul!(x15, x26, 2), x27, 2), x3, 2),
        2
    );
    let x29: BytePoly_3 = bigint_nondet_quot!(ctx, x28, x5, 3);
    let x30: BytePoly_1 = bigint_nondet_rem!(ctx, x28, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x29, x5, 4), x30, 4), x28, 4),
        24387,
        2,
    )?;
    eqz(ctx, &x30, 34, 1)?;
    let x31: BytePoly_1 = bigint_nondet_inv!(ctx, x14, x6, 1);
    let x32: BytePoly_3 = bigint_mul!(x14, x31, 3);
    let x33: BytePoly_4 = bigint_nondet_quot!(ctx, x32, x6, 4);
    let x34: BytePoly_1 = bigint_nondet_rem!(ctx, x32, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x33, x6, 5), x34, 5), x32, 5),
        32515,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x34, x2, 1), 34, 1)?;
    let x35: BytePoly_3 = bigint_mul!(x12, x31, 3);
    let x36: BytePoly_4 = bigint_nondet_quot!(ctx, x35, x6, 4);
    let x37: BytePoly_1 = bigint_nondet_rem!(ctx, x35, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x36, x6, 5), x37, 5), x35, 5),
        32515,
        2,
    )?;
    let x38: BytePoly_3 = bigint_mul!(x13, x31, 3);
    let x39: BytePoly_4 = bigint_nondet_quot!(ctx, x38, x6, 4);
    let x40: BytePoly_1 = bigint_nondet_rem!(ctx, x38, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x39, x6, 5), x40, 5), x38, 5),
        32515,
        2,
    )?;
    let x41: BytePoly_3 = bigint_nondet_quot!(ctx, x24, x5, 3);
    let x42: BytePoly_1 = bigint_nondet_rem!(ctx, x24, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x41, x5, 4), x42, 4), x24, 4),
        24387,
        2,
    )?;
    let x43: BytePoly_2 = bigint_sub!(
        x23,
        bigint_add!(bigint_add!(bigint_mul!(x15, x42, 2), x27, 2), x3, 2),
        2
    );
    let x44: BytePoly_3 = bigint_nondet_quot!(ctx, x43, x5, 3);
    let x45: BytePoly_1 = bigint_nondet_rem!(ctx, x43, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x44, x5, 4), x45, 4), x43, 4),
        24387,
        2,
    )?;
    eqz(ctx, &x45, 34, 1)?;
    let x46: BytePoly_1 = bigint_nondet_rem!(ctx, x37, x1, 1);
    let x47: BytePoly_1 = bigint_nondet_quot!(ctx, x37, x1, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x47, x1, 2), x46, 2), x37, 2),
        8131,
        2,
    )?;
    let x48: BytePoly_1 = bigint_sub!(x2, x46, 1);
    eqz(ctx, &bigint_mul!(x46, x48, 2), 8131, 2)?;
    let x49: BytePoly_1 = bigint_add!(bigint_sub!(x8, x16, 1), x5, 1);
    let x50: BytePoly_1 = bigint_add!(bigint_sub!(x7, x15, 1), x5, 1);
    let x51: BytePoly_1 = bigint_nondet_inv!(ctx, x50, x5, 1);
    let x52: BytePoly_1 = bigint_nondet_rem!(ctx, bigint_mul!(x49, x51, 2), x5, 1);
    let x53: BytePoly_2 = bigint_add!(bigint_sub!(bigint_mul!(x52, x50, 2), x49, 2), x5, 2);
    let x54: BytePoly_3 = bigint_nondet_quot!(ctx, x53, x5, 3);
    eqz(ctx, &bigint_sub!(x53, bigint_mul!(x54, x5, 4), 4), 24387, 2)?;
    let x55: BytePoly_2 = bigint_mul!(x52, x52, 2);
    let x56: BytePoly_2 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x55, x15, 2), x5, 2), x7, 2),
        x5,
        2
    );
    let x57: BytePoly_3 = bigint_nondet_quot!(ctx, x56, x5, 3);
    let x58: BytePoly_1 = bigint_nondet_rem!(ctx, x56, x5, 1);
    let x59: BytePoly_2 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x5,
                bigint_add!(
                    bigint_mul!(x52, x58, 2),
                    bigint_add!(bigint_sub!(x16, bigint_mul!(x52, x15, 2), 2), x5, 2),
                    2
                ),
                2
            ),
            x5,
            2
        ),
        x5,
        2
    );
    let x60: BytePoly_3 = bigint_nondet_quot!(ctx, x59, x5, 3);
    let x61: BytePoly_1 = bigint_nondet_rem!(ctx, x59, x5, 1);
    let x62: BytePoly_4 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x55, bigint_mul!(x57, x5, 4), 4), x15, 4),
                    x7,
                    4
                ),
                x5,
                4
            ),
            x5,
            4
        ),
        x58,
        4
    );
    eqz(ctx, &x62, 24387, 2)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x60, x5, 4), x61, 4),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x52, bigint_sub!(x15, x58, 1), 2), x16, 2),
                    x5,
                    2
                ),
                x5,
                2
            ),
            4
        ),
        24387,
        2,
    )?;
    let x63: BytePoly_2 = bigint_add!(bigint_mul!(x58, x46, 2), bigint_mul!(x15, x48, 2), 2);
    let x64: BytePoly_2 = bigint_add!(bigint_mul!(x61, x46, 2), bigint_mul!(x16, x48, 2), 2);
    let x65: BytePoly_3 = bigint_nondet_quot!(ctx, x63, x5, 3);
    let x66: BytePoly_1 = bigint_nondet_rem!(ctx, x63, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x65, x5, 4), x66, 4), x63, 4),
        24387,
        2,
    )?;
    let x67: BytePoly_3 = bigint_nondet_quot!(ctx, x64, x5, 3);
    let x68: BytePoly_1 = bigint_nondet_rem!(ctx, x64, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x67, x5, 4), x68, 4), x64, 4),
        24387,
        2,
    )?;
    let x69: BytePoly_2 = bigint_mul!(x7, x7, 2);
    let x70: BytePoly_3 = bigint_nondet_quot!(ctx, x69, x5, 3);
    let x71: BytePoly_1 = bigint_nondet_rem!(ctx, x69, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x70, x5, 4), x71, 4), x69, 4),
        24387,
        2,
    )?;
    let x72: BytePoly_2 = bigint_add!(bigint_mul!(x71, x0, 2), x4, 2);
    let x73: BytePoly_3 = bigint_nondet_quot!(ctx, x72, x5, 3);
    let x74: BytePoly_1 = bigint_nondet_rem!(ctx, x72, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x73, x5, 4), x74, 4), x72, 4),
        24387,
        2,
    )?;
    let x75: BytePoly_1 = bigint_add!(x8, x8, 1);
    let x76: BytePoly_1 = bigint_nondet_quot!(ctx, x75, x5, 1);
    let x77: BytePoly_1 = bigint_nondet_rem!(ctx, x75, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x76, x5, 2), x77, 2), x75, 2),
        8131,
        2,
    )?;
    let x78: BytePoly_1 = bigint_nondet_inv!(ctx, x77, x5, 1);
    let x79: BytePoly_2 = bigint_mul!(x77, x78, 2);
    let x80: BytePoly_3 = bigint_nondet_quot!(ctx, x79, x5, 3);
    let x81: BytePoly_1 = bigint_nondet_rem!(ctx, x79, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x80, x5, 4), x81, 4), x79, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x81, x2, 1), 34, 1)?;
    let x82: BytePoly_2 = bigint_mul!(x74, x78, 2);
    let x83: BytePoly_3 = bigint_nondet_quot!(ctx, x82, x5, 3);
    let x84: BytePoly_1 = bigint_nondet_rem!(ctx, x82, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x83, x5, 4), x84, 4), x82, 4),
        24387,
        2,
    )?;
    let x85: BytePoly_2 = bigint_mul!(x84, x7, 2);
    let x86: BytePoly_3 = bigint_nondet_quot!(ctx, x85, x5, 3);
    let x87: BytePoly_1 = bigint_nondet_rem!(ctx, x85, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x86, x5, 4), x87, 4), x85, 4),
        24387,
        2,
    )?;
    let x88: BytePoly_1 = bigint_add!(bigint_sub!(x8, x87, 1), x5, 1);
    let x89: BytePoly_1 = bigint_nondet_quot!(ctx, x88, x5, 1);
    let x90: BytePoly_1 = bigint_nondet_rem!(ctx, x88, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x89, x5, 2), x90, 2), x88, 2),
        8131,
        2,
    )?;
    let x91: BytePoly_2 = bigint_mul!(x84, x84, 2);
    let x92: BytePoly_3 = bigint_nondet_quot!(ctx, x91, x5, 3);
    let x93: BytePoly_1 = bigint_nondet_rem!(ctx, x91, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x92, x5, 4), x93, 4), x91, 4),
        24387,
        2,
    )?;
    let x94: BytePoly_1 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x93, x7, 1), x5, 1), x7, 1),
        x5,
        1
    );
    let x95: BytePoly_1 = bigint_nondet_quot!(ctx, x94, x5, 1);
    let x96: BytePoly_1 = bigint_nondet_rem!(ctx, x94, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x95, x5, 2), x96, 2), x94, 2),
        8131,
        2,
    )?;
    let x97: BytePoly_2 = bigint_mul!(x84, x96, 2);
    let x98: BytePoly_3 = bigint_nondet_quot!(ctx, x97, x5, 3);
    let x99: BytePoly_1 = bigint_nondet_rem!(ctx, x97, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x98, x5, 4), x99, 4), x97, 4),
        24387,
        2,
    )?;
    let x100: BytePoly_1 = bigint_add!(bigint_sub!(x5, bigint_add!(x99, x90, 1), 1), x5, 1);
    let x101: BytePoly_1 = bigint_nondet_quot!(ctx, x100, x5, 1);
    let x102: BytePoly_1 = bigint_nondet_rem!(ctx, x100, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x101, x5, 2), x102, 2), x100, 2),
        8131,
        2,
    )?;
    let x103: BytePoly_1 = bigint_nondet_rem!(ctx, x47, x1, 1);
    let x104: BytePoly_1 = bigint_nondet_quot!(ctx, x47, x1, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x104, x1, 2), x103, 2), x47, 2),
        8131,
        2,
    )?;
    let x105: BytePoly_1 = bigint_sub!(x2, x103, 1);
    eqz(ctx, &bigint_mul!(x103, x105, 2), 8131, 2)?;
    let x106: BytePoly_1 = bigint_add!(bigint_sub!(x102, x68, 1), x5, 1);
    let x107: BytePoly_1 = bigint_add!(bigint_sub!(x96, x66, 1), x5, 1);
    let x108: BytePoly_1 = bigint_nondet_inv!(ctx, x107, x5, 1);
    let x109: BytePoly_1 = bigint_nondet_rem!(ctx, bigint_mul!(x106, x108, 2), x5, 1);
    let x110: BytePoly_2 = bigint_add!(bigint_sub!(bigint_mul!(x109, x107, 2), x106, 2), x5, 2);
    let x111: BytePoly_3 = bigint_nondet_quot!(ctx, x110, x5, 3);
    eqz(
        ctx,
        &bigint_sub!(x110, bigint_mul!(x111, x5, 4), 4),
        24387,
        2,
    )?;
    let x112: BytePoly_2 = bigint_mul!(x109, x109, 2);
    let x113: BytePoly_2 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x112, x66, 2), x5, 2), x96, 2),
        x5,
        2
    );
    let x114: BytePoly_3 = bigint_nondet_quot!(ctx, x113, x5, 3);
    let x115: BytePoly_1 = bigint_nondet_rem!(ctx, x113, x5, 1);
    let x116: BytePoly_2 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x5,
                bigint_add!(
                    bigint_mul!(x109, x115, 2),
                    bigint_add!(bigint_sub!(x68, bigint_mul!(x109, x66, 2), 2), x5, 2),
                    2
                ),
                2
            ),
            x5,
            2
        ),
        x5,
        2
    );
    let x117: BytePoly_3 = bigint_nondet_quot!(ctx, x116, x5, 3);
    let x118: BytePoly_1 = bigint_nondet_rem!(ctx, x116, x5, 1);
    let x119: BytePoly_4 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x112, bigint_mul!(x114, x5, 4), 4), x66, 4),
                    x96,
                    4
                ),
                x5,
                4
            ),
            x5,
            4
        ),
        x115,
        4
    );
    eqz(ctx, &x119, 24387, 2)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x117, x5, 4), x118, 4),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x109, bigint_sub!(x66, x115, 1), 2), x68, 2),
                    x5,
                    2
                ),
                x5,
                2
            ),
            4
        ),
        24387,
        2,
    )?;
    let x120: BytePoly_2 = bigint_add!(bigint_mul!(x115, x103, 2), bigint_mul!(x66, x105, 2), 2);
    let x121: BytePoly_2 = bigint_add!(bigint_mul!(x118, x103, 2), bigint_mul!(x68, x105, 2), 2);
    let x122: BytePoly_3 = bigint_nondet_quot!(ctx, x120, x5, 3);
    let x123: BytePoly_1 = bigint_nondet_rem!(ctx, x120, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x122, x5, 4), x123, 4), x120, 4),
        24387,
        2,
    )?;
    let x124: BytePoly_3 = bigint_nondet_quot!(ctx, x121, x5, 3);
    let x125: BytePoly_1 = bigint_nondet_rem!(ctx, x121, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x124, x5, 4), x125, 4), x121, 4),
        24387,
        2,
    )?;
    let x126: BytePoly_2 = bigint_mul!(x96, x96, 2);
    let x127: BytePoly_3 = bigint_nondet_quot!(ctx, x126, x5, 3);
    let x128: BytePoly_1 = bigint_nondet_rem!(ctx, x126, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x127, x5, 4), x128, 4), x126, 4),
        24387,
        2,
    )?;
    let x129: BytePoly_2 = bigint_add!(bigint_mul!(x128, x0, 2), x4, 2);
    let x130: BytePoly_3 = bigint_nondet_quot!(ctx, x129, x5, 3);
    let x131: BytePoly_1 = bigint_nondet_rem!(ctx, x129, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x130, x5, 4), x131, 4), x129, 4),
        24387,
        2,
    )?;
    let x132: BytePoly_1 = bigint_add!(x102, x102, 1);
    let x133: BytePoly_1 = bigint_nondet_quot!(ctx, x132, x5, 1);
    let x134: BytePoly_1 = bigint_nondet_rem!(ctx, x132, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x133, x5, 2), x134, 2), x132, 2),
        8131,
        2,
    )?;
    let x135: BytePoly_1 = bigint_nondet_inv!(ctx, x134, x5, 1);
    let x136: BytePoly_2 = bigint_mul!(x134, x135, 2);
    let x137: BytePoly_3 = bigint_nondet_quot!(ctx, x136, x5, 3);
    let x138: BytePoly_1 = bigint_nondet_rem!(ctx, x136, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x137, x5, 4), x138, 4), x136, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x138, x2, 1), 34, 1)?;
    let x139: BytePoly_2 = bigint_mul!(x131, x135, 2);
    let x140: BytePoly_3 = bigint_nondet_quot!(ctx, x139, x5, 3);
    let x141: BytePoly_1 = bigint_nondet_rem!(ctx, x139, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x140, x5, 4), x141, 4), x139, 4),
        24387,
        2,
    )?;
    let x142: BytePoly_2 = bigint_mul!(x141, x96, 2);
    let x143: BytePoly_3 = bigint_nondet_quot!(ctx, x142, x5, 3);
    let x144: BytePoly_1 = bigint_nondet_rem!(ctx, x142, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x143, x5, 4), x144, 4), x142, 4),
        24387,
        2,
    )?;
    let x145: BytePoly_1 = bigint_add!(bigint_sub!(x102, x144, 1), x5, 1);
    let x146: BytePoly_1 = bigint_nondet_quot!(ctx, x145, x5, 1);
    let x147: BytePoly_1 = bigint_nondet_rem!(ctx, x145, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x146, x5, 2), x147, 2), x145, 2),
        8131,
        2,
    )?;
    let x148: BytePoly_2 = bigint_mul!(x141, x141, 2);
    let x149: BytePoly_3 = bigint_nondet_quot!(ctx, x148, x5, 3);
    let x150: BytePoly_1 = bigint_nondet_rem!(ctx, x148, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x149, x5, 4), x150, 4), x148, 4),
        24387,
        2,
    )?;
    let x151: BytePoly_1 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x150, x96, 1), x5, 1), x96, 1),
        x5,
        1
    );
    let x152: BytePoly_1 = bigint_nondet_quot!(ctx, x151, x5, 1);
    let x153: BytePoly_1 = bigint_nondet_rem!(ctx, x151, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x152, x5, 2), x153, 2), x151, 2),
        8131,
        2,
    )?;
    let x154: BytePoly_2 = bigint_mul!(x141, x153, 2);
    let x155: BytePoly_3 = bigint_nondet_quot!(ctx, x154, x5, 3);
    let x156: BytePoly_1 = bigint_nondet_rem!(ctx, x154, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x155, x5, 4), x156, 4), x154, 4),
        24387,
        2,
    )?;
    let x157: BytePoly_1 = bigint_add!(bigint_sub!(x5, bigint_add!(x156, x147, 1), 1), x5, 1);
    let x158: BytePoly_1 = bigint_nondet_quot!(ctx, x157, x5, 1);
    let x159: BytePoly_1 = bigint_nondet_rem!(ctx, x157, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x158, x5, 2), x159, 2), x157, 2),
        8131,
        2,
    )?;
    let x160: BytePoly_1 = bigint_nondet_rem!(ctx, x104, x1, 1);
    let x161: BytePoly_1 = bigint_nondet_quot!(ctx, x104, x1, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x161, x1, 2), x160, 2), x104, 2),
        8131,
        2,
    )?;
    let x162: BytePoly_1 = bigint_sub!(x2, x160, 1);
    eqz(ctx, &bigint_mul!(x160, x162, 2), 8131, 2)?;
    let x163: BytePoly_1 = bigint_add!(bigint_sub!(x159, x125, 1), x5, 1);
    let x164: BytePoly_1 = bigint_add!(bigint_sub!(x153, x123, 1), x5, 1);
    let x165: BytePoly_1 = bigint_nondet_inv!(ctx, x164, x5, 1);
    let x166: BytePoly_1 = bigint_nondet_rem!(ctx, bigint_mul!(x163, x165, 2), x5, 1);
    let x167: BytePoly_2 = bigint_add!(bigint_sub!(bigint_mul!(x166, x164, 2), x163, 2), x5, 2);
    let x168: BytePoly_3 = bigint_nondet_quot!(ctx, x167, x5, 3);
    eqz(
        ctx,
        &bigint_sub!(x167, bigint_mul!(x168, x5, 4), 4),
        24387,
        2,
    )?;
    let x169: BytePoly_2 = bigint_mul!(x166, x166, 2);
    let x170: BytePoly_2 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x169, x123, 2), x5, 2), x153, 2),
        x5,
        2
    );
    let x171: BytePoly_3 = bigint_nondet_quot!(ctx, x170, x5, 3);
    let x172: BytePoly_1 = bigint_nondet_rem!(ctx, x170, x5, 1);
    let x173: BytePoly_2 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x5,
                bigint_add!(
                    bigint_mul!(x166, x172, 2),
                    bigint_add!(bigint_sub!(x125, bigint_mul!(x166, x123, 2), 2), x5, 2),
                    2
                ),
                2
            ),
            x5,
            2
        ),
        x5,
        2
    );
    let x174: BytePoly_3 = bigint_nondet_quot!(ctx, x173, x5, 3);
    let x175: BytePoly_1 = bigint_nondet_rem!(ctx, x173, x5, 1);
    let x176: BytePoly_4 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x169, bigint_mul!(x171, x5, 4), 4), x123, 4),
                    x153,
                    4
                ),
                x5,
                4
            ),
            x5,
            4
        ),
        x172,
        4
    );
    eqz(ctx, &x176, 24387, 2)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x174, x5, 4), x175, 4),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x166, bigint_sub!(x123, x172, 1), 2), x125, 2),
                    x5,
                    2
                ),
                x5,
                2
            ),
            4
        ),
        24387,
        2,
    )?;
    let x177: BytePoly_2 = bigint_add!(bigint_mul!(x172, x160, 2), bigint_mul!(x123, x162, 2), 2);
    let x178: BytePoly_2 = bigint_add!(bigint_mul!(x175, x160, 2), bigint_mul!(x125, x162, 2), 2);
    let x179: BytePoly_3 = bigint_nondet_quot!(ctx, x177, x5, 3);
    let x180: BytePoly_1 = bigint_nondet_rem!(ctx, x177, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x179, x5, 4), x180, 4), x177, 4),
        24387,
        2,
    )?;
    let x181: BytePoly_3 = bigint_nondet_quot!(ctx, x178, x5, 3);
    let x182: BytePoly_1 = bigint_nondet_rem!(ctx, x178, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x181, x5, 4), x182, 4), x178, 4),
        24387,
        2,
    )?;
    let x183: BytePoly_2 = bigint_mul!(x153, x153, 2);
    let x184: BytePoly_3 = bigint_nondet_quot!(ctx, x183, x5, 3);
    let x185: BytePoly_1 = bigint_nondet_rem!(ctx, x183, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x184, x5, 4), x185, 4), x183, 4),
        24387,
        2,
    )?;
    let x186: BytePoly_2 = bigint_add!(bigint_mul!(x185, x0, 2), x4, 2);
    let x187: BytePoly_3 = bigint_nondet_quot!(ctx, x186, x5, 3);
    let x188: BytePoly_1 = bigint_nondet_rem!(ctx, x186, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x187, x5, 4), x188, 4), x186, 4),
        24387,
        2,
    )?;
    let x189: BytePoly_1 = bigint_add!(x159, x159, 1);
    let x190: BytePoly_1 = bigint_nondet_quot!(ctx, x189, x5, 1);
    let x191: BytePoly_1 = bigint_nondet_rem!(ctx, x189, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x190, x5, 2), x191, 2), x189, 2),
        8131,
        2,
    )?;
    let x192: BytePoly_1 = bigint_nondet_inv!(ctx, x191, x5, 1);
    let x193: BytePoly_2 = bigint_mul!(x191, x192, 2);
    let x194: BytePoly_3 = bigint_nondet_quot!(ctx, x193, x5, 3);
    let x195: BytePoly_1 = bigint_nondet_rem!(ctx, x193, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x194, x5, 4), x195, 4), x193, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x195, x2, 1), 34, 1)?;
    let x196: BytePoly_2 = bigint_mul!(x188, x192, 2);
    let x197: BytePoly_3 = bigint_nondet_quot!(ctx, x196, x5, 3);
    let x198: BytePoly_1 = bigint_nondet_rem!(ctx, x196, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x197, x5, 4), x198, 4), x196, 4),
        24387,
        2,
    )?;
    let x199: BytePoly_2 = bigint_mul!(x198, x153, 2);
    let x200: BytePoly_3 = bigint_nondet_quot!(ctx, x199, x5, 3);
    let x201: BytePoly_1 = bigint_nondet_rem!(ctx, x199, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x200, x5, 4), x201, 4), x199, 4),
        24387,
        2,
    )?;
    let x202: BytePoly_1 = bigint_add!(bigint_sub!(x159, x201, 1), x5, 1);
    let x203: BytePoly_1 = bigint_nondet_quot!(ctx, x202, x5, 1);
    let x204: BytePoly_1 = bigint_nondet_rem!(ctx, x202, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x203, x5, 2), x204, 2), x202, 2),
        8131,
        2,
    )?;
    let x205: BytePoly_2 = bigint_mul!(x198, x198, 2);
    let x206: BytePoly_3 = bigint_nondet_quot!(ctx, x205, x5, 3);
    let x207: BytePoly_1 = bigint_nondet_rem!(ctx, x205, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x206, x5, 4), x207, 4), x205, 4),
        24387,
        2,
    )?;
    let x208: BytePoly_1 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x207, x153, 1), x5, 1), x153, 1),
        x5,
        1
    );
    let x209: BytePoly_1 = bigint_nondet_quot!(ctx, x208, x5, 1);
    let x210: BytePoly_1 = bigint_nondet_rem!(ctx, x208, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x209, x5, 2), x210, 2), x208, 2),
        8131,
        2,
    )?;
    let x211: BytePoly_2 = bigint_mul!(x198, x210, 2);
    let x212: BytePoly_3 = bigint_nondet_quot!(ctx, x211, x5, 3);
    let x213: BytePoly_1 = bigint_nondet_rem!(ctx, x211, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x212, x5, 4), x213, 4), x211, 4),
        24387,
        2,
    )?;
    let x214: BytePoly_1 = bigint_add!(bigint_sub!(x5, bigint_add!(x213, x204, 1), 1), x5, 1);
    let x215: BytePoly_1 = bigint_nondet_quot!(ctx, x214, x5, 1);
    let x216: BytePoly_1 = bigint_nondet_rem!(ctx, x214, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x215, x5, 2), x216, 2), x214, 2),
        8131,
        2,
    )?;
    let x217: BytePoly_1 = bigint_nondet_rem!(ctx, x161, x1, 1);
    let x218: BytePoly_1 = bigint_nondet_quot!(ctx, x161, x1, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x218, x1, 2), x217, 2), x161, 2),
        8131,
        2,
    )?;
    let x219: BytePoly_1 = bigint_sub!(x2, x217, 1);
    eqz(ctx, &bigint_mul!(x217, x219, 2), 8131, 2)?;
    let x220: BytePoly_1 = bigint_add!(bigint_sub!(x216, x182, 1), x5, 1);
    let x221: BytePoly_1 = bigint_add!(bigint_sub!(x210, x180, 1), x5, 1);
    let x222: BytePoly_1 = bigint_nondet_inv!(ctx, x221, x5, 1);
    let x223: BytePoly_1 = bigint_nondet_rem!(ctx, bigint_mul!(x220, x222, 2), x5, 1);
    let x224: BytePoly_2 = bigint_add!(bigint_sub!(bigint_mul!(x223, x221, 2), x220, 2), x5, 2);
    let x225: BytePoly_3 = bigint_nondet_quot!(ctx, x224, x5, 3);
    eqz(
        ctx,
        &bigint_sub!(x224, bigint_mul!(x225, x5, 4), 4),
        24387,
        2,
    )?;
    let x226: BytePoly_2 = bigint_mul!(x223, x223, 2);
    let x227: BytePoly_2 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x226, x180, 2), x5, 2), x210, 2),
        x5,
        2
    );
    let x228: BytePoly_3 = bigint_nondet_quot!(ctx, x227, x5, 3);
    let x229: BytePoly_1 = bigint_nondet_rem!(ctx, x227, x5, 1);
    let x230: BytePoly_2 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x5,
                bigint_add!(
                    bigint_mul!(x223, x229, 2),
                    bigint_add!(bigint_sub!(x182, bigint_mul!(x223, x180, 2), 2), x5, 2),
                    2
                ),
                2
            ),
            x5,
            2
        ),
        x5,
        2
    );
    let x231: BytePoly_3 = bigint_nondet_quot!(ctx, x230, x5, 3);
    let x232: BytePoly_1 = bigint_nondet_rem!(ctx, x230, x5, 1);
    let x233: BytePoly_4 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x226, bigint_mul!(x228, x5, 4), 4), x180, 4),
                    x210,
                    4
                ),
                x5,
                4
            ),
            x5,
            4
        ),
        x229,
        4
    );
    eqz(ctx, &x233, 24387, 2)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x231, x5, 4), x232, 4),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x223, bigint_sub!(x180, x229, 1), 2), x182, 2),
                    x5,
                    2
                ),
                x5,
                2
            ),
            4
        ),
        24387,
        2,
    )?;
    let x234: BytePoly_2 = bigint_add!(bigint_mul!(x229, x217, 2), bigint_mul!(x180, x219, 2), 2);
    let x235: BytePoly_2 = bigint_add!(bigint_mul!(x232, x217, 2), bigint_mul!(x182, x219, 2), 2);
    let x236: BytePoly_3 = bigint_nondet_quot!(ctx, x234, x5, 3);
    let x237: BytePoly_1 = bigint_nondet_rem!(ctx, x234, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x236, x5, 4), x237, 4), x234, 4),
        24387,
        2,
    )?;
    let x238: BytePoly_3 = bigint_nondet_quot!(ctx, x235, x5, 3);
    let x239: BytePoly_1 = bigint_nondet_rem!(ctx, x235, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x238, x5, 4), x239, 4), x235, 4),
        24387,
        2,
    )?;
    let x240: BytePoly_2 = bigint_mul!(x210, x210, 2);
    let x241: BytePoly_3 = bigint_nondet_quot!(ctx, x240, x5, 3);
    let x242: BytePoly_1 = bigint_nondet_rem!(ctx, x240, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x241, x5, 4), x242, 4), x240, 4),
        24387,
        2,
    )?;
    let x243: BytePoly_2 = bigint_add!(bigint_mul!(x242, x0, 2), x4, 2);
    let x244: BytePoly_3 = bigint_nondet_quot!(ctx, x243, x5, 3);
    let x245: BytePoly_1 = bigint_nondet_rem!(ctx, x243, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x244, x5, 4), x245, 4), x243, 4),
        24387,
        2,
    )?;
    let x246: BytePoly_1 = bigint_add!(x216, x216, 1);
    let x247: BytePoly_1 = bigint_nondet_quot!(ctx, x246, x5, 1);
    let x248: BytePoly_1 = bigint_nondet_rem!(ctx, x246, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x247, x5, 2), x248, 2), x246, 2),
        8131,
        2,
    )?;
    let x249: BytePoly_1 = bigint_nondet_inv!(ctx, x248, x5, 1);
    let x250: BytePoly_2 = bigint_mul!(x248, x249, 2);
    let x251: BytePoly_3 = bigint_nondet_quot!(ctx, x250, x5, 3);
    let x252: BytePoly_1 = bigint_nondet_rem!(ctx, x250, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x251, x5, 4), x252, 4), x250, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x252, x2, 1), 34, 1)?;
    let x253: BytePoly_2 = bigint_mul!(x245, x249, 2);
    let x254: BytePoly_3 = bigint_nondet_quot!(ctx, x253, x5, 3);
    let x255: BytePoly_1 = bigint_nondet_rem!(ctx, x253, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x254, x5, 4), x255, 4), x253, 4),
        24387,
        2,
    )?;
    let x256: BytePoly_2 = bigint_mul!(x255, x210, 2);
    let x257: BytePoly_3 = bigint_nondet_quot!(ctx, x256, x5, 3);
    let x258: BytePoly_1 = bigint_nondet_rem!(ctx, x256, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x257, x5, 4), x258, 4), x256, 4),
        24387,
        2,
    )?;
    let x259: BytePoly_1 = bigint_add!(bigint_sub!(x216, x258, 1), x5, 1);
    let x260: BytePoly_1 = bigint_nondet_quot!(ctx, x259, x5, 1);
    let x261: BytePoly_1 = bigint_nondet_rem!(ctx, x259, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x260, x5, 2), x261, 2), x259, 2),
        8131,
        2,
    )?;
    let x262: BytePoly_2 = bigint_mul!(x255, x255, 2);
    let x263: BytePoly_3 = bigint_nondet_quot!(ctx, x262, x5, 3);
    let x264: BytePoly_1 = bigint_nondet_rem!(ctx, x262, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x263, x5, 4), x264, 4), x262, 4),
        24387,
        2,
    )?;
    let x265: BytePoly_1 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x264, x210, 1), x5, 1), x210, 1),
        x5,
        1
    );
    let x266: BytePoly_1 = bigint_nondet_quot!(ctx, x265, x5, 1);
    let x267: BytePoly_1 = bigint_nondet_rem!(ctx, x265, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x266, x5, 2), x267, 2), x265, 2),
        8131,
        2,
    )?;
    let x268: BytePoly_2 = bigint_mul!(x255, x267, 2);
    let x269: BytePoly_3 = bigint_nondet_quot!(ctx, x268, x5, 3);
    let x270: BytePoly_1 = bigint_nondet_rem!(ctx, x268, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x269, x5, 4), x270, 4), x268, 4),
        24387,
        2,
    )?;
    let x271: BytePoly_1 = bigint_add!(bigint_sub!(x5, bigint_add!(x270, x261, 1), 1), x5, 1);
    let x272: BytePoly_1 = bigint_nondet_quot!(ctx, x271, x5, 1);
    let x273: BytePoly_1 = bigint_nondet_rem!(ctx, x271, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x272, x5, 2), x273, 2), x271, 2),
        8131,
        2,
    )?;
    let x274: BytePoly_1 = bigint_nondet_rem!(ctx, x218, x1, 1);
    let x275: BytePoly_1 = bigint_nondet_quot!(ctx, x218, x1, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x275, x1, 2), x274, 2), x218, 2),
        8131,
        2,
    )?;
    let x276: BytePoly_1 = bigint_sub!(x2, x274, 1);
    eqz(ctx, &bigint_mul!(x274, x276, 2), 8131, 2)?;
    let x277: BytePoly_1 = bigint_add!(bigint_sub!(x273, x239, 1), x5, 1);
    let x278: BytePoly_1 = bigint_add!(bigint_sub!(x267, x237, 1), x5, 1);
    let x279: BytePoly_1 = bigint_nondet_inv!(ctx, x278, x5, 1);
    let x280: BytePoly_1 = bigint_nondet_rem!(ctx, bigint_mul!(x277, x279, 2), x5, 1);
    let x281: BytePoly_2 = bigint_add!(bigint_sub!(bigint_mul!(x280, x278, 2), x277, 2), x5, 2);
    let x282: BytePoly_3 = bigint_nondet_quot!(ctx, x281, x5, 3);
    eqz(
        ctx,
        &bigint_sub!(x281, bigint_mul!(x282, x5, 4), 4),
        24387,
        2,
    )?;
    let x283: BytePoly_2 = bigint_mul!(x280, x280, 2);
    let x284: BytePoly_2 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x283, x237, 2), x5, 2), x267, 2),
        x5,
        2
    );
    let x285: BytePoly_3 = bigint_nondet_quot!(ctx, x284, x5, 3);
    let x286: BytePoly_1 = bigint_nondet_rem!(ctx, x284, x5, 1);
    let x287: BytePoly_2 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x5,
                bigint_add!(
                    bigint_mul!(x280, x286, 2),
                    bigint_add!(bigint_sub!(x239, bigint_mul!(x280, x237, 2), 2), x5, 2),
                    2
                ),
                2
            ),
            x5,
            2
        ),
        x5,
        2
    );
    let x288: BytePoly_3 = bigint_nondet_quot!(ctx, x287, x5, 3);
    let x289: BytePoly_1 = bigint_nondet_rem!(ctx, x287, x5, 1);
    let x290: BytePoly_4 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x283, bigint_mul!(x285, x5, 4), 4), x237, 4),
                    x267,
                    4
                ),
                x5,
                4
            ),
            x5,
            4
        ),
        x286,
        4
    );
    eqz(ctx, &x290, 24387, 2)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x288, x5, 4), x289, 4),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x280, bigint_sub!(x237, x286, 1), 2), x239, 2),
                    x5,
                    2
                ),
                x5,
                2
            ),
            4
        ),
        24387,
        2,
    )?;
    let x291: BytePoly_2 = bigint_add!(bigint_mul!(x286, x274, 2), bigint_mul!(x237, x276, 2), 2);
    let x292: BytePoly_2 = bigint_add!(bigint_mul!(x289, x274, 2), bigint_mul!(x239, x276, 2), 2);
    let x293: BytePoly_3 = bigint_nondet_quot!(ctx, x291, x5, 3);
    let x294: BytePoly_1 = bigint_nondet_rem!(ctx, x291, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x293, x5, 4), x294, 4), x291, 4),
        24387,
        2,
    )?;
    let x295: BytePoly_3 = bigint_nondet_quot!(ctx, x292, x5, 3);
    let x296: BytePoly_1 = bigint_nondet_rem!(ctx, x292, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x295, x5, 4), x296, 4), x292, 4),
        24387,
        2,
    )?;
    let x297: BytePoly_2 = bigint_mul!(x267, x267, 2);
    let x298: BytePoly_3 = bigint_nondet_quot!(ctx, x297, x5, 3);
    let x299: BytePoly_1 = bigint_nondet_rem!(ctx, x297, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x298, x5, 4), x299, 4), x297, 4),
        24387,
        2,
    )?;
    let x300: BytePoly_2 = bigint_add!(bigint_mul!(x299, x0, 2), x4, 2);
    let x301: BytePoly_3 = bigint_nondet_quot!(ctx, x300, x5, 3);
    let x302: BytePoly_1 = bigint_nondet_rem!(ctx, x300, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x301, x5, 4), x302, 4), x300, 4),
        24387,
        2,
    )?;
    let x303: BytePoly_1 = bigint_add!(x273, x273, 1);
    let x304: BytePoly_1 = bigint_nondet_quot!(ctx, x303, x5, 1);
    let x305: BytePoly_1 = bigint_nondet_rem!(ctx, x303, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x304, x5, 2), x305, 2), x303, 2),
        8131,
        2,
    )?;
    let x306: BytePoly_1 = bigint_nondet_inv!(ctx, x305, x5, 1);
    let x307: BytePoly_2 = bigint_mul!(x305, x306, 2);
    let x308: BytePoly_3 = bigint_nondet_quot!(ctx, x307, x5, 3);
    let x309: BytePoly_1 = bigint_nondet_rem!(ctx, x307, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x308, x5, 4), x309, 4), x307, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x309, x2, 1), 34, 1)?;
    let x310: BytePoly_2 = bigint_mul!(x302, x306, 2);
    let x311: BytePoly_3 = bigint_nondet_quot!(ctx, x310, x5, 3);
    let x312: BytePoly_1 = bigint_nondet_rem!(ctx, x310, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x311, x5, 4), x312, 4), x310, 4),
        24387,
        2,
    )?;
    let x313: BytePoly_2 = bigint_mul!(x312, x267, 2);
    let x314: BytePoly_3 = bigint_nondet_quot!(ctx, x313, x5, 3);
    let x315: BytePoly_1 = bigint_nondet_rem!(ctx, x313, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x314, x5, 4), x315, 4), x313, 4),
        24387,
        2,
    )?;
    let x316: BytePoly_1 = bigint_add!(bigint_sub!(x273, x315, 1), x5, 1);
    let x317: BytePoly_1 = bigint_nondet_quot!(ctx, x316, x5, 1);
    let x318: BytePoly_1 = bigint_nondet_rem!(ctx, x316, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x317, x5, 2), x318, 2), x316, 2),
        8131,
        2,
    )?;
    let x319: BytePoly_2 = bigint_mul!(x312, x312, 2);
    let x320: BytePoly_3 = bigint_nondet_quot!(ctx, x319, x5, 3);
    let x321: BytePoly_1 = bigint_nondet_rem!(ctx, x319, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x320, x5, 4), x321, 4), x319, 4),
        24387,
        2,
    )?;
    let x322: BytePoly_1 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x321, x267, 1), x5, 1), x267, 1),
        x5,
        1
    );
    let x323: BytePoly_1 = bigint_nondet_quot!(ctx, x322, x5, 1);
    let x324: BytePoly_1 = bigint_nondet_rem!(ctx, x322, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x323, x5, 2), x324, 2), x322, 2),
        8131,
        2,
    )?;
    let x325: BytePoly_2 = bigint_mul!(x312, x324, 2);
    let x326: BytePoly_3 = bigint_nondet_quot!(ctx, x325, x5, 3);
    let x327: BytePoly_1 = bigint_nondet_rem!(ctx, x325, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x326, x5, 4), x327, 4), x325, 4),
        24387,
        2,
    )?;
    let x328: BytePoly_1 = bigint_add!(bigint_sub!(x5, bigint_add!(x327, x318, 1), 1), x5, 1);
    let x329: BytePoly_1 = bigint_nondet_quot!(ctx, x328, x5, 1);
    let x330: BytePoly_1 = bigint_nondet_rem!(ctx, x328, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x329, x5, 2), x330, 2), x328, 2),
        8131,
        2,
    )?;
    let x331: BytePoly_1 = bigint_nondet_rem!(ctx, x275, x1, 1);
    let x332: BytePoly_1 = bigint_nondet_quot!(ctx, x275, x1, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x332, x1, 2), x331, 2), x275, 2),
        8131,
        2,
    )?;
    let x333: BytePoly_1 = bigint_sub!(x2, x331, 1);
    eqz(ctx, &bigint_mul!(x331, x333, 2), 8131, 2)?;
    let x334: BytePoly_1 = bigint_add!(bigint_sub!(x330, x296, 1), x5, 1);
    let x335: BytePoly_1 = bigint_add!(bigint_sub!(x324, x294, 1), x5, 1);
    let x336: BytePoly_1 = bigint_nondet_inv!(ctx, x335, x5, 1);
    let x337: BytePoly_1 = bigint_nondet_rem!(ctx, bigint_mul!(x334, x336, 2), x5, 1);
    let x338: BytePoly_2 = bigint_add!(bigint_sub!(bigint_mul!(x337, x335, 2), x334, 2), x5, 2);
    let x339: BytePoly_3 = bigint_nondet_quot!(ctx, x338, x5, 3);
    eqz(
        ctx,
        &bigint_sub!(x338, bigint_mul!(x339, x5, 4), 4),
        24387,
        2,
    )?;
    let x340: BytePoly_2 = bigint_mul!(x337, x337, 2);
    let x341: BytePoly_2 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x340, x294, 2), x5, 2), x324, 2),
        x5,
        2
    );
    let x342: BytePoly_3 = bigint_nondet_quot!(ctx, x341, x5, 3);
    let x343: BytePoly_1 = bigint_nondet_rem!(ctx, x341, x5, 1);
    let x344: BytePoly_2 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x5,
                bigint_add!(
                    bigint_mul!(x337, x343, 2),
                    bigint_add!(bigint_sub!(x296, bigint_mul!(x337, x294, 2), 2), x5, 2),
                    2
                ),
                2
            ),
            x5,
            2
        ),
        x5,
        2
    );
    let x345: BytePoly_3 = bigint_nondet_quot!(ctx, x344, x5, 3);
    let x346: BytePoly_1 = bigint_nondet_rem!(ctx, x344, x5, 1);
    let x347: BytePoly_4 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x340, bigint_mul!(x342, x5, 4), 4), x294, 4),
                    x324,
                    4
                ),
                x5,
                4
            ),
            x5,
            4
        ),
        x343,
        4
    );
    eqz(ctx, &x347, 24387, 2)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x345, x5, 4), x346, 4),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x337, bigint_sub!(x294, x343, 1), 2), x296, 2),
                    x5,
                    2
                ),
                x5,
                2
            ),
            4
        ),
        24387,
        2,
    )?;
    let x348: BytePoly_2 = bigint_add!(bigint_mul!(x343, x331, 2), bigint_mul!(x294, x333, 2), 2);
    let x349: BytePoly_2 = bigint_add!(bigint_mul!(x346, x331, 2), bigint_mul!(x296, x333, 2), 2);
    let x350: BytePoly_3 = bigint_nondet_quot!(ctx, x348, x5, 3);
    let x351: BytePoly_1 = bigint_nondet_rem!(ctx, x348, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x350, x5, 4), x351, 4), x348, 4),
        24387,
        2,
    )?;
    let x352: BytePoly_3 = bigint_nondet_quot!(ctx, x349, x5, 3);
    let x353: BytePoly_1 = bigint_nondet_rem!(ctx, x349, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x352, x5, 4), x353, 4), x349, 4),
        24387,
        2,
    )?;
    let x354: BytePoly_2 = bigint_mul!(x324, x324, 2);
    let x355: BytePoly_3 = bigint_nondet_quot!(ctx, x354, x5, 3);
    let x356: BytePoly_1 = bigint_nondet_rem!(ctx, x354, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x355, x5, 4), x356, 4), x354, 4),
        24387,
        2,
    )?;
    let x357: BytePoly_2 = bigint_add!(bigint_mul!(x356, x0, 2), x4, 2);
    let x358: BytePoly_3 = bigint_nondet_quot!(ctx, x357, x5, 3);
    let x359: BytePoly_1 = bigint_nondet_rem!(ctx, x357, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x358, x5, 4), x359, 4), x357, 4),
        24387,
        2,
    )?;
    let x360: BytePoly_1 = bigint_add!(x330, x330, 1);
    let x361: BytePoly_1 = bigint_nondet_quot!(ctx, x360, x5, 1);
    let x362: BytePoly_1 = bigint_nondet_rem!(ctx, x360, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x361, x5, 2), x362, 2), x360, 2),
        8131,
        2,
    )?;
    let x363: BytePoly_1 = bigint_nondet_inv!(ctx, x362, x5, 1);
    let x364: BytePoly_2 = bigint_mul!(x362, x363, 2);
    let x365: BytePoly_3 = bigint_nondet_quot!(ctx, x364, x5, 3);
    let x366: BytePoly_1 = bigint_nondet_rem!(ctx, x364, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x365, x5, 4), x366, 4), x364, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x366, x2, 1), 34, 1)?;
    let x367: BytePoly_2 = bigint_mul!(x359, x363, 2);
    let x368: BytePoly_3 = bigint_nondet_quot!(ctx, x367, x5, 3);
    let x369: BytePoly_1 = bigint_nondet_rem!(ctx, x367, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x368, x5, 4), x369, 4), x367, 4),
        24387,
        2,
    )?;
    let x370: BytePoly_2 = bigint_mul!(x369, x324, 2);
    let x371: BytePoly_3 = bigint_nondet_quot!(ctx, x370, x5, 3);
    let x372: BytePoly_1 = bigint_nondet_rem!(ctx, x370, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x371, x5, 4), x372, 4), x370, 4),
        24387,
        2,
    )?;
    let x373: BytePoly_1 = bigint_add!(bigint_sub!(x330, x372, 1), x5, 1);
    let x374: BytePoly_1 = bigint_nondet_quot!(ctx, x373, x5, 1);
    let x375: BytePoly_1 = bigint_nondet_rem!(ctx, x373, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x374, x5, 2), x375, 2), x373, 2),
        8131,
        2,
    )?;
    let x376: BytePoly_2 = bigint_mul!(x369, x369, 2);
    let x377: BytePoly_3 = bigint_nondet_quot!(ctx, x376, x5, 3);
    let x378: BytePoly_1 = bigint_nondet_rem!(ctx, x376, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x377, x5, 4), x378, 4), x376, 4),
        24387,
        2,
    )?;
    let x379: BytePoly_1 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x378, x324, 1), x5, 1), x324, 1),
        x5,
        1
    );
    let x380: BytePoly_1 = bigint_nondet_quot!(ctx, x379, x5, 1);
    let x381: BytePoly_1 = bigint_nondet_rem!(ctx, x379, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x380, x5, 2), x381, 2), x379, 2),
        8131,
        2,
    )?;
    let x382: BytePoly_2 = bigint_mul!(x369, x381, 2);
    let x383: BytePoly_3 = bigint_nondet_quot!(ctx, x382, x5, 3);
    let x384: BytePoly_1 = bigint_nondet_rem!(ctx, x382, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x383, x5, 4), x384, 4), x382, 4),
        24387,
        2,
    )?;
    let x385: BytePoly_1 = bigint_add!(bigint_sub!(x5, bigint_add!(x384, x375, 1), 1), x5, 1);
    let x386: BytePoly_1 = bigint_nondet_quot!(ctx, x385, x5, 1);
    let x387: BytePoly_1 = bigint_nondet_rem!(ctx, x385, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x386, x5, 2), x387, 2), x385, 2),
        8131,
        2,
    )?;
    let x388: BytePoly_1 = bigint_nondet_rem!(ctx, x332, x1, 1);
    let x389: BytePoly_1 = bigint_nondet_quot!(ctx, x332, x1, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x389, x1, 2), x388, 2), x332, 2),
        8131,
        2,
    )?;
    let x390: BytePoly_1 = bigint_sub!(x2, x388, 1);
    eqz(ctx, &bigint_mul!(x388, x390, 2), 8131, 2)?;
    let x391: BytePoly_1 = bigint_add!(bigint_sub!(x387, x353, 1), x5, 1);
    let x392: BytePoly_1 = bigint_add!(bigint_sub!(x381, x351, 1), x5, 1);
    let x393: BytePoly_1 = bigint_nondet_inv!(ctx, x392, x5, 1);
    let x394: BytePoly_1 = bigint_nondet_rem!(ctx, bigint_mul!(x391, x393, 2), x5, 1);
    let x395: BytePoly_2 = bigint_add!(bigint_sub!(bigint_mul!(x394, x392, 2), x391, 2), x5, 2);
    let x396: BytePoly_3 = bigint_nondet_quot!(ctx, x395, x5, 3);
    eqz(
        ctx,
        &bigint_sub!(x395, bigint_mul!(x396, x5, 4), 4),
        24387,
        2,
    )?;
    let x397: BytePoly_2 = bigint_mul!(x394, x394, 2);
    let x398: BytePoly_2 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x397, x351, 2), x5, 2), x381, 2),
        x5,
        2
    );
    let x399: BytePoly_3 = bigint_nondet_quot!(ctx, x398, x5, 3);
    let x400: BytePoly_1 = bigint_nondet_rem!(ctx, x398, x5, 1);
    let x401: BytePoly_2 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x5,
                bigint_add!(
                    bigint_mul!(x394, x400, 2),
                    bigint_add!(bigint_sub!(x353, bigint_mul!(x394, x351, 2), 2), x5, 2),
                    2
                ),
                2
            ),
            x5,
            2
        ),
        x5,
        2
    );
    let x402: BytePoly_3 = bigint_nondet_quot!(ctx, x401, x5, 3);
    let x403: BytePoly_1 = bigint_nondet_rem!(ctx, x401, x5, 1);
    let x404: BytePoly_4 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x397, bigint_mul!(x399, x5, 4), 4), x351, 4),
                    x381,
                    4
                ),
                x5,
                4
            ),
            x5,
            4
        ),
        x400,
        4
    );
    eqz(ctx, &x404, 24387, 2)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x402, x5, 4), x403, 4),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x394, bigint_sub!(x351, x400, 1), 2), x353, 2),
                    x5,
                    2
                ),
                x5,
                2
            ),
            4
        ),
        24387,
        2,
    )?;
    let x405: BytePoly_2 = bigint_add!(bigint_mul!(x400, x388, 2), bigint_mul!(x351, x390, 2), 2);
    let x406: BytePoly_2 = bigint_add!(bigint_mul!(x403, x388, 2), bigint_mul!(x353, x390, 2), 2);
    let x407: BytePoly_3 = bigint_nondet_quot!(ctx, x405, x5, 3);
    let x408: BytePoly_1 = bigint_nondet_rem!(ctx, x405, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x407, x5, 4), x408, 4), x405, 4),
        24387,
        2,
    )?;
    let x409: BytePoly_3 = bigint_nondet_quot!(ctx, x406, x5, 3);
    let x410: BytePoly_1 = bigint_nondet_rem!(ctx, x406, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x409, x5, 4), x410, 4), x406, 4),
        24387,
        2,
    )?;
    let x411: BytePoly_2 = bigint_mul!(x381, x381, 2);
    let x412: BytePoly_3 = bigint_nondet_quot!(ctx, x411, x5, 3);
    let x413: BytePoly_1 = bigint_nondet_rem!(ctx, x411, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x412, x5, 4), x413, 4), x411, 4),
        24387,
        2,
    )?;
    let x414: BytePoly_2 = bigint_add!(bigint_mul!(x413, x0, 2), x4, 2);
    let x415: BytePoly_3 = bigint_nondet_quot!(ctx, x414, x5, 3);
    let x416: BytePoly_1 = bigint_nondet_rem!(ctx, x414, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x415, x5, 4), x416, 4), x414, 4),
        24387,
        2,
    )?;
    let x417: BytePoly_1 = bigint_add!(x387, x387, 1);
    let x418: BytePoly_1 = bigint_nondet_quot!(ctx, x417, x5, 1);
    let x419: BytePoly_1 = bigint_nondet_rem!(ctx, x417, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x418, x5, 2), x419, 2), x417, 2),
        8131,
        2,
    )?;
    let x420: BytePoly_1 = bigint_nondet_inv!(ctx, x419, x5, 1);
    let x421: BytePoly_2 = bigint_mul!(x419, x420, 2);
    let x422: BytePoly_3 = bigint_nondet_quot!(ctx, x421, x5, 3);
    let x423: BytePoly_1 = bigint_nondet_rem!(ctx, x421, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x422, x5, 4), x423, 4), x421, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x423, x2, 1), 34, 1)?;
    let x424: BytePoly_2 = bigint_mul!(x416, x420, 2);
    let x425: BytePoly_3 = bigint_nondet_quot!(ctx, x424, x5, 3);
    let x426: BytePoly_1 = bigint_nondet_rem!(ctx, x424, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x425, x5, 4), x426, 4), x424, 4),
        24387,
        2,
    )?;
    let x427: BytePoly_2 = bigint_mul!(x426, x381, 2);
    let x428: BytePoly_3 = bigint_nondet_quot!(ctx, x427, x5, 3);
    let x429: BytePoly_1 = bigint_nondet_rem!(ctx, x427, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x428, x5, 4), x429, 4), x427, 4),
        24387,
        2,
    )?;
    let x430: BytePoly_1 = bigint_add!(bigint_sub!(x387, x429, 1), x5, 1);
    let x431: BytePoly_1 = bigint_nondet_quot!(ctx, x430, x5, 1);
    let x432: BytePoly_1 = bigint_nondet_rem!(ctx, x430, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x431, x5, 2), x432, 2), x430, 2),
        8131,
        2,
    )?;
    let x433: BytePoly_2 = bigint_mul!(x426, x426, 2);
    let x434: BytePoly_3 = bigint_nondet_quot!(ctx, x433, x5, 3);
    let x435: BytePoly_1 = bigint_nondet_rem!(ctx, x433, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x434, x5, 4), x435, 4), x433, 4),
        24387,
        2,
    )?;
    let x436: BytePoly_1 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x435, x381, 1), x5, 1), x381, 1),
        x5,
        1
    );
    let x437: BytePoly_1 = bigint_nondet_quot!(ctx, x436, x5, 1);
    let x438: BytePoly_1 = bigint_nondet_rem!(ctx, x436, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x437, x5, 2), x438, 2), x436, 2),
        8131,
        2,
    )?;
    let x439: BytePoly_2 = bigint_mul!(x426, x438, 2);
    let x440: BytePoly_3 = bigint_nondet_quot!(ctx, x439, x5, 3);
    let x441: BytePoly_1 = bigint_nondet_rem!(ctx, x439, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x440, x5, 4), x441, 4), x439, 4),
        24387,
        2,
    )?;
    let x442: BytePoly_1 = bigint_add!(bigint_sub!(x5, bigint_add!(x441, x432, 1), 1), x5, 1);
    let x443: BytePoly_1 = bigint_nondet_quot!(ctx, x442, x5, 1);
    let x444: BytePoly_1 = bigint_nondet_rem!(ctx, x442, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x443, x5, 2), x444, 2), x442, 2),
        8131,
        2,
    )?;
    let x445: BytePoly_1 = bigint_nondet_rem!(ctx, x389, x1, 1);
    let x446: BytePoly_1 = bigint_nondet_quot!(ctx, x389, x1, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x446, x1, 2), x445, 2), x389, 2),
        8131,
        2,
    )?;
    let x447: BytePoly_1 = bigint_sub!(x2, x445, 1);
    eqz(ctx, &bigint_mul!(x445, x447, 2), 8131, 2)?;
    let x448: BytePoly_1 = bigint_add!(bigint_sub!(x444, x410, 1), x5, 1);
    let x449: BytePoly_1 = bigint_add!(bigint_sub!(x438, x408, 1), x5, 1);
    let x450: BytePoly_1 = bigint_nondet_inv!(ctx, x449, x5, 1);
    let x451: BytePoly_1 = bigint_nondet_rem!(ctx, bigint_mul!(x448, x450, 2), x5, 1);
    let x452: BytePoly_2 = bigint_add!(bigint_sub!(bigint_mul!(x451, x449, 2), x448, 2), x5, 2);
    let x453: BytePoly_3 = bigint_nondet_quot!(ctx, x452, x5, 3);
    eqz(
        ctx,
        &bigint_sub!(x452, bigint_mul!(x453, x5, 4), 4),
        24387,
        2,
    )?;
    let x454: BytePoly_2 = bigint_mul!(x451, x451, 2);
    let x455: BytePoly_2 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x454, x408, 2), x5, 2), x438, 2),
        x5,
        2
    );
    let x456: BytePoly_3 = bigint_nondet_quot!(ctx, x455, x5, 3);
    let x457: BytePoly_1 = bigint_nondet_rem!(ctx, x455, x5, 1);
    let x458: BytePoly_2 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x5,
                bigint_add!(
                    bigint_mul!(x451, x457, 2),
                    bigint_add!(bigint_sub!(x410, bigint_mul!(x451, x408, 2), 2), x5, 2),
                    2
                ),
                2
            ),
            x5,
            2
        ),
        x5,
        2
    );
    let x459: BytePoly_3 = bigint_nondet_quot!(ctx, x458, x5, 3);
    let x460: BytePoly_1 = bigint_nondet_rem!(ctx, x458, x5, 1);
    let x461: BytePoly_4 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x454, bigint_mul!(x456, x5, 4), 4), x408, 4),
                    x438,
                    4
                ),
                x5,
                4
            ),
            x5,
            4
        ),
        x457,
        4
    );
    eqz(ctx, &x461, 24387, 2)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x459, x5, 4), x460, 4),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x451, bigint_sub!(x408, x457, 1), 2), x410, 2),
                    x5,
                    2
                ),
                x5,
                2
            ),
            4
        ),
        24387,
        2,
    )?;
    let x462: BytePoly_2 = bigint_add!(bigint_mul!(x457, x445, 2), bigint_mul!(x408, x447, 2), 2);
    let x463: BytePoly_2 = bigint_add!(bigint_mul!(x460, x445, 2), bigint_mul!(x410, x447, 2), 2);
    let x464: BytePoly_3 = bigint_nondet_quot!(ctx, x462, x5, 3);
    let x465: BytePoly_1 = bigint_nondet_rem!(ctx, x462, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x464, x5, 4), x465, 4), x462, 4),
        24387,
        2,
    )?;
    let x466: BytePoly_3 = bigint_nondet_quot!(ctx, x463, x5, 3);
    let x467: BytePoly_1 = bigint_nondet_rem!(ctx, x463, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x466, x5, 4), x467, 4), x463, 4),
        24387,
        2,
    )?;
    let x468: BytePoly_2 = bigint_mul!(x438, x438, 2);
    let x469: BytePoly_3 = bigint_nondet_quot!(ctx, x468, x5, 3);
    let x470: BytePoly_1 = bigint_nondet_rem!(ctx, x468, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x469, x5, 4), x470, 4), x468, 4),
        24387,
        2,
    )?;
    let x471: BytePoly_2 = bigint_add!(bigint_mul!(x470, x0, 2), x4, 2);
    let x472: BytePoly_3 = bigint_nondet_quot!(ctx, x471, x5, 3);
    let x473: BytePoly_1 = bigint_nondet_rem!(ctx, x471, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x472, x5, 4), x473, 4), x471, 4),
        24387,
        2,
    )?;
    let x474: BytePoly_1 = bigint_add!(x444, x444, 1);
    let x475: BytePoly_1 = bigint_nondet_quot!(ctx, x474, x5, 1);
    let x476: BytePoly_1 = bigint_nondet_rem!(ctx, x474, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x475, x5, 2), x476, 2), x474, 2),
        8131,
        2,
    )?;
    let x477: BytePoly_1 = bigint_nondet_inv!(ctx, x476, x5, 1);
    let x478: BytePoly_2 = bigint_mul!(x476, x477, 2);
    let x479: BytePoly_3 = bigint_nondet_quot!(ctx, x478, x5, 3);
    let x480: BytePoly_1 = bigint_nondet_rem!(ctx, x478, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x479, x5, 4), x480, 4), x478, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x480, x2, 1), 34, 1)?;
    let x481: BytePoly_2 = bigint_mul!(x473, x477, 2);
    let x482: BytePoly_3 = bigint_nondet_quot!(ctx, x481, x5, 3);
    let x483: BytePoly_1 = bigint_nondet_rem!(ctx, x481, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x482, x5, 4), x483, 4), x481, 4),
        24387,
        2,
    )?;
    let x484: BytePoly_2 = bigint_mul!(x483, x438, 2);
    let x485: BytePoly_3 = bigint_nondet_quot!(ctx, x484, x5, 3);
    let x486: BytePoly_1 = bigint_nondet_rem!(ctx, x484, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x485, x5, 4), x486, 4), x484, 4),
        24387,
        2,
    )?;
    let x487: BytePoly_1 = bigint_add!(bigint_sub!(x444, x486, 1), x5, 1);
    let x488: BytePoly_1 = bigint_nondet_quot!(ctx, x487, x5, 1);
    let x489: BytePoly_1 = bigint_nondet_rem!(ctx, x487, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x488, x5, 2), x489, 2), x487, 2),
        8131,
        2,
    )?;
    let x490: BytePoly_2 = bigint_mul!(x483, x483, 2);
    let x491: BytePoly_3 = bigint_nondet_quot!(ctx, x490, x5, 3);
    let x492: BytePoly_1 = bigint_nondet_rem!(ctx, x490, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x491, x5, 4), x492, 4), x490, 4),
        24387,
        2,
    )?;
    let x493: BytePoly_1 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x492, x438, 1), x5, 1), x438, 1),
        x5,
        1
    );
    let x494: BytePoly_1 = bigint_nondet_quot!(ctx, x493, x5, 1);
    let x495: BytePoly_1 = bigint_nondet_rem!(ctx, x493, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x494, x5, 2), x495, 2), x493, 2),
        8131,
        2,
    )?;
    let x496: BytePoly_2 = bigint_mul!(x483, x495, 2);
    let x497: BytePoly_3 = bigint_nondet_quot!(ctx, x496, x5, 3);
    let x498: BytePoly_1 = bigint_nondet_rem!(ctx, x496, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x497, x5, 4), x498, 4), x496, 4),
        24387,
        2,
    )?;
    let x499: BytePoly_1 = bigint_add!(bigint_sub!(x5, bigint_add!(x498, x489, 1), 1), x5, 1);
    let x500: BytePoly_1 = bigint_nondet_quot!(ctx, x499, x5, 1);
    let x501: BytePoly_1 = bigint_nondet_rem!(ctx, x499, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x500, x5, 2), x501, 2), x499, 2),
        8131,
        2,
    )?;
    let x502: BytePoly_1 = bigint_sub!(x5, x16, 1);
    let x503: BytePoly_1 = bigint_add!(bigint_sub!(x502, x467, 1), x5, 1);
    let x504: BytePoly_1 = bigint_add!(bigint_sub!(x15, x465, 1), x5, 1);
    let x505: BytePoly_1 = bigint_nondet_inv!(ctx, x504, x5, 1);
    let x506: BytePoly_1 = bigint_nondet_rem!(ctx, bigint_mul!(x503, x505, 2), x5, 1);
    let x507: BytePoly_2 = bigint_add!(bigint_sub!(bigint_mul!(x506, x504, 2), x503, 2), x5, 2);
    let x508: BytePoly_3 = bigint_nondet_quot!(ctx, x507, x5, 3);
    eqz(
        ctx,
        &bigint_sub!(x507, bigint_mul!(x508, x5, 4), 4),
        24387,
        2,
    )?;
    let x509: BytePoly_2 = bigint_mul!(x506, x506, 2);
    let x510: BytePoly_2 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x509, x465, 2), x5, 2), x15, 2),
        x5,
        2
    );
    let x511: BytePoly_3 = bigint_nondet_quot!(ctx, x510, x5, 3);
    let x512: BytePoly_1 = bigint_nondet_rem!(ctx, x510, x5, 1);
    let x513: BytePoly_2 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x5,
                bigint_add!(
                    bigint_mul!(x506, x512, 2),
                    bigint_add!(bigint_sub!(x467, bigint_mul!(x506, x465, 2), 2), x5, 2),
                    2
                ),
                2
            ),
            x5,
            2
        ),
        x5,
        2
    );
    let x514: BytePoly_3 = bigint_nondet_quot!(ctx, x513, x5, 3);
    let x515: BytePoly_1 = bigint_nondet_rem!(ctx, x513, x5, 1);
    let x516: BytePoly_4 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x509, bigint_mul!(x511, x5, 4), 4), x465, 4),
                    x15,
                    4
                ),
                x5,
                4
            ),
            x5,
            4
        ),
        x512,
        4
    );
    eqz(ctx, &x516, 24387, 2)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x514, x5, 4), x515, 4),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x506, bigint_sub!(x465, x512, 1), 2), x467, 2),
                    x5,
                    2
                ),
                x5,
                2
            ),
            4
        ),
        24387,
        2,
    )?;
    let x517: BytePoly_3 = bigint_nondet_quot!(ctx, x24, x5, 3);
    let x518: BytePoly_1 = bigint_nondet_rem!(ctx, x24, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x517, x5, 4), x518, 4), x24, 4),
        24387,
        2,
    )?;
    let x519: BytePoly_2 = bigint_sub!(
        x23,
        bigint_add!(bigint_add!(bigint_mul!(x15, x518, 2), x27, 2), x3, 2),
        2
    );
    let x520: BytePoly_3 = bigint_nondet_quot!(ctx, x519, x5, 3);
    let x521: BytePoly_1 = bigint_nondet_rem!(ctx, x519, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x520, x5, 4), x521, 4), x519, 4),
        24387,
        2,
    )?;
    eqz(ctx, &x521, 34, 1)?;
    let x522: BytePoly_1 = bigint_nondet_rem!(ctx, x40, x1, 1);
    let x523: BytePoly_1 = bigint_nondet_quot!(ctx, x40, x1, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x523, x1, 2), x522, 2), x40, 2),
        8131,
        2,
    )?;
    let x524: BytePoly_1 = bigint_sub!(x2, x522, 1);
    eqz(ctx, &bigint_mul!(x522, x524, 2), 8131, 2)?;
    let x525: BytePoly_1 = bigint_add!(bigint_sub!(x11, x16, 1), x5, 1);
    let x526: BytePoly_1 = bigint_add!(bigint_sub!(x10, x15, 1), x5, 1);
    let x527: BytePoly_1 = bigint_nondet_inv!(ctx, x526, x5, 1);
    let x528: BytePoly_1 = bigint_nondet_rem!(ctx, bigint_mul!(x525, x527, 2), x5, 1);
    let x529: BytePoly_2 = bigint_add!(bigint_sub!(bigint_mul!(x528, x526, 2), x525, 2), x5, 2);
    let x530: BytePoly_3 = bigint_nondet_quot!(ctx, x529, x5, 3);
    eqz(
        ctx,
        &bigint_sub!(x529, bigint_mul!(x530, x5, 4), 4),
        24387,
        2,
    )?;
    let x531: BytePoly_2 = bigint_mul!(x528, x528, 2);
    let x532: BytePoly_2 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x531, x15, 2), x5, 2), x10, 2),
        x5,
        2
    );
    let x533: BytePoly_3 = bigint_nondet_quot!(ctx, x532, x5, 3);
    let x534: BytePoly_1 = bigint_nondet_rem!(ctx, x532, x5, 1);
    let x535: BytePoly_2 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x5,
                bigint_add!(
                    bigint_mul!(x528, x534, 2),
                    bigint_add!(bigint_sub!(x16, bigint_mul!(x528, x15, 2), 2), x5, 2),
                    2
                ),
                2
            ),
            x5,
            2
        ),
        x5,
        2
    );
    let x536: BytePoly_3 = bigint_nondet_quot!(ctx, x535, x5, 3);
    let x537: BytePoly_1 = bigint_nondet_rem!(ctx, x535, x5, 1);
    let x538: BytePoly_4 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x531, bigint_mul!(x533, x5, 4), 4), x15, 4),
                    x10,
                    4
                ),
                x5,
                4
            ),
            x5,
            4
        ),
        x534,
        4
    );
    eqz(ctx, &x538, 24387, 2)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x536, x5, 4), x537, 4),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x528, bigint_sub!(x15, x534, 1), 2), x16, 2),
                    x5,
                    2
                ),
                x5,
                2
            ),
            4
        ),
        24387,
        2,
    )?;
    let x539: BytePoly_2 = bigint_add!(bigint_mul!(x534, x522, 2), bigint_mul!(x15, x524, 2), 2);
    let x540: BytePoly_2 = bigint_add!(bigint_mul!(x537, x522, 2), bigint_mul!(x16, x524, 2), 2);
    let x541: BytePoly_3 = bigint_nondet_quot!(ctx, x539, x5, 3);
    let x542: BytePoly_1 = bigint_nondet_rem!(ctx, x539, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x541, x5, 4), x542, 4), x539, 4),
        24387,
        2,
    )?;
    let x543: BytePoly_3 = bigint_nondet_quot!(ctx, x540, x5, 3);
    let x544: BytePoly_1 = bigint_nondet_rem!(ctx, x540, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x543, x5, 4), x544, 4), x540, 4),
        24387,
        2,
    )?;
    let x545: BytePoly_3 = bigint_nondet_quot!(ctx, x17, x5, 3);
    let x546: BytePoly_1 = bigint_nondet_rem!(ctx, x17, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x545, x5, 4), x546, 4), x17, 4),
        24387,
        2,
    )?;
    let x547: BytePoly_2 = bigint_add!(bigint_mul!(x546, x0, 2), x4, 2);
    let x548: BytePoly_3 = bigint_nondet_quot!(ctx, x547, x5, 3);
    let x549: BytePoly_1 = bigint_nondet_rem!(ctx, x547, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x548, x5, 4), x549, 4), x547, 4),
        24387,
        2,
    )?;
    let x550: BytePoly_1 = bigint_add!(x11, x11, 1);
    let x551: BytePoly_1 = bigint_nondet_quot!(ctx, x550, x5, 1);
    let x552: BytePoly_1 = bigint_nondet_rem!(ctx, x550, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x551, x5, 2), x552, 2), x550, 2),
        8131,
        2,
    )?;
    let x553: BytePoly_1 = bigint_nondet_inv!(ctx, x552, x5, 1);
    let x554: BytePoly_2 = bigint_mul!(x552, x553, 2);
    let x555: BytePoly_3 = bigint_nondet_quot!(ctx, x554, x5, 3);
    let x556: BytePoly_1 = bigint_nondet_rem!(ctx, x554, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x555, x5, 4), x556, 4), x554, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x556, x2, 1), 34, 1)?;
    let x557: BytePoly_2 = bigint_mul!(x549, x553, 2);
    let x558: BytePoly_3 = bigint_nondet_quot!(ctx, x557, x5, 3);
    let x559: BytePoly_1 = bigint_nondet_rem!(ctx, x557, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x558, x5, 4), x559, 4), x557, 4),
        24387,
        2,
    )?;
    let x560: BytePoly_2 = bigint_mul!(x559, x10, 2);
    let x561: BytePoly_3 = bigint_nondet_quot!(ctx, x560, x5, 3);
    let x562: BytePoly_1 = bigint_nondet_rem!(ctx, x560, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x561, x5, 4), x562, 4), x560, 4),
        24387,
        2,
    )?;
    let x563: BytePoly_1 = bigint_add!(bigint_sub!(x11, x562, 1), x5, 1);
    let x564: BytePoly_1 = bigint_nondet_quot!(ctx, x563, x5, 1);
    let x565: BytePoly_1 = bigint_nondet_rem!(ctx, x563, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x564, x5, 2), x565, 2), x563, 2),
        8131,
        2,
    )?;
    let x566: BytePoly_2 = bigint_mul!(x559, x559, 2);
    let x567: BytePoly_3 = bigint_nondet_quot!(ctx, x566, x5, 3);
    let x568: BytePoly_1 = bigint_nondet_rem!(ctx, x566, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x567, x5, 4), x568, 4), x566, 4),
        24387,
        2,
    )?;
    let x569: BytePoly_1 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x568, x10, 1), x5, 1), x10, 1),
        x5,
        1
    );
    let x570: BytePoly_1 = bigint_nondet_quot!(ctx, x569, x5, 1);
    let x571: BytePoly_1 = bigint_nondet_rem!(ctx, x569, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x570, x5, 2), x571, 2), x569, 2),
        8131,
        2,
    )?;
    let x572: BytePoly_2 = bigint_mul!(x559, x571, 2);
    let x573: BytePoly_3 = bigint_nondet_quot!(ctx, x572, x5, 3);
    let x574: BytePoly_1 = bigint_nondet_rem!(ctx, x572, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x573, x5, 4), x574, 4), x572, 4),
        24387,
        2,
    )?;
    let x575: BytePoly_1 = bigint_add!(bigint_sub!(x5, bigint_add!(x574, x565, 1), 1), x5, 1);
    let x576: BytePoly_1 = bigint_nondet_quot!(ctx, x575, x5, 1);
    let x577: BytePoly_1 = bigint_nondet_rem!(ctx, x575, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x576, x5, 2), x577, 2), x575, 2),
        8131,
        2,
    )?;
    let x578: BytePoly_1 = bigint_nondet_rem!(ctx, x523, x1, 1);
    let x579: BytePoly_1 = bigint_nondet_quot!(ctx, x523, x1, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x579, x1, 2), x578, 2), x523, 2),
        8131,
        2,
    )?;
    let x580: BytePoly_1 = bigint_sub!(x2, x578, 1);
    eqz(ctx, &bigint_mul!(x578, x580, 2), 8131, 2)?;
    let x581: BytePoly_1 = bigint_add!(bigint_sub!(x577, x544, 1), x5, 1);
    let x582: BytePoly_1 = bigint_add!(bigint_sub!(x571, x542, 1), x5, 1);
    let x583: BytePoly_1 = bigint_nondet_inv!(ctx, x582, x5, 1);
    let x584: BytePoly_1 = bigint_nondet_rem!(ctx, bigint_mul!(x581, x583, 2), x5, 1);
    let x585: BytePoly_2 = bigint_add!(bigint_sub!(bigint_mul!(x584, x582, 2), x581, 2), x5, 2);
    let x586: BytePoly_3 = bigint_nondet_quot!(ctx, x585, x5, 3);
    eqz(
        ctx,
        &bigint_sub!(x585, bigint_mul!(x586, x5, 4), 4),
        24387,
        2,
    )?;
    let x587: BytePoly_2 = bigint_mul!(x584, x584, 2);
    let x588: BytePoly_2 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x587, x542, 2), x5, 2), x571, 2),
        x5,
        2
    );
    let x589: BytePoly_3 = bigint_nondet_quot!(ctx, x588, x5, 3);
    let x590: BytePoly_1 = bigint_nondet_rem!(ctx, x588, x5, 1);
    let x591: BytePoly_2 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x5,
                bigint_add!(
                    bigint_mul!(x584, x590, 2),
                    bigint_add!(bigint_sub!(x544, bigint_mul!(x584, x542, 2), 2), x5, 2),
                    2
                ),
                2
            ),
            x5,
            2
        ),
        x5,
        2
    );
    let x592: BytePoly_3 = bigint_nondet_quot!(ctx, x591, x5, 3);
    let x593: BytePoly_1 = bigint_nondet_rem!(ctx, x591, x5, 1);
    let x594: BytePoly_4 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x587, bigint_mul!(x589, x5, 4), 4), x542, 4),
                    x571,
                    4
                ),
                x5,
                4
            ),
            x5,
            4
        ),
        x590,
        4
    );
    eqz(ctx, &x594, 24387, 2)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x592, x5, 4), x593, 4),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x584, bigint_sub!(x542, x590, 1), 2), x544, 2),
                    x5,
                    2
                ),
                x5,
                2
            ),
            4
        ),
        24387,
        2,
    )?;
    let x595: BytePoly_2 = bigint_add!(bigint_mul!(x590, x578, 2), bigint_mul!(x542, x580, 2), 2);
    let x596: BytePoly_2 = bigint_add!(bigint_mul!(x593, x578, 2), bigint_mul!(x544, x580, 2), 2);
    let x597: BytePoly_3 = bigint_nondet_quot!(ctx, x595, x5, 3);
    let x598: BytePoly_1 = bigint_nondet_rem!(ctx, x595, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x597, x5, 4), x598, 4), x595, 4),
        24387,
        2,
    )?;
    let x599: BytePoly_3 = bigint_nondet_quot!(ctx, x596, x5, 3);
    let x600: BytePoly_1 = bigint_nondet_rem!(ctx, x596, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x599, x5, 4), x600, 4), x596, 4),
        24387,
        2,
    )?;
    let x601: BytePoly_2 = bigint_mul!(x571, x571, 2);
    let x602: BytePoly_3 = bigint_nondet_quot!(ctx, x601, x5, 3);
    let x603: BytePoly_1 = bigint_nondet_rem!(ctx, x601, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x602, x5, 4), x603, 4), x601, 4),
        24387,
        2,
    )?;
    let x604: BytePoly_2 = bigint_add!(bigint_mul!(x603, x0, 2), x4, 2);
    let x605: BytePoly_3 = bigint_nondet_quot!(ctx, x604, x5, 3);
    let x606: BytePoly_1 = bigint_nondet_rem!(ctx, x604, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x605, x5, 4), x606, 4), x604, 4),
        24387,
        2,
    )?;
    let x607: BytePoly_1 = bigint_add!(x577, x577, 1);
    let x608: BytePoly_1 = bigint_nondet_quot!(ctx, x607, x5, 1);
    let x609: BytePoly_1 = bigint_nondet_rem!(ctx, x607, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x608, x5, 2), x609, 2), x607, 2),
        8131,
        2,
    )?;
    let x610: BytePoly_1 = bigint_nondet_inv!(ctx, x609, x5, 1);
    let x611: BytePoly_2 = bigint_mul!(x609, x610, 2);
    let x612: BytePoly_3 = bigint_nondet_quot!(ctx, x611, x5, 3);
    let x613: BytePoly_1 = bigint_nondet_rem!(ctx, x611, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x612, x5, 4), x613, 4), x611, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x613, x2, 1), 34, 1)?;
    let x614: BytePoly_2 = bigint_mul!(x606, x610, 2);
    let x615: BytePoly_3 = bigint_nondet_quot!(ctx, x614, x5, 3);
    let x616: BytePoly_1 = bigint_nondet_rem!(ctx, x614, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x615, x5, 4), x616, 4), x614, 4),
        24387,
        2,
    )?;
    let x617: BytePoly_2 = bigint_mul!(x616, x571, 2);
    let x618: BytePoly_3 = bigint_nondet_quot!(ctx, x617, x5, 3);
    let x619: BytePoly_1 = bigint_nondet_rem!(ctx, x617, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x618, x5, 4), x619, 4), x617, 4),
        24387,
        2,
    )?;
    let x620: BytePoly_1 = bigint_add!(bigint_sub!(x577, x619, 1), x5, 1);
    let x621: BytePoly_1 = bigint_nondet_quot!(ctx, x620, x5, 1);
    let x622: BytePoly_1 = bigint_nondet_rem!(ctx, x620, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x621, x5, 2), x622, 2), x620, 2),
        8131,
        2,
    )?;
    let x623: BytePoly_2 = bigint_mul!(x616, x616, 2);
    let x624: BytePoly_3 = bigint_nondet_quot!(ctx, x623, x5, 3);
    let x625: BytePoly_1 = bigint_nondet_rem!(ctx, x623, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x624, x5, 4), x625, 4), x623, 4),
        24387,
        2,
    )?;
    let x626: BytePoly_1 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x625, x571, 1), x5, 1), x571, 1),
        x5,
        1
    );
    let x627: BytePoly_1 = bigint_nondet_quot!(ctx, x626, x5, 1);
    let x628: BytePoly_1 = bigint_nondet_rem!(ctx, x626, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x627, x5, 2), x628, 2), x626, 2),
        8131,
        2,
    )?;
    let x629: BytePoly_2 = bigint_mul!(x616, x628, 2);
    let x630: BytePoly_3 = bigint_nondet_quot!(ctx, x629, x5, 3);
    let x631: BytePoly_1 = bigint_nondet_rem!(ctx, x629, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x630, x5, 4), x631, 4), x629, 4),
        24387,
        2,
    )?;
    let x632: BytePoly_1 = bigint_add!(bigint_sub!(x5, bigint_add!(x631, x622, 1), 1), x5, 1);
    let x633: BytePoly_1 = bigint_nondet_quot!(ctx, x632, x5, 1);
    let x634: BytePoly_1 = bigint_nondet_rem!(ctx, x632, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x633, x5, 2), x634, 2), x632, 2),
        8131,
        2,
    )?;
    let x635: BytePoly_1 = bigint_nondet_rem!(ctx, x579, x1, 1);
    let x636: BytePoly_1 = bigint_nondet_quot!(ctx, x579, x1, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x636, x1, 2), x635, 2), x579, 2),
        8131,
        2,
    )?;
    let x637: BytePoly_1 = bigint_sub!(x2, x635, 1);
    eqz(ctx, &bigint_mul!(x635, x637, 2), 8131, 2)?;
    let x638: BytePoly_1 = bigint_add!(bigint_sub!(x634, x600, 1), x5, 1);
    let x639: BytePoly_1 = bigint_add!(bigint_sub!(x628, x598, 1), x5, 1);
    let x640: BytePoly_1 = bigint_nondet_inv!(ctx, x639, x5, 1);
    let x641: BytePoly_1 = bigint_nondet_rem!(ctx, bigint_mul!(x638, x640, 2), x5, 1);
    let x642: BytePoly_2 = bigint_add!(bigint_sub!(bigint_mul!(x641, x639, 2), x638, 2), x5, 2);
    let x643: BytePoly_3 = bigint_nondet_quot!(ctx, x642, x5, 3);
    eqz(
        ctx,
        &bigint_sub!(x642, bigint_mul!(x643, x5, 4), 4),
        24387,
        2,
    )?;
    let x644: BytePoly_2 = bigint_mul!(x641, x641, 2);
    let x645: BytePoly_2 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x644, x598, 2), x5, 2), x628, 2),
        x5,
        2
    );
    let x646: BytePoly_3 = bigint_nondet_quot!(ctx, x645, x5, 3);
    let x647: BytePoly_1 = bigint_nondet_rem!(ctx, x645, x5, 1);
    let x648: BytePoly_2 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x5,
                bigint_add!(
                    bigint_mul!(x641, x647, 2),
                    bigint_add!(bigint_sub!(x600, bigint_mul!(x641, x598, 2), 2), x5, 2),
                    2
                ),
                2
            ),
            x5,
            2
        ),
        x5,
        2
    );
    let x649: BytePoly_3 = bigint_nondet_quot!(ctx, x648, x5, 3);
    let x650: BytePoly_1 = bigint_nondet_rem!(ctx, x648, x5, 1);
    let x651: BytePoly_4 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x644, bigint_mul!(x646, x5, 4), 4), x598, 4),
                    x628,
                    4
                ),
                x5,
                4
            ),
            x5,
            4
        ),
        x647,
        4
    );
    eqz(ctx, &x651, 24387, 2)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x649, x5, 4), x650, 4),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x641, bigint_sub!(x598, x647, 1), 2), x600, 2),
                    x5,
                    2
                ),
                x5,
                2
            ),
            4
        ),
        24387,
        2,
    )?;
    let x652: BytePoly_2 = bigint_add!(bigint_mul!(x647, x635, 2), bigint_mul!(x598, x637, 2), 2);
    let x653: BytePoly_2 = bigint_add!(bigint_mul!(x650, x635, 2), bigint_mul!(x600, x637, 2), 2);
    let x654: BytePoly_3 = bigint_nondet_quot!(ctx, x652, x5, 3);
    let x655: BytePoly_1 = bigint_nondet_rem!(ctx, x652, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x654, x5, 4), x655, 4), x652, 4),
        24387,
        2,
    )?;
    let x656: BytePoly_3 = bigint_nondet_quot!(ctx, x653, x5, 3);
    let x657: BytePoly_1 = bigint_nondet_rem!(ctx, x653, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x656, x5, 4), x657, 4), x653, 4),
        24387,
        2,
    )?;
    let x658: BytePoly_2 = bigint_mul!(x628, x628, 2);
    let x659: BytePoly_3 = bigint_nondet_quot!(ctx, x658, x5, 3);
    let x660: BytePoly_1 = bigint_nondet_rem!(ctx, x658, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x659, x5, 4), x660, 4), x658, 4),
        24387,
        2,
    )?;
    let x661: BytePoly_2 = bigint_add!(bigint_mul!(x660, x0, 2), x4, 2);
    let x662: BytePoly_3 = bigint_nondet_quot!(ctx, x661, x5, 3);
    let x663: BytePoly_1 = bigint_nondet_rem!(ctx, x661, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x662, x5, 4), x663, 4), x661, 4),
        24387,
        2,
    )?;
    let x664: BytePoly_1 = bigint_add!(x634, x634, 1);
    let x665: BytePoly_1 = bigint_nondet_quot!(ctx, x664, x5, 1);
    let x666: BytePoly_1 = bigint_nondet_rem!(ctx, x664, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x665, x5, 2), x666, 2), x664, 2),
        8131,
        2,
    )?;
    let x667: BytePoly_1 = bigint_nondet_inv!(ctx, x666, x5, 1);
    let x668: BytePoly_2 = bigint_mul!(x666, x667, 2);
    let x669: BytePoly_3 = bigint_nondet_quot!(ctx, x668, x5, 3);
    let x670: BytePoly_1 = bigint_nondet_rem!(ctx, x668, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x669, x5, 4), x670, 4), x668, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x670, x2, 1), 34, 1)?;
    let x671: BytePoly_2 = bigint_mul!(x663, x667, 2);
    let x672: BytePoly_3 = bigint_nondet_quot!(ctx, x671, x5, 3);
    let x673: BytePoly_1 = bigint_nondet_rem!(ctx, x671, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x672, x5, 4), x673, 4), x671, 4),
        24387,
        2,
    )?;
    let x674: BytePoly_2 = bigint_mul!(x673, x628, 2);
    let x675: BytePoly_3 = bigint_nondet_quot!(ctx, x674, x5, 3);
    let x676: BytePoly_1 = bigint_nondet_rem!(ctx, x674, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x675, x5, 4), x676, 4), x674, 4),
        24387,
        2,
    )?;
    let x677: BytePoly_1 = bigint_add!(bigint_sub!(x634, x676, 1), x5, 1);
    let x678: BytePoly_1 = bigint_nondet_quot!(ctx, x677, x5, 1);
    let x679: BytePoly_1 = bigint_nondet_rem!(ctx, x677, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x678, x5, 2), x679, 2), x677, 2),
        8131,
        2,
    )?;
    let x680: BytePoly_2 = bigint_mul!(x673, x673, 2);
    let x681: BytePoly_3 = bigint_nondet_quot!(ctx, x680, x5, 3);
    let x682: BytePoly_1 = bigint_nondet_rem!(ctx, x680, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x681, x5, 4), x682, 4), x680, 4),
        24387,
        2,
    )?;
    let x683: BytePoly_1 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x682, x628, 1), x5, 1), x628, 1),
        x5,
        1
    );
    let x684: BytePoly_1 = bigint_nondet_quot!(ctx, x683, x5, 1);
    let x685: BytePoly_1 = bigint_nondet_rem!(ctx, x683, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x684, x5, 2), x685, 2), x683, 2),
        8131,
        2,
    )?;
    let x686: BytePoly_2 = bigint_mul!(x673, x685, 2);
    let x687: BytePoly_3 = bigint_nondet_quot!(ctx, x686, x5, 3);
    let x688: BytePoly_1 = bigint_nondet_rem!(ctx, x686, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x687, x5, 4), x688, 4), x686, 4),
        24387,
        2,
    )?;
    let x689: BytePoly_1 = bigint_add!(bigint_sub!(x5, bigint_add!(x688, x679, 1), 1), x5, 1);
    let x690: BytePoly_1 = bigint_nondet_quot!(ctx, x689, x5, 1);
    let x691: BytePoly_1 = bigint_nondet_rem!(ctx, x689, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x690, x5, 2), x691, 2), x689, 2),
        8131,
        2,
    )?;
    let x692: BytePoly_1 = bigint_nondet_rem!(ctx, x636, x1, 1);
    let x693: BytePoly_1 = bigint_nondet_quot!(ctx, x636, x1, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x693, x1, 2), x692, 2), x636, 2),
        8131,
        2,
    )?;
    let x694: BytePoly_1 = bigint_sub!(x2, x692, 1);
    eqz(ctx, &bigint_mul!(x692, x694, 2), 8131, 2)?;
    let x695: BytePoly_1 = bigint_add!(bigint_sub!(x691, x657, 1), x5, 1);
    let x696: BytePoly_1 = bigint_add!(bigint_sub!(x685, x655, 1), x5, 1);
    let x697: BytePoly_1 = bigint_nondet_inv!(ctx, x696, x5, 1);
    let x698: BytePoly_1 = bigint_nondet_rem!(ctx, bigint_mul!(x695, x697, 2), x5, 1);
    let x699: BytePoly_2 = bigint_add!(bigint_sub!(bigint_mul!(x698, x696, 2), x695, 2), x5, 2);
    let x700: BytePoly_3 = bigint_nondet_quot!(ctx, x699, x5, 3);
    eqz(
        ctx,
        &bigint_sub!(x699, bigint_mul!(x700, x5, 4), 4),
        24387,
        2,
    )?;
    let x701: BytePoly_2 = bigint_mul!(x698, x698, 2);
    let x702: BytePoly_2 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x701, x655, 2), x5, 2), x685, 2),
        x5,
        2
    );
    let x703: BytePoly_3 = bigint_nondet_quot!(ctx, x702, x5, 3);
    let x704: BytePoly_1 = bigint_nondet_rem!(ctx, x702, x5, 1);
    let x705: BytePoly_2 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x5,
                bigint_add!(
                    bigint_mul!(x698, x704, 2),
                    bigint_add!(bigint_sub!(x657, bigint_mul!(x698, x655, 2), 2), x5, 2),
                    2
                ),
                2
            ),
            x5,
            2
        ),
        x5,
        2
    );
    let x706: BytePoly_3 = bigint_nondet_quot!(ctx, x705, x5, 3);
    let x707: BytePoly_1 = bigint_nondet_rem!(ctx, x705, x5, 1);
    let x708: BytePoly_4 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x701, bigint_mul!(x703, x5, 4), 4), x655, 4),
                    x685,
                    4
                ),
                x5,
                4
            ),
            x5,
            4
        ),
        x704,
        4
    );
    eqz(ctx, &x708, 24387, 2)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x706, x5, 4), x707, 4),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x698, bigint_sub!(x655, x704, 1), 2), x657, 2),
                    x5,
                    2
                ),
                x5,
                2
            ),
            4
        ),
        24387,
        2,
    )?;
    let x709: BytePoly_2 = bigint_add!(bigint_mul!(x704, x692, 2), bigint_mul!(x655, x694, 2), 2);
    let x710: BytePoly_2 = bigint_add!(bigint_mul!(x707, x692, 2), bigint_mul!(x657, x694, 2), 2);
    let x711: BytePoly_3 = bigint_nondet_quot!(ctx, x709, x5, 3);
    let x712: BytePoly_1 = bigint_nondet_rem!(ctx, x709, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x711, x5, 4), x712, 4), x709, 4),
        24387,
        2,
    )?;
    let x713: BytePoly_3 = bigint_nondet_quot!(ctx, x710, x5, 3);
    let x714: BytePoly_1 = bigint_nondet_rem!(ctx, x710, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x713, x5, 4), x714, 4), x710, 4),
        24387,
        2,
    )?;
    let x715: BytePoly_2 = bigint_mul!(x685, x685, 2);
    let x716: BytePoly_3 = bigint_nondet_quot!(ctx, x715, x5, 3);
    let x717: BytePoly_1 = bigint_nondet_rem!(ctx, x715, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x716, x5, 4), x717, 4), x715, 4),
        24387,
        2,
    )?;
    let x718: BytePoly_2 = bigint_add!(bigint_mul!(x717, x0, 2), x4, 2);
    let x719: BytePoly_3 = bigint_nondet_quot!(ctx, x718, x5, 3);
    let x720: BytePoly_1 = bigint_nondet_rem!(ctx, x718, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x719, x5, 4), x720, 4), x718, 4),
        24387,
        2,
    )?;
    let x721: BytePoly_1 = bigint_add!(x691, x691, 1);
    let x722: BytePoly_1 = bigint_nondet_quot!(ctx, x721, x5, 1);
    let x723: BytePoly_1 = bigint_nondet_rem!(ctx, x721, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x722, x5, 2), x723, 2), x721, 2),
        8131,
        2,
    )?;
    let x724: BytePoly_1 = bigint_nondet_inv!(ctx, x723, x5, 1);
    let x725: BytePoly_2 = bigint_mul!(x723, x724, 2);
    let x726: BytePoly_3 = bigint_nondet_quot!(ctx, x725, x5, 3);
    let x727: BytePoly_1 = bigint_nondet_rem!(ctx, x725, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x726, x5, 4), x727, 4), x725, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x727, x2, 1), 34, 1)?;
    let x728: BytePoly_2 = bigint_mul!(x720, x724, 2);
    let x729: BytePoly_3 = bigint_nondet_quot!(ctx, x728, x5, 3);
    let x730: BytePoly_1 = bigint_nondet_rem!(ctx, x728, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x729, x5, 4), x730, 4), x728, 4),
        24387,
        2,
    )?;
    let x731: BytePoly_2 = bigint_mul!(x730, x685, 2);
    let x732: BytePoly_3 = bigint_nondet_quot!(ctx, x731, x5, 3);
    let x733: BytePoly_1 = bigint_nondet_rem!(ctx, x731, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x732, x5, 4), x733, 4), x731, 4),
        24387,
        2,
    )?;
    let x734: BytePoly_1 = bigint_add!(bigint_sub!(x691, x733, 1), x5, 1);
    let x735: BytePoly_1 = bigint_nondet_quot!(ctx, x734, x5, 1);
    let x736: BytePoly_1 = bigint_nondet_rem!(ctx, x734, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x735, x5, 2), x736, 2), x734, 2),
        8131,
        2,
    )?;
    let x737: BytePoly_2 = bigint_mul!(x730, x730, 2);
    let x738: BytePoly_3 = bigint_nondet_quot!(ctx, x737, x5, 3);
    let x739: BytePoly_1 = bigint_nondet_rem!(ctx, x737, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x738, x5, 4), x739, 4), x737, 4),
        24387,
        2,
    )?;
    let x740: BytePoly_1 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x739, x685, 1), x5, 1), x685, 1),
        x5,
        1
    );
    let x741: BytePoly_1 = bigint_nondet_quot!(ctx, x740, x5, 1);
    let x742: BytePoly_1 = bigint_nondet_rem!(ctx, x740, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x741, x5, 2), x742, 2), x740, 2),
        8131,
        2,
    )?;
    let x743: BytePoly_2 = bigint_mul!(x730, x742, 2);
    let x744: BytePoly_3 = bigint_nondet_quot!(ctx, x743, x5, 3);
    let x745: BytePoly_1 = bigint_nondet_rem!(ctx, x743, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x744, x5, 4), x745, 4), x743, 4),
        24387,
        2,
    )?;
    let x746: BytePoly_1 = bigint_add!(bigint_sub!(x5, bigint_add!(x745, x736, 1), 1), x5, 1);
    let x747: BytePoly_1 = bigint_nondet_quot!(ctx, x746, x5, 1);
    let x748: BytePoly_1 = bigint_nondet_rem!(ctx, x746, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x747, x5, 2), x748, 2), x746, 2),
        8131,
        2,
    )?;
    let x749: BytePoly_1 = bigint_nondet_rem!(ctx, x693, x1, 1);
    let x750: BytePoly_1 = bigint_nondet_quot!(ctx, x693, x1, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x750, x1, 2), x749, 2), x693, 2),
        8131,
        2,
    )?;
    let x751: BytePoly_1 = bigint_sub!(x2, x749, 1);
    eqz(ctx, &bigint_mul!(x749, x751, 2), 8131, 2)?;
    let x752: BytePoly_1 = bigint_add!(bigint_sub!(x748, x714, 1), x5, 1);
    let x753: BytePoly_1 = bigint_add!(bigint_sub!(x742, x712, 1), x5, 1);
    let x754: BytePoly_1 = bigint_nondet_inv!(ctx, x753, x5, 1);
    let x755: BytePoly_1 = bigint_nondet_rem!(ctx, bigint_mul!(x752, x754, 2), x5, 1);
    let x756: BytePoly_2 = bigint_add!(bigint_sub!(bigint_mul!(x755, x753, 2), x752, 2), x5, 2);
    let x757: BytePoly_3 = bigint_nondet_quot!(ctx, x756, x5, 3);
    eqz(
        ctx,
        &bigint_sub!(x756, bigint_mul!(x757, x5, 4), 4),
        24387,
        2,
    )?;
    let x758: BytePoly_2 = bigint_mul!(x755, x755, 2);
    let x759: BytePoly_2 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x758, x712, 2), x5, 2), x742, 2),
        x5,
        2
    );
    let x760: BytePoly_3 = bigint_nondet_quot!(ctx, x759, x5, 3);
    let x761: BytePoly_1 = bigint_nondet_rem!(ctx, x759, x5, 1);
    let x762: BytePoly_2 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x5,
                bigint_add!(
                    bigint_mul!(x755, x761, 2),
                    bigint_add!(bigint_sub!(x714, bigint_mul!(x755, x712, 2), 2), x5, 2),
                    2
                ),
                2
            ),
            x5,
            2
        ),
        x5,
        2
    );
    let x763: BytePoly_3 = bigint_nondet_quot!(ctx, x762, x5, 3);
    let x764: BytePoly_1 = bigint_nondet_rem!(ctx, x762, x5, 1);
    let x765: BytePoly_4 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x758, bigint_mul!(x760, x5, 4), 4), x712, 4),
                    x742,
                    4
                ),
                x5,
                4
            ),
            x5,
            4
        ),
        x761,
        4
    );
    eqz(ctx, &x765, 24387, 2)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x763, x5, 4), x764, 4),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x755, bigint_sub!(x712, x761, 1), 2), x714, 2),
                    x5,
                    2
                ),
                x5,
                2
            ),
            4
        ),
        24387,
        2,
    )?;
    let x766: BytePoly_2 = bigint_add!(bigint_mul!(x761, x749, 2), bigint_mul!(x712, x751, 2), 2);
    let x767: BytePoly_2 = bigint_add!(bigint_mul!(x764, x749, 2), bigint_mul!(x714, x751, 2), 2);
    let x768: BytePoly_3 = bigint_nondet_quot!(ctx, x766, x5, 3);
    let x769: BytePoly_1 = bigint_nondet_rem!(ctx, x766, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x768, x5, 4), x769, 4), x766, 4),
        24387,
        2,
    )?;
    let x770: BytePoly_3 = bigint_nondet_quot!(ctx, x767, x5, 3);
    let x771: BytePoly_1 = bigint_nondet_rem!(ctx, x767, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x770, x5, 4), x771, 4), x767, 4),
        24387,
        2,
    )?;
    let x772: BytePoly_2 = bigint_mul!(x742, x742, 2);
    let x773: BytePoly_3 = bigint_nondet_quot!(ctx, x772, x5, 3);
    let x774: BytePoly_1 = bigint_nondet_rem!(ctx, x772, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x773, x5, 4), x774, 4), x772, 4),
        24387,
        2,
    )?;
    let x775: BytePoly_2 = bigint_add!(bigint_mul!(x774, x0, 2), x4, 2);
    let x776: BytePoly_3 = bigint_nondet_quot!(ctx, x775, x5, 3);
    let x777: BytePoly_1 = bigint_nondet_rem!(ctx, x775, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x776, x5, 4), x777, 4), x775, 4),
        24387,
        2,
    )?;
    let x778: BytePoly_1 = bigint_add!(x748, x748, 1);
    let x779: BytePoly_1 = bigint_nondet_quot!(ctx, x778, x5, 1);
    let x780: BytePoly_1 = bigint_nondet_rem!(ctx, x778, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x779, x5, 2), x780, 2), x778, 2),
        8131,
        2,
    )?;
    let x781: BytePoly_1 = bigint_nondet_inv!(ctx, x780, x5, 1);
    let x782: BytePoly_2 = bigint_mul!(x780, x781, 2);
    let x783: BytePoly_3 = bigint_nondet_quot!(ctx, x782, x5, 3);
    let x784: BytePoly_1 = bigint_nondet_rem!(ctx, x782, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x783, x5, 4), x784, 4), x782, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x784, x2, 1), 34, 1)?;
    let x785: BytePoly_2 = bigint_mul!(x777, x781, 2);
    let x786: BytePoly_3 = bigint_nondet_quot!(ctx, x785, x5, 3);
    let x787: BytePoly_1 = bigint_nondet_rem!(ctx, x785, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x786, x5, 4), x787, 4), x785, 4),
        24387,
        2,
    )?;
    let x788: BytePoly_2 = bigint_mul!(x787, x742, 2);
    let x789: BytePoly_3 = bigint_nondet_quot!(ctx, x788, x5, 3);
    let x790: BytePoly_1 = bigint_nondet_rem!(ctx, x788, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x789, x5, 4), x790, 4), x788, 4),
        24387,
        2,
    )?;
    let x791: BytePoly_1 = bigint_add!(bigint_sub!(x748, x790, 1), x5, 1);
    let x792: BytePoly_1 = bigint_nondet_quot!(ctx, x791, x5, 1);
    let x793: BytePoly_1 = bigint_nondet_rem!(ctx, x791, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x792, x5, 2), x793, 2), x791, 2),
        8131,
        2,
    )?;
    let x794: BytePoly_2 = bigint_mul!(x787, x787, 2);
    let x795: BytePoly_3 = bigint_nondet_quot!(ctx, x794, x5, 3);
    let x796: BytePoly_1 = bigint_nondet_rem!(ctx, x794, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x795, x5, 4), x796, 4), x794, 4),
        24387,
        2,
    )?;
    let x797: BytePoly_1 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x796, x742, 1), x5, 1), x742, 1),
        x5,
        1
    );
    let x798: BytePoly_1 = bigint_nondet_quot!(ctx, x797, x5, 1);
    let x799: BytePoly_1 = bigint_nondet_rem!(ctx, x797, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x798, x5, 2), x799, 2), x797, 2),
        8131,
        2,
    )?;
    let x800: BytePoly_2 = bigint_mul!(x787, x799, 2);
    let x801: BytePoly_3 = bigint_nondet_quot!(ctx, x800, x5, 3);
    let x802: BytePoly_1 = bigint_nondet_rem!(ctx, x800, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x801, x5, 4), x802, 4), x800, 4),
        24387,
        2,
    )?;
    let x803: BytePoly_1 = bigint_add!(bigint_sub!(x5, bigint_add!(x802, x793, 1), 1), x5, 1);
    let x804: BytePoly_1 = bigint_nondet_quot!(ctx, x803, x5, 1);
    let x805: BytePoly_1 = bigint_nondet_rem!(ctx, x803, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x804, x5, 2), x805, 2), x803, 2),
        8131,
        2,
    )?;
    let x806: BytePoly_1 = bigint_nondet_rem!(ctx, x750, x1, 1);
    let x807: BytePoly_1 = bigint_nondet_quot!(ctx, x750, x1, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x807, x1, 2), x806, 2), x750, 2),
        8131,
        2,
    )?;
    let x808: BytePoly_1 = bigint_sub!(x2, x806, 1);
    eqz(ctx, &bigint_mul!(x806, x808, 2), 8131, 2)?;
    let x809: BytePoly_1 = bigint_add!(bigint_sub!(x805, x771, 1), x5, 1);
    let x810: BytePoly_1 = bigint_add!(bigint_sub!(x799, x769, 1), x5, 1);
    let x811: BytePoly_1 = bigint_nondet_inv!(ctx, x810, x5, 1);
    let x812: BytePoly_1 = bigint_nondet_rem!(ctx, bigint_mul!(x809, x811, 2), x5, 1);
    let x813: BytePoly_2 = bigint_add!(bigint_sub!(bigint_mul!(x812, x810, 2), x809, 2), x5, 2);
    let x814: BytePoly_3 = bigint_nondet_quot!(ctx, x813, x5, 3);
    eqz(
        ctx,
        &bigint_sub!(x813, bigint_mul!(x814, x5, 4), 4),
        24387,
        2,
    )?;
    let x815: BytePoly_2 = bigint_mul!(x812, x812, 2);
    let x816: BytePoly_2 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x815, x769, 2), x5, 2), x799, 2),
        x5,
        2
    );
    let x817: BytePoly_3 = bigint_nondet_quot!(ctx, x816, x5, 3);
    let x818: BytePoly_1 = bigint_nondet_rem!(ctx, x816, x5, 1);
    let x819: BytePoly_2 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x5,
                bigint_add!(
                    bigint_mul!(x812, x818, 2),
                    bigint_add!(bigint_sub!(x771, bigint_mul!(x812, x769, 2), 2), x5, 2),
                    2
                ),
                2
            ),
            x5,
            2
        ),
        x5,
        2
    );
    let x820: BytePoly_3 = bigint_nondet_quot!(ctx, x819, x5, 3);
    let x821: BytePoly_1 = bigint_nondet_rem!(ctx, x819, x5, 1);
    let x822: BytePoly_4 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x815, bigint_mul!(x817, x5, 4), 4), x769, 4),
                    x799,
                    4
                ),
                x5,
                4
            ),
            x5,
            4
        ),
        x818,
        4
    );
    eqz(ctx, &x822, 24387, 2)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x820, x5, 4), x821, 4),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x812, bigint_sub!(x769, x818, 1), 2), x771, 2),
                    x5,
                    2
                ),
                x5,
                2
            ),
            4
        ),
        24387,
        2,
    )?;
    let x823: BytePoly_2 = bigint_add!(bigint_mul!(x818, x806, 2), bigint_mul!(x769, x808, 2), 2);
    let x824: BytePoly_2 = bigint_add!(bigint_mul!(x821, x806, 2), bigint_mul!(x771, x808, 2), 2);
    let x825: BytePoly_3 = bigint_nondet_quot!(ctx, x823, x5, 3);
    let x826: BytePoly_1 = bigint_nondet_rem!(ctx, x823, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x825, x5, 4), x826, 4), x823, 4),
        24387,
        2,
    )?;
    let x827: BytePoly_3 = bigint_nondet_quot!(ctx, x824, x5, 3);
    let x828: BytePoly_1 = bigint_nondet_rem!(ctx, x824, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x827, x5, 4), x828, 4), x824, 4),
        24387,
        2,
    )?;
    let x829: BytePoly_2 = bigint_mul!(x799, x799, 2);
    let x830: BytePoly_3 = bigint_nondet_quot!(ctx, x829, x5, 3);
    let x831: BytePoly_1 = bigint_nondet_rem!(ctx, x829, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x830, x5, 4), x831, 4), x829, 4),
        24387,
        2,
    )?;
    let x832: BytePoly_2 = bigint_add!(bigint_mul!(x831, x0, 2), x4, 2);
    let x833: BytePoly_3 = bigint_nondet_quot!(ctx, x832, x5, 3);
    let x834: BytePoly_1 = bigint_nondet_rem!(ctx, x832, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x833, x5, 4), x834, 4), x832, 4),
        24387,
        2,
    )?;
    let x835: BytePoly_1 = bigint_add!(x805, x805, 1);
    let x836: BytePoly_1 = bigint_nondet_quot!(ctx, x835, x5, 1);
    let x837: BytePoly_1 = bigint_nondet_rem!(ctx, x835, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x836, x5, 2), x837, 2), x835, 2),
        8131,
        2,
    )?;
    let x838: BytePoly_1 = bigint_nondet_inv!(ctx, x837, x5, 1);
    let x839: BytePoly_2 = bigint_mul!(x837, x838, 2);
    let x840: BytePoly_3 = bigint_nondet_quot!(ctx, x839, x5, 3);
    let x841: BytePoly_1 = bigint_nondet_rem!(ctx, x839, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x840, x5, 4), x841, 4), x839, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x841, x2, 1), 34, 1)?;
    let x842: BytePoly_2 = bigint_mul!(x834, x838, 2);
    let x843: BytePoly_3 = bigint_nondet_quot!(ctx, x842, x5, 3);
    let x844: BytePoly_1 = bigint_nondet_rem!(ctx, x842, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x843, x5, 4), x844, 4), x842, 4),
        24387,
        2,
    )?;
    let x845: BytePoly_2 = bigint_mul!(x844, x799, 2);
    let x846: BytePoly_3 = bigint_nondet_quot!(ctx, x845, x5, 3);
    let x847: BytePoly_1 = bigint_nondet_rem!(ctx, x845, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x846, x5, 4), x847, 4), x845, 4),
        24387,
        2,
    )?;
    let x848: BytePoly_1 = bigint_add!(bigint_sub!(x805, x847, 1), x5, 1);
    let x849: BytePoly_1 = bigint_nondet_quot!(ctx, x848, x5, 1);
    let x850: BytePoly_1 = bigint_nondet_rem!(ctx, x848, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x849, x5, 2), x850, 2), x848, 2),
        8131,
        2,
    )?;
    let x851: BytePoly_2 = bigint_mul!(x844, x844, 2);
    let x852: BytePoly_3 = bigint_nondet_quot!(ctx, x851, x5, 3);
    let x853: BytePoly_1 = bigint_nondet_rem!(ctx, x851, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x852, x5, 4), x853, 4), x851, 4),
        24387,
        2,
    )?;
    let x854: BytePoly_1 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x853, x799, 1), x5, 1), x799, 1),
        x5,
        1
    );
    let x855: BytePoly_1 = bigint_nondet_quot!(ctx, x854, x5, 1);
    let x856: BytePoly_1 = bigint_nondet_rem!(ctx, x854, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x855, x5, 2), x856, 2), x854, 2),
        8131,
        2,
    )?;
    let x857: BytePoly_2 = bigint_mul!(x844, x856, 2);
    let x858: BytePoly_3 = bigint_nondet_quot!(ctx, x857, x5, 3);
    let x859: BytePoly_1 = bigint_nondet_rem!(ctx, x857, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x858, x5, 4), x859, 4), x857, 4),
        24387,
        2,
    )?;
    let x860: BytePoly_1 = bigint_add!(bigint_sub!(x5, bigint_add!(x859, x850, 1), 1), x5, 1);
    let x861: BytePoly_1 = bigint_nondet_quot!(ctx, x860, x5, 1);
    let x862: BytePoly_1 = bigint_nondet_rem!(ctx, x860, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x861, x5, 2), x862, 2), x860, 2),
        8131,
        2,
    )?;
    let x863: BytePoly_1 = bigint_nondet_rem!(ctx, x807, x1, 1);
    let x864: BytePoly_1 = bigint_nondet_quot!(ctx, x807, x1, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x864, x1, 2), x863, 2), x807, 2),
        8131,
        2,
    )?;
    let x865: BytePoly_1 = bigint_sub!(x2, x863, 1);
    eqz(ctx, &bigint_mul!(x863, x865, 2), 8131, 2)?;
    let x866: BytePoly_1 = bigint_add!(bigint_sub!(x862, x828, 1), x5, 1);
    let x867: BytePoly_1 = bigint_add!(bigint_sub!(x856, x826, 1), x5, 1);
    let x868: BytePoly_1 = bigint_nondet_inv!(ctx, x867, x5, 1);
    let x869: BytePoly_1 = bigint_nondet_rem!(ctx, bigint_mul!(x866, x868, 2), x5, 1);
    let x870: BytePoly_2 = bigint_add!(bigint_sub!(bigint_mul!(x869, x867, 2), x866, 2), x5, 2);
    let x871: BytePoly_3 = bigint_nondet_quot!(ctx, x870, x5, 3);
    eqz(
        ctx,
        &bigint_sub!(x870, bigint_mul!(x871, x5, 4), 4),
        24387,
        2,
    )?;
    let x872: BytePoly_2 = bigint_mul!(x869, x869, 2);
    let x873: BytePoly_2 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x872, x826, 2), x5, 2), x856, 2),
        x5,
        2
    );
    let x874: BytePoly_3 = bigint_nondet_quot!(ctx, x873, x5, 3);
    let x875: BytePoly_1 = bigint_nondet_rem!(ctx, x873, x5, 1);
    let x876: BytePoly_2 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x5,
                bigint_add!(
                    bigint_mul!(x869, x875, 2),
                    bigint_add!(bigint_sub!(x828, bigint_mul!(x869, x826, 2), 2), x5, 2),
                    2
                ),
                2
            ),
            x5,
            2
        ),
        x5,
        2
    );
    let x877: BytePoly_3 = bigint_nondet_quot!(ctx, x876, x5, 3);
    let x878: BytePoly_1 = bigint_nondet_rem!(ctx, x876, x5, 1);
    let x879: BytePoly_4 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x872, bigint_mul!(x874, x5, 4), 4), x826, 4),
                    x856,
                    4
                ),
                x5,
                4
            ),
            x5,
            4
        ),
        x875,
        4
    );
    eqz(ctx, &x879, 24387, 2)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x877, x5, 4), x878, 4),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x869, bigint_sub!(x826, x875, 1), 2), x828, 2),
                    x5,
                    2
                ),
                x5,
                2
            ),
            4
        ),
        24387,
        2,
    )?;
    let x880: BytePoly_2 = bigint_add!(bigint_mul!(x875, x863, 2), bigint_mul!(x826, x865, 2), 2);
    let x881: BytePoly_2 = bigint_add!(bigint_mul!(x878, x863, 2), bigint_mul!(x828, x865, 2), 2);
    let x882: BytePoly_3 = bigint_nondet_quot!(ctx, x880, x5, 3);
    let x883: BytePoly_1 = bigint_nondet_rem!(ctx, x880, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x882, x5, 4), x883, 4), x880, 4),
        24387,
        2,
    )?;
    let x884: BytePoly_3 = bigint_nondet_quot!(ctx, x881, x5, 3);
    let x885: BytePoly_1 = bigint_nondet_rem!(ctx, x881, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x884, x5, 4), x885, 4), x881, 4),
        24387,
        2,
    )?;
    let x886: BytePoly_2 = bigint_mul!(x856, x856, 2);
    let x887: BytePoly_3 = bigint_nondet_quot!(ctx, x886, x5, 3);
    let x888: BytePoly_1 = bigint_nondet_rem!(ctx, x886, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x887, x5, 4), x888, 4), x886, 4),
        24387,
        2,
    )?;
    let x889: BytePoly_2 = bigint_add!(bigint_mul!(x888, x0, 2), x4, 2);
    let x890: BytePoly_3 = bigint_nondet_quot!(ctx, x889, x5, 3);
    let x891: BytePoly_1 = bigint_nondet_rem!(ctx, x889, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x890, x5, 4), x891, 4), x889, 4),
        24387,
        2,
    )?;
    let x892: BytePoly_1 = bigint_add!(x862, x862, 1);
    let x893: BytePoly_1 = bigint_nondet_quot!(ctx, x892, x5, 1);
    let x894: BytePoly_1 = bigint_nondet_rem!(ctx, x892, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x893, x5, 2), x894, 2), x892, 2),
        8131,
        2,
    )?;
    let x895: BytePoly_1 = bigint_nondet_inv!(ctx, x894, x5, 1);
    let x896: BytePoly_2 = bigint_mul!(x894, x895, 2);
    let x897: BytePoly_3 = bigint_nondet_quot!(ctx, x896, x5, 3);
    let x898: BytePoly_1 = bigint_nondet_rem!(ctx, x896, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x897, x5, 4), x898, 4), x896, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x898, x2, 1), 34, 1)?;
    let x899: BytePoly_2 = bigint_mul!(x891, x895, 2);
    let x900: BytePoly_3 = bigint_nondet_quot!(ctx, x899, x5, 3);
    let x901: BytePoly_1 = bigint_nondet_rem!(ctx, x899, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x900, x5, 4), x901, 4), x899, 4),
        24387,
        2,
    )?;
    let x902: BytePoly_2 = bigint_mul!(x901, x856, 2);
    let x903: BytePoly_3 = bigint_nondet_quot!(ctx, x902, x5, 3);
    let x904: BytePoly_1 = bigint_nondet_rem!(ctx, x902, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x903, x5, 4), x904, 4), x902, 4),
        24387,
        2,
    )?;
    let x905: BytePoly_1 = bigint_add!(bigint_sub!(x862, x904, 1), x5, 1);
    let x906: BytePoly_1 = bigint_nondet_quot!(ctx, x905, x5, 1);
    let x907: BytePoly_1 = bigint_nondet_rem!(ctx, x905, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x906, x5, 2), x907, 2), x905, 2),
        8131,
        2,
    )?;
    let x908: BytePoly_2 = bigint_mul!(x901, x901, 2);
    let x909: BytePoly_3 = bigint_nondet_quot!(ctx, x908, x5, 3);
    let x910: BytePoly_1 = bigint_nondet_rem!(ctx, x908, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x909, x5, 4), x910, 4), x908, 4),
        24387,
        2,
    )?;
    let x911: BytePoly_1 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x910, x856, 1), x5, 1), x856, 1),
        x5,
        1
    );
    let x912: BytePoly_1 = bigint_nondet_quot!(ctx, x911, x5, 1);
    let x913: BytePoly_1 = bigint_nondet_rem!(ctx, x911, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x912, x5, 2), x913, 2), x911, 2),
        8131,
        2,
    )?;
    let x914: BytePoly_2 = bigint_mul!(x901, x913, 2);
    let x915: BytePoly_3 = bigint_nondet_quot!(ctx, x914, x5, 3);
    let x916: BytePoly_1 = bigint_nondet_rem!(ctx, x914, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x915, x5, 4), x916, 4), x914, 4),
        24387,
        2,
    )?;
    let x917: BytePoly_1 = bigint_add!(bigint_sub!(x5, bigint_add!(x916, x907, 1), 1), x5, 1);
    let x918: BytePoly_1 = bigint_nondet_quot!(ctx, x917, x5, 1);
    let x919: BytePoly_1 = bigint_nondet_rem!(ctx, x917, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x918, x5, 2), x919, 2), x917, 2),
        8131,
        2,
    )?;
    let x920: BytePoly_1 = bigint_nondet_rem!(ctx, x864, x1, 1);
    let x921: BytePoly_1 = bigint_nondet_quot!(ctx, x864, x1, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x921, x1, 2), x920, 2), x864, 2),
        8131,
        2,
    )?;
    let x922: BytePoly_1 = bigint_sub!(x2, x920, 1);
    eqz(ctx, &bigint_mul!(x920, x922, 2), 8131, 2)?;
    let x923: BytePoly_1 = bigint_add!(bigint_sub!(x919, x885, 1), x5, 1);
    let x924: BytePoly_1 = bigint_add!(bigint_sub!(x913, x883, 1), x5, 1);
    let x925: BytePoly_1 = bigint_nondet_inv!(ctx, x924, x5, 1);
    let x926: BytePoly_1 = bigint_nondet_rem!(ctx, bigint_mul!(x923, x925, 2), x5, 1);
    let x927: BytePoly_2 = bigint_add!(bigint_sub!(bigint_mul!(x926, x924, 2), x923, 2), x5, 2);
    let x928: BytePoly_3 = bigint_nondet_quot!(ctx, x927, x5, 3);
    eqz(
        ctx,
        &bigint_sub!(x927, bigint_mul!(x928, x5, 4), 4),
        24387,
        2,
    )?;
    let x929: BytePoly_2 = bigint_mul!(x926, x926, 2);
    let x930: BytePoly_2 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x929, x883, 2), x5, 2), x913, 2),
        x5,
        2
    );
    let x931: BytePoly_3 = bigint_nondet_quot!(ctx, x930, x5, 3);
    let x932: BytePoly_1 = bigint_nondet_rem!(ctx, x930, x5, 1);
    let x933: BytePoly_2 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x5,
                bigint_add!(
                    bigint_mul!(x926, x932, 2),
                    bigint_add!(bigint_sub!(x885, bigint_mul!(x926, x883, 2), 2), x5, 2),
                    2
                ),
                2
            ),
            x5,
            2
        ),
        x5,
        2
    );
    let x934: BytePoly_3 = bigint_nondet_quot!(ctx, x933, x5, 3);
    let x935: BytePoly_1 = bigint_nondet_rem!(ctx, x933, x5, 1);
    let x936: BytePoly_4 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x929, bigint_mul!(x931, x5, 4), 4), x883, 4),
                    x913,
                    4
                ),
                x5,
                4
            ),
            x5,
            4
        ),
        x932,
        4
    );
    eqz(ctx, &x936, 24387, 2)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x934, x5, 4), x935, 4),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x926, bigint_sub!(x883, x932, 1), 2), x885, 2),
                    x5,
                    2
                ),
                x5,
                2
            ),
            4
        ),
        24387,
        2,
    )?;
    let x937: BytePoly_2 = bigint_add!(bigint_mul!(x932, x920, 2), bigint_mul!(x883, x922, 2), 2);
    let x938: BytePoly_2 = bigint_add!(bigint_mul!(x935, x920, 2), bigint_mul!(x885, x922, 2), 2);
    let x939: BytePoly_3 = bigint_nondet_quot!(ctx, x937, x5, 3);
    let x940: BytePoly_1 = bigint_nondet_rem!(ctx, x937, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x939, x5, 4), x940, 4), x937, 4),
        24387,
        2,
    )?;
    let x941: BytePoly_3 = bigint_nondet_quot!(ctx, x938, x5, 3);
    let x942: BytePoly_1 = bigint_nondet_rem!(ctx, x938, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x941, x5, 4), x942, 4), x938, 4),
        24387,
        2,
    )?;
    let x943: BytePoly_2 = bigint_mul!(x913, x913, 2);
    let x944: BytePoly_3 = bigint_nondet_quot!(ctx, x943, x5, 3);
    let x945: BytePoly_1 = bigint_nondet_rem!(ctx, x943, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x944, x5, 4), x945, 4), x943, 4),
        24387,
        2,
    )?;
    let x946: BytePoly_2 = bigint_add!(bigint_mul!(x945, x0, 2), x4, 2);
    let x947: BytePoly_3 = bigint_nondet_quot!(ctx, x946, x5, 3);
    let x948: BytePoly_1 = bigint_nondet_rem!(ctx, x946, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x947, x5, 4), x948, 4), x946, 4),
        24387,
        2,
    )?;
    let x949: BytePoly_1 = bigint_add!(x919, x919, 1);
    let x950: BytePoly_1 = bigint_nondet_quot!(ctx, x949, x5, 1);
    let x951: BytePoly_1 = bigint_nondet_rem!(ctx, x949, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x950, x5, 2), x951, 2), x949, 2),
        8131,
        2,
    )?;
    let x952: BytePoly_1 = bigint_nondet_inv!(ctx, x951, x5, 1);
    let x953: BytePoly_2 = bigint_mul!(x951, x952, 2);
    let x954: BytePoly_3 = bigint_nondet_quot!(ctx, x953, x5, 3);
    let x955: BytePoly_1 = bigint_nondet_rem!(ctx, x953, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x954, x5, 4), x955, 4), x953, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x955, x2, 1), 34, 1)?;
    let x956: BytePoly_2 = bigint_mul!(x948, x952, 2);
    let x957: BytePoly_3 = bigint_nondet_quot!(ctx, x956, x5, 3);
    let x958: BytePoly_1 = bigint_nondet_rem!(ctx, x956, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x957, x5, 4), x958, 4), x956, 4),
        24387,
        2,
    )?;
    let x959: BytePoly_2 = bigint_mul!(x958, x913, 2);
    let x960: BytePoly_3 = bigint_nondet_quot!(ctx, x959, x5, 3);
    let x961: BytePoly_1 = bigint_nondet_rem!(ctx, x959, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x960, x5, 4), x961, 4), x959, 4),
        24387,
        2,
    )?;
    let x962: BytePoly_1 = bigint_add!(bigint_sub!(x919, x961, 1), x5, 1);
    let x963: BytePoly_1 = bigint_nondet_quot!(ctx, x962, x5, 1);
    let x964: BytePoly_1 = bigint_nondet_rem!(ctx, x962, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x963, x5, 2), x964, 2), x962, 2),
        8131,
        2,
    )?;
    let x965: BytePoly_2 = bigint_mul!(x958, x958, 2);
    let x966: BytePoly_3 = bigint_nondet_quot!(ctx, x965, x5, 3);
    let x967: BytePoly_1 = bigint_nondet_rem!(ctx, x965, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x966, x5, 4), x967, 4), x965, 4),
        24387,
        2,
    )?;
    let x968: BytePoly_1 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x967, x913, 1), x5, 1), x913, 1),
        x5,
        1
    );
    let x969: BytePoly_1 = bigint_nondet_quot!(ctx, x968, x5, 1);
    let x970: BytePoly_1 = bigint_nondet_rem!(ctx, x968, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x969, x5, 2), x970, 2), x968, 2),
        8131,
        2,
    )?;
    let x971: BytePoly_2 = bigint_mul!(x958, x970, 2);
    let x972: BytePoly_3 = bigint_nondet_quot!(ctx, x971, x5, 3);
    let x973: BytePoly_1 = bigint_nondet_rem!(ctx, x971, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x972, x5, 4), x973, 4), x971, 4),
        24387,
        2,
    )?;
    let x974: BytePoly_1 = bigint_add!(bigint_sub!(x5, bigint_add!(x973, x964, 1), 1), x5, 1);
    let x975: BytePoly_1 = bigint_nondet_quot!(ctx, x974, x5, 1);
    let x976: BytePoly_1 = bigint_nondet_rem!(ctx, x974, x5, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x975, x5, 2), x976, 2), x974, 2),
        8131,
        2,
    )?;
    let x977: BytePoly_1 = bigint_add!(bigint_sub!(x502, x942, 1), x5, 1);
    let x978: BytePoly_1 = bigint_add!(bigint_sub!(x15, x940, 1), x5, 1);
    let x979: BytePoly_1 = bigint_nondet_inv!(ctx, x978, x5, 1);
    let x980: BytePoly_1 = bigint_nondet_rem!(ctx, bigint_mul!(x977, x979, 2), x5, 1);
    let x981: BytePoly_2 = bigint_add!(bigint_sub!(bigint_mul!(x980, x978, 2), x977, 2), x5, 2);
    let x982: BytePoly_3 = bigint_nondet_quot!(ctx, x981, x5, 3);
    eqz(
        ctx,
        &bigint_sub!(x981, bigint_mul!(x982, x5, 4), 4),
        24387,
        2,
    )?;
    let x983: BytePoly_2 = bigint_mul!(x980, x980, 2);
    let x984: BytePoly_2 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x983, x940, 2), x5, 2), x15, 2),
        x5,
        2
    );
    let x985: BytePoly_3 = bigint_nondet_quot!(ctx, x984, x5, 3);
    let x986: BytePoly_1 = bigint_nondet_rem!(ctx, x984, x5, 1);
    let x987: BytePoly_2 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x5,
                bigint_add!(
                    bigint_mul!(x980, x986, 2),
                    bigint_add!(bigint_sub!(x942, bigint_mul!(x980, x940, 2), 2), x5, 2),
                    2
                ),
                2
            ),
            x5,
            2
        ),
        x5,
        2
    );
    let x988: BytePoly_3 = bigint_nondet_quot!(ctx, x987, x5, 3);
    let x989: BytePoly_1 = bigint_nondet_rem!(ctx, x987, x5, 1);
    let x990: BytePoly_4 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x983, bigint_mul!(x985, x5, 4), 4), x940, 4),
                    x15,
                    4
                ),
                x5,
                4
            ),
            x5,
            4
        ),
        x986,
        4
    );
    eqz(ctx, &x990, 24387, 2)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x988, x5, 4), x989, 4),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x980, bigint_sub!(x940, x986, 1), 2), x942, 2),
                    x5,
                    2
                ),
                x5,
                2
            ),
            4
        ),
        24387,
        2,
    )?;
    let x991: BytePoly_1 = bigint_add!(bigint_sub!(x989, x515, 1), x5, 1);
    let x992: BytePoly_1 = bigint_add!(bigint_sub!(x986, x512, 1), x5, 1);
    let x993: BytePoly_1 = bigint_nondet_inv!(ctx, x992, x5, 1);
    let x994: BytePoly_1 = bigint_nondet_rem!(ctx, bigint_mul!(x991, x993, 2), x5, 1);
    let x995: BytePoly_2 = bigint_add!(bigint_sub!(bigint_mul!(x994, x992, 2), x991, 2), x5, 2);
    let x996: BytePoly_3 = bigint_nondet_quot!(ctx, x995, x5, 3);
    eqz(
        ctx,
        &bigint_sub!(x995, bigint_mul!(x996, x5, 4), 4),
        24387,
        2,
    )?;
    let x997: BytePoly_2 = bigint_mul!(x994, x994, 2);
    let x998: BytePoly_2 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x997, x512, 2), x5, 2), x986, 2),
        x5,
        2
    );
    let x999: BytePoly_3 = bigint_nondet_quot!(ctx, x998, x5, 3);
    let x1000: BytePoly_1 = bigint_nondet_rem!(ctx, x998, x5, 1);
    let x1001: BytePoly_2 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x5,
                bigint_add!(
                    bigint_mul!(x994, x1000, 2),
                    bigint_add!(bigint_sub!(x515, bigint_mul!(x994, x512, 2), 2), x5, 2),
                    2
                ),
                2
            ),
            x5,
            2
        ),
        x5,
        2
    );
    let x1002: BytePoly_3 = bigint_nondet_quot!(ctx, x1001, x5, 3);
    let x1003: BytePoly_1 = bigint_nondet_rem!(ctx, x1001, x5, 1);
    let x1004: BytePoly_4 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x997, bigint_mul!(x999, x5, 4), 4), x512, 4),
                    x986,
                    4
                ),
                x5,
                4
            ),
            x5,
            4
        ),
        x1000,
        4
    );
    eqz(ctx, &x1004, 24387, 2)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1002, x5, 4), x1003, 4),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x994, bigint_sub!(x512, x1000, 1), 2), x515, 2),
                    x5,
                    2
                ),
                x5,
                2
            ),
            4
        ),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x13, x1000, 2), 34, 1)?;
    eqz(ctx, &bigint_sub!(x1003, x1003, 1), 34, 1)?;
    return Ok(());
}
pub fn ecdsa_verify_32(ctx: &mut BigIntContext) -> Result<()> {
    let x0: BytePoly_1 = bigint_const!(ctx, 3);
    let x1: BytePoly_1 = bigint_const!(ctx, 2);
    let x2: BytePoly_1 = bigint_const!(ctx, 1);
    let x3: BytePoly_4 = bigint_const!(ctx, 3, 0, 0, 0);
    let x4: BytePoly_4 = bigint_const!(ctx, 0, 0, 0, 0);
    let x5: BytePoly_4 = bigint_const!(ctx, 31, 0, 0, 0);
    let x6: BytePoly_4 = bigint_const!(ctx, 43, 0, 0, 0);
    let x7: BytePoly_4 = bigint_def!(ctx, 4, 0, 1);
    let x8: BytePoly_4 = bigint_def!(ctx, 4, 1, 1);
    let x9: BytePoly_5 = bigint_def!(ctx, 5, 2, 1);
    let x10: BytePoly_4 = bigint_def!(ctx, 4, 3, 1);
    let x11: BytePoly_4 = bigint_def!(ctx, 4, 4, 1);
    let x12: BytePoly_5 = bigint_def!(ctx, 5, 5, 1);
    let x13: BytePoly_5 = bigint_def!(ctx, 5, 6, 1);
    let x14: BytePoly_5 = bigint_def!(ctx, 5, 7, 1);
    let x15: BytePoly_4 = bigint_def!(ctx, 4, 8, 1);
    let x16: BytePoly_4 = bigint_def!(ctx, 4, 9, 1);
    let x17: BytePoly_8 = bigint_mul!(x10, x10, 8);
    let x18: BytePoly_9 = bigint_nondet_quot!(ctx, x17, x5, 9);
    let x19: BytePoly_4 = bigint_nondet_rem!(ctx, x17, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x18, x5, 13), x19, 13), x17, 13),
        73156,
        4,
    )?;
    let x20: BytePoly_8 = bigint_sub!(
        bigint_mul!(x11, x11, 8),
        bigint_add!(
            bigint_add!(bigint_mul!(x10, x19, 8), bigint_mul!(x10, x4, 8), 8),
            x3,
            8
        ),
        8
    );
    let x21: BytePoly_9 = bigint_nondet_quot!(ctx, x20, x5, 9);
    let x22: BytePoly_4 = bigint_nondet_rem!(ctx, x20, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x21, x5, 13), x22, 13), x20, 13),
        73156,
        4,
    )?;
    eqz(ctx, &x22, 34, 1)?;
    let x23: BytePoly_8 = bigint_mul!(x16, x16, 8);
    let x24: BytePoly_8 = bigint_mul!(x15, x15, 8);
    let x25: BytePoly_9 = bigint_nondet_quot!(ctx, x24, x5, 9);
    let x26: BytePoly_4 = bigint_nondet_rem!(ctx, x24, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x25, x5, 13), x26, 13), x24, 13),
        73156,
        4,
    )?;
    let x27: BytePoly_8 = bigint_mul!(x15, x4, 8);
    let x28: BytePoly_8 = bigint_sub!(
        x23,
        bigint_add!(bigint_add!(bigint_mul!(x15, x26, 8), x27, 8), x3, 8),
        8
    );
    let x29: BytePoly_9 = bigint_nondet_quot!(ctx, x28, x5, 9);
    let x30: BytePoly_4 = bigint_nondet_rem!(ctx, x28, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x29, x5, 13), x30, 13), x28, 13),
        73156,
        4,
    )?;
    eqz(ctx, &x30, 34, 1)?;
    let x31: BytePoly_4 = bigint_nondet_inv!(ctx, x14, x6, 4);
    let x32: BytePoly_9 = bigint_mul!(x14, x31, 9);
    let x33: BytePoly_10 = bigint_nondet_quot!(ctx, x32, x6, 10);
    let x34: BytePoly_4 = bigint_nondet_rem!(ctx, x32, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x33, x6, 14), x34, 14), x32, 14),
        81284,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x34, x2, 4), 34, 1)?;
    let x35: BytePoly_9 = bigint_mul!(x12, x31, 9);
    let x36: BytePoly_10 = bigint_nondet_quot!(ctx, x35, x6, 10);
    let x37: BytePoly_4 = bigint_nondet_rem!(ctx, x35, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x36, x6, 14), x37, 14), x35, 14),
        81284,
        4,
    )?;
    let x38: BytePoly_9 = bigint_mul!(x13, x31, 9);
    let x39: BytePoly_10 = bigint_nondet_quot!(ctx, x38, x6, 10);
    let x40: BytePoly_4 = bigint_nondet_rem!(ctx, x38, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x39, x6, 14), x40, 14), x38, 14),
        81284,
        4,
    )?;
    let x41: BytePoly_9 = bigint_nondet_quot!(ctx, x24, x5, 9);
    let x42: BytePoly_4 = bigint_nondet_rem!(ctx, x24, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x41, x5, 13), x42, 13), x24, 13),
        73156,
        4,
    )?;
    let x43: BytePoly_8 = bigint_sub!(
        x23,
        bigint_add!(bigint_add!(bigint_mul!(x15, x42, 8), x27, 8), x3, 8),
        8
    );
    let x44: BytePoly_9 = bigint_nondet_quot!(ctx, x43, x5, 9);
    let x45: BytePoly_4 = bigint_nondet_rem!(ctx, x43, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x44, x5, 13), x45, 13), x43, 13),
        73156,
        4,
    )?;
    eqz(ctx, &x45, 34, 1)?;
    let x46: BytePoly_1 = bigint_nondet_rem!(ctx, x37, x1, 1);
    let x47: BytePoly_4 = bigint_nondet_quot!(ctx, x37, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x47, x1, 5), x46, 5), x37, 5),
        32515,
        2,
    )?;
    let x48: BytePoly_1 = bigint_sub!(x2, x46, 1);
    eqz(ctx, &bigint_mul!(x46, x48, 2), 8131, 2)?;
    let x49: BytePoly_4 = bigint_add!(bigint_sub!(x8, x16, 4), x5, 4);
    let x50: BytePoly_4 = bigint_add!(bigint_sub!(x7, x15, 4), x5, 4);
    let x51: BytePoly_4 = bigint_nondet_inv!(ctx, x50, x5, 4);
    let x52: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x49, x51, 8), x5, 4);
    let x53: BytePoly_8 = bigint_add!(bigint_sub!(bigint_mul!(x52, x50, 8), x49, 8), x5, 8);
    let x54: BytePoly_9 = bigint_nondet_quot!(ctx, x53, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x53, bigint_mul!(x54, x5, 13), 13),
        73156,
        4,
    )?;
    let x55: BytePoly_8 = bigint_mul!(x52, x52, 8);
    let x56: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x55, x15, 8), x5, 8), x7, 8),
        x5,
        8
    );
    let x57: BytePoly_9 = bigint_nondet_quot!(ctx, x56, x5, 9);
    let x58: BytePoly_4 = bigint_nondet_rem!(ctx, x56, x5, 4);
    let x59: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x5,
                bigint_add!(
                    bigint_mul!(x52, x58, 8),
                    bigint_add!(bigint_sub!(x16, bigint_mul!(x52, x15, 8), 8), x5, 8),
                    8
                ),
                8
            ),
            x5,
            8
        ),
        x5,
        8
    );
    let x60: BytePoly_9 = bigint_nondet_quot!(ctx, x59, x5, 9);
    let x61: BytePoly_4 = bigint_nondet_rem!(ctx, x59, x5, 4);
    let x62: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x55, bigint_mul!(x57, x5, 13), 13), x15, 13),
                    x7,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x58,
        13
    );
    eqz(ctx, &x62, 73156, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x60, x5, 13), x61, 13),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x52, bigint_sub!(x15, x58, 4), 8), x16, 8),
                    x5,
                    8
                ),
                x5,
                8
            ),
            13
        ),
        73156,
        4,
    )?;
    let x63: BytePoly_5 = bigint_add!(bigint_mul!(x58, x46, 5), bigint_mul!(x15, x48, 5), 5);
    let x64: BytePoly_5 = bigint_add!(bigint_mul!(x61, x46, 5), bigint_mul!(x16, x48, 5), 5);
    let x65: BytePoly_6 = bigint_nondet_quot!(ctx, x63, x5, 6);
    let x66: BytePoly_4 = bigint_nondet_rem!(ctx, x63, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x65, x5, 10), x66, 10), x63, 10),
        48771,
        4,
    )?;
    let x67: BytePoly_6 = bigint_nondet_quot!(ctx, x64, x5, 6);
    let x68: BytePoly_4 = bigint_nondet_rem!(ctx, x64, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x67, x5, 10), x68, 10), x64, 10),
        48771,
        4,
    )?;
    let x69: BytePoly_8 = bigint_mul!(x7, x7, 8);
    let x70: BytePoly_9 = bigint_nondet_quot!(ctx, x69, x5, 9);
    let x71: BytePoly_4 = bigint_nondet_rem!(ctx, x69, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x70, x5, 13), x71, 13), x69, 13),
        73156,
        4,
    )?;
    let x72: BytePoly_5 = bigint_add!(bigint_mul!(x71, x0, 5), x4, 5);
    let x73: BytePoly_6 = bigint_nondet_quot!(ctx, x72, x5, 6);
    let x74: BytePoly_4 = bigint_nondet_rem!(ctx, x72, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x73, x5, 10), x74, 10), x72, 10),
        48771,
        4,
    )?;
    let x75: BytePoly_4 = bigint_add!(x8, x8, 4);
    let x76: BytePoly_4 = bigint_nondet_quot!(ctx, x75, x5, 4);
    let x77: BytePoly_4 = bigint_nondet_rem!(ctx, x75, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x76, x5, 8), x77, 8), x75, 8),
        32515,
        2,
    )?;
    let x78: BytePoly_4 = bigint_nondet_inv!(ctx, x77, x5, 4);
    let x79: BytePoly_8 = bigint_mul!(x77, x78, 8);
    let x80: BytePoly_9 = bigint_nondet_quot!(ctx, x79, x5, 9);
    let x81: BytePoly_4 = bigint_nondet_rem!(ctx, x79, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x80, x5, 13), x81, 13), x79, 13),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x81, x2, 4), 34, 1)?;
    let x82: BytePoly_8 = bigint_mul!(x74, x78, 8);
    let x83: BytePoly_9 = bigint_nondet_quot!(ctx, x82, x5, 9);
    let x84: BytePoly_4 = bigint_nondet_rem!(ctx, x82, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x83, x5, 13), x84, 13), x82, 13),
        73156,
        4,
    )?;
    let x85: BytePoly_8 = bigint_mul!(x84, x7, 8);
    let x86: BytePoly_9 = bigint_nondet_quot!(ctx, x85, x5, 9);
    let x87: BytePoly_4 = bigint_nondet_rem!(ctx, x85, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x86, x5, 13), x87, 13), x85, 13),
        73156,
        4,
    )?;
    let x88: BytePoly_4 = bigint_add!(bigint_sub!(x8, x87, 4), x5, 4);
    let x89: BytePoly_4 = bigint_nondet_quot!(ctx, x88, x5, 4);
    let x90: BytePoly_4 = bigint_nondet_rem!(ctx, x88, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x89, x5, 8), x90, 8), x88, 8),
        32515,
        2,
    )?;
    let x91: BytePoly_8 = bigint_mul!(x84, x84, 8);
    let x92: BytePoly_9 = bigint_nondet_quot!(ctx, x91, x5, 9);
    let x93: BytePoly_4 = bigint_nondet_rem!(ctx, x91, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x92, x5, 13), x93, 13), x91, 13),
        73156,
        4,
    )?;
    let x94: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x93, x7, 4), x5, 4), x7, 4),
        x5,
        4
    );
    let x95: BytePoly_4 = bigint_nondet_quot!(ctx, x94, x5, 4);
    let x96: BytePoly_4 = bigint_nondet_rem!(ctx, x94, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x95, x5, 8), x96, 8), x94, 8),
        32515,
        2,
    )?;
    let x97: BytePoly_8 = bigint_mul!(x84, x96, 8);
    let x98: BytePoly_9 = bigint_nondet_quot!(ctx, x97, x5, 9);
    let x99: BytePoly_4 = bigint_nondet_rem!(ctx, x97, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x98, x5, 13), x99, 13), x97, 13),
        73156,
        4,
    )?;
    let x100: BytePoly_4 = bigint_add!(bigint_sub!(x5, bigint_add!(x99, x90, 4), 4), x5, 4);
    let x101: BytePoly_4 = bigint_nondet_quot!(ctx, x100, x5, 4);
    let x102: BytePoly_4 = bigint_nondet_rem!(ctx, x100, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x101, x5, 8), x102, 8), x100, 8),
        32515,
        2,
    )?;
    let x103: BytePoly_1 = bigint_nondet_rem!(ctx, x47, x1, 1);
    let x104: BytePoly_4 = bigint_nondet_quot!(ctx, x47, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x104, x1, 5), x103, 5), x47, 5),
        32515,
        2,
    )?;
    let x105: BytePoly_1 = bigint_sub!(x2, x103, 1);
    eqz(ctx, &bigint_mul!(x103, x105, 2), 8131, 2)?;
    let x106: BytePoly_4 = bigint_add!(bigint_sub!(x102, x68, 4), x5, 4);
    let x107: BytePoly_4 = bigint_add!(bigint_sub!(x96, x66, 4), x5, 4);
    let x108: BytePoly_4 = bigint_nondet_inv!(ctx, x107, x5, 4);
    let x109: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x106, x108, 8), x5, 4);
    let x110: BytePoly_8 = bigint_add!(bigint_sub!(bigint_mul!(x109, x107, 8), x106, 8), x5, 8);
    let x111: BytePoly_9 = bigint_nondet_quot!(ctx, x110, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x110, bigint_mul!(x111, x5, 13), 13),
        73156,
        4,
    )?;
    let x112: BytePoly_8 = bigint_mul!(x109, x109, 8);
    let x113: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x112, x66, 8), x5, 8), x96, 8),
        x5,
        8
    );
    let x114: BytePoly_9 = bigint_nondet_quot!(ctx, x113, x5, 9);
    let x115: BytePoly_4 = bigint_nondet_rem!(ctx, x113, x5, 4);
    let x116: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x5,
                bigint_add!(
                    bigint_mul!(x109, x115, 8),
                    bigint_add!(bigint_sub!(x68, bigint_mul!(x109, x66, 8), 8), x5, 8),
                    8
                ),
                8
            ),
            x5,
            8
        ),
        x5,
        8
    );
    let x117: BytePoly_9 = bigint_nondet_quot!(ctx, x116, x5, 9);
    let x118: BytePoly_4 = bigint_nondet_rem!(ctx, x116, x5, 4);
    let x119: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x112, bigint_mul!(x114, x5, 13), 13), x66, 13),
                    x96,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x115,
        13
    );
    eqz(ctx, &x119, 73156, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x117, x5, 13), x118, 13),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x109, bigint_sub!(x66, x115, 4), 8), x68, 8),
                    x5,
                    8
                ),
                x5,
                8
            ),
            13
        ),
        73156,
        4,
    )?;
    let x120: BytePoly_5 = bigint_add!(bigint_mul!(x115, x103, 5), bigint_mul!(x66, x105, 5), 5);
    let x121: BytePoly_5 = bigint_add!(bigint_mul!(x118, x103, 5), bigint_mul!(x68, x105, 5), 5);
    let x122: BytePoly_6 = bigint_nondet_quot!(ctx, x120, x5, 6);
    let x123: BytePoly_4 = bigint_nondet_rem!(ctx, x120, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x122, x5, 10), x123, 10), x120, 10),
        48771,
        4,
    )?;
    let x124: BytePoly_6 = bigint_nondet_quot!(ctx, x121, x5, 6);
    let x125: BytePoly_4 = bigint_nondet_rem!(ctx, x121, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x124, x5, 10), x125, 10), x121, 10),
        48771,
        4,
    )?;
    let x126: BytePoly_8 = bigint_mul!(x96, x96, 8);
    let x127: BytePoly_9 = bigint_nondet_quot!(ctx, x126, x5, 9);
    let x128: BytePoly_4 = bigint_nondet_rem!(ctx, x126, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x127, x5, 13), x128, 13), x126, 13),
        73156,
        4,
    )?;
    let x129: BytePoly_5 = bigint_add!(bigint_mul!(x128, x0, 5), x4, 5);
    let x130: BytePoly_6 = bigint_nondet_quot!(ctx, x129, x5, 6);
    let x131: BytePoly_4 = bigint_nondet_rem!(ctx, x129, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x130, x5, 10), x131, 10), x129, 10),
        48771,
        4,
    )?;
    let x132: BytePoly_4 = bigint_add!(x102, x102, 4);
    let x133: BytePoly_4 = bigint_nondet_quot!(ctx, x132, x5, 4);
    let x134: BytePoly_4 = bigint_nondet_rem!(ctx, x132, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x133, x5, 8), x134, 8), x132, 8),
        32515,
        2,
    )?;
    let x135: BytePoly_4 = bigint_nondet_inv!(ctx, x134, x5, 4);
    let x136: BytePoly_8 = bigint_mul!(x134, x135, 8);
    let x137: BytePoly_9 = bigint_nondet_quot!(ctx, x136, x5, 9);
    let x138: BytePoly_4 = bigint_nondet_rem!(ctx, x136, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x137, x5, 13), x138, 13), x136, 13),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x138, x2, 4), 34, 1)?;
    let x139: BytePoly_8 = bigint_mul!(x131, x135, 8);
    let x140: BytePoly_9 = bigint_nondet_quot!(ctx, x139, x5, 9);
    let x141: BytePoly_4 = bigint_nondet_rem!(ctx, x139, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x140, x5, 13), x141, 13), x139, 13),
        73156,
        4,
    )?;
    let x142: BytePoly_8 = bigint_mul!(x141, x96, 8);
    let x143: BytePoly_9 = bigint_nondet_quot!(ctx, x142, x5, 9);
    let x144: BytePoly_4 = bigint_nondet_rem!(ctx, x142, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x143, x5, 13), x144, 13), x142, 13),
        73156,
        4,
    )?;
    let x145: BytePoly_4 = bigint_add!(bigint_sub!(x102, x144, 4), x5, 4);
    let x146: BytePoly_4 = bigint_nondet_quot!(ctx, x145, x5, 4);
    let x147: BytePoly_4 = bigint_nondet_rem!(ctx, x145, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x146, x5, 8), x147, 8), x145, 8),
        32515,
        2,
    )?;
    let x148: BytePoly_8 = bigint_mul!(x141, x141, 8);
    let x149: BytePoly_9 = bigint_nondet_quot!(ctx, x148, x5, 9);
    let x150: BytePoly_4 = bigint_nondet_rem!(ctx, x148, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x149, x5, 13), x150, 13), x148, 13),
        73156,
        4,
    )?;
    let x151: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x150, x96, 4), x5, 4), x96, 4),
        x5,
        4
    );
    let x152: BytePoly_4 = bigint_nondet_quot!(ctx, x151, x5, 4);
    let x153: BytePoly_4 = bigint_nondet_rem!(ctx, x151, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x152, x5, 8), x153, 8), x151, 8),
        32515,
        2,
    )?;
    let x154: BytePoly_8 = bigint_mul!(x141, x153, 8);
    let x155: BytePoly_9 = bigint_nondet_quot!(ctx, x154, x5, 9);
    let x156: BytePoly_4 = bigint_nondet_rem!(ctx, x154, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x155, x5, 13), x156, 13), x154, 13),
        73156,
        4,
    )?;
    let x157: BytePoly_4 = bigint_add!(bigint_sub!(x5, bigint_add!(x156, x147, 4), 4), x5, 4);
    let x158: BytePoly_4 = bigint_nondet_quot!(ctx, x157, x5, 4);
    let x159: BytePoly_4 = bigint_nondet_rem!(ctx, x157, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x158, x5, 8), x159, 8), x157, 8),
        32515,
        2,
    )?;
    let x160: BytePoly_1 = bigint_nondet_rem!(ctx, x104, x1, 1);
    let x161: BytePoly_4 = bigint_nondet_quot!(ctx, x104, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x161, x1, 5), x160, 5), x104, 5),
        32515,
        2,
    )?;
    let x162: BytePoly_1 = bigint_sub!(x2, x160, 1);
    eqz(ctx, &bigint_mul!(x160, x162, 2), 8131, 2)?;
    let x163: BytePoly_4 = bigint_add!(bigint_sub!(x159, x125, 4), x5, 4);
    let x164: BytePoly_4 = bigint_add!(bigint_sub!(x153, x123, 4), x5, 4);
    let x165: BytePoly_4 = bigint_nondet_inv!(ctx, x164, x5, 4);
    let x166: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x163, x165, 8), x5, 4);
    let x167: BytePoly_8 = bigint_add!(bigint_sub!(bigint_mul!(x166, x164, 8), x163, 8), x5, 8);
    let x168: BytePoly_9 = bigint_nondet_quot!(ctx, x167, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x167, bigint_mul!(x168, x5, 13), 13),
        73156,
        4,
    )?;
    let x169: BytePoly_8 = bigint_mul!(x166, x166, 8);
    let x170: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x169, x123, 8), x5, 8), x153, 8),
        x5,
        8
    );
    let x171: BytePoly_9 = bigint_nondet_quot!(ctx, x170, x5, 9);
    let x172: BytePoly_4 = bigint_nondet_rem!(ctx, x170, x5, 4);
    let x173: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x5,
                bigint_add!(
                    bigint_mul!(x166, x172, 8),
                    bigint_add!(bigint_sub!(x125, bigint_mul!(x166, x123, 8), 8), x5, 8),
                    8
                ),
                8
            ),
            x5,
            8
        ),
        x5,
        8
    );
    let x174: BytePoly_9 = bigint_nondet_quot!(ctx, x173, x5, 9);
    let x175: BytePoly_4 = bigint_nondet_rem!(ctx, x173, x5, 4);
    let x176: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x169, bigint_mul!(x171, x5, 13), 13), x123, 13),
                    x153,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x172,
        13
    );
    eqz(ctx, &x176, 73156, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x174, x5, 13), x175, 13),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x166, bigint_sub!(x123, x172, 4), 8), x125, 8),
                    x5,
                    8
                ),
                x5,
                8
            ),
            13
        ),
        73156,
        4,
    )?;
    let x177: BytePoly_5 = bigint_add!(bigint_mul!(x172, x160, 5), bigint_mul!(x123, x162, 5), 5);
    let x178: BytePoly_5 = bigint_add!(bigint_mul!(x175, x160, 5), bigint_mul!(x125, x162, 5), 5);
    let x179: BytePoly_6 = bigint_nondet_quot!(ctx, x177, x5, 6);
    let x180: BytePoly_4 = bigint_nondet_rem!(ctx, x177, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x179, x5, 10), x180, 10), x177, 10),
        48771,
        4,
    )?;
    let x181: BytePoly_6 = bigint_nondet_quot!(ctx, x178, x5, 6);
    let x182: BytePoly_4 = bigint_nondet_rem!(ctx, x178, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x181, x5, 10), x182, 10), x178, 10),
        48771,
        4,
    )?;
    let x183: BytePoly_8 = bigint_mul!(x153, x153, 8);
    let x184: BytePoly_9 = bigint_nondet_quot!(ctx, x183, x5, 9);
    let x185: BytePoly_4 = bigint_nondet_rem!(ctx, x183, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x184, x5, 13), x185, 13), x183, 13),
        73156,
        4,
    )?;
    let x186: BytePoly_5 = bigint_add!(bigint_mul!(x185, x0, 5), x4, 5);
    let x187: BytePoly_6 = bigint_nondet_quot!(ctx, x186, x5, 6);
    let x188: BytePoly_4 = bigint_nondet_rem!(ctx, x186, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x187, x5, 10), x188, 10), x186, 10),
        48771,
        4,
    )?;
    let x189: BytePoly_4 = bigint_add!(x159, x159, 4);
    let x190: BytePoly_4 = bigint_nondet_quot!(ctx, x189, x5, 4);
    let x191: BytePoly_4 = bigint_nondet_rem!(ctx, x189, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x190, x5, 8), x191, 8), x189, 8),
        32515,
        2,
    )?;
    let x192: BytePoly_4 = bigint_nondet_inv!(ctx, x191, x5, 4);
    let x193: BytePoly_8 = bigint_mul!(x191, x192, 8);
    let x194: BytePoly_9 = bigint_nondet_quot!(ctx, x193, x5, 9);
    let x195: BytePoly_4 = bigint_nondet_rem!(ctx, x193, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x194, x5, 13), x195, 13), x193, 13),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x195, x2, 4), 34, 1)?;
    let x196: BytePoly_8 = bigint_mul!(x188, x192, 8);
    let x197: BytePoly_9 = bigint_nondet_quot!(ctx, x196, x5, 9);
    let x198: BytePoly_4 = bigint_nondet_rem!(ctx, x196, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x197, x5, 13), x198, 13), x196, 13),
        73156,
        4,
    )?;
    let x199: BytePoly_8 = bigint_mul!(x198, x153, 8);
    let x200: BytePoly_9 = bigint_nondet_quot!(ctx, x199, x5, 9);
    let x201: BytePoly_4 = bigint_nondet_rem!(ctx, x199, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x200, x5, 13), x201, 13), x199, 13),
        73156,
        4,
    )?;
    let x202: BytePoly_4 = bigint_add!(bigint_sub!(x159, x201, 4), x5, 4);
    let x203: BytePoly_4 = bigint_nondet_quot!(ctx, x202, x5, 4);
    let x204: BytePoly_4 = bigint_nondet_rem!(ctx, x202, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x203, x5, 8), x204, 8), x202, 8),
        32515,
        2,
    )?;
    let x205: BytePoly_8 = bigint_mul!(x198, x198, 8);
    let x206: BytePoly_9 = bigint_nondet_quot!(ctx, x205, x5, 9);
    let x207: BytePoly_4 = bigint_nondet_rem!(ctx, x205, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x206, x5, 13), x207, 13), x205, 13),
        73156,
        4,
    )?;
    let x208: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x207, x153, 4), x5, 4), x153, 4),
        x5,
        4
    );
    let x209: BytePoly_4 = bigint_nondet_quot!(ctx, x208, x5, 4);
    let x210: BytePoly_4 = bigint_nondet_rem!(ctx, x208, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x209, x5, 8), x210, 8), x208, 8),
        32515,
        2,
    )?;
    let x211: BytePoly_8 = bigint_mul!(x198, x210, 8);
    let x212: BytePoly_9 = bigint_nondet_quot!(ctx, x211, x5, 9);
    let x213: BytePoly_4 = bigint_nondet_rem!(ctx, x211, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x212, x5, 13), x213, 13), x211, 13),
        73156,
        4,
    )?;
    let x214: BytePoly_4 = bigint_add!(bigint_sub!(x5, bigint_add!(x213, x204, 4), 4), x5, 4);
    let x215: BytePoly_4 = bigint_nondet_quot!(ctx, x214, x5, 4);
    let x216: BytePoly_4 = bigint_nondet_rem!(ctx, x214, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x215, x5, 8), x216, 8), x214, 8),
        32515,
        2,
    )?;
    let x217: BytePoly_1 = bigint_nondet_rem!(ctx, x161, x1, 1);
    let x218: BytePoly_4 = bigint_nondet_quot!(ctx, x161, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x218, x1, 5), x217, 5), x161, 5),
        32515,
        2,
    )?;
    let x219: BytePoly_1 = bigint_sub!(x2, x217, 1);
    eqz(ctx, &bigint_mul!(x217, x219, 2), 8131, 2)?;
    let x220: BytePoly_4 = bigint_add!(bigint_sub!(x216, x182, 4), x5, 4);
    let x221: BytePoly_4 = bigint_add!(bigint_sub!(x210, x180, 4), x5, 4);
    let x222: BytePoly_4 = bigint_nondet_inv!(ctx, x221, x5, 4);
    let x223: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x220, x222, 8), x5, 4);
    let x224: BytePoly_8 = bigint_add!(bigint_sub!(bigint_mul!(x223, x221, 8), x220, 8), x5, 8);
    let x225: BytePoly_9 = bigint_nondet_quot!(ctx, x224, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x224, bigint_mul!(x225, x5, 13), 13),
        73156,
        4,
    )?;
    let x226: BytePoly_8 = bigint_mul!(x223, x223, 8);
    let x227: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x226, x180, 8), x5, 8), x210, 8),
        x5,
        8
    );
    let x228: BytePoly_9 = bigint_nondet_quot!(ctx, x227, x5, 9);
    let x229: BytePoly_4 = bigint_nondet_rem!(ctx, x227, x5, 4);
    let x230: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x5,
                bigint_add!(
                    bigint_mul!(x223, x229, 8),
                    bigint_add!(bigint_sub!(x182, bigint_mul!(x223, x180, 8), 8), x5, 8),
                    8
                ),
                8
            ),
            x5,
            8
        ),
        x5,
        8
    );
    let x231: BytePoly_9 = bigint_nondet_quot!(ctx, x230, x5, 9);
    let x232: BytePoly_4 = bigint_nondet_rem!(ctx, x230, x5, 4);
    let x233: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x226, bigint_mul!(x228, x5, 13), 13), x180, 13),
                    x210,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x229,
        13
    );
    eqz(ctx, &x233, 73156, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x231, x5, 13), x232, 13),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x223, bigint_sub!(x180, x229, 4), 8), x182, 8),
                    x5,
                    8
                ),
                x5,
                8
            ),
            13
        ),
        73156,
        4,
    )?;
    let x234: BytePoly_5 = bigint_add!(bigint_mul!(x229, x217, 5), bigint_mul!(x180, x219, 5), 5);
    let x235: BytePoly_5 = bigint_add!(bigint_mul!(x232, x217, 5), bigint_mul!(x182, x219, 5), 5);
    let x236: BytePoly_6 = bigint_nondet_quot!(ctx, x234, x5, 6);
    let x237: BytePoly_4 = bigint_nondet_rem!(ctx, x234, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x236, x5, 10), x237, 10), x234, 10),
        48771,
        4,
    )?;
    let x238: BytePoly_6 = bigint_nondet_quot!(ctx, x235, x5, 6);
    let x239: BytePoly_4 = bigint_nondet_rem!(ctx, x235, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x238, x5, 10), x239, 10), x235, 10),
        48771,
        4,
    )?;
    let x240: BytePoly_8 = bigint_mul!(x210, x210, 8);
    let x241: BytePoly_9 = bigint_nondet_quot!(ctx, x240, x5, 9);
    let x242: BytePoly_4 = bigint_nondet_rem!(ctx, x240, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x241, x5, 13), x242, 13), x240, 13),
        73156,
        4,
    )?;
    let x243: BytePoly_5 = bigint_add!(bigint_mul!(x242, x0, 5), x4, 5);
    let x244: BytePoly_6 = bigint_nondet_quot!(ctx, x243, x5, 6);
    let x245: BytePoly_4 = bigint_nondet_rem!(ctx, x243, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x244, x5, 10), x245, 10), x243, 10),
        48771,
        4,
    )?;
    let x246: BytePoly_4 = bigint_add!(x216, x216, 4);
    let x247: BytePoly_4 = bigint_nondet_quot!(ctx, x246, x5, 4);
    let x248: BytePoly_4 = bigint_nondet_rem!(ctx, x246, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x247, x5, 8), x248, 8), x246, 8),
        32515,
        2,
    )?;
    let x249: BytePoly_4 = bigint_nondet_inv!(ctx, x248, x5, 4);
    let x250: BytePoly_8 = bigint_mul!(x248, x249, 8);
    let x251: BytePoly_9 = bigint_nondet_quot!(ctx, x250, x5, 9);
    let x252: BytePoly_4 = bigint_nondet_rem!(ctx, x250, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x251, x5, 13), x252, 13), x250, 13),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x252, x2, 4), 34, 1)?;
    let x253: BytePoly_8 = bigint_mul!(x245, x249, 8);
    let x254: BytePoly_9 = bigint_nondet_quot!(ctx, x253, x5, 9);
    let x255: BytePoly_4 = bigint_nondet_rem!(ctx, x253, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x254, x5, 13), x255, 13), x253, 13),
        73156,
        4,
    )?;
    let x256: BytePoly_8 = bigint_mul!(x255, x210, 8);
    let x257: BytePoly_9 = bigint_nondet_quot!(ctx, x256, x5, 9);
    let x258: BytePoly_4 = bigint_nondet_rem!(ctx, x256, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x257, x5, 13), x258, 13), x256, 13),
        73156,
        4,
    )?;
    let x259: BytePoly_4 = bigint_add!(bigint_sub!(x216, x258, 4), x5, 4);
    let x260: BytePoly_4 = bigint_nondet_quot!(ctx, x259, x5, 4);
    let x261: BytePoly_4 = bigint_nondet_rem!(ctx, x259, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x260, x5, 8), x261, 8), x259, 8),
        32515,
        2,
    )?;
    let x262: BytePoly_8 = bigint_mul!(x255, x255, 8);
    let x263: BytePoly_9 = bigint_nondet_quot!(ctx, x262, x5, 9);
    let x264: BytePoly_4 = bigint_nondet_rem!(ctx, x262, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x263, x5, 13), x264, 13), x262, 13),
        73156,
        4,
    )?;
    let x265: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x264, x210, 4), x5, 4), x210, 4),
        x5,
        4
    );
    let x266: BytePoly_4 = bigint_nondet_quot!(ctx, x265, x5, 4);
    let x267: BytePoly_4 = bigint_nondet_rem!(ctx, x265, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x266, x5, 8), x267, 8), x265, 8),
        32515,
        2,
    )?;
    let x268: BytePoly_8 = bigint_mul!(x255, x267, 8);
    let x269: BytePoly_9 = bigint_nondet_quot!(ctx, x268, x5, 9);
    let x270: BytePoly_4 = bigint_nondet_rem!(ctx, x268, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x269, x5, 13), x270, 13), x268, 13),
        73156,
        4,
    )?;
    let x271: BytePoly_4 = bigint_add!(bigint_sub!(x5, bigint_add!(x270, x261, 4), 4), x5, 4);
    let x272: BytePoly_4 = bigint_nondet_quot!(ctx, x271, x5, 4);
    let x273: BytePoly_4 = bigint_nondet_rem!(ctx, x271, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x272, x5, 8), x273, 8), x271, 8),
        32515,
        2,
    )?;
    let x274: BytePoly_1 = bigint_nondet_rem!(ctx, x218, x1, 1);
    let x275: BytePoly_4 = bigint_nondet_quot!(ctx, x218, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x275, x1, 5), x274, 5), x218, 5),
        32515,
        2,
    )?;
    let x276: BytePoly_1 = bigint_sub!(x2, x274, 1);
    eqz(ctx, &bigint_mul!(x274, x276, 2), 8131, 2)?;
    let x277: BytePoly_4 = bigint_add!(bigint_sub!(x273, x239, 4), x5, 4);
    let x278: BytePoly_4 = bigint_add!(bigint_sub!(x267, x237, 4), x5, 4);
    let x279: BytePoly_4 = bigint_nondet_inv!(ctx, x278, x5, 4);
    let x280: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x277, x279, 8), x5, 4);
    let x281: BytePoly_8 = bigint_add!(bigint_sub!(bigint_mul!(x280, x278, 8), x277, 8), x5, 8);
    let x282: BytePoly_9 = bigint_nondet_quot!(ctx, x281, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x281, bigint_mul!(x282, x5, 13), 13),
        73156,
        4,
    )?;
    let x283: BytePoly_8 = bigint_mul!(x280, x280, 8);
    let x284: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x283, x237, 8), x5, 8), x267, 8),
        x5,
        8
    );
    let x285: BytePoly_9 = bigint_nondet_quot!(ctx, x284, x5, 9);
    let x286: BytePoly_4 = bigint_nondet_rem!(ctx, x284, x5, 4);
    let x287: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x5,
                bigint_add!(
                    bigint_mul!(x280, x286, 8),
                    bigint_add!(bigint_sub!(x239, bigint_mul!(x280, x237, 8), 8), x5, 8),
                    8
                ),
                8
            ),
            x5,
            8
        ),
        x5,
        8
    );
    let x288: BytePoly_9 = bigint_nondet_quot!(ctx, x287, x5, 9);
    let x289: BytePoly_4 = bigint_nondet_rem!(ctx, x287, x5, 4);
    let x290: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x283, bigint_mul!(x285, x5, 13), 13), x237, 13),
                    x267,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x286,
        13
    );
    eqz(ctx, &x290, 73156, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x288, x5, 13), x289, 13),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x280, bigint_sub!(x237, x286, 4), 8), x239, 8),
                    x5,
                    8
                ),
                x5,
                8
            ),
            13
        ),
        73156,
        4,
    )?;
    let x291: BytePoly_5 = bigint_add!(bigint_mul!(x286, x274, 5), bigint_mul!(x237, x276, 5), 5);
    let x292: BytePoly_5 = bigint_add!(bigint_mul!(x289, x274, 5), bigint_mul!(x239, x276, 5), 5);
    let x293: BytePoly_6 = bigint_nondet_quot!(ctx, x291, x5, 6);
    let x294: BytePoly_4 = bigint_nondet_rem!(ctx, x291, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x293, x5, 10), x294, 10), x291, 10),
        48771,
        4,
    )?;
    let x295: BytePoly_6 = bigint_nondet_quot!(ctx, x292, x5, 6);
    let x296: BytePoly_4 = bigint_nondet_rem!(ctx, x292, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x295, x5, 10), x296, 10), x292, 10),
        48771,
        4,
    )?;
    let x297: BytePoly_8 = bigint_mul!(x267, x267, 8);
    let x298: BytePoly_9 = bigint_nondet_quot!(ctx, x297, x5, 9);
    let x299: BytePoly_4 = bigint_nondet_rem!(ctx, x297, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x298, x5, 13), x299, 13), x297, 13),
        73156,
        4,
    )?;
    let x300: BytePoly_5 = bigint_add!(bigint_mul!(x299, x0, 5), x4, 5);
    let x301: BytePoly_6 = bigint_nondet_quot!(ctx, x300, x5, 6);
    let x302: BytePoly_4 = bigint_nondet_rem!(ctx, x300, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x301, x5, 10), x302, 10), x300, 10),
        48771,
        4,
    )?;
    let x303: BytePoly_4 = bigint_add!(x273, x273, 4);
    let x304: BytePoly_4 = bigint_nondet_quot!(ctx, x303, x5, 4);
    let x305: BytePoly_4 = bigint_nondet_rem!(ctx, x303, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x304, x5, 8), x305, 8), x303, 8),
        32515,
        2,
    )?;
    let x306: BytePoly_4 = bigint_nondet_inv!(ctx, x305, x5, 4);
    let x307: BytePoly_8 = bigint_mul!(x305, x306, 8);
    let x308: BytePoly_9 = bigint_nondet_quot!(ctx, x307, x5, 9);
    let x309: BytePoly_4 = bigint_nondet_rem!(ctx, x307, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x308, x5, 13), x309, 13), x307, 13),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x309, x2, 4), 34, 1)?;
    let x310: BytePoly_8 = bigint_mul!(x302, x306, 8);
    let x311: BytePoly_9 = bigint_nondet_quot!(ctx, x310, x5, 9);
    let x312: BytePoly_4 = bigint_nondet_rem!(ctx, x310, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x311, x5, 13), x312, 13), x310, 13),
        73156,
        4,
    )?;
    let x313: BytePoly_8 = bigint_mul!(x312, x267, 8);
    let x314: BytePoly_9 = bigint_nondet_quot!(ctx, x313, x5, 9);
    let x315: BytePoly_4 = bigint_nondet_rem!(ctx, x313, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x314, x5, 13), x315, 13), x313, 13),
        73156,
        4,
    )?;
    let x316: BytePoly_4 = bigint_add!(bigint_sub!(x273, x315, 4), x5, 4);
    let x317: BytePoly_4 = bigint_nondet_quot!(ctx, x316, x5, 4);
    let x318: BytePoly_4 = bigint_nondet_rem!(ctx, x316, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x317, x5, 8), x318, 8), x316, 8),
        32515,
        2,
    )?;
    let x319: BytePoly_8 = bigint_mul!(x312, x312, 8);
    let x320: BytePoly_9 = bigint_nondet_quot!(ctx, x319, x5, 9);
    let x321: BytePoly_4 = bigint_nondet_rem!(ctx, x319, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x320, x5, 13), x321, 13), x319, 13),
        73156,
        4,
    )?;
    let x322: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x321, x267, 4), x5, 4), x267, 4),
        x5,
        4
    );
    let x323: BytePoly_4 = bigint_nondet_quot!(ctx, x322, x5, 4);
    let x324: BytePoly_4 = bigint_nondet_rem!(ctx, x322, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x323, x5, 8), x324, 8), x322, 8),
        32515,
        2,
    )?;
    let x325: BytePoly_8 = bigint_mul!(x312, x324, 8);
    let x326: BytePoly_9 = bigint_nondet_quot!(ctx, x325, x5, 9);
    let x327: BytePoly_4 = bigint_nondet_rem!(ctx, x325, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x326, x5, 13), x327, 13), x325, 13),
        73156,
        4,
    )?;
    let x328: BytePoly_4 = bigint_add!(bigint_sub!(x5, bigint_add!(x327, x318, 4), 4), x5, 4);
    let x329: BytePoly_4 = bigint_nondet_quot!(ctx, x328, x5, 4);
    let x330: BytePoly_4 = bigint_nondet_rem!(ctx, x328, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x329, x5, 8), x330, 8), x328, 8),
        32515,
        2,
    )?;
    let x331: BytePoly_1 = bigint_nondet_rem!(ctx, x275, x1, 1);
    let x332: BytePoly_4 = bigint_nondet_quot!(ctx, x275, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x332, x1, 5), x331, 5), x275, 5),
        32515,
        2,
    )?;
    let x333: BytePoly_1 = bigint_sub!(x2, x331, 1);
    eqz(ctx, &bigint_mul!(x331, x333, 2), 8131, 2)?;
    let x334: BytePoly_4 = bigint_add!(bigint_sub!(x330, x296, 4), x5, 4);
    let x335: BytePoly_4 = bigint_add!(bigint_sub!(x324, x294, 4), x5, 4);
    let x336: BytePoly_4 = bigint_nondet_inv!(ctx, x335, x5, 4);
    let x337: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x334, x336, 8), x5, 4);
    let x338: BytePoly_8 = bigint_add!(bigint_sub!(bigint_mul!(x337, x335, 8), x334, 8), x5, 8);
    let x339: BytePoly_9 = bigint_nondet_quot!(ctx, x338, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x338, bigint_mul!(x339, x5, 13), 13),
        73156,
        4,
    )?;
    let x340: BytePoly_8 = bigint_mul!(x337, x337, 8);
    let x341: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x340, x294, 8), x5, 8), x324, 8),
        x5,
        8
    );
    let x342: BytePoly_9 = bigint_nondet_quot!(ctx, x341, x5, 9);
    let x343: BytePoly_4 = bigint_nondet_rem!(ctx, x341, x5, 4);
    let x344: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x5,
                bigint_add!(
                    bigint_mul!(x337, x343, 8),
                    bigint_add!(bigint_sub!(x296, bigint_mul!(x337, x294, 8), 8), x5, 8),
                    8
                ),
                8
            ),
            x5,
            8
        ),
        x5,
        8
    );
    let x345: BytePoly_9 = bigint_nondet_quot!(ctx, x344, x5, 9);
    let x346: BytePoly_4 = bigint_nondet_rem!(ctx, x344, x5, 4);
    let x347: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x340, bigint_mul!(x342, x5, 13), 13), x294, 13),
                    x324,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x343,
        13
    );
    eqz(ctx, &x347, 73156, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x345, x5, 13), x346, 13),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x337, bigint_sub!(x294, x343, 4), 8), x296, 8),
                    x5,
                    8
                ),
                x5,
                8
            ),
            13
        ),
        73156,
        4,
    )?;
    let x348: BytePoly_5 = bigint_add!(bigint_mul!(x343, x331, 5), bigint_mul!(x294, x333, 5), 5);
    let x349: BytePoly_5 = bigint_add!(bigint_mul!(x346, x331, 5), bigint_mul!(x296, x333, 5), 5);
    let x350: BytePoly_6 = bigint_nondet_quot!(ctx, x348, x5, 6);
    let x351: BytePoly_4 = bigint_nondet_rem!(ctx, x348, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x350, x5, 10), x351, 10), x348, 10),
        48771,
        4,
    )?;
    let x352: BytePoly_6 = bigint_nondet_quot!(ctx, x349, x5, 6);
    let x353: BytePoly_4 = bigint_nondet_rem!(ctx, x349, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x352, x5, 10), x353, 10), x349, 10),
        48771,
        4,
    )?;
    let x354: BytePoly_8 = bigint_mul!(x324, x324, 8);
    let x355: BytePoly_9 = bigint_nondet_quot!(ctx, x354, x5, 9);
    let x356: BytePoly_4 = bigint_nondet_rem!(ctx, x354, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x355, x5, 13), x356, 13), x354, 13),
        73156,
        4,
    )?;
    let x357: BytePoly_5 = bigint_add!(bigint_mul!(x356, x0, 5), x4, 5);
    let x358: BytePoly_6 = bigint_nondet_quot!(ctx, x357, x5, 6);
    let x359: BytePoly_4 = bigint_nondet_rem!(ctx, x357, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x358, x5, 10), x359, 10), x357, 10),
        48771,
        4,
    )?;
    let x360: BytePoly_4 = bigint_add!(x330, x330, 4);
    let x361: BytePoly_4 = bigint_nondet_quot!(ctx, x360, x5, 4);
    let x362: BytePoly_4 = bigint_nondet_rem!(ctx, x360, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x361, x5, 8), x362, 8), x360, 8),
        32515,
        2,
    )?;
    let x363: BytePoly_4 = bigint_nondet_inv!(ctx, x362, x5, 4);
    let x364: BytePoly_8 = bigint_mul!(x362, x363, 8);
    let x365: BytePoly_9 = bigint_nondet_quot!(ctx, x364, x5, 9);
    let x366: BytePoly_4 = bigint_nondet_rem!(ctx, x364, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x365, x5, 13), x366, 13), x364, 13),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x366, x2, 4), 34, 1)?;
    let x367: BytePoly_8 = bigint_mul!(x359, x363, 8);
    let x368: BytePoly_9 = bigint_nondet_quot!(ctx, x367, x5, 9);
    let x369: BytePoly_4 = bigint_nondet_rem!(ctx, x367, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x368, x5, 13), x369, 13), x367, 13),
        73156,
        4,
    )?;
    let x370: BytePoly_8 = bigint_mul!(x369, x324, 8);
    let x371: BytePoly_9 = bigint_nondet_quot!(ctx, x370, x5, 9);
    let x372: BytePoly_4 = bigint_nondet_rem!(ctx, x370, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x371, x5, 13), x372, 13), x370, 13),
        73156,
        4,
    )?;
    let x373: BytePoly_4 = bigint_add!(bigint_sub!(x330, x372, 4), x5, 4);
    let x374: BytePoly_4 = bigint_nondet_quot!(ctx, x373, x5, 4);
    let x375: BytePoly_4 = bigint_nondet_rem!(ctx, x373, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x374, x5, 8), x375, 8), x373, 8),
        32515,
        2,
    )?;
    let x376: BytePoly_8 = bigint_mul!(x369, x369, 8);
    let x377: BytePoly_9 = bigint_nondet_quot!(ctx, x376, x5, 9);
    let x378: BytePoly_4 = bigint_nondet_rem!(ctx, x376, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x377, x5, 13), x378, 13), x376, 13),
        73156,
        4,
    )?;
    let x379: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x378, x324, 4), x5, 4), x324, 4),
        x5,
        4
    );
    let x380: BytePoly_4 = bigint_nondet_quot!(ctx, x379, x5, 4);
    let x381: BytePoly_4 = bigint_nondet_rem!(ctx, x379, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x380, x5, 8), x381, 8), x379, 8),
        32515,
        2,
    )?;
    let x382: BytePoly_8 = bigint_mul!(x369, x381, 8);
    let x383: BytePoly_9 = bigint_nondet_quot!(ctx, x382, x5, 9);
    let x384: BytePoly_4 = bigint_nondet_rem!(ctx, x382, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x383, x5, 13), x384, 13), x382, 13),
        73156,
        4,
    )?;
    let x385: BytePoly_4 = bigint_add!(bigint_sub!(x5, bigint_add!(x384, x375, 4), 4), x5, 4);
    let x386: BytePoly_4 = bigint_nondet_quot!(ctx, x385, x5, 4);
    let x387: BytePoly_4 = bigint_nondet_rem!(ctx, x385, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x386, x5, 8), x387, 8), x385, 8),
        32515,
        2,
    )?;
    let x388: BytePoly_1 = bigint_nondet_rem!(ctx, x332, x1, 1);
    let x389: BytePoly_4 = bigint_nondet_quot!(ctx, x332, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x389, x1, 5), x388, 5), x332, 5),
        32515,
        2,
    )?;
    let x390: BytePoly_1 = bigint_sub!(x2, x388, 1);
    eqz(ctx, &bigint_mul!(x388, x390, 2), 8131, 2)?;
    let x391: BytePoly_4 = bigint_add!(bigint_sub!(x387, x353, 4), x5, 4);
    let x392: BytePoly_4 = bigint_add!(bigint_sub!(x381, x351, 4), x5, 4);
    let x393: BytePoly_4 = bigint_nondet_inv!(ctx, x392, x5, 4);
    let x394: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x391, x393, 8), x5, 4);
    let x395: BytePoly_8 = bigint_add!(bigint_sub!(bigint_mul!(x394, x392, 8), x391, 8), x5, 8);
    let x396: BytePoly_9 = bigint_nondet_quot!(ctx, x395, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x395, bigint_mul!(x396, x5, 13), 13),
        73156,
        4,
    )?;
    let x397: BytePoly_8 = bigint_mul!(x394, x394, 8);
    let x398: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x397, x351, 8), x5, 8), x381, 8),
        x5,
        8
    );
    let x399: BytePoly_9 = bigint_nondet_quot!(ctx, x398, x5, 9);
    let x400: BytePoly_4 = bigint_nondet_rem!(ctx, x398, x5, 4);
    let x401: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x5,
                bigint_add!(
                    bigint_mul!(x394, x400, 8),
                    bigint_add!(bigint_sub!(x353, bigint_mul!(x394, x351, 8), 8), x5, 8),
                    8
                ),
                8
            ),
            x5,
            8
        ),
        x5,
        8
    );
    let x402: BytePoly_9 = bigint_nondet_quot!(ctx, x401, x5, 9);
    let x403: BytePoly_4 = bigint_nondet_rem!(ctx, x401, x5, 4);
    let x404: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x397, bigint_mul!(x399, x5, 13), 13), x351, 13),
                    x381,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x400,
        13
    );
    eqz(ctx, &x404, 73156, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x402, x5, 13), x403, 13),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x394, bigint_sub!(x351, x400, 4), 8), x353, 8),
                    x5,
                    8
                ),
                x5,
                8
            ),
            13
        ),
        73156,
        4,
    )?;
    let x405: BytePoly_5 = bigint_add!(bigint_mul!(x400, x388, 5), bigint_mul!(x351, x390, 5), 5);
    let x406: BytePoly_5 = bigint_add!(bigint_mul!(x403, x388, 5), bigint_mul!(x353, x390, 5), 5);
    let x407: BytePoly_6 = bigint_nondet_quot!(ctx, x405, x5, 6);
    let x408: BytePoly_4 = bigint_nondet_rem!(ctx, x405, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x407, x5, 10), x408, 10), x405, 10),
        48771,
        4,
    )?;
    let x409: BytePoly_6 = bigint_nondet_quot!(ctx, x406, x5, 6);
    let x410: BytePoly_4 = bigint_nondet_rem!(ctx, x406, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x409, x5, 10), x410, 10), x406, 10),
        48771,
        4,
    )?;
    let x411: BytePoly_8 = bigint_mul!(x381, x381, 8);
    let x412: BytePoly_9 = bigint_nondet_quot!(ctx, x411, x5, 9);
    let x413: BytePoly_4 = bigint_nondet_rem!(ctx, x411, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x412, x5, 13), x413, 13), x411, 13),
        73156,
        4,
    )?;
    let x414: BytePoly_5 = bigint_add!(bigint_mul!(x413, x0, 5), x4, 5);
    let x415: BytePoly_6 = bigint_nondet_quot!(ctx, x414, x5, 6);
    let x416: BytePoly_4 = bigint_nondet_rem!(ctx, x414, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x415, x5, 10), x416, 10), x414, 10),
        48771,
        4,
    )?;
    let x417: BytePoly_4 = bigint_add!(x387, x387, 4);
    let x418: BytePoly_4 = bigint_nondet_quot!(ctx, x417, x5, 4);
    let x419: BytePoly_4 = bigint_nondet_rem!(ctx, x417, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x418, x5, 8), x419, 8), x417, 8),
        32515,
        2,
    )?;
    let x420: BytePoly_4 = bigint_nondet_inv!(ctx, x419, x5, 4);
    let x421: BytePoly_8 = bigint_mul!(x419, x420, 8);
    let x422: BytePoly_9 = bigint_nondet_quot!(ctx, x421, x5, 9);
    let x423: BytePoly_4 = bigint_nondet_rem!(ctx, x421, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x422, x5, 13), x423, 13), x421, 13),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x423, x2, 4), 34, 1)?;
    let x424: BytePoly_8 = bigint_mul!(x416, x420, 8);
    let x425: BytePoly_9 = bigint_nondet_quot!(ctx, x424, x5, 9);
    let x426: BytePoly_4 = bigint_nondet_rem!(ctx, x424, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x425, x5, 13), x426, 13), x424, 13),
        73156,
        4,
    )?;
    let x427: BytePoly_8 = bigint_mul!(x426, x381, 8);
    let x428: BytePoly_9 = bigint_nondet_quot!(ctx, x427, x5, 9);
    let x429: BytePoly_4 = bigint_nondet_rem!(ctx, x427, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x428, x5, 13), x429, 13), x427, 13),
        73156,
        4,
    )?;
    let x430: BytePoly_4 = bigint_add!(bigint_sub!(x387, x429, 4), x5, 4);
    let x431: BytePoly_4 = bigint_nondet_quot!(ctx, x430, x5, 4);
    let x432: BytePoly_4 = bigint_nondet_rem!(ctx, x430, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x431, x5, 8), x432, 8), x430, 8),
        32515,
        2,
    )?;
    let x433: BytePoly_8 = bigint_mul!(x426, x426, 8);
    let x434: BytePoly_9 = bigint_nondet_quot!(ctx, x433, x5, 9);
    let x435: BytePoly_4 = bigint_nondet_rem!(ctx, x433, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x434, x5, 13), x435, 13), x433, 13),
        73156,
        4,
    )?;
    let x436: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x435, x381, 4), x5, 4), x381, 4),
        x5,
        4
    );
    let x437: BytePoly_4 = bigint_nondet_quot!(ctx, x436, x5, 4);
    let x438: BytePoly_4 = bigint_nondet_rem!(ctx, x436, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x437, x5, 8), x438, 8), x436, 8),
        32515,
        2,
    )?;
    let x439: BytePoly_8 = bigint_mul!(x426, x438, 8);
    let x440: BytePoly_9 = bigint_nondet_quot!(ctx, x439, x5, 9);
    let x441: BytePoly_4 = bigint_nondet_rem!(ctx, x439, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x440, x5, 13), x441, 13), x439, 13),
        73156,
        4,
    )?;
    let x442: BytePoly_4 = bigint_add!(bigint_sub!(x5, bigint_add!(x441, x432, 4), 4), x5, 4);
    let x443: BytePoly_4 = bigint_nondet_quot!(ctx, x442, x5, 4);
    let x444: BytePoly_4 = bigint_nondet_rem!(ctx, x442, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x443, x5, 8), x444, 8), x442, 8),
        32515,
        2,
    )?;
    let x445: BytePoly_1 = bigint_nondet_rem!(ctx, x389, x1, 1);
    let x446: BytePoly_4 = bigint_nondet_quot!(ctx, x389, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x446, x1, 5), x445, 5), x389, 5),
        32515,
        2,
    )?;
    let x447: BytePoly_1 = bigint_sub!(x2, x445, 1);
    eqz(ctx, &bigint_mul!(x445, x447, 2), 8131, 2)?;
    let x448: BytePoly_4 = bigint_add!(bigint_sub!(x444, x410, 4), x5, 4);
    let x449: BytePoly_4 = bigint_add!(bigint_sub!(x438, x408, 4), x5, 4);
    let x450: BytePoly_4 = bigint_nondet_inv!(ctx, x449, x5, 4);
    let x451: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x448, x450, 8), x5, 4);
    let x452: BytePoly_8 = bigint_add!(bigint_sub!(bigint_mul!(x451, x449, 8), x448, 8), x5, 8);
    let x453: BytePoly_9 = bigint_nondet_quot!(ctx, x452, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x452, bigint_mul!(x453, x5, 13), 13),
        73156,
        4,
    )?;
    let x454: BytePoly_8 = bigint_mul!(x451, x451, 8);
    let x455: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x454, x408, 8), x5, 8), x438, 8),
        x5,
        8
    );
    let x456: BytePoly_9 = bigint_nondet_quot!(ctx, x455, x5, 9);
    let x457: BytePoly_4 = bigint_nondet_rem!(ctx, x455, x5, 4);
    let x458: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x5,
                bigint_add!(
                    bigint_mul!(x451, x457, 8),
                    bigint_add!(bigint_sub!(x410, bigint_mul!(x451, x408, 8), 8), x5, 8),
                    8
                ),
                8
            ),
            x5,
            8
        ),
        x5,
        8
    );
    let x459: BytePoly_9 = bigint_nondet_quot!(ctx, x458, x5, 9);
    let x460: BytePoly_4 = bigint_nondet_rem!(ctx, x458, x5, 4);
    let x461: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x454, bigint_mul!(x456, x5, 13), 13), x408, 13),
                    x438,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x457,
        13
    );
    eqz(ctx, &x461, 73156, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x459, x5, 13), x460, 13),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x451, bigint_sub!(x408, x457, 4), 8), x410, 8),
                    x5,
                    8
                ),
                x5,
                8
            ),
            13
        ),
        73156,
        4,
    )?;
    let x462: BytePoly_5 = bigint_add!(bigint_mul!(x457, x445, 5), bigint_mul!(x408, x447, 5), 5);
    let x463: BytePoly_5 = bigint_add!(bigint_mul!(x460, x445, 5), bigint_mul!(x410, x447, 5), 5);
    let x464: BytePoly_6 = bigint_nondet_quot!(ctx, x462, x5, 6);
    let x465: BytePoly_4 = bigint_nondet_rem!(ctx, x462, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x464, x5, 10), x465, 10), x462, 10),
        48771,
        4,
    )?;
    let x466: BytePoly_6 = bigint_nondet_quot!(ctx, x463, x5, 6);
    let x467: BytePoly_4 = bigint_nondet_rem!(ctx, x463, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x466, x5, 10), x467, 10), x463, 10),
        48771,
        4,
    )?;
    let x468: BytePoly_8 = bigint_mul!(x438, x438, 8);
    let x469: BytePoly_9 = bigint_nondet_quot!(ctx, x468, x5, 9);
    let x470: BytePoly_4 = bigint_nondet_rem!(ctx, x468, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x469, x5, 13), x470, 13), x468, 13),
        73156,
        4,
    )?;
    let x471: BytePoly_5 = bigint_add!(bigint_mul!(x470, x0, 5), x4, 5);
    let x472: BytePoly_6 = bigint_nondet_quot!(ctx, x471, x5, 6);
    let x473: BytePoly_4 = bigint_nondet_rem!(ctx, x471, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x472, x5, 10), x473, 10), x471, 10),
        48771,
        4,
    )?;
    let x474: BytePoly_4 = bigint_add!(x444, x444, 4);
    let x475: BytePoly_4 = bigint_nondet_quot!(ctx, x474, x5, 4);
    let x476: BytePoly_4 = bigint_nondet_rem!(ctx, x474, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x475, x5, 8), x476, 8), x474, 8),
        32515,
        2,
    )?;
    let x477: BytePoly_4 = bigint_nondet_inv!(ctx, x476, x5, 4);
    let x478: BytePoly_8 = bigint_mul!(x476, x477, 8);
    let x479: BytePoly_9 = bigint_nondet_quot!(ctx, x478, x5, 9);
    let x480: BytePoly_4 = bigint_nondet_rem!(ctx, x478, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x479, x5, 13), x480, 13), x478, 13),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x480, x2, 4), 34, 1)?;
    let x481: BytePoly_8 = bigint_mul!(x473, x477, 8);
    let x482: BytePoly_9 = bigint_nondet_quot!(ctx, x481, x5, 9);
    let x483: BytePoly_4 = bigint_nondet_rem!(ctx, x481, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x482, x5, 13), x483, 13), x481, 13),
        73156,
        4,
    )?;
    let x484: BytePoly_8 = bigint_mul!(x483, x438, 8);
    let x485: BytePoly_9 = bigint_nondet_quot!(ctx, x484, x5, 9);
    let x486: BytePoly_4 = bigint_nondet_rem!(ctx, x484, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x485, x5, 13), x486, 13), x484, 13),
        73156,
        4,
    )?;
    let x487: BytePoly_4 = bigint_add!(bigint_sub!(x444, x486, 4), x5, 4);
    let x488: BytePoly_4 = bigint_nondet_quot!(ctx, x487, x5, 4);
    let x489: BytePoly_4 = bigint_nondet_rem!(ctx, x487, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x488, x5, 8), x489, 8), x487, 8),
        32515,
        2,
    )?;
    let x490: BytePoly_8 = bigint_mul!(x483, x483, 8);
    let x491: BytePoly_9 = bigint_nondet_quot!(ctx, x490, x5, 9);
    let x492: BytePoly_4 = bigint_nondet_rem!(ctx, x490, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x491, x5, 13), x492, 13), x490, 13),
        73156,
        4,
    )?;
    let x493: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x492, x438, 4), x5, 4), x438, 4),
        x5,
        4
    );
    let x494: BytePoly_4 = bigint_nondet_quot!(ctx, x493, x5, 4);
    let x495: BytePoly_4 = bigint_nondet_rem!(ctx, x493, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x494, x5, 8), x495, 8), x493, 8),
        32515,
        2,
    )?;
    let x496: BytePoly_8 = bigint_mul!(x483, x495, 8);
    let x497: BytePoly_9 = bigint_nondet_quot!(ctx, x496, x5, 9);
    let x498: BytePoly_4 = bigint_nondet_rem!(ctx, x496, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x497, x5, 13), x498, 13), x496, 13),
        73156,
        4,
    )?;
    let x499: BytePoly_4 = bigint_add!(bigint_sub!(x5, bigint_add!(x498, x489, 4), 4), x5, 4);
    let x500: BytePoly_4 = bigint_nondet_quot!(ctx, x499, x5, 4);
    let x501: BytePoly_4 = bigint_nondet_rem!(ctx, x499, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x500, x5, 8), x501, 8), x499, 8),
        32515,
        2,
    )?;
    let x502: BytePoly_1 = bigint_nondet_rem!(ctx, x446, x1, 1);
    let x503: BytePoly_4 = bigint_nondet_quot!(ctx, x446, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x503, x1, 5), x502, 5), x446, 5),
        32515,
        2,
    )?;
    let x504: BytePoly_1 = bigint_sub!(x2, x502, 1);
    eqz(ctx, &bigint_mul!(x502, x504, 2), 8131, 2)?;
    let x505: BytePoly_4 = bigint_add!(bigint_sub!(x501, x467, 4), x5, 4);
    let x506: BytePoly_4 = bigint_add!(bigint_sub!(x495, x465, 4), x5, 4);
    let x507: BytePoly_4 = bigint_nondet_inv!(ctx, x506, x5, 4);
    let x508: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x505, x507, 8), x5, 4);
    let x509: BytePoly_8 = bigint_add!(bigint_sub!(bigint_mul!(x508, x506, 8), x505, 8), x5, 8);
    let x510: BytePoly_9 = bigint_nondet_quot!(ctx, x509, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x509, bigint_mul!(x510, x5, 13), 13),
        73156,
        4,
    )?;
    let x511: BytePoly_8 = bigint_mul!(x508, x508, 8);
    let x512: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x511, x465, 8), x5, 8), x495, 8),
        x5,
        8
    );
    let x513: BytePoly_9 = bigint_nondet_quot!(ctx, x512, x5, 9);
    let x514: BytePoly_4 = bigint_nondet_rem!(ctx, x512, x5, 4);
    let x515: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x5,
                bigint_add!(
                    bigint_mul!(x508, x514, 8),
                    bigint_add!(bigint_sub!(x467, bigint_mul!(x508, x465, 8), 8), x5, 8),
                    8
                ),
                8
            ),
            x5,
            8
        ),
        x5,
        8
    );
    let x516: BytePoly_9 = bigint_nondet_quot!(ctx, x515, x5, 9);
    let x517: BytePoly_4 = bigint_nondet_rem!(ctx, x515, x5, 4);
    let x518: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x511, bigint_mul!(x513, x5, 13), 13), x465, 13),
                    x495,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x514,
        13
    );
    eqz(ctx, &x518, 73156, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x516, x5, 13), x517, 13),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x508, bigint_sub!(x465, x514, 4), 8), x467, 8),
                    x5,
                    8
                ),
                x5,
                8
            ),
            13
        ),
        73156,
        4,
    )?;
    let x519: BytePoly_5 = bigint_add!(bigint_mul!(x514, x502, 5), bigint_mul!(x465, x504, 5), 5);
    let x520: BytePoly_5 = bigint_add!(bigint_mul!(x517, x502, 5), bigint_mul!(x467, x504, 5), 5);
    let x521: BytePoly_6 = bigint_nondet_quot!(ctx, x519, x5, 6);
    let x522: BytePoly_4 = bigint_nondet_rem!(ctx, x519, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x521, x5, 10), x522, 10), x519, 10),
        48771,
        4,
    )?;
    let x523: BytePoly_6 = bigint_nondet_quot!(ctx, x520, x5, 6);
    let x524: BytePoly_4 = bigint_nondet_rem!(ctx, x520, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x523, x5, 10), x524, 10), x520, 10),
        48771,
        4,
    )?;
    let x525: BytePoly_8 = bigint_mul!(x495, x495, 8);
    let x526: BytePoly_9 = bigint_nondet_quot!(ctx, x525, x5, 9);
    let x527: BytePoly_4 = bigint_nondet_rem!(ctx, x525, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x526, x5, 13), x527, 13), x525, 13),
        73156,
        4,
    )?;
    let x528: BytePoly_5 = bigint_add!(bigint_mul!(x527, x0, 5), x4, 5);
    let x529: BytePoly_6 = bigint_nondet_quot!(ctx, x528, x5, 6);
    let x530: BytePoly_4 = bigint_nondet_rem!(ctx, x528, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x529, x5, 10), x530, 10), x528, 10),
        48771,
        4,
    )?;
    let x531: BytePoly_4 = bigint_add!(x501, x501, 4);
    let x532: BytePoly_4 = bigint_nondet_quot!(ctx, x531, x5, 4);
    let x533: BytePoly_4 = bigint_nondet_rem!(ctx, x531, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x532, x5, 8), x533, 8), x531, 8),
        32515,
        2,
    )?;
    let x534: BytePoly_4 = bigint_nondet_inv!(ctx, x533, x5, 4);
    let x535: BytePoly_8 = bigint_mul!(x533, x534, 8);
    let x536: BytePoly_9 = bigint_nondet_quot!(ctx, x535, x5, 9);
    let x537: BytePoly_4 = bigint_nondet_rem!(ctx, x535, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x536, x5, 13), x537, 13), x535, 13),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x537, x2, 4), 34, 1)?;
    let x538: BytePoly_8 = bigint_mul!(x530, x534, 8);
    let x539: BytePoly_9 = bigint_nondet_quot!(ctx, x538, x5, 9);
    let x540: BytePoly_4 = bigint_nondet_rem!(ctx, x538, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x539, x5, 13), x540, 13), x538, 13),
        73156,
        4,
    )?;
    let x541: BytePoly_8 = bigint_mul!(x540, x495, 8);
    let x542: BytePoly_9 = bigint_nondet_quot!(ctx, x541, x5, 9);
    let x543: BytePoly_4 = bigint_nondet_rem!(ctx, x541, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x542, x5, 13), x543, 13), x541, 13),
        73156,
        4,
    )?;
    let x544: BytePoly_4 = bigint_add!(bigint_sub!(x501, x543, 4), x5, 4);
    let x545: BytePoly_4 = bigint_nondet_quot!(ctx, x544, x5, 4);
    let x546: BytePoly_4 = bigint_nondet_rem!(ctx, x544, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x545, x5, 8), x546, 8), x544, 8),
        32515,
        2,
    )?;
    let x547: BytePoly_8 = bigint_mul!(x540, x540, 8);
    let x548: BytePoly_9 = bigint_nondet_quot!(ctx, x547, x5, 9);
    let x549: BytePoly_4 = bigint_nondet_rem!(ctx, x547, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x548, x5, 13), x549, 13), x547, 13),
        73156,
        4,
    )?;
    let x550: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x549, x495, 4), x5, 4), x495, 4),
        x5,
        4
    );
    let x551: BytePoly_4 = bigint_nondet_quot!(ctx, x550, x5, 4);
    let x552: BytePoly_4 = bigint_nondet_rem!(ctx, x550, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x551, x5, 8), x552, 8), x550, 8),
        32515,
        2,
    )?;
    let x553: BytePoly_8 = bigint_mul!(x540, x552, 8);
    let x554: BytePoly_9 = bigint_nondet_quot!(ctx, x553, x5, 9);
    let x555: BytePoly_4 = bigint_nondet_rem!(ctx, x553, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x554, x5, 13), x555, 13), x553, 13),
        73156,
        4,
    )?;
    let x556: BytePoly_4 = bigint_add!(bigint_sub!(x5, bigint_add!(x555, x546, 4), 4), x5, 4);
    let x557: BytePoly_4 = bigint_nondet_quot!(ctx, x556, x5, 4);
    let x558: BytePoly_4 = bigint_nondet_rem!(ctx, x556, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x557, x5, 8), x558, 8), x556, 8),
        32515,
        2,
    )?;
    let x559: BytePoly_1 = bigint_nondet_rem!(ctx, x503, x1, 1);
    let x560: BytePoly_4 = bigint_nondet_quot!(ctx, x503, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x560, x1, 5), x559, 5), x503, 5),
        32515,
        2,
    )?;
    let x561: BytePoly_1 = bigint_sub!(x2, x559, 1);
    eqz(ctx, &bigint_mul!(x559, x561, 2), 8131, 2)?;
    let x562: BytePoly_4 = bigint_add!(bigint_sub!(x558, x524, 4), x5, 4);
    let x563: BytePoly_4 = bigint_add!(bigint_sub!(x552, x522, 4), x5, 4);
    let x564: BytePoly_4 = bigint_nondet_inv!(ctx, x563, x5, 4);
    let x565: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x562, x564, 8), x5, 4);
    let x566: BytePoly_8 = bigint_add!(bigint_sub!(bigint_mul!(x565, x563, 8), x562, 8), x5, 8);
    let x567: BytePoly_9 = bigint_nondet_quot!(ctx, x566, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x566, bigint_mul!(x567, x5, 13), 13),
        73156,
        4,
    )?;
    let x568: BytePoly_8 = bigint_mul!(x565, x565, 8);
    let x569: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x568, x522, 8), x5, 8), x552, 8),
        x5,
        8
    );
    let x570: BytePoly_9 = bigint_nondet_quot!(ctx, x569, x5, 9);
    let x571: BytePoly_4 = bigint_nondet_rem!(ctx, x569, x5, 4);
    let x572: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x5,
                bigint_add!(
                    bigint_mul!(x565, x571, 8),
                    bigint_add!(bigint_sub!(x524, bigint_mul!(x565, x522, 8), 8), x5, 8),
                    8
                ),
                8
            ),
            x5,
            8
        ),
        x5,
        8
    );
    let x573: BytePoly_9 = bigint_nondet_quot!(ctx, x572, x5, 9);
    let x574: BytePoly_4 = bigint_nondet_rem!(ctx, x572, x5, 4);
    let x575: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x568, bigint_mul!(x570, x5, 13), 13), x522, 13),
                    x552,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x571,
        13
    );
    eqz(ctx, &x575, 73156, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x573, x5, 13), x574, 13),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x565, bigint_sub!(x522, x571, 4), 8), x524, 8),
                    x5,
                    8
                ),
                x5,
                8
            ),
            13
        ),
        73156,
        4,
    )?;
    let x576: BytePoly_5 = bigint_add!(bigint_mul!(x571, x559, 5), bigint_mul!(x522, x561, 5), 5);
    let x577: BytePoly_5 = bigint_add!(bigint_mul!(x574, x559, 5), bigint_mul!(x524, x561, 5), 5);
    let x578: BytePoly_6 = bigint_nondet_quot!(ctx, x576, x5, 6);
    let x579: BytePoly_4 = bigint_nondet_rem!(ctx, x576, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x578, x5, 10), x579, 10), x576, 10),
        48771,
        4,
    )?;
    let x580: BytePoly_6 = bigint_nondet_quot!(ctx, x577, x5, 6);
    let x581: BytePoly_4 = bigint_nondet_rem!(ctx, x577, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x580, x5, 10), x581, 10), x577, 10),
        48771,
        4,
    )?;
    let x582: BytePoly_8 = bigint_mul!(x552, x552, 8);
    let x583: BytePoly_9 = bigint_nondet_quot!(ctx, x582, x5, 9);
    let x584: BytePoly_4 = bigint_nondet_rem!(ctx, x582, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x583, x5, 13), x584, 13), x582, 13),
        73156,
        4,
    )?;
    let x585: BytePoly_5 = bigint_add!(bigint_mul!(x584, x0, 5), x4, 5);
    let x586: BytePoly_6 = bigint_nondet_quot!(ctx, x585, x5, 6);
    let x587: BytePoly_4 = bigint_nondet_rem!(ctx, x585, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x586, x5, 10), x587, 10), x585, 10),
        48771,
        4,
    )?;
    let x588: BytePoly_4 = bigint_add!(x558, x558, 4);
    let x589: BytePoly_4 = bigint_nondet_quot!(ctx, x588, x5, 4);
    let x590: BytePoly_4 = bigint_nondet_rem!(ctx, x588, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x589, x5, 8), x590, 8), x588, 8),
        32515,
        2,
    )?;
    let x591: BytePoly_4 = bigint_nondet_inv!(ctx, x590, x5, 4);
    let x592: BytePoly_8 = bigint_mul!(x590, x591, 8);
    let x593: BytePoly_9 = bigint_nondet_quot!(ctx, x592, x5, 9);
    let x594: BytePoly_4 = bigint_nondet_rem!(ctx, x592, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x593, x5, 13), x594, 13), x592, 13),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x594, x2, 4), 34, 1)?;
    let x595: BytePoly_8 = bigint_mul!(x587, x591, 8);
    let x596: BytePoly_9 = bigint_nondet_quot!(ctx, x595, x5, 9);
    let x597: BytePoly_4 = bigint_nondet_rem!(ctx, x595, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x596, x5, 13), x597, 13), x595, 13),
        73156,
        4,
    )?;
    let x598: BytePoly_8 = bigint_mul!(x597, x552, 8);
    let x599: BytePoly_9 = bigint_nondet_quot!(ctx, x598, x5, 9);
    let x600: BytePoly_4 = bigint_nondet_rem!(ctx, x598, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x599, x5, 13), x600, 13), x598, 13),
        73156,
        4,
    )?;
    let x601: BytePoly_4 = bigint_add!(bigint_sub!(x558, x600, 4), x5, 4);
    let x602: BytePoly_4 = bigint_nondet_quot!(ctx, x601, x5, 4);
    let x603: BytePoly_4 = bigint_nondet_rem!(ctx, x601, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x602, x5, 8), x603, 8), x601, 8),
        32515,
        2,
    )?;
    let x604: BytePoly_8 = bigint_mul!(x597, x597, 8);
    let x605: BytePoly_9 = bigint_nondet_quot!(ctx, x604, x5, 9);
    let x606: BytePoly_4 = bigint_nondet_rem!(ctx, x604, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x605, x5, 13), x606, 13), x604, 13),
        73156,
        4,
    )?;
    let x607: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x606, x552, 4), x5, 4), x552, 4),
        x5,
        4
    );
    let x608: BytePoly_4 = bigint_nondet_quot!(ctx, x607, x5, 4);
    let x609: BytePoly_4 = bigint_nondet_rem!(ctx, x607, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x608, x5, 8), x609, 8), x607, 8),
        32515,
        2,
    )?;
    let x610: BytePoly_8 = bigint_mul!(x597, x609, 8);
    let x611: BytePoly_9 = bigint_nondet_quot!(ctx, x610, x5, 9);
    let x612: BytePoly_4 = bigint_nondet_rem!(ctx, x610, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x611, x5, 13), x612, 13), x610, 13),
        73156,
        4,
    )?;
    let x613: BytePoly_4 = bigint_add!(bigint_sub!(x5, bigint_add!(x612, x603, 4), 4), x5, 4);
    let x614: BytePoly_4 = bigint_nondet_quot!(ctx, x613, x5, 4);
    let x615: BytePoly_4 = bigint_nondet_rem!(ctx, x613, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x614, x5, 8), x615, 8), x613, 8),
        32515,
        2,
    )?;
    let x616: BytePoly_1 = bigint_nondet_rem!(ctx, x560, x1, 1);
    let x617: BytePoly_4 = bigint_nondet_quot!(ctx, x560, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x617, x1, 5), x616, 5), x560, 5),
        32515,
        2,
    )?;
    let x618: BytePoly_1 = bigint_sub!(x2, x616, 1);
    eqz(ctx, &bigint_mul!(x616, x618, 2), 8131, 2)?;
    let x619: BytePoly_4 = bigint_add!(bigint_sub!(x615, x581, 4), x5, 4);
    let x620: BytePoly_4 = bigint_add!(bigint_sub!(x609, x579, 4), x5, 4);
    let x621: BytePoly_4 = bigint_nondet_inv!(ctx, x620, x5, 4);
    let x622: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x619, x621, 8), x5, 4);
    let x623: BytePoly_8 = bigint_add!(bigint_sub!(bigint_mul!(x622, x620, 8), x619, 8), x5, 8);
    let x624: BytePoly_9 = bigint_nondet_quot!(ctx, x623, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x623, bigint_mul!(x624, x5, 13), 13),
        73156,
        4,
    )?;
    let x625: BytePoly_8 = bigint_mul!(x622, x622, 8);
    let x626: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x625, x579, 8), x5, 8), x609, 8),
        x5,
        8
    );
    let x627: BytePoly_9 = bigint_nondet_quot!(ctx, x626, x5, 9);
    let x628: BytePoly_4 = bigint_nondet_rem!(ctx, x626, x5, 4);
    let x629: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x5,
                bigint_add!(
                    bigint_mul!(x622, x628, 8),
                    bigint_add!(bigint_sub!(x581, bigint_mul!(x622, x579, 8), 8), x5, 8),
                    8
                ),
                8
            ),
            x5,
            8
        ),
        x5,
        8
    );
    let x630: BytePoly_9 = bigint_nondet_quot!(ctx, x629, x5, 9);
    let x631: BytePoly_4 = bigint_nondet_rem!(ctx, x629, x5, 4);
    let x632: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x625, bigint_mul!(x627, x5, 13), 13), x579, 13),
                    x609,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x628,
        13
    );
    eqz(ctx, &x632, 73156, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x630, x5, 13), x631, 13),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x622, bigint_sub!(x579, x628, 4), 8), x581, 8),
                    x5,
                    8
                ),
                x5,
                8
            ),
            13
        ),
        73156,
        4,
    )?;
    let x633: BytePoly_5 = bigint_add!(bigint_mul!(x628, x616, 5), bigint_mul!(x579, x618, 5), 5);
    let x634: BytePoly_5 = bigint_add!(bigint_mul!(x631, x616, 5), bigint_mul!(x581, x618, 5), 5);
    let x635: BytePoly_6 = bigint_nondet_quot!(ctx, x633, x5, 6);
    let x636: BytePoly_4 = bigint_nondet_rem!(ctx, x633, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x635, x5, 10), x636, 10), x633, 10),
        48771,
        4,
    )?;
    let x637: BytePoly_6 = bigint_nondet_quot!(ctx, x634, x5, 6);
    let x638: BytePoly_4 = bigint_nondet_rem!(ctx, x634, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x637, x5, 10), x638, 10), x634, 10),
        48771,
        4,
    )?;
    let x639: BytePoly_8 = bigint_mul!(x609, x609, 8);
    let x640: BytePoly_9 = bigint_nondet_quot!(ctx, x639, x5, 9);
    let x641: BytePoly_4 = bigint_nondet_rem!(ctx, x639, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x640, x5, 13), x641, 13), x639, 13),
        73156,
        4,
    )?;
    let x642: BytePoly_5 = bigint_add!(bigint_mul!(x641, x0, 5), x4, 5);
    let x643: BytePoly_6 = bigint_nondet_quot!(ctx, x642, x5, 6);
    let x644: BytePoly_4 = bigint_nondet_rem!(ctx, x642, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x643, x5, 10), x644, 10), x642, 10),
        48771,
        4,
    )?;
    let x645: BytePoly_4 = bigint_add!(x615, x615, 4);
    let x646: BytePoly_4 = bigint_nondet_quot!(ctx, x645, x5, 4);
    let x647: BytePoly_4 = bigint_nondet_rem!(ctx, x645, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x646, x5, 8), x647, 8), x645, 8),
        32515,
        2,
    )?;
    let x648: BytePoly_4 = bigint_nondet_inv!(ctx, x647, x5, 4);
    let x649: BytePoly_8 = bigint_mul!(x647, x648, 8);
    let x650: BytePoly_9 = bigint_nondet_quot!(ctx, x649, x5, 9);
    let x651: BytePoly_4 = bigint_nondet_rem!(ctx, x649, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x650, x5, 13), x651, 13), x649, 13),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x651, x2, 4), 34, 1)?;
    let x652: BytePoly_8 = bigint_mul!(x644, x648, 8);
    let x653: BytePoly_9 = bigint_nondet_quot!(ctx, x652, x5, 9);
    let x654: BytePoly_4 = bigint_nondet_rem!(ctx, x652, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x653, x5, 13), x654, 13), x652, 13),
        73156,
        4,
    )?;
    let x655: BytePoly_8 = bigint_mul!(x654, x609, 8);
    let x656: BytePoly_9 = bigint_nondet_quot!(ctx, x655, x5, 9);
    let x657: BytePoly_4 = bigint_nondet_rem!(ctx, x655, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x656, x5, 13), x657, 13), x655, 13),
        73156,
        4,
    )?;
    let x658: BytePoly_4 = bigint_add!(bigint_sub!(x615, x657, 4), x5, 4);
    let x659: BytePoly_4 = bigint_nondet_quot!(ctx, x658, x5, 4);
    let x660: BytePoly_4 = bigint_nondet_rem!(ctx, x658, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x659, x5, 8), x660, 8), x658, 8),
        32515,
        2,
    )?;
    let x661: BytePoly_8 = bigint_mul!(x654, x654, 8);
    let x662: BytePoly_9 = bigint_nondet_quot!(ctx, x661, x5, 9);
    let x663: BytePoly_4 = bigint_nondet_rem!(ctx, x661, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x662, x5, 13), x663, 13), x661, 13),
        73156,
        4,
    )?;
    let x664: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x663, x609, 4), x5, 4), x609, 4),
        x5,
        4
    );
    let x665: BytePoly_4 = bigint_nondet_quot!(ctx, x664, x5, 4);
    let x666: BytePoly_4 = bigint_nondet_rem!(ctx, x664, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x665, x5, 8), x666, 8), x664, 8),
        32515,
        2,
    )?;
    let x667: BytePoly_8 = bigint_mul!(x654, x666, 8);
    let x668: BytePoly_9 = bigint_nondet_quot!(ctx, x667, x5, 9);
    let x669: BytePoly_4 = bigint_nondet_rem!(ctx, x667, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x668, x5, 13), x669, 13), x667, 13),
        73156,
        4,
    )?;
    let x670: BytePoly_4 = bigint_add!(bigint_sub!(x5, bigint_add!(x669, x660, 4), 4), x5, 4);
    let x671: BytePoly_4 = bigint_nondet_quot!(ctx, x670, x5, 4);
    let x672: BytePoly_4 = bigint_nondet_rem!(ctx, x670, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x671, x5, 8), x672, 8), x670, 8),
        32515,
        2,
    )?;
    let x673: BytePoly_1 = bigint_nondet_rem!(ctx, x617, x1, 1);
    let x674: BytePoly_4 = bigint_nondet_quot!(ctx, x617, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x674, x1, 5), x673, 5), x617, 5),
        32515,
        2,
    )?;
    let x675: BytePoly_1 = bigint_sub!(x2, x673, 1);
    eqz(ctx, &bigint_mul!(x673, x675, 2), 8131, 2)?;
    let x676: BytePoly_4 = bigint_add!(bigint_sub!(x672, x638, 4), x5, 4);
    let x677: BytePoly_4 = bigint_add!(bigint_sub!(x666, x636, 4), x5, 4);
    let x678: BytePoly_4 = bigint_nondet_inv!(ctx, x677, x5, 4);
    let x679: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x676, x678, 8), x5, 4);
    let x680: BytePoly_8 = bigint_add!(bigint_sub!(bigint_mul!(x679, x677, 8), x676, 8), x5, 8);
    let x681: BytePoly_9 = bigint_nondet_quot!(ctx, x680, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x680, bigint_mul!(x681, x5, 13), 13),
        73156,
        4,
    )?;
    let x682: BytePoly_8 = bigint_mul!(x679, x679, 8);
    let x683: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x682, x636, 8), x5, 8), x666, 8),
        x5,
        8
    );
    let x684: BytePoly_9 = bigint_nondet_quot!(ctx, x683, x5, 9);
    let x685: BytePoly_4 = bigint_nondet_rem!(ctx, x683, x5, 4);
    let x686: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x5,
                bigint_add!(
                    bigint_mul!(x679, x685, 8),
                    bigint_add!(bigint_sub!(x638, bigint_mul!(x679, x636, 8), 8), x5, 8),
                    8
                ),
                8
            ),
            x5,
            8
        ),
        x5,
        8
    );
    let x687: BytePoly_9 = bigint_nondet_quot!(ctx, x686, x5, 9);
    let x688: BytePoly_4 = bigint_nondet_rem!(ctx, x686, x5, 4);
    let x689: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x682, bigint_mul!(x684, x5, 13), 13), x636, 13),
                    x666,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x685,
        13
    );
    eqz(ctx, &x689, 73156, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x687, x5, 13), x688, 13),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x679, bigint_sub!(x636, x685, 4), 8), x638, 8),
                    x5,
                    8
                ),
                x5,
                8
            ),
            13
        ),
        73156,
        4,
    )?;
    let x690: BytePoly_5 = bigint_add!(bigint_mul!(x685, x673, 5), bigint_mul!(x636, x675, 5), 5);
    let x691: BytePoly_5 = bigint_add!(bigint_mul!(x688, x673, 5), bigint_mul!(x638, x675, 5), 5);
    let x692: BytePoly_6 = bigint_nondet_quot!(ctx, x690, x5, 6);
    let x693: BytePoly_4 = bigint_nondet_rem!(ctx, x690, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x692, x5, 10), x693, 10), x690, 10),
        48771,
        4,
    )?;
    let x694: BytePoly_6 = bigint_nondet_quot!(ctx, x691, x5, 6);
    let x695: BytePoly_4 = bigint_nondet_rem!(ctx, x691, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x694, x5, 10), x695, 10), x691, 10),
        48771,
        4,
    )?;
    let x696: BytePoly_8 = bigint_mul!(x666, x666, 8);
    let x697: BytePoly_9 = bigint_nondet_quot!(ctx, x696, x5, 9);
    let x698: BytePoly_4 = bigint_nondet_rem!(ctx, x696, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x697, x5, 13), x698, 13), x696, 13),
        73156,
        4,
    )?;
    let x699: BytePoly_5 = bigint_add!(bigint_mul!(x698, x0, 5), x4, 5);
    let x700: BytePoly_6 = bigint_nondet_quot!(ctx, x699, x5, 6);
    let x701: BytePoly_4 = bigint_nondet_rem!(ctx, x699, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x700, x5, 10), x701, 10), x699, 10),
        48771,
        4,
    )?;
    let x702: BytePoly_4 = bigint_add!(x672, x672, 4);
    let x703: BytePoly_4 = bigint_nondet_quot!(ctx, x702, x5, 4);
    let x704: BytePoly_4 = bigint_nondet_rem!(ctx, x702, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x703, x5, 8), x704, 8), x702, 8),
        32515,
        2,
    )?;
    let x705: BytePoly_4 = bigint_nondet_inv!(ctx, x704, x5, 4);
    let x706: BytePoly_8 = bigint_mul!(x704, x705, 8);
    let x707: BytePoly_9 = bigint_nondet_quot!(ctx, x706, x5, 9);
    let x708: BytePoly_4 = bigint_nondet_rem!(ctx, x706, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x707, x5, 13), x708, 13), x706, 13),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x708, x2, 4), 34, 1)?;
    let x709: BytePoly_8 = bigint_mul!(x701, x705, 8);
    let x710: BytePoly_9 = bigint_nondet_quot!(ctx, x709, x5, 9);
    let x711: BytePoly_4 = bigint_nondet_rem!(ctx, x709, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x710, x5, 13), x711, 13), x709, 13),
        73156,
        4,
    )?;
    let x712: BytePoly_8 = bigint_mul!(x711, x666, 8);
    let x713: BytePoly_9 = bigint_nondet_quot!(ctx, x712, x5, 9);
    let x714: BytePoly_4 = bigint_nondet_rem!(ctx, x712, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x713, x5, 13), x714, 13), x712, 13),
        73156,
        4,
    )?;
    let x715: BytePoly_4 = bigint_add!(bigint_sub!(x672, x714, 4), x5, 4);
    let x716: BytePoly_4 = bigint_nondet_quot!(ctx, x715, x5, 4);
    let x717: BytePoly_4 = bigint_nondet_rem!(ctx, x715, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x716, x5, 8), x717, 8), x715, 8),
        32515,
        2,
    )?;
    let x718: BytePoly_8 = bigint_mul!(x711, x711, 8);
    let x719: BytePoly_9 = bigint_nondet_quot!(ctx, x718, x5, 9);
    let x720: BytePoly_4 = bigint_nondet_rem!(ctx, x718, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x719, x5, 13), x720, 13), x718, 13),
        73156,
        4,
    )?;
    let x721: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x720, x666, 4), x5, 4), x666, 4),
        x5,
        4
    );
    let x722: BytePoly_4 = bigint_nondet_quot!(ctx, x721, x5, 4);
    let x723: BytePoly_4 = bigint_nondet_rem!(ctx, x721, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x722, x5, 8), x723, 8), x721, 8),
        32515,
        2,
    )?;
    let x724: BytePoly_8 = bigint_mul!(x711, x723, 8);
    let x725: BytePoly_9 = bigint_nondet_quot!(ctx, x724, x5, 9);
    let x726: BytePoly_4 = bigint_nondet_rem!(ctx, x724, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x725, x5, 13), x726, 13), x724, 13),
        73156,
        4,
    )?;
    let x727: BytePoly_4 = bigint_add!(bigint_sub!(x5, bigint_add!(x726, x717, 4), 4), x5, 4);
    let x728: BytePoly_4 = bigint_nondet_quot!(ctx, x727, x5, 4);
    let x729: BytePoly_4 = bigint_nondet_rem!(ctx, x727, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x728, x5, 8), x729, 8), x727, 8),
        32515,
        2,
    )?;
    let x730: BytePoly_1 = bigint_nondet_rem!(ctx, x674, x1, 1);
    let x731: BytePoly_4 = bigint_nondet_quot!(ctx, x674, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x731, x1, 5), x730, 5), x674, 5),
        32515,
        2,
    )?;
    let x732: BytePoly_1 = bigint_sub!(x2, x730, 1);
    eqz(ctx, &bigint_mul!(x730, x732, 2), 8131, 2)?;
    let x733: BytePoly_4 = bigint_add!(bigint_sub!(x729, x695, 4), x5, 4);
    let x734: BytePoly_4 = bigint_add!(bigint_sub!(x723, x693, 4), x5, 4);
    let x735: BytePoly_4 = bigint_nondet_inv!(ctx, x734, x5, 4);
    let x736: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x733, x735, 8), x5, 4);
    let x737: BytePoly_8 = bigint_add!(bigint_sub!(bigint_mul!(x736, x734, 8), x733, 8), x5, 8);
    let x738: BytePoly_9 = bigint_nondet_quot!(ctx, x737, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x737, bigint_mul!(x738, x5, 13), 13),
        73156,
        4,
    )?;
    let x739: BytePoly_8 = bigint_mul!(x736, x736, 8);
    let x740: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x739, x693, 8), x5, 8), x723, 8),
        x5,
        8
    );
    let x741: BytePoly_9 = bigint_nondet_quot!(ctx, x740, x5, 9);
    let x742: BytePoly_4 = bigint_nondet_rem!(ctx, x740, x5, 4);
    let x743: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x5,
                bigint_add!(
                    bigint_mul!(x736, x742, 8),
                    bigint_add!(bigint_sub!(x695, bigint_mul!(x736, x693, 8), 8), x5, 8),
                    8
                ),
                8
            ),
            x5,
            8
        ),
        x5,
        8
    );
    let x744: BytePoly_9 = bigint_nondet_quot!(ctx, x743, x5, 9);
    let x745: BytePoly_4 = bigint_nondet_rem!(ctx, x743, x5, 4);
    let x746: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x739, bigint_mul!(x741, x5, 13), 13), x693, 13),
                    x723,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x742,
        13
    );
    eqz(ctx, &x746, 73156, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x744, x5, 13), x745, 13),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x736, bigint_sub!(x693, x742, 4), 8), x695, 8),
                    x5,
                    8
                ),
                x5,
                8
            ),
            13
        ),
        73156,
        4,
    )?;
    let x747: BytePoly_5 = bigint_add!(bigint_mul!(x742, x730, 5), bigint_mul!(x693, x732, 5), 5);
    let x748: BytePoly_5 = bigint_add!(bigint_mul!(x745, x730, 5), bigint_mul!(x695, x732, 5), 5);
    let x749: BytePoly_6 = bigint_nondet_quot!(ctx, x747, x5, 6);
    let x750: BytePoly_4 = bigint_nondet_rem!(ctx, x747, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x749, x5, 10), x750, 10), x747, 10),
        48771,
        4,
    )?;
    let x751: BytePoly_6 = bigint_nondet_quot!(ctx, x748, x5, 6);
    let x752: BytePoly_4 = bigint_nondet_rem!(ctx, x748, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x751, x5, 10), x752, 10), x748, 10),
        48771,
        4,
    )?;
    let x753: BytePoly_8 = bigint_mul!(x723, x723, 8);
    let x754: BytePoly_9 = bigint_nondet_quot!(ctx, x753, x5, 9);
    let x755: BytePoly_4 = bigint_nondet_rem!(ctx, x753, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x754, x5, 13), x755, 13), x753, 13),
        73156,
        4,
    )?;
    let x756: BytePoly_5 = bigint_add!(bigint_mul!(x755, x0, 5), x4, 5);
    let x757: BytePoly_6 = bigint_nondet_quot!(ctx, x756, x5, 6);
    let x758: BytePoly_4 = bigint_nondet_rem!(ctx, x756, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x757, x5, 10), x758, 10), x756, 10),
        48771,
        4,
    )?;
    let x759: BytePoly_4 = bigint_add!(x729, x729, 4);
    let x760: BytePoly_4 = bigint_nondet_quot!(ctx, x759, x5, 4);
    let x761: BytePoly_4 = bigint_nondet_rem!(ctx, x759, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x760, x5, 8), x761, 8), x759, 8),
        32515,
        2,
    )?;
    let x762: BytePoly_4 = bigint_nondet_inv!(ctx, x761, x5, 4);
    let x763: BytePoly_8 = bigint_mul!(x761, x762, 8);
    let x764: BytePoly_9 = bigint_nondet_quot!(ctx, x763, x5, 9);
    let x765: BytePoly_4 = bigint_nondet_rem!(ctx, x763, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x764, x5, 13), x765, 13), x763, 13),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x765, x2, 4), 34, 1)?;
    let x766: BytePoly_8 = bigint_mul!(x758, x762, 8);
    let x767: BytePoly_9 = bigint_nondet_quot!(ctx, x766, x5, 9);
    let x768: BytePoly_4 = bigint_nondet_rem!(ctx, x766, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x767, x5, 13), x768, 13), x766, 13),
        73156,
        4,
    )?;
    let x769: BytePoly_8 = bigint_mul!(x768, x723, 8);
    let x770: BytePoly_9 = bigint_nondet_quot!(ctx, x769, x5, 9);
    let x771: BytePoly_4 = bigint_nondet_rem!(ctx, x769, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x770, x5, 13), x771, 13), x769, 13),
        73156,
        4,
    )?;
    let x772: BytePoly_4 = bigint_add!(bigint_sub!(x729, x771, 4), x5, 4);
    let x773: BytePoly_4 = bigint_nondet_quot!(ctx, x772, x5, 4);
    let x774: BytePoly_4 = bigint_nondet_rem!(ctx, x772, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x773, x5, 8), x774, 8), x772, 8),
        32515,
        2,
    )?;
    let x775: BytePoly_8 = bigint_mul!(x768, x768, 8);
    let x776: BytePoly_9 = bigint_nondet_quot!(ctx, x775, x5, 9);
    let x777: BytePoly_4 = bigint_nondet_rem!(ctx, x775, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x776, x5, 13), x777, 13), x775, 13),
        73156,
        4,
    )?;
    let x778: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x777, x723, 4), x5, 4), x723, 4),
        x5,
        4
    );
    let x779: BytePoly_4 = bigint_nondet_quot!(ctx, x778, x5, 4);
    let x780: BytePoly_4 = bigint_nondet_rem!(ctx, x778, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x779, x5, 8), x780, 8), x778, 8),
        32515,
        2,
    )?;
    let x781: BytePoly_8 = bigint_mul!(x768, x780, 8);
    let x782: BytePoly_9 = bigint_nondet_quot!(ctx, x781, x5, 9);
    let x783: BytePoly_4 = bigint_nondet_rem!(ctx, x781, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x782, x5, 13), x783, 13), x781, 13),
        73156,
        4,
    )?;
    let x784: BytePoly_4 = bigint_add!(bigint_sub!(x5, bigint_add!(x783, x774, 4), 4), x5, 4);
    let x785: BytePoly_4 = bigint_nondet_quot!(ctx, x784, x5, 4);
    let x786: BytePoly_4 = bigint_nondet_rem!(ctx, x784, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x785, x5, 8), x786, 8), x784, 8),
        32515,
        2,
    )?;
    let x787: BytePoly_1 = bigint_nondet_rem!(ctx, x731, x1, 1);
    let x788: BytePoly_4 = bigint_nondet_quot!(ctx, x731, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x788, x1, 5), x787, 5), x731, 5),
        32515,
        2,
    )?;
    let x789: BytePoly_1 = bigint_sub!(x2, x787, 1);
    eqz(ctx, &bigint_mul!(x787, x789, 2), 8131, 2)?;
    let x790: BytePoly_4 = bigint_add!(bigint_sub!(x786, x752, 4), x5, 4);
    let x791: BytePoly_4 = bigint_add!(bigint_sub!(x780, x750, 4), x5, 4);
    let x792: BytePoly_4 = bigint_nondet_inv!(ctx, x791, x5, 4);
    let x793: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x790, x792, 8), x5, 4);
    let x794: BytePoly_8 = bigint_add!(bigint_sub!(bigint_mul!(x793, x791, 8), x790, 8), x5, 8);
    let x795: BytePoly_9 = bigint_nondet_quot!(ctx, x794, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x794, bigint_mul!(x795, x5, 13), 13),
        73156,
        4,
    )?;
    let x796: BytePoly_8 = bigint_mul!(x793, x793, 8);
    let x797: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x796, x750, 8), x5, 8), x780, 8),
        x5,
        8
    );
    let x798: BytePoly_9 = bigint_nondet_quot!(ctx, x797, x5, 9);
    let x799: BytePoly_4 = bigint_nondet_rem!(ctx, x797, x5, 4);
    let x800: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x5,
                bigint_add!(
                    bigint_mul!(x793, x799, 8),
                    bigint_add!(bigint_sub!(x752, bigint_mul!(x793, x750, 8), 8), x5, 8),
                    8
                ),
                8
            ),
            x5,
            8
        ),
        x5,
        8
    );
    let x801: BytePoly_9 = bigint_nondet_quot!(ctx, x800, x5, 9);
    let x802: BytePoly_4 = bigint_nondet_rem!(ctx, x800, x5, 4);
    let x803: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x796, bigint_mul!(x798, x5, 13), 13), x750, 13),
                    x780,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x799,
        13
    );
    eqz(ctx, &x803, 73156, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x801, x5, 13), x802, 13),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x793, bigint_sub!(x750, x799, 4), 8), x752, 8),
                    x5,
                    8
                ),
                x5,
                8
            ),
            13
        ),
        73156,
        4,
    )?;
    let x804: BytePoly_5 = bigint_add!(bigint_mul!(x799, x787, 5), bigint_mul!(x750, x789, 5), 5);
    let x805: BytePoly_5 = bigint_add!(bigint_mul!(x802, x787, 5), bigint_mul!(x752, x789, 5), 5);
    let x806: BytePoly_6 = bigint_nondet_quot!(ctx, x804, x5, 6);
    let x807: BytePoly_4 = bigint_nondet_rem!(ctx, x804, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x806, x5, 10), x807, 10), x804, 10),
        48771,
        4,
    )?;
    let x808: BytePoly_6 = bigint_nondet_quot!(ctx, x805, x5, 6);
    let x809: BytePoly_4 = bigint_nondet_rem!(ctx, x805, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x808, x5, 10), x809, 10), x805, 10),
        48771,
        4,
    )?;
    let x810: BytePoly_8 = bigint_mul!(x780, x780, 8);
    let x811: BytePoly_9 = bigint_nondet_quot!(ctx, x810, x5, 9);
    let x812: BytePoly_4 = bigint_nondet_rem!(ctx, x810, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x811, x5, 13), x812, 13), x810, 13),
        73156,
        4,
    )?;
    let x813: BytePoly_5 = bigint_add!(bigint_mul!(x812, x0, 5), x4, 5);
    let x814: BytePoly_6 = bigint_nondet_quot!(ctx, x813, x5, 6);
    let x815: BytePoly_4 = bigint_nondet_rem!(ctx, x813, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x814, x5, 10), x815, 10), x813, 10),
        48771,
        4,
    )?;
    let x816: BytePoly_4 = bigint_add!(x786, x786, 4);
    let x817: BytePoly_4 = bigint_nondet_quot!(ctx, x816, x5, 4);
    let x818: BytePoly_4 = bigint_nondet_rem!(ctx, x816, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x817, x5, 8), x818, 8), x816, 8),
        32515,
        2,
    )?;
    let x819: BytePoly_4 = bigint_nondet_inv!(ctx, x818, x5, 4);
    let x820: BytePoly_8 = bigint_mul!(x818, x819, 8);
    let x821: BytePoly_9 = bigint_nondet_quot!(ctx, x820, x5, 9);
    let x822: BytePoly_4 = bigint_nondet_rem!(ctx, x820, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x821, x5, 13), x822, 13), x820, 13),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x822, x2, 4), 34, 1)?;
    let x823: BytePoly_8 = bigint_mul!(x815, x819, 8);
    let x824: BytePoly_9 = bigint_nondet_quot!(ctx, x823, x5, 9);
    let x825: BytePoly_4 = bigint_nondet_rem!(ctx, x823, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x824, x5, 13), x825, 13), x823, 13),
        73156,
        4,
    )?;
    let x826: BytePoly_8 = bigint_mul!(x825, x780, 8);
    let x827: BytePoly_9 = bigint_nondet_quot!(ctx, x826, x5, 9);
    let x828: BytePoly_4 = bigint_nondet_rem!(ctx, x826, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x827, x5, 13), x828, 13), x826, 13),
        73156,
        4,
    )?;
    let x829: BytePoly_4 = bigint_add!(bigint_sub!(x786, x828, 4), x5, 4);
    let x830: BytePoly_4 = bigint_nondet_quot!(ctx, x829, x5, 4);
    let x831: BytePoly_4 = bigint_nondet_rem!(ctx, x829, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x830, x5, 8), x831, 8), x829, 8),
        32515,
        2,
    )?;
    let x832: BytePoly_8 = bigint_mul!(x825, x825, 8);
    let x833: BytePoly_9 = bigint_nondet_quot!(ctx, x832, x5, 9);
    let x834: BytePoly_4 = bigint_nondet_rem!(ctx, x832, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x833, x5, 13), x834, 13), x832, 13),
        73156,
        4,
    )?;
    let x835: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x834, x780, 4), x5, 4), x780, 4),
        x5,
        4
    );
    let x836: BytePoly_4 = bigint_nondet_quot!(ctx, x835, x5, 4);
    let x837: BytePoly_4 = bigint_nondet_rem!(ctx, x835, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x836, x5, 8), x837, 8), x835, 8),
        32515,
        2,
    )?;
    let x838: BytePoly_8 = bigint_mul!(x825, x837, 8);
    let x839: BytePoly_9 = bigint_nondet_quot!(ctx, x838, x5, 9);
    let x840: BytePoly_4 = bigint_nondet_rem!(ctx, x838, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x839, x5, 13), x840, 13), x838, 13),
        73156,
        4,
    )?;
    let x841: BytePoly_4 = bigint_add!(bigint_sub!(x5, bigint_add!(x840, x831, 4), 4), x5, 4);
    let x842: BytePoly_4 = bigint_nondet_quot!(ctx, x841, x5, 4);
    let x843: BytePoly_4 = bigint_nondet_rem!(ctx, x841, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x842, x5, 8), x843, 8), x841, 8),
        32515,
        2,
    )?;
    let x844: BytePoly_1 = bigint_nondet_rem!(ctx, x788, x1, 1);
    let x845: BytePoly_4 = bigint_nondet_quot!(ctx, x788, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x845, x1, 5), x844, 5), x788, 5),
        32515,
        2,
    )?;
    let x846: BytePoly_1 = bigint_sub!(x2, x844, 1);
    eqz(ctx, &bigint_mul!(x844, x846, 2), 8131, 2)?;
    let x847: BytePoly_4 = bigint_add!(bigint_sub!(x843, x809, 4), x5, 4);
    let x848: BytePoly_4 = bigint_add!(bigint_sub!(x837, x807, 4), x5, 4);
    let x849: BytePoly_4 = bigint_nondet_inv!(ctx, x848, x5, 4);
    let x850: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x847, x849, 8), x5, 4);
    let x851: BytePoly_8 = bigint_add!(bigint_sub!(bigint_mul!(x850, x848, 8), x847, 8), x5, 8);
    let x852: BytePoly_9 = bigint_nondet_quot!(ctx, x851, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x851, bigint_mul!(x852, x5, 13), 13),
        73156,
        4,
    )?;
    let x853: BytePoly_8 = bigint_mul!(x850, x850, 8);
    let x854: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x853, x807, 8), x5, 8), x837, 8),
        x5,
        8
    );
    let x855: BytePoly_9 = bigint_nondet_quot!(ctx, x854, x5, 9);
    let x856: BytePoly_4 = bigint_nondet_rem!(ctx, x854, x5, 4);
    let x857: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x5,
                bigint_add!(
                    bigint_mul!(x850, x856, 8),
                    bigint_add!(bigint_sub!(x809, bigint_mul!(x850, x807, 8), 8), x5, 8),
                    8
                ),
                8
            ),
            x5,
            8
        ),
        x5,
        8
    );
    let x858: BytePoly_9 = bigint_nondet_quot!(ctx, x857, x5, 9);
    let x859: BytePoly_4 = bigint_nondet_rem!(ctx, x857, x5, 4);
    let x860: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x853, bigint_mul!(x855, x5, 13), 13), x807, 13),
                    x837,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x856,
        13
    );
    eqz(ctx, &x860, 73156, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x858, x5, 13), x859, 13),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x850, bigint_sub!(x807, x856, 4), 8), x809, 8),
                    x5,
                    8
                ),
                x5,
                8
            ),
            13
        ),
        73156,
        4,
    )?;
    let x861: BytePoly_5 = bigint_add!(bigint_mul!(x856, x844, 5), bigint_mul!(x807, x846, 5), 5);
    let x862: BytePoly_5 = bigint_add!(bigint_mul!(x859, x844, 5), bigint_mul!(x809, x846, 5), 5);
    let x863: BytePoly_6 = bigint_nondet_quot!(ctx, x861, x5, 6);
    let x864: BytePoly_4 = bigint_nondet_rem!(ctx, x861, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x863, x5, 10), x864, 10), x861, 10),
        48771,
        4,
    )?;
    let x865: BytePoly_6 = bigint_nondet_quot!(ctx, x862, x5, 6);
    let x866: BytePoly_4 = bigint_nondet_rem!(ctx, x862, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x865, x5, 10), x866, 10), x862, 10),
        48771,
        4,
    )?;
    let x867: BytePoly_8 = bigint_mul!(x837, x837, 8);
    let x868: BytePoly_9 = bigint_nondet_quot!(ctx, x867, x5, 9);
    let x869: BytePoly_4 = bigint_nondet_rem!(ctx, x867, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x868, x5, 13), x869, 13), x867, 13),
        73156,
        4,
    )?;
    let x870: BytePoly_5 = bigint_add!(bigint_mul!(x869, x0, 5), x4, 5);
    let x871: BytePoly_6 = bigint_nondet_quot!(ctx, x870, x5, 6);
    let x872: BytePoly_4 = bigint_nondet_rem!(ctx, x870, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x871, x5, 10), x872, 10), x870, 10),
        48771,
        4,
    )?;
    let x873: BytePoly_4 = bigint_add!(x843, x843, 4);
    let x874: BytePoly_4 = bigint_nondet_quot!(ctx, x873, x5, 4);
    let x875: BytePoly_4 = bigint_nondet_rem!(ctx, x873, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x874, x5, 8), x875, 8), x873, 8),
        32515,
        2,
    )?;
    let x876: BytePoly_4 = bigint_nondet_inv!(ctx, x875, x5, 4);
    let x877: BytePoly_8 = bigint_mul!(x875, x876, 8);
    let x878: BytePoly_9 = bigint_nondet_quot!(ctx, x877, x5, 9);
    let x879: BytePoly_4 = bigint_nondet_rem!(ctx, x877, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x878, x5, 13), x879, 13), x877, 13),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x879, x2, 4), 34, 1)?;
    let x880: BytePoly_8 = bigint_mul!(x872, x876, 8);
    let x881: BytePoly_9 = bigint_nondet_quot!(ctx, x880, x5, 9);
    let x882: BytePoly_4 = bigint_nondet_rem!(ctx, x880, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x881, x5, 13), x882, 13), x880, 13),
        73156,
        4,
    )?;
    let x883: BytePoly_8 = bigint_mul!(x882, x837, 8);
    let x884: BytePoly_9 = bigint_nondet_quot!(ctx, x883, x5, 9);
    let x885: BytePoly_4 = bigint_nondet_rem!(ctx, x883, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x884, x5, 13), x885, 13), x883, 13),
        73156,
        4,
    )?;
    let x886: BytePoly_4 = bigint_add!(bigint_sub!(x843, x885, 4), x5, 4);
    let x887: BytePoly_4 = bigint_nondet_quot!(ctx, x886, x5, 4);
    let x888: BytePoly_4 = bigint_nondet_rem!(ctx, x886, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x887, x5, 8), x888, 8), x886, 8),
        32515,
        2,
    )?;
    let x889: BytePoly_8 = bigint_mul!(x882, x882, 8);
    let x890: BytePoly_9 = bigint_nondet_quot!(ctx, x889, x5, 9);
    let x891: BytePoly_4 = bigint_nondet_rem!(ctx, x889, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x890, x5, 13), x891, 13), x889, 13),
        73156,
        4,
    )?;
    let x892: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x891, x837, 4), x5, 4), x837, 4),
        x5,
        4
    );
    let x893: BytePoly_4 = bigint_nondet_quot!(ctx, x892, x5, 4);
    let x894: BytePoly_4 = bigint_nondet_rem!(ctx, x892, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x893, x5, 8), x894, 8), x892, 8),
        32515,
        2,
    )?;
    let x895: BytePoly_8 = bigint_mul!(x882, x894, 8);
    let x896: BytePoly_9 = bigint_nondet_quot!(ctx, x895, x5, 9);
    let x897: BytePoly_4 = bigint_nondet_rem!(ctx, x895, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x896, x5, 13), x897, 13), x895, 13),
        73156,
        4,
    )?;
    let x898: BytePoly_4 = bigint_add!(bigint_sub!(x5, bigint_add!(x897, x888, 4), 4), x5, 4);
    let x899: BytePoly_4 = bigint_nondet_quot!(ctx, x898, x5, 4);
    let x900: BytePoly_4 = bigint_nondet_rem!(ctx, x898, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x899, x5, 8), x900, 8), x898, 8),
        32515,
        2,
    )?;
    let x901: BytePoly_1 = bigint_nondet_rem!(ctx, x845, x1, 1);
    let x902: BytePoly_4 = bigint_nondet_quot!(ctx, x845, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x902, x1, 5), x901, 5), x845, 5),
        32515,
        2,
    )?;
    let x903: BytePoly_1 = bigint_sub!(x2, x901, 1);
    eqz(ctx, &bigint_mul!(x901, x903, 2), 8131, 2)?;
    let x904: BytePoly_4 = bigint_add!(bigint_sub!(x900, x866, 4), x5, 4);
    let x905: BytePoly_4 = bigint_add!(bigint_sub!(x894, x864, 4), x5, 4);
    let x906: BytePoly_4 = bigint_nondet_inv!(ctx, x905, x5, 4);
    let x907: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x904, x906, 8), x5, 4);
    let x908: BytePoly_8 = bigint_add!(bigint_sub!(bigint_mul!(x907, x905, 8), x904, 8), x5, 8);
    let x909: BytePoly_9 = bigint_nondet_quot!(ctx, x908, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x908, bigint_mul!(x909, x5, 13), 13),
        73156,
        4,
    )?;
    let x910: BytePoly_8 = bigint_mul!(x907, x907, 8);
    let x911: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x910, x864, 8), x5, 8), x894, 8),
        x5,
        8
    );
    let x912: BytePoly_9 = bigint_nondet_quot!(ctx, x911, x5, 9);
    let x913: BytePoly_4 = bigint_nondet_rem!(ctx, x911, x5, 4);
    let x914: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x5,
                bigint_add!(
                    bigint_mul!(x907, x913, 8),
                    bigint_add!(bigint_sub!(x866, bigint_mul!(x907, x864, 8), 8), x5, 8),
                    8
                ),
                8
            ),
            x5,
            8
        ),
        x5,
        8
    );
    let x915: BytePoly_9 = bigint_nondet_quot!(ctx, x914, x5, 9);
    let x916: BytePoly_4 = bigint_nondet_rem!(ctx, x914, x5, 4);
    let x917: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x910, bigint_mul!(x912, x5, 13), 13), x864, 13),
                    x894,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x913,
        13
    );
    eqz(ctx, &x917, 73156, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x915, x5, 13), x916, 13),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x907, bigint_sub!(x864, x913, 4), 8), x866, 8),
                    x5,
                    8
                ),
                x5,
                8
            ),
            13
        ),
        73156,
        4,
    )?;
    let x918: BytePoly_5 = bigint_add!(bigint_mul!(x913, x901, 5), bigint_mul!(x864, x903, 5), 5);
    let x919: BytePoly_5 = bigint_add!(bigint_mul!(x916, x901, 5), bigint_mul!(x866, x903, 5), 5);
    let x920: BytePoly_6 = bigint_nondet_quot!(ctx, x918, x5, 6);
    let x921: BytePoly_4 = bigint_nondet_rem!(ctx, x918, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x920, x5, 10), x921, 10), x918, 10),
        48771,
        4,
    )?;
    let x922: BytePoly_6 = bigint_nondet_quot!(ctx, x919, x5, 6);
    let x923: BytePoly_4 = bigint_nondet_rem!(ctx, x919, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x922, x5, 10), x923, 10), x919, 10),
        48771,
        4,
    )?;
    let x924: BytePoly_8 = bigint_mul!(x894, x894, 8);
    let x925: BytePoly_9 = bigint_nondet_quot!(ctx, x924, x5, 9);
    let x926: BytePoly_4 = bigint_nondet_rem!(ctx, x924, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x925, x5, 13), x926, 13), x924, 13),
        73156,
        4,
    )?;
    let x927: BytePoly_5 = bigint_add!(bigint_mul!(x926, x0, 5), x4, 5);
    let x928: BytePoly_6 = bigint_nondet_quot!(ctx, x927, x5, 6);
    let x929: BytePoly_4 = bigint_nondet_rem!(ctx, x927, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x928, x5, 10), x929, 10), x927, 10),
        48771,
        4,
    )?;
    let x930: BytePoly_4 = bigint_add!(x900, x900, 4);
    let x931: BytePoly_4 = bigint_nondet_quot!(ctx, x930, x5, 4);
    let x932: BytePoly_4 = bigint_nondet_rem!(ctx, x930, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x931, x5, 8), x932, 8), x930, 8),
        32515,
        2,
    )?;
    let x933: BytePoly_4 = bigint_nondet_inv!(ctx, x932, x5, 4);
    let x934: BytePoly_8 = bigint_mul!(x932, x933, 8);
    let x935: BytePoly_9 = bigint_nondet_quot!(ctx, x934, x5, 9);
    let x936: BytePoly_4 = bigint_nondet_rem!(ctx, x934, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x935, x5, 13), x936, 13), x934, 13),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x936, x2, 4), 34, 1)?;
    let x937: BytePoly_8 = bigint_mul!(x929, x933, 8);
    let x938: BytePoly_9 = bigint_nondet_quot!(ctx, x937, x5, 9);
    let x939: BytePoly_4 = bigint_nondet_rem!(ctx, x937, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x938, x5, 13), x939, 13), x937, 13),
        73156,
        4,
    )?;
    let x940: BytePoly_8 = bigint_mul!(x939, x894, 8);
    let x941: BytePoly_9 = bigint_nondet_quot!(ctx, x940, x5, 9);
    let x942: BytePoly_4 = bigint_nondet_rem!(ctx, x940, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x941, x5, 13), x942, 13), x940, 13),
        73156,
        4,
    )?;
    let x943: BytePoly_4 = bigint_add!(bigint_sub!(x900, x942, 4), x5, 4);
    let x944: BytePoly_4 = bigint_nondet_quot!(ctx, x943, x5, 4);
    let x945: BytePoly_4 = bigint_nondet_rem!(ctx, x943, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x944, x5, 8), x945, 8), x943, 8),
        32515,
        2,
    )?;
    let x946: BytePoly_8 = bigint_mul!(x939, x939, 8);
    let x947: BytePoly_9 = bigint_nondet_quot!(ctx, x946, x5, 9);
    let x948: BytePoly_4 = bigint_nondet_rem!(ctx, x946, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x947, x5, 13), x948, 13), x946, 13),
        73156,
        4,
    )?;
    let x949: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x948, x894, 4), x5, 4), x894, 4),
        x5,
        4
    );
    let x950: BytePoly_4 = bigint_nondet_quot!(ctx, x949, x5, 4);
    let x951: BytePoly_4 = bigint_nondet_rem!(ctx, x949, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x950, x5, 8), x951, 8), x949, 8),
        32515,
        2,
    )?;
    let x952: BytePoly_8 = bigint_mul!(x939, x951, 8);
    let x953: BytePoly_9 = bigint_nondet_quot!(ctx, x952, x5, 9);
    let x954: BytePoly_4 = bigint_nondet_rem!(ctx, x952, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x953, x5, 13), x954, 13), x952, 13),
        73156,
        4,
    )?;
    let x955: BytePoly_4 = bigint_add!(bigint_sub!(x5, bigint_add!(x954, x945, 4), 4), x5, 4);
    let x956: BytePoly_4 = bigint_nondet_quot!(ctx, x955, x5, 4);
    let x957: BytePoly_4 = bigint_nondet_rem!(ctx, x955, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x956, x5, 8), x957, 8), x955, 8),
        32515,
        2,
    )?;
    let x958: BytePoly_1 = bigint_nondet_rem!(ctx, x902, x1, 1);
    let x959: BytePoly_4 = bigint_nondet_quot!(ctx, x902, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x959, x1, 5), x958, 5), x902, 5),
        32515,
        2,
    )?;
    let x960: BytePoly_1 = bigint_sub!(x2, x958, 1);
    eqz(ctx, &bigint_mul!(x958, x960, 2), 8131, 2)?;
    let x961: BytePoly_4 = bigint_add!(bigint_sub!(x957, x923, 4), x5, 4);
    let x962: BytePoly_4 = bigint_add!(bigint_sub!(x951, x921, 4), x5, 4);
    let x963: BytePoly_4 = bigint_nondet_inv!(ctx, x962, x5, 4);
    let x964: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x961, x963, 8), x5, 4);
    let x965: BytePoly_8 = bigint_add!(bigint_sub!(bigint_mul!(x964, x962, 8), x961, 8), x5, 8);
    let x966: BytePoly_9 = bigint_nondet_quot!(ctx, x965, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x965, bigint_mul!(x966, x5, 13), 13),
        73156,
        4,
    )?;
    let x967: BytePoly_8 = bigint_mul!(x964, x964, 8);
    let x968: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x967, x921, 8), x5, 8), x951, 8),
        x5,
        8
    );
    let x969: BytePoly_9 = bigint_nondet_quot!(ctx, x968, x5, 9);
    let x970: BytePoly_4 = bigint_nondet_rem!(ctx, x968, x5, 4);
    let x971: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x5,
                bigint_add!(
                    bigint_mul!(x964, x970, 8),
                    bigint_add!(bigint_sub!(x923, bigint_mul!(x964, x921, 8), 8), x5, 8),
                    8
                ),
                8
            ),
            x5,
            8
        ),
        x5,
        8
    );
    let x972: BytePoly_9 = bigint_nondet_quot!(ctx, x971, x5, 9);
    let x973: BytePoly_4 = bigint_nondet_rem!(ctx, x971, x5, 4);
    let x974: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x967, bigint_mul!(x969, x5, 13), 13), x921, 13),
                    x951,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x970,
        13
    );
    eqz(ctx, &x974, 73156, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x972, x5, 13), x973, 13),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x964, bigint_sub!(x921, x970, 4), 8), x923, 8),
                    x5,
                    8
                ),
                x5,
                8
            ),
            13
        ),
        73156,
        4,
    )?;
    let x975: BytePoly_5 = bigint_add!(bigint_mul!(x970, x958, 5), bigint_mul!(x921, x960, 5), 5);
    let x976: BytePoly_5 = bigint_add!(bigint_mul!(x973, x958, 5), bigint_mul!(x923, x960, 5), 5);
    let x977: BytePoly_6 = bigint_nondet_quot!(ctx, x975, x5, 6);
    let x978: BytePoly_4 = bigint_nondet_rem!(ctx, x975, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x977, x5, 10), x978, 10), x975, 10),
        48771,
        4,
    )?;
    let x979: BytePoly_6 = bigint_nondet_quot!(ctx, x976, x5, 6);
    let x980: BytePoly_4 = bigint_nondet_rem!(ctx, x976, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x979, x5, 10), x980, 10), x976, 10),
        48771,
        4,
    )?;
    let x981: BytePoly_8 = bigint_mul!(x951, x951, 8);
    let x982: BytePoly_9 = bigint_nondet_quot!(ctx, x981, x5, 9);
    let x983: BytePoly_4 = bigint_nondet_rem!(ctx, x981, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x982, x5, 13), x983, 13), x981, 13),
        73156,
        4,
    )?;
    let x984: BytePoly_5 = bigint_add!(bigint_mul!(x983, x0, 5), x4, 5);
    let x985: BytePoly_6 = bigint_nondet_quot!(ctx, x984, x5, 6);
    let x986: BytePoly_4 = bigint_nondet_rem!(ctx, x984, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x985, x5, 10), x986, 10), x984, 10),
        48771,
        4,
    )?;
    let x987: BytePoly_4 = bigint_add!(x957, x957, 4);
    let x988: BytePoly_4 = bigint_nondet_quot!(ctx, x987, x5, 4);
    let x989: BytePoly_4 = bigint_nondet_rem!(ctx, x987, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x988, x5, 8), x989, 8), x987, 8),
        32515,
        2,
    )?;
    let x990: BytePoly_4 = bigint_nondet_inv!(ctx, x989, x5, 4);
    let x991: BytePoly_8 = bigint_mul!(x989, x990, 8);
    let x992: BytePoly_9 = bigint_nondet_quot!(ctx, x991, x5, 9);
    let x993: BytePoly_4 = bigint_nondet_rem!(ctx, x991, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x992, x5, 13), x993, 13), x991, 13),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x993, x2, 4), 34, 1)?;
    let x994: BytePoly_8 = bigint_mul!(x986, x990, 8);
    let x995: BytePoly_9 = bigint_nondet_quot!(ctx, x994, x5, 9);
    let x996: BytePoly_4 = bigint_nondet_rem!(ctx, x994, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x995, x5, 13), x996, 13), x994, 13),
        73156,
        4,
    )?;
    let x997: BytePoly_8 = bigint_mul!(x996, x951, 8);
    let x998: BytePoly_9 = bigint_nondet_quot!(ctx, x997, x5, 9);
    let x999: BytePoly_4 = bigint_nondet_rem!(ctx, x997, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x998, x5, 13), x999, 13), x997, 13),
        73156,
        4,
    )?;
    let x1000: BytePoly_4 = bigint_add!(bigint_sub!(x957, x999, 4), x5, 4);
    let x1001: BytePoly_4 = bigint_nondet_quot!(ctx, x1000, x5, 4);
    let x1002: BytePoly_4 = bigint_nondet_rem!(ctx, x1000, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1001, x5, 8), x1002, 8), x1000, 8),
        32515,
        2,
    )?;
    let x1003: BytePoly_8 = bigint_mul!(x996, x996, 8);
    let x1004: BytePoly_9 = bigint_nondet_quot!(ctx, x1003, x5, 9);
    let x1005: BytePoly_4 = bigint_nondet_rem!(ctx, x1003, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1004, x5, 13), x1005, 13),
            x1003,
            13
        ),
        73156,
        4,
    )?;
    let x1006: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1005, x951, 4), x5, 4), x951, 4),
        x5,
        4
    );
    let x1007: BytePoly_4 = bigint_nondet_quot!(ctx, x1006, x5, 4);
    let x1008: BytePoly_4 = bigint_nondet_rem!(ctx, x1006, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1007, x5, 8), x1008, 8), x1006, 8),
        32515,
        2,
    )?;
    let x1009: BytePoly_8 = bigint_mul!(x996, x1008, 8);
    let x1010: BytePoly_9 = bigint_nondet_quot!(ctx, x1009, x5, 9);
    let x1011: BytePoly_4 = bigint_nondet_rem!(ctx, x1009, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1010, x5, 13), x1011, 13),
            x1009,
            13
        ),
        73156,
        4,
    )?;
    let x1012: BytePoly_4 = bigint_add!(bigint_sub!(x5, bigint_add!(x1011, x1002, 4), 4), x5, 4);
    let x1013: BytePoly_4 = bigint_nondet_quot!(ctx, x1012, x5, 4);
    let x1014: BytePoly_4 = bigint_nondet_rem!(ctx, x1012, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1013, x5, 8), x1014, 8), x1012, 8),
        32515,
        2,
    )?;
    let x1015: BytePoly_1 = bigint_nondet_rem!(ctx, x959, x1, 1);
    let x1016: BytePoly_4 = bigint_nondet_quot!(ctx, x959, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1016, x1, 5), x1015, 5), x959, 5),
        32515,
        2,
    )?;
    let x1017: BytePoly_1 = bigint_sub!(x2, x1015, 1);
    eqz(ctx, &bigint_mul!(x1015, x1017, 2), 8131, 2)?;
    let x1018: BytePoly_4 = bigint_add!(bigint_sub!(x1014, x980, 4), x5, 4);
    let x1019: BytePoly_4 = bigint_add!(bigint_sub!(x1008, x978, 4), x5, 4);
    let x1020: BytePoly_4 = bigint_nondet_inv!(ctx, x1019, x5, 4);
    let x1021: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x1018, x1020, 8), x5, 4);
    let x1022: BytePoly_8 = bigint_add!(bigint_sub!(bigint_mul!(x1021, x1019, 8), x1018, 8), x5, 8);
    let x1023: BytePoly_9 = bigint_nondet_quot!(ctx, x1022, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x1022, bigint_mul!(x1023, x5, 13), 13),
        73156,
        4,
    )?;
    let x1024: BytePoly_8 = bigint_mul!(x1021, x1021, 8);
    let x1025: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1024, x978, 8), x5, 8), x1008, 8),
        x5,
        8
    );
    let x1026: BytePoly_9 = bigint_nondet_quot!(ctx, x1025, x5, 9);
    let x1027: BytePoly_4 = bigint_nondet_rem!(ctx, x1025, x5, 4);
    let x1028: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x5,
                bigint_add!(
                    bigint_mul!(x1021, x1027, 8),
                    bigint_add!(bigint_sub!(x980, bigint_mul!(x1021, x978, 8), 8), x5, 8),
                    8
                ),
                8
            ),
            x5,
            8
        ),
        x5,
        8
    );
    let x1029: BytePoly_9 = bigint_nondet_quot!(ctx, x1028, x5, 9);
    let x1030: BytePoly_4 = bigint_nondet_rem!(ctx, x1028, x5, 4);
    let x1031: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x1024, bigint_mul!(x1026, x5, 13), 13), x978, 13),
                    x1008,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x1027,
        13
    );
    eqz(ctx, &x1031, 73156, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1029, x5, 13), x1030, 13),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x1021, bigint_sub!(x978, x1027, 4), 8), x980, 8),
                    x5,
                    8
                ),
                x5,
                8
            ),
            13
        ),
        73156,
        4,
    )?;
    let x1032: BytePoly_5 =
        bigint_add!(bigint_mul!(x1027, x1015, 5), bigint_mul!(x978, x1017, 5), 5);
    let x1033: BytePoly_5 =
        bigint_add!(bigint_mul!(x1030, x1015, 5), bigint_mul!(x980, x1017, 5), 5);
    let x1034: BytePoly_6 = bigint_nondet_quot!(ctx, x1032, x5, 6);
    let x1035: BytePoly_4 = bigint_nondet_rem!(ctx, x1032, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1034, x5, 10), x1035, 10),
            x1032,
            10
        ),
        48771,
        4,
    )?;
    let x1036: BytePoly_6 = bigint_nondet_quot!(ctx, x1033, x5, 6);
    let x1037: BytePoly_4 = bigint_nondet_rem!(ctx, x1033, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1036, x5, 10), x1037, 10),
            x1033,
            10
        ),
        48771,
        4,
    )?;
    let x1038: BytePoly_8 = bigint_mul!(x1008, x1008, 8);
    let x1039: BytePoly_9 = bigint_nondet_quot!(ctx, x1038, x5, 9);
    let x1040: BytePoly_4 = bigint_nondet_rem!(ctx, x1038, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1039, x5, 13), x1040, 13),
            x1038,
            13
        ),
        73156,
        4,
    )?;
    let x1041: BytePoly_5 = bigint_add!(bigint_mul!(x1040, x0, 5), x4, 5);
    let x1042: BytePoly_6 = bigint_nondet_quot!(ctx, x1041, x5, 6);
    let x1043: BytePoly_4 = bigint_nondet_rem!(ctx, x1041, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1042, x5, 10), x1043, 10),
            x1041,
            10
        ),
        48771,
        4,
    )?;
    let x1044: BytePoly_4 = bigint_add!(x1014, x1014, 4);
    let x1045: BytePoly_4 = bigint_nondet_quot!(ctx, x1044, x5, 4);
    let x1046: BytePoly_4 = bigint_nondet_rem!(ctx, x1044, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1045, x5, 8), x1046, 8), x1044, 8),
        32515,
        2,
    )?;
    let x1047: BytePoly_4 = bigint_nondet_inv!(ctx, x1046, x5, 4);
    let x1048: BytePoly_8 = bigint_mul!(x1046, x1047, 8);
    let x1049: BytePoly_9 = bigint_nondet_quot!(ctx, x1048, x5, 9);
    let x1050: BytePoly_4 = bigint_nondet_rem!(ctx, x1048, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1049, x5, 13), x1050, 13),
            x1048,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1050, x2, 4), 34, 1)?;
    let x1051: BytePoly_8 = bigint_mul!(x1043, x1047, 8);
    let x1052: BytePoly_9 = bigint_nondet_quot!(ctx, x1051, x5, 9);
    let x1053: BytePoly_4 = bigint_nondet_rem!(ctx, x1051, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1052, x5, 13), x1053, 13),
            x1051,
            13
        ),
        73156,
        4,
    )?;
    let x1054: BytePoly_8 = bigint_mul!(x1053, x1008, 8);
    let x1055: BytePoly_9 = bigint_nondet_quot!(ctx, x1054, x5, 9);
    let x1056: BytePoly_4 = bigint_nondet_rem!(ctx, x1054, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1055, x5, 13), x1056, 13),
            x1054,
            13
        ),
        73156,
        4,
    )?;
    let x1057: BytePoly_4 = bigint_add!(bigint_sub!(x1014, x1056, 4), x5, 4);
    let x1058: BytePoly_4 = bigint_nondet_quot!(ctx, x1057, x5, 4);
    let x1059: BytePoly_4 = bigint_nondet_rem!(ctx, x1057, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1058, x5, 8), x1059, 8), x1057, 8),
        32515,
        2,
    )?;
    let x1060: BytePoly_8 = bigint_mul!(x1053, x1053, 8);
    let x1061: BytePoly_9 = bigint_nondet_quot!(ctx, x1060, x5, 9);
    let x1062: BytePoly_4 = bigint_nondet_rem!(ctx, x1060, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1061, x5, 13), x1062, 13),
            x1060,
            13
        ),
        73156,
        4,
    )?;
    let x1063: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1062, x1008, 4), x5, 4), x1008, 4),
        x5,
        4
    );
    let x1064: BytePoly_4 = bigint_nondet_quot!(ctx, x1063, x5, 4);
    let x1065: BytePoly_4 = bigint_nondet_rem!(ctx, x1063, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1064, x5, 8), x1065, 8), x1063, 8),
        32515,
        2,
    )?;
    let x1066: BytePoly_8 = bigint_mul!(x1053, x1065, 8);
    let x1067: BytePoly_9 = bigint_nondet_quot!(ctx, x1066, x5, 9);
    let x1068: BytePoly_4 = bigint_nondet_rem!(ctx, x1066, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1067, x5, 13), x1068, 13),
            x1066,
            13
        ),
        73156,
        4,
    )?;
    let x1069: BytePoly_4 = bigint_add!(bigint_sub!(x5, bigint_add!(x1068, x1059, 4), 4), x5, 4);
    let x1070: BytePoly_4 = bigint_nondet_quot!(ctx, x1069, x5, 4);
    let x1071: BytePoly_4 = bigint_nondet_rem!(ctx, x1069, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1070, x5, 8), x1071, 8), x1069, 8),
        32515,
        2,
    )?;
    let x1072: BytePoly_1 = bigint_nondet_rem!(ctx, x1016, x1, 1);
    let x1073: BytePoly_4 = bigint_nondet_quot!(ctx, x1016, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1073, x1, 5), x1072, 5), x1016, 5),
        32515,
        2,
    )?;
    let x1074: BytePoly_1 = bigint_sub!(x2, x1072, 1);
    eqz(ctx, &bigint_mul!(x1072, x1074, 2), 8131, 2)?;
    let x1075: BytePoly_4 = bigint_add!(bigint_sub!(x1071, x1037, 4), x5, 4);
    let x1076: BytePoly_4 = bigint_add!(bigint_sub!(x1065, x1035, 4), x5, 4);
    let x1077: BytePoly_4 = bigint_nondet_inv!(ctx, x1076, x5, 4);
    let x1078: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x1075, x1077, 8), x5, 4);
    let x1079: BytePoly_8 = bigint_add!(bigint_sub!(bigint_mul!(x1078, x1076, 8), x1075, 8), x5, 8);
    let x1080: BytePoly_9 = bigint_nondet_quot!(ctx, x1079, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x1079, bigint_mul!(x1080, x5, 13), 13),
        73156,
        4,
    )?;
    let x1081: BytePoly_8 = bigint_mul!(x1078, x1078, 8);
    let x1082: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1081, x1035, 8), x5, 8), x1065, 8),
        x5,
        8
    );
    let x1083: BytePoly_9 = bigint_nondet_quot!(ctx, x1082, x5, 9);
    let x1084: BytePoly_4 = bigint_nondet_rem!(ctx, x1082, x5, 4);
    let x1085: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x5,
                bigint_add!(
                    bigint_mul!(x1078, x1084, 8),
                    bigint_add!(bigint_sub!(x1037, bigint_mul!(x1078, x1035, 8), 8), x5, 8),
                    8
                ),
                8
            ),
            x5,
            8
        ),
        x5,
        8
    );
    let x1086: BytePoly_9 = bigint_nondet_quot!(ctx, x1085, x5, 9);
    let x1087: BytePoly_4 = bigint_nondet_rem!(ctx, x1085, x5, 4);
    let x1088: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1081, bigint_mul!(x1083, x5, 13), 13),
                        x1035,
                        13
                    ),
                    x1065,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x1084,
        13
    );
    eqz(ctx, &x1088, 73156, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1086, x5, 13), x1087, 13),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1078, bigint_sub!(x1035, x1084, 4), 8),
                        x1037,
                        8
                    ),
                    x5,
                    8
                ),
                x5,
                8
            ),
            13
        ),
        73156,
        4,
    )?;
    let x1089: BytePoly_5 = bigint_add!(
        bigint_mul!(x1084, x1072, 5),
        bigint_mul!(x1035, x1074, 5),
        5
    );
    let x1090: BytePoly_5 = bigint_add!(
        bigint_mul!(x1087, x1072, 5),
        bigint_mul!(x1037, x1074, 5),
        5
    );
    let x1091: BytePoly_6 = bigint_nondet_quot!(ctx, x1089, x5, 6);
    let x1092: BytePoly_4 = bigint_nondet_rem!(ctx, x1089, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1091, x5, 10), x1092, 10),
            x1089,
            10
        ),
        48771,
        4,
    )?;
    let x1093: BytePoly_6 = bigint_nondet_quot!(ctx, x1090, x5, 6);
    let x1094: BytePoly_4 = bigint_nondet_rem!(ctx, x1090, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1093, x5, 10), x1094, 10),
            x1090,
            10
        ),
        48771,
        4,
    )?;
    let x1095: BytePoly_8 = bigint_mul!(x1065, x1065, 8);
    let x1096: BytePoly_9 = bigint_nondet_quot!(ctx, x1095, x5, 9);
    let x1097: BytePoly_4 = bigint_nondet_rem!(ctx, x1095, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1096, x5, 13), x1097, 13),
            x1095,
            13
        ),
        73156,
        4,
    )?;
    let x1098: BytePoly_5 = bigint_add!(bigint_mul!(x1097, x0, 5), x4, 5);
    let x1099: BytePoly_6 = bigint_nondet_quot!(ctx, x1098, x5, 6);
    let x1100: BytePoly_4 = bigint_nondet_rem!(ctx, x1098, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1099, x5, 10), x1100, 10),
            x1098,
            10
        ),
        48771,
        4,
    )?;
    let x1101: BytePoly_4 = bigint_add!(x1071, x1071, 4);
    let x1102: BytePoly_4 = bigint_nondet_quot!(ctx, x1101, x5, 4);
    let x1103: BytePoly_4 = bigint_nondet_rem!(ctx, x1101, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1102, x5, 8), x1103, 8), x1101, 8),
        32515,
        2,
    )?;
    let x1104: BytePoly_4 = bigint_nondet_inv!(ctx, x1103, x5, 4);
    let x1105: BytePoly_8 = bigint_mul!(x1103, x1104, 8);
    let x1106: BytePoly_9 = bigint_nondet_quot!(ctx, x1105, x5, 9);
    let x1107: BytePoly_4 = bigint_nondet_rem!(ctx, x1105, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1106, x5, 13), x1107, 13),
            x1105,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1107, x2, 4), 34, 1)?;
    let x1108: BytePoly_8 = bigint_mul!(x1100, x1104, 8);
    let x1109: BytePoly_9 = bigint_nondet_quot!(ctx, x1108, x5, 9);
    let x1110: BytePoly_4 = bigint_nondet_rem!(ctx, x1108, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1109, x5, 13), x1110, 13),
            x1108,
            13
        ),
        73156,
        4,
    )?;
    let x1111: BytePoly_8 = bigint_mul!(x1110, x1065, 8);
    let x1112: BytePoly_9 = bigint_nondet_quot!(ctx, x1111, x5, 9);
    let x1113: BytePoly_4 = bigint_nondet_rem!(ctx, x1111, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1112, x5, 13), x1113, 13),
            x1111,
            13
        ),
        73156,
        4,
    )?;
    let x1114: BytePoly_4 = bigint_add!(bigint_sub!(x1071, x1113, 4), x5, 4);
    let x1115: BytePoly_4 = bigint_nondet_quot!(ctx, x1114, x5, 4);
    let x1116: BytePoly_4 = bigint_nondet_rem!(ctx, x1114, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1115, x5, 8), x1116, 8), x1114, 8),
        32515,
        2,
    )?;
    let x1117: BytePoly_8 = bigint_mul!(x1110, x1110, 8);
    let x1118: BytePoly_9 = bigint_nondet_quot!(ctx, x1117, x5, 9);
    let x1119: BytePoly_4 = bigint_nondet_rem!(ctx, x1117, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1118, x5, 13), x1119, 13),
            x1117,
            13
        ),
        73156,
        4,
    )?;
    let x1120: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1119, x1065, 4), x5, 4), x1065, 4),
        x5,
        4
    );
    let x1121: BytePoly_4 = bigint_nondet_quot!(ctx, x1120, x5, 4);
    let x1122: BytePoly_4 = bigint_nondet_rem!(ctx, x1120, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1121, x5, 8), x1122, 8), x1120, 8),
        32515,
        2,
    )?;
    let x1123: BytePoly_8 = bigint_mul!(x1110, x1122, 8);
    let x1124: BytePoly_9 = bigint_nondet_quot!(ctx, x1123, x5, 9);
    let x1125: BytePoly_4 = bigint_nondet_rem!(ctx, x1123, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1124, x5, 13), x1125, 13),
            x1123,
            13
        ),
        73156,
        4,
    )?;
    let x1126: BytePoly_4 = bigint_add!(bigint_sub!(x5, bigint_add!(x1125, x1116, 4), 4), x5, 4);
    let x1127: BytePoly_4 = bigint_nondet_quot!(ctx, x1126, x5, 4);
    let x1128: BytePoly_4 = bigint_nondet_rem!(ctx, x1126, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1127, x5, 8), x1128, 8), x1126, 8),
        32515,
        2,
    )?;
    let x1129: BytePoly_1 = bigint_nondet_rem!(ctx, x1073, x1, 1);
    let x1130: BytePoly_4 = bigint_nondet_quot!(ctx, x1073, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1130, x1, 5), x1129, 5), x1073, 5),
        32515,
        2,
    )?;
    let x1131: BytePoly_1 = bigint_sub!(x2, x1129, 1);
    eqz(ctx, &bigint_mul!(x1129, x1131, 2), 8131, 2)?;
    let x1132: BytePoly_4 = bigint_add!(bigint_sub!(x1128, x1094, 4), x5, 4);
    let x1133: BytePoly_4 = bigint_add!(bigint_sub!(x1122, x1092, 4), x5, 4);
    let x1134: BytePoly_4 = bigint_nondet_inv!(ctx, x1133, x5, 4);
    let x1135: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x1132, x1134, 8), x5, 4);
    let x1136: BytePoly_8 = bigint_add!(bigint_sub!(bigint_mul!(x1135, x1133, 8), x1132, 8), x5, 8);
    let x1137: BytePoly_9 = bigint_nondet_quot!(ctx, x1136, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x1136, bigint_mul!(x1137, x5, 13), 13),
        73156,
        4,
    )?;
    let x1138: BytePoly_8 = bigint_mul!(x1135, x1135, 8);
    let x1139: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1138, x1092, 8), x5, 8), x1122, 8),
        x5,
        8
    );
    let x1140: BytePoly_9 = bigint_nondet_quot!(ctx, x1139, x5, 9);
    let x1141: BytePoly_4 = bigint_nondet_rem!(ctx, x1139, x5, 4);
    let x1142: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x5,
                bigint_add!(
                    bigint_mul!(x1135, x1141, 8),
                    bigint_add!(bigint_sub!(x1094, bigint_mul!(x1135, x1092, 8), 8), x5, 8),
                    8
                ),
                8
            ),
            x5,
            8
        ),
        x5,
        8
    );
    let x1143: BytePoly_9 = bigint_nondet_quot!(ctx, x1142, x5, 9);
    let x1144: BytePoly_4 = bigint_nondet_rem!(ctx, x1142, x5, 4);
    let x1145: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1138, bigint_mul!(x1140, x5, 13), 13),
                        x1092,
                        13
                    ),
                    x1122,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x1141,
        13
    );
    eqz(ctx, &x1145, 73156, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1143, x5, 13), x1144, 13),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1135, bigint_sub!(x1092, x1141, 4), 8),
                        x1094,
                        8
                    ),
                    x5,
                    8
                ),
                x5,
                8
            ),
            13
        ),
        73156,
        4,
    )?;
    let x1146: BytePoly_5 = bigint_add!(
        bigint_mul!(x1141, x1129, 5),
        bigint_mul!(x1092, x1131, 5),
        5
    );
    let x1147: BytePoly_5 = bigint_add!(
        bigint_mul!(x1144, x1129, 5),
        bigint_mul!(x1094, x1131, 5),
        5
    );
    let x1148: BytePoly_6 = bigint_nondet_quot!(ctx, x1146, x5, 6);
    let x1149: BytePoly_4 = bigint_nondet_rem!(ctx, x1146, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1148, x5, 10), x1149, 10),
            x1146,
            10
        ),
        48771,
        4,
    )?;
    let x1150: BytePoly_6 = bigint_nondet_quot!(ctx, x1147, x5, 6);
    let x1151: BytePoly_4 = bigint_nondet_rem!(ctx, x1147, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1150, x5, 10), x1151, 10),
            x1147,
            10
        ),
        48771,
        4,
    )?;
    let x1152: BytePoly_8 = bigint_mul!(x1122, x1122, 8);
    let x1153: BytePoly_9 = bigint_nondet_quot!(ctx, x1152, x5, 9);
    let x1154: BytePoly_4 = bigint_nondet_rem!(ctx, x1152, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1153, x5, 13), x1154, 13),
            x1152,
            13
        ),
        73156,
        4,
    )?;
    let x1155: BytePoly_5 = bigint_add!(bigint_mul!(x1154, x0, 5), x4, 5);
    let x1156: BytePoly_6 = bigint_nondet_quot!(ctx, x1155, x5, 6);
    let x1157: BytePoly_4 = bigint_nondet_rem!(ctx, x1155, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1156, x5, 10), x1157, 10),
            x1155,
            10
        ),
        48771,
        4,
    )?;
    let x1158: BytePoly_4 = bigint_add!(x1128, x1128, 4);
    let x1159: BytePoly_4 = bigint_nondet_quot!(ctx, x1158, x5, 4);
    let x1160: BytePoly_4 = bigint_nondet_rem!(ctx, x1158, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1159, x5, 8), x1160, 8), x1158, 8),
        32515,
        2,
    )?;
    let x1161: BytePoly_4 = bigint_nondet_inv!(ctx, x1160, x5, 4);
    let x1162: BytePoly_8 = bigint_mul!(x1160, x1161, 8);
    let x1163: BytePoly_9 = bigint_nondet_quot!(ctx, x1162, x5, 9);
    let x1164: BytePoly_4 = bigint_nondet_rem!(ctx, x1162, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1163, x5, 13), x1164, 13),
            x1162,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1164, x2, 4), 34, 1)?;
    let x1165: BytePoly_8 = bigint_mul!(x1157, x1161, 8);
    let x1166: BytePoly_9 = bigint_nondet_quot!(ctx, x1165, x5, 9);
    let x1167: BytePoly_4 = bigint_nondet_rem!(ctx, x1165, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1166, x5, 13), x1167, 13),
            x1165,
            13
        ),
        73156,
        4,
    )?;
    let x1168: BytePoly_8 = bigint_mul!(x1167, x1122, 8);
    let x1169: BytePoly_9 = bigint_nondet_quot!(ctx, x1168, x5, 9);
    let x1170: BytePoly_4 = bigint_nondet_rem!(ctx, x1168, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1169, x5, 13), x1170, 13),
            x1168,
            13
        ),
        73156,
        4,
    )?;
    let x1171: BytePoly_4 = bigint_add!(bigint_sub!(x1128, x1170, 4), x5, 4);
    let x1172: BytePoly_4 = bigint_nondet_quot!(ctx, x1171, x5, 4);
    let x1173: BytePoly_4 = bigint_nondet_rem!(ctx, x1171, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1172, x5, 8), x1173, 8), x1171, 8),
        32515,
        2,
    )?;
    let x1174: BytePoly_8 = bigint_mul!(x1167, x1167, 8);
    let x1175: BytePoly_9 = bigint_nondet_quot!(ctx, x1174, x5, 9);
    let x1176: BytePoly_4 = bigint_nondet_rem!(ctx, x1174, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1175, x5, 13), x1176, 13),
            x1174,
            13
        ),
        73156,
        4,
    )?;
    let x1177: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1176, x1122, 4), x5, 4), x1122, 4),
        x5,
        4
    );
    let x1178: BytePoly_4 = bigint_nondet_quot!(ctx, x1177, x5, 4);
    let x1179: BytePoly_4 = bigint_nondet_rem!(ctx, x1177, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1178, x5, 8), x1179, 8), x1177, 8),
        32515,
        2,
    )?;
    let x1180: BytePoly_8 = bigint_mul!(x1167, x1179, 8);
    let x1181: BytePoly_9 = bigint_nondet_quot!(ctx, x1180, x5, 9);
    let x1182: BytePoly_4 = bigint_nondet_rem!(ctx, x1180, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1181, x5, 13), x1182, 13),
            x1180,
            13
        ),
        73156,
        4,
    )?;
    let x1183: BytePoly_4 = bigint_add!(bigint_sub!(x5, bigint_add!(x1182, x1173, 4), 4), x5, 4);
    let x1184: BytePoly_4 = bigint_nondet_quot!(ctx, x1183, x5, 4);
    let x1185: BytePoly_4 = bigint_nondet_rem!(ctx, x1183, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1184, x5, 8), x1185, 8), x1183, 8),
        32515,
        2,
    )?;
    let x1186: BytePoly_1 = bigint_nondet_rem!(ctx, x1130, x1, 1);
    let x1187: BytePoly_4 = bigint_nondet_quot!(ctx, x1130, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1187, x1, 5), x1186, 5), x1130, 5),
        32515,
        2,
    )?;
    let x1188: BytePoly_1 = bigint_sub!(x2, x1186, 1);
    eqz(ctx, &bigint_mul!(x1186, x1188, 2), 8131, 2)?;
    let x1189: BytePoly_4 = bigint_add!(bigint_sub!(x1185, x1151, 4), x5, 4);
    let x1190: BytePoly_4 = bigint_add!(bigint_sub!(x1179, x1149, 4), x5, 4);
    let x1191: BytePoly_4 = bigint_nondet_inv!(ctx, x1190, x5, 4);
    let x1192: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x1189, x1191, 8), x5, 4);
    let x1193: BytePoly_8 = bigint_add!(bigint_sub!(bigint_mul!(x1192, x1190, 8), x1189, 8), x5, 8);
    let x1194: BytePoly_9 = bigint_nondet_quot!(ctx, x1193, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x1193, bigint_mul!(x1194, x5, 13), 13),
        73156,
        4,
    )?;
    let x1195: BytePoly_8 = bigint_mul!(x1192, x1192, 8);
    let x1196: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1195, x1149, 8), x5, 8), x1179, 8),
        x5,
        8
    );
    let x1197: BytePoly_9 = bigint_nondet_quot!(ctx, x1196, x5, 9);
    let x1198: BytePoly_4 = bigint_nondet_rem!(ctx, x1196, x5, 4);
    let x1199: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x5,
                bigint_add!(
                    bigint_mul!(x1192, x1198, 8),
                    bigint_add!(bigint_sub!(x1151, bigint_mul!(x1192, x1149, 8), 8), x5, 8),
                    8
                ),
                8
            ),
            x5,
            8
        ),
        x5,
        8
    );
    let x1200: BytePoly_9 = bigint_nondet_quot!(ctx, x1199, x5, 9);
    let x1201: BytePoly_4 = bigint_nondet_rem!(ctx, x1199, x5, 4);
    let x1202: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1195, bigint_mul!(x1197, x5, 13), 13),
                        x1149,
                        13
                    ),
                    x1179,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x1198,
        13
    );
    eqz(ctx, &x1202, 73156, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1200, x5, 13), x1201, 13),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1192, bigint_sub!(x1149, x1198, 4), 8),
                        x1151,
                        8
                    ),
                    x5,
                    8
                ),
                x5,
                8
            ),
            13
        ),
        73156,
        4,
    )?;
    let x1203: BytePoly_5 = bigint_add!(
        bigint_mul!(x1198, x1186, 5),
        bigint_mul!(x1149, x1188, 5),
        5
    );
    let x1204: BytePoly_5 = bigint_add!(
        bigint_mul!(x1201, x1186, 5),
        bigint_mul!(x1151, x1188, 5),
        5
    );
    let x1205: BytePoly_6 = bigint_nondet_quot!(ctx, x1203, x5, 6);
    let x1206: BytePoly_4 = bigint_nondet_rem!(ctx, x1203, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1205, x5, 10), x1206, 10),
            x1203,
            10
        ),
        48771,
        4,
    )?;
    let x1207: BytePoly_6 = bigint_nondet_quot!(ctx, x1204, x5, 6);
    let x1208: BytePoly_4 = bigint_nondet_rem!(ctx, x1204, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1207, x5, 10), x1208, 10),
            x1204,
            10
        ),
        48771,
        4,
    )?;
    let x1209: BytePoly_8 = bigint_mul!(x1179, x1179, 8);
    let x1210: BytePoly_9 = bigint_nondet_quot!(ctx, x1209, x5, 9);
    let x1211: BytePoly_4 = bigint_nondet_rem!(ctx, x1209, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1210, x5, 13), x1211, 13),
            x1209,
            13
        ),
        73156,
        4,
    )?;
    let x1212: BytePoly_5 = bigint_add!(bigint_mul!(x1211, x0, 5), x4, 5);
    let x1213: BytePoly_6 = bigint_nondet_quot!(ctx, x1212, x5, 6);
    let x1214: BytePoly_4 = bigint_nondet_rem!(ctx, x1212, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1213, x5, 10), x1214, 10),
            x1212,
            10
        ),
        48771,
        4,
    )?;
    let x1215: BytePoly_4 = bigint_add!(x1185, x1185, 4);
    let x1216: BytePoly_4 = bigint_nondet_quot!(ctx, x1215, x5, 4);
    let x1217: BytePoly_4 = bigint_nondet_rem!(ctx, x1215, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1216, x5, 8), x1217, 8), x1215, 8),
        32515,
        2,
    )?;
    let x1218: BytePoly_4 = bigint_nondet_inv!(ctx, x1217, x5, 4);
    let x1219: BytePoly_8 = bigint_mul!(x1217, x1218, 8);
    let x1220: BytePoly_9 = bigint_nondet_quot!(ctx, x1219, x5, 9);
    let x1221: BytePoly_4 = bigint_nondet_rem!(ctx, x1219, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1220, x5, 13), x1221, 13),
            x1219,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1221, x2, 4), 34, 1)?;
    let x1222: BytePoly_8 = bigint_mul!(x1214, x1218, 8);
    let x1223: BytePoly_9 = bigint_nondet_quot!(ctx, x1222, x5, 9);
    let x1224: BytePoly_4 = bigint_nondet_rem!(ctx, x1222, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1223, x5, 13), x1224, 13),
            x1222,
            13
        ),
        73156,
        4,
    )?;
    let x1225: BytePoly_8 = bigint_mul!(x1224, x1179, 8);
    let x1226: BytePoly_9 = bigint_nondet_quot!(ctx, x1225, x5, 9);
    let x1227: BytePoly_4 = bigint_nondet_rem!(ctx, x1225, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1226, x5, 13), x1227, 13),
            x1225,
            13
        ),
        73156,
        4,
    )?;
    let x1228: BytePoly_4 = bigint_add!(bigint_sub!(x1185, x1227, 4), x5, 4);
    let x1229: BytePoly_4 = bigint_nondet_quot!(ctx, x1228, x5, 4);
    let x1230: BytePoly_4 = bigint_nondet_rem!(ctx, x1228, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1229, x5, 8), x1230, 8), x1228, 8),
        32515,
        2,
    )?;
    let x1231: BytePoly_8 = bigint_mul!(x1224, x1224, 8);
    let x1232: BytePoly_9 = bigint_nondet_quot!(ctx, x1231, x5, 9);
    let x1233: BytePoly_4 = bigint_nondet_rem!(ctx, x1231, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1232, x5, 13), x1233, 13),
            x1231,
            13
        ),
        73156,
        4,
    )?;
    let x1234: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1233, x1179, 4), x5, 4), x1179, 4),
        x5,
        4
    );
    let x1235: BytePoly_4 = bigint_nondet_quot!(ctx, x1234, x5, 4);
    let x1236: BytePoly_4 = bigint_nondet_rem!(ctx, x1234, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1235, x5, 8), x1236, 8), x1234, 8),
        32515,
        2,
    )?;
    let x1237: BytePoly_8 = bigint_mul!(x1224, x1236, 8);
    let x1238: BytePoly_9 = bigint_nondet_quot!(ctx, x1237, x5, 9);
    let x1239: BytePoly_4 = bigint_nondet_rem!(ctx, x1237, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1238, x5, 13), x1239, 13),
            x1237,
            13
        ),
        73156,
        4,
    )?;
    let x1240: BytePoly_4 = bigint_add!(bigint_sub!(x5, bigint_add!(x1239, x1230, 4), 4), x5, 4);
    let x1241: BytePoly_4 = bigint_nondet_quot!(ctx, x1240, x5, 4);
    let x1242: BytePoly_4 = bigint_nondet_rem!(ctx, x1240, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1241, x5, 8), x1242, 8), x1240, 8),
        32515,
        2,
    )?;
    let x1243: BytePoly_1 = bigint_nondet_rem!(ctx, x1187, x1, 1);
    let x1244: BytePoly_4 = bigint_nondet_quot!(ctx, x1187, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1244, x1, 5), x1243, 5), x1187, 5),
        32515,
        2,
    )?;
    let x1245: BytePoly_1 = bigint_sub!(x2, x1243, 1);
    eqz(ctx, &bigint_mul!(x1243, x1245, 2), 8131, 2)?;
    let x1246: BytePoly_4 = bigint_add!(bigint_sub!(x1242, x1208, 4), x5, 4);
    let x1247: BytePoly_4 = bigint_add!(bigint_sub!(x1236, x1206, 4), x5, 4);
    let x1248: BytePoly_4 = bigint_nondet_inv!(ctx, x1247, x5, 4);
    let x1249: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x1246, x1248, 8), x5, 4);
    let x1250: BytePoly_8 = bigint_add!(bigint_sub!(bigint_mul!(x1249, x1247, 8), x1246, 8), x5, 8);
    let x1251: BytePoly_9 = bigint_nondet_quot!(ctx, x1250, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x1250, bigint_mul!(x1251, x5, 13), 13),
        73156,
        4,
    )?;
    let x1252: BytePoly_8 = bigint_mul!(x1249, x1249, 8);
    let x1253: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1252, x1206, 8), x5, 8), x1236, 8),
        x5,
        8
    );
    let x1254: BytePoly_9 = bigint_nondet_quot!(ctx, x1253, x5, 9);
    let x1255: BytePoly_4 = bigint_nondet_rem!(ctx, x1253, x5, 4);
    let x1256: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x5,
                bigint_add!(
                    bigint_mul!(x1249, x1255, 8),
                    bigint_add!(bigint_sub!(x1208, bigint_mul!(x1249, x1206, 8), 8), x5, 8),
                    8
                ),
                8
            ),
            x5,
            8
        ),
        x5,
        8
    );
    let x1257: BytePoly_9 = bigint_nondet_quot!(ctx, x1256, x5, 9);
    let x1258: BytePoly_4 = bigint_nondet_rem!(ctx, x1256, x5, 4);
    let x1259: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1252, bigint_mul!(x1254, x5, 13), 13),
                        x1206,
                        13
                    ),
                    x1236,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x1255,
        13
    );
    eqz(ctx, &x1259, 73156, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1257, x5, 13), x1258, 13),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1249, bigint_sub!(x1206, x1255, 4), 8),
                        x1208,
                        8
                    ),
                    x5,
                    8
                ),
                x5,
                8
            ),
            13
        ),
        73156,
        4,
    )?;
    let x1260: BytePoly_5 = bigint_add!(
        bigint_mul!(x1255, x1243, 5),
        bigint_mul!(x1206, x1245, 5),
        5
    );
    let x1261: BytePoly_5 = bigint_add!(
        bigint_mul!(x1258, x1243, 5),
        bigint_mul!(x1208, x1245, 5),
        5
    );
    let x1262: BytePoly_6 = bigint_nondet_quot!(ctx, x1260, x5, 6);
    let x1263: BytePoly_4 = bigint_nondet_rem!(ctx, x1260, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1262, x5, 10), x1263, 10),
            x1260,
            10
        ),
        48771,
        4,
    )?;
    let x1264: BytePoly_6 = bigint_nondet_quot!(ctx, x1261, x5, 6);
    let x1265: BytePoly_4 = bigint_nondet_rem!(ctx, x1261, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1264, x5, 10), x1265, 10),
            x1261,
            10
        ),
        48771,
        4,
    )?;
    let x1266: BytePoly_8 = bigint_mul!(x1236, x1236, 8);
    let x1267: BytePoly_9 = bigint_nondet_quot!(ctx, x1266, x5, 9);
    let x1268: BytePoly_4 = bigint_nondet_rem!(ctx, x1266, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1267, x5, 13), x1268, 13),
            x1266,
            13
        ),
        73156,
        4,
    )?;
    let x1269: BytePoly_5 = bigint_add!(bigint_mul!(x1268, x0, 5), x4, 5);
    let x1270: BytePoly_6 = bigint_nondet_quot!(ctx, x1269, x5, 6);
    let x1271: BytePoly_4 = bigint_nondet_rem!(ctx, x1269, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1270, x5, 10), x1271, 10),
            x1269,
            10
        ),
        48771,
        4,
    )?;
    let x1272: BytePoly_4 = bigint_add!(x1242, x1242, 4);
    let x1273: BytePoly_4 = bigint_nondet_quot!(ctx, x1272, x5, 4);
    let x1274: BytePoly_4 = bigint_nondet_rem!(ctx, x1272, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1273, x5, 8), x1274, 8), x1272, 8),
        32515,
        2,
    )?;
    let x1275: BytePoly_4 = bigint_nondet_inv!(ctx, x1274, x5, 4);
    let x1276: BytePoly_8 = bigint_mul!(x1274, x1275, 8);
    let x1277: BytePoly_9 = bigint_nondet_quot!(ctx, x1276, x5, 9);
    let x1278: BytePoly_4 = bigint_nondet_rem!(ctx, x1276, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1277, x5, 13), x1278, 13),
            x1276,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1278, x2, 4), 34, 1)?;
    let x1279: BytePoly_8 = bigint_mul!(x1271, x1275, 8);
    let x1280: BytePoly_9 = bigint_nondet_quot!(ctx, x1279, x5, 9);
    let x1281: BytePoly_4 = bigint_nondet_rem!(ctx, x1279, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1280, x5, 13), x1281, 13),
            x1279,
            13
        ),
        73156,
        4,
    )?;
    let x1282: BytePoly_8 = bigint_mul!(x1281, x1236, 8);
    let x1283: BytePoly_9 = bigint_nondet_quot!(ctx, x1282, x5, 9);
    let x1284: BytePoly_4 = bigint_nondet_rem!(ctx, x1282, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1283, x5, 13), x1284, 13),
            x1282,
            13
        ),
        73156,
        4,
    )?;
    let x1285: BytePoly_4 = bigint_add!(bigint_sub!(x1242, x1284, 4), x5, 4);
    let x1286: BytePoly_4 = bigint_nondet_quot!(ctx, x1285, x5, 4);
    let x1287: BytePoly_4 = bigint_nondet_rem!(ctx, x1285, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1286, x5, 8), x1287, 8), x1285, 8),
        32515,
        2,
    )?;
    let x1288: BytePoly_8 = bigint_mul!(x1281, x1281, 8);
    let x1289: BytePoly_9 = bigint_nondet_quot!(ctx, x1288, x5, 9);
    let x1290: BytePoly_4 = bigint_nondet_rem!(ctx, x1288, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1289, x5, 13), x1290, 13),
            x1288,
            13
        ),
        73156,
        4,
    )?;
    let x1291: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1290, x1236, 4), x5, 4), x1236, 4),
        x5,
        4
    );
    let x1292: BytePoly_4 = bigint_nondet_quot!(ctx, x1291, x5, 4);
    let x1293: BytePoly_4 = bigint_nondet_rem!(ctx, x1291, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1292, x5, 8), x1293, 8), x1291, 8),
        32515,
        2,
    )?;
    let x1294: BytePoly_8 = bigint_mul!(x1281, x1293, 8);
    let x1295: BytePoly_9 = bigint_nondet_quot!(ctx, x1294, x5, 9);
    let x1296: BytePoly_4 = bigint_nondet_rem!(ctx, x1294, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1295, x5, 13), x1296, 13),
            x1294,
            13
        ),
        73156,
        4,
    )?;
    let x1297: BytePoly_4 = bigint_add!(bigint_sub!(x5, bigint_add!(x1296, x1287, 4), 4), x5, 4);
    let x1298: BytePoly_4 = bigint_nondet_quot!(ctx, x1297, x5, 4);
    let x1299: BytePoly_4 = bigint_nondet_rem!(ctx, x1297, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1298, x5, 8), x1299, 8), x1297, 8),
        32515,
        2,
    )?;
    let x1300: BytePoly_1 = bigint_nondet_rem!(ctx, x1244, x1, 1);
    let x1301: BytePoly_4 = bigint_nondet_quot!(ctx, x1244, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1301, x1, 5), x1300, 5), x1244, 5),
        32515,
        2,
    )?;
    let x1302: BytePoly_1 = bigint_sub!(x2, x1300, 1);
    eqz(ctx, &bigint_mul!(x1300, x1302, 2), 8131, 2)?;
    let x1303: BytePoly_4 = bigint_add!(bigint_sub!(x1299, x1265, 4), x5, 4);
    let x1304: BytePoly_4 = bigint_add!(bigint_sub!(x1293, x1263, 4), x5, 4);
    let x1305: BytePoly_4 = bigint_nondet_inv!(ctx, x1304, x5, 4);
    let x1306: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x1303, x1305, 8), x5, 4);
    let x1307: BytePoly_8 = bigint_add!(bigint_sub!(bigint_mul!(x1306, x1304, 8), x1303, 8), x5, 8);
    let x1308: BytePoly_9 = bigint_nondet_quot!(ctx, x1307, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x1307, bigint_mul!(x1308, x5, 13), 13),
        73156,
        4,
    )?;
    let x1309: BytePoly_8 = bigint_mul!(x1306, x1306, 8);
    let x1310: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1309, x1263, 8), x5, 8), x1293, 8),
        x5,
        8
    );
    let x1311: BytePoly_9 = bigint_nondet_quot!(ctx, x1310, x5, 9);
    let x1312: BytePoly_4 = bigint_nondet_rem!(ctx, x1310, x5, 4);
    let x1313: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x5,
                bigint_add!(
                    bigint_mul!(x1306, x1312, 8),
                    bigint_add!(bigint_sub!(x1265, bigint_mul!(x1306, x1263, 8), 8), x5, 8),
                    8
                ),
                8
            ),
            x5,
            8
        ),
        x5,
        8
    );
    let x1314: BytePoly_9 = bigint_nondet_quot!(ctx, x1313, x5, 9);
    let x1315: BytePoly_4 = bigint_nondet_rem!(ctx, x1313, x5, 4);
    let x1316: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1309, bigint_mul!(x1311, x5, 13), 13),
                        x1263,
                        13
                    ),
                    x1293,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x1312,
        13
    );
    eqz(ctx, &x1316, 73156, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1314, x5, 13), x1315, 13),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1306, bigint_sub!(x1263, x1312, 4), 8),
                        x1265,
                        8
                    ),
                    x5,
                    8
                ),
                x5,
                8
            ),
            13
        ),
        73156,
        4,
    )?;
    let x1317: BytePoly_5 = bigint_add!(
        bigint_mul!(x1312, x1300, 5),
        bigint_mul!(x1263, x1302, 5),
        5
    );
    let x1318: BytePoly_5 = bigint_add!(
        bigint_mul!(x1315, x1300, 5),
        bigint_mul!(x1265, x1302, 5),
        5
    );
    let x1319: BytePoly_6 = bigint_nondet_quot!(ctx, x1317, x5, 6);
    let x1320: BytePoly_4 = bigint_nondet_rem!(ctx, x1317, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1319, x5, 10), x1320, 10),
            x1317,
            10
        ),
        48771,
        4,
    )?;
    let x1321: BytePoly_6 = bigint_nondet_quot!(ctx, x1318, x5, 6);
    let x1322: BytePoly_4 = bigint_nondet_rem!(ctx, x1318, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1321, x5, 10), x1322, 10),
            x1318,
            10
        ),
        48771,
        4,
    )?;
    let x1323: BytePoly_8 = bigint_mul!(x1293, x1293, 8);
    let x1324: BytePoly_9 = bigint_nondet_quot!(ctx, x1323, x5, 9);
    let x1325: BytePoly_4 = bigint_nondet_rem!(ctx, x1323, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1324, x5, 13), x1325, 13),
            x1323,
            13
        ),
        73156,
        4,
    )?;
    let x1326: BytePoly_5 = bigint_add!(bigint_mul!(x1325, x0, 5), x4, 5);
    let x1327: BytePoly_6 = bigint_nondet_quot!(ctx, x1326, x5, 6);
    let x1328: BytePoly_4 = bigint_nondet_rem!(ctx, x1326, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1327, x5, 10), x1328, 10),
            x1326,
            10
        ),
        48771,
        4,
    )?;
    let x1329: BytePoly_4 = bigint_add!(x1299, x1299, 4);
    let x1330: BytePoly_4 = bigint_nondet_quot!(ctx, x1329, x5, 4);
    let x1331: BytePoly_4 = bigint_nondet_rem!(ctx, x1329, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1330, x5, 8), x1331, 8), x1329, 8),
        32515,
        2,
    )?;
    let x1332: BytePoly_4 = bigint_nondet_inv!(ctx, x1331, x5, 4);
    let x1333: BytePoly_8 = bigint_mul!(x1331, x1332, 8);
    let x1334: BytePoly_9 = bigint_nondet_quot!(ctx, x1333, x5, 9);
    let x1335: BytePoly_4 = bigint_nondet_rem!(ctx, x1333, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1334, x5, 13), x1335, 13),
            x1333,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1335, x2, 4), 34, 1)?;
    let x1336: BytePoly_8 = bigint_mul!(x1328, x1332, 8);
    let x1337: BytePoly_9 = bigint_nondet_quot!(ctx, x1336, x5, 9);
    let x1338: BytePoly_4 = bigint_nondet_rem!(ctx, x1336, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1337, x5, 13), x1338, 13),
            x1336,
            13
        ),
        73156,
        4,
    )?;
    let x1339: BytePoly_8 = bigint_mul!(x1338, x1293, 8);
    let x1340: BytePoly_9 = bigint_nondet_quot!(ctx, x1339, x5, 9);
    let x1341: BytePoly_4 = bigint_nondet_rem!(ctx, x1339, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1340, x5, 13), x1341, 13),
            x1339,
            13
        ),
        73156,
        4,
    )?;
    let x1342: BytePoly_4 = bigint_add!(bigint_sub!(x1299, x1341, 4), x5, 4);
    let x1343: BytePoly_4 = bigint_nondet_quot!(ctx, x1342, x5, 4);
    let x1344: BytePoly_4 = bigint_nondet_rem!(ctx, x1342, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1343, x5, 8), x1344, 8), x1342, 8),
        32515,
        2,
    )?;
    let x1345: BytePoly_8 = bigint_mul!(x1338, x1338, 8);
    let x1346: BytePoly_9 = bigint_nondet_quot!(ctx, x1345, x5, 9);
    let x1347: BytePoly_4 = bigint_nondet_rem!(ctx, x1345, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1346, x5, 13), x1347, 13),
            x1345,
            13
        ),
        73156,
        4,
    )?;
    let x1348: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1347, x1293, 4), x5, 4), x1293, 4),
        x5,
        4
    );
    let x1349: BytePoly_4 = bigint_nondet_quot!(ctx, x1348, x5, 4);
    let x1350: BytePoly_4 = bigint_nondet_rem!(ctx, x1348, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1349, x5, 8), x1350, 8), x1348, 8),
        32515,
        2,
    )?;
    let x1351: BytePoly_8 = bigint_mul!(x1338, x1350, 8);
    let x1352: BytePoly_9 = bigint_nondet_quot!(ctx, x1351, x5, 9);
    let x1353: BytePoly_4 = bigint_nondet_rem!(ctx, x1351, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1352, x5, 13), x1353, 13),
            x1351,
            13
        ),
        73156,
        4,
    )?;
    let x1354: BytePoly_4 = bigint_add!(bigint_sub!(x5, bigint_add!(x1353, x1344, 4), 4), x5, 4);
    let x1355: BytePoly_4 = bigint_nondet_quot!(ctx, x1354, x5, 4);
    let x1356: BytePoly_4 = bigint_nondet_rem!(ctx, x1354, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1355, x5, 8), x1356, 8), x1354, 8),
        32515,
        2,
    )?;
    let x1357: BytePoly_1 = bigint_nondet_rem!(ctx, x1301, x1, 1);
    let x1358: BytePoly_4 = bigint_nondet_quot!(ctx, x1301, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1358, x1, 5), x1357, 5), x1301, 5),
        32515,
        2,
    )?;
    let x1359: BytePoly_1 = bigint_sub!(x2, x1357, 1);
    eqz(ctx, &bigint_mul!(x1357, x1359, 2), 8131, 2)?;
    let x1360: BytePoly_4 = bigint_add!(bigint_sub!(x1356, x1322, 4), x5, 4);
    let x1361: BytePoly_4 = bigint_add!(bigint_sub!(x1350, x1320, 4), x5, 4);
    let x1362: BytePoly_4 = bigint_nondet_inv!(ctx, x1361, x5, 4);
    let x1363: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x1360, x1362, 8), x5, 4);
    let x1364: BytePoly_8 = bigint_add!(bigint_sub!(bigint_mul!(x1363, x1361, 8), x1360, 8), x5, 8);
    let x1365: BytePoly_9 = bigint_nondet_quot!(ctx, x1364, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x1364, bigint_mul!(x1365, x5, 13), 13),
        73156,
        4,
    )?;
    let x1366: BytePoly_8 = bigint_mul!(x1363, x1363, 8);
    let x1367: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1366, x1320, 8), x5, 8), x1350, 8),
        x5,
        8
    );
    let x1368: BytePoly_9 = bigint_nondet_quot!(ctx, x1367, x5, 9);
    let x1369: BytePoly_4 = bigint_nondet_rem!(ctx, x1367, x5, 4);
    let x1370: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x5,
                bigint_add!(
                    bigint_mul!(x1363, x1369, 8),
                    bigint_add!(bigint_sub!(x1322, bigint_mul!(x1363, x1320, 8), 8), x5, 8),
                    8
                ),
                8
            ),
            x5,
            8
        ),
        x5,
        8
    );
    let x1371: BytePoly_9 = bigint_nondet_quot!(ctx, x1370, x5, 9);
    let x1372: BytePoly_4 = bigint_nondet_rem!(ctx, x1370, x5, 4);
    let x1373: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1366, bigint_mul!(x1368, x5, 13), 13),
                        x1320,
                        13
                    ),
                    x1350,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x1369,
        13
    );
    eqz(ctx, &x1373, 73156, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1371, x5, 13), x1372, 13),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1363, bigint_sub!(x1320, x1369, 4), 8),
                        x1322,
                        8
                    ),
                    x5,
                    8
                ),
                x5,
                8
            ),
            13
        ),
        73156,
        4,
    )?;
    let x1374: BytePoly_5 = bigint_add!(
        bigint_mul!(x1369, x1357, 5),
        bigint_mul!(x1320, x1359, 5),
        5
    );
    let x1375: BytePoly_5 = bigint_add!(
        bigint_mul!(x1372, x1357, 5),
        bigint_mul!(x1322, x1359, 5),
        5
    );
    let x1376: BytePoly_6 = bigint_nondet_quot!(ctx, x1374, x5, 6);
    let x1377: BytePoly_4 = bigint_nondet_rem!(ctx, x1374, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1376, x5, 10), x1377, 10),
            x1374,
            10
        ),
        48771,
        4,
    )?;
    let x1378: BytePoly_6 = bigint_nondet_quot!(ctx, x1375, x5, 6);
    let x1379: BytePoly_4 = bigint_nondet_rem!(ctx, x1375, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1378, x5, 10), x1379, 10),
            x1375,
            10
        ),
        48771,
        4,
    )?;
    let x1380: BytePoly_8 = bigint_mul!(x1350, x1350, 8);
    let x1381: BytePoly_9 = bigint_nondet_quot!(ctx, x1380, x5, 9);
    let x1382: BytePoly_4 = bigint_nondet_rem!(ctx, x1380, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1381, x5, 13), x1382, 13),
            x1380,
            13
        ),
        73156,
        4,
    )?;
    let x1383: BytePoly_5 = bigint_add!(bigint_mul!(x1382, x0, 5), x4, 5);
    let x1384: BytePoly_6 = bigint_nondet_quot!(ctx, x1383, x5, 6);
    let x1385: BytePoly_4 = bigint_nondet_rem!(ctx, x1383, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1384, x5, 10), x1385, 10),
            x1383,
            10
        ),
        48771,
        4,
    )?;
    let x1386: BytePoly_4 = bigint_add!(x1356, x1356, 4);
    let x1387: BytePoly_4 = bigint_nondet_quot!(ctx, x1386, x5, 4);
    let x1388: BytePoly_4 = bigint_nondet_rem!(ctx, x1386, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1387, x5, 8), x1388, 8), x1386, 8),
        32515,
        2,
    )?;
    let x1389: BytePoly_4 = bigint_nondet_inv!(ctx, x1388, x5, 4);
    let x1390: BytePoly_8 = bigint_mul!(x1388, x1389, 8);
    let x1391: BytePoly_9 = bigint_nondet_quot!(ctx, x1390, x5, 9);
    let x1392: BytePoly_4 = bigint_nondet_rem!(ctx, x1390, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1391, x5, 13), x1392, 13),
            x1390,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1392, x2, 4), 34, 1)?;
    let x1393: BytePoly_8 = bigint_mul!(x1385, x1389, 8);
    let x1394: BytePoly_9 = bigint_nondet_quot!(ctx, x1393, x5, 9);
    let x1395: BytePoly_4 = bigint_nondet_rem!(ctx, x1393, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1394, x5, 13), x1395, 13),
            x1393,
            13
        ),
        73156,
        4,
    )?;
    let x1396: BytePoly_8 = bigint_mul!(x1395, x1350, 8);
    let x1397: BytePoly_9 = bigint_nondet_quot!(ctx, x1396, x5, 9);
    let x1398: BytePoly_4 = bigint_nondet_rem!(ctx, x1396, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1397, x5, 13), x1398, 13),
            x1396,
            13
        ),
        73156,
        4,
    )?;
    let x1399: BytePoly_4 = bigint_add!(bigint_sub!(x1356, x1398, 4), x5, 4);
    let x1400: BytePoly_4 = bigint_nondet_quot!(ctx, x1399, x5, 4);
    let x1401: BytePoly_4 = bigint_nondet_rem!(ctx, x1399, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1400, x5, 8), x1401, 8), x1399, 8),
        32515,
        2,
    )?;
    let x1402: BytePoly_8 = bigint_mul!(x1395, x1395, 8);
    let x1403: BytePoly_9 = bigint_nondet_quot!(ctx, x1402, x5, 9);
    let x1404: BytePoly_4 = bigint_nondet_rem!(ctx, x1402, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1403, x5, 13), x1404, 13),
            x1402,
            13
        ),
        73156,
        4,
    )?;
    let x1405: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1404, x1350, 4), x5, 4), x1350, 4),
        x5,
        4
    );
    let x1406: BytePoly_4 = bigint_nondet_quot!(ctx, x1405, x5, 4);
    let x1407: BytePoly_4 = bigint_nondet_rem!(ctx, x1405, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1406, x5, 8), x1407, 8), x1405, 8),
        32515,
        2,
    )?;
    let x1408: BytePoly_8 = bigint_mul!(x1395, x1407, 8);
    let x1409: BytePoly_9 = bigint_nondet_quot!(ctx, x1408, x5, 9);
    let x1410: BytePoly_4 = bigint_nondet_rem!(ctx, x1408, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1409, x5, 13), x1410, 13),
            x1408,
            13
        ),
        73156,
        4,
    )?;
    let x1411: BytePoly_4 = bigint_add!(bigint_sub!(x5, bigint_add!(x1410, x1401, 4), 4), x5, 4);
    let x1412: BytePoly_4 = bigint_nondet_quot!(ctx, x1411, x5, 4);
    let x1413: BytePoly_4 = bigint_nondet_rem!(ctx, x1411, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1412, x5, 8), x1413, 8), x1411, 8),
        32515,
        2,
    )?;
    let x1414: BytePoly_1 = bigint_nondet_rem!(ctx, x1358, x1, 1);
    let x1415: BytePoly_4 = bigint_nondet_quot!(ctx, x1358, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1415, x1, 5), x1414, 5), x1358, 5),
        32515,
        2,
    )?;
    let x1416: BytePoly_1 = bigint_sub!(x2, x1414, 1);
    eqz(ctx, &bigint_mul!(x1414, x1416, 2), 8131, 2)?;
    let x1417: BytePoly_4 = bigint_add!(bigint_sub!(x1413, x1379, 4), x5, 4);
    let x1418: BytePoly_4 = bigint_add!(bigint_sub!(x1407, x1377, 4), x5, 4);
    let x1419: BytePoly_4 = bigint_nondet_inv!(ctx, x1418, x5, 4);
    let x1420: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x1417, x1419, 8), x5, 4);
    let x1421: BytePoly_8 = bigint_add!(bigint_sub!(bigint_mul!(x1420, x1418, 8), x1417, 8), x5, 8);
    let x1422: BytePoly_9 = bigint_nondet_quot!(ctx, x1421, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x1421, bigint_mul!(x1422, x5, 13), 13),
        73156,
        4,
    )?;
    let x1423: BytePoly_8 = bigint_mul!(x1420, x1420, 8);
    let x1424: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1423, x1377, 8), x5, 8), x1407, 8),
        x5,
        8
    );
    let x1425: BytePoly_9 = bigint_nondet_quot!(ctx, x1424, x5, 9);
    let x1426: BytePoly_4 = bigint_nondet_rem!(ctx, x1424, x5, 4);
    let x1427: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x5,
                bigint_add!(
                    bigint_mul!(x1420, x1426, 8),
                    bigint_add!(bigint_sub!(x1379, bigint_mul!(x1420, x1377, 8), 8), x5, 8),
                    8
                ),
                8
            ),
            x5,
            8
        ),
        x5,
        8
    );
    let x1428: BytePoly_9 = bigint_nondet_quot!(ctx, x1427, x5, 9);
    let x1429: BytePoly_4 = bigint_nondet_rem!(ctx, x1427, x5, 4);
    let x1430: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1423, bigint_mul!(x1425, x5, 13), 13),
                        x1377,
                        13
                    ),
                    x1407,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x1426,
        13
    );
    eqz(ctx, &x1430, 73156, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1428, x5, 13), x1429, 13),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1420, bigint_sub!(x1377, x1426, 4), 8),
                        x1379,
                        8
                    ),
                    x5,
                    8
                ),
                x5,
                8
            ),
            13
        ),
        73156,
        4,
    )?;
    let x1431: BytePoly_5 = bigint_add!(
        bigint_mul!(x1426, x1414, 5),
        bigint_mul!(x1377, x1416, 5),
        5
    );
    let x1432: BytePoly_5 = bigint_add!(
        bigint_mul!(x1429, x1414, 5),
        bigint_mul!(x1379, x1416, 5),
        5
    );
    let x1433: BytePoly_6 = bigint_nondet_quot!(ctx, x1431, x5, 6);
    let x1434: BytePoly_4 = bigint_nondet_rem!(ctx, x1431, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1433, x5, 10), x1434, 10),
            x1431,
            10
        ),
        48771,
        4,
    )?;
    let x1435: BytePoly_6 = bigint_nondet_quot!(ctx, x1432, x5, 6);
    let x1436: BytePoly_4 = bigint_nondet_rem!(ctx, x1432, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1435, x5, 10), x1436, 10),
            x1432,
            10
        ),
        48771,
        4,
    )?;
    let x1437: BytePoly_8 = bigint_mul!(x1407, x1407, 8);
    let x1438: BytePoly_9 = bigint_nondet_quot!(ctx, x1437, x5, 9);
    let x1439: BytePoly_4 = bigint_nondet_rem!(ctx, x1437, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1438, x5, 13), x1439, 13),
            x1437,
            13
        ),
        73156,
        4,
    )?;
    let x1440: BytePoly_5 = bigint_add!(bigint_mul!(x1439, x0, 5), x4, 5);
    let x1441: BytePoly_6 = bigint_nondet_quot!(ctx, x1440, x5, 6);
    let x1442: BytePoly_4 = bigint_nondet_rem!(ctx, x1440, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1441, x5, 10), x1442, 10),
            x1440,
            10
        ),
        48771,
        4,
    )?;
    let x1443: BytePoly_4 = bigint_add!(x1413, x1413, 4);
    let x1444: BytePoly_4 = bigint_nondet_quot!(ctx, x1443, x5, 4);
    let x1445: BytePoly_4 = bigint_nondet_rem!(ctx, x1443, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1444, x5, 8), x1445, 8), x1443, 8),
        32515,
        2,
    )?;
    let x1446: BytePoly_4 = bigint_nondet_inv!(ctx, x1445, x5, 4);
    let x1447: BytePoly_8 = bigint_mul!(x1445, x1446, 8);
    let x1448: BytePoly_9 = bigint_nondet_quot!(ctx, x1447, x5, 9);
    let x1449: BytePoly_4 = bigint_nondet_rem!(ctx, x1447, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1448, x5, 13), x1449, 13),
            x1447,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1449, x2, 4), 34, 1)?;
    let x1450: BytePoly_8 = bigint_mul!(x1442, x1446, 8);
    let x1451: BytePoly_9 = bigint_nondet_quot!(ctx, x1450, x5, 9);
    let x1452: BytePoly_4 = bigint_nondet_rem!(ctx, x1450, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1451, x5, 13), x1452, 13),
            x1450,
            13
        ),
        73156,
        4,
    )?;
    let x1453: BytePoly_8 = bigint_mul!(x1452, x1407, 8);
    let x1454: BytePoly_9 = bigint_nondet_quot!(ctx, x1453, x5, 9);
    let x1455: BytePoly_4 = bigint_nondet_rem!(ctx, x1453, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1454, x5, 13), x1455, 13),
            x1453,
            13
        ),
        73156,
        4,
    )?;
    let x1456: BytePoly_4 = bigint_add!(bigint_sub!(x1413, x1455, 4), x5, 4);
    let x1457: BytePoly_4 = bigint_nondet_quot!(ctx, x1456, x5, 4);
    let x1458: BytePoly_4 = bigint_nondet_rem!(ctx, x1456, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1457, x5, 8), x1458, 8), x1456, 8),
        32515,
        2,
    )?;
    let x1459: BytePoly_8 = bigint_mul!(x1452, x1452, 8);
    let x1460: BytePoly_9 = bigint_nondet_quot!(ctx, x1459, x5, 9);
    let x1461: BytePoly_4 = bigint_nondet_rem!(ctx, x1459, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1460, x5, 13), x1461, 13),
            x1459,
            13
        ),
        73156,
        4,
    )?;
    let x1462: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1461, x1407, 4), x5, 4), x1407, 4),
        x5,
        4
    );
    let x1463: BytePoly_4 = bigint_nondet_quot!(ctx, x1462, x5, 4);
    let x1464: BytePoly_4 = bigint_nondet_rem!(ctx, x1462, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1463, x5, 8), x1464, 8), x1462, 8),
        32515,
        2,
    )?;
    let x1465: BytePoly_8 = bigint_mul!(x1452, x1464, 8);
    let x1466: BytePoly_9 = bigint_nondet_quot!(ctx, x1465, x5, 9);
    let x1467: BytePoly_4 = bigint_nondet_rem!(ctx, x1465, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1466, x5, 13), x1467, 13),
            x1465,
            13
        ),
        73156,
        4,
    )?;
    let x1468: BytePoly_4 = bigint_add!(bigint_sub!(x5, bigint_add!(x1467, x1458, 4), 4), x5, 4);
    let x1469: BytePoly_4 = bigint_nondet_quot!(ctx, x1468, x5, 4);
    let x1470: BytePoly_4 = bigint_nondet_rem!(ctx, x1468, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1469, x5, 8), x1470, 8), x1468, 8),
        32515,
        2,
    )?;
    let x1471: BytePoly_1 = bigint_nondet_rem!(ctx, x1415, x1, 1);
    let x1472: BytePoly_4 = bigint_nondet_quot!(ctx, x1415, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1472, x1, 5), x1471, 5), x1415, 5),
        32515,
        2,
    )?;
    let x1473: BytePoly_1 = bigint_sub!(x2, x1471, 1);
    eqz(ctx, &bigint_mul!(x1471, x1473, 2), 8131, 2)?;
    let x1474: BytePoly_4 = bigint_add!(bigint_sub!(x1470, x1436, 4), x5, 4);
    let x1475: BytePoly_4 = bigint_add!(bigint_sub!(x1464, x1434, 4), x5, 4);
    let x1476: BytePoly_4 = bigint_nondet_inv!(ctx, x1475, x5, 4);
    let x1477: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x1474, x1476, 8), x5, 4);
    let x1478: BytePoly_8 = bigint_add!(bigint_sub!(bigint_mul!(x1477, x1475, 8), x1474, 8), x5, 8);
    let x1479: BytePoly_9 = bigint_nondet_quot!(ctx, x1478, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x1478, bigint_mul!(x1479, x5, 13), 13),
        73156,
        4,
    )?;
    let x1480: BytePoly_8 = bigint_mul!(x1477, x1477, 8);
    let x1481: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1480, x1434, 8), x5, 8), x1464, 8),
        x5,
        8
    );
    let x1482: BytePoly_9 = bigint_nondet_quot!(ctx, x1481, x5, 9);
    let x1483: BytePoly_4 = bigint_nondet_rem!(ctx, x1481, x5, 4);
    let x1484: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x5,
                bigint_add!(
                    bigint_mul!(x1477, x1483, 8),
                    bigint_add!(bigint_sub!(x1436, bigint_mul!(x1477, x1434, 8), 8), x5, 8),
                    8
                ),
                8
            ),
            x5,
            8
        ),
        x5,
        8
    );
    let x1485: BytePoly_9 = bigint_nondet_quot!(ctx, x1484, x5, 9);
    let x1486: BytePoly_4 = bigint_nondet_rem!(ctx, x1484, x5, 4);
    let x1487: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1480, bigint_mul!(x1482, x5, 13), 13),
                        x1434,
                        13
                    ),
                    x1464,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x1483,
        13
    );
    eqz(ctx, &x1487, 73156, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1485, x5, 13), x1486, 13),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1477, bigint_sub!(x1434, x1483, 4), 8),
                        x1436,
                        8
                    ),
                    x5,
                    8
                ),
                x5,
                8
            ),
            13
        ),
        73156,
        4,
    )?;
    let x1488: BytePoly_5 = bigint_add!(
        bigint_mul!(x1483, x1471, 5),
        bigint_mul!(x1434, x1473, 5),
        5
    );
    let x1489: BytePoly_5 = bigint_add!(
        bigint_mul!(x1486, x1471, 5),
        bigint_mul!(x1436, x1473, 5),
        5
    );
    let x1490: BytePoly_6 = bigint_nondet_quot!(ctx, x1488, x5, 6);
    let x1491: BytePoly_4 = bigint_nondet_rem!(ctx, x1488, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1490, x5, 10), x1491, 10),
            x1488,
            10
        ),
        48771,
        4,
    )?;
    let x1492: BytePoly_6 = bigint_nondet_quot!(ctx, x1489, x5, 6);
    let x1493: BytePoly_4 = bigint_nondet_rem!(ctx, x1489, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1492, x5, 10), x1493, 10),
            x1489,
            10
        ),
        48771,
        4,
    )?;
    let x1494: BytePoly_8 = bigint_mul!(x1464, x1464, 8);
    let x1495: BytePoly_9 = bigint_nondet_quot!(ctx, x1494, x5, 9);
    let x1496: BytePoly_4 = bigint_nondet_rem!(ctx, x1494, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1495, x5, 13), x1496, 13),
            x1494,
            13
        ),
        73156,
        4,
    )?;
    let x1497: BytePoly_5 = bigint_add!(bigint_mul!(x1496, x0, 5), x4, 5);
    let x1498: BytePoly_6 = bigint_nondet_quot!(ctx, x1497, x5, 6);
    let x1499: BytePoly_4 = bigint_nondet_rem!(ctx, x1497, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1498, x5, 10), x1499, 10),
            x1497,
            10
        ),
        48771,
        4,
    )?;
    let x1500: BytePoly_4 = bigint_add!(x1470, x1470, 4);
    let x1501: BytePoly_4 = bigint_nondet_quot!(ctx, x1500, x5, 4);
    let x1502: BytePoly_4 = bigint_nondet_rem!(ctx, x1500, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1501, x5, 8), x1502, 8), x1500, 8),
        32515,
        2,
    )?;
    let x1503: BytePoly_4 = bigint_nondet_inv!(ctx, x1502, x5, 4);
    let x1504: BytePoly_8 = bigint_mul!(x1502, x1503, 8);
    let x1505: BytePoly_9 = bigint_nondet_quot!(ctx, x1504, x5, 9);
    let x1506: BytePoly_4 = bigint_nondet_rem!(ctx, x1504, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1505, x5, 13), x1506, 13),
            x1504,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1506, x2, 4), 34, 1)?;
    let x1507: BytePoly_8 = bigint_mul!(x1499, x1503, 8);
    let x1508: BytePoly_9 = bigint_nondet_quot!(ctx, x1507, x5, 9);
    let x1509: BytePoly_4 = bigint_nondet_rem!(ctx, x1507, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1508, x5, 13), x1509, 13),
            x1507,
            13
        ),
        73156,
        4,
    )?;
    let x1510: BytePoly_8 = bigint_mul!(x1509, x1464, 8);
    let x1511: BytePoly_9 = bigint_nondet_quot!(ctx, x1510, x5, 9);
    let x1512: BytePoly_4 = bigint_nondet_rem!(ctx, x1510, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1511, x5, 13), x1512, 13),
            x1510,
            13
        ),
        73156,
        4,
    )?;
    let x1513: BytePoly_4 = bigint_add!(bigint_sub!(x1470, x1512, 4), x5, 4);
    let x1514: BytePoly_4 = bigint_nondet_quot!(ctx, x1513, x5, 4);
    let x1515: BytePoly_4 = bigint_nondet_rem!(ctx, x1513, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1514, x5, 8), x1515, 8), x1513, 8),
        32515,
        2,
    )?;
    let x1516: BytePoly_8 = bigint_mul!(x1509, x1509, 8);
    let x1517: BytePoly_9 = bigint_nondet_quot!(ctx, x1516, x5, 9);
    let x1518: BytePoly_4 = bigint_nondet_rem!(ctx, x1516, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1517, x5, 13), x1518, 13),
            x1516,
            13
        ),
        73156,
        4,
    )?;
    let x1519: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1518, x1464, 4), x5, 4), x1464, 4),
        x5,
        4
    );
    let x1520: BytePoly_4 = bigint_nondet_quot!(ctx, x1519, x5, 4);
    let x1521: BytePoly_4 = bigint_nondet_rem!(ctx, x1519, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1520, x5, 8), x1521, 8), x1519, 8),
        32515,
        2,
    )?;
    let x1522: BytePoly_8 = bigint_mul!(x1509, x1521, 8);
    let x1523: BytePoly_9 = bigint_nondet_quot!(ctx, x1522, x5, 9);
    let x1524: BytePoly_4 = bigint_nondet_rem!(ctx, x1522, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1523, x5, 13), x1524, 13),
            x1522,
            13
        ),
        73156,
        4,
    )?;
    let x1525: BytePoly_4 = bigint_add!(bigint_sub!(x5, bigint_add!(x1524, x1515, 4), 4), x5, 4);
    let x1526: BytePoly_4 = bigint_nondet_quot!(ctx, x1525, x5, 4);
    let x1527: BytePoly_4 = bigint_nondet_rem!(ctx, x1525, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1526, x5, 8), x1527, 8), x1525, 8),
        32515,
        2,
    )?;
    let x1528: BytePoly_1 = bigint_nondet_rem!(ctx, x1472, x1, 1);
    let x1529: BytePoly_4 = bigint_nondet_quot!(ctx, x1472, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1529, x1, 5), x1528, 5), x1472, 5),
        32515,
        2,
    )?;
    let x1530: BytePoly_1 = bigint_sub!(x2, x1528, 1);
    eqz(ctx, &bigint_mul!(x1528, x1530, 2), 8131, 2)?;
    let x1531: BytePoly_4 = bigint_add!(bigint_sub!(x1527, x1493, 4), x5, 4);
    let x1532: BytePoly_4 = bigint_add!(bigint_sub!(x1521, x1491, 4), x5, 4);
    let x1533: BytePoly_4 = bigint_nondet_inv!(ctx, x1532, x5, 4);
    let x1534: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x1531, x1533, 8), x5, 4);
    let x1535: BytePoly_8 = bigint_add!(bigint_sub!(bigint_mul!(x1534, x1532, 8), x1531, 8), x5, 8);
    let x1536: BytePoly_9 = bigint_nondet_quot!(ctx, x1535, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x1535, bigint_mul!(x1536, x5, 13), 13),
        73156,
        4,
    )?;
    let x1537: BytePoly_8 = bigint_mul!(x1534, x1534, 8);
    let x1538: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1537, x1491, 8), x5, 8), x1521, 8),
        x5,
        8
    );
    let x1539: BytePoly_9 = bigint_nondet_quot!(ctx, x1538, x5, 9);
    let x1540: BytePoly_4 = bigint_nondet_rem!(ctx, x1538, x5, 4);
    let x1541: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x5,
                bigint_add!(
                    bigint_mul!(x1534, x1540, 8),
                    bigint_add!(bigint_sub!(x1493, bigint_mul!(x1534, x1491, 8), 8), x5, 8),
                    8
                ),
                8
            ),
            x5,
            8
        ),
        x5,
        8
    );
    let x1542: BytePoly_9 = bigint_nondet_quot!(ctx, x1541, x5, 9);
    let x1543: BytePoly_4 = bigint_nondet_rem!(ctx, x1541, x5, 4);
    let x1544: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1537, bigint_mul!(x1539, x5, 13), 13),
                        x1491,
                        13
                    ),
                    x1521,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x1540,
        13
    );
    eqz(ctx, &x1544, 73156, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1542, x5, 13), x1543, 13),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1534, bigint_sub!(x1491, x1540, 4), 8),
                        x1493,
                        8
                    ),
                    x5,
                    8
                ),
                x5,
                8
            ),
            13
        ),
        73156,
        4,
    )?;
    let x1545: BytePoly_5 = bigint_add!(
        bigint_mul!(x1540, x1528, 5),
        bigint_mul!(x1491, x1530, 5),
        5
    );
    let x1546: BytePoly_5 = bigint_add!(
        bigint_mul!(x1543, x1528, 5),
        bigint_mul!(x1493, x1530, 5),
        5
    );
    let x1547: BytePoly_6 = bigint_nondet_quot!(ctx, x1545, x5, 6);
    let x1548: BytePoly_4 = bigint_nondet_rem!(ctx, x1545, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1547, x5, 10), x1548, 10),
            x1545,
            10
        ),
        48771,
        4,
    )?;
    let x1549: BytePoly_6 = bigint_nondet_quot!(ctx, x1546, x5, 6);
    let x1550: BytePoly_4 = bigint_nondet_rem!(ctx, x1546, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1549, x5, 10), x1550, 10),
            x1546,
            10
        ),
        48771,
        4,
    )?;
    let x1551: BytePoly_8 = bigint_mul!(x1521, x1521, 8);
    let x1552: BytePoly_9 = bigint_nondet_quot!(ctx, x1551, x5, 9);
    let x1553: BytePoly_4 = bigint_nondet_rem!(ctx, x1551, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1552, x5, 13), x1553, 13),
            x1551,
            13
        ),
        73156,
        4,
    )?;
    let x1554: BytePoly_5 = bigint_add!(bigint_mul!(x1553, x0, 5), x4, 5);
    let x1555: BytePoly_6 = bigint_nondet_quot!(ctx, x1554, x5, 6);
    let x1556: BytePoly_4 = bigint_nondet_rem!(ctx, x1554, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1555, x5, 10), x1556, 10),
            x1554,
            10
        ),
        48771,
        4,
    )?;
    let x1557: BytePoly_4 = bigint_add!(x1527, x1527, 4);
    let x1558: BytePoly_4 = bigint_nondet_quot!(ctx, x1557, x5, 4);
    let x1559: BytePoly_4 = bigint_nondet_rem!(ctx, x1557, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1558, x5, 8), x1559, 8), x1557, 8),
        32515,
        2,
    )?;
    let x1560: BytePoly_4 = bigint_nondet_inv!(ctx, x1559, x5, 4);
    let x1561: BytePoly_8 = bigint_mul!(x1559, x1560, 8);
    let x1562: BytePoly_9 = bigint_nondet_quot!(ctx, x1561, x5, 9);
    let x1563: BytePoly_4 = bigint_nondet_rem!(ctx, x1561, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1562, x5, 13), x1563, 13),
            x1561,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1563, x2, 4), 34, 1)?;
    let x1564: BytePoly_8 = bigint_mul!(x1556, x1560, 8);
    let x1565: BytePoly_9 = bigint_nondet_quot!(ctx, x1564, x5, 9);
    let x1566: BytePoly_4 = bigint_nondet_rem!(ctx, x1564, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1565, x5, 13), x1566, 13),
            x1564,
            13
        ),
        73156,
        4,
    )?;
    let x1567: BytePoly_8 = bigint_mul!(x1566, x1521, 8);
    let x1568: BytePoly_9 = bigint_nondet_quot!(ctx, x1567, x5, 9);
    let x1569: BytePoly_4 = bigint_nondet_rem!(ctx, x1567, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1568, x5, 13), x1569, 13),
            x1567,
            13
        ),
        73156,
        4,
    )?;
    let x1570: BytePoly_4 = bigint_add!(bigint_sub!(x1527, x1569, 4), x5, 4);
    let x1571: BytePoly_4 = bigint_nondet_quot!(ctx, x1570, x5, 4);
    let x1572: BytePoly_4 = bigint_nondet_rem!(ctx, x1570, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1571, x5, 8), x1572, 8), x1570, 8),
        32515,
        2,
    )?;
    let x1573: BytePoly_8 = bigint_mul!(x1566, x1566, 8);
    let x1574: BytePoly_9 = bigint_nondet_quot!(ctx, x1573, x5, 9);
    let x1575: BytePoly_4 = bigint_nondet_rem!(ctx, x1573, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1574, x5, 13), x1575, 13),
            x1573,
            13
        ),
        73156,
        4,
    )?;
    let x1576: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1575, x1521, 4), x5, 4), x1521, 4),
        x5,
        4
    );
    let x1577: BytePoly_4 = bigint_nondet_quot!(ctx, x1576, x5, 4);
    let x1578: BytePoly_4 = bigint_nondet_rem!(ctx, x1576, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1577, x5, 8), x1578, 8), x1576, 8),
        32515,
        2,
    )?;
    let x1579: BytePoly_8 = bigint_mul!(x1566, x1578, 8);
    let x1580: BytePoly_9 = bigint_nondet_quot!(ctx, x1579, x5, 9);
    let x1581: BytePoly_4 = bigint_nondet_rem!(ctx, x1579, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1580, x5, 13), x1581, 13),
            x1579,
            13
        ),
        73156,
        4,
    )?;
    let x1582: BytePoly_4 = bigint_add!(bigint_sub!(x5, bigint_add!(x1581, x1572, 4), 4), x5, 4);
    let x1583: BytePoly_4 = bigint_nondet_quot!(ctx, x1582, x5, 4);
    let x1584: BytePoly_4 = bigint_nondet_rem!(ctx, x1582, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1583, x5, 8), x1584, 8), x1582, 8),
        32515,
        2,
    )?;
    let x1585: BytePoly_1 = bigint_nondet_rem!(ctx, x1529, x1, 1);
    let x1586: BytePoly_4 = bigint_nondet_quot!(ctx, x1529, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1586, x1, 5), x1585, 5), x1529, 5),
        32515,
        2,
    )?;
    let x1587: BytePoly_1 = bigint_sub!(x2, x1585, 1);
    eqz(ctx, &bigint_mul!(x1585, x1587, 2), 8131, 2)?;
    let x1588: BytePoly_4 = bigint_add!(bigint_sub!(x1584, x1550, 4), x5, 4);
    let x1589: BytePoly_4 = bigint_add!(bigint_sub!(x1578, x1548, 4), x5, 4);
    let x1590: BytePoly_4 = bigint_nondet_inv!(ctx, x1589, x5, 4);
    let x1591: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x1588, x1590, 8), x5, 4);
    let x1592: BytePoly_8 = bigint_add!(bigint_sub!(bigint_mul!(x1591, x1589, 8), x1588, 8), x5, 8);
    let x1593: BytePoly_9 = bigint_nondet_quot!(ctx, x1592, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x1592, bigint_mul!(x1593, x5, 13), 13),
        73156,
        4,
    )?;
    let x1594: BytePoly_8 = bigint_mul!(x1591, x1591, 8);
    let x1595: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1594, x1548, 8), x5, 8), x1578, 8),
        x5,
        8
    );
    let x1596: BytePoly_9 = bigint_nondet_quot!(ctx, x1595, x5, 9);
    let x1597: BytePoly_4 = bigint_nondet_rem!(ctx, x1595, x5, 4);
    let x1598: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x5,
                bigint_add!(
                    bigint_mul!(x1591, x1597, 8),
                    bigint_add!(bigint_sub!(x1550, bigint_mul!(x1591, x1548, 8), 8), x5, 8),
                    8
                ),
                8
            ),
            x5,
            8
        ),
        x5,
        8
    );
    let x1599: BytePoly_9 = bigint_nondet_quot!(ctx, x1598, x5, 9);
    let x1600: BytePoly_4 = bigint_nondet_rem!(ctx, x1598, x5, 4);
    let x1601: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1594, bigint_mul!(x1596, x5, 13), 13),
                        x1548,
                        13
                    ),
                    x1578,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x1597,
        13
    );
    eqz(ctx, &x1601, 73156, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1599, x5, 13), x1600, 13),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1591, bigint_sub!(x1548, x1597, 4), 8),
                        x1550,
                        8
                    ),
                    x5,
                    8
                ),
                x5,
                8
            ),
            13
        ),
        73156,
        4,
    )?;
    let x1602: BytePoly_5 = bigint_add!(
        bigint_mul!(x1597, x1585, 5),
        bigint_mul!(x1548, x1587, 5),
        5
    );
    let x1603: BytePoly_5 = bigint_add!(
        bigint_mul!(x1600, x1585, 5),
        bigint_mul!(x1550, x1587, 5),
        5
    );
    let x1604: BytePoly_6 = bigint_nondet_quot!(ctx, x1602, x5, 6);
    let x1605: BytePoly_4 = bigint_nondet_rem!(ctx, x1602, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1604, x5, 10), x1605, 10),
            x1602,
            10
        ),
        48771,
        4,
    )?;
    let x1606: BytePoly_6 = bigint_nondet_quot!(ctx, x1603, x5, 6);
    let x1607: BytePoly_4 = bigint_nondet_rem!(ctx, x1603, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1606, x5, 10), x1607, 10),
            x1603,
            10
        ),
        48771,
        4,
    )?;
    let x1608: BytePoly_8 = bigint_mul!(x1578, x1578, 8);
    let x1609: BytePoly_9 = bigint_nondet_quot!(ctx, x1608, x5, 9);
    let x1610: BytePoly_4 = bigint_nondet_rem!(ctx, x1608, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1609, x5, 13), x1610, 13),
            x1608,
            13
        ),
        73156,
        4,
    )?;
    let x1611: BytePoly_5 = bigint_add!(bigint_mul!(x1610, x0, 5), x4, 5);
    let x1612: BytePoly_6 = bigint_nondet_quot!(ctx, x1611, x5, 6);
    let x1613: BytePoly_4 = bigint_nondet_rem!(ctx, x1611, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1612, x5, 10), x1613, 10),
            x1611,
            10
        ),
        48771,
        4,
    )?;
    let x1614: BytePoly_4 = bigint_add!(x1584, x1584, 4);
    let x1615: BytePoly_4 = bigint_nondet_quot!(ctx, x1614, x5, 4);
    let x1616: BytePoly_4 = bigint_nondet_rem!(ctx, x1614, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1615, x5, 8), x1616, 8), x1614, 8),
        32515,
        2,
    )?;
    let x1617: BytePoly_4 = bigint_nondet_inv!(ctx, x1616, x5, 4);
    let x1618: BytePoly_8 = bigint_mul!(x1616, x1617, 8);
    let x1619: BytePoly_9 = bigint_nondet_quot!(ctx, x1618, x5, 9);
    let x1620: BytePoly_4 = bigint_nondet_rem!(ctx, x1618, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1619, x5, 13), x1620, 13),
            x1618,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1620, x2, 4), 34, 1)?;
    let x1621: BytePoly_8 = bigint_mul!(x1613, x1617, 8);
    let x1622: BytePoly_9 = bigint_nondet_quot!(ctx, x1621, x5, 9);
    let x1623: BytePoly_4 = bigint_nondet_rem!(ctx, x1621, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1622, x5, 13), x1623, 13),
            x1621,
            13
        ),
        73156,
        4,
    )?;
    let x1624: BytePoly_8 = bigint_mul!(x1623, x1578, 8);
    let x1625: BytePoly_9 = bigint_nondet_quot!(ctx, x1624, x5, 9);
    let x1626: BytePoly_4 = bigint_nondet_rem!(ctx, x1624, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1625, x5, 13), x1626, 13),
            x1624,
            13
        ),
        73156,
        4,
    )?;
    let x1627: BytePoly_4 = bigint_add!(bigint_sub!(x1584, x1626, 4), x5, 4);
    let x1628: BytePoly_4 = bigint_nondet_quot!(ctx, x1627, x5, 4);
    let x1629: BytePoly_4 = bigint_nondet_rem!(ctx, x1627, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1628, x5, 8), x1629, 8), x1627, 8),
        32515,
        2,
    )?;
    let x1630: BytePoly_8 = bigint_mul!(x1623, x1623, 8);
    let x1631: BytePoly_9 = bigint_nondet_quot!(ctx, x1630, x5, 9);
    let x1632: BytePoly_4 = bigint_nondet_rem!(ctx, x1630, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1631, x5, 13), x1632, 13),
            x1630,
            13
        ),
        73156,
        4,
    )?;
    let x1633: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1632, x1578, 4), x5, 4), x1578, 4),
        x5,
        4
    );
    let x1634: BytePoly_4 = bigint_nondet_quot!(ctx, x1633, x5, 4);
    let x1635: BytePoly_4 = bigint_nondet_rem!(ctx, x1633, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1634, x5, 8), x1635, 8), x1633, 8),
        32515,
        2,
    )?;
    let x1636: BytePoly_8 = bigint_mul!(x1623, x1635, 8);
    let x1637: BytePoly_9 = bigint_nondet_quot!(ctx, x1636, x5, 9);
    let x1638: BytePoly_4 = bigint_nondet_rem!(ctx, x1636, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1637, x5, 13), x1638, 13),
            x1636,
            13
        ),
        73156,
        4,
    )?;
    let x1639: BytePoly_4 = bigint_add!(bigint_sub!(x5, bigint_add!(x1638, x1629, 4), 4), x5, 4);
    let x1640: BytePoly_4 = bigint_nondet_quot!(ctx, x1639, x5, 4);
    let x1641: BytePoly_4 = bigint_nondet_rem!(ctx, x1639, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1640, x5, 8), x1641, 8), x1639, 8),
        32515,
        2,
    )?;
    let x1642: BytePoly_1 = bigint_nondet_rem!(ctx, x1586, x1, 1);
    let x1643: BytePoly_4 = bigint_nondet_quot!(ctx, x1586, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1643, x1, 5), x1642, 5), x1586, 5),
        32515,
        2,
    )?;
    let x1644: BytePoly_1 = bigint_sub!(x2, x1642, 1);
    eqz(ctx, &bigint_mul!(x1642, x1644, 2), 8131, 2)?;
    let x1645: BytePoly_4 = bigint_add!(bigint_sub!(x1641, x1607, 4), x5, 4);
    let x1646: BytePoly_4 = bigint_add!(bigint_sub!(x1635, x1605, 4), x5, 4);
    let x1647: BytePoly_4 = bigint_nondet_inv!(ctx, x1646, x5, 4);
    let x1648: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x1645, x1647, 8), x5, 4);
    let x1649: BytePoly_8 = bigint_add!(bigint_sub!(bigint_mul!(x1648, x1646, 8), x1645, 8), x5, 8);
    let x1650: BytePoly_9 = bigint_nondet_quot!(ctx, x1649, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x1649, bigint_mul!(x1650, x5, 13), 13),
        73156,
        4,
    )?;
    let x1651: BytePoly_8 = bigint_mul!(x1648, x1648, 8);
    let x1652: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1651, x1605, 8), x5, 8), x1635, 8),
        x5,
        8
    );
    let x1653: BytePoly_9 = bigint_nondet_quot!(ctx, x1652, x5, 9);
    let x1654: BytePoly_4 = bigint_nondet_rem!(ctx, x1652, x5, 4);
    let x1655: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x5,
                bigint_add!(
                    bigint_mul!(x1648, x1654, 8),
                    bigint_add!(bigint_sub!(x1607, bigint_mul!(x1648, x1605, 8), 8), x5, 8),
                    8
                ),
                8
            ),
            x5,
            8
        ),
        x5,
        8
    );
    let x1656: BytePoly_9 = bigint_nondet_quot!(ctx, x1655, x5, 9);
    let x1657: BytePoly_4 = bigint_nondet_rem!(ctx, x1655, x5, 4);
    let x1658: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1651, bigint_mul!(x1653, x5, 13), 13),
                        x1605,
                        13
                    ),
                    x1635,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x1654,
        13
    );
    eqz(ctx, &x1658, 73156, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1656, x5, 13), x1657, 13),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1648, bigint_sub!(x1605, x1654, 4), 8),
                        x1607,
                        8
                    ),
                    x5,
                    8
                ),
                x5,
                8
            ),
            13
        ),
        73156,
        4,
    )?;
    let x1659: BytePoly_5 = bigint_add!(
        bigint_mul!(x1654, x1642, 5),
        bigint_mul!(x1605, x1644, 5),
        5
    );
    let x1660: BytePoly_5 = bigint_add!(
        bigint_mul!(x1657, x1642, 5),
        bigint_mul!(x1607, x1644, 5),
        5
    );
    let x1661: BytePoly_6 = bigint_nondet_quot!(ctx, x1659, x5, 6);
    let x1662: BytePoly_4 = bigint_nondet_rem!(ctx, x1659, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1661, x5, 10), x1662, 10),
            x1659,
            10
        ),
        48771,
        4,
    )?;
    let x1663: BytePoly_6 = bigint_nondet_quot!(ctx, x1660, x5, 6);
    let x1664: BytePoly_4 = bigint_nondet_rem!(ctx, x1660, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1663, x5, 10), x1664, 10),
            x1660,
            10
        ),
        48771,
        4,
    )?;
    let x1665: BytePoly_8 = bigint_mul!(x1635, x1635, 8);
    let x1666: BytePoly_9 = bigint_nondet_quot!(ctx, x1665, x5, 9);
    let x1667: BytePoly_4 = bigint_nondet_rem!(ctx, x1665, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1666, x5, 13), x1667, 13),
            x1665,
            13
        ),
        73156,
        4,
    )?;
    let x1668: BytePoly_5 = bigint_add!(bigint_mul!(x1667, x0, 5), x4, 5);
    let x1669: BytePoly_6 = bigint_nondet_quot!(ctx, x1668, x5, 6);
    let x1670: BytePoly_4 = bigint_nondet_rem!(ctx, x1668, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1669, x5, 10), x1670, 10),
            x1668,
            10
        ),
        48771,
        4,
    )?;
    let x1671: BytePoly_4 = bigint_add!(x1641, x1641, 4);
    let x1672: BytePoly_4 = bigint_nondet_quot!(ctx, x1671, x5, 4);
    let x1673: BytePoly_4 = bigint_nondet_rem!(ctx, x1671, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1672, x5, 8), x1673, 8), x1671, 8),
        32515,
        2,
    )?;
    let x1674: BytePoly_4 = bigint_nondet_inv!(ctx, x1673, x5, 4);
    let x1675: BytePoly_8 = bigint_mul!(x1673, x1674, 8);
    let x1676: BytePoly_9 = bigint_nondet_quot!(ctx, x1675, x5, 9);
    let x1677: BytePoly_4 = bigint_nondet_rem!(ctx, x1675, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1676, x5, 13), x1677, 13),
            x1675,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1677, x2, 4), 34, 1)?;
    let x1678: BytePoly_8 = bigint_mul!(x1670, x1674, 8);
    let x1679: BytePoly_9 = bigint_nondet_quot!(ctx, x1678, x5, 9);
    let x1680: BytePoly_4 = bigint_nondet_rem!(ctx, x1678, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1679, x5, 13), x1680, 13),
            x1678,
            13
        ),
        73156,
        4,
    )?;
    let x1681: BytePoly_8 = bigint_mul!(x1680, x1635, 8);
    let x1682: BytePoly_9 = bigint_nondet_quot!(ctx, x1681, x5, 9);
    let x1683: BytePoly_4 = bigint_nondet_rem!(ctx, x1681, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1682, x5, 13), x1683, 13),
            x1681,
            13
        ),
        73156,
        4,
    )?;
    let x1684: BytePoly_4 = bigint_add!(bigint_sub!(x1641, x1683, 4), x5, 4);
    let x1685: BytePoly_4 = bigint_nondet_quot!(ctx, x1684, x5, 4);
    let x1686: BytePoly_4 = bigint_nondet_rem!(ctx, x1684, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1685, x5, 8), x1686, 8), x1684, 8),
        32515,
        2,
    )?;
    let x1687: BytePoly_8 = bigint_mul!(x1680, x1680, 8);
    let x1688: BytePoly_9 = bigint_nondet_quot!(ctx, x1687, x5, 9);
    let x1689: BytePoly_4 = bigint_nondet_rem!(ctx, x1687, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1688, x5, 13), x1689, 13),
            x1687,
            13
        ),
        73156,
        4,
    )?;
    let x1690: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1689, x1635, 4), x5, 4), x1635, 4),
        x5,
        4
    );
    let x1691: BytePoly_4 = bigint_nondet_quot!(ctx, x1690, x5, 4);
    let x1692: BytePoly_4 = bigint_nondet_rem!(ctx, x1690, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1691, x5, 8), x1692, 8), x1690, 8),
        32515,
        2,
    )?;
    let x1693: BytePoly_8 = bigint_mul!(x1680, x1692, 8);
    let x1694: BytePoly_9 = bigint_nondet_quot!(ctx, x1693, x5, 9);
    let x1695: BytePoly_4 = bigint_nondet_rem!(ctx, x1693, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1694, x5, 13), x1695, 13),
            x1693,
            13
        ),
        73156,
        4,
    )?;
    let x1696: BytePoly_4 = bigint_add!(bigint_sub!(x5, bigint_add!(x1695, x1686, 4), 4), x5, 4);
    let x1697: BytePoly_4 = bigint_nondet_quot!(ctx, x1696, x5, 4);
    let x1698: BytePoly_4 = bigint_nondet_rem!(ctx, x1696, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1697, x5, 8), x1698, 8), x1696, 8),
        32515,
        2,
    )?;
    let x1699: BytePoly_1 = bigint_nondet_rem!(ctx, x1643, x1, 1);
    let x1700: BytePoly_4 = bigint_nondet_quot!(ctx, x1643, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1700, x1, 5), x1699, 5), x1643, 5),
        32515,
        2,
    )?;
    let x1701: BytePoly_1 = bigint_sub!(x2, x1699, 1);
    eqz(ctx, &bigint_mul!(x1699, x1701, 2), 8131, 2)?;
    let x1702: BytePoly_4 = bigint_add!(bigint_sub!(x1698, x1664, 4), x5, 4);
    let x1703: BytePoly_4 = bigint_add!(bigint_sub!(x1692, x1662, 4), x5, 4);
    let x1704: BytePoly_4 = bigint_nondet_inv!(ctx, x1703, x5, 4);
    let x1705: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x1702, x1704, 8), x5, 4);
    let x1706: BytePoly_8 = bigint_add!(bigint_sub!(bigint_mul!(x1705, x1703, 8), x1702, 8), x5, 8);
    let x1707: BytePoly_9 = bigint_nondet_quot!(ctx, x1706, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x1706, bigint_mul!(x1707, x5, 13), 13),
        73156,
        4,
    )?;
    let x1708: BytePoly_8 = bigint_mul!(x1705, x1705, 8);
    let x1709: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1708, x1662, 8), x5, 8), x1692, 8),
        x5,
        8
    );
    let x1710: BytePoly_9 = bigint_nondet_quot!(ctx, x1709, x5, 9);
    let x1711: BytePoly_4 = bigint_nondet_rem!(ctx, x1709, x5, 4);
    let x1712: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x5,
                bigint_add!(
                    bigint_mul!(x1705, x1711, 8),
                    bigint_add!(bigint_sub!(x1664, bigint_mul!(x1705, x1662, 8), 8), x5, 8),
                    8
                ),
                8
            ),
            x5,
            8
        ),
        x5,
        8
    );
    let x1713: BytePoly_9 = bigint_nondet_quot!(ctx, x1712, x5, 9);
    let x1714: BytePoly_4 = bigint_nondet_rem!(ctx, x1712, x5, 4);
    let x1715: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1708, bigint_mul!(x1710, x5, 13), 13),
                        x1662,
                        13
                    ),
                    x1692,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x1711,
        13
    );
    eqz(ctx, &x1715, 73156, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1713, x5, 13), x1714, 13),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1705, bigint_sub!(x1662, x1711, 4), 8),
                        x1664,
                        8
                    ),
                    x5,
                    8
                ),
                x5,
                8
            ),
            13
        ),
        73156,
        4,
    )?;
    let x1716: BytePoly_5 = bigint_add!(
        bigint_mul!(x1711, x1699, 5),
        bigint_mul!(x1662, x1701, 5),
        5
    );
    let x1717: BytePoly_5 = bigint_add!(
        bigint_mul!(x1714, x1699, 5),
        bigint_mul!(x1664, x1701, 5),
        5
    );
    let x1718: BytePoly_6 = bigint_nondet_quot!(ctx, x1716, x5, 6);
    let x1719: BytePoly_4 = bigint_nondet_rem!(ctx, x1716, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1718, x5, 10), x1719, 10),
            x1716,
            10
        ),
        48771,
        4,
    )?;
    let x1720: BytePoly_6 = bigint_nondet_quot!(ctx, x1717, x5, 6);
    let x1721: BytePoly_4 = bigint_nondet_rem!(ctx, x1717, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1720, x5, 10), x1721, 10),
            x1717,
            10
        ),
        48771,
        4,
    )?;
    let x1722: BytePoly_8 = bigint_mul!(x1692, x1692, 8);
    let x1723: BytePoly_9 = bigint_nondet_quot!(ctx, x1722, x5, 9);
    let x1724: BytePoly_4 = bigint_nondet_rem!(ctx, x1722, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1723, x5, 13), x1724, 13),
            x1722,
            13
        ),
        73156,
        4,
    )?;
    let x1725: BytePoly_5 = bigint_add!(bigint_mul!(x1724, x0, 5), x4, 5);
    let x1726: BytePoly_6 = bigint_nondet_quot!(ctx, x1725, x5, 6);
    let x1727: BytePoly_4 = bigint_nondet_rem!(ctx, x1725, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1726, x5, 10), x1727, 10),
            x1725,
            10
        ),
        48771,
        4,
    )?;
    let x1728: BytePoly_4 = bigint_add!(x1698, x1698, 4);
    let x1729: BytePoly_4 = bigint_nondet_quot!(ctx, x1728, x5, 4);
    let x1730: BytePoly_4 = bigint_nondet_rem!(ctx, x1728, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1729, x5, 8), x1730, 8), x1728, 8),
        32515,
        2,
    )?;
    let x1731: BytePoly_4 = bigint_nondet_inv!(ctx, x1730, x5, 4);
    let x1732: BytePoly_8 = bigint_mul!(x1730, x1731, 8);
    let x1733: BytePoly_9 = bigint_nondet_quot!(ctx, x1732, x5, 9);
    let x1734: BytePoly_4 = bigint_nondet_rem!(ctx, x1732, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1733, x5, 13), x1734, 13),
            x1732,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1734, x2, 4), 34, 1)?;
    let x1735: BytePoly_8 = bigint_mul!(x1727, x1731, 8);
    let x1736: BytePoly_9 = bigint_nondet_quot!(ctx, x1735, x5, 9);
    let x1737: BytePoly_4 = bigint_nondet_rem!(ctx, x1735, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1736, x5, 13), x1737, 13),
            x1735,
            13
        ),
        73156,
        4,
    )?;
    let x1738: BytePoly_8 = bigint_mul!(x1737, x1692, 8);
    let x1739: BytePoly_9 = bigint_nondet_quot!(ctx, x1738, x5, 9);
    let x1740: BytePoly_4 = bigint_nondet_rem!(ctx, x1738, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1739, x5, 13), x1740, 13),
            x1738,
            13
        ),
        73156,
        4,
    )?;
    let x1741: BytePoly_4 = bigint_add!(bigint_sub!(x1698, x1740, 4), x5, 4);
    let x1742: BytePoly_4 = bigint_nondet_quot!(ctx, x1741, x5, 4);
    let x1743: BytePoly_4 = bigint_nondet_rem!(ctx, x1741, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1742, x5, 8), x1743, 8), x1741, 8),
        32515,
        2,
    )?;
    let x1744: BytePoly_8 = bigint_mul!(x1737, x1737, 8);
    let x1745: BytePoly_9 = bigint_nondet_quot!(ctx, x1744, x5, 9);
    let x1746: BytePoly_4 = bigint_nondet_rem!(ctx, x1744, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1745, x5, 13), x1746, 13),
            x1744,
            13
        ),
        73156,
        4,
    )?;
    let x1747: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1746, x1692, 4), x5, 4), x1692, 4),
        x5,
        4
    );
    let x1748: BytePoly_4 = bigint_nondet_quot!(ctx, x1747, x5, 4);
    let x1749: BytePoly_4 = bigint_nondet_rem!(ctx, x1747, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1748, x5, 8), x1749, 8), x1747, 8),
        32515,
        2,
    )?;
    let x1750: BytePoly_8 = bigint_mul!(x1737, x1749, 8);
    let x1751: BytePoly_9 = bigint_nondet_quot!(ctx, x1750, x5, 9);
    let x1752: BytePoly_4 = bigint_nondet_rem!(ctx, x1750, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1751, x5, 13), x1752, 13),
            x1750,
            13
        ),
        73156,
        4,
    )?;
    let x1753: BytePoly_4 = bigint_add!(bigint_sub!(x5, bigint_add!(x1752, x1743, 4), 4), x5, 4);
    let x1754: BytePoly_4 = bigint_nondet_quot!(ctx, x1753, x5, 4);
    let x1755: BytePoly_4 = bigint_nondet_rem!(ctx, x1753, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1754, x5, 8), x1755, 8), x1753, 8),
        32515,
        2,
    )?;
    let x1756: BytePoly_1 = bigint_nondet_rem!(ctx, x1700, x1, 1);
    let x1757: BytePoly_4 = bigint_nondet_quot!(ctx, x1700, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1757, x1, 5), x1756, 5), x1700, 5),
        32515,
        2,
    )?;
    let x1758: BytePoly_1 = bigint_sub!(x2, x1756, 1);
    eqz(ctx, &bigint_mul!(x1756, x1758, 2), 8131, 2)?;
    let x1759: BytePoly_4 = bigint_add!(bigint_sub!(x1755, x1721, 4), x5, 4);
    let x1760: BytePoly_4 = bigint_add!(bigint_sub!(x1749, x1719, 4), x5, 4);
    let x1761: BytePoly_4 = bigint_nondet_inv!(ctx, x1760, x5, 4);
    let x1762: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x1759, x1761, 8), x5, 4);
    let x1763: BytePoly_8 = bigint_add!(bigint_sub!(bigint_mul!(x1762, x1760, 8), x1759, 8), x5, 8);
    let x1764: BytePoly_9 = bigint_nondet_quot!(ctx, x1763, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x1763, bigint_mul!(x1764, x5, 13), 13),
        73156,
        4,
    )?;
    let x1765: BytePoly_8 = bigint_mul!(x1762, x1762, 8);
    let x1766: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1765, x1719, 8), x5, 8), x1749, 8),
        x5,
        8
    );
    let x1767: BytePoly_9 = bigint_nondet_quot!(ctx, x1766, x5, 9);
    let x1768: BytePoly_4 = bigint_nondet_rem!(ctx, x1766, x5, 4);
    let x1769: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x5,
                bigint_add!(
                    bigint_mul!(x1762, x1768, 8),
                    bigint_add!(bigint_sub!(x1721, bigint_mul!(x1762, x1719, 8), 8), x5, 8),
                    8
                ),
                8
            ),
            x5,
            8
        ),
        x5,
        8
    );
    let x1770: BytePoly_9 = bigint_nondet_quot!(ctx, x1769, x5, 9);
    let x1771: BytePoly_4 = bigint_nondet_rem!(ctx, x1769, x5, 4);
    let x1772: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1765, bigint_mul!(x1767, x5, 13), 13),
                        x1719,
                        13
                    ),
                    x1749,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x1768,
        13
    );
    eqz(ctx, &x1772, 73156, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1770, x5, 13), x1771, 13),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1762, bigint_sub!(x1719, x1768, 4), 8),
                        x1721,
                        8
                    ),
                    x5,
                    8
                ),
                x5,
                8
            ),
            13
        ),
        73156,
        4,
    )?;
    let x1773: BytePoly_5 = bigint_add!(
        bigint_mul!(x1768, x1756, 5),
        bigint_mul!(x1719, x1758, 5),
        5
    );
    let x1774: BytePoly_5 = bigint_add!(
        bigint_mul!(x1771, x1756, 5),
        bigint_mul!(x1721, x1758, 5),
        5
    );
    let x1775: BytePoly_6 = bigint_nondet_quot!(ctx, x1773, x5, 6);
    let x1776: BytePoly_4 = bigint_nondet_rem!(ctx, x1773, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1775, x5, 10), x1776, 10),
            x1773,
            10
        ),
        48771,
        4,
    )?;
    let x1777: BytePoly_6 = bigint_nondet_quot!(ctx, x1774, x5, 6);
    let x1778: BytePoly_4 = bigint_nondet_rem!(ctx, x1774, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1777, x5, 10), x1778, 10),
            x1774,
            10
        ),
        48771,
        4,
    )?;
    let x1779: BytePoly_8 = bigint_mul!(x1749, x1749, 8);
    let x1780: BytePoly_9 = bigint_nondet_quot!(ctx, x1779, x5, 9);
    let x1781: BytePoly_4 = bigint_nondet_rem!(ctx, x1779, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1780, x5, 13), x1781, 13),
            x1779,
            13
        ),
        73156,
        4,
    )?;
    let x1782: BytePoly_5 = bigint_add!(bigint_mul!(x1781, x0, 5), x4, 5);
    let x1783: BytePoly_6 = bigint_nondet_quot!(ctx, x1782, x5, 6);
    let x1784: BytePoly_4 = bigint_nondet_rem!(ctx, x1782, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1783, x5, 10), x1784, 10),
            x1782,
            10
        ),
        48771,
        4,
    )?;
    let x1785: BytePoly_4 = bigint_add!(x1755, x1755, 4);
    let x1786: BytePoly_4 = bigint_nondet_quot!(ctx, x1785, x5, 4);
    let x1787: BytePoly_4 = bigint_nondet_rem!(ctx, x1785, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1786, x5, 8), x1787, 8), x1785, 8),
        32515,
        2,
    )?;
    let x1788: BytePoly_4 = bigint_nondet_inv!(ctx, x1787, x5, 4);
    let x1789: BytePoly_8 = bigint_mul!(x1787, x1788, 8);
    let x1790: BytePoly_9 = bigint_nondet_quot!(ctx, x1789, x5, 9);
    let x1791: BytePoly_4 = bigint_nondet_rem!(ctx, x1789, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1790, x5, 13), x1791, 13),
            x1789,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1791, x2, 4), 34, 1)?;
    let x1792: BytePoly_8 = bigint_mul!(x1784, x1788, 8);
    let x1793: BytePoly_9 = bigint_nondet_quot!(ctx, x1792, x5, 9);
    let x1794: BytePoly_4 = bigint_nondet_rem!(ctx, x1792, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1793, x5, 13), x1794, 13),
            x1792,
            13
        ),
        73156,
        4,
    )?;
    let x1795: BytePoly_8 = bigint_mul!(x1794, x1749, 8);
    let x1796: BytePoly_9 = bigint_nondet_quot!(ctx, x1795, x5, 9);
    let x1797: BytePoly_4 = bigint_nondet_rem!(ctx, x1795, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1796, x5, 13), x1797, 13),
            x1795,
            13
        ),
        73156,
        4,
    )?;
    let x1798: BytePoly_4 = bigint_add!(bigint_sub!(x1755, x1797, 4), x5, 4);
    let x1799: BytePoly_4 = bigint_nondet_quot!(ctx, x1798, x5, 4);
    let x1800: BytePoly_4 = bigint_nondet_rem!(ctx, x1798, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1799, x5, 8), x1800, 8), x1798, 8),
        32515,
        2,
    )?;
    let x1801: BytePoly_8 = bigint_mul!(x1794, x1794, 8);
    let x1802: BytePoly_9 = bigint_nondet_quot!(ctx, x1801, x5, 9);
    let x1803: BytePoly_4 = bigint_nondet_rem!(ctx, x1801, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1802, x5, 13), x1803, 13),
            x1801,
            13
        ),
        73156,
        4,
    )?;
    let x1804: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1803, x1749, 4), x5, 4), x1749, 4),
        x5,
        4
    );
    let x1805: BytePoly_4 = bigint_nondet_quot!(ctx, x1804, x5, 4);
    let x1806: BytePoly_4 = bigint_nondet_rem!(ctx, x1804, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1805, x5, 8), x1806, 8), x1804, 8),
        32515,
        2,
    )?;
    let x1807: BytePoly_8 = bigint_mul!(x1794, x1806, 8);
    let x1808: BytePoly_9 = bigint_nondet_quot!(ctx, x1807, x5, 9);
    let x1809: BytePoly_4 = bigint_nondet_rem!(ctx, x1807, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1808, x5, 13), x1809, 13),
            x1807,
            13
        ),
        73156,
        4,
    )?;
    let x1810: BytePoly_4 = bigint_add!(bigint_sub!(x5, bigint_add!(x1809, x1800, 4), 4), x5, 4);
    let x1811: BytePoly_4 = bigint_nondet_quot!(ctx, x1810, x5, 4);
    let x1812: BytePoly_4 = bigint_nondet_rem!(ctx, x1810, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1811, x5, 8), x1812, 8), x1810, 8),
        32515,
        2,
    )?;
    let x1813: BytePoly_1 = bigint_nondet_rem!(ctx, x1757, x1, 1);
    let x1814: BytePoly_4 = bigint_nondet_quot!(ctx, x1757, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1814, x1, 5), x1813, 5), x1757, 5),
        32515,
        2,
    )?;
    let x1815: BytePoly_1 = bigint_sub!(x2, x1813, 1);
    eqz(ctx, &bigint_mul!(x1813, x1815, 2), 8131, 2)?;
    let x1816: BytePoly_4 = bigint_add!(bigint_sub!(x1812, x1778, 4), x5, 4);
    let x1817: BytePoly_4 = bigint_add!(bigint_sub!(x1806, x1776, 4), x5, 4);
    let x1818: BytePoly_4 = bigint_nondet_inv!(ctx, x1817, x5, 4);
    let x1819: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x1816, x1818, 8), x5, 4);
    let x1820: BytePoly_8 = bigint_add!(bigint_sub!(bigint_mul!(x1819, x1817, 8), x1816, 8), x5, 8);
    let x1821: BytePoly_9 = bigint_nondet_quot!(ctx, x1820, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x1820, bigint_mul!(x1821, x5, 13), 13),
        73156,
        4,
    )?;
    let x1822: BytePoly_8 = bigint_mul!(x1819, x1819, 8);
    let x1823: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1822, x1776, 8), x5, 8), x1806, 8),
        x5,
        8
    );
    let x1824: BytePoly_9 = bigint_nondet_quot!(ctx, x1823, x5, 9);
    let x1825: BytePoly_4 = bigint_nondet_rem!(ctx, x1823, x5, 4);
    let x1826: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x5,
                bigint_add!(
                    bigint_mul!(x1819, x1825, 8),
                    bigint_add!(bigint_sub!(x1778, bigint_mul!(x1819, x1776, 8), 8), x5, 8),
                    8
                ),
                8
            ),
            x5,
            8
        ),
        x5,
        8
    );
    let x1827: BytePoly_9 = bigint_nondet_quot!(ctx, x1826, x5, 9);
    let x1828: BytePoly_4 = bigint_nondet_rem!(ctx, x1826, x5, 4);
    let x1829: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1822, bigint_mul!(x1824, x5, 13), 13),
                        x1776,
                        13
                    ),
                    x1806,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x1825,
        13
    );
    eqz(ctx, &x1829, 73156, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1827, x5, 13), x1828, 13),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1819, bigint_sub!(x1776, x1825, 4), 8),
                        x1778,
                        8
                    ),
                    x5,
                    8
                ),
                x5,
                8
            ),
            13
        ),
        73156,
        4,
    )?;
    let x1830: BytePoly_5 = bigint_add!(
        bigint_mul!(x1825, x1813, 5),
        bigint_mul!(x1776, x1815, 5),
        5
    );
    let x1831: BytePoly_5 = bigint_add!(
        bigint_mul!(x1828, x1813, 5),
        bigint_mul!(x1778, x1815, 5),
        5
    );
    let x1832: BytePoly_6 = bigint_nondet_quot!(ctx, x1830, x5, 6);
    let x1833: BytePoly_4 = bigint_nondet_rem!(ctx, x1830, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1832, x5, 10), x1833, 10),
            x1830,
            10
        ),
        48771,
        4,
    )?;
    let x1834: BytePoly_6 = bigint_nondet_quot!(ctx, x1831, x5, 6);
    let x1835: BytePoly_4 = bigint_nondet_rem!(ctx, x1831, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1834, x5, 10), x1835, 10),
            x1831,
            10
        ),
        48771,
        4,
    )?;
    let x1836: BytePoly_8 = bigint_mul!(x1806, x1806, 8);
    let x1837: BytePoly_9 = bigint_nondet_quot!(ctx, x1836, x5, 9);
    let x1838: BytePoly_4 = bigint_nondet_rem!(ctx, x1836, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1837, x5, 13), x1838, 13),
            x1836,
            13
        ),
        73156,
        4,
    )?;
    let x1839: BytePoly_5 = bigint_add!(bigint_mul!(x1838, x0, 5), x4, 5);
    let x1840: BytePoly_6 = bigint_nondet_quot!(ctx, x1839, x5, 6);
    let x1841: BytePoly_4 = bigint_nondet_rem!(ctx, x1839, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1840, x5, 10), x1841, 10),
            x1839,
            10
        ),
        48771,
        4,
    )?;
    let x1842: BytePoly_4 = bigint_add!(x1812, x1812, 4);
    let x1843: BytePoly_4 = bigint_nondet_quot!(ctx, x1842, x5, 4);
    let x1844: BytePoly_4 = bigint_nondet_rem!(ctx, x1842, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1843, x5, 8), x1844, 8), x1842, 8),
        32515,
        2,
    )?;
    let x1845: BytePoly_4 = bigint_nondet_inv!(ctx, x1844, x5, 4);
    let x1846: BytePoly_8 = bigint_mul!(x1844, x1845, 8);
    let x1847: BytePoly_9 = bigint_nondet_quot!(ctx, x1846, x5, 9);
    let x1848: BytePoly_4 = bigint_nondet_rem!(ctx, x1846, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1847, x5, 13), x1848, 13),
            x1846,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1848, x2, 4), 34, 1)?;
    let x1849: BytePoly_8 = bigint_mul!(x1841, x1845, 8);
    let x1850: BytePoly_9 = bigint_nondet_quot!(ctx, x1849, x5, 9);
    let x1851: BytePoly_4 = bigint_nondet_rem!(ctx, x1849, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1850, x5, 13), x1851, 13),
            x1849,
            13
        ),
        73156,
        4,
    )?;
    let x1852: BytePoly_8 = bigint_mul!(x1851, x1806, 8);
    let x1853: BytePoly_9 = bigint_nondet_quot!(ctx, x1852, x5, 9);
    let x1854: BytePoly_4 = bigint_nondet_rem!(ctx, x1852, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1853, x5, 13), x1854, 13),
            x1852,
            13
        ),
        73156,
        4,
    )?;
    let x1855: BytePoly_4 = bigint_add!(bigint_sub!(x1812, x1854, 4), x5, 4);
    let x1856: BytePoly_4 = bigint_nondet_quot!(ctx, x1855, x5, 4);
    let x1857: BytePoly_4 = bigint_nondet_rem!(ctx, x1855, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1856, x5, 8), x1857, 8), x1855, 8),
        32515,
        2,
    )?;
    let x1858: BytePoly_8 = bigint_mul!(x1851, x1851, 8);
    let x1859: BytePoly_9 = bigint_nondet_quot!(ctx, x1858, x5, 9);
    let x1860: BytePoly_4 = bigint_nondet_rem!(ctx, x1858, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1859, x5, 13), x1860, 13),
            x1858,
            13
        ),
        73156,
        4,
    )?;
    let x1861: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1860, x1806, 4), x5, 4), x1806, 4),
        x5,
        4
    );
    let x1862: BytePoly_4 = bigint_nondet_quot!(ctx, x1861, x5, 4);
    let x1863: BytePoly_4 = bigint_nondet_rem!(ctx, x1861, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1862, x5, 8), x1863, 8), x1861, 8),
        32515,
        2,
    )?;
    let x1864: BytePoly_8 = bigint_mul!(x1851, x1863, 8);
    let x1865: BytePoly_9 = bigint_nondet_quot!(ctx, x1864, x5, 9);
    let x1866: BytePoly_4 = bigint_nondet_rem!(ctx, x1864, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1865, x5, 13), x1866, 13),
            x1864,
            13
        ),
        73156,
        4,
    )?;
    let x1867: BytePoly_4 = bigint_add!(bigint_sub!(x5, bigint_add!(x1866, x1857, 4), 4), x5, 4);
    let x1868: BytePoly_4 = bigint_nondet_quot!(ctx, x1867, x5, 4);
    let x1869: BytePoly_4 = bigint_nondet_rem!(ctx, x1867, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1868, x5, 8), x1869, 8), x1867, 8),
        32515,
        2,
    )?;
    let x1870: BytePoly_4 = bigint_sub!(x5, x16, 4);
    let x1871: BytePoly_4 = bigint_add!(bigint_sub!(x1870, x1835, 4), x5, 4);
    let x1872: BytePoly_4 = bigint_add!(bigint_sub!(x15, x1833, 4), x5, 4);
    let x1873: BytePoly_4 = bigint_nondet_inv!(ctx, x1872, x5, 4);
    let x1874: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x1871, x1873, 8), x5, 4);
    let x1875: BytePoly_8 = bigint_add!(bigint_sub!(bigint_mul!(x1874, x1872, 8), x1871, 8), x5, 8);
    let x1876: BytePoly_9 = bigint_nondet_quot!(ctx, x1875, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x1875, bigint_mul!(x1876, x5, 13), 13),
        73156,
        4,
    )?;
    let x1877: BytePoly_8 = bigint_mul!(x1874, x1874, 8);
    let x1878: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1877, x1833, 8), x5, 8), x15, 8),
        x5,
        8
    );
    let x1879: BytePoly_9 = bigint_nondet_quot!(ctx, x1878, x5, 9);
    let x1880: BytePoly_4 = bigint_nondet_rem!(ctx, x1878, x5, 4);
    let x1881: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x5,
                bigint_add!(
                    bigint_mul!(x1874, x1880, 8),
                    bigint_add!(bigint_sub!(x1835, bigint_mul!(x1874, x1833, 8), 8), x5, 8),
                    8
                ),
                8
            ),
            x5,
            8
        ),
        x5,
        8
    );
    let x1882: BytePoly_9 = bigint_nondet_quot!(ctx, x1881, x5, 9);
    let x1883: BytePoly_4 = bigint_nondet_rem!(ctx, x1881, x5, 4);
    let x1884: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1877, bigint_mul!(x1879, x5, 13), 13),
                        x1833,
                        13
                    ),
                    x15,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x1880,
        13
    );
    eqz(ctx, &x1884, 73156, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1882, x5, 13), x1883, 13),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1874, bigint_sub!(x1833, x1880, 4), 8),
                        x1835,
                        8
                    ),
                    x5,
                    8
                ),
                x5,
                8
            ),
            13
        ),
        73156,
        4,
    )?;
    let x1885: BytePoly_9 = bigint_nondet_quot!(ctx, x24, x5, 9);
    let x1886: BytePoly_4 = bigint_nondet_rem!(ctx, x24, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1885, x5, 13), x1886, 13), x24, 13),
        73156,
        4,
    )?;
    let x1887: BytePoly_8 = bigint_sub!(
        x23,
        bigint_add!(bigint_add!(bigint_mul!(x15, x1886, 8), x27, 8), x3, 8),
        8
    );
    let x1888: BytePoly_9 = bigint_nondet_quot!(ctx, x1887, x5, 9);
    let x1889: BytePoly_4 = bigint_nondet_rem!(ctx, x1887, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1888, x5, 13), x1889, 13),
            x1887,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &x1889, 34, 1)?;
    let x1890: BytePoly_1 = bigint_nondet_rem!(ctx, x40, x1, 1);
    let x1891: BytePoly_4 = bigint_nondet_quot!(ctx, x40, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1891, x1, 5), x1890, 5), x40, 5),
        32515,
        2,
    )?;
    let x1892: BytePoly_1 = bigint_sub!(x2, x1890, 1);
    eqz(ctx, &bigint_mul!(x1890, x1892, 2), 8131, 2)?;
    let x1893: BytePoly_4 = bigint_add!(bigint_sub!(x11, x16, 4), x5, 4);
    let x1894: BytePoly_4 = bigint_add!(bigint_sub!(x10, x15, 4), x5, 4);
    let x1895: BytePoly_4 = bigint_nondet_inv!(ctx, x1894, x5, 4);
    let x1896: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x1893, x1895, 8), x5, 4);
    let x1897: BytePoly_8 = bigint_add!(bigint_sub!(bigint_mul!(x1896, x1894, 8), x1893, 8), x5, 8);
    let x1898: BytePoly_9 = bigint_nondet_quot!(ctx, x1897, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x1897, bigint_mul!(x1898, x5, 13), 13),
        73156,
        4,
    )?;
    let x1899: BytePoly_8 = bigint_mul!(x1896, x1896, 8);
    let x1900: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1899, x15, 8), x5, 8), x10, 8),
        x5,
        8
    );
    let x1901: BytePoly_9 = bigint_nondet_quot!(ctx, x1900, x5, 9);
    let x1902: BytePoly_4 = bigint_nondet_rem!(ctx, x1900, x5, 4);
    let x1903: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x5,
                bigint_add!(
                    bigint_mul!(x1896, x1902, 8),
                    bigint_add!(bigint_sub!(x16, bigint_mul!(x1896, x15, 8), 8), x5, 8),
                    8
                ),
                8
            ),
            x5,
            8
        ),
        x5,
        8
    );
    let x1904: BytePoly_9 = bigint_nondet_quot!(ctx, x1903, x5, 9);
    let x1905: BytePoly_4 = bigint_nondet_rem!(ctx, x1903, x5, 4);
    let x1906: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x1899, bigint_mul!(x1901, x5, 13), 13), x15, 13),
                    x10,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x1902,
        13
    );
    eqz(ctx, &x1906, 73156, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1904, x5, 13), x1905, 13),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x1896, bigint_sub!(x15, x1902, 4), 8), x16, 8),
                    x5,
                    8
                ),
                x5,
                8
            ),
            13
        ),
        73156,
        4,
    )?;
    let x1907: BytePoly_5 =
        bigint_add!(bigint_mul!(x1902, x1890, 5), bigint_mul!(x15, x1892, 5), 5);
    let x1908: BytePoly_5 =
        bigint_add!(bigint_mul!(x1905, x1890, 5), bigint_mul!(x16, x1892, 5), 5);
    let x1909: BytePoly_6 = bigint_nondet_quot!(ctx, x1907, x5, 6);
    let x1910: BytePoly_4 = bigint_nondet_rem!(ctx, x1907, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1909, x5, 10), x1910, 10),
            x1907,
            10
        ),
        48771,
        4,
    )?;
    let x1911: BytePoly_6 = bigint_nondet_quot!(ctx, x1908, x5, 6);
    let x1912: BytePoly_4 = bigint_nondet_rem!(ctx, x1908, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1911, x5, 10), x1912, 10),
            x1908,
            10
        ),
        48771,
        4,
    )?;
    let x1913: BytePoly_9 = bigint_nondet_quot!(ctx, x17, x5, 9);
    let x1914: BytePoly_4 = bigint_nondet_rem!(ctx, x17, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1913, x5, 13), x1914, 13), x17, 13),
        73156,
        4,
    )?;
    let x1915: BytePoly_5 = bigint_add!(bigint_mul!(x1914, x0, 5), x4, 5);
    let x1916: BytePoly_6 = bigint_nondet_quot!(ctx, x1915, x5, 6);
    let x1917: BytePoly_4 = bigint_nondet_rem!(ctx, x1915, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1916, x5, 10), x1917, 10),
            x1915,
            10
        ),
        48771,
        4,
    )?;
    let x1918: BytePoly_4 = bigint_add!(x11, x11, 4);
    let x1919: BytePoly_4 = bigint_nondet_quot!(ctx, x1918, x5, 4);
    let x1920: BytePoly_4 = bigint_nondet_rem!(ctx, x1918, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1919, x5, 8), x1920, 8), x1918, 8),
        32515,
        2,
    )?;
    let x1921: BytePoly_4 = bigint_nondet_inv!(ctx, x1920, x5, 4);
    let x1922: BytePoly_8 = bigint_mul!(x1920, x1921, 8);
    let x1923: BytePoly_9 = bigint_nondet_quot!(ctx, x1922, x5, 9);
    let x1924: BytePoly_4 = bigint_nondet_rem!(ctx, x1922, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1923, x5, 13), x1924, 13),
            x1922,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1924, x2, 4), 34, 1)?;
    let x1925: BytePoly_8 = bigint_mul!(x1917, x1921, 8);
    let x1926: BytePoly_9 = bigint_nondet_quot!(ctx, x1925, x5, 9);
    let x1927: BytePoly_4 = bigint_nondet_rem!(ctx, x1925, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1926, x5, 13), x1927, 13),
            x1925,
            13
        ),
        73156,
        4,
    )?;
    let x1928: BytePoly_8 = bigint_mul!(x1927, x10, 8);
    let x1929: BytePoly_9 = bigint_nondet_quot!(ctx, x1928, x5, 9);
    let x1930: BytePoly_4 = bigint_nondet_rem!(ctx, x1928, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1929, x5, 13), x1930, 13),
            x1928,
            13
        ),
        73156,
        4,
    )?;
    let x1931: BytePoly_4 = bigint_add!(bigint_sub!(x11, x1930, 4), x5, 4);
    let x1932: BytePoly_4 = bigint_nondet_quot!(ctx, x1931, x5, 4);
    let x1933: BytePoly_4 = bigint_nondet_rem!(ctx, x1931, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1932, x5, 8), x1933, 8), x1931, 8),
        32515,
        2,
    )?;
    let x1934: BytePoly_8 = bigint_mul!(x1927, x1927, 8);
    let x1935: BytePoly_9 = bigint_nondet_quot!(ctx, x1934, x5, 9);
    let x1936: BytePoly_4 = bigint_nondet_rem!(ctx, x1934, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1935, x5, 13), x1936, 13),
            x1934,
            13
        ),
        73156,
        4,
    )?;
    let x1937: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1936, x10, 4), x5, 4), x10, 4),
        x5,
        4
    );
    let x1938: BytePoly_4 = bigint_nondet_quot!(ctx, x1937, x5, 4);
    let x1939: BytePoly_4 = bigint_nondet_rem!(ctx, x1937, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1938, x5, 8), x1939, 8), x1937, 8),
        32515,
        2,
    )?;
    let x1940: BytePoly_8 = bigint_mul!(x1927, x1939, 8);
    let x1941: BytePoly_9 = bigint_nondet_quot!(ctx, x1940, x5, 9);
    let x1942: BytePoly_4 = bigint_nondet_rem!(ctx, x1940, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1941, x5, 13), x1942, 13),
            x1940,
            13
        ),
        73156,
        4,
    )?;
    let x1943: BytePoly_4 = bigint_add!(bigint_sub!(x5, bigint_add!(x1942, x1933, 4), 4), x5, 4);
    let x1944: BytePoly_4 = bigint_nondet_quot!(ctx, x1943, x5, 4);
    let x1945: BytePoly_4 = bigint_nondet_rem!(ctx, x1943, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1944, x5, 8), x1945, 8), x1943, 8),
        32515,
        2,
    )?;
    let x1946: BytePoly_1 = bigint_nondet_rem!(ctx, x1891, x1, 1);
    let x1947: BytePoly_4 = bigint_nondet_quot!(ctx, x1891, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1947, x1, 5), x1946, 5), x1891, 5),
        32515,
        2,
    )?;
    let x1948: BytePoly_1 = bigint_sub!(x2, x1946, 1);
    eqz(ctx, &bigint_mul!(x1946, x1948, 2), 8131, 2)?;
    let x1949: BytePoly_4 = bigint_add!(bigint_sub!(x1945, x1912, 4), x5, 4);
    let x1950: BytePoly_4 = bigint_add!(bigint_sub!(x1939, x1910, 4), x5, 4);
    let x1951: BytePoly_4 = bigint_nondet_inv!(ctx, x1950, x5, 4);
    let x1952: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x1949, x1951, 8), x5, 4);
    let x1953: BytePoly_8 = bigint_add!(bigint_sub!(bigint_mul!(x1952, x1950, 8), x1949, 8), x5, 8);
    let x1954: BytePoly_9 = bigint_nondet_quot!(ctx, x1953, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x1953, bigint_mul!(x1954, x5, 13), 13),
        73156,
        4,
    )?;
    let x1955: BytePoly_8 = bigint_mul!(x1952, x1952, 8);
    let x1956: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1955, x1910, 8), x5, 8), x1939, 8),
        x5,
        8
    );
    let x1957: BytePoly_9 = bigint_nondet_quot!(ctx, x1956, x5, 9);
    let x1958: BytePoly_4 = bigint_nondet_rem!(ctx, x1956, x5, 4);
    let x1959: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x5,
                bigint_add!(
                    bigint_mul!(x1952, x1958, 8),
                    bigint_add!(bigint_sub!(x1912, bigint_mul!(x1952, x1910, 8), 8), x5, 8),
                    8
                ),
                8
            ),
            x5,
            8
        ),
        x5,
        8
    );
    let x1960: BytePoly_9 = bigint_nondet_quot!(ctx, x1959, x5, 9);
    let x1961: BytePoly_4 = bigint_nondet_rem!(ctx, x1959, x5, 4);
    let x1962: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1955, bigint_mul!(x1957, x5, 13), 13),
                        x1910,
                        13
                    ),
                    x1939,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x1958,
        13
    );
    eqz(ctx, &x1962, 73156, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1960, x5, 13), x1961, 13),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1952, bigint_sub!(x1910, x1958, 4), 8),
                        x1912,
                        8
                    ),
                    x5,
                    8
                ),
                x5,
                8
            ),
            13
        ),
        73156,
        4,
    )?;
    let x1963: BytePoly_5 = bigint_add!(
        bigint_mul!(x1958, x1946, 5),
        bigint_mul!(x1910, x1948, 5),
        5
    );
    let x1964: BytePoly_5 = bigint_add!(
        bigint_mul!(x1961, x1946, 5),
        bigint_mul!(x1912, x1948, 5),
        5
    );
    let x1965: BytePoly_6 = bigint_nondet_quot!(ctx, x1963, x5, 6);
    let x1966: BytePoly_4 = bigint_nondet_rem!(ctx, x1963, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1965, x5, 10), x1966, 10),
            x1963,
            10
        ),
        48771,
        4,
    )?;
    let x1967: BytePoly_6 = bigint_nondet_quot!(ctx, x1964, x5, 6);
    let x1968: BytePoly_4 = bigint_nondet_rem!(ctx, x1964, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1967, x5, 10), x1968, 10),
            x1964,
            10
        ),
        48771,
        4,
    )?;
    let x1969: BytePoly_8 = bigint_mul!(x1939, x1939, 8);
    let x1970: BytePoly_9 = bigint_nondet_quot!(ctx, x1969, x5, 9);
    let x1971: BytePoly_4 = bigint_nondet_rem!(ctx, x1969, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1970, x5, 13), x1971, 13),
            x1969,
            13
        ),
        73156,
        4,
    )?;
    let x1972: BytePoly_5 = bigint_add!(bigint_mul!(x1971, x0, 5), x4, 5);
    let x1973: BytePoly_6 = bigint_nondet_quot!(ctx, x1972, x5, 6);
    let x1974: BytePoly_4 = bigint_nondet_rem!(ctx, x1972, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1973, x5, 10), x1974, 10),
            x1972,
            10
        ),
        48771,
        4,
    )?;
    let x1975: BytePoly_4 = bigint_add!(x1945, x1945, 4);
    let x1976: BytePoly_4 = bigint_nondet_quot!(ctx, x1975, x5, 4);
    let x1977: BytePoly_4 = bigint_nondet_rem!(ctx, x1975, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1976, x5, 8), x1977, 8), x1975, 8),
        32515,
        2,
    )?;
    let x1978: BytePoly_4 = bigint_nondet_inv!(ctx, x1977, x5, 4);
    let x1979: BytePoly_8 = bigint_mul!(x1977, x1978, 8);
    let x1980: BytePoly_9 = bigint_nondet_quot!(ctx, x1979, x5, 9);
    let x1981: BytePoly_4 = bigint_nondet_rem!(ctx, x1979, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1980, x5, 13), x1981, 13),
            x1979,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1981, x2, 4), 34, 1)?;
    let x1982: BytePoly_8 = bigint_mul!(x1974, x1978, 8);
    let x1983: BytePoly_9 = bigint_nondet_quot!(ctx, x1982, x5, 9);
    let x1984: BytePoly_4 = bigint_nondet_rem!(ctx, x1982, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1983, x5, 13), x1984, 13),
            x1982,
            13
        ),
        73156,
        4,
    )?;
    let x1985: BytePoly_8 = bigint_mul!(x1984, x1939, 8);
    let x1986: BytePoly_9 = bigint_nondet_quot!(ctx, x1985, x5, 9);
    let x1987: BytePoly_4 = bigint_nondet_rem!(ctx, x1985, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1986, x5, 13), x1987, 13),
            x1985,
            13
        ),
        73156,
        4,
    )?;
    let x1988: BytePoly_4 = bigint_add!(bigint_sub!(x1945, x1987, 4), x5, 4);
    let x1989: BytePoly_4 = bigint_nondet_quot!(ctx, x1988, x5, 4);
    let x1990: BytePoly_4 = bigint_nondet_rem!(ctx, x1988, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1989, x5, 8), x1990, 8), x1988, 8),
        32515,
        2,
    )?;
    let x1991: BytePoly_8 = bigint_mul!(x1984, x1984, 8);
    let x1992: BytePoly_9 = bigint_nondet_quot!(ctx, x1991, x5, 9);
    let x1993: BytePoly_4 = bigint_nondet_rem!(ctx, x1991, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1992, x5, 13), x1993, 13),
            x1991,
            13
        ),
        73156,
        4,
    )?;
    let x1994: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1993, x1939, 4), x5, 4), x1939, 4),
        x5,
        4
    );
    let x1995: BytePoly_4 = bigint_nondet_quot!(ctx, x1994, x5, 4);
    let x1996: BytePoly_4 = bigint_nondet_rem!(ctx, x1994, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1995, x5, 8), x1996, 8), x1994, 8),
        32515,
        2,
    )?;
    let x1997: BytePoly_8 = bigint_mul!(x1984, x1996, 8);
    let x1998: BytePoly_9 = bigint_nondet_quot!(ctx, x1997, x5, 9);
    let x1999: BytePoly_4 = bigint_nondet_rem!(ctx, x1997, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1998, x5, 13), x1999, 13),
            x1997,
            13
        ),
        73156,
        4,
    )?;
    let x2000: BytePoly_4 = bigint_add!(bigint_sub!(x5, bigint_add!(x1999, x1990, 4), 4), x5, 4);
    let x2001: BytePoly_4 = bigint_nondet_quot!(ctx, x2000, x5, 4);
    let x2002: BytePoly_4 = bigint_nondet_rem!(ctx, x2000, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2001, x5, 8), x2002, 8), x2000, 8),
        32515,
        2,
    )?;
    let x2003: BytePoly_1 = bigint_nondet_rem!(ctx, x1947, x1, 1);
    let x2004: BytePoly_4 = bigint_nondet_quot!(ctx, x1947, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2004, x1, 5), x2003, 5), x1947, 5),
        32515,
        2,
    )?;
    let x2005: BytePoly_1 = bigint_sub!(x2, x2003, 1);
    eqz(ctx, &bigint_mul!(x2003, x2005, 2), 8131, 2)?;
    let x2006: BytePoly_4 = bigint_add!(bigint_sub!(x2002, x1968, 4), x5, 4);
    let x2007: BytePoly_4 = bigint_add!(bigint_sub!(x1996, x1966, 4), x5, 4);
    let x2008: BytePoly_4 = bigint_nondet_inv!(ctx, x2007, x5, 4);
    let x2009: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x2006, x2008, 8), x5, 4);
    let x2010: BytePoly_8 = bigint_add!(bigint_sub!(bigint_mul!(x2009, x2007, 8), x2006, 8), x5, 8);
    let x2011: BytePoly_9 = bigint_nondet_quot!(ctx, x2010, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x2010, bigint_mul!(x2011, x5, 13), 13),
        73156,
        4,
    )?;
    let x2012: BytePoly_8 = bigint_mul!(x2009, x2009, 8);
    let x2013: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2012, x1966, 8), x5, 8), x1996, 8),
        x5,
        8
    );
    let x2014: BytePoly_9 = bigint_nondet_quot!(ctx, x2013, x5, 9);
    let x2015: BytePoly_4 = bigint_nondet_rem!(ctx, x2013, x5, 4);
    let x2016: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x5,
                bigint_add!(
                    bigint_mul!(x2009, x2015, 8),
                    bigint_add!(bigint_sub!(x1968, bigint_mul!(x2009, x1966, 8), 8), x5, 8),
                    8
                ),
                8
            ),
            x5,
            8
        ),
        x5,
        8
    );
    let x2017: BytePoly_9 = bigint_nondet_quot!(ctx, x2016, x5, 9);
    let x2018: BytePoly_4 = bigint_nondet_rem!(ctx, x2016, x5, 4);
    let x2019: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2012, bigint_mul!(x2014, x5, 13), 13),
                        x1966,
                        13
                    ),
                    x1996,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x2015,
        13
    );
    eqz(ctx, &x2019, 73156, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2017, x5, 13), x2018, 13),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2009, bigint_sub!(x1966, x2015, 4), 8),
                        x1968,
                        8
                    ),
                    x5,
                    8
                ),
                x5,
                8
            ),
            13
        ),
        73156,
        4,
    )?;
    let x2020: BytePoly_5 = bigint_add!(
        bigint_mul!(x2015, x2003, 5),
        bigint_mul!(x1966, x2005, 5),
        5
    );
    let x2021: BytePoly_5 = bigint_add!(
        bigint_mul!(x2018, x2003, 5),
        bigint_mul!(x1968, x2005, 5),
        5
    );
    let x2022: BytePoly_6 = bigint_nondet_quot!(ctx, x2020, x5, 6);
    let x2023: BytePoly_4 = bigint_nondet_rem!(ctx, x2020, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2022, x5, 10), x2023, 10),
            x2020,
            10
        ),
        48771,
        4,
    )?;
    let x2024: BytePoly_6 = bigint_nondet_quot!(ctx, x2021, x5, 6);
    let x2025: BytePoly_4 = bigint_nondet_rem!(ctx, x2021, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2024, x5, 10), x2025, 10),
            x2021,
            10
        ),
        48771,
        4,
    )?;
    let x2026: BytePoly_8 = bigint_mul!(x1996, x1996, 8);
    let x2027: BytePoly_9 = bigint_nondet_quot!(ctx, x2026, x5, 9);
    let x2028: BytePoly_4 = bigint_nondet_rem!(ctx, x2026, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2027, x5, 13), x2028, 13),
            x2026,
            13
        ),
        73156,
        4,
    )?;
    let x2029: BytePoly_5 = bigint_add!(bigint_mul!(x2028, x0, 5), x4, 5);
    let x2030: BytePoly_6 = bigint_nondet_quot!(ctx, x2029, x5, 6);
    let x2031: BytePoly_4 = bigint_nondet_rem!(ctx, x2029, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2030, x5, 10), x2031, 10),
            x2029,
            10
        ),
        48771,
        4,
    )?;
    let x2032: BytePoly_4 = bigint_add!(x2002, x2002, 4);
    let x2033: BytePoly_4 = bigint_nondet_quot!(ctx, x2032, x5, 4);
    let x2034: BytePoly_4 = bigint_nondet_rem!(ctx, x2032, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2033, x5, 8), x2034, 8), x2032, 8),
        32515,
        2,
    )?;
    let x2035: BytePoly_4 = bigint_nondet_inv!(ctx, x2034, x5, 4);
    let x2036: BytePoly_8 = bigint_mul!(x2034, x2035, 8);
    let x2037: BytePoly_9 = bigint_nondet_quot!(ctx, x2036, x5, 9);
    let x2038: BytePoly_4 = bigint_nondet_rem!(ctx, x2036, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2037, x5, 13), x2038, 13),
            x2036,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x2038, x2, 4), 34, 1)?;
    let x2039: BytePoly_8 = bigint_mul!(x2031, x2035, 8);
    let x2040: BytePoly_9 = bigint_nondet_quot!(ctx, x2039, x5, 9);
    let x2041: BytePoly_4 = bigint_nondet_rem!(ctx, x2039, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2040, x5, 13), x2041, 13),
            x2039,
            13
        ),
        73156,
        4,
    )?;
    let x2042: BytePoly_8 = bigint_mul!(x2041, x1996, 8);
    let x2043: BytePoly_9 = bigint_nondet_quot!(ctx, x2042, x5, 9);
    let x2044: BytePoly_4 = bigint_nondet_rem!(ctx, x2042, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2043, x5, 13), x2044, 13),
            x2042,
            13
        ),
        73156,
        4,
    )?;
    let x2045: BytePoly_4 = bigint_add!(bigint_sub!(x2002, x2044, 4), x5, 4);
    let x2046: BytePoly_4 = bigint_nondet_quot!(ctx, x2045, x5, 4);
    let x2047: BytePoly_4 = bigint_nondet_rem!(ctx, x2045, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2046, x5, 8), x2047, 8), x2045, 8),
        32515,
        2,
    )?;
    let x2048: BytePoly_8 = bigint_mul!(x2041, x2041, 8);
    let x2049: BytePoly_9 = bigint_nondet_quot!(ctx, x2048, x5, 9);
    let x2050: BytePoly_4 = bigint_nondet_rem!(ctx, x2048, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2049, x5, 13), x2050, 13),
            x2048,
            13
        ),
        73156,
        4,
    )?;
    let x2051: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2050, x1996, 4), x5, 4), x1996, 4),
        x5,
        4
    );
    let x2052: BytePoly_4 = bigint_nondet_quot!(ctx, x2051, x5, 4);
    let x2053: BytePoly_4 = bigint_nondet_rem!(ctx, x2051, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2052, x5, 8), x2053, 8), x2051, 8),
        32515,
        2,
    )?;
    let x2054: BytePoly_8 = bigint_mul!(x2041, x2053, 8);
    let x2055: BytePoly_9 = bigint_nondet_quot!(ctx, x2054, x5, 9);
    let x2056: BytePoly_4 = bigint_nondet_rem!(ctx, x2054, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2055, x5, 13), x2056, 13),
            x2054,
            13
        ),
        73156,
        4,
    )?;
    let x2057: BytePoly_4 = bigint_add!(bigint_sub!(x5, bigint_add!(x2056, x2047, 4), 4), x5, 4);
    let x2058: BytePoly_4 = bigint_nondet_quot!(ctx, x2057, x5, 4);
    let x2059: BytePoly_4 = bigint_nondet_rem!(ctx, x2057, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2058, x5, 8), x2059, 8), x2057, 8),
        32515,
        2,
    )?;
    let x2060: BytePoly_1 = bigint_nondet_rem!(ctx, x2004, x1, 1);
    let x2061: BytePoly_4 = bigint_nondet_quot!(ctx, x2004, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2061, x1, 5), x2060, 5), x2004, 5),
        32515,
        2,
    )?;
    let x2062: BytePoly_1 = bigint_sub!(x2, x2060, 1);
    eqz(ctx, &bigint_mul!(x2060, x2062, 2), 8131, 2)?;
    let x2063: BytePoly_4 = bigint_add!(bigint_sub!(x2059, x2025, 4), x5, 4);
    let x2064: BytePoly_4 = bigint_add!(bigint_sub!(x2053, x2023, 4), x5, 4);
    let x2065: BytePoly_4 = bigint_nondet_inv!(ctx, x2064, x5, 4);
    let x2066: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x2063, x2065, 8), x5, 4);
    let x2067: BytePoly_8 = bigint_add!(bigint_sub!(bigint_mul!(x2066, x2064, 8), x2063, 8), x5, 8);
    let x2068: BytePoly_9 = bigint_nondet_quot!(ctx, x2067, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x2067, bigint_mul!(x2068, x5, 13), 13),
        73156,
        4,
    )?;
    let x2069: BytePoly_8 = bigint_mul!(x2066, x2066, 8);
    let x2070: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2069, x2023, 8), x5, 8), x2053, 8),
        x5,
        8
    );
    let x2071: BytePoly_9 = bigint_nondet_quot!(ctx, x2070, x5, 9);
    let x2072: BytePoly_4 = bigint_nondet_rem!(ctx, x2070, x5, 4);
    let x2073: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x5,
                bigint_add!(
                    bigint_mul!(x2066, x2072, 8),
                    bigint_add!(bigint_sub!(x2025, bigint_mul!(x2066, x2023, 8), 8), x5, 8),
                    8
                ),
                8
            ),
            x5,
            8
        ),
        x5,
        8
    );
    let x2074: BytePoly_9 = bigint_nondet_quot!(ctx, x2073, x5, 9);
    let x2075: BytePoly_4 = bigint_nondet_rem!(ctx, x2073, x5, 4);
    let x2076: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2069, bigint_mul!(x2071, x5, 13), 13),
                        x2023,
                        13
                    ),
                    x2053,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x2072,
        13
    );
    eqz(ctx, &x2076, 73156, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2074, x5, 13), x2075, 13),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2066, bigint_sub!(x2023, x2072, 4), 8),
                        x2025,
                        8
                    ),
                    x5,
                    8
                ),
                x5,
                8
            ),
            13
        ),
        73156,
        4,
    )?;
    let x2077: BytePoly_5 = bigint_add!(
        bigint_mul!(x2072, x2060, 5),
        bigint_mul!(x2023, x2062, 5),
        5
    );
    let x2078: BytePoly_5 = bigint_add!(
        bigint_mul!(x2075, x2060, 5),
        bigint_mul!(x2025, x2062, 5),
        5
    );
    let x2079: BytePoly_6 = bigint_nondet_quot!(ctx, x2077, x5, 6);
    let x2080: BytePoly_4 = bigint_nondet_rem!(ctx, x2077, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2079, x5, 10), x2080, 10),
            x2077,
            10
        ),
        48771,
        4,
    )?;
    let x2081: BytePoly_6 = bigint_nondet_quot!(ctx, x2078, x5, 6);
    let x2082: BytePoly_4 = bigint_nondet_rem!(ctx, x2078, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2081, x5, 10), x2082, 10),
            x2078,
            10
        ),
        48771,
        4,
    )?;
    let x2083: BytePoly_8 = bigint_mul!(x2053, x2053, 8);
    let x2084: BytePoly_9 = bigint_nondet_quot!(ctx, x2083, x5, 9);
    let x2085: BytePoly_4 = bigint_nondet_rem!(ctx, x2083, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2084, x5, 13), x2085, 13),
            x2083,
            13
        ),
        73156,
        4,
    )?;
    let x2086: BytePoly_5 = bigint_add!(bigint_mul!(x2085, x0, 5), x4, 5);
    let x2087: BytePoly_6 = bigint_nondet_quot!(ctx, x2086, x5, 6);
    let x2088: BytePoly_4 = bigint_nondet_rem!(ctx, x2086, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2087, x5, 10), x2088, 10),
            x2086,
            10
        ),
        48771,
        4,
    )?;
    let x2089: BytePoly_4 = bigint_add!(x2059, x2059, 4);
    let x2090: BytePoly_4 = bigint_nondet_quot!(ctx, x2089, x5, 4);
    let x2091: BytePoly_4 = bigint_nondet_rem!(ctx, x2089, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2090, x5, 8), x2091, 8), x2089, 8),
        32515,
        2,
    )?;
    let x2092: BytePoly_4 = bigint_nondet_inv!(ctx, x2091, x5, 4);
    let x2093: BytePoly_8 = bigint_mul!(x2091, x2092, 8);
    let x2094: BytePoly_9 = bigint_nondet_quot!(ctx, x2093, x5, 9);
    let x2095: BytePoly_4 = bigint_nondet_rem!(ctx, x2093, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2094, x5, 13), x2095, 13),
            x2093,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x2095, x2, 4), 34, 1)?;
    let x2096: BytePoly_8 = bigint_mul!(x2088, x2092, 8);
    let x2097: BytePoly_9 = bigint_nondet_quot!(ctx, x2096, x5, 9);
    let x2098: BytePoly_4 = bigint_nondet_rem!(ctx, x2096, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2097, x5, 13), x2098, 13),
            x2096,
            13
        ),
        73156,
        4,
    )?;
    let x2099: BytePoly_8 = bigint_mul!(x2098, x2053, 8);
    let x2100: BytePoly_9 = bigint_nondet_quot!(ctx, x2099, x5, 9);
    let x2101: BytePoly_4 = bigint_nondet_rem!(ctx, x2099, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2100, x5, 13), x2101, 13),
            x2099,
            13
        ),
        73156,
        4,
    )?;
    let x2102: BytePoly_4 = bigint_add!(bigint_sub!(x2059, x2101, 4), x5, 4);
    let x2103: BytePoly_4 = bigint_nondet_quot!(ctx, x2102, x5, 4);
    let x2104: BytePoly_4 = bigint_nondet_rem!(ctx, x2102, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2103, x5, 8), x2104, 8), x2102, 8),
        32515,
        2,
    )?;
    let x2105: BytePoly_8 = bigint_mul!(x2098, x2098, 8);
    let x2106: BytePoly_9 = bigint_nondet_quot!(ctx, x2105, x5, 9);
    let x2107: BytePoly_4 = bigint_nondet_rem!(ctx, x2105, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2106, x5, 13), x2107, 13),
            x2105,
            13
        ),
        73156,
        4,
    )?;
    let x2108: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2107, x2053, 4), x5, 4), x2053, 4),
        x5,
        4
    );
    let x2109: BytePoly_4 = bigint_nondet_quot!(ctx, x2108, x5, 4);
    let x2110: BytePoly_4 = bigint_nondet_rem!(ctx, x2108, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2109, x5, 8), x2110, 8), x2108, 8),
        32515,
        2,
    )?;
    let x2111: BytePoly_8 = bigint_mul!(x2098, x2110, 8);
    let x2112: BytePoly_9 = bigint_nondet_quot!(ctx, x2111, x5, 9);
    let x2113: BytePoly_4 = bigint_nondet_rem!(ctx, x2111, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2112, x5, 13), x2113, 13),
            x2111,
            13
        ),
        73156,
        4,
    )?;
    let x2114: BytePoly_4 = bigint_add!(bigint_sub!(x5, bigint_add!(x2113, x2104, 4), 4), x5, 4);
    let x2115: BytePoly_4 = bigint_nondet_quot!(ctx, x2114, x5, 4);
    let x2116: BytePoly_4 = bigint_nondet_rem!(ctx, x2114, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2115, x5, 8), x2116, 8), x2114, 8),
        32515,
        2,
    )?;
    let x2117: BytePoly_1 = bigint_nondet_rem!(ctx, x2061, x1, 1);
    let x2118: BytePoly_4 = bigint_nondet_quot!(ctx, x2061, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2118, x1, 5), x2117, 5), x2061, 5),
        32515,
        2,
    )?;
    let x2119: BytePoly_1 = bigint_sub!(x2, x2117, 1);
    eqz(ctx, &bigint_mul!(x2117, x2119, 2), 8131, 2)?;
    let x2120: BytePoly_4 = bigint_add!(bigint_sub!(x2116, x2082, 4), x5, 4);
    let x2121: BytePoly_4 = bigint_add!(bigint_sub!(x2110, x2080, 4), x5, 4);
    let x2122: BytePoly_4 = bigint_nondet_inv!(ctx, x2121, x5, 4);
    let x2123: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x2120, x2122, 8), x5, 4);
    let x2124: BytePoly_8 = bigint_add!(bigint_sub!(bigint_mul!(x2123, x2121, 8), x2120, 8), x5, 8);
    let x2125: BytePoly_9 = bigint_nondet_quot!(ctx, x2124, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x2124, bigint_mul!(x2125, x5, 13), 13),
        73156,
        4,
    )?;
    let x2126: BytePoly_8 = bigint_mul!(x2123, x2123, 8);
    let x2127: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2126, x2080, 8), x5, 8), x2110, 8),
        x5,
        8
    );
    let x2128: BytePoly_9 = bigint_nondet_quot!(ctx, x2127, x5, 9);
    let x2129: BytePoly_4 = bigint_nondet_rem!(ctx, x2127, x5, 4);
    let x2130: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x5,
                bigint_add!(
                    bigint_mul!(x2123, x2129, 8),
                    bigint_add!(bigint_sub!(x2082, bigint_mul!(x2123, x2080, 8), 8), x5, 8),
                    8
                ),
                8
            ),
            x5,
            8
        ),
        x5,
        8
    );
    let x2131: BytePoly_9 = bigint_nondet_quot!(ctx, x2130, x5, 9);
    let x2132: BytePoly_4 = bigint_nondet_rem!(ctx, x2130, x5, 4);
    let x2133: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2126, bigint_mul!(x2128, x5, 13), 13),
                        x2080,
                        13
                    ),
                    x2110,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x2129,
        13
    );
    eqz(ctx, &x2133, 73156, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2131, x5, 13), x2132, 13),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2123, bigint_sub!(x2080, x2129, 4), 8),
                        x2082,
                        8
                    ),
                    x5,
                    8
                ),
                x5,
                8
            ),
            13
        ),
        73156,
        4,
    )?;
    let x2134: BytePoly_5 = bigint_add!(
        bigint_mul!(x2129, x2117, 5),
        bigint_mul!(x2080, x2119, 5),
        5
    );
    let x2135: BytePoly_5 = bigint_add!(
        bigint_mul!(x2132, x2117, 5),
        bigint_mul!(x2082, x2119, 5),
        5
    );
    let x2136: BytePoly_6 = bigint_nondet_quot!(ctx, x2134, x5, 6);
    let x2137: BytePoly_4 = bigint_nondet_rem!(ctx, x2134, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2136, x5, 10), x2137, 10),
            x2134,
            10
        ),
        48771,
        4,
    )?;
    let x2138: BytePoly_6 = bigint_nondet_quot!(ctx, x2135, x5, 6);
    let x2139: BytePoly_4 = bigint_nondet_rem!(ctx, x2135, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2138, x5, 10), x2139, 10),
            x2135,
            10
        ),
        48771,
        4,
    )?;
    let x2140: BytePoly_8 = bigint_mul!(x2110, x2110, 8);
    let x2141: BytePoly_9 = bigint_nondet_quot!(ctx, x2140, x5, 9);
    let x2142: BytePoly_4 = bigint_nondet_rem!(ctx, x2140, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2141, x5, 13), x2142, 13),
            x2140,
            13
        ),
        73156,
        4,
    )?;
    let x2143: BytePoly_5 = bigint_add!(bigint_mul!(x2142, x0, 5), x4, 5);
    let x2144: BytePoly_6 = bigint_nondet_quot!(ctx, x2143, x5, 6);
    let x2145: BytePoly_4 = bigint_nondet_rem!(ctx, x2143, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2144, x5, 10), x2145, 10),
            x2143,
            10
        ),
        48771,
        4,
    )?;
    let x2146: BytePoly_4 = bigint_add!(x2116, x2116, 4);
    let x2147: BytePoly_4 = bigint_nondet_quot!(ctx, x2146, x5, 4);
    let x2148: BytePoly_4 = bigint_nondet_rem!(ctx, x2146, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2147, x5, 8), x2148, 8), x2146, 8),
        32515,
        2,
    )?;
    let x2149: BytePoly_4 = bigint_nondet_inv!(ctx, x2148, x5, 4);
    let x2150: BytePoly_8 = bigint_mul!(x2148, x2149, 8);
    let x2151: BytePoly_9 = bigint_nondet_quot!(ctx, x2150, x5, 9);
    let x2152: BytePoly_4 = bigint_nondet_rem!(ctx, x2150, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2151, x5, 13), x2152, 13),
            x2150,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x2152, x2, 4), 34, 1)?;
    let x2153: BytePoly_8 = bigint_mul!(x2145, x2149, 8);
    let x2154: BytePoly_9 = bigint_nondet_quot!(ctx, x2153, x5, 9);
    let x2155: BytePoly_4 = bigint_nondet_rem!(ctx, x2153, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2154, x5, 13), x2155, 13),
            x2153,
            13
        ),
        73156,
        4,
    )?;
    let x2156: BytePoly_8 = bigint_mul!(x2155, x2110, 8);
    let x2157: BytePoly_9 = bigint_nondet_quot!(ctx, x2156, x5, 9);
    let x2158: BytePoly_4 = bigint_nondet_rem!(ctx, x2156, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2157, x5, 13), x2158, 13),
            x2156,
            13
        ),
        73156,
        4,
    )?;
    let x2159: BytePoly_4 = bigint_add!(bigint_sub!(x2116, x2158, 4), x5, 4);
    let x2160: BytePoly_4 = bigint_nondet_quot!(ctx, x2159, x5, 4);
    let x2161: BytePoly_4 = bigint_nondet_rem!(ctx, x2159, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2160, x5, 8), x2161, 8), x2159, 8),
        32515,
        2,
    )?;
    let x2162: BytePoly_8 = bigint_mul!(x2155, x2155, 8);
    let x2163: BytePoly_9 = bigint_nondet_quot!(ctx, x2162, x5, 9);
    let x2164: BytePoly_4 = bigint_nondet_rem!(ctx, x2162, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2163, x5, 13), x2164, 13),
            x2162,
            13
        ),
        73156,
        4,
    )?;
    let x2165: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2164, x2110, 4), x5, 4), x2110, 4),
        x5,
        4
    );
    let x2166: BytePoly_4 = bigint_nondet_quot!(ctx, x2165, x5, 4);
    let x2167: BytePoly_4 = bigint_nondet_rem!(ctx, x2165, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2166, x5, 8), x2167, 8), x2165, 8),
        32515,
        2,
    )?;
    let x2168: BytePoly_8 = bigint_mul!(x2155, x2167, 8);
    let x2169: BytePoly_9 = bigint_nondet_quot!(ctx, x2168, x5, 9);
    let x2170: BytePoly_4 = bigint_nondet_rem!(ctx, x2168, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2169, x5, 13), x2170, 13),
            x2168,
            13
        ),
        73156,
        4,
    )?;
    let x2171: BytePoly_4 = bigint_add!(bigint_sub!(x5, bigint_add!(x2170, x2161, 4), 4), x5, 4);
    let x2172: BytePoly_4 = bigint_nondet_quot!(ctx, x2171, x5, 4);
    let x2173: BytePoly_4 = bigint_nondet_rem!(ctx, x2171, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2172, x5, 8), x2173, 8), x2171, 8),
        32515,
        2,
    )?;
    let x2174: BytePoly_1 = bigint_nondet_rem!(ctx, x2118, x1, 1);
    let x2175: BytePoly_4 = bigint_nondet_quot!(ctx, x2118, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2175, x1, 5), x2174, 5), x2118, 5),
        32515,
        2,
    )?;
    let x2176: BytePoly_1 = bigint_sub!(x2, x2174, 1);
    eqz(ctx, &bigint_mul!(x2174, x2176, 2), 8131, 2)?;
    let x2177: BytePoly_4 = bigint_add!(bigint_sub!(x2173, x2139, 4), x5, 4);
    let x2178: BytePoly_4 = bigint_add!(bigint_sub!(x2167, x2137, 4), x5, 4);
    let x2179: BytePoly_4 = bigint_nondet_inv!(ctx, x2178, x5, 4);
    let x2180: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x2177, x2179, 8), x5, 4);
    let x2181: BytePoly_8 = bigint_add!(bigint_sub!(bigint_mul!(x2180, x2178, 8), x2177, 8), x5, 8);
    let x2182: BytePoly_9 = bigint_nondet_quot!(ctx, x2181, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x2181, bigint_mul!(x2182, x5, 13), 13),
        73156,
        4,
    )?;
    let x2183: BytePoly_8 = bigint_mul!(x2180, x2180, 8);
    let x2184: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2183, x2137, 8), x5, 8), x2167, 8),
        x5,
        8
    );
    let x2185: BytePoly_9 = bigint_nondet_quot!(ctx, x2184, x5, 9);
    let x2186: BytePoly_4 = bigint_nondet_rem!(ctx, x2184, x5, 4);
    let x2187: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x5,
                bigint_add!(
                    bigint_mul!(x2180, x2186, 8),
                    bigint_add!(bigint_sub!(x2139, bigint_mul!(x2180, x2137, 8), 8), x5, 8),
                    8
                ),
                8
            ),
            x5,
            8
        ),
        x5,
        8
    );
    let x2188: BytePoly_9 = bigint_nondet_quot!(ctx, x2187, x5, 9);
    let x2189: BytePoly_4 = bigint_nondet_rem!(ctx, x2187, x5, 4);
    let x2190: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2183, bigint_mul!(x2185, x5, 13), 13),
                        x2137,
                        13
                    ),
                    x2167,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x2186,
        13
    );
    eqz(ctx, &x2190, 73156, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2188, x5, 13), x2189, 13),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2180, bigint_sub!(x2137, x2186, 4), 8),
                        x2139,
                        8
                    ),
                    x5,
                    8
                ),
                x5,
                8
            ),
            13
        ),
        73156,
        4,
    )?;
    let x2191: BytePoly_5 = bigint_add!(
        bigint_mul!(x2186, x2174, 5),
        bigint_mul!(x2137, x2176, 5),
        5
    );
    let x2192: BytePoly_5 = bigint_add!(
        bigint_mul!(x2189, x2174, 5),
        bigint_mul!(x2139, x2176, 5),
        5
    );
    let x2193: BytePoly_6 = bigint_nondet_quot!(ctx, x2191, x5, 6);
    let x2194: BytePoly_4 = bigint_nondet_rem!(ctx, x2191, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2193, x5, 10), x2194, 10),
            x2191,
            10
        ),
        48771,
        4,
    )?;
    let x2195: BytePoly_6 = bigint_nondet_quot!(ctx, x2192, x5, 6);
    let x2196: BytePoly_4 = bigint_nondet_rem!(ctx, x2192, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2195, x5, 10), x2196, 10),
            x2192,
            10
        ),
        48771,
        4,
    )?;
    let x2197: BytePoly_8 = bigint_mul!(x2167, x2167, 8);
    let x2198: BytePoly_9 = bigint_nondet_quot!(ctx, x2197, x5, 9);
    let x2199: BytePoly_4 = bigint_nondet_rem!(ctx, x2197, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2198, x5, 13), x2199, 13),
            x2197,
            13
        ),
        73156,
        4,
    )?;
    let x2200: BytePoly_5 = bigint_add!(bigint_mul!(x2199, x0, 5), x4, 5);
    let x2201: BytePoly_6 = bigint_nondet_quot!(ctx, x2200, x5, 6);
    let x2202: BytePoly_4 = bigint_nondet_rem!(ctx, x2200, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2201, x5, 10), x2202, 10),
            x2200,
            10
        ),
        48771,
        4,
    )?;
    let x2203: BytePoly_4 = bigint_add!(x2173, x2173, 4);
    let x2204: BytePoly_4 = bigint_nondet_quot!(ctx, x2203, x5, 4);
    let x2205: BytePoly_4 = bigint_nondet_rem!(ctx, x2203, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2204, x5, 8), x2205, 8), x2203, 8),
        32515,
        2,
    )?;
    let x2206: BytePoly_4 = bigint_nondet_inv!(ctx, x2205, x5, 4);
    let x2207: BytePoly_8 = bigint_mul!(x2205, x2206, 8);
    let x2208: BytePoly_9 = bigint_nondet_quot!(ctx, x2207, x5, 9);
    let x2209: BytePoly_4 = bigint_nondet_rem!(ctx, x2207, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2208, x5, 13), x2209, 13),
            x2207,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x2209, x2, 4), 34, 1)?;
    let x2210: BytePoly_8 = bigint_mul!(x2202, x2206, 8);
    let x2211: BytePoly_9 = bigint_nondet_quot!(ctx, x2210, x5, 9);
    let x2212: BytePoly_4 = bigint_nondet_rem!(ctx, x2210, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2211, x5, 13), x2212, 13),
            x2210,
            13
        ),
        73156,
        4,
    )?;
    let x2213: BytePoly_8 = bigint_mul!(x2212, x2167, 8);
    let x2214: BytePoly_9 = bigint_nondet_quot!(ctx, x2213, x5, 9);
    let x2215: BytePoly_4 = bigint_nondet_rem!(ctx, x2213, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2214, x5, 13), x2215, 13),
            x2213,
            13
        ),
        73156,
        4,
    )?;
    let x2216: BytePoly_4 = bigint_add!(bigint_sub!(x2173, x2215, 4), x5, 4);
    let x2217: BytePoly_4 = bigint_nondet_quot!(ctx, x2216, x5, 4);
    let x2218: BytePoly_4 = bigint_nondet_rem!(ctx, x2216, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2217, x5, 8), x2218, 8), x2216, 8),
        32515,
        2,
    )?;
    let x2219: BytePoly_8 = bigint_mul!(x2212, x2212, 8);
    let x2220: BytePoly_9 = bigint_nondet_quot!(ctx, x2219, x5, 9);
    let x2221: BytePoly_4 = bigint_nondet_rem!(ctx, x2219, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2220, x5, 13), x2221, 13),
            x2219,
            13
        ),
        73156,
        4,
    )?;
    let x2222: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2221, x2167, 4), x5, 4), x2167, 4),
        x5,
        4
    );
    let x2223: BytePoly_4 = bigint_nondet_quot!(ctx, x2222, x5, 4);
    let x2224: BytePoly_4 = bigint_nondet_rem!(ctx, x2222, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2223, x5, 8), x2224, 8), x2222, 8),
        32515,
        2,
    )?;
    let x2225: BytePoly_8 = bigint_mul!(x2212, x2224, 8);
    let x2226: BytePoly_9 = bigint_nondet_quot!(ctx, x2225, x5, 9);
    let x2227: BytePoly_4 = bigint_nondet_rem!(ctx, x2225, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2226, x5, 13), x2227, 13),
            x2225,
            13
        ),
        73156,
        4,
    )?;
    let x2228: BytePoly_4 = bigint_add!(bigint_sub!(x5, bigint_add!(x2227, x2218, 4), 4), x5, 4);
    let x2229: BytePoly_4 = bigint_nondet_quot!(ctx, x2228, x5, 4);
    let x2230: BytePoly_4 = bigint_nondet_rem!(ctx, x2228, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2229, x5, 8), x2230, 8), x2228, 8),
        32515,
        2,
    )?;
    let x2231: BytePoly_1 = bigint_nondet_rem!(ctx, x2175, x1, 1);
    let x2232: BytePoly_4 = bigint_nondet_quot!(ctx, x2175, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2232, x1, 5), x2231, 5), x2175, 5),
        32515,
        2,
    )?;
    let x2233: BytePoly_1 = bigint_sub!(x2, x2231, 1);
    eqz(ctx, &bigint_mul!(x2231, x2233, 2), 8131, 2)?;
    let x2234: BytePoly_4 = bigint_add!(bigint_sub!(x2230, x2196, 4), x5, 4);
    let x2235: BytePoly_4 = bigint_add!(bigint_sub!(x2224, x2194, 4), x5, 4);
    let x2236: BytePoly_4 = bigint_nondet_inv!(ctx, x2235, x5, 4);
    let x2237: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x2234, x2236, 8), x5, 4);
    let x2238: BytePoly_8 = bigint_add!(bigint_sub!(bigint_mul!(x2237, x2235, 8), x2234, 8), x5, 8);
    let x2239: BytePoly_9 = bigint_nondet_quot!(ctx, x2238, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x2238, bigint_mul!(x2239, x5, 13), 13),
        73156,
        4,
    )?;
    let x2240: BytePoly_8 = bigint_mul!(x2237, x2237, 8);
    let x2241: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2240, x2194, 8), x5, 8), x2224, 8),
        x5,
        8
    );
    let x2242: BytePoly_9 = bigint_nondet_quot!(ctx, x2241, x5, 9);
    let x2243: BytePoly_4 = bigint_nondet_rem!(ctx, x2241, x5, 4);
    let x2244: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x5,
                bigint_add!(
                    bigint_mul!(x2237, x2243, 8),
                    bigint_add!(bigint_sub!(x2196, bigint_mul!(x2237, x2194, 8), 8), x5, 8),
                    8
                ),
                8
            ),
            x5,
            8
        ),
        x5,
        8
    );
    let x2245: BytePoly_9 = bigint_nondet_quot!(ctx, x2244, x5, 9);
    let x2246: BytePoly_4 = bigint_nondet_rem!(ctx, x2244, x5, 4);
    let x2247: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2240, bigint_mul!(x2242, x5, 13), 13),
                        x2194,
                        13
                    ),
                    x2224,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x2243,
        13
    );
    eqz(ctx, &x2247, 73156, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2245, x5, 13), x2246, 13),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2237, bigint_sub!(x2194, x2243, 4), 8),
                        x2196,
                        8
                    ),
                    x5,
                    8
                ),
                x5,
                8
            ),
            13
        ),
        73156,
        4,
    )?;
    let x2248: BytePoly_5 = bigint_add!(
        bigint_mul!(x2243, x2231, 5),
        bigint_mul!(x2194, x2233, 5),
        5
    );
    let x2249: BytePoly_5 = bigint_add!(
        bigint_mul!(x2246, x2231, 5),
        bigint_mul!(x2196, x2233, 5),
        5
    );
    let x2250: BytePoly_6 = bigint_nondet_quot!(ctx, x2248, x5, 6);
    let x2251: BytePoly_4 = bigint_nondet_rem!(ctx, x2248, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2250, x5, 10), x2251, 10),
            x2248,
            10
        ),
        48771,
        4,
    )?;
    let x2252: BytePoly_6 = bigint_nondet_quot!(ctx, x2249, x5, 6);
    let x2253: BytePoly_4 = bigint_nondet_rem!(ctx, x2249, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2252, x5, 10), x2253, 10),
            x2249,
            10
        ),
        48771,
        4,
    )?;
    let x2254: BytePoly_8 = bigint_mul!(x2224, x2224, 8);
    let x2255: BytePoly_9 = bigint_nondet_quot!(ctx, x2254, x5, 9);
    let x2256: BytePoly_4 = bigint_nondet_rem!(ctx, x2254, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2255, x5, 13), x2256, 13),
            x2254,
            13
        ),
        73156,
        4,
    )?;
    let x2257: BytePoly_5 = bigint_add!(bigint_mul!(x2256, x0, 5), x4, 5);
    let x2258: BytePoly_6 = bigint_nondet_quot!(ctx, x2257, x5, 6);
    let x2259: BytePoly_4 = bigint_nondet_rem!(ctx, x2257, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2258, x5, 10), x2259, 10),
            x2257,
            10
        ),
        48771,
        4,
    )?;
    let x2260: BytePoly_4 = bigint_add!(x2230, x2230, 4);
    let x2261: BytePoly_4 = bigint_nondet_quot!(ctx, x2260, x5, 4);
    let x2262: BytePoly_4 = bigint_nondet_rem!(ctx, x2260, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2261, x5, 8), x2262, 8), x2260, 8),
        32515,
        2,
    )?;
    let x2263: BytePoly_4 = bigint_nondet_inv!(ctx, x2262, x5, 4);
    let x2264: BytePoly_8 = bigint_mul!(x2262, x2263, 8);
    let x2265: BytePoly_9 = bigint_nondet_quot!(ctx, x2264, x5, 9);
    let x2266: BytePoly_4 = bigint_nondet_rem!(ctx, x2264, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2265, x5, 13), x2266, 13),
            x2264,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x2266, x2, 4), 34, 1)?;
    let x2267: BytePoly_8 = bigint_mul!(x2259, x2263, 8);
    let x2268: BytePoly_9 = bigint_nondet_quot!(ctx, x2267, x5, 9);
    let x2269: BytePoly_4 = bigint_nondet_rem!(ctx, x2267, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2268, x5, 13), x2269, 13),
            x2267,
            13
        ),
        73156,
        4,
    )?;
    let x2270: BytePoly_8 = bigint_mul!(x2269, x2224, 8);
    let x2271: BytePoly_9 = bigint_nondet_quot!(ctx, x2270, x5, 9);
    let x2272: BytePoly_4 = bigint_nondet_rem!(ctx, x2270, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2271, x5, 13), x2272, 13),
            x2270,
            13
        ),
        73156,
        4,
    )?;
    let x2273: BytePoly_4 = bigint_add!(bigint_sub!(x2230, x2272, 4), x5, 4);
    let x2274: BytePoly_4 = bigint_nondet_quot!(ctx, x2273, x5, 4);
    let x2275: BytePoly_4 = bigint_nondet_rem!(ctx, x2273, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2274, x5, 8), x2275, 8), x2273, 8),
        32515,
        2,
    )?;
    let x2276: BytePoly_8 = bigint_mul!(x2269, x2269, 8);
    let x2277: BytePoly_9 = bigint_nondet_quot!(ctx, x2276, x5, 9);
    let x2278: BytePoly_4 = bigint_nondet_rem!(ctx, x2276, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2277, x5, 13), x2278, 13),
            x2276,
            13
        ),
        73156,
        4,
    )?;
    let x2279: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2278, x2224, 4), x5, 4), x2224, 4),
        x5,
        4
    );
    let x2280: BytePoly_4 = bigint_nondet_quot!(ctx, x2279, x5, 4);
    let x2281: BytePoly_4 = bigint_nondet_rem!(ctx, x2279, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2280, x5, 8), x2281, 8), x2279, 8),
        32515,
        2,
    )?;
    let x2282: BytePoly_8 = bigint_mul!(x2269, x2281, 8);
    let x2283: BytePoly_9 = bigint_nondet_quot!(ctx, x2282, x5, 9);
    let x2284: BytePoly_4 = bigint_nondet_rem!(ctx, x2282, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2283, x5, 13), x2284, 13),
            x2282,
            13
        ),
        73156,
        4,
    )?;
    let x2285: BytePoly_4 = bigint_add!(bigint_sub!(x5, bigint_add!(x2284, x2275, 4), 4), x5, 4);
    let x2286: BytePoly_4 = bigint_nondet_quot!(ctx, x2285, x5, 4);
    let x2287: BytePoly_4 = bigint_nondet_rem!(ctx, x2285, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2286, x5, 8), x2287, 8), x2285, 8),
        32515,
        2,
    )?;
    let x2288: BytePoly_1 = bigint_nondet_rem!(ctx, x2232, x1, 1);
    let x2289: BytePoly_4 = bigint_nondet_quot!(ctx, x2232, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2289, x1, 5), x2288, 5), x2232, 5),
        32515,
        2,
    )?;
    let x2290: BytePoly_1 = bigint_sub!(x2, x2288, 1);
    eqz(ctx, &bigint_mul!(x2288, x2290, 2), 8131, 2)?;
    let x2291: BytePoly_4 = bigint_add!(bigint_sub!(x2287, x2253, 4), x5, 4);
    let x2292: BytePoly_4 = bigint_add!(bigint_sub!(x2281, x2251, 4), x5, 4);
    let x2293: BytePoly_4 = bigint_nondet_inv!(ctx, x2292, x5, 4);
    let x2294: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x2291, x2293, 8), x5, 4);
    let x2295: BytePoly_8 = bigint_add!(bigint_sub!(bigint_mul!(x2294, x2292, 8), x2291, 8), x5, 8);
    let x2296: BytePoly_9 = bigint_nondet_quot!(ctx, x2295, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x2295, bigint_mul!(x2296, x5, 13), 13),
        73156,
        4,
    )?;
    let x2297: BytePoly_8 = bigint_mul!(x2294, x2294, 8);
    let x2298: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2297, x2251, 8), x5, 8), x2281, 8),
        x5,
        8
    );
    let x2299: BytePoly_9 = bigint_nondet_quot!(ctx, x2298, x5, 9);
    let x2300: BytePoly_4 = bigint_nondet_rem!(ctx, x2298, x5, 4);
    let x2301: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x5,
                bigint_add!(
                    bigint_mul!(x2294, x2300, 8),
                    bigint_add!(bigint_sub!(x2253, bigint_mul!(x2294, x2251, 8), 8), x5, 8),
                    8
                ),
                8
            ),
            x5,
            8
        ),
        x5,
        8
    );
    let x2302: BytePoly_9 = bigint_nondet_quot!(ctx, x2301, x5, 9);
    let x2303: BytePoly_4 = bigint_nondet_rem!(ctx, x2301, x5, 4);
    let x2304: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2297, bigint_mul!(x2299, x5, 13), 13),
                        x2251,
                        13
                    ),
                    x2281,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x2300,
        13
    );
    eqz(ctx, &x2304, 73156, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2302, x5, 13), x2303, 13),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2294, bigint_sub!(x2251, x2300, 4), 8),
                        x2253,
                        8
                    ),
                    x5,
                    8
                ),
                x5,
                8
            ),
            13
        ),
        73156,
        4,
    )?;
    let x2305: BytePoly_5 = bigint_add!(
        bigint_mul!(x2300, x2288, 5),
        bigint_mul!(x2251, x2290, 5),
        5
    );
    let x2306: BytePoly_5 = bigint_add!(
        bigint_mul!(x2303, x2288, 5),
        bigint_mul!(x2253, x2290, 5),
        5
    );
    let x2307: BytePoly_6 = bigint_nondet_quot!(ctx, x2305, x5, 6);
    let x2308: BytePoly_4 = bigint_nondet_rem!(ctx, x2305, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2307, x5, 10), x2308, 10),
            x2305,
            10
        ),
        48771,
        4,
    )?;
    let x2309: BytePoly_6 = bigint_nondet_quot!(ctx, x2306, x5, 6);
    let x2310: BytePoly_4 = bigint_nondet_rem!(ctx, x2306, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2309, x5, 10), x2310, 10),
            x2306,
            10
        ),
        48771,
        4,
    )?;
    let x2311: BytePoly_8 = bigint_mul!(x2281, x2281, 8);
    let x2312: BytePoly_9 = bigint_nondet_quot!(ctx, x2311, x5, 9);
    let x2313: BytePoly_4 = bigint_nondet_rem!(ctx, x2311, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2312, x5, 13), x2313, 13),
            x2311,
            13
        ),
        73156,
        4,
    )?;
    let x2314: BytePoly_5 = bigint_add!(bigint_mul!(x2313, x0, 5), x4, 5);
    let x2315: BytePoly_6 = bigint_nondet_quot!(ctx, x2314, x5, 6);
    let x2316: BytePoly_4 = bigint_nondet_rem!(ctx, x2314, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2315, x5, 10), x2316, 10),
            x2314,
            10
        ),
        48771,
        4,
    )?;
    let x2317: BytePoly_4 = bigint_add!(x2287, x2287, 4);
    let x2318: BytePoly_4 = bigint_nondet_quot!(ctx, x2317, x5, 4);
    let x2319: BytePoly_4 = bigint_nondet_rem!(ctx, x2317, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2318, x5, 8), x2319, 8), x2317, 8),
        32515,
        2,
    )?;
    let x2320: BytePoly_4 = bigint_nondet_inv!(ctx, x2319, x5, 4);
    let x2321: BytePoly_8 = bigint_mul!(x2319, x2320, 8);
    let x2322: BytePoly_9 = bigint_nondet_quot!(ctx, x2321, x5, 9);
    let x2323: BytePoly_4 = bigint_nondet_rem!(ctx, x2321, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2322, x5, 13), x2323, 13),
            x2321,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x2323, x2, 4), 34, 1)?;
    let x2324: BytePoly_8 = bigint_mul!(x2316, x2320, 8);
    let x2325: BytePoly_9 = bigint_nondet_quot!(ctx, x2324, x5, 9);
    let x2326: BytePoly_4 = bigint_nondet_rem!(ctx, x2324, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2325, x5, 13), x2326, 13),
            x2324,
            13
        ),
        73156,
        4,
    )?;
    let x2327: BytePoly_8 = bigint_mul!(x2326, x2281, 8);
    let x2328: BytePoly_9 = bigint_nondet_quot!(ctx, x2327, x5, 9);
    let x2329: BytePoly_4 = bigint_nondet_rem!(ctx, x2327, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2328, x5, 13), x2329, 13),
            x2327,
            13
        ),
        73156,
        4,
    )?;
    let x2330: BytePoly_4 = bigint_add!(bigint_sub!(x2287, x2329, 4), x5, 4);
    let x2331: BytePoly_4 = bigint_nondet_quot!(ctx, x2330, x5, 4);
    let x2332: BytePoly_4 = bigint_nondet_rem!(ctx, x2330, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2331, x5, 8), x2332, 8), x2330, 8),
        32515,
        2,
    )?;
    let x2333: BytePoly_8 = bigint_mul!(x2326, x2326, 8);
    let x2334: BytePoly_9 = bigint_nondet_quot!(ctx, x2333, x5, 9);
    let x2335: BytePoly_4 = bigint_nondet_rem!(ctx, x2333, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2334, x5, 13), x2335, 13),
            x2333,
            13
        ),
        73156,
        4,
    )?;
    let x2336: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2335, x2281, 4), x5, 4), x2281, 4),
        x5,
        4
    );
    let x2337: BytePoly_4 = bigint_nondet_quot!(ctx, x2336, x5, 4);
    let x2338: BytePoly_4 = bigint_nondet_rem!(ctx, x2336, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2337, x5, 8), x2338, 8), x2336, 8),
        32515,
        2,
    )?;
    let x2339: BytePoly_8 = bigint_mul!(x2326, x2338, 8);
    let x2340: BytePoly_9 = bigint_nondet_quot!(ctx, x2339, x5, 9);
    let x2341: BytePoly_4 = bigint_nondet_rem!(ctx, x2339, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2340, x5, 13), x2341, 13),
            x2339,
            13
        ),
        73156,
        4,
    )?;
    let x2342: BytePoly_4 = bigint_add!(bigint_sub!(x5, bigint_add!(x2341, x2332, 4), 4), x5, 4);
    let x2343: BytePoly_4 = bigint_nondet_quot!(ctx, x2342, x5, 4);
    let x2344: BytePoly_4 = bigint_nondet_rem!(ctx, x2342, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2343, x5, 8), x2344, 8), x2342, 8),
        32515,
        2,
    )?;
    let x2345: BytePoly_1 = bigint_nondet_rem!(ctx, x2289, x1, 1);
    let x2346: BytePoly_4 = bigint_nondet_quot!(ctx, x2289, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2346, x1, 5), x2345, 5), x2289, 5),
        32515,
        2,
    )?;
    let x2347: BytePoly_1 = bigint_sub!(x2, x2345, 1);
    eqz(ctx, &bigint_mul!(x2345, x2347, 2), 8131, 2)?;
    let x2348: BytePoly_4 = bigint_add!(bigint_sub!(x2344, x2310, 4), x5, 4);
    let x2349: BytePoly_4 = bigint_add!(bigint_sub!(x2338, x2308, 4), x5, 4);
    let x2350: BytePoly_4 = bigint_nondet_inv!(ctx, x2349, x5, 4);
    let x2351: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x2348, x2350, 8), x5, 4);
    let x2352: BytePoly_8 = bigint_add!(bigint_sub!(bigint_mul!(x2351, x2349, 8), x2348, 8), x5, 8);
    let x2353: BytePoly_9 = bigint_nondet_quot!(ctx, x2352, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x2352, bigint_mul!(x2353, x5, 13), 13),
        73156,
        4,
    )?;
    let x2354: BytePoly_8 = bigint_mul!(x2351, x2351, 8);
    let x2355: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2354, x2308, 8), x5, 8), x2338, 8),
        x5,
        8
    );
    let x2356: BytePoly_9 = bigint_nondet_quot!(ctx, x2355, x5, 9);
    let x2357: BytePoly_4 = bigint_nondet_rem!(ctx, x2355, x5, 4);
    let x2358: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x5,
                bigint_add!(
                    bigint_mul!(x2351, x2357, 8),
                    bigint_add!(bigint_sub!(x2310, bigint_mul!(x2351, x2308, 8), 8), x5, 8),
                    8
                ),
                8
            ),
            x5,
            8
        ),
        x5,
        8
    );
    let x2359: BytePoly_9 = bigint_nondet_quot!(ctx, x2358, x5, 9);
    let x2360: BytePoly_4 = bigint_nondet_rem!(ctx, x2358, x5, 4);
    let x2361: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2354, bigint_mul!(x2356, x5, 13), 13),
                        x2308,
                        13
                    ),
                    x2338,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x2357,
        13
    );
    eqz(ctx, &x2361, 73156, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2359, x5, 13), x2360, 13),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2351, bigint_sub!(x2308, x2357, 4), 8),
                        x2310,
                        8
                    ),
                    x5,
                    8
                ),
                x5,
                8
            ),
            13
        ),
        73156,
        4,
    )?;
    let x2362: BytePoly_5 = bigint_add!(
        bigint_mul!(x2357, x2345, 5),
        bigint_mul!(x2308, x2347, 5),
        5
    );
    let x2363: BytePoly_5 = bigint_add!(
        bigint_mul!(x2360, x2345, 5),
        bigint_mul!(x2310, x2347, 5),
        5
    );
    let x2364: BytePoly_6 = bigint_nondet_quot!(ctx, x2362, x5, 6);
    let x2365: BytePoly_4 = bigint_nondet_rem!(ctx, x2362, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2364, x5, 10), x2365, 10),
            x2362,
            10
        ),
        48771,
        4,
    )?;
    let x2366: BytePoly_6 = bigint_nondet_quot!(ctx, x2363, x5, 6);
    let x2367: BytePoly_4 = bigint_nondet_rem!(ctx, x2363, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2366, x5, 10), x2367, 10),
            x2363,
            10
        ),
        48771,
        4,
    )?;
    let x2368: BytePoly_8 = bigint_mul!(x2338, x2338, 8);
    let x2369: BytePoly_9 = bigint_nondet_quot!(ctx, x2368, x5, 9);
    let x2370: BytePoly_4 = bigint_nondet_rem!(ctx, x2368, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2369, x5, 13), x2370, 13),
            x2368,
            13
        ),
        73156,
        4,
    )?;
    let x2371: BytePoly_5 = bigint_add!(bigint_mul!(x2370, x0, 5), x4, 5);
    let x2372: BytePoly_6 = bigint_nondet_quot!(ctx, x2371, x5, 6);
    let x2373: BytePoly_4 = bigint_nondet_rem!(ctx, x2371, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2372, x5, 10), x2373, 10),
            x2371,
            10
        ),
        48771,
        4,
    )?;
    let x2374: BytePoly_4 = bigint_add!(x2344, x2344, 4);
    let x2375: BytePoly_4 = bigint_nondet_quot!(ctx, x2374, x5, 4);
    let x2376: BytePoly_4 = bigint_nondet_rem!(ctx, x2374, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2375, x5, 8), x2376, 8), x2374, 8),
        32515,
        2,
    )?;
    let x2377: BytePoly_4 = bigint_nondet_inv!(ctx, x2376, x5, 4);
    let x2378: BytePoly_8 = bigint_mul!(x2376, x2377, 8);
    let x2379: BytePoly_9 = bigint_nondet_quot!(ctx, x2378, x5, 9);
    let x2380: BytePoly_4 = bigint_nondet_rem!(ctx, x2378, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2379, x5, 13), x2380, 13),
            x2378,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x2380, x2, 4), 34, 1)?;
    let x2381: BytePoly_8 = bigint_mul!(x2373, x2377, 8);
    let x2382: BytePoly_9 = bigint_nondet_quot!(ctx, x2381, x5, 9);
    let x2383: BytePoly_4 = bigint_nondet_rem!(ctx, x2381, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2382, x5, 13), x2383, 13),
            x2381,
            13
        ),
        73156,
        4,
    )?;
    let x2384: BytePoly_8 = bigint_mul!(x2383, x2338, 8);
    let x2385: BytePoly_9 = bigint_nondet_quot!(ctx, x2384, x5, 9);
    let x2386: BytePoly_4 = bigint_nondet_rem!(ctx, x2384, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2385, x5, 13), x2386, 13),
            x2384,
            13
        ),
        73156,
        4,
    )?;
    let x2387: BytePoly_4 = bigint_add!(bigint_sub!(x2344, x2386, 4), x5, 4);
    let x2388: BytePoly_4 = bigint_nondet_quot!(ctx, x2387, x5, 4);
    let x2389: BytePoly_4 = bigint_nondet_rem!(ctx, x2387, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2388, x5, 8), x2389, 8), x2387, 8),
        32515,
        2,
    )?;
    let x2390: BytePoly_8 = bigint_mul!(x2383, x2383, 8);
    let x2391: BytePoly_9 = bigint_nondet_quot!(ctx, x2390, x5, 9);
    let x2392: BytePoly_4 = bigint_nondet_rem!(ctx, x2390, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2391, x5, 13), x2392, 13),
            x2390,
            13
        ),
        73156,
        4,
    )?;
    let x2393: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2392, x2338, 4), x5, 4), x2338, 4),
        x5,
        4
    );
    let x2394: BytePoly_4 = bigint_nondet_quot!(ctx, x2393, x5, 4);
    let x2395: BytePoly_4 = bigint_nondet_rem!(ctx, x2393, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2394, x5, 8), x2395, 8), x2393, 8),
        32515,
        2,
    )?;
    let x2396: BytePoly_8 = bigint_mul!(x2383, x2395, 8);
    let x2397: BytePoly_9 = bigint_nondet_quot!(ctx, x2396, x5, 9);
    let x2398: BytePoly_4 = bigint_nondet_rem!(ctx, x2396, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2397, x5, 13), x2398, 13),
            x2396,
            13
        ),
        73156,
        4,
    )?;
    let x2399: BytePoly_4 = bigint_add!(bigint_sub!(x5, bigint_add!(x2398, x2389, 4), 4), x5, 4);
    let x2400: BytePoly_4 = bigint_nondet_quot!(ctx, x2399, x5, 4);
    let x2401: BytePoly_4 = bigint_nondet_rem!(ctx, x2399, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2400, x5, 8), x2401, 8), x2399, 8),
        32515,
        2,
    )?;
    let x2402: BytePoly_1 = bigint_nondet_rem!(ctx, x2346, x1, 1);
    let x2403: BytePoly_4 = bigint_nondet_quot!(ctx, x2346, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2403, x1, 5), x2402, 5), x2346, 5),
        32515,
        2,
    )?;
    let x2404: BytePoly_1 = bigint_sub!(x2, x2402, 1);
    eqz(ctx, &bigint_mul!(x2402, x2404, 2), 8131, 2)?;
    let x2405: BytePoly_4 = bigint_add!(bigint_sub!(x2401, x2367, 4), x5, 4);
    let x2406: BytePoly_4 = bigint_add!(bigint_sub!(x2395, x2365, 4), x5, 4);
    let x2407: BytePoly_4 = bigint_nondet_inv!(ctx, x2406, x5, 4);
    let x2408: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x2405, x2407, 8), x5, 4);
    let x2409: BytePoly_8 = bigint_add!(bigint_sub!(bigint_mul!(x2408, x2406, 8), x2405, 8), x5, 8);
    let x2410: BytePoly_9 = bigint_nondet_quot!(ctx, x2409, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x2409, bigint_mul!(x2410, x5, 13), 13),
        73156,
        4,
    )?;
    let x2411: BytePoly_8 = bigint_mul!(x2408, x2408, 8);
    let x2412: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2411, x2365, 8), x5, 8), x2395, 8),
        x5,
        8
    );
    let x2413: BytePoly_9 = bigint_nondet_quot!(ctx, x2412, x5, 9);
    let x2414: BytePoly_4 = bigint_nondet_rem!(ctx, x2412, x5, 4);
    let x2415: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x5,
                bigint_add!(
                    bigint_mul!(x2408, x2414, 8),
                    bigint_add!(bigint_sub!(x2367, bigint_mul!(x2408, x2365, 8), 8), x5, 8),
                    8
                ),
                8
            ),
            x5,
            8
        ),
        x5,
        8
    );
    let x2416: BytePoly_9 = bigint_nondet_quot!(ctx, x2415, x5, 9);
    let x2417: BytePoly_4 = bigint_nondet_rem!(ctx, x2415, x5, 4);
    let x2418: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2411, bigint_mul!(x2413, x5, 13), 13),
                        x2365,
                        13
                    ),
                    x2395,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x2414,
        13
    );
    eqz(ctx, &x2418, 73156, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2416, x5, 13), x2417, 13),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2408, bigint_sub!(x2365, x2414, 4), 8),
                        x2367,
                        8
                    ),
                    x5,
                    8
                ),
                x5,
                8
            ),
            13
        ),
        73156,
        4,
    )?;
    let x2419: BytePoly_5 = bigint_add!(
        bigint_mul!(x2414, x2402, 5),
        bigint_mul!(x2365, x2404, 5),
        5
    );
    let x2420: BytePoly_5 = bigint_add!(
        bigint_mul!(x2417, x2402, 5),
        bigint_mul!(x2367, x2404, 5),
        5
    );
    let x2421: BytePoly_6 = bigint_nondet_quot!(ctx, x2419, x5, 6);
    let x2422: BytePoly_4 = bigint_nondet_rem!(ctx, x2419, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2421, x5, 10), x2422, 10),
            x2419,
            10
        ),
        48771,
        4,
    )?;
    let x2423: BytePoly_6 = bigint_nondet_quot!(ctx, x2420, x5, 6);
    let x2424: BytePoly_4 = bigint_nondet_rem!(ctx, x2420, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2423, x5, 10), x2424, 10),
            x2420,
            10
        ),
        48771,
        4,
    )?;
    let x2425: BytePoly_8 = bigint_mul!(x2395, x2395, 8);
    let x2426: BytePoly_9 = bigint_nondet_quot!(ctx, x2425, x5, 9);
    let x2427: BytePoly_4 = bigint_nondet_rem!(ctx, x2425, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2426, x5, 13), x2427, 13),
            x2425,
            13
        ),
        73156,
        4,
    )?;
    let x2428: BytePoly_5 = bigint_add!(bigint_mul!(x2427, x0, 5), x4, 5);
    let x2429: BytePoly_6 = bigint_nondet_quot!(ctx, x2428, x5, 6);
    let x2430: BytePoly_4 = bigint_nondet_rem!(ctx, x2428, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2429, x5, 10), x2430, 10),
            x2428,
            10
        ),
        48771,
        4,
    )?;
    let x2431: BytePoly_4 = bigint_add!(x2401, x2401, 4);
    let x2432: BytePoly_4 = bigint_nondet_quot!(ctx, x2431, x5, 4);
    let x2433: BytePoly_4 = bigint_nondet_rem!(ctx, x2431, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2432, x5, 8), x2433, 8), x2431, 8),
        32515,
        2,
    )?;
    let x2434: BytePoly_4 = bigint_nondet_inv!(ctx, x2433, x5, 4);
    let x2435: BytePoly_8 = bigint_mul!(x2433, x2434, 8);
    let x2436: BytePoly_9 = bigint_nondet_quot!(ctx, x2435, x5, 9);
    let x2437: BytePoly_4 = bigint_nondet_rem!(ctx, x2435, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2436, x5, 13), x2437, 13),
            x2435,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x2437, x2, 4), 34, 1)?;
    let x2438: BytePoly_8 = bigint_mul!(x2430, x2434, 8);
    let x2439: BytePoly_9 = bigint_nondet_quot!(ctx, x2438, x5, 9);
    let x2440: BytePoly_4 = bigint_nondet_rem!(ctx, x2438, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2439, x5, 13), x2440, 13),
            x2438,
            13
        ),
        73156,
        4,
    )?;
    let x2441: BytePoly_8 = bigint_mul!(x2440, x2395, 8);
    let x2442: BytePoly_9 = bigint_nondet_quot!(ctx, x2441, x5, 9);
    let x2443: BytePoly_4 = bigint_nondet_rem!(ctx, x2441, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2442, x5, 13), x2443, 13),
            x2441,
            13
        ),
        73156,
        4,
    )?;
    let x2444: BytePoly_4 = bigint_add!(bigint_sub!(x2401, x2443, 4), x5, 4);
    let x2445: BytePoly_4 = bigint_nondet_quot!(ctx, x2444, x5, 4);
    let x2446: BytePoly_4 = bigint_nondet_rem!(ctx, x2444, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2445, x5, 8), x2446, 8), x2444, 8),
        32515,
        2,
    )?;
    let x2447: BytePoly_8 = bigint_mul!(x2440, x2440, 8);
    let x2448: BytePoly_9 = bigint_nondet_quot!(ctx, x2447, x5, 9);
    let x2449: BytePoly_4 = bigint_nondet_rem!(ctx, x2447, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2448, x5, 13), x2449, 13),
            x2447,
            13
        ),
        73156,
        4,
    )?;
    let x2450: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2449, x2395, 4), x5, 4), x2395, 4),
        x5,
        4
    );
    let x2451: BytePoly_4 = bigint_nondet_quot!(ctx, x2450, x5, 4);
    let x2452: BytePoly_4 = bigint_nondet_rem!(ctx, x2450, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2451, x5, 8), x2452, 8), x2450, 8),
        32515,
        2,
    )?;
    let x2453: BytePoly_8 = bigint_mul!(x2440, x2452, 8);
    let x2454: BytePoly_9 = bigint_nondet_quot!(ctx, x2453, x5, 9);
    let x2455: BytePoly_4 = bigint_nondet_rem!(ctx, x2453, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2454, x5, 13), x2455, 13),
            x2453,
            13
        ),
        73156,
        4,
    )?;
    let x2456: BytePoly_4 = bigint_add!(bigint_sub!(x5, bigint_add!(x2455, x2446, 4), 4), x5, 4);
    let x2457: BytePoly_4 = bigint_nondet_quot!(ctx, x2456, x5, 4);
    let x2458: BytePoly_4 = bigint_nondet_rem!(ctx, x2456, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2457, x5, 8), x2458, 8), x2456, 8),
        32515,
        2,
    )?;
    let x2459: BytePoly_1 = bigint_nondet_rem!(ctx, x2403, x1, 1);
    let x2460: BytePoly_4 = bigint_nondet_quot!(ctx, x2403, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2460, x1, 5), x2459, 5), x2403, 5),
        32515,
        2,
    )?;
    let x2461: BytePoly_1 = bigint_sub!(x2, x2459, 1);
    eqz(ctx, &bigint_mul!(x2459, x2461, 2), 8131, 2)?;
    let x2462: BytePoly_4 = bigint_add!(bigint_sub!(x2458, x2424, 4), x5, 4);
    let x2463: BytePoly_4 = bigint_add!(bigint_sub!(x2452, x2422, 4), x5, 4);
    let x2464: BytePoly_4 = bigint_nondet_inv!(ctx, x2463, x5, 4);
    let x2465: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x2462, x2464, 8), x5, 4);
    let x2466: BytePoly_8 = bigint_add!(bigint_sub!(bigint_mul!(x2465, x2463, 8), x2462, 8), x5, 8);
    let x2467: BytePoly_9 = bigint_nondet_quot!(ctx, x2466, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x2466, bigint_mul!(x2467, x5, 13), 13),
        73156,
        4,
    )?;
    let x2468: BytePoly_8 = bigint_mul!(x2465, x2465, 8);
    let x2469: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2468, x2422, 8), x5, 8), x2452, 8),
        x5,
        8
    );
    let x2470: BytePoly_9 = bigint_nondet_quot!(ctx, x2469, x5, 9);
    let x2471: BytePoly_4 = bigint_nondet_rem!(ctx, x2469, x5, 4);
    let x2472: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x5,
                bigint_add!(
                    bigint_mul!(x2465, x2471, 8),
                    bigint_add!(bigint_sub!(x2424, bigint_mul!(x2465, x2422, 8), 8), x5, 8),
                    8
                ),
                8
            ),
            x5,
            8
        ),
        x5,
        8
    );
    let x2473: BytePoly_9 = bigint_nondet_quot!(ctx, x2472, x5, 9);
    let x2474: BytePoly_4 = bigint_nondet_rem!(ctx, x2472, x5, 4);
    let x2475: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2468, bigint_mul!(x2470, x5, 13), 13),
                        x2422,
                        13
                    ),
                    x2452,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x2471,
        13
    );
    eqz(ctx, &x2475, 73156, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2473, x5, 13), x2474, 13),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2465, bigint_sub!(x2422, x2471, 4), 8),
                        x2424,
                        8
                    ),
                    x5,
                    8
                ),
                x5,
                8
            ),
            13
        ),
        73156,
        4,
    )?;
    let x2476: BytePoly_5 = bigint_add!(
        bigint_mul!(x2471, x2459, 5),
        bigint_mul!(x2422, x2461, 5),
        5
    );
    let x2477: BytePoly_5 = bigint_add!(
        bigint_mul!(x2474, x2459, 5),
        bigint_mul!(x2424, x2461, 5),
        5
    );
    let x2478: BytePoly_6 = bigint_nondet_quot!(ctx, x2476, x5, 6);
    let x2479: BytePoly_4 = bigint_nondet_rem!(ctx, x2476, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2478, x5, 10), x2479, 10),
            x2476,
            10
        ),
        48771,
        4,
    )?;
    let x2480: BytePoly_6 = bigint_nondet_quot!(ctx, x2477, x5, 6);
    let x2481: BytePoly_4 = bigint_nondet_rem!(ctx, x2477, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2480, x5, 10), x2481, 10),
            x2477,
            10
        ),
        48771,
        4,
    )?;
    let x2482: BytePoly_8 = bigint_mul!(x2452, x2452, 8);
    let x2483: BytePoly_9 = bigint_nondet_quot!(ctx, x2482, x5, 9);
    let x2484: BytePoly_4 = bigint_nondet_rem!(ctx, x2482, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2483, x5, 13), x2484, 13),
            x2482,
            13
        ),
        73156,
        4,
    )?;
    let x2485: BytePoly_5 = bigint_add!(bigint_mul!(x2484, x0, 5), x4, 5);
    let x2486: BytePoly_6 = bigint_nondet_quot!(ctx, x2485, x5, 6);
    let x2487: BytePoly_4 = bigint_nondet_rem!(ctx, x2485, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2486, x5, 10), x2487, 10),
            x2485,
            10
        ),
        48771,
        4,
    )?;
    let x2488: BytePoly_4 = bigint_add!(x2458, x2458, 4);
    let x2489: BytePoly_4 = bigint_nondet_quot!(ctx, x2488, x5, 4);
    let x2490: BytePoly_4 = bigint_nondet_rem!(ctx, x2488, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2489, x5, 8), x2490, 8), x2488, 8),
        32515,
        2,
    )?;
    let x2491: BytePoly_4 = bigint_nondet_inv!(ctx, x2490, x5, 4);
    let x2492: BytePoly_8 = bigint_mul!(x2490, x2491, 8);
    let x2493: BytePoly_9 = bigint_nondet_quot!(ctx, x2492, x5, 9);
    let x2494: BytePoly_4 = bigint_nondet_rem!(ctx, x2492, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2493, x5, 13), x2494, 13),
            x2492,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x2494, x2, 4), 34, 1)?;
    let x2495: BytePoly_8 = bigint_mul!(x2487, x2491, 8);
    let x2496: BytePoly_9 = bigint_nondet_quot!(ctx, x2495, x5, 9);
    let x2497: BytePoly_4 = bigint_nondet_rem!(ctx, x2495, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2496, x5, 13), x2497, 13),
            x2495,
            13
        ),
        73156,
        4,
    )?;
    let x2498: BytePoly_8 = bigint_mul!(x2497, x2452, 8);
    let x2499: BytePoly_9 = bigint_nondet_quot!(ctx, x2498, x5, 9);
    let x2500: BytePoly_4 = bigint_nondet_rem!(ctx, x2498, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2499, x5, 13), x2500, 13),
            x2498,
            13
        ),
        73156,
        4,
    )?;
    let x2501: BytePoly_4 = bigint_add!(bigint_sub!(x2458, x2500, 4), x5, 4);
    let x2502: BytePoly_4 = bigint_nondet_quot!(ctx, x2501, x5, 4);
    let x2503: BytePoly_4 = bigint_nondet_rem!(ctx, x2501, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2502, x5, 8), x2503, 8), x2501, 8),
        32515,
        2,
    )?;
    let x2504: BytePoly_8 = bigint_mul!(x2497, x2497, 8);
    let x2505: BytePoly_9 = bigint_nondet_quot!(ctx, x2504, x5, 9);
    let x2506: BytePoly_4 = bigint_nondet_rem!(ctx, x2504, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2505, x5, 13), x2506, 13),
            x2504,
            13
        ),
        73156,
        4,
    )?;
    let x2507: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2506, x2452, 4), x5, 4), x2452, 4),
        x5,
        4
    );
    let x2508: BytePoly_4 = bigint_nondet_quot!(ctx, x2507, x5, 4);
    let x2509: BytePoly_4 = bigint_nondet_rem!(ctx, x2507, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2508, x5, 8), x2509, 8), x2507, 8),
        32515,
        2,
    )?;
    let x2510: BytePoly_8 = bigint_mul!(x2497, x2509, 8);
    let x2511: BytePoly_9 = bigint_nondet_quot!(ctx, x2510, x5, 9);
    let x2512: BytePoly_4 = bigint_nondet_rem!(ctx, x2510, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2511, x5, 13), x2512, 13),
            x2510,
            13
        ),
        73156,
        4,
    )?;
    let x2513: BytePoly_4 = bigint_add!(bigint_sub!(x5, bigint_add!(x2512, x2503, 4), 4), x5, 4);
    let x2514: BytePoly_4 = bigint_nondet_quot!(ctx, x2513, x5, 4);
    let x2515: BytePoly_4 = bigint_nondet_rem!(ctx, x2513, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2514, x5, 8), x2515, 8), x2513, 8),
        32515,
        2,
    )?;
    let x2516: BytePoly_1 = bigint_nondet_rem!(ctx, x2460, x1, 1);
    let x2517: BytePoly_4 = bigint_nondet_quot!(ctx, x2460, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2517, x1, 5), x2516, 5), x2460, 5),
        32515,
        2,
    )?;
    let x2518: BytePoly_1 = bigint_sub!(x2, x2516, 1);
    eqz(ctx, &bigint_mul!(x2516, x2518, 2), 8131, 2)?;
    let x2519: BytePoly_4 = bigint_add!(bigint_sub!(x2515, x2481, 4), x5, 4);
    let x2520: BytePoly_4 = bigint_add!(bigint_sub!(x2509, x2479, 4), x5, 4);
    let x2521: BytePoly_4 = bigint_nondet_inv!(ctx, x2520, x5, 4);
    let x2522: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x2519, x2521, 8), x5, 4);
    let x2523: BytePoly_8 = bigint_add!(bigint_sub!(bigint_mul!(x2522, x2520, 8), x2519, 8), x5, 8);
    let x2524: BytePoly_9 = bigint_nondet_quot!(ctx, x2523, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x2523, bigint_mul!(x2524, x5, 13), 13),
        73156,
        4,
    )?;
    let x2525: BytePoly_8 = bigint_mul!(x2522, x2522, 8);
    let x2526: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2525, x2479, 8), x5, 8), x2509, 8),
        x5,
        8
    );
    let x2527: BytePoly_9 = bigint_nondet_quot!(ctx, x2526, x5, 9);
    let x2528: BytePoly_4 = bigint_nondet_rem!(ctx, x2526, x5, 4);
    let x2529: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x5,
                bigint_add!(
                    bigint_mul!(x2522, x2528, 8),
                    bigint_add!(bigint_sub!(x2481, bigint_mul!(x2522, x2479, 8), 8), x5, 8),
                    8
                ),
                8
            ),
            x5,
            8
        ),
        x5,
        8
    );
    let x2530: BytePoly_9 = bigint_nondet_quot!(ctx, x2529, x5, 9);
    let x2531: BytePoly_4 = bigint_nondet_rem!(ctx, x2529, x5, 4);
    let x2532: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2525, bigint_mul!(x2527, x5, 13), 13),
                        x2479,
                        13
                    ),
                    x2509,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x2528,
        13
    );
    eqz(ctx, &x2532, 73156, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2530, x5, 13), x2531, 13),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2522, bigint_sub!(x2479, x2528, 4), 8),
                        x2481,
                        8
                    ),
                    x5,
                    8
                ),
                x5,
                8
            ),
            13
        ),
        73156,
        4,
    )?;
    let x2533: BytePoly_5 = bigint_add!(
        bigint_mul!(x2528, x2516, 5),
        bigint_mul!(x2479, x2518, 5),
        5
    );
    let x2534: BytePoly_5 = bigint_add!(
        bigint_mul!(x2531, x2516, 5),
        bigint_mul!(x2481, x2518, 5),
        5
    );
    let x2535: BytePoly_6 = bigint_nondet_quot!(ctx, x2533, x5, 6);
    let x2536: BytePoly_4 = bigint_nondet_rem!(ctx, x2533, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2535, x5, 10), x2536, 10),
            x2533,
            10
        ),
        48771,
        4,
    )?;
    let x2537: BytePoly_6 = bigint_nondet_quot!(ctx, x2534, x5, 6);
    let x2538: BytePoly_4 = bigint_nondet_rem!(ctx, x2534, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2537, x5, 10), x2538, 10),
            x2534,
            10
        ),
        48771,
        4,
    )?;
    let x2539: BytePoly_8 = bigint_mul!(x2509, x2509, 8);
    let x2540: BytePoly_9 = bigint_nondet_quot!(ctx, x2539, x5, 9);
    let x2541: BytePoly_4 = bigint_nondet_rem!(ctx, x2539, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2540, x5, 13), x2541, 13),
            x2539,
            13
        ),
        73156,
        4,
    )?;
    let x2542: BytePoly_5 = bigint_add!(bigint_mul!(x2541, x0, 5), x4, 5);
    let x2543: BytePoly_6 = bigint_nondet_quot!(ctx, x2542, x5, 6);
    let x2544: BytePoly_4 = bigint_nondet_rem!(ctx, x2542, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2543, x5, 10), x2544, 10),
            x2542,
            10
        ),
        48771,
        4,
    )?;
    let x2545: BytePoly_4 = bigint_add!(x2515, x2515, 4);
    let x2546: BytePoly_4 = bigint_nondet_quot!(ctx, x2545, x5, 4);
    let x2547: BytePoly_4 = bigint_nondet_rem!(ctx, x2545, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2546, x5, 8), x2547, 8), x2545, 8),
        32515,
        2,
    )?;
    let x2548: BytePoly_4 = bigint_nondet_inv!(ctx, x2547, x5, 4);
    let x2549: BytePoly_8 = bigint_mul!(x2547, x2548, 8);
    let x2550: BytePoly_9 = bigint_nondet_quot!(ctx, x2549, x5, 9);
    let x2551: BytePoly_4 = bigint_nondet_rem!(ctx, x2549, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2550, x5, 13), x2551, 13),
            x2549,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x2551, x2, 4), 34, 1)?;
    let x2552: BytePoly_8 = bigint_mul!(x2544, x2548, 8);
    let x2553: BytePoly_9 = bigint_nondet_quot!(ctx, x2552, x5, 9);
    let x2554: BytePoly_4 = bigint_nondet_rem!(ctx, x2552, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2553, x5, 13), x2554, 13),
            x2552,
            13
        ),
        73156,
        4,
    )?;
    let x2555: BytePoly_8 = bigint_mul!(x2554, x2509, 8);
    let x2556: BytePoly_9 = bigint_nondet_quot!(ctx, x2555, x5, 9);
    let x2557: BytePoly_4 = bigint_nondet_rem!(ctx, x2555, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2556, x5, 13), x2557, 13),
            x2555,
            13
        ),
        73156,
        4,
    )?;
    let x2558: BytePoly_4 = bigint_add!(bigint_sub!(x2515, x2557, 4), x5, 4);
    let x2559: BytePoly_4 = bigint_nondet_quot!(ctx, x2558, x5, 4);
    let x2560: BytePoly_4 = bigint_nondet_rem!(ctx, x2558, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2559, x5, 8), x2560, 8), x2558, 8),
        32515,
        2,
    )?;
    let x2561: BytePoly_8 = bigint_mul!(x2554, x2554, 8);
    let x2562: BytePoly_9 = bigint_nondet_quot!(ctx, x2561, x5, 9);
    let x2563: BytePoly_4 = bigint_nondet_rem!(ctx, x2561, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2562, x5, 13), x2563, 13),
            x2561,
            13
        ),
        73156,
        4,
    )?;
    let x2564: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2563, x2509, 4), x5, 4), x2509, 4),
        x5,
        4
    );
    let x2565: BytePoly_4 = bigint_nondet_quot!(ctx, x2564, x5, 4);
    let x2566: BytePoly_4 = bigint_nondet_rem!(ctx, x2564, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2565, x5, 8), x2566, 8), x2564, 8),
        32515,
        2,
    )?;
    let x2567: BytePoly_8 = bigint_mul!(x2554, x2566, 8);
    let x2568: BytePoly_9 = bigint_nondet_quot!(ctx, x2567, x5, 9);
    let x2569: BytePoly_4 = bigint_nondet_rem!(ctx, x2567, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2568, x5, 13), x2569, 13),
            x2567,
            13
        ),
        73156,
        4,
    )?;
    let x2570: BytePoly_4 = bigint_add!(bigint_sub!(x5, bigint_add!(x2569, x2560, 4), 4), x5, 4);
    let x2571: BytePoly_4 = bigint_nondet_quot!(ctx, x2570, x5, 4);
    let x2572: BytePoly_4 = bigint_nondet_rem!(ctx, x2570, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2571, x5, 8), x2572, 8), x2570, 8),
        32515,
        2,
    )?;
    let x2573: BytePoly_1 = bigint_nondet_rem!(ctx, x2517, x1, 1);
    let x2574: BytePoly_4 = bigint_nondet_quot!(ctx, x2517, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2574, x1, 5), x2573, 5), x2517, 5),
        32515,
        2,
    )?;
    let x2575: BytePoly_1 = bigint_sub!(x2, x2573, 1);
    eqz(ctx, &bigint_mul!(x2573, x2575, 2), 8131, 2)?;
    let x2576: BytePoly_4 = bigint_add!(bigint_sub!(x2572, x2538, 4), x5, 4);
    let x2577: BytePoly_4 = bigint_add!(bigint_sub!(x2566, x2536, 4), x5, 4);
    let x2578: BytePoly_4 = bigint_nondet_inv!(ctx, x2577, x5, 4);
    let x2579: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x2576, x2578, 8), x5, 4);
    let x2580: BytePoly_8 = bigint_add!(bigint_sub!(bigint_mul!(x2579, x2577, 8), x2576, 8), x5, 8);
    let x2581: BytePoly_9 = bigint_nondet_quot!(ctx, x2580, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x2580, bigint_mul!(x2581, x5, 13), 13),
        73156,
        4,
    )?;
    let x2582: BytePoly_8 = bigint_mul!(x2579, x2579, 8);
    let x2583: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2582, x2536, 8), x5, 8), x2566, 8),
        x5,
        8
    );
    let x2584: BytePoly_9 = bigint_nondet_quot!(ctx, x2583, x5, 9);
    let x2585: BytePoly_4 = bigint_nondet_rem!(ctx, x2583, x5, 4);
    let x2586: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x5,
                bigint_add!(
                    bigint_mul!(x2579, x2585, 8),
                    bigint_add!(bigint_sub!(x2538, bigint_mul!(x2579, x2536, 8), 8), x5, 8),
                    8
                ),
                8
            ),
            x5,
            8
        ),
        x5,
        8
    );
    let x2587: BytePoly_9 = bigint_nondet_quot!(ctx, x2586, x5, 9);
    let x2588: BytePoly_4 = bigint_nondet_rem!(ctx, x2586, x5, 4);
    let x2589: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2582, bigint_mul!(x2584, x5, 13), 13),
                        x2536,
                        13
                    ),
                    x2566,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x2585,
        13
    );
    eqz(ctx, &x2589, 73156, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2587, x5, 13), x2588, 13),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2579, bigint_sub!(x2536, x2585, 4), 8),
                        x2538,
                        8
                    ),
                    x5,
                    8
                ),
                x5,
                8
            ),
            13
        ),
        73156,
        4,
    )?;
    let x2590: BytePoly_5 = bigint_add!(
        bigint_mul!(x2585, x2573, 5),
        bigint_mul!(x2536, x2575, 5),
        5
    );
    let x2591: BytePoly_5 = bigint_add!(
        bigint_mul!(x2588, x2573, 5),
        bigint_mul!(x2538, x2575, 5),
        5
    );
    let x2592: BytePoly_6 = bigint_nondet_quot!(ctx, x2590, x5, 6);
    let x2593: BytePoly_4 = bigint_nondet_rem!(ctx, x2590, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2592, x5, 10), x2593, 10),
            x2590,
            10
        ),
        48771,
        4,
    )?;
    let x2594: BytePoly_6 = bigint_nondet_quot!(ctx, x2591, x5, 6);
    let x2595: BytePoly_4 = bigint_nondet_rem!(ctx, x2591, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2594, x5, 10), x2595, 10),
            x2591,
            10
        ),
        48771,
        4,
    )?;
    let x2596: BytePoly_8 = bigint_mul!(x2566, x2566, 8);
    let x2597: BytePoly_9 = bigint_nondet_quot!(ctx, x2596, x5, 9);
    let x2598: BytePoly_4 = bigint_nondet_rem!(ctx, x2596, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2597, x5, 13), x2598, 13),
            x2596,
            13
        ),
        73156,
        4,
    )?;
    let x2599: BytePoly_5 = bigint_add!(bigint_mul!(x2598, x0, 5), x4, 5);
    let x2600: BytePoly_6 = bigint_nondet_quot!(ctx, x2599, x5, 6);
    let x2601: BytePoly_4 = bigint_nondet_rem!(ctx, x2599, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2600, x5, 10), x2601, 10),
            x2599,
            10
        ),
        48771,
        4,
    )?;
    let x2602: BytePoly_4 = bigint_add!(x2572, x2572, 4);
    let x2603: BytePoly_4 = bigint_nondet_quot!(ctx, x2602, x5, 4);
    let x2604: BytePoly_4 = bigint_nondet_rem!(ctx, x2602, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2603, x5, 8), x2604, 8), x2602, 8),
        32515,
        2,
    )?;
    let x2605: BytePoly_4 = bigint_nondet_inv!(ctx, x2604, x5, 4);
    let x2606: BytePoly_8 = bigint_mul!(x2604, x2605, 8);
    let x2607: BytePoly_9 = bigint_nondet_quot!(ctx, x2606, x5, 9);
    let x2608: BytePoly_4 = bigint_nondet_rem!(ctx, x2606, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2607, x5, 13), x2608, 13),
            x2606,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x2608, x2, 4), 34, 1)?;
    let x2609: BytePoly_8 = bigint_mul!(x2601, x2605, 8);
    let x2610: BytePoly_9 = bigint_nondet_quot!(ctx, x2609, x5, 9);
    let x2611: BytePoly_4 = bigint_nondet_rem!(ctx, x2609, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2610, x5, 13), x2611, 13),
            x2609,
            13
        ),
        73156,
        4,
    )?;
    let x2612: BytePoly_8 = bigint_mul!(x2611, x2566, 8);
    let x2613: BytePoly_9 = bigint_nondet_quot!(ctx, x2612, x5, 9);
    let x2614: BytePoly_4 = bigint_nondet_rem!(ctx, x2612, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2613, x5, 13), x2614, 13),
            x2612,
            13
        ),
        73156,
        4,
    )?;
    let x2615: BytePoly_4 = bigint_add!(bigint_sub!(x2572, x2614, 4), x5, 4);
    let x2616: BytePoly_4 = bigint_nondet_quot!(ctx, x2615, x5, 4);
    let x2617: BytePoly_4 = bigint_nondet_rem!(ctx, x2615, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2616, x5, 8), x2617, 8), x2615, 8),
        32515,
        2,
    )?;
    let x2618: BytePoly_8 = bigint_mul!(x2611, x2611, 8);
    let x2619: BytePoly_9 = bigint_nondet_quot!(ctx, x2618, x5, 9);
    let x2620: BytePoly_4 = bigint_nondet_rem!(ctx, x2618, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2619, x5, 13), x2620, 13),
            x2618,
            13
        ),
        73156,
        4,
    )?;
    let x2621: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2620, x2566, 4), x5, 4), x2566, 4),
        x5,
        4
    );
    let x2622: BytePoly_4 = bigint_nondet_quot!(ctx, x2621, x5, 4);
    let x2623: BytePoly_4 = bigint_nondet_rem!(ctx, x2621, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2622, x5, 8), x2623, 8), x2621, 8),
        32515,
        2,
    )?;
    let x2624: BytePoly_8 = bigint_mul!(x2611, x2623, 8);
    let x2625: BytePoly_9 = bigint_nondet_quot!(ctx, x2624, x5, 9);
    let x2626: BytePoly_4 = bigint_nondet_rem!(ctx, x2624, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2625, x5, 13), x2626, 13),
            x2624,
            13
        ),
        73156,
        4,
    )?;
    let x2627: BytePoly_4 = bigint_add!(bigint_sub!(x5, bigint_add!(x2626, x2617, 4), 4), x5, 4);
    let x2628: BytePoly_4 = bigint_nondet_quot!(ctx, x2627, x5, 4);
    let x2629: BytePoly_4 = bigint_nondet_rem!(ctx, x2627, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2628, x5, 8), x2629, 8), x2627, 8),
        32515,
        2,
    )?;
    let x2630: BytePoly_1 = bigint_nondet_rem!(ctx, x2574, x1, 1);
    let x2631: BytePoly_4 = bigint_nondet_quot!(ctx, x2574, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2631, x1, 5), x2630, 5), x2574, 5),
        32515,
        2,
    )?;
    let x2632: BytePoly_1 = bigint_sub!(x2, x2630, 1);
    eqz(ctx, &bigint_mul!(x2630, x2632, 2), 8131, 2)?;
    let x2633: BytePoly_4 = bigint_add!(bigint_sub!(x2629, x2595, 4), x5, 4);
    let x2634: BytePoly_4 = bigint_add!(bigint_sub!(x2623, x2593, 4), x5, 4);
    let x2635: BytePoly_4 = bigint_nondet_inv!(ctx, x2634, x5, 4);
    let x2636: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x2633, x2635, 8), x5, 4);
    let x2637: BytePoly_8 = bigint_add!(bigint_sub!(bigint_mul!(x2636, x2634, 8), x2633, 8), x5, 8);
    let x2638: BytePoly_9 = bigint_nondet_quot!(ctx, x2637, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x2637, bigint_mul!(x2638, x5, 13), 13),
        73156,
        4,
    )?;
    let x2639: BytePoly_8 = bigint_mul!(x2636, x2636, 8);
    let x2640: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2639, x2593, 8), x5, 8), x2623, 8),
        x5,
        8
    );
    let x2641: BytePoly_9 = bigint_nondet_quot!(ctx, x2640, x5, 9);
    let x2642: BytePoly_4 = bigint_nondet_rem!(ctx, x2640, x5, 4);
    let x2643: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x5,
                bigint_add!(
                    bigint_mul!(x2636, x2642, 8),
                    bigint_add!(bigint_sub!(x2595, bigint_mul!(x2636, x2593, 8), 8), x5, 8),
                    8
                ),
                8
            ),
            x5,
            8
        ),
        x5,
        8
    );
    let x2644: BytePoly_9 = bigint_nondet_quot!(ctx, x2643, x5, 9);
    let x2645: BytePoly_4 = bigint_nondet_rem!(ctx, x2643, x5, 4);
    let x2646: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2639, bigint_mul!(x2641, x5, 13), 13),
                        x2593,
                        13
                    ),
                    x2623,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x2642,
        13
    );
    eqz(ctx, &x2646, 73156, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2644, x5, 13), x2645, 13),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2636, bigint_sub!(x2593, x2642, 4), 8),
                        x2595,
                        8
                    ),
                    x5,
                    8
                ),
                x5,
                8
            ),
            13
        ),
        73156,
        4,
    )?;
    let x2647: BytePoly_5 = bigint_add!(
        bigint_mul!(x2642, x2630, 5),
        bigint_mul!(x2593, x2632, 5),
        5
    );
    let x2648: BytePoly_5 = bigint_add!(
        bigint_mul!(x2645, x2630, 5),
        bigint_mul!(x2595, x2632, 5),
        5
    );
    let x2649: BytePoly_6 = bigint_nondet_quot!(ctx, x2647, x5, 6);
    let x2650: BytePoly_4 = bigint_nondet_rem!(ctx, x2647, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2649, x5, 10), x2650, 10),
            x2647,
            10
        ),
        48771,
        4,
    )?;
    let x2651: BytePoly_6 = bigint_nondet_quot!(ctx, x2648, x5, 6);
    let x2652: BytePoly_4 = bigint_nondet_rem!(ctx, x2648, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2651, x5, 10), x2652, 10),
            x2648,
            10
        ),
        48771,
        4,
    )?;
    let x2653: BytePoly_8 = bigint_mul!(x2623, x2623, 8);
    let x2654: BytePoly_9 = bigint_nondet_quot!(ctx, x2653, x5, 9);
    let x2655: BytePoly_4 = bigint_nondet_rem!(ctx, x2653, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2654, x5, 13), x2655, 13),
            x2653,
            13
        ),
        73156,
        4,
    )?;
    let x2656: BytePoly_5 = bigint_add!(bigint_mul!(x2655, x0, 5), x4, 5);
    let x2657: BytePoly_6 = bigint_nondet_quot!(ctx, x2656, x5, 6);
    let x2658: BytePoly_4 = bigint_nondet_rem!(ctx, x2656, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2657, x5, 10), x2658, 10),
            x2656,
            10
        ),
        48771,
        4,
    )?;
    let x2659: BytePoly_4 = bigint_add!(x2629, x2629, 4);
    let x2660: BytePoly_4 = bigint_nondet_quot!(ctx, x2659, x5, 4);
    let x2661: BytePoly_4 = bigint_nondet_rem!(ctx, x2659, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2660, x5, 8), x2661, 8), x2659, 8),
        32515,
        2,
    )?;
    let x2662: BytePoly_4 = bigint_nondet_inv!(ctx, x2661, x5, 4);
    let x2663: BytePoly_8 = bigint_mul!(x2661, x2662, 8);
    let x2664: BytePoly_9 = bigint_nondet_quot!(ctx, x2663, x5, 9);
    let x2665: BytePoly_4 = bigint_nondet_rem!(ctx, x2663, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2664, x5, 13), x2665, 13),
            x2663,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x2665, x2, 4), 34, 1)?;
    let x2666: BytePoly_8 = bigint_mul!(x2658, x2662, 8);
    let x2667: BytePoly_9 = bigint_nondet_quot!(ctx, x2666, x5, 9);
    let x2668: BytePoly_4 = bigint_nondet_rem!(ctx, x2666, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2667, x5, 13), x2668, 13),
            x2666,
            13
        ),
        73156,
        4,
    )?;
    let x2669: BytePoly_8 = bigint_mul!(x2668, x2623, 8);
    let x2670: BytePoly_9 = bigint_nondet_quot!(ctx, x2669, x5, 9);
    let x2671: BytePoly_4 = bigint_nondet_rem!(ctx, x2669, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2670, x5, 13), x2671, 13),
            x2669,
            13
        ),
        73156,
        4,
    )?;
    let x2672: BytePoly_4 = bigint_add!(bigint_sub!(x2629, x2671, 4), x5, 4);
    let x2673: BytePoly_4 = bigint_nondet_quot!(ctx, x2672, x5, 4);
    let x2674: BytePoly_4 = bigint_nondet_rem!(ctx, x2672, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2673, x5, 8), x2674, 8), x2672, 8),
        32515,
        2,
    )?;
    let x2675: BytePoly_8 = bigint_mul!(x2668, x2668, 8);
    let x2676: BytePoly_9 = bigint_nondet_quot!(ctx, x2675, x5, 9);
    let x2677: BytePoly_4 = bigint_nondet_rem!(ctx, x2675, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2676, x5, 13), x2677, 13),
            x2675,
            13
        ),
        73156,
        4,
    )?;
    let x2678: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2677, x2623, 4), x5, 4), x2623, 4),
        x5,
        4
    );
    let x2679: BytePoly_4 = bigint_nondet_quot!(ctx, x2678, x5, 4);
    let x2680: BytePoly_4 = bigint_nondet_rem!(ctx, x2678, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2679, x5, 8), x2680, 8), x2678, 8),
        32515,
        2,
    )?;
    let x2681: BytePoly_8 = bigint_mul!(x2668, x2680, 8);
    let x2682: BytePoly_9 = bigint_nondet_quot!(ctx, x2681, x5, 9);
    let x2683: BytePoly_4 = bigint_nondet_rem!(ctx, x2681, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2682, x5, 13), x2683, 13),
            x2681,
            13
        ),
        73156,
        4,
    )?;
    let x2684: BytePoly_4 = bigint_add!(bigint_sub!(x5, bigint_add!(x2683, x2674, 4), 4), x5, 4);
    let x2685: BytePoly_4 = bigint_nondet_quot!(ctx, x2684, x5, 4);
    let x2686: BytePoly_4 = bigint_nondet_rem!(ctx, x2684, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2685, x5, 8), x2686, 8), x2684, 8),
        32515,
        2,
    )?;
    let x2687: BytePoly_1 = bigint_nondet_rem!(ctx, x2631, x1, 1);
    let x2688: BytePoly_4 = bigint_nondet_quot!(ctx, x2631, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2688, x1, 5), x2687, 5), x2631, 5),
        32515,
        2,
    )?;
    let x2689: BytePoly_1 = bigint_sub!(x2, x2687, 1);
    eqz(ctx, &bigint_mul!(x2687, x2689, 2), 8131, 2)?;
    let x2690: BytePoly_4 = bigint_add!(bigint_sub!(x2686, x2652, 4), x5, 4);
    let x2691: BytePoly_4 = bigint_add!(bigint_sub!(x2680, x2650, 4), x5, 4);
    let x2692: BytePoly_4 = bigint_nondet_inv!(ctx, x2691, x5, 4);
    let x2693: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x2690, x2692, 8), x5, 4);
    let x2694: BytePoly_8 = bigint_add!(bigint_sub!(bigint_mul!(x2693, x2691, 8), x2690, 8), x5, 8);
    let x2695: BytePoly_9 = bigint_nondet_quot!(ctx, x2694, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x2694, bigint_mul!(x2695, x5, 13), 13),
        73156,
        4,
    )?;
    let x2696: BytePoly_8 = bigint_mul!(x2693, x2693, 8);
    let x2697: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2696, x2650, 8), x5, 8), x2680, 8),
        x5,
        8
    );
    let x2698: BytePoly_9 = bigint_nondet_quot!(ctx, x2697, x5, 9);
    let x2699: BytePoly_4 = bigint_nondet_rem!(ctx, x2697, x5, 4);
    let x2700: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x5,
                bigint_add!(
                    bigint_mul!(x2693, x2699, 8),
                    bigint_add!(bigint_sub!(x2652, bigint_mul!(x2693, x2650, 8), 8), x5, 8),
                    8
                ),
                8
            ),
            x5,
            8
        ),
        x5,
        8
    );
    let x2701: BytePoly_9 = bigint_nondet_quot!(ctx, x2700, x5, 9);
    let x2702: BytePoly_4 = bigint_nondet_rem!(ctx, x2700, x5, 4);
    let x2703: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2696, bigint_mul!(x2698, x5, 13), 13),
                        x2650,
                        13
                    ),
                    x2680,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x2699,
        13
    );
    eqz(ctx, &x2703, 73156, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2701, x5, 13), x2702, 13),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2693, bigint_sub!(x2650, x2699, 4), 8),
                        x2652,
                        8
                    ),
                    x5,
                    8
                ),
                x5,
                8
            ),
            13
        ),
        73156,
        4,
    )?;
    let x2704: BytePoly_5 = bigint_add!(
        bigint_mul!(x2699, x2687, 5),
        bigint_mul!(x2650, x2689, 5),
        5
    );
    let x2705: BytePoly_5 = bigint_add!(
        bigint_mul!(x2702, x2687, 5),
        bigint_mul!(x2652, x2689, 5),
        5
    );
    let x2706: BytePoly_6 = bigint_nondet_quot!(ctx, x2704, x5, 6);
    let x2707: BytePoly_4 = bigint_nondet_rem!(ctx, x2704, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2706, x5, 10), x2707, 10),
            x2704,
            10
        ),
        48771,
        4,
    )?;
    let x2708: BytePoly_6 = bigint_nondet_quot!(ctx, x2705, x5, 6);
    let x2709: BytePoly_4 = bigint_nondet_rem!(ctx, x2705, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2708, x5, 10), x2709, 10),
            x2705,
            10
        ),
        48771,
        4,
    )?;
    let x2710: BytePoly_8 = bigint_mul!(x2680, x2680, 8);
    let x2711: BytePoly_9 = bigint_nondet_quot!(ctx, x2710, x5, 9);
    let x2712: BytePoly_4 = bigint_nondet_rem!(ctx, x2710, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2711, x5, 13), x2712, 13),
            x2710,
            13
        ),
        73156,
        4,
    )?;
    let x2713: BytePoly_5 = bigint_add!(bigint_mul!(x2712, x0, 5), x4, 5);
    let x2714: BytePoly_6 = bigint_nondet_quot!(ctx, x2713, x5, 6);
    let x2715: BytePoly_4 = bigint_nondet_rem!(ctx, x2713, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2714, x5, 10), x2715, 10),
            x2713,
            10
        ),
        48771,
        4,
    )?;
    let x2716: BytePoly_4 = bigint_add!(x2686, x2686, 4);
    let x2717: BytePoly_4 = bigint_nondet_quot!(ctx, x2716, x5, 4);
    let x2718: BytePoly_4 = bigint_nondet_rem!(ctx, x2716, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2717, x5, 8), x2718, 8), x2716, 8),
        32515,
        2,
    )?;
    let x2719: BytePoly_4 = bigint_nondet_inv!(ctx, x2718, x5, 4);
    let x2720: BytePoly_8 = bigint_mul!(x2718, x2719, 8);
    let x2721: BytePoly_9 = bigint_nondet_quot!(ctx, x2720, x5, 9);
    let x2722: BytePoly_4 = bigint_nondet_rem!(ctx, x2720, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2721, x5, 13), x2722, 13),
            x2720,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x2722, x2, 4), 34, 1)?;
    let x2723: BytePoly_8 = bigint_mul!(x2715, x2719, 8);
    let x2724: BytePoly_9 = bigint_nondet_quot!(ctx, x2723, x5, 9);
    let x2725: BytePoly_4 = bigint_nondet_rem!(ctx, x2723, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2724, x5, 13), x2725, 13),
            x2723,
            13
        ),
        73156,
        4,
    )?;
    let x2726: BytePoly_8 = bigint_mul!(x2725, x2680, 8);
    let x2727: BytePoly_9 = bigint_nondet_quot!(ctx, x2726, x5, 9);
    let x2728: BytePoly_4 = bigint_nondet_rem!(ctx, x2726, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2727, x5, 13), x2728, 13),
            x2726,
            13
        ),
        73156,
        4,
    )?;
    let x2729: BytePoly_4 = bigint_add!(bigint_sub!(x2686, x2728, 4), x5, 4);
    let x2730: BytePoly_4 = bigint_nondet_quot!(ctx, x2729, x5, 4);
    let x2731: BytePoly_4 = bigint_nondet_rem!(ctx, x2729, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2730, x5, 8), x2731, 8), x2729, 8),
        32515,
        2,
    )?;
    let x2732: BytePoly_8 = bigint_mul!(x2725, x2725, 8);
    let x2733: BytePoly_9 = bigint_nondet_quot!(ctx, x2732, x5, 9);
    let x2734: BytePoly_4 = bigint_nondet_rem!(ctx, x2732, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2733, x5, 13), x2734, 13),
            x2732,
            13
        ),
        73156,
        4,
    )?;
    let x2735: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2734, x2680, 4), x5, 4), x2680, 4),
        x5,
        4
    );
    let x2736: BytePoly_4 = bigint_nondet_quot!(ctx, x2735, x5, 4);
    let x2737: BytePoly_4 = bigint_nondet_rem!(ctx, x2735, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2736, x5, 8), x2737, 8), x2735, 8),
        32515,
        2,
    )?;
    let x2738: BytePoly_8 = bigint_mul!(x2725, x2737, 8);
    let x2739: BytePoly_9 = bigint_nondet_quot!(ctx, x2738, x5, 9);
    let x2740: BytePoly_4 = bigint_nondet_rem!(ctx, x2738, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2739, x5, 13), x2740, 13),
            x2738,
            13
        ),
        73156,
        4,
    )?;
    let x2741: BytePoly_4 = bigint_add!(bigint_sub!(x5, bigint_add!(x2740, x2731, 4), 4), x5, 4);
    let x2742: BytePoly_4 = bigint_nondet_quot!(ctx, x2741, x5, 4);
    let x2743: BytePoly_4 = bigint_nondet_rem!(ctx, x2741, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2742, x5, 8), x2743, 8), x2741, 8),
        32515,
        2,
    )?;
    let x2744: BytePoly_1 = bigint_nondet_rem!(ctx, x2688, x1, 1);
    let x2745: BytePoly_4 = bigint_nondet_quot!(ctx, x2688, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2745, x1, 5), x2744, 5), x2688, 5),
        32515,
        2,
    )?;
    let x2746: BytePoly_1 = bigint_sub!(x2, x2744, 1);
    eqz(ctx, &bigint_mul!(x2744, x2746, 2), 8131, 2)?;
    let x2747: BytePoly_4 = bigint_add!(bigint_sub!(x2743, x2709, 4), x5, 4);
    let x2748: BytePoly_4 = bigint_add!(bigint_sub!(x2737, x2707, 4), x5, 4);
    let x2749: BytePoly_4 = bigint_nondet_inv!(ctx, x2748, x5, 4);
    let x2750: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x2747, x2749, 8), x5, 4);
    let x2751: BytePoly_8 = bigint_add!(bigint_sub!(bigint_mul!(x2750, x2748, 8), x2747, 8), x5, 8);
    let x2752: BytePoly_9 = bigint_nondet_quot!(ctx, x2751, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x2751, bigint_mul!(x2752, x5, 13), 13),
        73156,
        4,
    )?;
    let x2753: BytePoly_8 = bigint_mul!(x2750, x2750, 8);
    let x2754: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2753, x2707, 8), x5, 8), x2737, 8),
        x5,
        8
    );
    let x2755: BytePoly_9 = bigint_nondet_quot!(ctx, x2754, x5, 9);
    let x2756: BytePoly_4 = bigint_nondet_rem!(ctx, x2754, x5, 4);
    let x2757: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x5,
                bigint_add!(
                    bigint_mul!(x2750, x2756, 8),
                    bigint_add!(bigint_sub!(x2709, bigint_mul!(x2750, x2707, 8), 8), x5, 8),
                    8
                ),
                8
            ),
            x5,
            8
        ),
        x5,
        8
    );
    let x2758: BytePoly_9 = bigint_nondet_quot!(ctx, x2757, x5, 9);
    let x2759: BytePoly_4 = bigint_nondet_rem!(ctx, x2757, x5, 4);
    let x2760: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2753, bigint_mul!(x2755, x5, 13), 13),
                        x2707,
                        13
                    ),
                    x2737,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x2756,
        13
    );
    eqz(ctx, &x2760, 73156, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2758, x5, 13), x2759, 13),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2750, bigint_sub!(x2707, x2756, 4), 8),
                        x2709,
                        8
                    ),
                    x5,
                    8
                ),
                x5,
                8
            ),
            13
        ),
        73156,
        4,
    )?;
    let x2761: BytePoly_5 = bigint_add!(
        bigint_mul!(x2756, x2744, 5),
        bigint_mul!(x2707, x2746, 5),
        5
    );
    let x2762: BytePoly_5 = bigint_add!(
        bigint_mul!(x2759, x2744, 5),
        bigint_mul!(x2709, x2746, 5),
        5
    );
    let x2763: BytePoly_6 = bigint_nondet_quot!(ctx, x2761, x5, 6);
    let x2764: BytePoly_4 = bigint_nondet_rem!(ctx, x2761, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2763, x5, 10), x2764, 10),
            x2761,
            10
        ),
        48771,
        4,
    )?;
    let x2765: BytePoly_6 = bigint_nondet_quot!(ctx, x2762, x5, 6);
    let x2766: BytePoly_4 = bigint_nondet_rem!(ctx, x2762, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2765, x5, 10), x2766, 10),
            x2762,
            10
        ),
        48771,
        4,
    )?;
    let x2767: BytePoly_8 = bigint_mul!(x2737, x2737, 8);
    let x2768: BytePoly_9 = bigint_nondet_quot!(ctx, x2767, x5, 9);
    let x2769: BytePoly_4 = bigint_nondet_rem!(ctx, x2767, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2768, x5, 13), x2769, 13),
            x2767,
            13
        ),
        73156,
        4,
    )?;
    let x2770: BytePoly_5 = bigint_add!(bigint_mul!(x2769, x0, 5), x4, 5);
    let x2771: BytePoly_6 = bigint_nondet_quot!(ctx, x2770, x5, 6);
    let x2772: BytePoly_4 = bigint_nondet_rem!(ctx, x2770, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2771, x5, 10), x2772, 10),
            x2770,
            10
        ),
        48771,
        4,
    )?;
    let x2773: BytePoly_4 = bigint_add!(x2743, x2743, 4);
    let x2774: BytePoly_4 = bigint_nondet_quot!(ctx, x2773, x5, 4);
    let x2775: BytePoly_4 = bigint_nondet_rem!(ctx, x2773, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2774, x5, 8), x2775, 8), x2773, 8),
        32515,
        2,
    )?;
    let x2776: BytePoly_4 = bigint_nondet_inv!(ctx, x2775, x5, 4);
    let x2777: BytePoly_8 = bigint_mul!(x2775, x2776, 8);
    let x2778: BytePoly_9 = bigint_nondet_quot!(ctx, x2777, x5, 9);
    let x2779: BytePoly_4 = bigint_nondet_rem!(ctx, x2777, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2778, x5, 13), x2779, 13),
            x2777,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x2779, x2, 4), 34, 1)?;
    let x2780: BytePoly_8 = bigint_mul!(x2772, x2776, 8);
    let x2781: BytePoly_9 = bigint_nondet_quot!(ctx, x2780, x5, 9);
    let x2782: BytePoly_4 = bigint_nondet_rem!(ctx, x2780, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2781, x5, 13), x2782, 13),
            x2780,
            13
        ),
        73156,
        4,
    )?;
    let x2783: BytePoly_8 = bigint_mul!(x2782, x2737, 8);
    let x2784: BytePoly_9 = bigint_nondet_quot!(ctx, x2783, x5, 9);
    let x2785: BytePoly_4 = bigint_nondet_rem!(ctx, x2783, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2784, x5, 13), x2785, 13),
            x2783,
            13
        ),
        73156,
        4,
    )?;
    let x2786: BytePoly_4 = bigint_add!(bigint_sub!(x2743, x2785, 4), x5, 4);
    let x2787: BytePoly_4 = bigint_nondet_quot!(ctx, x2786, x5, 4);
    let x2788: BytePoly_4 = bigint_nondet_rem!(ctx, x2786, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2787, x5, 8), x2788, 8), x2786, 8),
        32515,
        2,
    )?;
    let x2789: BytePoly_8 = bigint_mul!(x2782, x2782, 8);
    let x2790: BytePoly_9 = bigint_nondet_quot!(ctx, x2789, x5, 9);
    let x2791: BytePoly_4 = bigint_nondet_rem!(ctx, x2789, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2790, x5, 13), x2791, 13),
            x2789,
            13
        ),
        73156,
        4,
    )?;
    let x2792: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2791, x2737, 4), x5, 4), x2737, 4),
        x5,
        4
    );
    let x2793: BytePoly_4 = bigint_nondet_quot!(ctx, x2792, x5, 4);
    let x2794: BytePoly_4 = bigint_nondet_rem!(ctx, x2792, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2793, x5, 8), x2794, 8), x2792, 8),
        32515,
        2,
    )?;
    let x2795: BytePoly_8 = bigint_mul!(x2782, x2794, 8);
    let x2796: BytePoly_9 = bigint_nondet_quot!(ctx, x2795, x5, 9);
    let x2797: BytePoly_4 = bigint_nondet_rem!(ctx, x2795, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2796, x5, 13), x2797, 13),
            x2795,
            13
        ),
        73156,
        4,
    )?;
    let x2798: BytePoly_4 = bigint_add!(bigint_sub!(x5, bigint_add!(x2797, x2788, 4), 4), x5, 4);
    let x2799: BytePoly_4 = bigint_nondet_quot!(ctx, x2798, x5, 4);
    let x2800: BytePoly_4 = bigint_nondet_rem!(ctx, x2798, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2799, x5, 8), x2800, 8), x2798, 8),
        32515,
        2,
    )?;
    let x2801: BytePoly_1 = bigint_nondet_rem!(ctx, x2745, x1, 1);
    let x2802: BytePoly_4 = bigint_nondet_quot!(ctx, x2745, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2802, x1, 5), x2801, 5), x2745, 5),
        32515,
        2,
    )?;
    let x2803: BytePoly_1 = bigint_sub!(x2, x2801, 1);
    eqz(ctx, &bigint_mul!(x2801, x2803, 2), 8131, 2)?;
    let x2804: BytePoly_4 = bigint_add!(bigint_sub!(x2800, x2766, 4), x5, 4);
    let x2805: BytePoly_4 = bigint_add!(bigint_sub!(x2794, x2764, 4), x5, 4);
    let x2806: BytePoly_4 = bigint_nondet_inv!(ctx, x2805, x5, 4);
    let x2807: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x2804, x2806, 8), x5, 4);
    let x2808: BytePoly_8 = bigint_add!(bigint_sub!(bigint_mul!(x2807, x2805, 8), x2804, 8), x5, 8);
    let x2809: BytePoly_9 = bigint_nondet_quot!(ctx, x2808, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x2808, bigint_mul!(x2809, x5, 13), 13),
        73156,
        4,
    )?;
    let x2810: BytePoly_8 = bigint_mul!(x2807, x2807, 8);
    let x2811: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2810, x2764, 8), x5, 8), x2794, 8),
        x5,
        8
    );
    let x2812: BytePoly_9 = bigint_nondet_quot!(ctx, x2811, x5, 9);
    let x2813: BytePoly_4 = bigint_nondet_rem!(ctx, x2811, x5, 4);
    let x2814: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x5,
                bigint_add!(
                    bigint_mul!(x2807, x2813, 8),
                    bigint_add!(bigint_sub!(x2766, bigint_mul!(x2807, x2764, 8), 8), x5, 8),
                    8
                ),
                8
            ),
            x5,
            8
        ),
        x5,
        8
    );
    let x2815: BytePoly_9 = bigint_nondet_quot!(ctx, x2814, x5, 9);
    let x2816: BytePoly_4 = bigint_nondet_rem!(ctx, x2814, x5, 4);
    let x2817: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2810, bigint_mul!(x2812, x5, 13), 13),
                        x2764,
                        13
                    ),
                    x2794,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x2813,
        13
    );
    eqz(ctx, &x2817, 73156, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2815, x5, 13), x2816, 13),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2807, bigint_sub!(x2764, x2813, 4), 8),
                        x2766,
                        8
                    ),
                    x5,
                    8
                ),
                x5,
                8
            ),
            13
        ),
        73156,
        4,
    )?;
    let x2818: BytePoly_5 = bigint_add!(
        bigint_mul!(x2813, x2801, 5),
        bigint_mul!(x2764, x2803, 5),
        5
    );
    let x2819: BytePoly_5 = bigint_add!(
        bigint_mul!(x2816, x2801, 5),
        bigint_mul!(x2766, x2803, 5),
        5
    );
    let x2820: BytePoly_6 = bigint_nondet_quot!(ctx, x2818, x5, 6);
    let x2821: BytePoly_4 = bigint_nondet_rem!(ctx, x2818, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2820, x5, 10), x2821, 10),
            x2818,
            10
        ),
        48771,
        4,
    )?;
    let x2822: BytePoly_6 = bigint_nondet_quot!(ctx, x2819, x5, 6);
    let x2823: BytePoly_4 = bigint_nondet_rem!(ctx, x2819, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2822, x5, 10), x2823, 10),
            x2819,
            10
        ),
        48771,
        4,
    )?;
    let x2824: BytePoly_8 = bigint_mul!(x2794, x2794, 8);
    let x2825: BytePoly_9 = bigint_nondet_quot!(ctx, x2824, x5, 9);
    let x2826: BytePoly_4 = bigint_nondet_rem!(ctx, x2824, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2825, x5, 13), x2826, 13),
            x2824,
            13
        ),
        73156,
        4,
    )?;
    let x2827: BytePoly_5 = bigint_add!(bigint_mul!(x2826, x0, 5), x4, 5);
    let x2828: BytePoly_6 = bigint_nondet_quot!(ctx, x2827, x5, 6);
    let x2829: BytePoly_4 = bigint_nondet_rem!(ctx, x2827, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2828, x5, 10), x2829, 10),
            x2827,
            10
        ),
        48771,
        4,
    )?;
    let x2830: BytePoly_4 = bigint_add!(x2800, x2800, 4);
    let x2831: BytePoly_4 = bigint_nondet_quot!(ctx, x2830, x5, 4);
    let x2832: BytePoly_4 = bigint_nondet_rem!(ctx, x2830, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2831, x5, 8), x2832, 8), x2830, 8),
        32515,
        2,
    )?;
    let x2833: BytePoly_4 = bigint_nondet_inv!(ctx, x2832, x5, 4);
    let x2834: BytePoly_8 = bigint_mul!(x2832, x2833, 8);
    let x2835: BytePoly_9 = bigint_nondet_quot!(ctx, x2834, x5, 9);
    let x2836: BytePoly_4 = bigint_nondet_rem!(ctx, x2834, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2835, x5, 13), x2836, 13),
            x2834,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x2836, x2, 4), 34, 1)?;
    let x2837: BytePoly_8 = bigint_mul!(x2829, x2833, 8);
    let x2838: BytePoly_9 = bigint_nondet_quot!(ctx, x2837, x5, 9);
    let x2839: BytePoly_4 = bigint_nondet_rem!(ctx, x2837, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2838, x5, 13), x2839, 13),
            x2837,
            13
        ),
        73156,
        4,
    )?;
    let x2840: BytePoly_8 = bigint_mul!(x2839, x2794, 8);
    let x2841: BytePoly_9 = bigint_nondet_quot!(ctx, x2840, x5, 9);
    let x2842: BytePoly_4 = bigint_nondet_rem!(ctx, x2840, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2841, x5, 13), x2842, 13),
            x2840,
            13
        ),
        73156,
        4,
    )?;
    let x2843: BytePoly_4 = bigint_add!(bigint_sub!(x2800, x2842, 4), x5, 4);
    let x2844: BytePoly_4 = bigint_nondet_quot!(ctx, x2843, x5, 4);
    let x2845: BytePoly_4 = bigint_nondet_rem!(ctx, x2843, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2844, x5, 8), x2845, 8), x2843, 8),
        32515,
        2,
    )?;
    let x2846: BytePoly_8 = bigint_mul!(x2839, x2839, 8);
    let x2847: BytePoly_9 = bigint_nondet_quot!(ctx, x2846, x5, 9);
    let x2848: BytePoly_4 = bigint_nondet_rem!(ctx, x2846, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2847, x5, 13), x2848, 13),
            x2846,
            13
        ),
        73156,
        4,
    )?;
    let x2849: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2848, x2794, 4), x5, 4), x2794, 4),
        x5,
        4
    );
    let x2850: BytePoly_4 = bigint_nondet_quot!(ctx, x2849, x5, 4);
    let x2851: BytePoly_4 = bigint_nondet_rem!(ctx, x2849, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2850, x5, 8), x2851, 8), x2849, 8),
        32515,
        2,
    )?;
    let x2852: BytePoly_8 = bigint_mul!(x2839, x2851, 8);
    let x2853: BytePoly_9 = bigint_nondet_quot!(ctx, x2852, x5, 9);
    let x2854: BytePoly_4 = bigint_nondet_rem!(ctx, x2852, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2853, x5, 13), x2854, 13),
            x2852,
            13
        ),
        73156,
        4,
    )?;
    let x2855: BytePoly_4 = bigint_add!(bigint_sub!(x5, bigint_add!(x2854, x2845, 4), 4), x5, 4);
    let x2856: BytePoly_4 = bigint_nondet_quot!(ctx, x2855, x5, 4);
    let x2857: BytePoly_4 = bigint_nondet_rem!(ctx, x2855, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2856, x5, 8), x2857, 8), x2855, 8),
        32515,
        2,
    )?;
    let x2858: BytePoly_1 = bigint_nondet_rem!(ctx, x2802, x1, 1);
    let x2859: BytePoly_4 = bigint_nondet_quot!(ctx, x2802, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2859, x1, 5), x2858, 5), x2802, 5),
        32515,
        2,
    )?;
    let x2860: BytePoly_1 = bigint_sub!(x2, x2858, 1);
    eqz(ctx, &bigint_mul!(x2858, x2860, 2), 8131, 2)?;
    let x2861: BytePoly_4 = bigint_add!(bigint_sub!(x2857, x2823, 4), x5, 4);
    let x2862: BytePoly_4 = bigint_add!(bigint_sub!(x2851, x2821, 4), x5, 4);
    let x2863: BytePoly_4 = bigint_nondet_inv!(ctx, x2862, x5, 4);
    let x2864: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x2861, x2863, 8), x5, 4);
    let x2865: BytePoly_8 = bigint_add!(bigint_sub!(bigint_mul!(x2864, x2862, 8), x2861, 8), x5, 8);
    let x2866: BytePoly_9 = bigint_nondet_quot!(ctx, x2865, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x2865, bigint_mul!(x2866, x5, 13), 13),
        73156,
        4,
    )?;
    let x2867: BytePoly_8 = bigint_mul!(x2864, x2864, 8);
    let x2868: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2867, x2821, 8), x5, 8), x2851, 8),
        x5,
        8
    );
    let x2869: BytePoly_9 = bigint_nondet_quot!(ctx, x2868, x5, 9);
    let x2870: BytePoly_4 = bigint_nondet_rem!(ctx, x2868, x5, 4);
    let x2871: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x5,
                bigint_add!(
                    bigint_mul!(x2864, x2870, 8),
                    bigint_add!(bigint_sub!(x2823, bigint_mul!(x2864, x2821, 8), 8), x5, 8),
                    8
                ),
                8
            ),
            x5,
            8
        ),
        x5,
        8
    );
    let x2872: BytePoly_9 = bigint_nondet_quot!(ctx, x2871, x5, 9);
    let x2873: BytePoly_4 = bigint_nondet_rem!(ctx, x2871, x5, 4);
    let x2874: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2867, bigint_mul!(x2869, x5, 13), 13),
                        x2821,
                        13
                    ),
                    x2851,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x2870,
        13
    );
    eqz(ctx, &x2874, 73156, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2872, x5, 13), x2873, 13),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2864, bigint_sub!(x2821, x2870, 4), 8),
                        x2823,
                        8
                    ),
                    x5,
                    8
                ),
                x5,
                8
            ),
            13
        ),
        73156,
        4,
    )?;
    let x2875: BytePoly_5 = bigint_add!(
        bigint_mul!(x2870, x2858, 5),
        bigint_mul!(x2821, x2860, 5),
        5
    );
    let x2876: BytePoly_5 = bigint_add!(
        bigint_mul!(x2873, x2858, 5),
        bigint_mul!(x2823, x2860, 5),
        5
    );
    let x2877: BytePoly_6 = bigint_nondet_quot!(ctx, x2875, x5, 6);
    let x2878: BytePoly_4 = bigint_nondet_rem!(ctx, x2875, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2877, x5, 10), x2878, 10),
            x2875,
            10
        ),
        48771,
        4,
    )?;
    let x2879: BytePoly_6 = bigint_nondet_quot!(ctx, x2876, x5, 6);
    let x2880: BytePoly_4 = bigint_nondet_rem!(ctx, x2876, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2879, x5, 10), x2880, 10),
            x2876,
            10
        ),
        48771,
        4,
    )?;
    let x2881: BytePoly_8 = bigint_mul!(x2851, x2851, 8);
    let x2882: BytePoly_9 = bigint_nondet_quot!(ctx, x2881, x5, 9);
    let x2883: BytePoly_4 = bigint_nondet_rem!(ctx, x2881, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2882, x5, 13), x2883, 13),
            x2881,
            13
        ),
        73156,
        4,
    )?;
    let x2884: BytePoly_5 = bigint_add!(bigint_mul!(x2883, x0, 5), x4, 5);
    let x2885: BytePoly_6 = bigint_nondet_quot!(ctx, x2884, x5, 6);
    let x2886: BytePoly_4 = bigint_nondet_rem!(ctx, x2884, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2885, x5, 10), x2886, 10),
            x2884,
            10
        ),
        48771,
        4,
    )?;
    let x2887: BytePoly_4 = bigint_add!(x2857, x2857, 4);
    let x2888: BytePoly_4 = bigint_nondet_quot!(ctx, x2887, x5, 4);
    let x2889: BytePoly_4 = bigint_nondet_rem!(ctx, x2887, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2888, x5, 8), x2889, 8), x2887, 8),
        32515,
        2,
    )?;
    let x2890: BytePoly_4 = bigint_nondet_inv!(ctx, x2889, x5, 4);
    let x2891: BytePoly_8 = bigint_mul!(x2889, x2890, 8);
    let x2892: BytePoly_9 = bigint_nondet_quot!(ctx, x2891, x5, 9);
    let x2893: BytePoly_4 = bigint_nondet_rem!(ctx, x2891, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2892, x5, 13), x2893, 13),
            x2891,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x2893, x2, 4), 34, 1)?;
    let x2894: BytePoly_8 = bigint_mul!(x2886, x2890, 8);
    let x2895: BytePoly_9 = bigint_nondet_quot!(ctx, x2894, x5, 9);
    let x2896: BytePoly_4 = bigint_nondet_rem!(ctx, x2894, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2895, x5, 13), x2896, 13),
            x2894,
            13
        ),
        73156,
        4,
    )?;
    let x2897: BytePoly_8 = bigint_mul!(x2896, x2851, 8);
    let x2898: BytePoly_9 = bigint_nondet_quot!(ctx, x2897, x5, 9);
    let x2899: BytePoly_4 = bigint_nondet_rem!(ctx, x2897, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2898, x5, 13), x2899, 13),
            x2897,
            13
        ),
        73156,
        4,
    )?;
    let x2900: BytePoly_4 = bigint_add!(bigint_sub!(x2857, x2899, 4), x5, 4);
    let x2901: BytePoly_4 = bigint_nondet_quot!(ctx, x2900, x5, 4);
    let x2902: BytePoly_4 = bigint_nondet_rem!(ctx, x2900, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2901, x5, 8), x2902, 8), x2900, 8),
        32515,
        2,
    )?;
    let x2903: BytePoly_8 = bigint_mul!(x2896, x2896, 8);
    let x2904: BytePoly_9 = bigint_nondet_quot!(ctx, x2903, x5, 9);
    let x2905: BytePoly_4 = bigint_nondet_rem!(ctx, x2903, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2904, x5, 13), x2905, 13),
            x2903,
            13
        ),
        73156,
        4,
    )?;
    let x2906: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2905, x2851, 4), x5, 4), x2851, 4),
        x5,
        4
    );
    let x2907: BytePoly_4 = bigint_nondet_quot!(ctx, x2906, x5, 4);
    let x2908: BytePoly_4 = bigint_nondet_rem!(ctx, x2906, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2907, x5, 8), x2908, 8), x2906, 8),
        32515,
        2,
    )?;
    let x2909: BytePoly_8 = bigint_mul!(x2896, x2908, 8);
    let x2910: BytePoly_9 = bigint_nondet_quot!(ctx, x2909, x5, 9);
    let x2911: BytePoly_4 = bigint_nondet_rem!(ctx, x2909, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2910, x5, 13), x2911, 13),
            x2909,
            13
        ),
        73156,
        4,
    )?;
    let x2912: BytePoly_4 = bigint_add!(bigint_sub!(x5, bigint_add!(x2911, x2902, 4), 4), x5, 4);
    let x2913: BytePoly_4 = bigint_nondet_quot!(ctx, x2912, x5, 4);
    let x2914: BytePoly_4 = bigint_nondet_rem!(ctx, x2912, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2913, x5, 8), x2914, 8), x2912, 8),
        32515,
        2,
    )?;
    let x2915: BytePoly_1 = bigint_nondet_rem!(ctx, x2859, x1, 1);
    let x2916: BytePoly_4 = bigint_nondet_quot!(ctx, x2859, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2916, x1, 5), x2915, 5), x2859, 5),
        32515,
        2,
    )?;
    let x2917: BytePoly_1 = bigint_sub!(x2, x2915, 1);
    eqz(ctx, &bigint_mul!(x2915, x2917, 2), 8131, 2)?;
    let x2918: BytePoly_4 = bigint_add!(bigint_sub!(x2914, x2880, 4), x5, 4);
    let x2919: BytePoly_4 = bigint_add!(bigint_sub!(x2908, x2878, 4), x5, 4);
    let x2920: BytePoly_4 = bigint_nondet_inv!(ctx, x2919, x5, 4);
    let x2921: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x2918, x2920, 8), x5, 4);
    let x2922: BytePoly_8 = bigint_add!(bigint_sub!(bigint_mul!(x2921, x2919, 8), x2918, 8), x5, 8);
    let x2923: BytePoly_9 = bigint_nondet_quot!(ctx, x2922, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x2922, bigint_mul!(x2923, x5, 13), 13),
        73156,
        4,
    )?;
    let x2924: BytePoly_8 = bigint_mul!(x2921, x2921, 8);
    let x2925: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2924, x2878, 8), x5, 8), x2908, 8),
        x5,
        8
    );
    let x2926: BytePoly_9 = bigint_nondet_quot!(ctx, x2925, x5, 9);
    let x2927: BytePoly_4 = bigint_nondet_rem!(ctx, x2925, x5, 4);
    let x2928: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x5,
                bigint_add!(
                    bigint_mul!(x2921, x2927, 8),
                    bigint_add!(bigint_sub!(x2880, bigint_mul!(x2921, x2878, 8), 8), x5, 8),
                    8
                ),
                8
            ),
            x5,
            8
        ),
        x5,
        8
    );
    let x2929: BytePoly_9 = bigint_nondet_quot!(ctx, x2928, x5, 9);
    let x2930: BytePoly_4 = bigint_nondet_rem!(ctx, x2928, x5, 4);
    let x2931: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2924, bigint_mul!(x2926, x5, 13), 13),
                        x2878,
                        13
                    ),
                    x2908,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x2927,
        13
    );
    eqz(ctx, &x2931, 73156, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2929, x5, 13), x2930, 13),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2921, bigint_sub!(x2878, x2927, 4), 8),
                        x2880,
                        8
                    ),
                    x5,
                    8
                ),
                x5,
                8
            ),
            13
        ),
        73156,
        4,
    )?;
    let x2932: BytePoly_5 = bigint_add!(
        bigint_mul!(x2927, x2915, 5),
        bigint_mul!(x2878, x2917, 5),
        5
    );
    let x2933: BytePoly_5 = bigint_add!(
        bigint_mul!(x2930, x2915, 5),
        bigint_mul!(x2880, x2917, 5),
        5
    );
    let x2934: BytePoly_6 = bigint_nondet_quot!(ctx, x2932, x5, 6);
    let x2935: BytePoly_4 = bigint_nondet_rem!(ctx, x2932, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2934, x5, 10), x2935, 10),
            x2932,
            10
        ),
        48771,
        4,
    )?;
    let x2936: BytePoly_6 = bigint_nondet_quot!(ctx, x2933, x5, 6);
    let x2937: BytePoly_4 = bigint_nondet_rem!(ctx, x2933, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2936, x5, 10), x2937, 10),
            x2933,
            10
        ),
        48771,
        4,
    )?;
    let x2938: BytePoly_8 = bigint_mul!(x2908, x2908, 8);
    let x2939: BytePoly_9 = bigint_nondet_quot!(ctx, x2938, x5, 9);
    let x2940: BytePoly_4 = bigint_nondet_rem!(ctx, x2938, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2939, x5, 13), x2940, 13),
            x2938,
            13
        ),
        73156,
        4,
    )?;
    let x2941: BytePoly_5 = bigint_add!(bigint_mul!(x2940, x0, 5), x4, 5);
    let x2942: BytePoly_6 = bigint_nondet_quot!(ctx, x2941, x5, 6);
    let x2943: BytePoly_4 = bigint_nondet_rem!(ctx, x2941, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2942, x5, 10), x2943, 10),
            x2941,
            10
        ),
        48771,
        4,
    )?;
    let x2944: BytePoly_4 = bigint_add!(x2914, x2914, 4);
    let x2945: BytePoly_4 = bigint_nondet_quot!(ctx, x2944, x5, 4);
    let x2946: BytePoly_4 = bigint_nondet_rem!(ctx, x2944, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2945, x5, 8), x2946, 8), x2944, 8),
        32515,
        2,
    )?;
    let x2947: BytePoly_4 = bigint_nondet_inv!(ctx, x2946, x5, 4);
    let x2948: BytePoly_8 = bigint_mul!(x2946, x2947, 8);
    let x2949: BytePoly_9 = bigint_nondet_quot!(ctx, x2948, x5, 9);
    let x2950: BytePoly_4 = bigint_nondet_rem!(ctx, x2948, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2949, x5, 13), x2950, 13),
            x2948,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x2950, x2, 4), 34, 1)?;
    let x2951: BytePoly_8 = bigint_mul!(x2943, x2947, 8);
    let x2952: BytePoly_9 = bigint_nondet_quot!(ctx, x2951, x5, 9);
    let x2953: BytePoly_4 = bigint_nondet_rem!(ctx, x2951, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2952, x5, 13), x2953, 13),
            x2951,
            13
        ),
        73156,
        4,
    )?;
    let x2954: BytePoly_8 = bigint_mul!(x2953, x2908, 8);
    let x2955: BytePoly_9 = bigint_nondet_quot!(ctx, x2954, x5, 9);
    let x2956: BytePoly_4 = bigint_nondet_rem!(ctx, x2954, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2955, x5, 13), x2956, 13),
            x2954,
            13
        ),
        73156,
        4,
    )?;
    let x2957: BytePoly_4 = bigint_add!(bigint_sub!(x2914, x2956, 4), x5, 4);
    let x2958: BytePoly_4 = bigint_nondet_quot!(ctx, x2957, x5, 4);
    let x2959: BytePoly_4 = bigint_nondet_rem!(ctx, x2957, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2958, x5, 8), x2959, 8), x2957, 8),
        32515,
        2,
    )?;
    let x2960: BytePoly_8 = bigint_mul!(x2953, x2953, 8);
    let x2961: BytePoly_9 = bigint_nondet_quot!(ctx, x2960, x5, 9);
    let x2962: BytePoly_4 = bigint_nondet_rem!(ctx, x2960, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2961, x5, 13), x2962, 13),
            x2960,
            13
        ),
        73156,
        4,
    )?;
    let x2963: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2962, x2908, 4), x5, 4), x2908, 4),
        x5,
        4
    );
    let x2964: BytePoly_4 = bigint_nondet_quot!(ctx, x2963, x5, 4);
    let x2965: BytePoly_4 = bigint_nondet_rem!(ctx, x2963, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2964, x5, 8), x2965, 8), x2963, 8),
        32515,
        2,
    )?;
    let x2966: BytePoly_8 = bigint_mul!(x2953, x2965, 8);
    let x2967: BytePoly_9 = bigint_nondet_quot!(ctx, x2966, x5, 9);
    let x2968: BytePoly_4 = bigint_nondet_rem!(ctx, x2966, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2967, x5, 13), x2968, 13),
            x2966,
            13
        ),
        73156,
        4,
    )?;
    let x2969: BytePoly_4 = bigint_add!(bigint_sub!(x5, bigint_add!(x2968, x2959, 4), 4), x5, 4);
    let x2970: BytePoly_4 = bigint_nondet_quot!(ctx, x2969, x5, 4);
    let x2971: BytePoly_4 = bigint_nondet_rem!(ctx, x2969, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2970, x5, 8), x2971, 8), x2969, 8),
        32515,
        2,
    )?;
    let x2972: BytePoly_1 = bigint_nondet_rem!(ctx, x2916, x1, 1);
    let x2973: BytePoly_4 = bigint_nondet_quot!(ctx, x2916, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2973, x1, 5), x2972, 5), x2916, 5),
        32515,
        2,
    )?;
    let x2974: BytePoly_1 = bigint_sub!(x2, x2972, 1);
    eqz(ctx, &bigint_mul!(x2972, x2974, 2), 8131, 2)?;
    let x2975: BytePoly_4 = bigint_add!(bigint_sub!(x2971, x2937, 4), x5, 4);
    let x2976: BytePoly_4 = bigint_add!(bigint_sub!(x2965, x2935, 4), x5, 4);
    let x2977: BytePoly_4 = bigint_nondet_inv!(ctx, x2976, x5, 4);
    let x2978: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x2975, x2977, 8), x5, 4);
    let x2979: BytePoly_8 = bigint_add!(bigint_sub!(bigint_mul!(x2978, x2976, 8), x2975, 8), x5, 8);
    let x2980: BytePoly_9 = bigint_nondet_quot!(ctx, x2979, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x2979, bigint_mul!(x2980, x5, 13), 13),
        73156,
        4,
    )?;
    let x2981: BytePoly_8 = bigint_mul!(x2978, x2978, 8);
    let x2982: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2981, x2935, 8), x5, 8), x2965, 8),
        x5,
        8
    );
    let x2983: BytePoly_9 = bigint_nondet_quot!(ctx, x2982, x5, 9);
    let x2984: BytePoly_4 = bigint_nondet_rem!(ctx, x2982, x5, 4);
    let x2985: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x5,
                bigint_add!(
                    bigint_mul!(x2978, x2984, 8),
                    bigint_add!(bigint_sub!(x2937, bigint_mul!(x2978, x2935, 8), 8), x5, 8),
                    8
                ),
                8
            ),
            x5,
            8
        ),
        x5,
        8
    );
    let x2986: BytePoly_9 = bigint_nondet_quot!(ctx, x2985, x5, 9);
    let x2987: BytePoly_4 = bigint_nondet_rem!(ctx, x2985, x5, 4);
    let x2988: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2981, bigint_mul!(x2983, x5, 13), 13),
                        x2935,
                        13
                    ),
                    x2965,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x2984,
        13
    );
    eqz(ctx, &x2988, 73156, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2986, x5, 13), x2987, 13),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2978, bigint_sub!(x2935, x2984, 4), 8),
                        x2937,
                        8
                    ),
                    x5,
                    8
                ),
                x5,
                8
            ),
            13
        ),
        73156,
        4,
    )?;
    let x2989: BytePoly_5 = bigint_add!(
        bigint_mul!(x2984, x2972, 5),
        bigint_mul!(x2935, x2974, 5),
        5
    );
    let x2990: BytePoly_5 = bigint_add!(
        bigint_mul!(x2987, x2972, 5),
        bigint_mul!(x2937, x2974, 5),
        5
    );
    let x2991: BytePoly_6 = bigint_nondet_quot!(ctx, x2989, x5, 6);
    let x2992: BytePoly_4 = bigint_nondet_rem!(ctx, x2989, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2991, x5, 10), x2992, 10),
            x2989,
            10
        ),
        48771,
        4,
    )?;
    let x2993: BytePoly_6 = bigint_nondet_quot!(ctx, x2990, x5, 6);
    let x2994: BytePoly_4 = bigint_nondet_rem!(ctx, x2990, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2993, x5, 10), x2994, 10),
            x2990,
            10
        ),
        48771,
        4,
    )?;
    let x2995: BytePoly_8 = bigint_mul!(x2965, x2965, 8);
    let x2996: BytePoly_9 = bigint_nondet_quot!(ctx, x2995, x5, 9);
    let x2997: BytePoly_4 = bigint_nondet_rem!(ctx, x2995, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2996, x5, 13), x2997, 13),
            x2995,
            13
        ),
        73156,
        4,
    )?;
    let x2998: BytePoly_5 = bigint_add!(bigint_mul!(x2997, x0, 5), x4, 5);
    let x2999: BytePoly_6 = bigint_nondet_quot!(ctx, x2998, x5, 6);
    let x3000: BytePoly_4 = bigint_nondet_rem!(ctx, x2998, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2999, x5, 10), x3000, 10),
            x2998,
            10
        ),
        48771,
        4,
    )?;
    let x3001: BytePoly_4 = bigint_add!(x2971, x2971, 4);
    let x3002: BytePoly_4 = bigint_nondet_quot!(ctx, x3001, x5, 4);
    let x3003: BytePoly_4 = bigint_nondet_rem!(ctx, x3001, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3002, x5, 8), x3003, 8), x3001, 8),
        32515,
        2,
    )?;
    let x3004: BytePoly_4 = bigint_nondet_inv!(ctx, x3003, x5, 4);
    let x3005: BytePoly_8 = bigint_mul!(x3003, x3004, 8);
    let x3006: BytePoly_9 = bigint_nondet_quot!(ctx, x3005, x5, 9);
    let x3007: BytePoly_4 = bigint_nondet_rem!(ctx, x3005, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3006, x5, 13), x3007, 13),
            x3005,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x3007, x2, 4), 34, 1)?;
    let x3008: BytePoly_8 = bigint_mul!(x3000, x3004, 8);
    let x3009: BytePoly_9 = bigint_nondet_quot!(ctx, x3008, x5, 9);
    let x3010: BytePoly_4 = bigint_nondet_rem!(ctx, x3008, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3009, x5, 13), x3010, 13),
            x3008,
            13
        ),
        73156,
        4,
    )?;
    let x3011: BytePoly_8 = bigint_mul!(x3010, x2965, 8);
    let x3012: BytePoly_9 = bigint_nondet_quot!(ctx, x3011, x5, 9);
    let x3013: BytePoly_4 = bigint_nondet_rem!(ctx, x3011, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3012, x5, 13), x3013, 13),
            x3011,
            13
        ),
        73156,
        4,
    )?;
    let x3014: BytePoly_4 = bigint_add!(bigint_sub!(x2971, x3013, 4), x5, 4);
    let x3015: BytePoly_4 = bigint_nondet_quot!(ctx, x3014, x5, 4);
    let x3016: BytePoly_4 = bigint_nondet_rem!(ctx, x3014, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3015, x5, 8), x3016, 8), x3014, 8),
        32515,
        2,
    )?;
    let x3017: BytePoly_8 = bigint_mul!(x3010, x3010, 8);
    let x3018: BytePoly_9 = bigint_nondet_quot!(ctx, x3017, x5, 9);
    let x3019: BytePoly_4 = bigint_nondet_rem!(ctx, x3017, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3018, x5, 13), x3019, 13),
            x3017,
            13
        ),
        73156,
        4,
    )?;
    let x3020: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3019, x2965, 4), x5, 4), x2965, 4),
        x5,
        4
    );
    let x3021: BytePoly_4 = bigint_nondet_quot!(ctx, x3020, x5, 4);
    let x3022: BytePoly_4 = bigint_nondet_rem!(ctx, x3020, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3021, x5, 8), x3022, 8), x3020, 8),
        32515,
        2,
    )?;
    let x3023: BytePoly_8 = bigint_mul!(x3010, x3022, 8);
    let x3024: BytePoly_9 = bigint_nondet_quot!(ctx, x3023, x5, 9);
    let x3025: BytePoly_4 = bigint_nondet_rem!(ctx, x3023, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3024, x5, 13), x3025, 13),
            x3023,
            13
        ),
        73156,
        4,
    )?;
    let x3026: BytePoly_4 = bigint_add!(bigint_sub!(x5, bigint_add!(x3025, x3016, 4), 4), x5, 4);
    let x3027: BytePoly_4 = bigint_nondet_quot!(ctx, x3026, x5, 4);
    let x3028: BytePoly_4 = bigint_nondet_rem!(ctx, x3026, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3027, x5, 8), x3028, 8), x3026, 8),
        32515,
        2,
    )?;
    let x3029: BytePoly_1 = bigint_nondet_rem!(ctx, x2973, x1, 1);
    let x3030: BytePoly_4 = bigint_nondet_quot!(ctx, x2973, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3030, x1, 5), x3029, 5), x2973, 5),
        32515,
        2,
    )?;
    let x3031: BytePoly_1 = bigint_sub!(x2, x3029, 1);
    eqz(ctx, &bigint_mul!(x3029, x3031, 2), 8131, 2)?;
    let x3032: BytePoly_4 = bigint_add!(bigint_sub!(x3028, x2994, 4), x5, 4);
    let x3033: BytePoly_4 = bigint_add!(bigint_sub!(x3022, x2992, 4), x5, 4);
    let x3034: BytePoly_4 = bigint_nondet_inv!(ctx, x3033, x5, 4);
    let x3035: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x3032, x3034, 8), x5, 4);
    let x3036: BytePoly_8 = bigint_add!(bigint_sub!(bigint_mul!(x3035, x3033, 8), x3032, 8), x5, 8);
    let x3037: BytePoly_9 = bigint_nondet_quot!(ctx, x3036, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x3036, bigint_mul!(x3037, x5, 13), 13),
        73156,
        4,
    )?;
    let x3038: BytePoly_8 = bigint_mul!(x3035, x3035, 8);
    let x3039: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3038, x2992, 8), x5, 8), x3022, 8),
        x5,
        8
    );
    let x3040: BytePoly_9 = bigint_nondet_quot!(ctx, x3039, x5, 9);
    let x3041: BytePoly_4 = bigint_nondet_rem!(ctx, x3039, x5, 4);
    let x3042: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x5,
                bigint_add!(
                    bigint_mul!(x3035, x3041, 8),
                    bigint_add!(bigint_sub!(x2994, bigint_mul!(x3035, x2992, 8), 8), x5, 8),
                    8
                ),
                8
            ),
            x5,
            8
        ),
        x5,
        8
    );
    let x3043: BytePoly_9 = bigint_nondet_quot!(ctx, x3042, x5, 9);
    let x3044: BytePoly_4 = bigint_nondet_rem!(ctx, x3042, x5, 4);
    let x3045: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3038, bigint_mul!(x3040, x5, 13), 13),
                        x2992,
                        13
                    ),
                    x3022,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x3041,
        13
    );
    eqz(ctx, &x3045, 73156, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3043, x5, 13), x3044, 13),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3035, bigint_sub!(x2992, x3041, 4), 8),
                        x2994,
                        8
                    ),
                    x5,
                    8
                ),
                x5,
                8
            ),
            13
        ),
        73156,
        4,
    )?;
    let x3046: BytePoly_5 = bigint_add!(
        bigint_mul!(x3041, x3029, 5),
        bigint_mul!(x2992, x3031, 5),
        5
    );
    let x3047: BytePoly_5 = bigint_add!(
        bigint_mul!(x3044, x3029, 5),
        bigint_mul!(x2994, x3031, 5),
        5
    );
    let x3048: BytePoly_6 = bigint_nondet_quot!(ctx, x3046, x5, 6);
    let x3049: BytePoly_4 = bigint_nondet_rem!(ctx, x3046, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3048, x5, 10), x3049, 10),
            x3046,
            10
        ),
        48771,
        4,
    )?;
    let x3050: BytePoly_6 = bigint_nondet_quot!(ctx, x3047, x5, 6);
    let x3051: BytePoly_4 = bigint_nondet_rem!(ctx, x3047, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3050, x5, 10), x3051, 10),
            x3047,
            10
        ),
        48771,
        4,
    )?;
    let x3052: BytePoly_8 = bigint_mul!(x3022, x3022, 8);
    let x3053: BytePoly_9 = bigint_nondet_quot!(ctx, x3052, x5, 9);
    let x3054: BytePoly_4 = bigint_nondet_rem!(ctx, x3052, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3053, x5, 13), x3054, 13),
            x3052,
            13
        ),
        73156,
        4,
    )?;
    let x3055: BytePoly_5 = bigint_add!(bigint_mul!(x3054, x0, 5), x4, 5);
    let x3056: BytePoly_6 = bigint_nondet_quot!(ctx, x3055, x5, 6);
    let x3057: BytePoly_4 = bigint_nondet_rem!(ctx, x3055, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3056, x5, 10), x3057, 10),
            x3055,
            10
        ),
        48771,
        4,
    )?;
    let x3058: BytePoly_4 = bigint_add!(x3028, x3028, 4);
    let x3059: BytePoly_4 = bigint_nondet_quot!(ctx, x3058, x5, 4);
    let x3060: BytePoly_4 = bigint_nondet_rem!(ctx, x3058, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3059, x5, 8), x3060, 8), x3058, 8),
        32515,
        2,
    )?;
    let x3061: BytePoly_4 = bigint_nondet_inv!(ctx, x3060, x5, 4);
    let x3062: BytePoly_8 = bigint_mul!(x3060, x3061, 8);
    let x3063: BytePoly_9 = bigint_nondet_quot!(ctx, x3062, x5, 9);
    let x3064: BytePoly_4 = bigint_nondet_rem!(ctx, x3062, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3063, x5, 13), x3064, 13),
            x3062,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x3064, x2, 4), 34, 1)?;
    let x3065: BytePoly_8 = bigint_mul!(x3057, x3061, 8);
    let x3066: BytePoly_9 = bigint_nondet_quot!(ctx, x3065, x5, 9);
    let x3067: BytePoly_4 = bigint_nondet_rem!(ctx, x3065, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3066, x5, 13), x3067, 13),
            x3065,
            13
        ),
        73156,
        4,
    )?;
    let x3068: BytePoly_8 = bigint_mul!(x3067, x3022, 8);
    let x3069: BytePoly_9 = bigint_nondet_quot!(ctx, x3068, x5, 9);
    let x3070: BytePoly_4 = bigint_nondet_rem!(ctx, x3068, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3069, x5, 13), x3070, 13),
            x3068,
            13
        ),
        73156,
        4,
    )?;
    let x3071: BytePoly_4 = bigint_add!(bigint_sub!(x3028, x3070, 4), x5, 4);
    let x3072: BytePoly_4 = bigint_nondet_quot!(ctx, x3071, x5, 4);
    let x3073: BytePoly_4 = bigint_nondet_rem!(ctx, x3071, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3072, x5, 8), x3073, 8), x3071, 8),
        32515,
        2,
    )?;
    let x3074: BytePoly_8 = bigint_mul!(x3067, x3067, 8);
    let x3075: BytePoly_9 = bigint_nondet_quot!(ctx, x3074, x5, 9);
    let x3076: BytePoly_4 = bigint_nondet_rem!(ctx, x3074, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3075, x5, 13), x3076, 13),
            x3074,
            13
        ),
        73156,
        4,
    )?;
    let x3077: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3076, x3022, 4), x5, 4), x3022, 4),
        x5,
        4
    );
    let x3078: BytePoly_4 = bigint_nondet_quot!(ctx, x3077, x5, 4);
    let x3079: BytePoly_4 = bigint_nondet_rem!(ctx, x3077, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3078, x5, 8), x3079, 8), x3077, 8),
        32515,
        2,
    )?;
    let x3080: BytePoly_8 = bigint_mul!(x3067, x3079, 8);
    let x3081: BytePoly_9 = bigint_nondet_quot!(ctx, x3080, x5, 9);
    let x3082: BytePoly_4 = bigint_nondet_rem!(ctx, x3080, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3081, x5, 13), x3082, 13),
            x3080,
            13
        ),
        73156,
        4,
    )?;
    let x3083: BytePoly_4 = bigint_add!(bigint_sub!(x5, bigint_add!(x3082, x3073, 4), 4), x5, 4);
    let x3084: BytePoly_4 = bigint_nondet_quot!(ctx, x3083, x5, 4);
    let x3085: BytePoly_4 = bigint_nondet_rem!(ctx, x3083, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3084, x5, 8), x3085, 8), x3083, 8),
        32515,
        2,
    )?;
    let x3086: BytePoly_1 = bigint_nondet_rem!(ctx, x3030, x1, 1);
    let x3087: BytePoly_4 = bigint_nondet_quot!(ctx, x3030, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3087, x1, 5), x3086, 5), x3030, 5),
        32515,
        2,
    )?;
    let x3088: BytePoly_1 = bigint_sub!(x2, x3086, 1);
    eqz(ctx, &bigint_mul!(x3086, x3088, 2), 8131, 2)?;
    let x3089: BytePoly_4 = bigint_add!(bigint_sub!(x3085, x3051, 4), x5, 4);
    let x3090: BytePoly_4 = bigint_add!(bigint_sub!(x3079, x3049, 4), x5, 4);
    let x3091: BytePoly_4 = bigint_nondet_inv!(ctx, x3090, x5, 4);
    let x3092: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x3089, x3091, 8), x5, 4);
    let x3093: BytePoly_8 = bigint_add!(bigint_sub!(bigint_mul!(x3092, x3090, 8), x3089, 8), x5, 8);
    let x3094: BytePoly_9 = bigint_nondet_quot!(ctx, x3093, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x3093, bigint_mul!(x3094, x5, 13), 13),
        73156,
        4,
    )?;
    let x3095: BytePoly_8 = bigint_mul!(x3092, x3092, 8);
    let x3096: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3095, x3049, 8), x5, 8), x3079, 8),
        x5,
        8
    );
    let x3097: BytePoly_9 = bigint_nondet_quot!(ctx, x3096, x5, 9);
    let x3098: BytePoly_4 = bigint_nondet_rem!(ctx, x3096, x5, 4);
    let x3099: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x5,
                bigint_add!(
                    bigint_mul!(x3092, x3098, 8),
                    bigint_add!(bigint_sub!(x3051, bigint_mul!(x3092, x3049, 8), 8), x5, 8),
                    8
                ),
                8
            ),
            x5,
            8
        ),
        x5,
        8
    );
    let x3100: BytePoly_9 = bigint_nondet_quot!(ctx, x3099, x5, 9);
    let x3101: BytePoly_4 = bigint_nondet_rem!(ctx, x3099, x5, 4);
    let x3102: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3095, bigint_mul!(x3097, x5, 13), 13),
                        x3049,
                        13
                    ),
                    x3079,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x3098,
        13
    );
    eqz(ctx, &x3102, 73156, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3100, x5, 13), x3101, 13),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3092, bigint_sub!(x3049, x3098, 4), 8),
                        x3051,
                        8
                    ),
                    x5,
                    8
                ),
                x5,
                8
            ),
            13
        ),
        73156,
        4,
    )?;
    let x3103: BytePoly_5 = bigint_add!(
        bigint_mul!(x3098, x3086, 5),
        bigint_mul!(x3049, x3088, 5),
        5
    );
    let x3104: BytePoly_5 = bigint_add!(
        bigint_mul!(x3101, x3086, 5),
        bigint_mul!(x3051, x3088, 5),
        5
    );
    let x3105: BytePoly_6 = bigint_nondet_quot!(ctx, x3103, x5, 6);
    let x3106: BytePoly_4 = bigint_nondet_rem!(ctx, x3103, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3105, x5, 10), x3106, 10),
            x3103,
            10
        ),
        48771,
        4,
    )?;
    let x3107: BytePoly_6 = bigint_nondet_quot!(ctx, x3104, x5, 6);
    let x3108: BytePoly_4 = bigint_nondet_rem!(ctx, x3104, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3107, x5, 10), x3108, 10),
            x3104,
            10
        ),
        48771,
        4,
    )?;
    let x3109: BytePoly_8 = bigint_mul!(x3079, x3079, 8);
    let x3110: BytePoly_9 = bigint_nondet_quot!(ctx, x3109, x5, 9);
    let x3111: BytePoly_4 = bigint_nondet_rem!(ctx, x3109, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3110, x5, 13), x3111, 13),
            x3109,
            13
        ),
        73156,
        4,
    )?;
    let x3112: BytePoly_5 = bigint_add!(bigint_mul!(x3111, x0, 5), x4, 5);
    let x3113: BytePoly_6 = bigint_nondet_quot!(ctx, x3112, x5, 6);
    let x3114: BytePoly_4 = bigint_nondet_rem!(ctx, x3112, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3113, x5, 10), x3114, 10),
            x3112,
            10
        ),
        48771,
        4,
    )?;
    let x3115: BytePoly_4 = bigint_add!(x3085, x3085, 4);
    let x3116: BytePoly_4 = bigint_nondet_quot!(ctx, x3115, x5, 4);
    let x3117: BytePoly_4 = bigint_nondet_rem!(ctx, x3115, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3116, x5, 8), x3117, 8), x3115, 8),
        32515,
        2,
    )?;
    let x3118: BytePoly_4 = bigint_nondet_inv!(ctx, x3117, x5, 4);
    let x3119: BytePoly_8 = bigint_mul!(x3117, x3118, 8);
    let x3120: BytePoly_9 = bigint_nondet_quot!(ctx, x3119, x5, 9);
    let x3121: BytePoly_4 = bigint_nondet_rem!(ctx, x3119, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3120, x5, 13), x3121, 13),
            x3119,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x3121, x2, 4), 34, 1)?;
    let x3122: BytePoly_8 = bigint_mul!(x3114, x3118, 8);
    let x3123: BytePoly_9 = bigint_nondet_quot!(ctx, x3122, x5, 9);
    let x3124: BytePoly_4 = bigint_nondet_rem!(ctx, x3122, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3123, x5, 13), x3124, 13),
            x3122,
            13
        ),
        73156,
        4,
    )?;
    let x3125: BytePoly_8 = bigint_mul!(x3124, x3079, 8);
    let x3126: BytePoly_9 = bigint_nondet_quot!(ctx, x3125, x5, 9);
    let x3127: BytePoly_4 = bigint_nondet_rem!(ctx, x3125, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3126, x5, 13), x3127, 13),
            x3125,
            13
        ),
        73156,
        4,
    )?;
    let x3128: BytePoly_4 = bigint_add!(bigint_sub!(x3085, x3127, 4), x5, 4);
    let x3129: BytePoly_4 = bigint_nondet_quot!(ctx, x3128, x5, 4);
    let x3130: BytePoly_4 = bigint_nondet_rem!(ctx, x3128, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3129, x5, 8), x3130, 8), x3128, 8),
        32515,
        2,
    )?;
    let x3131: BytePoly_8 = bigint_mul!(x3124, x3124, 8);
    let x3132: BytePoly_9 = bigint_nondet_quot!(ctx, x3131, x5, 9);
    let x3133: BytePoly_4 = bigint_nondet_rem!(ctx, x3131, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3132, x5, 13), x3133, 13),
            x3131,
            13
        ),
        73156,
        4,
    )?;
    let x3134: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3133, x3079, 4), x5, 4), x3079, 4),
        x5,
        4
    );
    let x3135: BytePoly_4 = bigint_nondet_quot!(ctx, x3134, x5, 4);
    let x3136: BytePoly_4 = bigint_nondet_rem!(ctx, x3134, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3135, x5, 8), x3136, 8), x3134, 8),
        32515,
        2,
    )?;
    let x3137: BytePoly_8 = bigint_mul!(x3124, x3136, 8);
    let x3138: BytePoly_9 = bigint_nondet_quot!(ctx, x3137, x5, 9);
    let x3139: BytePoly_4 = bigint_nondet_rem!(ctx, x3137, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3138, x5, 13), x3139, 13),
            x3137,
            13
        ),
        73156,
        4,
    )?;
    let x3140: BytePoly_4 = bigint_add!(bigint_sub!(x5, bigint_add!(x3139, x3130, 4), 4), x5, 4);
    let x3141: BytePoly_4 = bigint_nondet_quot!(ctx, x3140, x5, 4);
    let x3142: BytePoly_4 = bigint_nondet_rem!(ctx, x3140, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3141, x5, 8), x3142, 8), x3140, 8),
        32515,
        2,
    )?;
    let x3143: BytePoly_1 = bigint_nondet_rem!(ctx, x3087, x1, 1);
    let x3144: BytePoly_4 = bigint_nondet_quot!(ctx, x3087, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3144, x1, 5), x3143, 5), x3087, 5),
        32515,
        2,
    )?;
    let x3145: BytePoly_1 = bigint_sub!(x2, x3143, 1);
    eqz(ctx, &bigint_mul!(x3143, x3145, 2), 8131, 2)?;
    let x3146: BytePoly_4 = bigint_add!(bigint_sub!(x3142, x3108, 4), x5, 4);
    let x3147: BytePoly_4 = bigint_add!(bigint_sub!(x3136, x3106, 4), x5, 4);
    let x3148: BytePoly_4 = bigint_nondet_inv!(ctx, x3147, x5, 4);
    let x3149: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x3146, x3148, 8), x5, 4);
    let x3150: BytePoly_8 = bigint_add!(bigint_sub!(bigint_mul!(x3149, x3147, 8), x3146, 8), x5, 8);
    let x3151: BytePoly_9 = bigint_nondet_quot!(ctx, x3150, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x3150, bigint_mul!(x3151, x5, 13), 13),
        73156,
        4,
    )?;
    let x3152: BytePoly_8 = bigint_mul!(x3149, x3149, 8);
    let x3153: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3152, x3106, 8), x5, 8), x3136, 8),
        x5,
        8
    );
    let x3154: BytePoly_9 = bigint_nondet_quot!(ctx, x3153, x5, 9);
    let x3155: BytePoly_4 = bigint_nondet_rem!(ctx, x3153, x5, 4);
    let x3156: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x5,
                bigint_add!(
                    bigint_mul!(x3149, x3155, 8),
                    bigint_add!(bigint_sub!(x3108, bigint_mul!(x3149, x3106, 8), 8), x5, 8),
                    8
                ),
                8
            ),
            x5,
            8
        ),
        x5,
        8
    );
    let x3157: BytePoly_9 = bigint_nondet_quot!(ctx, x3156, x5, 9);
    let x3158: BytePoly_4 = bigint_nondet_rem!(ctx, x3156, x5, 4);
    let x3159: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3152, bigint_mul!(x3154, x5, 13), 13),
                        x3106,
                        13
                    ),
                    x3136,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x3155,
        13
    );
    eqz(ctx, &x3159, 73156, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3157, x5, 13), x3158, 13),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3149, bigint_sub!(x3106, x3155, 4), 8),
                        x3108,
                        8
                    ),
                    x5,
                    8
                ),
                x5,
                8
            ),
            13
        ),
        73156,
        4,
    )?;
    let x3160: BytePoly_5 = bigint_add!(
        bigint_mul!(x3155, x3143, 5),
        bigint_mul!(x3106, x3145, 5),
        5
    );
    let x3161: BytePoly_5 = bigint_add!(
        bigint_mul!(x3158, x3143, 5),
        bigint_mul!(x3108, x3145, 5),
        5
    );
    let x3162: BytePoly_6 = bigint_nondet_quot!(ctx, x3160, x5, 6);
    let x3163: BytePoly_4 = bigint_nondet_rem!(ctx, x3160, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3162, x5, 10), x3163, 10),
            x3160,
            10
        ),
        48771,
        4,
    )?;
    let x3164: BytePoly_6 = bigint_nondet_quot!(ctx, x3161, x5, 6);
    let x3165: BytePoly_4 = bigint_nondet_rem!(ctx, x3161, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3164, x5, 10), x3165, 10),
            x3161,
            10
        ),
        48771,
        4,
    )?;
    let x3166: BytePoly_8 = bigint_mul!(x3136, x3136, 8);
    let x3167: BytePoly_9 = bigint_nondet_quot!(ctx, x3166, x5, 9);
    let x3168: BytePoly_4 = bigint_nondet_rem!(ctx, x3166, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3167, x5, 13), x3168, 13),
            x3166,
            13
        ),
        73156,
        4,
    )?;
    let x3169: BytePoly_5 = bigint_add!(bigint_mul!(x3168, x0, 5), x4, 5);
    let x3170: BytePoly_6 = bigint_nondet_quot!(ctx, x3169, x5, 6);
    let x3171: BytePoly_4 = bigint_nondet_rem!(ctx, x3169, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3170, x5, 10), x3171, 10),
            x3169,
            10
        ),
        48771,
        4,
    )?;
    let x3172: BytePoly_4 = bigint_add!(x3142, x3142, 4);
    let x3173: BytePoly_4 = bigint_nondet_quot!(ctx, x3172, x5, 4);
    let x3174: BytePoly_4 = bigint_nondet_rem!(ctx, x3172, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3173, x5, 8), x3174, 8), x3172, 8),
        32515,
        2,
    )?;
    let x3175: BytePoly_4 = bigint_nondet_inv!(ctx, x3174, x5, 4);
    let x3176: BytePoly_8 = bigint_mul!(x3174, x3175, 8);
    let x3177: BytePoly_9 = bigint_nondet_quot!(ctx, x3176, x5, 9);
    let x3178: BytePoly_4 = bigint_nondet_rem!(ctx, x3176, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3177, x5, 13), x3178, 13),
            x3176,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x3178, x2, 4), 34, 1)?;
    let x3179: BytePoly_8 = bigint_mul!(x3171, x3175, 8);
    let x3180: BytePoly_9 = bigint_nondet_quot!(ctx, x3179, x5, 9);
    let x3181: BytePoly_4 = bigint_nondet_rem!(ctx, x3179, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3180, x5, 13), x3181, 13),
            x3179,
            13
        ),
        73156,
        4,
    )?;
    let x3182: BytePoly_8 = bigint_mul!(x3181, x3136, 8);
    let x3183: BytePoly_9 = bigint_nondet_quot!(ctx, x3182, x5, 9);
    let x3184: BytePoly_4 = bigint_nondet_rem!(ctx, x3182, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3183, x5, 13), x3184, 13),
            x3182,
            13
        ),
        73156,
        4,
    )?;
    let x3185: BytePoly_4 = bigint_add!(bigint_sub!(x3142, x3184, 4), x5, 4);
    let x3186: BytePoly_4 = bigint_nondet_quot!(ctx, x3185, x5, 4);
    let x3187: BytePoly_4 = bigint_nondet_rem!(ctx, x3185, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3186, x5, 8), x3187, 8), x3185, 8),
        32515,
        2,
    )?;
    let x3188: BytePoly_8 = bigint_mul!(x3181, x3181, 8);
    let x3189: BytePoly_9 = bigint_nondet_quot!(ctx, x3188, x5, 9);
    let x3190: BytePoly_4 = bigint_nondet_rem!(ctx, x3188, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3189, x5, 13), x3190, 13),
            x3188,
            13
        ),
        73156,
        4,
    )?;
    let x3191: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3190, x3136, 4), x5, 4), x3136, 4),
        x5,
        4
    );
    let x3192: BytePoly_4 = bigint_nondet_quot!(ctx, x3191, x5, 4);
    let x3193: BytePoly_4 = bigint_nondet_rem!(ctx, x3191, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3192, x5, 8), x3193, 8), x3191, 8),
        32515,
        2,
    )?;
    let x3194: BytePoly_8 = bigint_mul!(x3181, x3193, 8);
    let x3195: BytePoly_9 = bigint_nondet_quot!(ctx, x3194, x5, 9);
    let x3196: BytePoly_4 = bigint_nondet_rem!(ctx, x3194, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3195, x5, 13), x3196, 13),
            x3194,
            13
        ),
        73156,
        4,
    )?;
    let x3197: BytePoly_4 = bigint_add!(bigint_sub!(x5, bigint_add!(x3196, x3187, 4), 4), x5, 4);
    let x3198: BytePoly_4 = bigint_nondet_quot!(ctx, x3197, x5, 4);
    let x3199: BytePoly_4 = bigint_nondet_rem!(ctx, x3197, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3198, x5, 8), x3199, 8), x3197, 8),
        32515,
        2,
    )?;
    let x3200: BytePoly_1 = bigint_nondet_rem!(ctx, x3144, x1, 1);
    let x3201: BytePoly_4 = bigint_nondet_quot!(ctx, x3144, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3201, x1, 5), x3200, 5), x3144, 5),
        32515,
        2,
    )?;
    let x3202: BytePoly_1 = bigint_sub!(x2, x3200, 1);
    eqz(ctx, &bigint_mul!(x3200, x3202, 2), 8131, 2)?;
    let x3203: BytePoly_4 = bigint_add!(bigint_sub!(x3199, x3165, 4), x5, 4);
    let x3204: BytePoly_4 = bigint_add!(bigint_sub!(x3193, x3163, 4), x5, 4);
    let x3205: BytePoly_4 = bigint_nondet_inv!(ctx, x3204, x5, 4);
    let x3206: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x3203, x3205, 8), x5, 4);
    let x3207: BytePoly_8 = bigint_add!(bigint_sub!(bigint_mul!(x3206, x3204, 8), x3203, 8), x5, 8);
    let x3208: BytePoly_9 = bigint_nondet_quot!(ctx, x3207, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x3207, bigint_mul!(x3208, x5, 13), 13),
        73156,
        4,
    )?;
    let x3209: BytePoly_8 = bigint_mul!(x3206, x3206, 8);
    let x3210: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3209, x3163, 8), x5, 8), x3193, 8),
        x5,
        8
    );
    let x3211: BytePoly_9 = bigint_nondet_quot!(ctx, x3210, x5, 9);
    let x3212: BytePoly_4 = bigint_nondet_rem!(ctx, x3210, x5, 4);
    let x3213: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x5,
                bigint_add!(
                    bigint_mul!(x3206, x3212, 8),
                    bigint_add!(bigint_sub!(x3165, bigint_mul!(x3206, x3163, 8), 8), x5, 8),
                    8
                ),
                8
            ),
            x5,
            8
        ),
        x5,
        8
    );
    let x3214: BytePoly_9 = bigint_nondet_quot!(ctx, x3213, x5, 9);
    let x3215: BytePoly_4 = bigint_nondet_rem!(ctx, x3213, x5, 4);
    let x3216: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3209, bigint_mul!(x3211, x5, 13), 13),
                        x3163,
                        13
                    ),
                    x3193,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x3212,
        13
    );
    eqz(ctx, &x3216, 73156, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3214, x5, 13), x3215, 13),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3206, bigint_sub!(x3163, x3212, 4), 8),
                        x3165,
                        8
                    ),
                    x5,
                    8
                ),
                x5,
                8
            ),
            13
        ),
        73156,
        4,
    )?;
    let x3217: BytePoly_5 = bigint_add!(
        bigint_mul!(x3212, x3200, 5),
        bigint_mul!(x3163, x3202, 5),
        5
    );
    let x3218: BytePoly_5 = bigint_add!(
        bigint_mul!(x3215, x3200, 5),
        bigint_mul!(x3165, x3202, 5),
        5
    );
    let x3219: BytePoly_6 = bigint_nondet_quot!(ctx, x3217, x5, 6);
    let x3220: BytePoly_4 = bigint_nondet_rem!(ctx, x3217, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3219, x5, 10), x3220, 10),
            x3217,
            10
        ),
        48771,
        4,
    )?;
    let x3221: BytePoly_6 = bigint_nondet_quot!(ctx, x3218, x5, 6);
    let x3222: BytePoly_4 = bigint_nondet_rem!(ctx, x3218, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3221, x5, 10), x3222, 10),
            x3218,
            10
        ),
        48771,
        4,
    )?;
    let x3223: BytePoly_8 = bigint_mul!(x3193, x3193, 8);
    let x3224: BytePoly_9 = bigint_nondet_quot!(ctx, x3223, x5, 9);
    let x3225: BytePoly_4 = bigint_nondet_rem!(ctx, x3223, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3224, x5, 13), x3225, 13),
            x3223,
            13
        ),
        73156,
        4,
    )?;
    let x3226: BytePoly_5 = bigint_add!(bigint_mul!(x3225, x0, 5), x4, 5);
    let x3227: BytePoly_6 = bigint_nondet_quot!(ctx, x3226, x5, 6);
    let x3228: BytePoly_4 = bigint_nondet_rem!(ctx, x3226, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3227, x5, 10), x3228, 10),
            x3226,
            10
        ),
        48771,
        4,
    )?;
    let x3229: BytePoly_4 = bigint_add!(x3199, x3199, 4);
    let x3230: BytePoly_4 = bigint_nondet_quot!(ctx, x3229, x5, 4);
    let x3231: BytePoly_4 = bigint_nondet_rem!(ctx, x3229, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3230, x5, 8), x3231, 8), x3229, 8),
        32515,
        2,
    )?;
    let x3232: BytePoly_4 = bigint_nondet_inv!(ctx, x3231, x5, 4);
    let x3233: BytePoly_8 = bigint_mul!(x3231, x3232, 8);
    let x3234: BytePoly_9 = bigint_nondet_quot!(ctx, x3233, x5, 9);
    let x3235: BytePoly_4 = bigint_nondet_rem!(ctx, x3233, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3234, x5, 13), x3235, 13),
            x3233,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x3235, x2, 4), 34, 1)?;
    let x3236: BytePoly_8 = bigint_mul!(x3228, x3232, 8);
    let x3237: BytePoly_9 = bigint_nondet_quot!(ctx, x3236, x5, 9);
    let x3238: BytePoly_4 = bigint_nondet_rem!(ctx, x3236, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3237, x5, 13), x3238, 13),
            x3236,
            13
        ),
        73156,
        4,
    )?;
    let x3239: BytePoly_8 = bigint_mul!(x3238, x3193, 8);
    let x3240: BytePoly_9 = bigint_nondet_quot!(ctx, x3239, x5, 9);
    let x3241: BytePoly_4 = bigint_nondet_rem!(ctx, x3239, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3240, x5, 13), x3241, 13),
            x3239,
            13
        ),
        73156,
        4,
    )?;
    let x3242: BytePoly_4 = bigint_add!(bigint_sub!(x3199, x3241, 4), x5, 4);
    let x3243: BytePoly_4 = bigint_nondet_quot!(ctx, x3242, x5, 4);
    let x3244: BytePoly_4 = bigint_nondet_rem!(ctx, x3242, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3243, x5, 8), x3244, 8), x3242, 8),
        32515,
        2,
    )?;
    let x3245: BytePoly_8 = bigint_mul!(x3238, x3238, 8);
    let x3246: BytePoly_9 = bigint_nondet_quot!(ctx, x3245, x5, 9);
    let x3247: BytePoly_4 = bigint_nondet_rem!(ctx, x3245, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3246, x5, 13), x3247, 13),
            x3245,
            13
        ),
        73156,
        4,
    )?;
    let x3248: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3247, x3193, 4), x5, 4), x3193, 4),
        x5,
        4
    );
    let x3249: BytePoly_4 = bigint_nondet_quot!(ctx, x3248, x5, 4);
    let x3250: BytePoly_4 = bigint_nondet_rem!(ctx, x3248, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3249, x5, 8), x3250, 8), x3248, 8),
        32515,
        2,
    )?;
    let x3251: BytePoly_8 = bigint_mul!(x3238, x3250, 8);
    let x3252: BytePoly_9 = bigint_nondet_quot!(ctx, x3251, x5, 9);
    let x3253: BytePoly_4 = bigint_nondet_rem!(ctx, x3251, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3252, x5, 13), x3253, 13),
            x3251,
            13
        ),
        73156,
        4,
    )?;
    let x3254: BytePoly_4 = bigint_add!(bigint_sub!(x5, bigint_add!(x3253, x3244, 4), 4), x5, 4);
    let x3255: BytePoly_4 = bigint_nondet_quot!(ctx, x3254, x5, 4);
    let x3256: BytePoly_4 = bigint_nondet_rem!(ctx, x3254, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3255, x5, 8), x3256, 8), x3254, 8),
        32515,
        2,
    )?;
    let x3257: BytePoly_1 = bigint_nondet_rem!(ctx, x3201, x1, 1);
    let x3258: BytePoly_4 = bigint_nondet_quot!(ctx, x3201, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3258, x1, 5), x3257, 5), x3201, 5),
        32515,
        2,
    )?;
    let x3259: BytePoly_1 = bigint_sub!(x2, x3257, 1);
    eqz(ctx, &bigint_mul!(x3257, x3259, 2), 8131, 2)?;
    let x3260: BytePoly_4 = bigint_add!(bigint_sub!(x3256, x3222, 4), x5, 4);
    let x3261: BytePoly_4 = bigint_add!(bigint_sub!(x3250, x3220, 4), x5, 4);
    let x3262: BytePoly_4 = bigint_nondet_inv!(ctx, x3261, x5, 4);
    let x3263: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x3260, x3262, 8), x5, 4);
    let x3264: BytePoly_8 = bigint_add!(bigint_sub!(bigint_mul!(x3263, x3261, 8), x3260, 8), x5, 8);
    let x3265: BytePoly_9 = bigint_nondet_quot!(ctx, x3264, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x3264, bigint_mul!(x3265, x5, 13), 13),
        73156,
        4,
    )?;
    let x3266: BytePoly_8 = bigint_mul!(x3263, x3263, 8);
    let x3267: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3266, x3220, 8), x5, 8), x3250, 8),
        x5,
        8
    );
    let x3268: BytePoly_9 = bigint_nondet_quot!(ctx, x3267, x5, 9);
    let x3269: BytePoly_4 = bigint_nondet_rem!(ctx, x3267, x5, 4);
    let x3270: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x5,
                bigint_add!(
                    bigint_mul!(x3263, x3269, 8),
                    bigint_add!(bigint_sub!(x3222, bigint_mul!(x3263, x3220, 8), 8), x5, 8),
                    8
                ),
                8
            ),
            x5,
            8
        ),
        x5,
        8
    );
    let x3271: BytePoly_9 = bigint_nondet_quot!(ctx, x3270, x5, 9);
    let x3272: BytePoly_4 = bigint_nondet_rem!(ctx, x3270, x5, 4);
    let x3273: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3266, bigint_mul!(x3268, x5, 13), 13),
                        x3220,
                        13
                    ),
                    x3250,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x3269,
        13
    );
    eqz(ctx, &x3273, 73156, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3271, x5, 13), x3272, 13),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3263, bigint_sub!(x3220, x3269, 4), 8),
                        x3222,
                        8
                    ),
                    x5,
                    8
                ),
                x5,
                8
            ),
            13
        ),
        73156,
        4,
    )?;
    let x3274: BytePoly_5 = bigint_add!(
        bigint_mul!(x3269, x3257, 5),
        bigint_mul!(x3220, x3259, 5),
        5
    );
    let x3275: BytePoly_5 = bigint_add!(
        bigint_mul!(x3272, x3257, 5),
        bigint_mul!(x3222, x3259, 5),
        5
    );
    let x3276: BytePoly_6 = bigint_nondet_quot!(ctx, x3274, x5, 6);
    let x3277: BytePoly_4 = bigint_nondet_rem!(ctx, x3274, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3276, x5, 10), x3277, 10),
            x3274,
            10
        ),
        48771,
        4,
    )?;
    let x3278: BytePoly_6 = bigint_nondet_quot!(ctx, x3275, x5, 6);
    let x3279: BytePoly_4 = bigint_nondet_rem!(ctx, x3275, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3278, x5, 10), x3279, 10),
            x3275,
            10
        ),
        48771,
        4,
    )?;
    let x3280: BytePoly_8 = bigint_mul!(x3250, x3250, 8);
    let x3281: BytePoly_9 = bigint_nondet_quot!(ctx, x3280, x5, 9);
    let x3282: BytePoly_4 = bigint_nondet_rem!(ctx, x3280, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3281, x5, 13), x3282, 13),
            x3280,
            13
        ),
        73156,
        4,
    )?;
    let x3283: BytePoly_5 = bigint_add!(bigint_mul!(x3282, x0, 5), x4, 5);
    let x3284: BytePoly_6 = bigint_nondet_quot!(ctx, x3283, x5, 6);
    let x3285: BytePoly_4 = bigint_nondet_rem!(ctx, x3283, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3284, x5, 10), x3285, 10),
            x3283,
            10
        ),
        48771,
        4,
    )?;
    let x3286: BytePoly_4 = bigint_add!(x3256, x3256, 4);
    let x3287: BytePoly_4 = bigint_nondet_quot!(ctx, x3286, x5, 4);
    let x3288: BytePoly_4 = bigint_nondet_rem!(ctx, x3286, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3287, x5, 8), x3288, 8), x3286, 8),
        32515,
        2,
    )?;
    let x3289: BytePoly_4 = bigint_nondet_inv!(ctx, x3288, x5, 4);
    let x3290: BytePoly_8 = bigint_mul!(x3288, x3289, 8);
    let x3291: BytePoly_9 = bigint_nondet_quot!(ctx, x3290, x5, 9);
    let x3292: BytePoly_4 = bigint_nondet_rem!(ctx, x3290, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3291, x5, 13), x3292, 13),
            x3290,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x3292, x2, 4), 34, 1)?;
    let x3293: BytePoly_8 = bigint_mul!(x3285, x3289, 8);
    let x3294: BytePoly_9 = bigint_nondet_quot!(ctx, x3293, x5, 9);
    let x3295: BytePoly_4 = bigint_nondet_rem!(ctx, x3293, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3294, x5, 13), x3295, 13),
            x3293,
            13
        ),
        73156,
        4,
    )?;
    let x3296: BytePoly_8 = bigint_mul!(x3295, x3250, 8);
    let x3297: BytePoly_9 = bigint_nondet_quot!(ctx, x3296, x5, 9);
    let x3298: BytePoly_4 = bigint_nondet_rem!(ctx, x3296, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3297, x5, 13), x3298, 13),
            x3296,
            13
        ),
        73156,
        4,
    )?;
    let x3299: BytePoly_4 = bigint_add!(bigint_sub!(x3256, x3298, 4), x5, 4);
    let x3300: BytePoly_4 = bigint_nondet_quot!(ctx, x3299, x5, 4);
    let x3301: BytePoly_4 = bigint_nondet_rem!(ctx, x3299, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3300, x5, 8), x3301, 8), x3299, 8),
        32515,
        2,
    )?;
    let x3302: BytePoly_8 = bigint_mul!(x3295, x3295, 8);
    let x3303: BytePoly_9 = bigint_nondet_quot!(ctx, x3302, x5, 9);
    let x3304: BytePoly_4 = bigint_nondet_rem!(ctx, x3302, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3303, x5, 13), x3304, 13),
            x3302,
            13
        ),
        73156,
        4,
    )?;
    let x3305: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3304, x3250, 4), x5, 4), x3250, 4),
        x5,
        4
    );
    let x3306: BytePoly_4 = bigint_nondet_quot!(ctx, x3305, x5, 4);
    let x3307: BytePoly_4 = bigint_nondet_rem!(ctx, x3305, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3306, x5, 8), x3307, 8), x3305, 8),
        32515,
        2,
    )?;
    let x3308: BytePoly_8 = bigint_mul!(x3295, x3307, 8);
    let x3309: BytePoly_9 = bigint_nondet_quot!(ctx, x3308, x5, 9);
    let x3310: BytePoly_4 = bigint_nondet_rem!(ctx, x3308, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3309, x5, 13), x3310, 13),
            x3308,
            13
        ),
        73156,
        4,
    )?;
    let x3311: BytePoly_4 = bigint_add!(bigint_sub!(x5, bigint_add!(x3310, x3301, 4), 4), x5, 4);
    let x3312: BytePoly_4 = bigint_nondet_quot!(ctx, x3311, x5, 4);
    let x3313: BytePoly_4 = bigint_nondet_rem!(ctx, x3311, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3312, x5, 8), x3313, 8), x3311, 8),
        32515,
        2,
    )?;
    let x3314: BytePoly_1 = bigint_nondet_rem!(ctx, x3258, x1, 1);
    let x3315: BytePoly_4 = bigint_nondet_quot!(ctx, x3258, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3315, x1, 5), x3314, 5), x3258, 5),
        32515,
        2,
    )?;
    let x3316: BytePoly_1 = bigint_sub!(x2, x3314, 1);
    eqz(ctx, &bigint_mul!(x3314, x3316, 2), 8131, 2)?;
    let x3317: BytePoly_4 = bigint_add!(bigint_sub!(x3313, x3279, 4), x5, 4);
    let x3318: BytePoly_4 = bigint_add!(bigint_sub!(x3307, x3277, 4), x5, 4);
    let x3319: BytePoly_4 = bigint_nondet_inv!(ctx, x3318, x5, 4);
    let x3320: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x3317, x3319, 8), x5, 4);
    let x3321: BytePoly_8 = bigint_add!(bigint_sub!(bigint_mul!(x3320, x3318, 8), x3317, 8), x5, 8);
    let x3322: BytePoly_9 = bigint_nondet_quot!(ctx, x3321, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x3321, bigint_mul!(x3322, x5, 13), 13),
        73156,
        4,
    )?;
    let x3323: BytePoly_8 = bigint_mul!(x3320, x3320, 8);
    let x3324: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3323, x3277, 8), x5, 8), x3307, 8),
        x5,
        8
    );
    let x3325: BytePoly_9 = bigint_nondet_quot!(ctx, x3324, x5, 9);
    let x3326: BytePoly_4 = bigint_nondet_rem!(ctx, x3324, x5, 4);
    let x3327: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x5,
                bigint_add!(
                    bigint_mul!(x3320, x3326, 8),
                    bigint_add!(bigint_sub!(x3279, bigint_mul!(x3320, x3277, 8), 8), x5, 8),
                    8
                ),
                8
            ),
            x5,
            8
        ),
        x5,
        8
    );
    let x3328: BytePoly_9 = bigint_nondet_quot!(ctx, x3327, x5, 9);
    let x3329: BytePoly_4 = bigint_nondet_rem!(ctx, x3327, x5, 4);
    let x3330: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3323, bigint_mul!(x3325, x5, 13), 13),
                        x3277,
                        13
                    ),
                    x3307,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x3326,
        13
    );
    eqz(ctx, &x3330, 73156, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3328, x5, 13), x3329, 13),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3320, bigint_sub!(x3277, x3326, 4), 8),
                        x3279,
                        8
                    ),
                    x5,
                    8
                ),
                x5,
                8
            ),
            13
        ),
        73156,
        4,
    )?;
    let x3331: BytePoly_5 = bigint_add!(
        bigint_mul!(x3326, x3314, 5),
        bigint_mul!(x3277, x3316, 5),
        5
    );
    let x3332: BytePoly_5 = bigint_add!(
        bigint_mul!(x3329, x3314, 5),
        bigint_mul!(x3279, x3316, 5),
        5
    );
    let x3333: BytePoly_6 = bigint_nondet_quot!(ctx, x3331, x5, 6);
    let x3334: BytePoly_4 = bigint_nondet_rem!(ctx, x3331, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3333, x5, 10), x3334, 10),
            x3331,
            10
        ),
        48771,
        4,
    )?;
    let x3335: BytePoly_6 = bigint_nondet_quot!(ctx, x3332, x5, 6);
    let x3336: BytePoly_4 = bigint_nondet_rem!(ctx, x3332, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3335, x5, 10), x3336, 10),
            x3332,
            10
        ),
        48771,
        4,
    )?;
    let x3337: BytePoly_8 = bigint_mul!(x3307, x3307, 8);
    let x3338: BytePoly_9 = bigint_nondet_quot!(ctx, x3337, x5, 9);
    let x3339: BytePoly_4 = bigint_nondet_rem!(ctx, x3337, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3338, x5, 13), x3339, 13),
            x3337,
            13
        ),
        73156,
        4,
    )?;
    let x3340: BytePoly_5 = bigint_add!(bigint_mul!(x3339, x0, 5), x4, 5);
    let x3341: BytePoly_6 = bigint_nondet_quot!(ctx, x3340, x5, 6);
    let x3342: BytePoly_4 = bigint_nondet_rem!(ctx, x3340, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3341, x5, 10), x3342, 10),
            x3340,
            10
        ),
        48771,
        4,
    )?;
    let x3343: BytePoly_4 = bigint_add!(x3313, x3313, 4);
    let x3344: BytePoly_4 = bigint_nondet_quot!(ctx, x3343, x5, 4);
    let x3345: BytePoly_4 = bigint_nondet_rem!(ctx, x3343, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3344, x5, 8), x3345, 8), x3343, 8),
        32515,
        2,
    )?;
    let x3346: BytePoly_4 = bigint_nondet_inv!(ctx, x3345, x5, 4);
    let x3347: BytePoly_8 = bigint_mul!(x3345, x3346, 8);
    let x3348: BytePoly_9 = bigint_nondet_quot!(ctx, x3347, x5, 9);
    let x3349: BytePoly_4 = bigint_nondet_rem!(ctx, x3347, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3348, x5, 13), x3349, 13),
            x3347,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x3349, x2, 4), 34, 1)?;
    let x3350: BytePoly_8 = bigint_mul!(x3342, x3346, 8);
    let x3351: BytePoly_9 = bigint_nondet_quot!(ctx, x3350, x5, 9);
    let x3352: BytePoly_4 = bigint_nondet_rem!(ctx, x3350, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3351, x5, 13), x3352, 13),
            x3350,
            13
        ),
        73156,
        4,
    )?;
    let x3353: BytePoly_8 = bigint_mul!(x3352, x3307, 8);
    let x3354: BytePoly_9 = bigint_nondet_quot!(ctx, x3353, x5, 9);
    let x3355: BytePoly_4 = bigint_nondet_rem!(ctx, x3353, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3354, x5, 13), x3355, 13),
            x3353,
            13
        ),
        73156,
        4,
    )?;
    let x3356: BytePoly_4 = bigint_add!(bigint_sub!(x3313, x3355, 4), x5, 4);
    let x3357: BytePoly_4 = bigint_nondet_quot!(ctx, x3356, x5, 4);
    let x3358: BytePoly_4 = bigint_nondet_rem!(ctx, x3356, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3357, x5, 8), x3358, 8), x3356, 8),
        32515,
        2,
    )?;
    let x3359: BytePoly_8 = bigint_mul!(x3352, x3352, 8);
    let x3360: BytePoly_9 = bigint_nondet_quot!(ctx, x3359, x5, 9);
    let x3361: BytePoly_4 = bigint_nondet_rem!(ctx, x3359, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3360, x5, 13), x3361, 13),
            x3359,
            13
        ),
        73156,
        4,
    )?;
    let x3362: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3361, x3307, 4), x5, 4), x3307, 4),
        x5,
        4
    );
    let x3363: BytePoly_4 = bigint_nondet_quot!(ctx, x3362, x5, 4);
    let x3364: BytePoly_4 = bigint_nondet_rem!(ctx, x3362, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3363, x5, 8), x3364, 8), x3362, 8),
        32515,
        2,
    )?;
    let x3365: BytePoly_8 = bigint_mul!(x3352, x3364, 8);
    let x3366: BytePoly_9 = bigint_nondet_quot!(ctx, x3365, x5, 9);
    let x3367: BytePoly_4 = bigint_nondet_rem!(ctx, x3365, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3366, x5, 13), x3367, 13),
            x3365,
            13
        ),
        73156,
        4,
    )?;
    let x3368: BytePoly_4 = bigint_add!(bigint_sub!(x5, bigint_add!(x3367, x3358, 4), 4), x5, 4);
    let x3369: BytePoly_4 = bigint_nondet_quot!(ctx, x3368, x5, 4);
    let x3370: BytePoly_4 = bigint_nondet_rem!(ctx, x3368, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3369, x5, 8), x3370, 8), x3368, 8),
        32515,
        2,
    )?;
    let x3371: BytePoly_1 = bigint_nondet_rem!(ctx, x3315, x1, 1);
    let x3372: BytePoly_4 = bigint_nondet_quot!(ctx, x3315, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3372, x1, 5), x3371, 5), x3315, 5),
        32515,
        2,
    )?;
    let x3373: BytePoly_1 = bigint_sub!(x2, x3371, 1);
    eqz(ctx, &bigint_mul!(x3371, x3373, 2), 8131, 2)?;
    let x3374: BytePoly_4 = bigint_add!(bigint_sub!(x3370, x3336, 4), x5, 4);
    let x3375: BytePoly_4 = bigint_add!(bigint_sub!(x3364, x3334, 4), x5, 4);
    let x3376: BytePoly_4 = bigint_nondet_inv!(ctx, x3375, x5, 4);
    let x3377: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x3374, x3376, 8), x5, 4);
    let x3378: BytePoly_8 = bigint_add!(bigint_sub!(bigint_mul!(x3377, x3375, 8), x3374, 8), x5, 8);
    let x3379: BytePoly_9 = bigint_nondet_quot!(ctx, x3378, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x3378, bigint_mul!(x3379, x5, 13), 13),
        73156,
        4,
    )?;
    let x3380: BytePoly_8 = bigint_mul!(x3377, x3377, 8);
    let x3381: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3380, x3334, 8), x5, 8), x3364, 8),
        x5,
        8
    );
    let x3382: BytePoly_9 = bigint_nondet_quot!(ctx, x3381, x5, 9);
    let x3383: BytePoly_4 = bigint_nondet_rem!(ctx, x3381, x5, 4);
    let x3384: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x5,
                bigint_add!(
                    bigint_mul!(x3377, x3383, 8),
                    bigint_add!(bigint_sub!(x3336, bigint_mul!(x3377, x3334, 8), 8), x5, 8),
                    8
                ),
                8
            ),
            x5,
            8
        ),
        x5,
        8
    );
    let x3385: BytePoly_9 = bigint_nondet_quot!(ctx, x3384, x5, 9);
    let x3386: BytePoly_4 = bigint_nondet_rem!(ctx, x3384, x5, 4);
    let x3387: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3380, bigint_mul!(x3382, x5, 13), 13),
                        x3334,
                        13
                    ),
                    x3364,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x3383,
        13
    );
    eqz(ctx, &x3387, 73156, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3385, x5, 13), x3386, 13),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3377, bigint_sub!(x3334, x3383, 4), 8),
                        x3336,
                        8
                    ),
                    x5,
                    8
                ),
                x5,
                8
            ),
            13
        ),
        73156,
        4,
    )?;
    let x3388: BytePoly_5 = bigint_add!(
        bigint_mul!(x3383, x3371, 5),
        bigint_mul!(x3334, x3373, 5),
        5
    );
    let x3389: BytePoly_5 = bigint_add!(
        bigint_mul!(x3386, x3371, 5),
        bigint_mul!(x3336, x3373, 5),
        5
    );
    let x3390: BytePoly_6 = bigint_nondet_quot!(ctx, x3388, x5, 6);
    let x3391: BytePoly_4 = bigint_nondet_rem!(ctx, x3388, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3390, x5, 10), x3391, 10),
            x3388,
            10
        ),
        48771,
        4,
    )?;
    let x3392: BytePoly_6 = bigint_nondet_quot!(ctx, x3389, x5, 6);
    let x3393: BytePoly_4 = bigint_nondet_rem!(ctx, x3389, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3392, x5, 10), x3393, 10),
            x3389,
            10
        ),
        48771,
        4,
    )?;
    let x3394: BytePoly_8 = bigint_mul!(x3364, x3364, 8);
    let x3395: BytePoly_9 = bigint_nondet_quot!(ctx, x3394, x5, 9);
    let x3396: BytePoly_4 = bigint_nondet_rem!(ctx, x3394, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3395, x5, 13), x3396, 13),
            x3394,
            13
        ),
        73156,
        4,
    )?;
    let x3397: BytePoly_5 = bigint_add!(bigint_mul!(x3396, x0, 5), x4, 5);
    let x3398: BytePoly_6 = bigint_nondet_quot!(ctx, x3397, x5, 6);
    let x3399: BytePoly_4 = bigint_nondet_rem!(ctx, x3397, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3398, x5, 10), x3399, 10),
            x3397,
            10
        ),
        48771,
        4,
    )?;
    let x3400: BytePoly_4 = bigint_add!(x3370, x3370, 4);
    let x3401: BytePoly_4 = bigint_nondet_quot!(ctx, x3400, x5, 4);
    let x3402: BytePoly_4 = bigint_nondet_rem!(ctx, x3400, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3401, x5, 8), x3402, 8), x3400, 8),
        32515,
        2,
    )?;
    let x3403: BytePoly_4 = bigint_nondet_inv!(ctx, x3402, x5, 4);
    let x3404: BytePoly_8 = bigint_mul!(x3402, x3403, 8);
    let x3405: BytePoly_9 = bigint_nondet_quot!(ctx, x3404, x5, 9);
    let x3406: BytePoly_4 = bigint_nondet_rem!(ctx, x3404, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3405, x5, 13), x3406, 13),
            x3404,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x3406, x2, 4), 34, 1)?;
    let x3407: BytePoly_8 = bigint_mul!(x3399, x3403, 8);
    let x3408: BytePoly_9 = bigint_nondet_quot!(ctx, x3407, x5, 9);
    let x3409: BytePoly_4 = bigint_nondet_rem!(ctx, x3407, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3408, x5, 13), x3409, 13),
            x3407,
            13
        ),
        73156,
        4,
    )?;
    let x3410: BytePoly_8 = bigint_mul!(x3409, x3364, 8);
    let x3411: BytePoly_9 = bigint_nondet_quot!(ctx, x3410, x5, 9);
    let x3412: BytePoly_4 = bigint_nondet_rem!(ctx, x3410, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3411, x5, 13), x3412, 13),
            x3410,
            13
        ),
        73156,
        4,
    )?;
    let x3413: BytePoly_4 = bigint_add!(bigint_sub!(x3370, x3412, 4), x5, 4);
    let x3414: BytePoly_4 = bigint_nondet_quot!(ctx, x3413, x5, 4);
    let x3415: BytePoly_4 = bigint_nondet_rem!(ctx, x3413, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3414, x5, 8), x3415, 8), x3413, 8),
        32515,
        2,
    )?;
    let x3416: BytePoly_8 = bigint_mul!(x3409, x3409, 8);
    let x3417: BytePoly_9 = bigint_nondet_quot!(ctx, x3416, x5, 9);
    let x3418: BytePoly_4 = bigint_nondet_rem!(ctx, x3416, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3417, x5, 13), x3418, 13),
            x3416,
            13
        ),
        73156,
        4,
    )?;
    let x3419: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3418, x3364, 4), x5, 4), x3364, 4),
        x5,
        4
    );
    let x3420: BytePoly_4 = bigint_nondet_quot!(ctx, x3419, x5, 4);
    let x3421: BytePoly_4 = bigint_nondet_rem!(ctx, x3419, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3420, x5, 8), x3421, 8), x3419, 8),
        32515,
        2,
    )?;
    let x3422: BytePoly_8 = bigint_mul!(x3409, x3421, 8);
    let x3423: BytePoly_9 = bigint_nondet_quot!(ctx, x3422, x5, 9);
    let x3424: BytePoly_4 = bigint_nondet_rem!(ctx, x3422, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3423, x5, 13), x3424, 13),
            x3422,
            13
        ),
        73156,
        4,
    )?;
    let x3425: BytePoly_4 = bigint_add!(bigint_sub!(x5, bigint_add!(x3424, x3415, 4), 4), x5, 4);
    let x3426: BytePoly_4 = bigint_nondet_quot!(ctx, x3425, x5, 4);
    let x3427: BytePoly_4 = bigint_nondet_rem!(ctx, x3425, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3426, x5, 8), x3427, 8), x3425, 8),
        32515,
        2,
    )?;
    let x3428: BytePoly_1 = bigint_nondet_rem!(ctx, x3372, x1, 1);
    let x3429: BytePoly_4 = bigint_nondet_quot!(ctx, x3372, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3429, x1, 5), x3428, 5), x3372, 5),
        32515,
        2,
    )?;
    let x3430: BytePoly_1 = bigint_sub!(x2, x3428, 1);
    eqz(ctx, &bigint_mul!(x3428, x3430, 2), 8131, 2)?;
    let x3431: BytePoly_4 = bigint_add!(bigint_sub!(x3427, x3393, 4), x5, 4);
    let x3432: BytePoly_4 = bigint_add!(bigint_sub!(x3421, x3391, 4), x5, 4);
    let x3433: BytePoly_4 = bigint_nondet_inv!(ctx, x3432, x5, 4);
    let x3434: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x3431, x3433, 8), x5, 4);
    let x3435: BytePoly_8 = bigint_add!(bigint_sub!(bigint_mul!(x3434, x3432, 8), x3431, 8), x5, 8);
    let x3436: BytePoly_9 = bigint_nondet_quot!(ctx, x3435, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x3435, bigint_mul!(x3436, x5, 13), 13),
        73156,
        4,
    )?;
    let x3437: BytePoly_8 = bigint_mul!(x3434, x3434, 8);
    let x3438: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3437, x3391, 8), x5, 8), x3421, 8),
        x5,
        8
    );
    let x3439: BytePoly_9 = bigint_nondet_quot!(ctx, x3438, x5, 9);
    let x3440: BytePoly_4 = bigint_nondet_rem!(ctx, x3438, x5, 4);
    let x3441: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x5,
                bigint_add!(
                    bigint_mul!(x3434, x3440, 8),
                    bigint_add!(bigint_sub!(x3393, bigint_mul!(x3434, x3391, 8), 8), x5, 8),
                    8
                ),
                8
            ),
            x5,
            8
        ),
        x5,
        8
    );
    let x3442: BytePoly_9 = bigint_nondet_quot!(ctx, x3441, x5, 9);
    let x3443: BytePoly_4 = bigint_nondet_rem!(ctx, x3441, x5, 4);
    let x3444: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3437, bigint_mul!(x3439, x5, 13), 13),
                        x3391,
                        13
                    ),
                    x3421,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x3440,
        13
    );
    eqz(ctx, &x3444, 73156, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3442, x5, 13), x3443, 13),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3434, bigint_sub!(x3391, x3440, 4), 8),
                        x3393,
                        8
                    ),
                    x5,
                    8
                ),
                x5,
                8
            ),
            13
        ),
        73156,
        4,
    )?;
    let x3445: BytePoly_5 = bigint_add!(
        bigint_mul!(x3440, x3428, 5),
        bigint_mul!(x3391, x3430, 5),
        5
    );
    let x3446: BytePoly_5 = bigint_add!(
        bigint_mul!(x3443, x3428, 5),
        bigint_mul!(x3393, x3430, 5),
        5
    );
    let x3447: BytePoly_6 = bigint_nondet_quot!(ctx, x3445, x5, 6);
    let x3448: BytePoly_4 = bigint_nondet_rem!(ctx, x3445, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3447, x5, 10), x3448, 10),
            x3445,
            10
        ),
        48771,
        4,
    )?;
    let x3449: BytePoly_6 = bigint_nondet_quot!(ctx, x3446, x5, 6);
    let x3450: BytePoly_4 = bigint_nondet_rem!(ctx, x3446, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3449, x5, 10), x3450, 10),
            x3446,
            10
        ),
        48771,
        4,
    )?;
    let x3451: BytePoly_8 = bigint_mul!(x3421, x3421, 8);
    let x3452: BytePoly_9 = bigint_nondet_quot!(ctx, x3451, x5, 9);
    let x3453: BytePoly_4 = bigint_nondet_rem!(ctx, x3451, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3452, x5, 13), x3453, 13),
            x3451,
            13
        ),
        73156,
        4,
    )?;
    let x3454: BytePoly_5 = bigint_add!(bigint_mul!(x3453, x0, 5), x4, 5);
    let x3455: BytePoly_6 = bigint_nondet_quot!(ctx, x3454, x5, 6);
    let x3456: BytePoly_4 = bigint_nondet_rem!(ctx, x3454, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3455, x5, 10), x3456, 10),
            x3454,
            10
        ),
        48771,
        4,
    )?;
    let x3457: BytePoly_4 = bigint_add!(x3427, x3427, 4);
    let x3458: BytePoly_4 = bigint_nondet_quot!(ctx, x3457, x5, 4);
    let x3459: BytePoly_4 = bigint_nondet_rem!(ctx, x3457, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3458, x5, 8), x3459, 8), x3457, 8),
        32515,
        2,
    )?;
    let x3460: BytePoly_4 = bigint_nondet_inv!(ctx, x3459, x5, 4);
    let x3461: BytePoly_8 = bigint_mul!(x3459, x3460, 8);
    let x3462: BytePoly_9 = bigint_nondet_quot!(ctx, x3461, x5, 9);
    let x3463: BytePoly_4 = bigint_nondet_rem!(ctx, x3461, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3462, x5, 13), x3463, 13),
            x3461,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x3463, x2, 4), 34, 1)?;
    let x3464: BytePoly_8 = bigint_mul!(x3456, x3460, 8);
    let x3465: BytePoly_9 = bigint_nondet_quot!(ctx, x3464, x5, 9);
    let x3466: BytePoly_4 = bigint_nondet_rem!(ctx, x3464, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3465, x5, 13), x3466, 13),
            x3464,
            13
        ),
        73156,
        4,
    )?;
    let x3467: BytePoly_8 = bigint_mul!(x3466, x3421, 8);
    let x3468: BytePoly_9 = bigint_nondet_quot!(ctx, x3467, x5, 9);
    let x3469: BytePoly_4 = bigint_nondet_rem!(ctx, x3467, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3468, x5, 13), x3469, 13),
            x3467,
            13
        ),
        73156,
        4,
    )?;
    let x3470: BytePoly_4 = bigint_add!(bigint_sub!(x3427, x3469, 4), x5, 4);
    let x3471: BytePoly_4 = bigint_nondet_quot!(ctx, x3470, x5, 4);
    let x3472: BytePoly_4 = bigint_nondet_rem!(ctx, x3470, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3471, x5, 8), x3472, 8), x3470, 8),
        32515,
        2,
    )?;
    let x3473: BytePoly_8 = bigint_mul!(x3466, x3466, 8);
    let x3474: BytePoly_9 = bigint_nondet_quot!(ctx, x3473, x5, 9);
    let x3475: BytePoly_4 = bigint_nondet_rem!(ctx, x3473, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3474, x5, 13), x3475, 13),
            x3473,
            13
        ),
        73156,
        4,
    )?;
    let x3476: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3475, x3421, 4), x5, 4), x3421, 4),
        x5,
        4
    );
    let x3477: BytePoly_4 = bigint_nondet_quot!(ctx, x3476, x5, 4);
    let x3478: BytePoly_4 = bigint_nondet_rem!(ctx, x3476, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3477, x5, 8), x3478, 8), x3476, 8),
        32515,
        2,
    )?;
    let x3479: BytePoly_8 = bigint_mul!(x3466, x3478, 8);
    let x3480: BytePoly_9 = bigint_nondet_quot!(ctx, x3479, x5, 9);
    let x3481: BytePoly_4 = bigint_nondet_rem!(ctx, x3479, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3480, x5, 13), x3481, 13),
            x3479,
            13
        ),
        73156,
        4,
    )?;
    let x3482: BytePoly_4 = bigint_add!(bigint_sub!(x5, bigint_add!(x3481, x3472, 4), 4), x5, 4);
    let x3483: BytePoly_4 = bigint_nondet_quot!(ctx, x3482, x5, 4);
    let x3484: BytePoly_4 = bigint_nondet_rem!(ctx, x3482, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3483, x5, 8), x3484, 8), x3482, 8),
        32515,
        2,
    )?;
    let x3485: BytePoly_1 = bigint_nondet_rem!(ctx, x3429, x1, 1);
    let x3486: BytePoly_4 = bigint_nondet_quot!(ctx, x3429, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3486, x1, 5), x3485, 5), x3429, 5),
        32515,
        2,
    )?;
    let x3487: BytePoly_1 = bigint_sub!(x2, x3485, 1);
    eqz(ctx, &bigint_mul!(x3485, x3487, 2), 8131, 2)?;
    let x3488: BytePoly_4 = bigint_add!(bigint_sub!(x3484, x3450, 4), x5, 4);
    let x3489: BytePoly_4 = bigint_add!(bigint_sub!(x3478, x3448, 4), x5, 4);
    let x3490: BytePoly_4 = bigint_nondet_inv!(ctx, x3489, x5, 4);
    let x3491: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x3488, x3490, 8), x5, 4);
    let x3492: BytePoly_8 = bigint_add!(bigint_sub!(bigint_mul!(x3491, x3489, 8), x3488, 8), x5, 8);
    let x3493: BytePoly_9 = bigint_nondet_quot!(ctx, x3492, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x3492, bigint_mul!(x3493, x5, 13), 13),
        73156,
        4,
    )?;
    let x3494: BytePoly_8 = bigint_mul!(x3491, x3491, 8);
    let x3495: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3494, x3448, 8), x5, 8), x3478, 8),
        x5,
        8
    );
    let x3496: BytePoly_9 = bigint_nondet_quot!(ctx, x3495, x5, 9);
    let x3497: BytePoly_4 = bigint_nondet_rem!(ctx, x3495, x5, 4);
    let x3498: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x5,
                bigint_add!(
                    bigint_mul!(x3491, x3497, 8),
                    bigint_add!(bigint_sub!(x3450, bigint_mul!(x3491, x3448, 8), 8), x5, 8),
                    8
                ),
                8
            ),
            x5,
            8
        ),
        x5,
        8
    );
    let x3499: BytePoly_9 = bigint_nondet_quot!(ctx, x3498, x5, 9);
    let x3500: BytePoly_4 = bigint_nondet_rem!(ctx, x3498, x5, 4);
    let x3501: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3494, bigint_mul!(x3496, x5, 13), 13),
                        x3448,
                        13
                    ),
                    x3478,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x3497,
        13
    );
    eqz(ctx, &x3501, 73156, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3499, x5, 13), x3500, 13),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3491, bigint_sub!(x3448, x3497, 4), 8),
                        x3450,
                        8
                    ),
                    x5,
                    8
                ),
                x5,
                8
            ),
            13
        ),
        73156,
        4,
    )?;
    let x3502: BytePoly_5 = bigint_add!(
        bigint_mul!(x3497, x3485, 5),
        bigint_mul!(x3448, x3487, 5),
        5
    );
    let x3503: BytePoly_5 = bigint_add!(
        bigint_mul!(x3500, x3485, 5),
        bigint_mul!(x3450, x3487, 5),
        5
    );
    let x3504: BytePoly_6 = bigint_nondet_quot!(ctx, x3502, x5, 6);
    let x3505: BytePoly_4 = bigint_nondet_rem!(ctx, x3502, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3504, x5, 10), x3505, 10),
            x3502,
            10
        ),
        48771,
        4,
    )?;
    let x3506: BytePoly_6 = bigint_nondet_quot!(ctx, x3503, x5, 6);
    let x3507: BytePoly_4 = bigint_nondet_rem!(ctx, x3503, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3506, x5, 10), x3507, 10),
            x3503,
            10
        ),
        48771,
        4,
    )?;
    let x3508: BytePoly_8 = bigint_mul!(x3478, x3478, 8);
    let x3509: BytePoly_9 = bigint_nondet_quot!(ctx, x3508, x5, 9);
    let x3510: BytePoly_4 = bigint_nondet_rem!(ctx, x3508, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3509, x5, 13), x3510, 13),
            x3508,
            13
        ),
        73156,
        4,
    )?;
    let x3511: BytePoly_5 = bigint_add!(bigint_mul!(x3510, x0, 5), x4, 5);
    let x3512: BytePoly_6 = bigint_nondet_quot!(ctx, x3511, x5, 6);
    let x3513: BytePoly_4 = bigint_nondet_rem!(ctx, x3511, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3512, x5, 10), x3513, 10),
            x3511,
            10
        ),
        48771,
        4,
    )?;
    let x3514: BytePoly_4 = bigint_add!(x3484, x3484, 4);
    let x3515: BytePoly_4 = bigint_nondet_quot!(ctx, x3514, x5, 4);
    let x3516: BytePoly_4 = bigint_nondet_rem!(ctx, x3514, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3515, x5, 8), x3516, 8), x3514, 8),
        32515,
        2,
    )?;
    let x3517: BytePoly_4 = bigint_nondet_inv!(ctx, x3516, x5, 4);
    let x3518: BytePoly_8 = bigint_mul!(x3516, x3517, 8);
    let x3519: BytePoly_9 = bigint_nondet_quot!(ctx, x3518, x5, 9);
    let x3520: BytePoly_4 = bigint_nondet_rem!(ctx, x3518, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3519, x5, 13), x3520, 13),
            x3518,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x3520, x2, 4), 34, 1)?;
    let x3521: BytePoly_8 = bigint_mul!(x3513, x3517, 8);
    let x3522: BytePoly_9 = bigint_nondet_quot!(ctx, x3521, x5, 9);
    let x3523: BytePoly_4 = bigint_nondet_rem!(ctx, x3521, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3522, x5, 13), x3523, 13),
            x3521,
            13
        ),
        73156,
        4,
    )?;
    let x3524: BytePoly_8 = bigint_mul!(x3523, x3478, 8);
    let x3525: BytePoly_9 = bigint_nondet_quot!(ctx, x3524, x5, 9);
    let x3526: BytePoly_4 = bigint_nondet_rem!(ctx, x3524, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3525, x5, 13), x3526, 13),
            x3524,
            13
        ),
        73156,
        4,
    )?;
    let x3527: BytePoly_4 = bigint_add!(bigint_sub!(x3484, x3526, 4), x5, 4);
    let x3528: BytePoly_4 = bigint_nondet_quot!(ctx, x3527, x5, 4);
    let x3529: BytePoly_4 = bigint_nondet_rem!(ctx, x3527, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3528, x5, 8), x3529, 8), x3527, 8),
        32515,
        2,
    )?;
    let x3530: BytePoly_8 = bigint_mul!(x3523, x3523, 8);
    let x3531: BytePoly_9 = bigint_nondet_quot!(ctx, x3530, x5, 9);
    let x3532: BytePoly_4 = bigint_nondet_rem!(ctx, x3530, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3531, x5, 13), x3532, 13),
            x3530,
            13
        ),
        73156,
        4,
    )?;
    let x3533: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3532, x3478, 4), x5, 4), x3478, 4),
        x5,
        4
    );
    let x3534: BytePoly_4 = bigint_nondet_quot!(ctx, x3533, x5, 4);
    let x3535: BytePoly_4 = bigint_nondet_rem!(ctx, x3533, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3534, x5, 8), x3535, 8), x3533, 8),
        32515,
        2,
    )?;
    let x3536: BytePoly_8 = bigint_mul!(x3523, x3535, 8);
    let x3537: BytePoly_9 = bigint_nondet_quot!(ctx, x3536, x5, 9);
    let x3538: BytePoly_4 = bigint_nondet_rem!(ctx, x3536, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3537, x5, 13), x3538, 13),
            x3536,
            13
        ),
        73156,
        4,
    )?;
    let x3539: BytePoly_4 = bigint_add!(bigint_sub!(x5, bigint_add!(x3538, x3529, 4), 4), x5, 4);
    let x3540: BytePoly_4 = bigint_nondet_quot!(ctx, x3539, x5, 4);
    let x3541: BytePoly_4 = bigint_nondet_rem!(ctx, x3539, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3540, x5, 8), x3541, 8), x3539, 8),
        32515,
        2,
    )?;
    let x3542: BytePoly_1 = bigint_nondet_rem!(ctx, x3486, x1, 1);
    let x3543: BytePoly_4 = bigint_nondet_quot!(ctx, x3486, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3543, x1, 5), x3542, 5), x3486, 5),
        32515,
        2,
    )?;
    let x3544: BytePoly_1 = bigint_sub!(x2, x3542, 1);
    eqz(ctx, &bigint_mul!(x3542, x3544, 2), 8131, 2)?;
    let x3545: BytePoly_4 = bigint_add!(bigint_sub!(x3541, x3507, 4), x5, 4);
    let x3546: BytePoly_4 = bigint_add!(bigint_sub!(x3535, x3505, 4), x5, 4);
    let x3547: BytePoly_4 = bigint_nondet_inv!(ctx, x3546, x5, 4);
    let x3548: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x3545, x3547, 8), x5, 4);
    let x3549: BytePoly_8 = bigint_add!(bigint_sub!(bigint_mul!(x3548, x3546, 8), x3545, 8), x5, 8);
    let x3550: BytePoly_9 = bigint_nondet_quot!(ctx, x3549, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x3549, bigint_mul!(x3550, x5, 13), 13),
        73156,
        4,
    )?;
    let x3551: BytePoly_8 = bigint_mul!(x3548, x3548, 8);
    let x3552: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3551, x3505, 8), x5, 8), x3535, 8),
        x5,
        8
    );
    let x3553: BytePoly_9 = bigint_nondet_quot!(ctx, x3552, x5, 9);
    let x3554: BytePoly_4 = bigint_nondet_rem!(ctx, x3552, x5, 4);
    let x3555: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x5,
                bigint_add!(
                    bigint_mul!(x3548, x3554, 8),
                    bigint_add!(bigint_sub!(x3507, bigint_mul!(x3548, x3505, 8), 8), x5, 8),
                    8
                ),
                8
            ),
            x5,
            8
        ),
        x5,
        8
    );
    let x3556: BytePoly_9 = bigint_nondet_quot!(ctx, x3555, x5, 9);
    let x3557: BytePoly_4 = bigint_nondet_rem!(ctx, x3555, x5, 4);
    let x3558: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3551, bigint_mul!(x3553, x5, 13), 13),
                        x3505,
                        13
                    ),
                    x3535,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x3554,
        13
    );
    eqz(ctx, &x3558, 73156, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3556, x5, 13), x3557, 13),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3548, bigint_sub!(x3505, x3554, 4), 8),
                        x3507,
                        8
                    ),
                    x5,
                    8
                ),
                x5,
                8
            ),
            13
        ),
        73156,
        4,
    )?;
    let x3559: BytePoly_5 = bigint_add!(
        bigint_mul!(x3554, x3542, 5),
        bigint_mul!(x3505, x3544, 5),
        5
    );
    let x3560: BytePoly_5 = bigint_add!(
        bigint_mul!(x3557, x3542, 5),
        bigint_mul!(x3507, x3544, 5),
        5
    );
    let x3561: BytePoly_6 = bigint_nondet_quot!(ctx, x3559, x5, 6);
    let x3562: BytePoly_4 = bigint_nondet_rem!(ctx, x3559, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3561, x5, 10), x3562, 10),
            x3559,
            10
        ),
        48771,
        4,
    )?;
    let x3563: BytePoly_6 = bigint_nondet_quot!(ctx, x3560, x5, 6);
    let x3564: BytePoly_4 = bigint_nondet_rem!(ctx, x3560, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3563, x5, 10), x3564, 10),
            x3560,
            10
        ),
        48771,
        4,
    )?;
    let x3565: BytePoly_8 = bigint_mul!(x3535, x3535, 8);
    let x3566: BytePoly_9 = bigint_nondet_quot!(ctx, x3565, x5, 9);
    let x3567: BytePoly_4 = bigint_nondet_rem!(ctx, x3565, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3566, x5, 13), x3567, 13),
            x3565,
            13
        ),
        73156,
        4,
    )?;
    let x3568: BytePoly_5 = bigint_add!(bigint_mul!(x3567, x0, 5), x4, 5);
    let x3569: BytePoly_6 = bigint_nondet_quot!(ctx, x3568, x5, 6);
    let x3570: BytePoly_4 = bigint_nondet_rem!(ctx, x3568, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3569, x5, 10), x3570, 10),
            x3568,
            10
        ),
        48771,
        4,
    )?;
    let x3571: BytePoly_4 = bigint_add!(x3541, x3541, 4);
    let x3572: BytePoly_4 = bigint_nondet_quot!(ctx, x3571, x5, 4);
    let x3573: BytePoly_4 = bigint_nondet_rem!(ctx, x3571, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3572, x5, 8), x3573, 8), x3571, 8),
        32515,
        2,
    )?;
    let x3574: BytePoly_4 = bigint_nondet_inv!(ctx, x3573, x5, 4);
    let x3575: BytePoly_8 = bigint_mul!(x3573, x3574, 8);
    let x3576: BytePoly_9 = bigint_nondet_quot!(ctx, x3575, x5, 9);
    let x3577: BytePoly_4 = bigint_nondet_rem!(ctx, x3575, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3576, x5, 13), x3577, 13),
            x3575,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x3577, x2, 4), 34, 1)?;
    let x3578: BytePoly_8 = bigint_mul!(x3570, x3574, 8);
    let x3579: BytePoly_9 = bigint_nondet_quot!(ctx, x3578, x5, 9);
    let x3580: BytePoly_4 = bigint_nondet_rem!(ctx, x3578, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3579, x5, 13), x3580, 13),
            x3578,
            13
        ),
        73156,
        4,
    )?;
    let x3581: BytePoly_8 = bigint_mul!(x3580, x3535, 8);
    let x3582: BytePoly_9 = bigint_nondet_quot!(ctx, x3581, x5, 9);
    let x3583: BytePoly_4 = bigint_nondet_rem!(ctx, x3581, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3582, x5, 13), x3583, 13),
            x3581,
            13
        ),
        73156,
        4,
    )?;
    let x3584: BytePoly_4 = bigint_add!(bigint_sub!(x3541, x3583, 4), x5, 4);
    let x3585: BytePoly_4 = bigint_nondet_quot!(ctx, x3584, x5, 4);
    let x3586: BytePoly_4 = bigint_nondet_rem!(ctx, x3584, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3585, x5, 8), x3586, 8), x3584, 8),
        32515,
        2,
    )?;
    let x3587: BytePoly_8 = bigint_mul!(x3580, x3580, 8);
    let x3588: BytePoly_9 = bigint_nondet_quot!(ctx, x3587, x5, 9);
    let x3589: BytePoly_4 = bigint_nondet_rem!(ctx, x3587, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3588, x5, 13), x3589, 13),
            x3587,
            13
        ),
        73156,
        4,
    )?;
    let x3590: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3589, x3535, 4), x5, 4), x3535, 4),
        x5,
        4
    );
    let x3591: BytePoly_4 = bigint_nondet_quot!(ctx, x3590, x5, 4);
    let x3592: BytePoly_4 = bigint_nondet_rem!(ctx, x3590, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3591, x5, 8), x3592, 8), x3590, 8),
        32515,
        2,
    )?;
    let x3593: BytePoly_8 = bigint_mul!(x3580, x3592, 8);
    let x3594: BytePoly_9 = bigint_nondet_quot!(ctx, x3593, x5, 9);
    let x3595: BytePoly_4 = bigint_nondet_rem!(ctx, x3593, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3594, x5, 13), x3595, 13),
            x3593,
            13
        ),
        73156,
        4,
    )?;
    let x3596: BytePoly_4 = bigint_add!(bigint_sub!(x5, bigint_add!(x3595, x3586, 4), 4), x5, 4);
    let x3597: BytePoly_4 = bigint_nondet_quot!(ctx, x3596, x5, 4);
    let x3598: BytePoly_4 = bigint_nondet_rem!(ctx, x3596, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3597, x5, 8), x3598, 8), x3596, 8),
        32515,
        2,
    )?;
    let x3599: BytePoly_1 = bigint_nondet_rem!(ctx, x3543, x1, 1);
    let x3600: BytePoly_4 = bigint_nondet_quot!(ctx, x3543, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3600, x1, 5), x3599, 5), x3543, 5),
        32515,
        2,
    )?;
    let x3601: BytePoly_1 = bigint_sub!(x2, x3599, 1);
    eqz(ctx, &bigint_mul!(x3599, x3601, 2), 8131, 2)?;
    let x3602: BytePoly_4 = bigint_add!(bigint_sub!(x3598, x3564, 4), x5, 4);
    let x3603: BytePoly_4 = bigint_add!(bigint_sub!(x3592, x3562, 4), x5, 4);
    let x3604: BytePoly_4 = bigint_nondet_inv!(ctx, x3603, x5, 4);
    let x3605: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x3602, x3604, 8), x5, 4);
    let x3606: BytePoly_8 = bigint_add!(bigint_sub!(bigint_mul!(x3605, x3603, 8), x3602, 8), x5, 8);
    let x3607: BytePoly_9 = bigint_nondet_quot!(ctx, x3606, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x3606, bigint_mul!(x3607, x5, 13), 13),
        73156,
        4,
    )?;
    let x3608: BytePoly_8 = bigint_mul!(x3605, x3605, 8);
    let x3609: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3608, x3562, 8), x5, 8), x3592, 8),
        x5,
        8
    );
    let x3610: BytePoly_9 = bigint_nondet_quot!(ctx, x3609, x5, 9);
    let x3611: BytePoly_4 = bigint_nondet_rem!(ctx, x3609, x5, 4);
    let x3612: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x5,
                bigint_add!(
                    bigint_mul!(x3605, x3611, 8),
                    bigint_add!(bigint_sub!(x3564, bigint_mul!(x3605, x3562, 8), 8), x5, 8),
                    8
                ),
                8
            ),
            x5,
            8
        ),
        x5,
        8
    );
    let x3613: BytePoly_9 = bigint_nondet_quot!(ctx, x3612, x5, 9);
    let x3614: BytePoly_4 = bigint_nondet_rem!(ctx, x3612, x5, 4);
    let x3615: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3608, bigint_mul!(x3610, x5, 13), 13),
                        x3562,
                        13
                    ),
                    x3592,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x3611,
        13
    );
    eqz(ctx, &x3615, 73156, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3613, x5, 13), x3614, 13),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3605, bigint_sub!(x3562, x3611, 4), 8),
                        x3564,
                        8
                    ),
                    x5,
                    8
                ),
                x5,
                8
            ),
            13
        ),
        73156,
        4,
    )?;
    let x3616: BytePoly_5 = bigint_add!(
        bigint_mul!(x3611, x3599, 5),
        bigint_mul!(x3562, x3601, 5),
        5
    );
    let x3617: BytePoly_5 = bigint_add!(
        bigint_mul!(x3614, x3599, 5),
        bigint_mul!(x3564, x3601, 5),
        5
    );
    let x3618: BytePoly_6 = bigint_nondet_quot!(ctx, x3616, x5, 6);
    let x3619: BytePoly_4 = bigint_nondet_rem!(ctx, x3616, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3618, x5, 10), x3619, 10),
            x3616,
            10
        ),
        48771,
        4,
    )?;
    let x3620: BytePoly_6 = bigint_nondet_quot!(ctx, x3617, x5, 6);
    let x3621: BytePoly_4 = bigint_nondet_rem!(ctx, x3617, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3620, x5, 10), x3621, 10),
            x3617,
            10
        ),
        48771,
        4,
    )?;
    let x3622: BytePoly_8 = bigint_mul!(x3592, x3592, 8);
    let x3623: BytePoly_9 = bigint_nondet_quot!(ctx, x3622, x5, 9);
    let x3624: BytePoly_4 = bigint_nondet_rem!(ctx, x3622, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3623, x5, 13), x3624, 13),
            x3622,
            13
        ),
        73156,
        4,
    )?;
    let x3625: BytePoly_5 = bigint_add!(bigint_mul!(x3624, x0, 5), x4, 5);
    let x3626: BytePoly_6 = bigint_nondet_quot!(ctx, x3625, x5, 6);
    let x3627: BytePoly_4 = bigint_nondet_rem!(ctx, x3625, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3626, x5, 10), x3627, 10),
            x3625,
            10
        ),
        48771,
        4,
    )?;
    let x3628: BytePoly_4 = bigint_add!(x3598, x3598, 4);
    let x3629: BytePoly_4 = bigint_nondet_quot!(ctx, x3628, x5, 4);
    let x3630: BytePoly_4 = bigint_nondet_rem!(ctx, x3628, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3629, x5, 8), x3630, 8), x3628, 8),
        32515,
        2,
    )?;
    let x3631: BytePoly_4 = bigint_nondet_inv!(ctx, x3630, x5, 4);
    let x3632: BytePoly_8 = bigint_mul!(x3630, x3631, 8);
    let x3633: BytePoly_9 = bigint_nondet_quot!(ctx, x3632, x5, 9);
    let x3634: BytePoly_4 = bigint_nondet_rem!(ctx, x3632, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3633, x5, 13), x3634, 13),
            x3632,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x3634, x2, 4), 34, 1)?;
    let x3635: BytePoly_8 = bigint_mul!(x3627, x3631, 8);
    let x3636: BytePoly_9 = bigint_nondet_quot!(ctx, x3635, x5, 9);
    let x3637: BytePoly_4 = bigint_nondet_rem!(ctx, x3635, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3636, x5, 13), x3637, 13),
            x3635,
            13
        ),
        73156,
        4,
    )?;
    let x3638: BytePoly_8 = bigint_mul!(x3637, x3592, 8);
    let x3639: BytePoly_9 = bigint_nondet_quot!(ctx, x3638, x5, 9);
    let x3640: BytePoly_4 = bigint_nondet_rem!(ctx, x3638, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3639, x5, 13), x3640, 13),
            x3638,
            13
        ),
        73156,
        4,
    )?;
    let x3641: BytePoly_4 = bigint_add!(bigint_sub!(x3598, x3640, 4), x5, 4);
    let x3642: BytePoly_4 = bigint_nondet_quot!(ctx, x3641, x5, 4);
    let x3643: BytePoly_4 = bigint_nondet_rem!(ctx, x3641, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3642, x5, 8), x3643, 8), x3641, 8),
        32515,
        2,
    )?;
    let x3644: BytePoly_8 = bigint_mul!(x3637, x3637, 8);
    let x3645: BytePoly_9 = bigint_nondet_quot!(ctx, x3644, x5, 9);
    let x3646: BytePoly_4 = bigint_nondet_rem!(ctx, x3644, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3645, x5, 13), x3646, 13),
            x3644,
            13
        ),
        73156,
        4,
    )?;
    let x3647: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3646, x3592, 4), x5, 4), x3592, 4),
        x5,
        4
    );
    let x3648: BytePoly_4 = bigint_nondet_quot!(ctx, x3647, x5, 4);
    let x3649: BytePoly_4 = bigint_nondet_rem!(ctx, x3647, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3648, x5, 8), x3649, 8), x3647, 8),
        32515,
        2,
    )?;
    let x3650: BytePoly_8 = bigint_mul!(x3637, x3649, 8);
    let x3651: BytePoly_9 = bigint_nondet_quot!(ctx, x3650, x5, 9);
    let x3652: BytePoly_4 = bigint_nondet_rem!(ctx, x3650, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3651, x5, 13), x3652, 13),
            x3650,
            13
        ),
        73156,
        4,
    )?;
    let x3653: BytePoly_4 = bigint_add!(bigint_sub!(x5, bigint_add!(x3652, x3643, 4), 4), x5, 4);
    let x3654: BytePoly_4 = bigint_nondet_quot!(ctx, x3653, x5, 4);
    let x3655: BytePoly_4 = bigint_nondet_rem!(ctx, x3653, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3654, x5, 8), x3655, 8), x3653, 8),
        32515,
        2,
    )?;
    let x3656: BytePoly_1 = bigint_nondet_rem!(ctx, x3600, x1, 1);
    let x3657: BytePoly_4 = bigint_nondet_quot!(ctx, x3600, x1, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3657, x1, 5), x3656, 5), x3600, 5),
        32515,
        2,
    )?;
    let x3658: BytePoly_1 = bigint_sub!(x2, x3656, 1);
    eqz(ctx, &bigint_mul!(x3656, x3658, 2), 8131, 2)?;
    let x3659: BytePoly_4 = bigint_add!(bigint_sub!(x3655, x3621, 4), x5, 4);
    let x3660: BytePoly_4 = bigint_add!(bigint_sub!(x3649, x3619, 4), x5, 4);
    let x3661: BytePoly_4 = bigint_nondet_inv!(ctx, x3660, x5, 4);
    let x3662: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x3659, x3661, 8), x5, 4);
    let x3663: BytePoly_8 = bigint_add!(bigint_sub!(bigint_mul!(x3662, x3660, 8), x3659, 8), x5, 8);
    let x3664: BytePoly_9 = bigint_nondet_quot!(ctx, x3663, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x3663, bigint_mul!(x3664, x5, 13), 13),
        73156,
        4,
    )?;
    let x3665: BytePoly_8 = bigint_mul!(x3662, x3662, 8);
    let x3666: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3665, x3619, 8), x5, 8), x3649, 8),
        x5,
        8
    );
    let x3667: BytePoly_9 = bigint_nondet_quot!(ctx, x3666, x5, 9);
    let x3668: BytePoly_4 = bigint_nondet_rem!(ctx, x3666, x5, 4);
    let x3669: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x5,
                bigint_add!(
                    bigint_mul!(x3662, x3668, 8),
                    bigint_add!(bigint_sub!(x3621, bigint_mul!(x3662, x3619, 8), 8), x5, 8),
                    8
                ),
                8
            ),
            x5,
            8
        ),
        x5,
        8
    );
    let x3670: BytePoly_9 = bigint_nondet_quot!(ctx, x3669, x5, 9);
    let x3671: BytePoly_4 = bigint_nondet_rem!(ctx, x3669, x5, 4);
    let x3672: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3665, bigint_mul!(x3667, x5, 13), 13),
                        x3619,
                        13
                    ),
                    x3649,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x3668,
        13
    );
    eqz(ctx, &x3672, 73156, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3670, x5, 13), x3671, 13),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3662, bigint_sub!(x3619, x3668, 4), 8),
                        x3621,
                        8
                    ),
                    x5,
                    8
                ),
                x5,
                8
            ),
            13
        ),
        73156,
        4,
    )?;
    let x3673: BytePoly_5 = bigint_add!(
        bigint_mul!(x3668, x3656, 5),
        bigint_mul!(x3619, x3658, 5),
        5
    );
    let x3674: BytePoly_5 = bigint_add!(
        bigint_mul!(x3671, x3656, 5),
        bigint_mul!(x3621, x3658, 5),
        5
    );
    let x3675: BytePoly_6 = bigint_nondet_quot!(ctx, x3673, x5, 6);
    let x3676: BytePoly_4 = bigint_nondet_rem!(ctx, x3673, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3675, x5, 10), x3676, 10),
            x3673,
            10
        ),
        48771,
        4,
    )?;
    let x3677: BytePoly_6 = bigint_nondet_quot!(ctx, x3674, x5, 6);
    let x3678: BytePoly_4 = bigint_nondet_rem!(ctx, x3674, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3677, x5, 10), x3678, 10),
            x3674,
            10
        ),
        48771,
        4,
    )?;
    let x3679: BytePoly_8 = bigint_mul!(x3649, x3649, 8);
    let x3680: BytePoly_9 = bigint_nondet_quot!(ctx, x3679, x5, 9);
    let x3681: BytePoly_4 = bigint_nondet_rem!(ctx, x3679, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3680, x5, 13), x3681, 13),
            x3679,
            13
        ),
        73156,
        4,
    )?;
    let x3682: BytePoly_5 = bigint_add!(bigint_mul!(x3681, x0, 5), x4, 5);
    let x3683: BytePoly_6 = bigint_nondet_quot!(ctx, x3682, x5, 6);
    let x3684: BytePoly_4 = bigint_nondet_rem!(ctx, x3682, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3683, x5, 10), x3684, 10),
            x3682,
            10
        ),
        48771,
        4,
    )?;
    let x3685: BytePoly_4 = bigint_add!(x3655, x3655, 4);
    let x3686: BytePoly_4 = bigint_nondet_quot!(ctx, x3685, x5, 4);
    let x3687: BytePoly_4 = bigint_nondet_rem!(ctx, x3685, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3686, x5, 8), x3687, 8), x3685, 8),
        32515,
        2,
    )?;
    let x3688: BytePoly_4 = bigint_nondet_inv!(ctx, x3687, x5, 4);
    let x3689: BytePoly_8 = bigint_mul!(x3687, x3688, 8);
    let x3690: BytePoly_9 = bigint_nondet_quot!(ctx, x3689, x5, 9);
    let x3691: BytePoly_4 = bigint_nondet_rem!(ctx, x3689, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3690, x5, 13), x3691, 13),
            x3689,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x3691, x2, 4), 34, 1)?;
    let x3692: BytePoly_8 = bigint_mul!(x3684, x3688, 8);
    let x3693: BytePoly_9 = bigint_nondet_quot!(ctx, x3692, x5, 9);
    let x3694: BytePoly_4 = bigint_nondet_rem!(ctx, x3692, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3693, x5, 13), x3694, 13),
            x3692,
            13
        ),
        73156,
        4,
    )?;
    let x3695: BytePoly_8 = bigint_mul!(x3694, x3649, 8);
    let x3696: BytePoly_9 = bigint_nondet_quot!(ctx, x3695, x5, 9);
    let x3697: BytePoly_4 = bigint_nondet_rem!(ctx, x3695, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3696, x5, 13), x3697, 13),
            x3695,
            13
        ),
        73156,
        4,
    )?;
    let x3698: BytePoly_4 = bigint_add!(bigint_sub!(x3655, x3697, 4), x5, 4);
    let x3699: BytePoly_4 = bigint_nondet_quot!(ctx, x3698, x5, 4);
    let x3700: BytePoly_4 = bigint_nondet_rem!(ctx, x3698, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3699, x5, 8), x3700, 8), x3698, 8),
        32515,
        2,
    )?;
    let x3701: BytePoly_8 = bigint_mul!(x3694, x3694, 8);
    let x3702: BytePoly_9 = bigint_nondet_quot!(ctx, x3701, x5, 9);
    let x3703: BytePoly_4 = bigint_nondet_rem!(ctx, x3701, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3702, x5, 13), x3703, 13),
            x3701,
            13
        ),
        73156,
        4,
    )?;
    let x3704: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3703, x3649, 4), x5, 4), x3649, 4),
        x5,
        4
    );
    let x3705: BytePoly_4 = bigint_nondet_quot!(ctx, x3704, x5, 4);
    let x3706: BytePoly_4 = bigint_nondet_rem!(ctx, x3704, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3705, x5, 8), x3706, 8), x3704, 8),
        32515,
        2,
    )?;
    let x3707: BytePoly_8 = bigint_mul!(x3694, x3706, 8);
    let x3708: BytePoly_9 = bigint_nondet_quot!(ctx, x3707, x5, 9);
    let x3709: BytePoly_4 = bigint_nondet_rem!(ctx, x3707, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3708, x5, 13), x3709, 13),
            x3707,
            13
        ),
        73156,
        4,
    )?;
    let x3710: BytePoly_4 = bigint_add!(bigint_sub!(x5, bigint_add!(x3709, x3700, 4), 4), x5, 4);
    let x3711: BytePoly_4 = bigint_nondet_quot!(ctx, x3710, x5, 4);
    let x3712: BytePoly_4 = bigint_nondet_rem!(ctx, x3710, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3711, x5, 8), x3712, 8), x3710, 8),
        32515,
        2,
    )?;
    let x3713: BytePoly_4 = bigint_add!(bigint_sub!(x1870, x3678, 4), x5, 4);
    let x3714: BytePoly_4 = bigint_add!(bigint_sub!(x15, x3676, 4), x5, 4);
    let x3715: BytePoly_4 = bigint_nondet_inv!(ctx, x3714, x5, 4);
    let x3716: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x3713, x3715, 8), x5, 4);
    let x3717: BytePoly_8 = bigint_add!(bigint_sub!(bigint_mul!(x3716, x3714, 8), x3713, 8), x5, 8);
    let x3718: BytePoly_9 = bigint_nondet_quot!(ctx, x3717, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x3717, bigint_mul!(x3718, x5, 13), 13),
        73156,
        4,
    )?;
    let x3719: BytePoly_8 = bigint_mul!(x3716, x3716, 8);
    let x3720: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3719, x3676, 8), x5, 8), x15, 8),
        x5,
        8
    );
    let x3721: BytePoly_9 = bigint_nondet_quot!(ctx, x3720, x5, 9);
    let x3722: BytePoly_4 = bigint_nondet_rem!(ctx, x3720, x5, 4);
    let x3723: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x5,
                bigint_add!(
                    bigint_mul!(x3716, x3722, 8),
                    bigint_add!(bigint_sub!(x3678, bigint_mul!(x3716, x3676, 8), 8), x5, 8),
                    8
                ),
                8
            ),
            x5,
            8
        ),
        x5,
        8
    );
    let x3724: BytePoly_9 = bigint_nondet_quot!(ctx, x3723, x5, 9);
    let x3725: BytePoly_4 = bigint_nondet_rem!(ctx, x3723, x5, 4);
    let x3726: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3719, bigint_mul!(x3721, x5, 13), 13),
                        x3676,
                        13
                    ),
                    x15,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x3722,
        13
    );
    eqz(ctx, &x3726, 73156, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3724, x5, 13), x3725, 13),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3716, bigint_sub!(x3676, x3722, 4), 8),
                        x3678,
                        8
                    ),
                    x5,
                    8
                ),
                x5,
                8
            ),
            13
        ),
        73156,
        4,
    )?;
    let x3727: BytePoly_4 = bigint_add!(bigint_sub!(x3725, x1883, 4), x5, 4);
    let x3728: BytePoly_4 = bigint_add!(bigint_sub!(x3722, x1880, 4), x5, 4);
    let x3729: BytePoly_4 = bigint_nondet_inv!(ctx, x3728, x5, 4);
    let x3730: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x3727, x3729, 8), x5, 4);
    let x3731: BytePoly_8 = bigint_add!(bigint_sub!(bigint_mul!(x3730, x3728, 8), x3727, 8), x5, 8);
    let x3732: BytePoly_9 = bigint_nondet_quot!(ctx, x3731, x5, 9);
    eqz(
        ctx,
        &bigint_sub!(x3731, bigint_mul!(x3732, x5, 13), 13),
        73156,
        4,
    )?;
    let x3733: BytePoly_8 = bigint_mul!(x3730, x3730, 8);
    let x3734: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3733, x1880, 8), x5, 8), x3722, 8),
        x5,
        8
    );
    let x3735: BytePoly_9 = bigint_nondet_quot!(ctx, x3734, x5, 9);
    let x3736: BytePoly_4 = bigint_nondet_rem!(ctx, x3734, x5, 4);
    let x3737: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x5,
                bigint_add!(
                    bigint_mul!(x3730, x3736, 8),
                    bigint_add!(bigint_sub!(x1883, bigint_mul!(x3730, x1880, 8), 8), x5, 8),
                    8
                ),
                8
            ),
            x5,
            8
        ),
        x5,
        8
    );
    let x3738: BytePoly_9 = bigint_nondet_quot!(ctx, x3737, x5, 9);
    let x3739: BytePoly_4 = bigint_nondet_rem!(ctx, x3737, x5, 4);
    let x3740: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3733, bigint_mul!(x3735, x5, 13), 13),
                        x1880,
                        13
                    ),
                    x3722,
                    13
                ),
                x5,
                13
            ),
            x5,
            13
        ),
        x3736,
        13
    );
    eqz(ctx, &x3740, 73156, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3738, x5, 13), x3739, 13),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3730, bigint_sub!(x1880, x3736, 4), 8),
                        x1883,
                        8
                    ),
                    x5,
                    8
                ),
                x5,
                8
            ),
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x13, x3736, 5), 34, 1)?;
    eqz(ctx, &bigint_sub!(x3739, x3739, 4), 34, 1)?;
    return Ok(());
}
pub fn ec_aff_add_test_8(ctx: &mut BigIntContext) -> Result<()> {
    let x0: BytePoly_1 = bigint_const!(ctx, 11);
    let x1: BytePoly_1 = bigint_def!(ctx, 1, 0, 1);
    let x2: BytePoly_1 = bigint_def!(ctx, 1, 1, 1);
    let x3: BytePoly_1 = bigint_def!(ctx, 1, 2, 1);
    let x4: BytePoly_1 = bigint_def!(ctx, 1, 3, 1);
    let x5: BytePoly_1 = bigint_def!(ctx, 1, 4, 1);
    let x6: BytePoly_1 = bigint_def!(ctx, 1, 5, 1);
    let x7: BytePoly_1 = bigint_add!(bigint_sub!(x4, x2, 1), x0, 1);
    let x8: BytePoly_1 = bigint_add!(bigint_sub!(x3, x1, 1), x0, 1);
    let x9: BytePoly_1 = bigint_nondet_inv!(ctx, x8, x0, 1);
    let x10: BytePoly_1 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x9, 2), x0, 1);
    let x11: BytePoly_2 = bigint_add!(bigint_sub!(bigint_mul!(x10, x8, 2), x7, 2), x0, 2);
    let x12: BytePoly_3 = bigint_nondet_quot!(ctx, x11, x0, 3);
    eqz(ctx, &bigint_sub!(x11, bigint_mul!(x12, x0, 4), 4), 24387, 2)?;
    let x13: BytePoly_2 = bigint_mul!(x10, x10, 2);
    let x14: BytePoly_2 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x13, x1, 2), x0, 2), x3, 2),
        x0,
        2
    );
    let x15: BytePoly_3 = bigint_nondet_quot!(ctx, x14, x0, 3);
    let x16: BytePoly_1 = bigint_nondet_rem!(ctx, x14, x0, 1);
    let x17: BytePoly_2 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x10, x16, 2),
                    bigint_add!(bigint_sub!(x2, bigint_mul!(x10, x1, 2), 2), x0, 2),
                    2
                ),
                2
            ),
            x0,
            2
        ),
        x0,
        2
    );
    let x18: BytePoly_3 = bigint_nondet_quot!(ctx, x17, x0, 3);
    let x19: BytePoly_1 = bigint_nondet_rem!(ctx, x17, x0, 1);
    let x20: BytePoly_4 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x13, bigint_mul!(x15, x0, 4), 4), x1, 4),
                    x3,
                    4
                ),
                x0,
                4
            ),
            x0,
            4
        ),
        x16,
        4
    );
    eqz(ctx, &x20, 24387, 2)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x18, x0, 4), x19, 4),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x10, bigint_sub!(x1, x16, 1), 2), x2, 2),
                    x0,
                    2
                ),
                x0,
                2
            ),
            4
        ),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x16, x5, 1), 34, 1)?;
    eqz(ctx, &bigint_sub!(x19, x6, 1), 34, 1)?;
    return Ok(());
}
pub fn ec_aff_add_test_256(ctx: &mut BigIntContext) -> Result<()> {
    let x0: BytePoly_32 = bigint_const!(
        ctx, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0
    );
    let x1: BytePoly_32 = bigint_def!(ctx, 32, 0, 1);
    let x2: BytePoly_32 = bigint_def!(ctx, 32, 1, 1);
    let x3: BytePoly_32 = bigint_def!(ctx, 32, 2, 1);
    let x4: BytePoly_32 = bigint_def!(ctx, 32, 3, 1);
    let x5: BytePoly_32 = bigint_def!(ctx, 32, 4, 1);
    let x6: BytePoly_32 = bigint_def!(ctx, 32, 5, 1);
    let x7: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2, 32), x0, 32);
    let x8: BytePoly_32 = bigint_add!(bigint_sub!(x3, x1, 32), x0, 32);
    let x9: BytePoly_32 = bigint_nondet_inv!(ctx, x8, x0, 32);
    let x10: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x9, 64), x0, 32);
    let x11: BytePoly_64 = bigint_add!(bigint_sub!(bigint_mul!(x10, x8, 64), x7, 64), x0, 64);
    let x12: BytePoly_66 = bigint_nondet_quot!(ctx, x11, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x11, bigint_mul!(x12, x0, 98), 98),
        536459,
        4,
    )?;
    let x13: BytePoly_64 = bigint_mul!(x10, x10, 64);
    let x14: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x13, x1, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x15: BytePoly_66 = bigint_nondet_quot!(ctx, x14, x0, 66);
    let x16: BytePoly_32 = bigint_nondet_rem!(ctx, x14, x0, 32);
    let x17: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x10, x16, 64),
                    bigint_add!(bigint_sub!(x2, bigint_mul!(x10, x1, 64), 64), x0, 64),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x18: BytePoly_66 = bigint_nondet_quot!(ctx, x17, x0, 66);
    let x19: BytePoly_32 = bigint_nondet_rem!(ctx, x17, x0, 32);
    let x20: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x13, bigint_mul!(x15, x0, 98), 98), x1, 98),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x16,
        98
    );
    eqz(ctx, &x20, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x18, x0, 98), x19, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x10, bigint_sub!(x1, x16, 32), 64), x2, 64),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x16, x5, 32), 34, 1)?;
    eqz(ctx, &bigint_sub!(x19, x6, 32), 34, 1)?;
    return Ok(());
}
pub fn ec_aff_doub_test_8(ctx: &mut BigIntContext) -> Result<()> {
    let x0: BytePoly_1 = bigint_const!(ctx, 5);
    let x1: BytePoly_1 = bigint_const!(ctx, 3);
    let x2: BytePoly_1 = bigint_const!(ctx, 1);
    let x3: BytePoly_1 = bigint_const!(ctx, 11);
    let x4: BytePoly_1 = bigint_def!(ctx, 1, 0, 1);
    let x5: BytePoly_1 = bigint_def!(ctx, 1, 1, 1);
    let x6: BytePoly_1 = bigint_def!(ctx, 1, 2, 1);
    let x7: BytePoly_1 = bigint_def!(ctx, 1, 3, 1);
    let x8: BytePoly_2 = bigint_mul!(x4, x4, 2);
    let x9: BytePoly_3 = bigint_nondet_quot!(ctx, x8, x3, 3);
    let x10: BytePoly_1 = bigint_nondet_rem!(ctx, x8, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x9, x3, 4), x10, 4), x8, 4),
        24387,
        2,
    )?;
    let x11: BytePoly_2 = bigint_add!(bigint_mul!(x10, x1, 2), x0, 2);
    let x12: BytePoly_3 = bigint_nondet_quot!(ctx, x11, x3, 3);
    let x13: BytePoly_1 = bigint_nondet_rem!(ctx, x11, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x12, x3, 4), x13, 4), x11, 4),
        24387,
        2,
    )?;
    let x14: BytePoly_1 = bigint_add!(x5, x5, 1);
    let x15: BytePoly_1 = bigint_nondet_quot!(ctx, x14, x3, 1);
    let x16: BytePoly_1 = bigint_nondet_rem!(ctx, x14, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x15, x3, 2), x16, 2), x14, 2),
        8131,
        2,
    )?;
    let x17: BytePoly_1 = bigint_nondet_inv!(ctx, x16, x3, 1);
    let x18: BytePoly_2 = bigint_mul!(x16, x17, 2);
    let x19: BytePoly_3 = bigint_nondet_quot!(ctx, x18, x3, 3);
    let x20: BytePoly_1 = bigint_nondet_rem!(ctx, x18, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x19, x3, 4), x20, 4), x18, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x20, x2, 1), 34, 1)?;
    let x21: BytePoly_2 = bigint_mul!(x13, x17, 2);
    let x22: BytePoly_3 = bigint_nondet_quot!(ctx, x21, x3, 3);
    let x23: BytePoly_1 = bigint_nondet_rem!(ctx, x21, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x22, x3, 4), x23, 4), x21, 4),
        24387,
        2,
    )?;
    let x24: BytePoly_2 = bigint_mul!(x23, x4, 2);
    let x25: BytePoly_3 = bigint_nondet_quot!(ctx, x24, x3, 3);
    let x26: BytePoly_1 = bigint_nondet_rem!(ctx, x24, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x25, x3, 4), x26, 4), x24, 4),
        24387,
        2,
    )?;
    let x27: BytePoly_1 = bigint_add!(bigint_sub!(x5, x26, 1), x3, 1);
    let x28: BytePoly_1 = bigint_nondet_quot!(ctx, x27, x3, 1);
    let x29: BytePoly_1 = bigint_nondet_rem!(ctx, x27, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x28, x3, 2), x29, 2), x27, 2),
        8131,
        2,
    )?;
    let x30: BytePoly_2 = bigint_mul!(x23, x23, 2);
    let x31: BytePoly_3 = bigint_nondet_quot!(ctx, x30, x3, 3);
    let x32: BytePoly_1 = bigint_nondet_rem!(ctx, x30, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x31, x3, 4), x32, 4), x30, 4),
        24387,
        2,
    )?;
    let x33: BytePoly_1 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x32, x4, 1), x3, 1), x4, 1),
        x3,
        1
    );
    let x34: BytePoly_1 = bigint_nondet_quot!(ctx, x33, x3, 1);
    let x35: BytePoly_1 = bigint_nondet_rem!(ctx, x33, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x34, x3, 2), x35, 2), x33, 2),
        8131,
        2,
    )?;
    let x36: BytePoly_2 = bigint_mul!(x23, x35, 2);
    let x37: BytePoly_3 = bigint_nondet_quot!(ctx, x36, x3, 3);
    let x38: BytePoly_1 = bigint_nondet_rem!(ctx, x36, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x37, x3, 4), x38, 4), x36, 4),
        24387,
        2,
    )?;
    let x39: BytePoly_1 = bigint_add!(bigint_sub!(x3, bigint_add!(x38, x29, 1), 1), x3, 1);
    let x40: BytePoly_1 = bigint_nondet_quot!(ctx, x39, x3, 1);
    let x41: BytePoly_1 = bigint_nondet_rem!(ctx, x39, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x40, x3, 2), x41, 2), x39, 2),
        8131,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x35, x6, 1), 34, 1)?;
    eqz(ctx, &bigint_sub!(x41, x7, 1), 34, 1)?;
    return Ok(());
}
pub fn ec_aff_doub_test_256(ctx: &mut BigIntContext) -> Result<()> {
    let x0: BytePoly_32 = bigint_const!(
        ctx, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0
    );
    let x1: BytePoly_1 = bigint_const!(ctx, 3);
    let x2: BytePoly_1 = bigint_const!(ctx, 1);
    let x3: BytePoly_32 = bigint_const!(
        ctx, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0
    );
    let x4: BytePoly_32 = bigint_def!(ctx, 32, 0, 1);
    let x5: BytePoly_32 = bigint_def!(ctx, 32, 1, 1);
    let x6: BytePoly_32 = bigint_def!(ctx, 32, 2, 1);
    let x7: BytePoly_32 = bigint_def!(ctx, 32, 3, 1);
    let x8: BytePoly_64 = bigint_mul!(x4, x4, 64);
    let x9: BytePoly_66 = bigint_nondet_quot!(ctx, x8, x3, 66);
    let x10: BytePoly_32 = bigint_nondet_rem!(ctx, x8, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x9, x3, 98), x10, 98), x8, 98),
        536459,
        4,
    )?;
    let x11: BytePoly_33 = bigint_add!(bigint_mul!(x10, x1, 33), x0, 33);
    let x12: BytePoly_35 = bigint_nondet_quot!(ctx, x11, x3, 35);
    let x13: BytePoly_32 = bigint_nondet_rem!(ctx, x11, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x12, x3, 67), x13, 67), x11, 67),
        284487,
        4,
    )?;
    let x14: BytePoly_32 = bigint_add!(x5, x5, 32);
    let x15: BytePoly_32 = bigint_nondet_quot!(ctx, x14, x3, 32);
    let x16: BytePoly_32 = bigint_nondet_rem!(ctx, x14, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x15, x3, 64), x16, 64), x14, 64),
        260103,
        4,
    )?;
    let x17: BytePoly_32 = bigint_nondet_inv!(ctx, x16, x3, 32);
    let x18: BytePoly_64 = bigint_mul!(x16, x17, 64);
    let x19: BytePoly_66 = bigint_nondet_quot!(ctx, x18, x3, 66);
    let x20: BytePoly_32 = bigint_nondet_rem!(ctx, x18, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x19, x3, 98), x20, 98), x18, 98),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x20, x2, 32), 34, 1)?;
    let x21: BytePoly_64 = bigint_mul!(x13, x17, 64);
    let x22: BytePoly_66 = bigint_nondet_quot!(ctx, x21, x3, 66);
    let x23: BytePoly_32 = bigint_nondet_rem!(ctx, x21, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x22, x3, 98), x23, 98), x21, 98),
        536459,
        4,
    )?;
    let x24: BytePoly_64 = bigint_mul!(x23, x4, 64);
    let x25: BytePoly_66 = bigint_nondet_quot!(ctx, x24, x3, 66);
    let x26: BytePoly_32 = bigint_nondet_rem!(ctx, x24, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x25, x3, 98), x26, 98), x24, 98),
        536459,
        4,
    )?;
    let x27: BytePoly_32 = bigint_add!(bigint_sub!(x5, x26, 32), x3, 32);
    let x28: BytePoly_32 = bigint_nondet_quot!(ctx, x27, x3, 32);
    let x29: BytePoly_32 = bigint_nondet_rem!(ctx, x27, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x28, x3, 64), x29, 64), x27, 64),
        260103,
        4,
    )?;
    let x30: BytePoly_64 = bigint_mul!(x23, x23, 64);
    let x31: BytePoly_66 = bigint_nondet_quot!(ctx, x30, x3, 66);
    let x32: BytePoly_32 = bigint_nondet_rem!(ctx, x30, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x31, x3, 98), x32, 98), x30, 98),
        536459,
        4,
    )?;
    let x33: BytePoly_32 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x32, x4, 32), x3, 32), x4, 32),
        x3,
        32
    );
    let x34: BytePoly_32 = bigint_nondet_quot!(ctx, x33, x3, 32);
    let x35: BytePoly_32 = bigint_nondet_rem!(ctx, x33, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x34, x3, 64), x35, 64), x33, 64),
        260103,
        4,
    )?;
    let x36: BytePoly_64 = bigint_mul!(x23, x35, 64);
    let x37: BytePoly_66 = bigint_nondet_quot!(ctx, x36, x3, 66);
    let x38: BytePoly_32 = bigint_nondet_rem!(ctx, x36, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x37, x3, 98), x38, 98), x36, 98),
        536459,
        4,
    )?;
    let x39: BytePoly_32 = bigint_add!(bigint_sub!(x3, bigint_add!(x38, x29, 32), 32), x3, 32);
    let x40: BytePoly_32 = bigint_nondet_quot!(ctx, x39, x3, 32);
    let x41: BytePoly_32 = bigint_nondet_rem!(ctx, x39, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x40, x3, 64), x41, 64), x39, 64),
        260103,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x35, x6, 32), 34, 1)?;
    eqz(ctx, &bigint_sub!(x41, x7, 32), 34, 1)?;
    return Ok(());
}
pub fn ec_aff_mul_test_8(ctx: &mut BigIntContext) -> Result<()> {
    let x0: BytePoly_1 = bigint_const!(ctx, 3);
    let x1: BytePoly_1 = bigint_const!(ctx, 1);
    let x2: BytePoly_1 = bigint_const!(ctx, 5);
    let x3: BytePoly_1 = bigint_const!(ctx, 11);
    let x4: BytePoly_1 = bigint_const!(ctx, 2);
    let x5: BytePoly_1 = bigint_const!(ctx, 1);
    let x6: BytePoly_1 = bigint_def!(ctx, 1, 0, 1);
    let x7: BytePoly_1 = bigint_def!(ctx, 1, 1, 1);
    let x8: BytePoly_1 = bigint_def!(ctx, 1, 2, 1);
    let x9: BytePoly_1 = bigint_def!(ctx, 1, 3, 1);
    let x10: BytePoly_1 = bigint_def!(ctx, 1, 4, 1);
    let x11: BytePoly_1 = bigint_def!(ctx, 1, 5, 1);
    let x12: BytePoly_1 = bigint_def!(ctx, 1, 6, 1);
    eqz(ctx, &bigint_sub!(x6, x6, 1), 34, 1)?;
    eqz(ctx, &bigint_sub!(x7, x7, 1), 34, 1)?;
    eqz(ctx, &bigint_sub!(x8, x8, 1), 34, 1)?;
    eqz(ctx, &bigint_sub!(x9, x9, 1), 34, 1)?;
    eqz(ctx, &bigint_sub!(x10, x10, 1), 34, 1)?;
    eqz(ctx, &bigint_sub!(x11, x11, 1), 34, 1)?;
    eqz(ctx, &bigint_sub!(x12, x12, 1), 34, 1)?;
    let x13: BytePoly_2 = bigint_mul!(x9, x9, 2);
    let x14: BytePoly_3 = bigint_nondet_quot!(ctx, x13, x3, 3);
    let x15: BytePoly_1 = bigint_nondet_rem!(ctx, x13, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x14, x3, 4), x15, 4), x13, 4),
        24387,
        2,
    )?;
    let x16: BytePoly_2 = bigint_sub!(
        bigint_mul!(x10, x10, 2),
        bigint_add!(
            bigint_add!(bigint_mul!(x9, x15, 2), bigint_mul!(x9, x2, 2), 2),
            x1,
            2
        ),
        2
    );
    let x17: BytePoly_3 = bigint_nondet_quot!(ctx, x16, x3, 3);
    let x18: BytePoly_1 = bigint_nondet_rem!(ctx, x16, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x17, x3, 4), x18, 4), x16, 4),
        24387,
        2,
    )?;
    eqz(ctx, &x18, 34, 1)?;
    let x19: BytePoly_1 = bigint_nondet_rem!(ctx, x8, x4, 1);
    let x20: BytePoly_1 = bigint_nondet_quot!(ctx, x8, x4, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x20, x4, 2), x19, 2), x8, 2),
        8131,
        2,
    )?;
    let x21: BytePoly_1 = bigint_sub!(x5, x19, 1);
    eqz(ctx, &bigint_mul!(x19, x21, 2), 8131, 2)?;
    let x22: BytePoly_1 = bigint_add!(bigint_sub!(x7, x10, 1), x3, 1);
    let x23: BytePoly_1 = bigint_add!(bigint_sub!(x6, x9, 1), x3, 1);
    let x24: BytePoly_1 = bigint_nondet_inv!(ctx, x23, x3, 1);
    let x25: BytePoly_1 = bigint_nondet_rem!(ctx, bigint_mul!(x22, x24, 2), x3, 1);
    let x26: BytePoly_2 = bigint_add!(bigint_sub!(bigint_mul!(x25, x23, 2), x22, 2), x3, 2);
    let x27: BytePoly_3 = bigint_nondet_quot!(ctx, x26, x3, 3);
    eqz(ctx, &bigint_sub!(x26, bigint_mul!(x27, x3, 4), 4), 24387, 2)?;
    let x28: BytePoly_2 = bigint_mul!(x25, x25, 2);
    let x29: BytePoly_2 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x28, x9, 2), x3, 2), x6, 2),
        x3,
        2
    );
    let x30: BytePoly_3 = bigint_nondet_quot!(ctx, x29, x3, 3);
    let x31: BytePoly_1 = bigint_nondet_rem!(ctx, x29, x3, 1);
    let x32: BytePoly_2 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x3,
                bigint_add!(
                    bigint_mul!(x25, x31, 2),
                    bigint_add!(bigint_sub!(x10, bigint_mul!(x25, x9, 2), 2), x3, 2),
                    2
                ),
                2
            ),
            x3,
            2
        ),
        x3,
        2
    );
    let x33: BytePoly_3 = bigint_nondet_quot!(ctx, x32, x3, 3);
    let x34: BytePoly_1 = bigint_nondet_rem!(ctx, x32, x3, 1);
    let x35: BytePoly_4 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x28, bigint_mul!(x30, x3, 4), 4), x9, 4),
                    x6,
                    4
                ),
                x3,
                4
            ),
            x3,
            4
        ),
        x31,
        4
    );
    eqz(ctx, &x35, 24387, 2)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x33, x3, 4), x34, 4),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x25, bigint_sub!(x9, x31, 1), 2), x10, 2),
                    x3,
                    2
                ),
                x3,
                2
            ),
            4
        ),
        24387,
        2,
    )?;
    let x36: BytePoly_2 = bigint_add!(bigint_mul!(x31, x19, 2), bigint_mul!(x9, x21, 2), 2);
    let x37: BytePoly_2 = bigint_add!(bigint_mul!(x34, x19, 2), bigint_mul!(x10, x21, 2), 2);
    let x38: BytePoly_3 = bigint_nondet_quot!(ctx, x36, x3, 3);
    let x39: BytePoly_1 = bigint_nondet_rem!(ctx, x36, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x38, x3, 4), x39, 4), x36, 4),
        24387,
        2,
    )?;
    let x40: BytePoly_3 = bigint_nondet_quot!(ctx, x37, x3, 3);
    let x41: BytePoly_1 = bigint_nondet_rem!(ctx, x37, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x40, x3, 4), x41, 4), x37, 4),
        24387,
        2,
    )?;
    let x42: BytePoly_2 = bigint_mul!(x6, x6, 2);
    let x43: BytePoly_3 = bigint_nondet_quot!(ctx, x42, x3, 3);
    let x44: BytePoly_1 = bigint_nondet_rem!(ctx, x42, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x43, x3, 4), x44, 4), x42, 4),
        24387,
        2,
    )?;
    let x45: BytePoly_2 = bigint_add!(bigint_mul!(x44, x0, 2), x2, 2);
    let x46: BytePoly_3 = bigint_nondet_quot!(ctx, x45, x3, 3);
    let x47: BytePoly_1 = bigint_nondet_rem!(ctx, x45, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x46, x3, 4), x47, 4), x45, 4),
        24387,
        2,
    )?;
    let x48: BytePoly_1 = bigint_add!(x7, x7, 1);
    let x49: BytePoly_1 = bigint_nondet_quot!(ctx, x48, x3, 1);
    let x50: BytePoly_1 = bigint_nondet_rem!(ctx, x48, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x49, x3, 2), x50, 2), x48, 2),
        8131,
        2,
    )?;
    let x51: BytePoly_1 = bigint_nondet_inv!(ctx, x50, x3, 1);
    let x52: BytePoly_2 = bigint_mul!(x50, x51, 2);
    let x53: BytePoly_3 = bigint_nondet_quot!(ctx, x52, x3, 3);
    let x54: BytePoly_1 = bigint_nondet_rem!(ctx, x52, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x53, x3, 4), x54, 4), x52, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x54, x5, 1), 34, 1)?;
    let x55: BytePoly_2 = bigint_mul!(x47, x51, 2);
    let x56: BytePoly_3 = bigint_nondet_quot!(ctx, x55, x3, 3);
    let x57: BytePoly_1 = bigint_nondet_rem!(ctx, x55, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x56, x3, 4), x57, 4), x55, 4),
        24387,
        2,
    )?;
    let x58: BytePoly_2 = bigint_mul!(x57, x6, 2);
    let x59: BytePoly_3 = bigint_nondet_quot!(ctx, x58, x3, 3);
    let x60: BytePoly_1 = bigint_nondet_rem!(ctx, x58, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x59, x3, 4), x60, 4), x58, 4),
        24387,
        2,
    )?;
    let x61: BytePoly_1 = bigint_add!(bigint_sub!(x7, x60, 1), x3, 1);
    let x62: BytePoly_1 = bigint_nondet_quot!(ctx, x61, x3, 1);
    let x63: BytePoly_1 = bigint_nondet_rem!(ctx, x61, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x62, x3, 2), x63, 2), x61, 2),
        8131,
        2,
    )?;
    let x64: BytePoly_2 = bigint_mul!(x57, x57, 2);
    let x65: BytePoly_3 = bigint_nondet_quot!(ctx, x64, x3, 3);
    let x66: BytePoly_1 = bigint_nondet_rem!(ctx, x64, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x65, x3, 4), x66, 4), x64, 4),
        24387,
        2,
    )?;
    let x67: BytePoly_1 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x66, x6, 1), x3, 1), x6, 1),
        x3,
        1
    );
    let x68: BytePoly_1 = bigint_nondet_quot!(ctx, x67, x3, 1);
    let x69: BytePoly_1 = bigint_nondet_rem!(ctx, x67, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x68, x3, 2), x69, 2), x67, 2),
        8131,
        2,
    )?;
    let x70: BytePoly_2 = bigint_mul!(x57, x69, 2);
    let x71: BytePoly_3 = bigint_nondet_quot!(ctx, x70, x3, 3);
    let x72: BytePoly_1 = bigint_nondet_rem!(ctx, x70, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x71, x3, 4), x72, 4), x70, 4),
        24387,
        2,
    )?;
    let x73: BytePoly_1 = bigint_add!(bigint_sub!(x3, bigint_add!(x72, x63, 1), 1), x3, 1);
    let x74: BytePoly_1 = bigint_nondet_quot!(ctx, x73, x3, 1);
    let x75: BytePoly_1 = bigint_nondet_rem!(ctx, x73, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x74, x3, 2), x75, 2), x73, 2),
        8131,
        2,
    )?;
    let x76: BytePoly_1 = bigint_nondet_rem!(ctx, x20, x4, 1);
    let x77: BytePoly_1 = bigint_nondet_quot!(ctx, x20, x4, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x77, x4, 2), x76, 2), x20, 2),
        8131,
        2,
    )?;
    let x78: BytePoly_1 = bigint_sub!(x5, x76, 1);
    eqz(ctx, &bigint_mul!(x76, x78, 2), 8131, 2)?;
    let x79: BytePoly_1 = bigint_add!(bigint_sub!(x75, x41, 1), x3, 1);
    let x80: BytePoly_1 = bigint_add!(bigint_sub!(x69, x39, 1), x3, 1);
    let x81: BytePoly_1 = bigint_nondet_inv!(ctx, x80, x3, 1);
    let x82: BytePoly_1 = bigint_nondet_rem!(ctx, bigint_mul!(x79, x81, 2), x3, 1);
    let x83: BytePoly_2 = bigint_add!(bigint_sub!(bigint_mul!(x82, x80, 2), x79, 2), x3, 2);
    let x84: BytePoly_3 = bigint_nondet_quot!(ctx, x83, x3, 3);
    eqz(ctx, &bigint_sub!(x83, bigint_mul!(x84, x3, 4), 4), 24387, 2)?;
    let x85: BytePoly_2 = bigint_mul!(x82, x82, 2);
    let x86: BytePoly_2 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x85, x39, 2), x3, 2), x69, 2),
        x3,
        2
    );
    let x87: BytePoly_3 = bigint_nondet_quot!(ctx, x86, x3, 3);
    let x88: BytePoly_1 = bigint_nondet_rem!(ctx, x86, x3, 1);
    let x89: BytePoly_2 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x3,
                bigint_add!(
                    bigint_mul!(x82, x88, 2),
                    bigint_add!(bigint_sub!(x41, bigint_mul!(x82, x39, 2), 2), x3, 2),
                    2
                ),
                2
            ),
            x3,
            2
        ),
        x3,
        2
    );
    let x90: BytePoly_3 = bigint_nondet_quot!(ctx, x89, x3, 3);
    let x91: BytePoly_1 = bigint_nondet_rem!(ctx, x89, x3, 1);
    let x92: BytePoly_4 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x85, bigint_mul!(x87, x3, 4), 4), x39, 4),
                    x69,
                    4
                ),
                x3,
                4
            ),
            x3,
            4
        ),
        x88,
        4
    );
    eqz(ctx, &x92, 24387, 2)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x90, x3, 4), x91, 4),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x82, bigint_sub!(x39, x88, 1), 2), x41, 2),
                    x3,
                    2
                ),
                x3,
                2
            ),
            4
        ),
        24387,
        2,
    )?;
    let x93: BytePoly_2 = bigint_add!(bigint_mul!(x88, x76, 2), bigint_mul!(x39, x78, 2), 2);
    let x94: BytePoly_2 = bigint_add!(bigint_mul!(x91, x76, 2), bigint_mul!(x41, x78, 2), 2);
    let x95: BytePoly_3 = bigint_nondet_quot!(ctx, x93, x3, 3);
    let x96: BytePoly_1 = bigint_nondet_rem!(ctx, x93, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x95, x3, 4), x96, 4), x93, 4),
        24387,
        2,
    )?;
    let x97: BytePoly_3 = bigint_nondet_quot!(ctx, x94, x3, 3);
    let x98: BytePoly_1 = bigint_nondet_rem!(ctx, x94, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x97, x3, 4), x98, 4), x94, 4),
        24387,
        2,
    )?;
    let x99: BytePoly_2 = bigint_mul!(x69, x69, 2);
    let x100: BytePoly_3 = bigint_nondet_quot!(ctx, x99, x3, 3);
    let x101: BytePoly_1 = bigint_nondet_rem!(ctx, x99, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x100, x3, 4), x101, 4), x99, 4),
        24387,
        2,
    )?;
    let x102: BytePoly_2 = bigint_add!(bigint_mul!(x101, x0, 2), x2, 2);
    let x103: BytePoly_3 = bigint_nondet_quot!(ctx, x102, x3, 3);
    let x104: BytePoly_1 = bigint_nondet_rem!(ctx, x102, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x103, x3, 4), x104, 4), x102, 4),
        24387,
        2,
    )?;
    let x105: BytePoly_1 = bigint_add!(x75, x75, 1);
    let x106: BytePoly_1 = bigint_nondet_quot!(ctx, x105, x3, 1);
    let x107: BytePoly_1 = bigint_nondet_rem!(ctx, x105, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x106, x3, 2), x107, 2), x105, 2),
        8131,
        2,
    )?;
    let x108: BytePoly_1 = bigint_nondet_inv!(ctx, x107, x3, 1);
    let x109: BytePoly_2 = bigint_mul!(x107, x108, 2);
    let x110: BytePoly_3 = bigint_nondet_quot!(ctx, x109, x3, 3);
    let x111: BytePoly_1 = bigint_nondet_rem!(ctx, x109, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x110, x3, 4), x111, 4), x109, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x111, x5, 1), 34, 1)?;
    let x112: BytePoly_2 = bigint_mul!(x104, x108, 2);
    let x113: BytePoly_3 = bigint_nondet_quot!(ctx, x112, x3, 3);
    let x114: BytePoly_1 = bigint_nondet_rem!(ctx, x112, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x113, x3, 4), x114, 4), x112, 4),
        24387,
        2,
    )?;
    let x115: BytePoly_2 = bigint_mul!(x114, x69, 2);
    let x116: BytePoly_3 = bigint_nondet_quot!(ctx, x115, x3, 3);
    let x117: BytePoly_1 = bigint_nondet_rem!(ctx, x115, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x116, x3, 4), x117, 4), x115, 4),
        24387,
        2,
    )?;
    let x118: BytePoly_1 = bigint_add!(bigint_sub!(x75, x117, 1), x3, 1);
    let x119: BytePoly_1 = bigint_nondet_quot!(ctx, x118, x3, 1);
    let x120: BytePoly_1 = bigint_nondet_rem!(ctx, x118, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x119, x3, 2), x120, 2), x118, 2),
        8131,
        2,
    )?;
    let x121: BytePoly_2 = bigint_mul!(x114, x114, 2);
    let x122: BytePoly_3 = bigint_nondet_quot!(ctx, x121, x3, 3);
    let x123: BytePoly_1 = bigint_nondet_rem!(ctx, x121, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x122, x3, 4), x123, 4), x121, 4),
        24387,
        2,
    )?;
    let x124: BytePoly_1 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x123, x69, 1), x3, 1), x69, 1),
        x3,
        1
    );
    let x125: BytePoly_1 = bigint_nondet_quot!(ctx, x124, x3, 1);
    let x126: BytePoly_1 = bigint_nondet_rem!(ctx, x124, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x125, x3, 2), x126, 2), x124, 2),
        8131,
        2,
    )?;
    let x127: BytePoly_2 = bigint_mul!(x114, x126, 2);
    let x128: BytePoly_3 = bigint_nondet_quot!(ctx, x127, x3, 3);
    let x129: BytePoly_1 = bigint_nondet_rem!(ctx, x127, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x128, x3, 4), x129, 4), x127, 4),
        24387,
        2,
    )?;
    let x130: BytePoly_1 = bigint_add!(bigint_sub!(x3, bigint_add!(x129, x120, 1), 1), x3, 1);
    let x131: BytePoly_1 = bigint_nondet_quot!(ctx, x130, x3, 1);
    let x132: BytePoly_1 = bigint_nondet_rem!(ctx, x130, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x131, x3, 2), x132, 2), x130, 2),
        8131,
        2,
    )?;
    let x133: BytePoly_1 = bigint_nondet_rem!(ctx, x77, x4, 1);
    let x134: BytePoly_1 = bigint_nondet_quot!(ctx, x77, x4, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x134, x4, 2), x133, 2), x77, 2),
        8131,
        2,
    )?;
    let x135: BytePoly_1 = bigint_sub!(x5, x133, 1);
    eqz(ctx, &bigint_mul!(x133, x135, 2), 8131, 2)?;
    let x136: BytePoly_1 = bigint_add!(bigint_sub!(x132, x98, 1), x3, 1);
    let x137: BytePoly_1 = bigint_add!(bigint_sub!(x126, x96, 1), x3, 1);
    let x138: BytePoly_1 = bigint_nondet_inv!(ctx, x137, x3, 1);
    let x139: BytePoly_1 = bigint_nondet_rem!(ctx, bigint_mul!(x136, x138, 2), x3, 1);
    let x140: BytePoly_2 = bigint_add!(bigint_sub!(bigint_mul!(x139, x137, 2), x136, 2), x3, 2);
    let x141: BytePoly_3 = bigint_nondet_quot!(ctx, x140, x3, 3);
    eqz(
        ctx,
        &bigint_sub!(x140, bigint_mul!(x141, x3, 4), 4),
        24387,
        2,
    )?;
    let x142: BytePoly_2 = bigint_mul!(x139, x139, 2);
    let x143: BytePoly_2 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x142, x96, 2), x3, 2), x126, 2),
        x3,
        2
    );
    let x144: BytePoly_3 = bigint_nondet_quot!(ctx, x143, x3, 3);
    let x145: BytePoly_1 = bigint_nondet_rem!(ctx, x143, x3, 1);
    let x146: BytePoly_2 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x3,
                bigint_add!(
                    bigint_mul!(x139, x145, 2),
                    bigint_add!(bigint_sub!(x98, bigint_mul!(x139, x96, 2), 2), x3, 2),
                    2
                ),
                2
            ),
            x3,
            2
        ),
        x3,
        2
    );
    let x147: BytePoly_3 = bigint_nondet_quot!(ctx, x146, x3, 3);
    let x148: BytePoly_1 = bigint_nondet_rem!(ctx, x146, x3, 1);
    let x149: BytePoly_4 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x142, bigint_mul!(x144, x3, 4), 4), x96, 4),
                    x126,
                    4
                ),
                x3,
                4
            ),
            x3,
            4
        ),
        x145,
        4
    );
    eqz(ctx, &x149, 24387, 2)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x147, x3, 4), x148, 4),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x139, bigint_sub!(x96, x145, 1), 2), x98, 2),
                    x3,
                    2
                ),
                x3,
                2
            ),
            4
        ),
        24387,
        2,
    )?;
    let x150: BytePoly_2 = bigint_add!(bigint_mul!(x145, x133, 2), bigint_mul!(x96, x135, 2), 2);
    let x151: BytePoly_2 = bigint_add!(bigint_mul!(x148, x133, 2), bigint_mul!(x98, x135, 2), 2);
    let x152: BytePoly_3 = bigint_nondet_quot!(ctx, x150, x3, 3);
    let x153: BytePoly_1 = bigint_nondet_rem!(ctx, x150, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x152, x3, 4), x153, 4), x150, 4),
        24387,
        2,
    )?;
    let x154: BytePoly_3 = bigint_nondet_quot!(ctx, x151, x3, 3);
    let x155: BytePoly_1 = bigint_nondet_rem!(ctx, x151, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x154, x3, 4), x155, 4), x151, 4),
        24387,
        2,
    )?;
    let x156: BytePoly_2 = bigint_mul!(x126, x126, 2);
    let x157: BytePoly_3 = bigint_nondet_quot!(ctx, x156, x3, 3);
    let x158: BytePoly_1 = bigint_nondet_rem!(ctx, x156, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x157, x3, 4), x158, 4), x156, 4),
        24387,
        2,
    )?;
    let x159: BytePoly_2 = bigint_add!(bigint_mul!(x158, x0, 2), x2, 2);
    let x160: BytePoly_3 = bigint_nondet_quot!(ctx, x159, x3, 3);
    let x161: BytePoly_1 = bigint_nondet_rem!(ctx, x159, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x160, x3, 4), x161, 4), x159, 4),
        24387,
        2,
    )?;
    let x162: BytePoly_1 = bigint_add!(x132, x132, 1);
    let x163: BytePoly_1 = bigint_nondet_quot!(ctx, x162, x3, 1);
    let x164: BytePoly_1 = bigint_nondet_rem!(ctx, x162, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x163, x3, 2), x164, 2), x162, 2),
        8131,
        2,
    )?;
    let x165: BytePoly_1 = bigint_nondet_inv!(ctx, x164, x3, 1);
    let x166: BytePoly_2 = bigint_mul!(x164, x165, 2);
    let x167: BytePoly_3 = bigint_nondet_quot!(ctx, x166, x3, 3);
    let x168: BytePoly_1 = bigint_nondet_rem!(ctx, x166, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x167, x3, 4), x168, 4), x166, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x168, x5, 1), 34, 1)?;
    let x169: BytePoly_2 = bigint_mul!(x161, x165, 2);
    let x170: BytePoly_3 = bigint_nondet_quot!(ctx, x169, x3, 3);
    let x171: BytePoly_1 = bigint_nondet_rem!(ctx, x169, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x170, x3, 4), x171, 4), x169, 4),
        24387,
        2,
    )?;
    let x172: BytePoly_2 = bigint_mul!(x171, x126, 2);
    let x173: BytePoly_3 = bigint_nondet_quot!(ctx, x172, x3, 3);
    let x174: BytePoly_1 = bigint_nondet_rem!(ctx, x172, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x173, x3, 4), x174, 4), x172, 4),
        24387,
        2,
    )?;
    let x175: BytePoly_1 = bigint_add!(bigint_sub!(x132, x174, 1), x3, 1);
    let x176: BytePoly_1 = bigint_nondet_quot!(ctx, x175, x3, 1);
    let x177: BytePoly_1 = bigint_nondet_rem!(ctx, x175, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x176, x3, 2), x177, 2), x175, 2),
        8131,
        2,
    )?;
    let x178: BytePoly_2 = bigint_mul!(x171, x171, 2);
    let x179: BytePoly_3 = bigint_nondet_quot!(ctx, x178, x3, 3);
    let x180: BytePoly_1 = bigint_nondet_rem!(ctx, x178, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x179, x3, 4), x180, 4), x178, 4),
        24387,
        2,
    )?;
    let x181: BytePoly_1 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x180, x126, 1), x3, 1), x126, 1),
        x3,
        1
    );
    let x182: BytePoly_1 = bigint_nondet_quot!(ctx, x181, x3, 1);
    let x183: BytePoly_1 = bigint_nondet_rem!(ctx, x181, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x182, x3, 2), x183, 2), x181, 2),
        8131,
        2,
    )?;
    let x184: BytePoly_2 = bigint_mul!(x171, x183, 2);
    let x185: BytePoly_3 = bigint_nondet_quot!(ctx, x184, x3, 3);
    let x186: BytePoly_1 = bigint_nondet_rem!(ctx, x184, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x185, x3, 4), x186, 4), x184, 4),
        24387,
        2,
    )?;
    let x187: BytePoly_1 = bigint_add!(bigint_sub!(x3, bigint_add!(x186, x177, 1), 1), x3, 1);
    let x188: BytePoly_1 = bigint_nondet_quot!(ctx, x187, x3, 1);
    let x189: BytePoly_1 = bigint_nondet_rem!(ctx, x187, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x188, x3, 2), x189, 2), x187, 2),
        8131,
        2,
    )?;
    let x190: BytePoly_1 = bigint_nondet_rem!(ctx, x134, x4, 1);
    let x191: BytePoly_1 = bigint_nondet_quot!(ctx, x134, x4, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x191, x4, 2), x190, 2), x134, 2),
        8131,
        2,
    )?;
    let x192: BytePoly_1 = bigint_sub!(x5, x190, 1);
    eqz(ctx, &bigint_mul!(x190, x192, 2), 8131, 2)?;
    let x193: BytePoly_1 = bigint_add!(bigint_sub!(x189, x155, 1), x3, 1);
    let x194: BytePoly_1 = bigint_add!(bigint_sub!(x183, x153, 1), x3, 1);
    let x195: BytePoly_1 = bigint_nondet_inv!(ctx, x194, x3, 1);
    let x196: BytePoly_1 = bigint_nondet_rem!(ctx, bigint_mul!(x193, x195, 2), x3, 1);
    let x197: BytePoly_2 = bigint_add!(bigint_sub!(bigint_mul!(x196, x194, 2), x193, 2), x3, 2);
    let x198: BytePoly_3 = bigint_nondet_quot!(ctx, x197, x3, 3);
    eqz(
        ctx,
        &bigint_sub!(x197, bigint_mul!(x198, x3, 4), 4),
        24387,
        2,
    )?;
    let x199: BytePoly_2 = bigint_mul!(x196, x196, 2);
    let x200: BytePoly_2 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x199, x153, 2), x3, 2), x183, 2),
        x3,
        2
    );
    let x201: BytePoly_3 = bigint_nondet_quot!(ctx, x200, x3, 3);
    let x202: BytePoly_1 = bigint_nondet_rem!(ctx, x200, x3, 1);
    let x203: BytePoly_2 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x3,
                bigint_add!(
                    bigint_mul!(x196, x202, 2),
                    bigint_add!(bigint_sub!(x155, bigint_mul!(x196, x153, 2), 2), x3, 2),
                    2
                ),
                2
            ),
            x3,
            2
        ),
        x3,
        2
    );
    let x204: BytePoly_3 = bigint_nondet_quot!(ctx, x203, x3, 3);
    let x205: BytePoly_1 = bigint_nondet_rem!(ctx, x203, x3, 1);
    let x206: BytePoly_4 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x199, bigint_mul!(x201, x3, 4), 4), x153, 4),
                    x183,
                    4
                ),
                x3,
                4
            ),
            x3,
            4
        ),
        x202,
        4
    );
    eqz(ctx, &x206, 24387, 2)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x204, x3, 4), x205, 4),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x196, bigint_sub!(x153, x202, 1), 2), x155, 2),
                    x3,
                    2
                ),
                x3,
                2
            ),
            4
        ),
        24387,
        2,
    )?;
    let x207: BytePoly_2 = bigint_add!(bigint_mul!(x202, x190, 2), bigint_mul!(x153, x192, 2), 2);
    let x208: BytePoly_2 = bigint_add!(bigint_mul!(x205, x190, 2), bigint_mul!(x155, x192, 2), 2);
    let x209: BytePoly_3 = bigint_nondet_quot!(ctx, x207, x3, 3);
    let x210: BytePoly_1 = bigint_nondet_rem!(ctx, x207, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x209, x3, 4), x210, 4), x207, 4),
        24387,
        2,
    )?;
    let x211: BytePoly_3 = bigint_nondet_quot!(ctx, x208, x3, 3);
    let x212: BytePoly_1 = bigint_nondet_rem!(ctx, x208, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x211, x3, 4), x212, 4), x208, 4),
        24387,
        2,
    )?;
    let x213: BytePoly_2 = bigint_mul!(x183, x183, 2);
    let x214: BytePoly_3 = bigint_nondet_quot!(ctx, x213, x3, 3);
    let x215: BytePoly_1 = bigint_nondet_rem!(ctx, x213, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x214, x3, 4), x215, 4), x213, 4),
        24387,
        2,
    )?;
    let x216: BytePoly_2 = bigint_add!(bigint_mul!(x215, x0, 2), x2, 2);
    let x217: BytePoly_3 = bigint_nondet_quot!(ctx, x216, x3, 3);
    let x218: BytePoly_1 = bigint_nondet_rem!(ctx, x216, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x217, x3, 4), x218, 4), x216, 4),
        24387,
        2,
    )?;
    let x219: BytePoly_1 = bigint_add!(x189, x189, 1);
    let x220: BytePoly_1 = bigint_nondet_quot!(ctx, x219, x3, 1);
    let x221: BytePoly_1 = bigint_nondet_rem!(ctx, x219, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x220, x3, 2), x221, 2), x219, 2),
        8131,
        2,
    )?;
    let x222: BytePoly_1 = bigint_nondet_inv!(ctx, x221, x3, 1);
    let x223: BytePoly_2 = bigint_mul!(x221, x222, 2);
    let x224: BytePoly_3 = bigint_nondet_quot!(ctx, x223, x3, 3);
    let x225: BytePoly_1 = bigint_nondet_rem!(ctx, x223, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x224, x3, 4), x225, 4), x223, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x225, x5, 1), 34, 1)?;
    let x226: BytePoly_2 = bigint_mul!(x218, x222, 2);
    let x227: BytePoly_3 = bigint_nondet_quot!(ctx, x226, x3, 3);
    let x228: BytePoly_1 = bigint_nondet_rem!(ctx, x226, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x227, x3, 4), x228, 4), x226, 4),
        24387,
        2,
    )?;
    let x229: BytePoly_2 = bigint_mul!(x228, x183, 2);
    let x230: BytePoly_3 = bigint_nondet_quot!(ctx, x229, x3, 3);
    let x231: BytePoly_1 = bigint_nondet_rem!(ctx, x229, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x230, x3, 4), x231, 4), x229, 4),
        24387,
        2,
    )?;
    let x232: BytePoly_1 = bigint_add!(bigint_sub!(x189, x231, 1), x3, 1);
    let x233: BytePoly_1 = bigint_nondet_quot!(ctx, x232, x3, 1);
    let x234: BytePoly_1 = bigint_nondet_rem!(ctx, x232, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x233, x3, 2), x234, 2), x232, 2),
        8131,
        2,
    )?;
    let x235: BytePoly_2 = bigint_mul!(x228, x228, 2);
    let x236: BytePoly_3 = bigint_nondet_quot!(ctx, x235, x3, 3);
    let x237: BytePoly_1 = bigint_nondet_rem!(ctx, x235, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x236, x3, 4), x237, 4), x235, 4),
        24387,
        2,
    )?;
    let x238: BytePoly_1 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x237, x183, 1), x3, 1), x183, 1),
        x3,
        1
    );
    let x239: BytePoly_1 = bigint_nondet_quot!(ctx, x238, x3, 1);
    let x240: BytePoly_1 = bigint_nondet_rem!(ctx, x238, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x239, x3, 2), x240, 2), x238, 2),
        8131,
        2,
    )?;
    let x241: BytePoly_2 = bigint_mul!(x228, x240, 2);
    let x242: BytePoly_3 = bigint_nondet_quot!(ctx, x241, x3, 3);
    let x243: BytePoly_1 = bigint_nondet_rem!(ctx, x241, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x242, x3, 4), x243, 4), x241, 4),
        24387,
        2,
    )?;
    let x244: BytePoly_1 = bigint_add!(bigint_sub!(x3, bigint_add!(x243, x234, 1), 1), x3, 1);
    let x245: BytePoly_1 = bigint_nondet_quot!(ctx, x244, x3, 1);
    let x246: BytePoly_1 = bigint_nondet_rem!(ctx, x244, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x245, x3, 2), x246, 2), x244, 2),
        8131,
        2,
    )?;
    let x247: BytePoly_1 = bigint_nondet_rem!(ctx, x191, x4, 1);
    let x248: BytePoly_1 = bigint_nondet_quot!(ctx, x191, x4, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x248, x4, 2), x247, 2), x191, 2),
        8131,
        2,
    )?;
    let x249: BytePoly_1 = bigint_sub!(x5, x247, 1);
    eqz(ctx, &bigint_mul!(x247, x249, 2), 8131, 2)?;
    let x250: BytePoly_1 = bigint_add!(bigint_sub!(x246, x212, 1), x3, 1);
    let x251: BytePoly_1 = bigint_add!(bigint_sub!(x240, x210, 1), x3, 1);
    let x252: BytePoly_1 = bigint_nondet_inv!(ctx, x251, x3, 1);
    let x253: BytePoly_1 = bigint_nondet_rem!(ctx, bigint_mul!(x250, x252, 2), x3, 1);
    let x254: BytePoly_2 = bigint_add!(bigint_sub!(bigint_mul!(x253, x251, 2), x250, 2), x3, 2);
    let x255: BytePoly_3 = bigint_nondet_quot!(ctx, x254, x3, 3);
    eqz(
        ctx,
        &bigint_sub!(x254, bigint_mul!(x255, x3, 4), 4),
        24387,
        2,
    )?;
    let x256: BytePoly_2 = bigint_mul!(x253, x253, 2);
    let x257: BytePoly_2 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x256, x210, 2), x3, 2), x240, 2),
        x3,
        2
    );
    let x258: BytePoly_3 = bigint_nondet_quot!(ctx, x257, x3, 3);
    let x259: BytePoly_1 = bigint_nondet_rem!(ctx, x257, x3, 1);
    let x260: BytePoly_2 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x3,
                bigint_add!(
                    bigint_mul!(x253, x259, 2),
                    bigint_add!(bigint_sub!(x212, bigint_mul!(x253, x210, 2), 2), x3, 2),
                    2
                ),
                2
            ),
            x3,
            2
        ),
        x3,
        2
    );
    let x261: BytePoly_3 = bigint_nondet_quot!(ctx, x260, x3, 3);
    let x262: BytePoly_1 = bigint_nondet_rem!(ctx, x260, x3, 1);
    let x263: BytePoly_4 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x256, bigint_mul!(x258, x3, 4), 4), x210, 4),
                    x240,
                    4
                ),
                x3,
                4
            ),
            x3,
            4
        ),
        x259,
        4
    );
    eqz(ctx, &x263, 24387, 2)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x261, x3, 4), x262, 4),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x253, bigint_sub!(x210, x259, 1), 2), x212, 2),
                    x3,
                    2
                ),
                x3,
                2
            ),
            4
        ),
        24387,
        2,
    )?;
    let x264: BytePoly_2 = bigint_add!(bigint_mul!(x259, x247, 2), bigint_mul!(x210, x249, 2), 2);
    let x265: BytePoly_2 = bigint_add!(bigint_mul!(x262, x247, 2), bigint_mul!(x212, x249, 2), 2);
    let x266: BytePoly_3 = bigint_nondet_quot!(ctx, x264, x3, 3);
    let x267: BytePoly_1 = bigint_nondet_rem!(ctx, x264, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x266, x3, 4), x267, 4), x264, 4),
        24387,
        2,
    )?;
    let x268: BytePoly_3 = bigint_nondet_quot!(ctx, x265, x3, 3);
    let x269: BytePoly_1 = bigint_nondet_rem!(ctx, x265, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x268, x3, 4), x269, 4), x265, 4),
        24387,
        2,
    )?;
    let x270: BytePoly_2 = bigint_mul!(x240, x240, 2);
    let x271: BytePoly_3 = bigint_nondet_quot!(ctx, x270, x3, 3);
    let x272: BytePoly_1 = bigint_nondet_rem!(ctx, x270, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x271, x3, 4), x272, 4), x270, 4),
        24387,
        2,
    )?;
    let x273: BytePoly_2 = bigint_add!(bigint_mul!(x272, x0, 2), x2, 2);
    let x274: BytePoly_3 = bigint_nondet_quot!(ctx, x273, x3, 3);
    let x275: BytePoly_1 = bigint_nondet_rem!(ctx, x273, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x274, x3, 4), x275, 4), x273, 4),
        24387,
        2,
    )?;
    let x276: BytePoly_1 = bigint_add!(x246, x246, 1);
    let x277: BytePoly_1 = bigint_nondet_quot!(ctx, x276, x3, 1);
    let x278: BytePoly_1 = bigint_nondet_rem!(ctx, x276, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x277, x3, 2), x278, 2), x276, 2),
        8131,
        2,
    )?;
    let x279: BytePoly_1 = bigint_nondet_inv!(ctx, x278, x3, 1);
    let x280: BytePoly_2 = bigint_mul!(x278, x279, 2);
    let x281: BytePoly_3 = bigint_nondet_quot!(ctx, x280, x3, 3);
    let x282: BytePoly_1 = bigint_nondet_rem!(ctx, x280, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x281, x3, 4), x282, 4), x280, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x282, x5, 1), 34, 1)?;
    let x283: BytePoly_2 = bigint_mul!(x275, x279, 2);
    let x284: BytePoly_3 = bigint_nondet_quot!(ctx, x283, x3, 3);
    let x285: BytePoly_1 = bigint_nondet_rem!(ctx, x283, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x284, x3, 4), x285, 4), x283, 4),
        24387,
        2,
    )?;
    let x286: BytePoly_2 = bigint_mul!(x285, x240, 2);
    let x287: BytePoly_3 = bigint_nondet_quot!(ctx, x286, x3, 3);
    let x288: BytePoly_1 = bigint_nondet_rem!(ctx, x286, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x287, x3, 4), x288, 4), x286, 4),
        24387,
        2,
    )?;
    let x289: BytePoly_1 = bigint_add!(bigint_sub!(x246, x288, 1), x3, 1);
    let x290: BytePoly_1 = bigint_nondet_quot!(ctx, x289, x3, 1);
    let x291: BytePoly_1 = bigint_nondet_rem!(ctx, x289, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x290, x3, 2), x291, 2), x289, 2),
        8131,
        2,
    )?;
    let x292: BytePoly_2 = bigint_mul!(x285, x285, 2);
    let x293: BytePoly_3 = bigint_nondet_quot!(ctx, x292, x3, 3);
    let x294: BytePoly_1 = bigint_nondet_rem!(ctx, x292, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x293, x3, 4), x294, 4), x292, 4),
        24387,
        2,
    )?;
    let x295: BytePoly_1 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x294, x240, 1), x3, 1), x240, 1),
        x3,
        1
    );
    let x296: BytePoly_1 = bigint_nondet_quot!(ctx, x295, x3, 1);
    let x297: BytePoly_1 = bigint_nondet_rem!(ctx, x295, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x296, x3, 2), x297, 2), x295, 2),
        8131,
        2,
    )?;
    let x298: BytePoly_2 = bigint_mul!(x285, x297, 2);
    let x299: BytePoly_3 = bigint_nondet_quot!(ctx, x298, x3, 3);
    let x300: BytePoly_1 = bigint_nondet_rem!(ctx, x298, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x299, x3, 4), x300, 4), x298, 4),
        24387,
        2,
    )?;
    let x301: BytePoly_1 = bigint_add!(bigint_sub!(x3, bigint_add!(x300, x291, 1), 1), x3, 1);
    let x302: BytePoly_1 = bigint_nondet_quot!(ctx, x301, x3, 1);
    let x303: BytePoly_1 = bigint_nondet_rem!(ctx, x301, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x302, x3, 2), x303, 2), x301, 2),
        8131,
        2,
    )?;
    let x304: BytePoly_1 = bigint_nondet_rem!(ctx, x248, x4, 1);
    let x305: BytePoly_1 = bigint_nondet_quot!(ctx, x248, x4, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x305, x4, 2), x304, 2), x248, 2),
        8131,
        2,
    )?;
    let x306: BytePoly_1 = bigint_sub!(x5, x304, 1);
    eqz(ctx, &bigint_mul!(x304, x306, 2), 8131, 2)?;
    let x307: BytePoly_1 = bigint_add!(bigint_sub!(x303, x269, 1), x3, 1);
    let x308: BytePoly_1 = bigint_add!(bigint_sub!(x297, x267, 1), x3, 1);
    let x309: BytePoly_1 = bigint_nondet_inv!(ctx, x308, x3, 1);
    let x310: BytePoly_1 = bigint_nondet_rem!(ctx, bigint_mul!(x307, x309, 2), x3, 1);
    let x311: BytePoly_2 = bigint_add!(bigint_sub!(bigint_mul!(x310, x308, 2), x307, 2), x3, 2);
    let x312: BytePoly_3 = bigint_nondet_quot!(ctx, x311, x3, 3);
    eqz(
        ctx,
        &bigint_sub!(x311, bigint_mul!(x312, x3, 4), 4),
        24387,
        2,
    )?;
    let x313: BytePoly_2 = bigint_mul!(x310, x310, 2);
    let x314: BytePoly_2 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x313, x267, 2), x3, 2), x297, 2),
        x3,
        2
    );
    let x315: BytePoly_3 = bigint_nondet_quot!(ctx, x314, x3, 3);
    let x316: BytePoly_1 = bigint_nondet_rem!(ctx, x314, x3, 1);
    let x317: BytePoly_2 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x3,
                bigint_add!(
                    bigint_mul!(x310, x316, 2),
                    bigint_add!(bigint_sub!(x269, bigint_mul!(x310, x267, 2), 2), x3, 2),
                    2
                ),
                2
            ),
            x3,
            2
        ),
        x3,
        2
    );
    let x318: BytePoly_3 = bigint_nondet_quot!(ctx, x317, x3, 3);
    let x319: BytePoly_1 = bigint_nondet_rem!(ctx, x317, x3, 1);
    let x320: BytePoly_4 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x313, bigint_mul!(x315, x3, 4), 4), x267, 4),
                    x297,
                    4
                ),
                x3,
                4
            ),
            x3,
            4
        ),
        x316,
        4
    );
    eqz(ctx, &x320, 24387, 2)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x318, x3, 4), x319, 4),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x310, bigint_sub!(x267, x316, 1), 2), x269, 2),
                    x3,
                    2
                ),
                x3,
                2
            ),
            4
        ),
        24387,
        2,
    )?;
    let x321: BytePoly_2 = bigint_add!(bigint_mul!(x316, x304, 2), bigint_mul!(x267, x306, 2), 2);
    let x322: BytePoly_2 = bigint_add!(bigint_mul!(x319, x304, 2), bigint_mul!(x269, x306, 2), 2);
    let x323: BytePoly_3 = bigint_nondet_quot!(ctx, x321, x3, 3);
    let x324: BytePoly_1 = bigint_nondet_rem!(ctx, x321, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x323, x3, 4), x324, 4), x321, 4),
        24387,
        2,
    )?;
    let x325: BytePoly_3 = bigint_nondet_quot!(ctx, x322, x3, 3);
    let x326: BytePoly_1 = bigint_nondet_rem!(ctx, x322, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x325, x3, 4), x326, 4), x322, 4),
        24387,
        2,
    )?;
    let x327: BytePoly_2 = bigint_mul!(x297, x297, 2);
    let x328: BytePoly_3 = bigint_nondet_quot!(ctx, x327, x3, 3);
    let x329: BytePoly_1 = bigint_nondet_rem!(ctx, x327, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x328, x3, 4), x329, 4), x327, 4),
        24387,
        2,
    )?;
    let x330: BytePoly_2 = bigint_add!(bigint_mul!(x329, x0, 2), x2, 2);
    let x331: BytePoly_3 = bigint_nondet_quot!(ctx, x330, x3, 3);
    let x332: BytePoly_1 = bigint_nondet_rem!(ctx, x330, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x331, x3, 4), x332, 4), x330, 4),
        24387,
        2,
    )?;
    let x333: BytePoly_1 = bigint_add!(x303, x303, 1);
    let x334: BytePoly_1 = bigint_nondet_quot!(ctx, x333, x3, 1);
    let x335: BytePoly_1 = bigint_nondet_rem!(ctx, x333, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x334, x3, 2), x335, 2), x333, 2),
        8131,
        2,
    )?;
    let x336: BytePoly_1 = bigint_nondet_inv!(ctx, x335, x3, 1);
    let x337: BytePoly_2 = bigint_mul!(x335, x336, 2);
    let x338: BytePoly_3 = bigint_nondet_quot!(ctx, x337, x3, 3);
    let x339: BytePoly_1 = bigint_nondet_rem!(ctx, x337, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x338, x3, 4), x339, 4), x337, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x339, x5, 1), 34, 1)?;
    let x340: BytePoly_2 = bigint_mul!(x332, x336, 2);
    let x341: BytePoly_3 = bigint_nondet_quot!(ctx, x340, x3, 3);
    let x342: BytePoly_1 = bigint_nondet_rem!(ctx, x340, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x341, x3, 4), x342, 4), x340, 4),
        24387,
        2,
    )?;
    let x343: BytePoly_2 = bigint_mul!(x342, x297, 2);
    let x344: BytePoly_3 = bigint_nondet_quot!(ctx, x343, x3, 3);
    let x345: BytePoly_1 = bigint_nondet_rem!(ctx, x343, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x344, x3, 4), x345, 4), x343, 4),
        24387,
        2,
    )?;
    let x346: BytePoly_1 = bigint_add!(bigint_sub!(x303, x345, 1), x3, 1);
    let x347: BytePoly_1 = bigint_nondet_quot!(ctx, x346, x3, 1);
    let x348: BytePoly_1 = bigint_nondet_rem!(ctx, x346, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x347, x3, 2), x348, 2), x346, 2),
        8131,
        2,
    )?;
    let x349: BytePoly_2 = bigint_mul!(x342, x342, 2);
    let x350: BytePoly_3 = bigint_nondet_quot!(ctx, x349, x3, 3);
    let x351: BytePoly_1 = bigint_nondet_rem!(ctx, x349, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x350, x3, 4), x351, 4), x349, 4),
        24387,
        2,
    )?;
    let x352: BytePoly_1 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x351, x297, 1), x3, 1), x297, 1),
        x3,
        1
    );
    let x353: BytePoly_1 = bigint_nondet_quot!(ctx, x352, x3, 1);
    let x354: BytePoly_1 = bigint_nondet_rem!(ctx, x352, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x353, x3, 2), x354, 2), x352, 2),
        8131,
        2,
    )?;
    let x355: BytePoly_2 = bigint_mul!(x342, x354, 2);
    let x356: BytePoly_3 = bigint_nondet_quot!(ctx, x355, x3, 3);
    let x357: BytePoly_1 = bigint_nondet_rem!(ctx, x355, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x356, x3, 4), x357, 4), x355, 4),
        24387,
        2,
    )?;
    let x358: BytePoly_1 = bigint_add!(bigint_sub!(x3, bigint_add!(x357, x348, 1), 1), x3, 1);
    let x359: BytePoly_1 = bigint_nondet_quot!(ctx, x358, x3, 1);
    let x360: BytePoly_1 = bigint_nondet_rem!(ctx, x358, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x359, x3, 2), x360, 2), x358, 2),
        8131,
        2,
    )?;
    let x361: BytePoly_1 = bigint_nondet_rem!(ctx, x305, x4, 1);
    let x362: BytePoly_1 = bigint_nondet_quot!(ctx, x305, x4, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x362, x4, 2), x361, 2), x305, 2),
        8131,
        2,
    )?;
    let x363: BytePoly_1 = bigint_sub!(x5, x361, 1);
    eqz(ctx, &bigint_mul!(x361, x363, 2), 8131, 2)?;
    let x364: BytePoly_1 = bigint_add!(bigint_sub!(x360, x326, 1), x3, 1);
    let x365: BytePoly_1 = bigint_add!(bigint_sub!(x354, x324, 1), x3, 1);
    let x366: BytePoly_1 = bigint_nondet_inv!(ctx, x365, x3, 1);
    let x367: BytePoly_1 = bigint_nondet_rem!(ctx, bigint_mul!(x364, x366, 2), x3, 1);
    let x368: BytePoly_2 = bigint_add!(bigint_sub!(bigint_mul!(x367, x365, 2), x364, 2), x3, 2);
    let x369: BytePoly_3 = bigint_nondet_quot!(ctx, x368, x3, 3);
    eqz(
        ctx,
        &bigint_sub!(x368, bigint_mul!(x369, x3, 4), 4),
        24387,
        2,
    )?;
    let x370: BytePoly_2 = bigint_mul!(x367, x367, 2);
    let x371: BytePoly_2 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x370, x324, 2), x3, 2), x354, 2),
        x3,
        2
    );
    let x372: BytePoly_3 = bigint_nondet_quot!(ctx, x371, x3, 3);
    let x373: BytePoly_1 = bigint_nondet_rem!(ctx, x371, x3, 1);
    let x374: BytePoly_2 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x3,
                bigint_add!(
                    bigint_mul!(x367, x373, 2),
                    bigint_add!(bigint_sub!(x326, bigint_mul!(x367, x324, 2), 2), x3, 2),
                    2
                ),
                2
            ),
            x3,
            2
        ),
        x3,
        2
    );
    let x375: BytePoly_3 = bigint_nondet_quot!(ctx, x374, x3, 3);
    let x376: BytePoly_1 = bigint_nondet_rem!(ctx, x374, x3, 1);
    let x377: BytePoly_4 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x370, bigint_mul!(x372, x3, 4), 4), x324, 4),
                    x354,
                    4
                ),
                x3,
                4
            ),
            x3,
            4
        ),
        x373,
        4
    );
    eqz(ctx, &x377, 24387, 2)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x375, x3, 4), x376, 4),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x367, bigint_sub!(x324, x373, 1), 2), x326, 2),
                    x3,
                    2
                ),
                x3,
                2
            ),
            4
        ),
        24387,
        2,
    )?;
    let x378: BytePoly_2 = bigint_add!(bigint_mul!(x373, x361, 2), bigint_mul!(x324, x363, 2), 2);
    let x379: BytePoly_2 = bigint_add!(bigint_mul!(x376, x361, 2), bigint_mul!(x326, x363, 2), 2);
    let x380: BytePoly_3 = bigint_nondet_quot!(ctx, x378, x3, 3);
    let x381: BytePoly_1 = bigint_nondet_rem!(ctx, x378, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x380, x3, 4), x381, 4), x378, 4),
        24387,
        2,
    )?;
    let x382: BytePoly_3 = bigint_nondet_quot!(ctx, x379, x3, 3);
    let x383: BytePoly_1 = bigint_nondet_rem!(ctx, x379, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x382, x3, 4), x383, 4), x379, 4),
        24387,
        2,
    )?;
    let x384: BytePoly_2 = bigint_mul!(x354, x354, 2);
    let x385: BytePoly_3 = bigint_nondet_quot!(ctx, x384, x3, 3);
    let x386: BytePoly_1 = bigint_nondet_rem!(ctx, x384, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x385, x3, 4), x386, 4), x384, 4),
        24387,
        2,
    )?;
    let x387: BytePoly_2 = bigint_add!(bigint_mul!(x386, x0, 2), x2, 2);
    let x388: BytePoly_3 = bigint_nondet_quot!(ctx, x387, x3, 3);
    let x389: BytePoly_1 = bigint_nondet_rem!(ctx, x387, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x388, x3, 4), x389, 4), x387, 4),
        24387,
        2,
    )?;
    let x390: BytePoly_1 = bigint_add!(x360, x360, 1);
    let x391: BytePoly_1 = bigint_nondet_quot!(ctx, x390, x3, 1);
    let x392: BytePoly_1 = bigint_nondet_rem!(ctx, x390, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x391, x3, 2), x392, 2), x390, 2),
        8131,
        2,
    )?;
    let x393: BytePoly_1 = bigint_nondet_inv!(ctx, x392, x3, 1);
    let x394: BytePoly_2 = bigint_mul!(x392, x393, 2);
    let x395: BytePoly_3 = bigint_nondet_quot!(ctx, x394, x3, 3);
    let x396: BytePoly_1 = bigint_nondet_rem!(ctx, x394, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x395, x3, 4), x396, 4), x394, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x396, x5, 1), 34, 1)?;
    let x397: BytePoly_2 = bigint_mul!(x389, x393, 2);
    let x398: BytePoly_3 = bigint_nondet_quot!(ctx, x397, x3, 3);
    let x399: BytePoly_1 = bigint_nondet_rem!(ctx, x397, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x398, x3, 4), x399, 4), x397, 4),
        24387,
        2,
    )?;
    let x400: BytePoly_2 = bigint_mul!(x399, x354, 2);
    let x401: BytePoly_3 = bigint_nondet_quot!(ctx, x400, x3, 3);
    let x402: BytePoly_1 = bigint_nondet_rem!(ctx, x400, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x401, x3, 4), x402, 4), x400, 4),
        24387,
        2,
    )?;
    let x403: BytePoly_1 = bigint_add!(bigint_sub!(x360, x402, 1), x3, 1);
    let x404: BytePoly_1 = bigint_nondet_quot!(ctx, x403, x3, 1);
    let x405: BytePoly_1 = bigint_nondet_rem!(ctx, x403, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x404, x3, 2), x405, 2), x403, 2),
        8131,
        2,
    )?;
    let x406: BytePoly_2 = bigint_mul!(x399, x399, 2);
    let x407: BytePoly_3 = bigint_nondet_quot!(ctx, x406, x3, 3);
    let x408: BytePoly_1 = bigint_nondet_rem!(ctx, x406, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x407, x3, 4), x408, 4), x406, 4),
        24387,
        2,
    )?;
    let x409: BytePoly_1 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x408, x354, 1), x3, 1), x354, 1),
        x3,
        1
    );
    let x410: BytePoly_1 = bigint_nondet_quot!(ctx, x409, x3, 1);
    let x411: BytePoly_1 = bigint_nondet_rem!(ctx, x409, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x410, x3, 2), x411, 2), x409, 2),
        8131,
        2,
    )?;
    let x412: BytePoly_2 = bigint_mul!(x399, x411, 2);
    let x413: BytePoly_3 = bigint_nondet_quot!(ctx, x412, x3, 3);
    let x414: BytePoly_1 = bigint_nondet_rem!(ctx, x412, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x413, x3, 4), x414, 4), x412, 4),
        24387,
        2,
    )?;
    let x415: BytePoly_1 = bigint_add!(bigint_sub!(x3, bigint_add!(x414, x405, 1), 1), x3, 1);
    let x416: BytePoly_1 = bigint_nondet_quot!(ctx, x415, x3, 1);
    let x417: BytePoly_1 = bigint_nondet_rem!(ctx, x415, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x416, x3, 2), x417, 2), x415, 2),
        8131,
        2,
    )?;
    let x418: BytePoly_1 = bigint_nondet_rem!(ctx, x362, x4, 1);
    let x419: BytePoly_1 = bigint_nondet_quot!(ctx, x362, x4, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x419, x4, 2), x418, 2), x362, 2),
        8131,
        2,
    )?;
    let x420: BytePoly_1 = bigint_sub!(x5, x418, 1);
    eqz(ctx, &bigint_mul!(x418, x420, 2), 8131, 2)?;
    let x421: BytePoly_1 = bigint_add!(bigint_sub!(x417, x383, 1), x3, 1);
    let x422: BytePoly_1 = bigint_add!(bigint_sub!(x411, x381, 1), x3, 1);
    let x423: BytePoly_1 = bigint_nondet_inv!(ctx, x422, x3, 1);
    let x424: BytePoly_1 = bigint_nondet_rem!(ctx, bigint_mul!(x421, x423, 2), x3, 1);
    let x425: BytePoly_2 = bigint_add!(bigint_sub!(bigint_mul!(x424, x422, 2), x421, 2), x3, 2);
    let x426: BytePoly_3 = bigint_nondet_quot!(ctx, x425, x3, 3);
    eqz(
        ctx,
        &bigint_sub!(x425, bigint_mul!(x426, x3, 4), 4),
        24387,
        2,
    )?;
    let x427: BytePoly_2 = bigint_mul!(x424, x424, 2);
    let x428: BytePoly_2 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x427, x381, 2), x3, 2), x411, 2),
        x3,
        2
    );
    let x429: BytePoly_3 = bigint_nondet_quot!(ctx, x428, x3, 3);
    let x430: BytePoly_1 = bigint_nondet_rem!(ctx, x428, x3, 1);
    let x431: BytePoly_2 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x3,
                bigint_add!(
                    bigint_mul!(x424, x430, 2),
                    bigint_add!(bigint_sub!(x383, bigint_mul!(x424, x381, 2), 2), x3, 2),
                    2
                ),
                2
            ),
            x3,
            2
        ),
        x3,
        2
    );
    let x432: BytePoly_3 = bigint_nondet_quot!(ctx, x431, x3, 3);
    let x433: BytePoly_1 = bigint_nondet_rem!(ctx, x431, x3, 1);
    let x434: BytePoly_4 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x427, bigint_mul!(x429, x3, 4), 4), x381, 4),
                    x411,
                    4
                ),
                x3,
                4
            ),
            x3,
            4
        ),
        x430,
        4
    );
    eqz(ctx, &x434, 24387, 2)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x432, x3, 4), x433, 4),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x424, bigint_sub!(x381, x430, 1), 2), x383, 2),
                    x3,
                    2
                ),
                x3,
                2
            ),
            4
        ),
        24387,
        2,
    )?;
    let x435: BytePoly_2 = bigint_add!(bigint_mul!(x430, x418, 2), bigint_mul!(x381, x420, 2), 2);
    let x436: BytePoly_2 = bigint_add!(bigint_mul!(x433, x418, 2), bigint_mul!(x383, x420, 2), 2);
    let x437: BytePoly_3 = bigint_nondet_quot!(ctx, x435, x3, 3);
    let x438: BytePoly_1 = bigint_nondet_rem!(ctx, x435, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x437, x3, 4), x438, 4), x435, 4),
        24387,
        2,
    )?;
    let x439: BytePoly_3 = bigint_nondet_quot!(ctx, x436, x3, 3);
    let x440: BytePoly_1 = bigint_nondet_rem!(ctx, x436, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x439, x3, 4), x440, 4), x436, 4),
        24387,
        2,
    )?;
    let x441: BytePoly_2 = bigint_mul!(x411, x411, 2);
    let x442: BytePoly_3 = bigint_nondet_quot!(ctx, x441, x3, 3);
    let x443: BytePoly_1 = bigint_nondet_rem!(ctx, x441, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x442, x3, 4), x443, 4), x441, 4),
        24387,
        2,
    )?;
    let x444: BytePoly_2 = bigint_add!(bigint_mul!(x443, x0, 2), x2, 2);
    let x445: BytePoly_3 = bigint_nondet_quot!(ctx, x444, x3, 3);
    let x446: BytePoly_1 = bigint_nondet_rem!(ctx, x444, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x445, x3, 4), x446, 4), x444, 4),
        24387,
        2,
    )?;
    let x447: BytePoly_1 = bigint_add!(x417, x417, 1);
    let x448: BytePoly_1 = bigint_nondet_quot!(ctx, x447, x3, 1);
    let x449: BytePoly_1 = bigint_nondet_rem!(ctx, x447, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x448, x3, 2), x449, 2), x447, 2),
        8131,
        2,
    )?;
    let x450: BytePoly_1 = bigint_nondet_inv!(ctx, x449, x3, 1);
    let x451: BytePoly_2 = bigint_mul!(x449, x450, 2);
    let x452: BytePoly_3 = bigint_nondet_quot!(ctx, x451, x3, 3);
    let x453: BytePoly_1 = bigint_nondet_rem!(ctx, x451, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x452, x3, 4), x453, 4), x451, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x453, x5, 1), 34, 1)?;
    let x454: BytePoly_2 = bigint_mul!(x446, x450, 2);
    let x455: BytePoly_3 = bigint_nondet_quot!(ctx, x454, x3, 3);
    let x456: BytePoly_1 = bigint_nondet_rem!(ctx, x454, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x455, x3, 4), x456, 4), x454, 4),
        24387,
        2,
    )?;
    let x457: BytePoly_2 = bigint_mul!(x456, x411, 2);
    let x458: BytePoly_3 = bigint_nondet_quot!(ctx, x457, x3, 3);
    let x459: BytePoly_1 = bigint_nondet_rem!(ctx, x457, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x458, x3, 4), x459, 4), x457, 4),
        24387,
        2,
    )?;
    let x460: BytePoly_1 = bigint_add!(bigint_sub!(x417, x459, 1), x3, 1);
    let x461: BytePoly_1 = bigint_nondet_quot!(ctx, x460, x3, 1);
    let x462: BytePoly_1 = bigint_nondet_rem!(ctx, x460, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x461, x3, 2), x462, 2), x460, 2),
        8131,
        2,
    )?;
    let x463: BytePoly_2 = bigint_mul!(x456, x456, 2);
    let x464: BytePoly_3 = bigint_nondet_quot!(ctx, x463, x3, 3);
    let x465: BytePoly_1 = bigint_nondet_rem!(ctx, x463, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x464, x3, 4), x465, 4), x463, 4),
        24387,
        2,
    )?;
    let x466: BytePoly_1 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x465, x411, 1), x3, 1), x411, 1),
        x3,
        1
    );
    let x467: BytePoly_1 = bigint_nondet_quot!(ctx, x466, x3, 1);
    let x468: BytePoly_1 = bigint_nondet_rem!(ctx, x466, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x467, x3, 2), x468, 2), x466, 2),
        8131,
        2,
    )?;
    let x469: BytePoly_2 = bigint_mul!(x456, x468, 2);
    let x470: BytePoly_3 = bigint_nondet_quot!(ctx, x469, x3, 3);
    let x471: BytePoly_1 = bigint_nondet_rem!(ctx, x469, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x470, x3, 4), x471, 4), x469, 4),
        24387,
        2,
    )?;
    let x472: BytePoly_1 = bigint_add!(bigint_sub!(x3, bigint_add!(x471, x462, 1), 1), x3, 1);
    let x473: BytePoly_1 = bigint_nondet_quot!(ctx, x472, x3, 1);
    let x474: BytePoly_1 = bigint_nondet_rem!(ctx, x472, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x473, x3, 2), x474, 2), x472, 2),
        8131,
        2,
    )?;
    let x475: BytePoly_1 = bigint_add!(bigint_sub!(bigint_sub!(x3, x10, 1), x440, 1), x3, 1);
    let x476: BytePoly_1 = bigint_add!(bigint_sub!(x9, x438, 1), x3, 1);
    let x477: BytePoly_1 = bigint_nondet_inv!(ctx, x476, x3, 1);
    let x478: BytePoly_1 = bigint_nondet_rem!(ctx, bigint_mul!(x475, x477, 2), x3, 1);
    let x479: BytePoly_2 = bigint_add!(bigint_sub!(bigint_mul!(x478, x476, 2), x475, 2), x3, 2);
    let x480: BytePoly_3 = bigint_nondet_quot!(ctx, x479, x3, 3);
    eqz(
        ctx,
        &bigint_sub!(x479, bigint_mul!(x480, x3, 4), 4),
        24387,
        2,
    )?;
    let x481: BytePoly_2 = bigint_mul!(x478, x478, 2);
    let x482: BytePoly_2 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x481, x438, 2), x3, 2), x9, 2),
        x3,
        2
    );
    let x483: BytePoly_3 = bigint_nondet_quot!(ctx, x482, x3, 3);
    let x484: BytePoly_1 = bigint_nondet_rem!(ctx, x482, x3, 1);
    let x485: BytePoly_2 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x3,
                bigint_add!(
                    bigint_mul!(x478, x484, 2),
                    bigint_add!(bigint_sub!(x440, bigint_mul!(x478, x438, 2), 2), x3, 2),
                    2
                ),
                2
            ),
            x3,
            2
        ),
        x3,
        2
    );
    let x486: BytePoly_3 = bigint_nondet_quot!(ctx, x485, x3, 3);
    let x487: BytePoly_1 = bigint_nondet_rem!(ctx, x485, x3, 1);
    let x488: BytePoly_4 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x481, bigint_mul!(x483, x3, 4), 4), x438, 4),
                    x9,
                    4
                ),
                x3,
                4
            ),
            x3,
            4
        ),
        x484,
        4
    );
    eqz(ctx, &x488, 24387, 2)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x486, x3, 4), x487, 4),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x478, bigint_sub!(x438, x484, 1), 2), x440, 2),
                    x3,
                    2
                ),
                x3,
                2
            ),
            4
        ),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x484, x11, 1), 34, 1)?;
    eqz(ctx, &bigint_sub!(x487, x12, 1), 34, 1)?;
    return Ok(());
}
pub fn ec_aff_mul_test_32(ctx: &mut BigIntContext) -> Result<()> {
    let x0: BytePoly_1 = bigint_const!(ctx, 3);
    let x1: BytePoly_4 = bigint_const!(ctx, 1, 0, 0, 0);
    let x2: BytePoly_4 = bigint_const!(ctx, 5, 0, 0, 0);
    let x3: BytePoly_4 = bigint_const!(ctx, 11, 0, 0, 0);
    let x4: BytePoly_1 = bigint_const!(ctx, 2);
    let x5: BytePoly_1 = bigint_const!(ctx, 1);
    let x6: BytePoly_4 = bigint_def!(ctx, 4, 0, 1);
    let x7: BytePoly_4 = bigint_def!(ctx, 4, 1, 1);
    let x8: BytePoly_4 = bigint_def!(ctx, 4, 2, 1);
    let x9: BytePoly_4 = bigint_def!(ctx, 4, 3, 1);
    let x10: BytePoly_4 = bigint_def!(ctx, 4, 4, 1);
    let x11: BytePoly_4 = bigint_def!(ctx, 4, 5, 1);
    let x12: BytePoly_4 = bigint_def!(ctx, 4, 6, 1);
    eqz(ctx, &bigint_sub!(x6, x6, 4), 34, 1)?;
    eqz(ctx, &bigint_sub!(x7, x7, 4), 34, 1)?;
    eqz(ctx, &bigint_sub!(x8, x8, 4), 34, 1)?;
    eqz(ctx, &bigint_sub!(x9, x9, 4), 34, 1)?;
    eqz(ctx, &bigint_sub!(x10, x10, 4), 34, 1)?;
    eqz(ctx, &bigint_sub!(x11, x11, 4), 34, 1)?;
    eqz(ctx, &bigint_sub!(x12, x12, 4), 34, 1)?;
    let x13: BytePoly_8 = bigint_mul!(x9, x9, 8);
    let x14: BytePoly_9 = bigint_nondet_quot!(ctx, x13, x3, 9);
    let x15: BytePoly_4 = bigint_nondet_rem!(ctx, x13, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x14, x3, 13), x15, 13), x13, 13),
        73156,
        4,
    )?;
    let x16: BytePoly_8 = bigint_sub!(
        bigint_mul!(x10, x10, 8),
        bigint_add!(
            bigint_add!(bigint_mul!(x9, x15, 8), bigint_mul!(x9, x2, 8), 8),
            x1,
            8
        ),
        8
    );
    let x17: BytePoly_9 = bigint_nondet_quot!(ctx, x16, x3, 9);
    let x18: BytePoly_4 = bigint_nondet_rem!(ctx, x16, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x17, x3, 13), x18, 13), x16, 13),
        73156,
        4,
    )?;
    eqz(ctx, &x18, 34, 1)?;
    let x19: BytePoly_1 = bigint_nondet_rem!(ctx, x8, x4, 1);
    let x20: BytePoly_4 = bigint_nondet_quot!(ctx, x8, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x20, x4, 5), x19, 5), x8, 5),
        32515,
        2,
    )?;
    let x21: BytePoly_1 = bigint_sub!(x5, x19, 1);
    eqz(ctx, &bigint_mul!(x19, x21, 2), 8131, 2)?;
    let x22: BytePoly_4 = bigint_add!(bigint_sub!(x7, x10, 4), x3, 4);
    let x23: BytePoly_4 = bigint_add!(bigint_sub!(x6, x9, 4), x3, 4);
    let x24: BytePoly_4 = bigint_nondet_inv!(ctx, x23, x3, 4);
    let x25: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x22, x24, 8), x3, 4);
    let x26: BytePoly_8 = bigint_add!(bigint_sub!(bigint_mul!(x25, x23, 8), x22, 8), x3, 8);
    let x27: BytePoly_9 = bigint_nondet_quot!(ctx, x26, x3, 9);
    eqz(
        ctx,
        &bigint_sub!(x26, bigint_mul!(x27, x3, 13), 13),
        73156,
        4,
    )?;
    let x28: BytePoly_8 = bigint_mul!(x25, x25, 8);
    let x29: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x28, x9, 8), x3, 8), x6, 8),
        x3,
        8
    );
    let x30: BytePoly_9 = bigint_nondet_quot!(ctx, x29, x3, 9);
    let x31: BytePoly_4 = bigint_nondet_rem!(ctx, x29, x3, 4);
    let x32: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x3,
                bigint_add!(
                    bigint_mul!(x25, x31, 8),
                    bigint_add!(bigint_sub!(x10, bigint_mul!(x25, x9, 8), 8), x3, 8),
                    8
                ),
                8
            ),
            x3,
            8
        ),
        x3,
        8
    );
    let x33: BytePoly_9 = bigint_nondet_quot!(ctx, x32, x3, 9);
    let x34: BytePoly_4 = bigint_nondet_rem!(ctx, x32, x3, 4);
    let x35: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x28, bigint_mul!(x30, x3, 13), 13), x9, 13),
                    x6,
                    13
                ),
                x3,
                13
            ),
            x3,
            13
        ),
        x31,
        13
    );
    eqz(ctx, &x35, 73156, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x33, x3, 13), x34, 13),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x25, bigint_sub!(x9, x31, 4), 8), x10, 8),
                    x3,
                    8
                ),
                x3,
                8
            ),
            13
        ),
        73156,
        4,
    )?;
    let x36: BytePoly_5 = bigint_add!(bigint_mul!(x31, x19, 5), bigint_mul!(x9, x21, 5), 5);
    let x37: BytePoly_5 = bigint_add!(bigint_mul!(x34, x19, 5), bigint_mul!(x10, x21, 5), 5);
    let x38: BytePoly_6 = bigint_nondet_quot!(ctx, x36, x3, 6);
    let x39: BytePoly_4 = bigint_nondet_rem!(ctx, x36, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x38, x3, 10), x39, 10), x36, 10),
        48771,
        4,
    )?;
    let x40: BytePoly_6 = bigint_nondet_quot!(ctx, x37, x3, 6);
    let x41: BytePoly_4 = bigint_nondet_rem!(ctx, x37, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x40, x3, 10), x41, 10), x37, 10),
        48771,
        4,
    )?;
    let x42: BytePoly_8 = bigint_mul!(x6, x6, 8);
    let x43: BytePoly_9 = bigint_nondet_quot!(ctx, x42, x3, 9);
    let x44: BytePoly_4 = bigint_nondet_rem!(ctx, x42, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x43, x3, 13), x44, 13), x42, 13),
        73156,
        4,
    )?;
    let x45: BytePoly_5 = bigint_add!(bigint_mul!(x44, x0, 5), x2, 5);
    let x46: BytePoly_6 = bigint_nondet_quot!(ctx, x45, x3, 6);
    let x47: BytePoly_4 = bigint_nondet_rem!(ctx, x45, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x46, x3, 10), x47, 10), x45, 10),
        48771,
        4,
    )?;
    let x48: BytePoly_4 = bigint_add!(x7, x7, 4);
    let x49: BytePoly_4 = bigint_nondet_quot!(ctx, x48, x3, 4);
    let x50: BytePoly_4 = bigint_nondet_rem!(ctx, x48, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x49, x3, 8), x50, 8), x48, 8),
        32515,
        2,
    )?;
    let x51: BytePoly_4 = bigint_nondet_inv!(ctx, x50, x3, 4);
    let x52: BytePoly_8 = bigint_mul!(x50, x51, 8);
    let x53: BytePoly_9 = bigint_nondet_quot!(ctx, x52, x3, 9);
    let x54: BytePoly_4 = bigint_nondet_rem!(ctx, x52, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x53, x3, 13), x54, 13), x52, 13),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x54, x5, 4), 34, 1)?;
    let x55: BytePoly_8 = bigint_mul!(x47, x51, 8);
    let x56: BytePoly_9 = bigint_nondet_quot!(ctx, x55, x3, 9);
    let x57: BytePoly_4 = bigint_nondet_rem!(ctx, x55, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x56, x3, 13), x57, 13), x55, 13),
        73156,
        4,
    )?;
    let x58: BytePoly_8 = bigint_mul!(x57, x6, 8);
    let x59: BytePoly_9 = bigint_nondet_quot!(ctx, x58, x3, 9);
    let x60: BytePoly_4 = bigint_nondet_rem!(ctx, x58, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x59, x3, 13), x60, 13), x58, 13),
        73156,
        4,
    )?;
    let x61: BytePoly_4 = bigint_add!(bigint_sub!(x7, x60, 4), x3, 4);
    let x62: BytePoly_4 = bigint_nondet_quot!(ctx, x61, x3, 4);
    let x63: BytePoly_4 = bigint_nondet_rem!(ctx, x61, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x62, x3, 8), x63, 8), x61, 8),
        32515,
        2,
    )?;
    let x64: BytePoly_8 = bigint_mul!(x57, x57, 8);
    let x65: BytePoly_9 = bigint_nondet_quot!(ctx, x64, x3, 9);
    let x66: BytePoly_4 = bigint_nondet_rem!(ctx, x64, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x65, x3, 13), x66, 13), x64, 13),
        73156,
        4,
    )?;
    let x67: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x66, x6, 4), x3, 4), x6, 4),
        x3,
        4
    );
    let x68: BytePoly_4 = bigint_nondet_quot!(ctx, x67, x3, 4);
    let x69: BytePoly_4 = bigint_nondet_rem!(ctx, x67, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x68, x3, 8), x69, 8), x67, 8),
        32515,
        2,
    )?;
    let x70: BytePoly_8 = bigint_mul!(x57, x69, 8);
    let x71: BytePoly_9 = bigint_nondet_quot!(ctx, x70, x3, 9);
    let x72: BytePoly_4 = bigint_nondet_rem!(ctx, x70, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x71, x3, 13), x72, 13), x70, 13),
        73156,
        4,
    )?;
    let x73: BytePoly_4 = bigint_add!(bigint_sub!(x3, bigint_add!(x72, x63, 4), 4), x3, 4);
    let x74: BytePoly_4 = bigint_nondet_quot!(ctx, x73, x3, 4);
    let x75: BytePoly_4 = bigint_nondet_rem!(ctx, x73, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x74, x3, 8), x75, 8), x73, 8),
        32515,
        2,
    )?;
    let x76: BytePoly_1 = bigint_nondet_rem!(ctx, x20, x4, 1);
    let x77: BytePoly_4 = bigint_nondet_quot!(ctx, x20, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x77, x4, 5), x76, 5), x20, 5),
        32515,
        2,
    )?;
    let x78: BytePoly_1 = bigint_sub!(x5, x76, 1);
    eqz(ctx, &bigint_mul!(x76, x78, 2), 8131, 2)?;
    let x79: BytePoly_4 = bigint_add!(bigint_sub!(x75, x41, 4), x3, 4);
    let x80: BytePoly_4 = bigint_add!(bigint_sub!(x69, x39, 4), x3, 4);
    let x81: BytePoly_4 = bigint_nondet_inv!(ctx, x80, x3, 4);
    let x82: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x79, x81, 8), x3, 4);
    let x83: BytePoly_8 = bigint_add!(bigint_sub!(bigint_mul!(x82, x80, 8), x79, 8), x3, 8);
    let x84: BytePoly_9 = bigint_nondet_quot!(ctx, x83, x3, 9);
    eqz(
        ctx,
        &bigint_sub!(x83, bigint_mul!(x84, x3, 13), 13),
        73156,
        4,
    )?;
    let x85: BytePoly_8 = bigint_mul!(x82, x82, 8);
    let x86: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x85, x39, 8), x3, 8), x69, 8),
        x3,
        8
    );
    let x87: BytePoly_9 = bigint_nondet_quot!(ctx, x86, x3, 9);
    let x88: BytePoly_4 = bigint_nondet_rem!(ctx, x86, x3, 4);
    let x89: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x3,
                bigint_add!(
                    bigint_mul!(x82, x88, 8),
                    bigint_add!(bigint_sub!(x41, bigint_mul!(x82, x39, 8), 8), x3, 8),
                    8
                ),
                8
            ),
            x3,
            8
        ),
        x3,
        8
    );
    let x90: BytePoly_9 = bigint_nondet_quot!(ctx, x89, x3, 9);
    let x91: BytePoly_4 = bigint_nondet_rem!(ctx, x89, x3, 4);
    let x92: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x85, bigint_mul!(x87, x3, 13), 13), x39, 13),
                    x69,
                    13
                ),
                x3,
                13
            ),
            x3,
            13
        ),
        x88,
        13
    );
    eqz(ctx, &x92, 73156, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x90, x3, 13), x91, 13),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x82, bigint_sub!(x39, x88, 4), 8), x41, 8),
                    x3,
                    8
                ),
                x3,
                8
            ),
            13
        ),
        73156,
        4,
    )?;
    let x93: BytePoly_5 = bigint_add!(bigint_mul!(x88, x76, 5), bigint_mul!(x39, x78, 5), 5);
    let x94: BytePoly_5 = bigint_add!(bigint_mul!(x91, x76, 5), bigint_mul!(x41, x78, 5), 5);
    let x95: BytePoly_6 = bigint_nondet_quot!(ctx, x93, x3, 6);
    let x96: BytePoly_4 = bigint_nondet_rem!(ctx, x93, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x95, x3, 10), x96, 10), x93, 10),
        48771,
        4,
    )?;
    let x97: BytePoly_6 = bigint_nondet_quot!(ctx, x94, x3, 6);
    let x98: BytePoly_4 = bigint_nondet_rem!(ctx, x94, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x97, x3, 10), x98, 10), x94, 10),
        48771,
        4,
    )?;
    let x99: BytePoly_8 = bigint_mul!(x69, x69, 8);
    let x100: BytePoly_9 = bigint_nondet_quot!(ctx, x99, x3, 9);
    let x101: BytePoly_4 = bigint_nondet_rem!(ctx, x99, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x100, x3, 13), x101, 13), x99, 13),
        73156,
        4,
    )?;
    let x102: BytePoly_5 = bigint_add!(bigint_mul!(x101, x0, 5), x2, 5);
    let x103: BytePoly_6 = bigint_nondet_quot!(ctx, x102, x3, 6);
    let x104: BytePoly_4 = bigint_nondet_rem!(ctx, x102, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x103, x3, 10), x104, 10), x102, 10),
        48771,
        4,
    )?;
    let x105: BytePoly_4 = bigint_add!(x75, x75, 4);
    let x106: BytePoly_4 = bigint_nondet_quot!(ctx, x105, x3, 4);
    let x107: BytePoly_4 = bigint_nondet_rem!(ctx, x105, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x106, x3, 8), x107, 8), x105, 8),
        32515,
        2,
    )?;
    let x108: BytePoly_4 = bigint_nondet_inv!(ctx, x107, x3, 4);
    let x109: BytePoly_8 = bigint_mul!(x107, x108, 8);
    let x110: BytePoly_9 = bigint_nondet_quot!(ctx, x109, x3, 9);
    let x111: BytePoly_4 = bigint_nondet_rem!(ctx, x109, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x110, x3, 13), x111, 13), x109, 13),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x111, x5, 4), 34, 1)?;
    let x112: BytePoly_8 = bigint_mul!(x104, x108, 8);
    let x113: BytePoly_9 = bigint_nondet_quot!(ctx, x112, x3, 9);
    let x114: BytePoly_4 = bigint_nondet_rem!(ctx, x112, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x113, x3, 13), x114, 13), x112, 13),
        73156,
        4,
    )?;
    let x115: BytePoly_8 = bigint_mul!(x114, x69, 8);
    let x116: BytePoly_9 = bigint_nondet_quot!(ctx, x115, x3, 9);
    let x117: BytePoly_4 = bigint_nondet_rem!(ctx, x115, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x116, x3, 13), x117, 13), x115, 13),
        73156,
        4,
    )?;
    let x118: BytePoly_4 = bigint_add!(bigint_sub!(x75, x117, 4), x3, 4);
    let x119: BytePoly_4 = bigint_nondet_quot!(ctx, x118, x3, 4);
    let x120: BytePoly_4 = bigint_nondet_rem!(ctx, x118, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x119, x3, 8), x120, 8), x118, 8),
        32515,
        2,
    )?;
    let x121: BytePoly_8 = bigint_mul!(x114, x114, 8);
    let x122: BytePoly_9 = bigint_nondet_quot!(ctx, x121, x3, 9);
    let x123: BytePoly_4 = bigint_nondet_rem!(ctx, x121, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x122, x3, 13), x123, 13), x121, 13),
        73156,
        4,
    )?;
    let x124: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x123, x69, 4), x3, 4), x69, 4),
        x3,
        4
    );
    let x125: BytePoly_4 = bigint_nondet_quot!(ctx, x124, x3, 4);
    let x126: BytePoly_4 = bigint_nondet_rem!(ctx, x124, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x125, x3, 8), x126, 8), x124, 8),
        32515,
        2,
    )?;
    let x127: BytePoly_8 = bigint_mul!(x114, x126, 8);
    let x128: BytePoly_9 = bigint_nondet_quot!(ctx, x127, x3, 9);
    let x129: BytePoly_4 = bigint_nondet_rem!(ctx, x127, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x128, x3, 13), x129, 13), x127, 13),
        73156,
        4,
    )?;
    let x130: BytePoly_4 = bigint_add!(bigint_sub!(x3, bigint_add!(x129, x120, 4), 4), x3, 4);
    let x131: BytePoly_4 = bigint_nondet_quot!(ctx, x130, x3, 4);
    let x132: BytePoly_4 = bigint_nondet_rem!(ctx, x130, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x131, x3, 8), x132, 8), x130, 8),
        32515,
        2,
    )?;
    let x133: BytePoly_1 = bigint_nondet_rem!(ctx, x77, x4, 1);
    let x134: BytePoly_4 = bigint_nondet_quot!(ctx, x77, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x134, x4, 5), x133, 5), x77, 5),
        32515,
        2,
    )?;
    let x135: BytePoly_1 = bigint_sub!(x5, x133, 1);
    eqz(ctx, &bigint_mul!(x133, x135, 2), 8131, 2)?;
    let x136: BytePoly_4 = bigint_add!(bigint_sub!(x132, x98, 4), x3, 4);
    let x137: BytePoly_4 = bigint_add!(bigint_sub!(x126, x96, 4), x3, 4);
    let x138: BytePoly_4 = bigint_nondet_inv!(ctx, x137, x3, 4);
    let x139: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x136, x138, 8), x3, 4);
    let x140: BytePoly_8 = bigint_add!(bigint_sub!(bigint_mul!(x139, x137, 8), x136, 8), x3, 8);
    let x141: BytePoly_9 = bigint_nondet_quot!(ctx, x140, x3, 9);
    eqz(
        ctx,
        &bigint_sub!(x140, bigint_mul!(x141, x3, 13), 13),
        73156,
        4,
    )?;
    let x142: BytePoly_8 = bigint_mul!(x139, x139, 8);
    let x143: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x142, x96, 8), x3, 8), x126, 8),
        x3,
        8
    );
    let x144: BytePoly_9 = bigint_nondet_quot!(ctx, x143, x3, 9);
    let x145: BytePoly_4 = bigint_nondet_rem!(ctx, x143, x3, 4);
    let x146: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x3,
                bigint_add!(
                    bigint_mul!(x139, x145, 8),
                    bigint_add!(bigint_sub!(x98, bigint_mul!(x139, x96, 8), 8), x3, 8),
                    8
                ),
                8
            ),
            x3,
            8
        ),
        x3,
        8
    );
    let x147: BytePoly_9 = bigint_nondet_quot!(ctx, x146, x3, 9);
    let x148: BytePoly_4 = bigint_nondet_rem!(ctx, x146, x3, 4);
    let x149: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x142, bigint_mul!(x144, x3, 13), 13), x96, 13),
                    x126,
                    13
                ),
                x3,
                13
            ),
            x3,
            13
        ),
        x145,
        13
    );
    eqz(ctx, &x149, 73156, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x147, x3, 13), x148, 13),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x139, bigint_sub!(x96, x145, 4), 8), x98, 8),
                    x3,
                    8
                ),
                x3,
                8
            ),
            13
        ),
        73156,
        4,
    )?;
    let x150: BytePoly_5 = bigint_add!(bigint_mul!(x145, x133, 5), bigint_mul!(x96, x135, 5), 5);
    let x151: BytePoly_5 = bigint_add!(bigint_mul!(x148, x133, 5), bigint_mul!(x98, x135, 5), 5);
    let x152: BytePoly_6 = bigint_nondet_quot!(ctx, x150, x3, 6);
    let x153: BytePoly_4 = bigint_nondet_rem!(ctx, x150, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x152, x3, 10), x153, 10), x150, 10),
        48771,
        4,
    )?;
    let x154: BytePoly_6 = bigint_nondet_quot!(ctx, x151, x3, 6);
    let x155: BytePoly_4 = bigint_nondet_rem!(ctx, x151, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x154, x3, 10), x155, 10), x151, 10),
        48771,
        4,
    )?;
    let x156: BytePoly_8 = bigint_mul!(x126, x126, 8);
    let x157: BytePoly_9 = bigint_nondet_quot!(ctx, x156, x3, 9);
    let x158: BytePoly_4 = bigint_nondet_rem!(ctx, x156, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x157, x3, 13), x158, 13), x156, 13),
        73156,
        4,
    )?;
    let x159: BytePoly_5 = bigint_add!(bigint_mul!(x158, x0, 5), x2, 5);
    let x160: BytePoly_6 = bigint_nondet_quot!(ctx, x159, x3, 6);
    let x161: BytePoly_4 = bigint_nondet_rem!(ctx, x159, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x160, x3, 10), x161, 10), x159, 10),
        48771,
        4,
    )?;
    let x162: BytePoly_4 = bigint_add!(x132, x132, 4);
    let x163: BytePoly_4 = bigint_nondet_quot!(ctx, x162, x3, 4);
    let x164: BytePoly_4 = bigint_nondet_rem!(ctx, x162, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x163, x3, 8), x164, 8), x162, 8),
        32515,
        2,
    )?;
    let x165: BytePoly_4 = bigint_nondet_inv!(ctx, x164, x3, 4);
    let x166: BytePoly_8 = bigint_mul!(x164, x165, 8);
    let x167: BytePoly_9 = bigint_nondet_quot!(ctx, x166, x3, 9);
    let x168: BytePoly_4 = bigint_nondet_rem!(ctx, x166, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x167, x3, 13), x168, 13), x166, 13),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x168, x5, 4), 34, 1)?;
    let x169: BytePoly_8 = bigint_mul!(x161, x165, 8);
    let x170: BytePoly_9 = bigint_nondet_quot!(ctx, x169, x3, 9);
    let x171: BytePoly_4 = bigint_nondet_rem!(ctx, x169, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x170, x3, 13), x171, 13), x169, 13),
        73156,
        4,
    )?;
    let x172: BytePoly_8 = bigint_mul!(x171, x126, 8);
    let x173: BytePoly_9 = bigint_nondet_quot!(ctx, x172, x3, 9);
    let x174: BytePoly_4 = bigint_nondet_rem!(ctx, x172, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x173, x3, 13), x174, 13), x172, 13),
        73156,
        4,
    )?;
    let x175: BytePoly_4 = bigint_add!(bigint_sub!(x132, x174, 4), x3, 4);
    let x176: BytePoly_4 = bigint_nondet_quot!(ctx, x175, x3, 4);
    let x177: BytePoly_4 = bigint_nondet_rem!(ctx, x175, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x176, x3, 8), x177, 8), x175, 8),
        32515,
        2,
    )?;
    let x178: BytePoly_8 = bigint_mul!(x171, x171, 8);
    let x179: BytePoly_9 = bigint_nondet_quot!(ctx, x178, x3, 9);
    let x180: BytePoly_4 = bigint_nondet_rem!(ctx, x178, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x179, x3, 13), x180, 13), x178, 13),
        73156,
        4,
    )?;
    let x181: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x180, x126, 4), x3, 4), x126, 4),
        x3,
        4
    );
    let x182: BytePoly_4 = bigint_nondet_quot!(ctx, x181, x3, 4);
    let x183: BytePoly_4 = bigint_nondet_rem!(ctx, x181, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x182, x3, 8), x183, 8), x181, 8),
        32515,
        2,
    )?;
    let x184: BytePoly_8 = bigint_mul!(x171, x183, 8);
    let x185: BytePoly_9 = bigint_nondet_quot!(ctx, x184, x3, 9);
    let x186: BytePoly_4 = bigint_nondet_rem!(ctx, x184, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x185, x3, 13), x186, 13), x184, 13),
        73156,
        4,
    )?;
    let x187: BytePoly_4 = bigint_add!(bigint_sub!(x3, bigint_add!(x186, x177, 4), 4), x3, 4);
    let x188: BytePoly_4 = bigint_nondet_quot!(ctx, x187, x3, 4);
    let x189: BytePoly_4 = bigint_nondet_rem!(ctx, x187, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x188, x3, 8), x189, 8), x187, 8),
        32515,
        2,
    )?;
    let x190: BytePoly_1 = bigint_nondet_rem!(ctx, x134, x4, 1);
    let x191: BytePoly_4 = bigint_nondet_quot!(ctx, x134, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x191, x4, 5), x190, 5), x134, 5),
        32515,
        2,
    )?;
    let x192: BytePoly_1 = bigint_sub!(x5, x190, 1);
    eqz(ctx, &bigint_mul!(x190, x192, 2), 8131, 2)?;
    let x193: BytePoly_4 = bigint_add!(bigint_sub!(x189, x155, 4), x3, 4);
    let x194: BytePoly_4 = bigint_add!(bigint_sub!(x183, x153, 4), x3, 4);
    let x195: BytePoly_4 = bigint_nondet_inv!(ctx, x194, x3, 4);
    let x196: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x193, x195, 8), x3, 4);
    let x197: BytePoly_8 = bigint_add!(bigint_sub!(bigint_mul!(x196, x194, 8), x193, 8), x3, 8);
    let x198: BytePoly_9 = bigint_nondet_quot!(ctx, x197, x3, 9);
    eqz(
        ctx,
        &bigint_sub!(x197, bigint_mul!(x198, x3, 13), 13),
        73156,
        4,
    )?;
    let x199: BytePoly_8 = bigint_mul!(x196, x196, 8);
    let x200: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x199, x153, 8), x3, 8), x183, 8),
        x3,
        8
    );
    let x201: BytePoly_9 = bigint_nondet_quot!(ctx, x200, x3, 9);
    let x202: BytePoly_4 = bigint_nondet_rem!(ctx, x200, x3, 4);
    let x203: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x3,
                bigint_add!(
                    bigint_mul!(x196, x202, 8),
                    bigint_add!(bigint_sub!(x155, bigint_mul!(x196, x153, 8), 8), x3, 8),
                    8
                ),
                8
            ),
            x3,
            8
        ),
        x3,
        8
    );
    let x204: BytePoly_9 = bigint_nondet_quot!(ctx, x203, x3, 9);
    let x205: BytePoly_4 = bigint_nondet_rem!(ctx, x203, x3, 4);
    let x206: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x199, bigint_mul!(x201, x3, 13), 13), x153, 13),
                    x183,
                    13
                ),
                x3,
                13
            ),
            x3,
            13
        ),
        x202,
        13
    );
    eqz(ctx, &x206, 73156, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x204, x3, 13), x205, 13),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x196, bigint_sub!(x153, x202, 4), 8), x155, 8),
                    x3,
                    8
                ),
                x3,
                8
            ),
            13
        ),
        73156,
        4,
    )?;
    let x207: BytePoly_5 = bigint_add!(bigint_mul!(x202, x190, 5), bigint_mul!(x153, x192, 5), 5);
    let x208: BytePoly_5 = bigint_add!(bigint_mul!(x205, x190, 5), bigint_mul!(x155, x192, 5), 5);
    let x209: BytePoly_6 = bigint_nondet_quot!(ctx, x207, x3, 6);
    let x210: BytePoly_4 = bigint_nondet_rem!(ctx, x207, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x209, x3, 10), x210, 10), x207, 10),
        48771,
        4,
    )?;
    let x211: BytePoly_6 = bigint_nondet_quot!(ctx, x208, x3, 6);
    let x212: BytePoly_4 = bigint_nondet_rem!(ctx, x208, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x211, x3, 10), x212, 10), x208, 10),
        48771,
        4,
    )?;
    let x213: BytePoly_8 = bigint_mul!(x183, x183, 8);
    let x214: BytePoly_9 = bigint_nondet_quot!(ctx, x213, x3, 9);
    let x215: BytePoly_4 = bigint_nondet_rem!(ctx, x213, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x214, x3, 13), x215, 13), x213, 13),
        73156,
        4,
    )?;
    let x216: BytePoly_5 = bigint_add!(bigint_mul!(x215, x0, 5), x2, 5);
    let x217: BytePoly_6 = bigint_nondet_quot!(ctx, x216, x3, 6);
    let x218: BytePoly_4 = bigint_nondet_rem!(ctx, x216, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x217, x3, 10), x218, 10), x216, 10),
        48771,
        4,
    )?;
    let x219: BytePoly_4 = bigint_add!(x189, x189, 4);
    let x220: BytePoly_4 = bigint_nondet_quot!(ctx, x219, x3, 4);
    let x221: BytePoly_4 = bigint_nondet_rem!(ctx, x219, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x220, x3, 8), x221, 8), x219, 8),
        32515,
        2,
    )?;
    let x222: BytePoly_4 = bigint_nondet_inv!(ctx, x221, x3, 4);
    let x223: BytePoly_8 = bigint_mul!(x221, x222, 8);
    let x224: BytePoly_9 = bigint_nondet_quot!(ctx, x223, x3, 9);
    let x225: BytePoly_4 = bigint_nondet_rem!(ctx, x223, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x224, x3, 13), x225, 13), x223, 13),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x225, x5, 4), 34, 1)?;
    let x226: BytePoly_8 = bigint_mul!(x218, x222, 8);
    let x227: BytePoly_9 = bigint_nondet_quot!(ctx, x226, x3, 9);
    let x228: BytePoly_4 = bigint_nondet_rem!(ctx, x226, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x227, x3, 13), x228, 13), x226, 13),
        73156,
        4,
    )?;
    let x229: BytePoly_8 = bigint_mul!(x228, x183, 8);
    let x230: BytePoly_9 = bigint_nondet_quot!(ctx, x229, x3, 9);
    let x231: BytePoly_4 = bigint_nondet_rem!(ctx, x229, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x230, x3, 13), x231, 13), x229, 13),
        73156,
        4,
    )?;
    let x232: BytePoly_4 = bigint_add!(bigint_sub!(x189, x231, 4), x3, 4);
    let x233: BytePoly_4 = bigint_nondet_quot!(ctx, x232, x3, 4);
    let x234: BytePoly_4 = bigint_nondet_rem!(ctx, x232, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x233, x3, 8), x234, 8), x232, 8),
        32515,
        2,
    )?;
    let x235: BytePoly_8 = bigint_mul!(x228, x228, 8);
    let x236: BytePoly_9 = bigint_nondet_quot!(ctx, x235, x3, 9);
    let x237: BytePoly_4 = bigint_nondet_rem!(ctx, x235, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x236, x3, 13), x237, 13), x235, 13),
        73156,
        4,
    )?;
    let x238: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x237, x183, 4), x3, 4), x183, 4),
        x3,
        4
    );
    let x239: BytePoly_4 = bigint_nondet_quot!(ctx, x238, x3, 4);
    let x240: BytePoly_4 = bigint_nondet_rem!(ctx, x238, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x239, x3, 8), x240, 8), x238, 8),
        32515,
        2,
    )?;
    let x241: BytePoly_8 = bigint_mul!(x228, x240, 8);
    let x242: BytePoly_9 = bigint_nondet_quot!(ctx, x241, x3, 9);
    let x243: BytePoly_4 = bigint_nondet_rem!(ctx, x241, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x242, x3, 13), x243, 13), x241, 13),
        73156,
        4,
    )?;
    let x244: BytePoly_4 = bigint_add!(bigint_sub!(x3, bigint_add!(x243, x234, 4), 4), x3, 4);
    let x245: BytePoly_4 = bigint_nondet_quot!(ctx, x244, x3, 4);
    let x246: BytePoly_4 = bigint_nondet_rem!(ctx, x244, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x245, x3, 8), x246, 8), x244, 8),
        32515,
        2,
    )?;
    let x247: BytePoly_1 = bigint_nondet_rem!(ctx, x191, x4, 1);
    let x248: BytePoly_4 = bigint_nondet_quot!(ctx, x191, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x248, x4, 5), x247, 5), x191, 5),
        32515,
        2,
    )?;
    let x249: BytePoly_1 = bigint_sub!(x5, x247, 1);
    eqz(ctx, &bigint_mul!(x247, x249, 2), 8131, 2)?;
    let x250: BytePoly_4 = bigint_add!(bigint_sub!(x246, x212, 4), x3, 4);
    let x251: BytePoly_4 = bigint_add!(bigint_sub!(x240, x210, 4), x3, 4);
    let x252: BytePoly_4 = bigint_nondet_inv!(ctx, x251, x3, 4);
    let x253: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x250, x252, 8), x3, 4);
    let x254: BytePoly_8 = bigint_add!(bigint_sub!(bigint_mul!(x253, x251, 8), x250, 8), x3, 8);
    let x255: BytePoly_9 = bigint_nondet_quot!(ctx, x254, x3, 9);
    eqz(
        ctx,
        &bigint_sub!(x254, bigint_mul!(x255, x3, 13), 13),
        73156,
        4,
    )?;
    let x256: BytePoly_8 = bigint_mul!(x253, x253, 8);
    let x257: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x256, x210, 8), x3, 8), x240, 8),
        x3,
        8
    );
    let x258: BytePoly_9 = bigint_nondet_quot!(ctx, x257, x3, 9);
    let x259: BytePoly_4 = bigint_nondet_rem!(ctx, x257, x3, 4);
    let x260: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x3,
                bigint_add!(
                    bigint_mul!(x253, x259, 8),
                    bigint_add!(bigint_sub!(x212, bigint_mul!(x253, x210, 8), 8), x3, 8),
                    8
                ),
                8
            ),
            x3,
            8
        ),
        x3,
        8
    );
    let x261: BytePoly_9 = bigint_nondet_quot!(ctx, x260, x3, 9);
    let x262: BytePoly_4 = bigint_nondet_rem!(ctx, x260, x3, 4);
    let x263: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x256, bigint_mul!(x258, x3, 13), 13), x210, 13),
                    x240,
                    13
                ),
                x3,
                13
            ),
            x3,
            13
        ),
        x259,
        13
    );
    eqz(ctx, &x263, 73156, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x261, x3, 13), x262, 13),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x253, bigint_sub!(x210, x259, 4), 8), x212, 8),
                    x3,
                    8
                ),
                x3,
                8
            ),
            13
        ),
        73156,
        4,
    )?;
    let x264: BytePoly_5 = bigint_add!(bigint_mul!(x259, x247, 5), bigint_mul!(x210, x249, 5), 5);
    let x265: BytePoly_5 = bigint_add!(bigint_mul!(x262, x247, 5), bigint_mul!(x212, x249, 5), 5);
    let x266: BytePoly_6 = bigint_nondet_quot!(ctx, x264, x3, 6);
    let x267: BytePoly_4 = bigint_nondet_rem!(ctx, x264, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x266, x3, 10), x267, 10), x264, 10),
        48771,
        4,
    )?;
    let x268: BytePoly_6 = bigint_nondet_quot!(ctx, x265, x3, 6);
    let x269: BytePoly_4 = bigint_nondet_rem!(ctx, x265, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x268, x3, 10), x269, 10), x265, 10),
        48771,
        4,
    )?;
    let x270: BytePoly_8 = bigint_mul!(x240, x240, 8);
    let x271: BytePoly_9 = bigint_nondet_quot!(ctx, x270, x3, 9);
    let x272: BytePoly_4 = bigint_nondet_rem!(ctx, x270, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x271, x3, 13), x272, 13), x270, 13),
        73156,
        4,
    )?;
    let x273: BytePoly_5 = bigint_add!(bigint_mul!(x272, x0, 5), x2, 5);
    let x274: BytePoly_6 = bigint_nondet_quot!(ctx, x273, x3, 6);
    let x275: BytePoly_4 = bigint_nondet_rem!(ctx, x273, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x274, x3, 10), x275, 10), x273, 10),
        48771,
        4,
    )?;
    let x276: BytePoly_4 = bigint_add!(x246, x246, 4);
    let x277: BytePoly_4 = bigint_nondet_quot!(ctx, x276, x3, 4);
    let x278: BytePoly_4 = bigint_nondet_rem!(ctx, x276, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x277, x3, 8), x278, 8), x276, 8),
        32515,
        2,
    )?;
    let x279: BytePoly_4 = bigint_nondet_inv!(ctx, x278, x3, 4);
    let x280: BytePoly_8 = bigint_mul!(x278, x279, 8);
    let x281: BytePoly_9 = bigint_nondet_quot!(ctx, x280, x3, 9);
    let x282: BytePoly_4 = bigint_nondet_rem!(ctx, x280, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x281, x3, 13), x282, 13), x280, 13),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x282, x5, 4), 34, 1)?;
    let x283: BytePoly_8 = bigint_mul!(x275, x279, 8);
    let x284: BytePoly_9 = bigint_nondet_quot!(ctx, x283, x3, 9);
    let x285: BytePoly_4 = bigint_nondet_rem!(ctx, x283, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x284, x3, 13), x285, 13), x283, 13),
        73156,
        4,
    )?;
    let x286: BytePoly_8 = bigint_mul!(x285, x240, 8);
    let x287: BytePoly_9 = bigint_nondet_quot!(ctx, x286, x3, 9);
    let x288: BytePoly_4 = bigint_nondet_rem!(ctx, x286, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x287, x3, 13), x288, 13), x286, 13),
        73156,
        4,
    )?;
    let x289: BytePoly_4 = bigint_add!(bigint_sub!(x246, x288, 4), x3, 4);
    let x290: BytePoly_4 = bigint_nondet_quot!(ctx, x289, x3, 4);
    let x291: BytePoly_4 = bigint_nondet_rem!(ctx, x289, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x290, x3, 8), x291, 8), x289, 8),
        32515,
        2,
    )?;
    let x292: BytePoly_8 = bigint_mul!(x285, x285, 8);
    let x293: BytePoly_9 = bigint_nondet_quot!(ctx, x292, x3, 9);
    let x294: BytePoly_4 = bigint_nondet_rem!(ctx, x292, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x293, x3, 13), x294, 13), x292, 13),
        73156,
        4,
    )?;
    let x295: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x294, x240, 4), x3, 4), x240, 4),
        x3,
        4
    );
    let x296: BytePoly_4 = bigint_nondet_quot!(ctx, x295, x3, 4);
    let x297: BytePoly_4 = bigint_nondet_rem!(ctx, x295, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x296, x3, 8), x297, 8), x295, 8),
        32515,
        2,
    )?;
    let x298: BytePoly_8 = bigint_mul!(x285, x297, 8);
    let x299: BytePoly_9 = bigint_nondet_quot!(ctx, x298, x3, 9);
    let x300: BytePoly_4 = bigint_nondet_rem!(ctx, x298, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x299, x3, 13), x300, 13), x298, 13),
        73156,
        4,
    )?;
    let x301: BytePoly_4 = bigint_add!(bigint_sub!(x3, bigint_add!(x300, x291, 4), 4), x3, 4);
    let x302: BytePoly_4 = bigint_nondet_quot!(ctx, x301, x3, 4);
    let x303: BytePoly_4 = bigint_nondet_rem!(ctx, x301, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x302, x3, 8), x303, 8), x301, 8),
        32515,
        2,
    )?;
    let x304: BytePoly_1 = bigint_nondet_rem!(ctx, x248, x4, 1);
    let x305: BytePoly_4 = bigint_nondet_quot!(ctx, x248, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x305, x4, 5), x304, 5), x248, 5),
        32515,
        2,
    )?;
    let x306: BytePoly_1 = bigint_sub!(x5, x304, 1);
    eqz(ctx, &bigint_mul!(x304, x306, 2), 8131, 2)?;
    let x307: BytePoly_4 = bigint_add!(bigint_sub!(x303, x269, 4), x3, 4);
    let x308: BytePoly_4 = bigint_add!(bigint_sub!(x297, x267, 4), x3, 4);
    let x309: BytePoly_4 = bigint_nondet_inv!(ctx, x308, x3, 4);
    let x310: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x307, x309, 8), x3, 4);
    let x311: BytePoly_8 = bigint_add!(bigint_sub!(bigint_mul!(x310, x308, 8), x307, 8), x3, 8);
    let x312: BytePoly_9 = bigint_nondet_quot!(ctx, x311, x3, 9);
    eqz(
        ctx,
        &bigint_sub!(x311, bigint_mul!(x312, x3, 13), 13),
        73156,
        4,
    )?;
    let x313: BytePoly_8 = bigint_mul!(x310, x310, 8);
    let x314: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x313, x267, 8), x3, 8), x297, 8),
        x3,
        8
    );
    let x315: BytePoly_9 = bigint_nondet_quot!(ctx, x314, x3, 9);
    let x316: BytePoly_4 = bigint_nondet_rem!(ctx, x314, x3, 4);
    let x317: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x3,
                bigint_add!(
                    bigint_mul!(x310, x316, 8),
                    bigint_add!(bigint_sub!(x269, bigint_mul!(x310, x267, 8), 8), x3, 8),
                    8
                ),
                8
            ),
            x3,
            8
        ),
        x3,
        8
    );
    let x318: BytePoly_9 = bigint_nondet_quot!(ctx, x317, x3, 9);
    let x319: BytePoly_4 = bigint_nondet_rem!(ctx, x317, x3, 4);
    let x320: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x313, bigint_mul!(x315, x3, 13), 13), x267, 13),
                    x297,
                    13
                ),
                x3,
                13
            ),
            x3,
            13
        ),
        x316,
        13
    );
    eqz(ctx, &x320, 73156, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x318, x3, 13), x319, 13),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x310, bigint_sub!(x267, x316, 4), 8), x269, 8),
                    x3,
                    8
                ),
                x3,
                8
            ),
            13
        ),
        73156,
        4,
    )?;
    let x321: BytePoly_5 = bigint_add!(bigint_mul!(x316, x304, 5), bigint_mul!(x267, x306, 5), 5);
    let x322: BytePoly_5 = bigint_add!(bigint_mul!(x319, x304, 5), bigint_mul!(x269, x306, 5), 5);
    let x323: BytePoly_6 = bigint_nondet_quot!(ctx, x321, x3, 6);
    let x324: BytePoly_4 = bigint_nondet_rem!(ctx, x321, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x323, x3, 10), x324, 10), x321, 10),
        48771,
        4,
    )?;
    let x325: BytePoly_6 = bigint_nondet_quot!(ctx, x322, x3, 6);
    let x326: BytePoly_4 = bigint_nondet_rem!(ctx, x322, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x325, x3, 10), x326, 10), x322, 10),
        48771,
        4,
    )?;
    let x327: BytePoly_8 = bigint_mul!(x297, x297, 8);
    let x328: BytePoly_9 = bigint_nondet_quot!(ctx, x327, x3, 9);
    let x329: BytePoly_4 = bigint_nondet_rem!(ctx, x327, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x328, x3, 13), x329, 13), x327, 13),
        73156,
        4,
    )?;
    let x330: BytePoly_5 = bigint_add!(bigint_mul!(x329, x0, 5), x2, 5);
    let x331: BytePoly_6 = bigint_nondet_quot!(ctx, x330, x3, 6);
    let x332: BytePoly_4 = bigint_nondet_rem!(ctx, x330, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x331, x3, 10), x332, 10), x330, 10),
        48771,
        4,
    )?;
    let x333: BytePoly_4 = bigint_add!(x303, x303, 4);
    let x334: BytePoly_4 = bigint_nondet_quot!(ctx, x333, x3, 4);
    let x335: BytePoly_4 = bigint_nondet_rem!(ctx, x333, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x334, x3, 8), x335, 8), x333, 8),
        32515,
        2,
    )?;
    let x336: BytePoly_4 = bigint_nondet_inv!(ctx, x335, x3, 4);
    let x337: BytePoly_8 = bigint_mul!(x335, x336, 8);
    let x338: BytePoly_9 = bigint_nondet_quot!(ctx, x337, x3, 9);
    let x339: BytePoly_4 = bigint_nondet_rem!(ctx, x337, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x338, x3, 13), x339, 13), x337, 13),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x339, x5, 4), 34, 1)?;
    let x340: BytePoly_8 = bigint_mul!(x332, x336, 8);
    let x341: BytePoly_9 = bigint_nondet_quot!(ctx, x340, x3, 9);
    let x342: BytePoly_4 = bigint_nondet_rem!(ctx, x340, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x341, x3, 13), x342, 13), x340, 13),
        73156,
        4,
    )?;
    let x343: BytePoly_8 = bigint_mul!(x342, x297, 8);
    let x344: BytePoly_9 = bigint_nondet_quot!(ctx, x343, x3, 9);
    let x345: BytePoly_4 = bigint_nondet_rem!(ctx, x343, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x344, x3, 13), x345, 13), x343, 13),
        73156,
        4,
    )?;
    let x346: BytePoly_4 = bigint_add!(bigint_sub!(x303, x345, 4), x3, 4);
    let x347: BytePoly_4 = bigint_nondet_quot!(ctx, x346, x3, 4);
    let x348: BytePoly_4 = bigint_nondet_rem!(ctx, x346, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x347, x3, 8), x348, 8), x346, 8),
        32515,
        2,
    )?;
    let x349: BytePoly_8 = bigint_mul!(x342, x342, 8);
    let x350: BytePoly_9 = bigint_nondet_quot!(ctx, x349, x3, 9);
    let x351: BytePoly_4 = bigint_nondet_rem!(ctx, x349, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x350, x3, 13), x351, 13), x349, 13),
        73156,
        4,
    )?;
    let x352: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x351, x297, 4), x3, 4), x297, 4),
        x3,
        4
    );
    let x353: BytePoly_4 = bigint_nondet_quot!(ctx, x352, x3, 4);
    let x354: BytePoly_4 = bigint_nondet_rem!(ctx, x352, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x353, x3, 8), x354, 8), x352, 8),
        32515,
        2,
    )?;
    let x355: BytePoly_8 = bigint_mul!(x342, x354, 8);
    let x356: BytePoly_9 = bigint_nondet_quot!(ctx, x355, x3, 9);
    let x357: BytePoly_4 = bigint_nondet_rem!(ctx, x355, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x356, x3, 13), x357, 13), x355, 13),
        73156,
        4,
    )?;
    let x358: BytePoly_4 = bigint_add!(bigint_sub!(x3, bigint_add!(x357, x348, 4), 4), x3, 4);
    let x359: BytePoly_4 = bigint_nondet_quot!(ctx, x358, x3, 4);
    let x360: BytePoly_4 = bigint_nondet_rem!(ctx, x358, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x359, x3, 8), x360, 8), x358, 8),
        32515,
        2,
    )?;
    let x361: BytePoly_1 = bigint_nondet_rem!(ctx, x305, x4, 1);
    let x362: BytePoly_4 = bigint_nondet_quot!(ctx, x305, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x362, x4, 5), x361, 5), x305, 5),
        32515,
        2,
    )?;
    let x363: BytePoly_1 = bigint_sub!(x5, x361, 1);
    eqz(ctx, &bigint_mul!(x361, x363, 2), 8131, 2)?;
    let x364: BytePoly_4 = bigint_add!(bigint_sub!(x360, x326, 4), x3, 4);
    let x365: BytePoly_4 = bigint_add!(bigint_sub!(x354, x324, 4), x3, 4);
    let x366: BytePoly_4 = bigint_nondet_inv!(ctx, x365, x3, 4);
    let x367: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x364, x366, 8), x3, 4);
    let x368: BytePoly_8 = bigint_add!(bigint_sub!(bigint_mul!(x367, x365, 8), x364, 8), x3, 8);
    let x369: BytePoly_9 = bigint_nondet_quot!(ctx, x368, x3, 9);
    eqz(
        ctx,
        &bigint_sub!(x368, bigint_mul!(x369, x3, 13), 13),
        73156,
        4,
    )?;
    let x370: BytePoly_8 = bigint_mul!(x367, x367, 8);
    let x371: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x370, x324, 8), x3, 8), x354, 8),
        x3,
        8
    );
    let x372: BytePoly_9 = bigint_nondet_quot!(ctx, x371, x3, 9);
    let x373: BytePoly_4 = bigint_nondet_rem!(ctx, x371, x3, 4);
    let x374: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x3,
                bigint_add!(
                    bigint_mul!(x367, x373, 8),
                    bigint_add!(bigint_sub!(x326, bigint_mul!(x367, x324, 8), 8), x3, 8),
                    8
                ),
                8
            ),
            x3,
            8
        ),
        x3,
        8
    );
    let x375: BytePoly_9 = bigint_nondet_quot!(ctx, x374, x3, 9);
    let x376: BytePoly_4 = bigint_nondet_rem!(ctx, x374, x3, 4);
    let x377: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x370, bigint_mul!(x372, x3, 13), 13), x324, 13),
                    x354,
                    13
                ),
                x3,
                13
            ),
            x3,
            13
        ),
        x373,
        13
    );
    eqz(ctx, &x377, 73156, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x375, x3, 13), x376, 13),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x367, bigint_sub!(x324, x373, 4), 8), x326, 8),
                    x3,
                    8
                ),
                x3,
                8
            ),
            13
        ),
        73156,
        4,
    )?;
    let x378: BytePoly_5 = bigint_add!(bigint_mul!(x373, x361, 5), bigint_mul!(x324, x363, 5), 5);
    let x379: BytePoly_5 = bigint_add!(bigint_mul!(x376, x361, 5), bigint_mul!(x326, x363, 5), 5);
    let x380: BytePoly_6 = bigint_nondet_quot!(ctx, x378, x3, 6);
    let x381: BytePoly_4 = bigint_nondet_rem!(ctx, x378, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x380, x3, 10), x381, 10), x378, 10),
        48771,
        4,
    )?;
    let x382: BytePoly_6 = bigint_nondet_quot!(ctx, x379, x3, 6);
    let x383: BytePoly_4 = bigint_nondet_rem!(ctx, x379, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x382, x3, 10), x383, 10), x379, 10),
        48771,
        4,
    )?;
    let x384: BytePoly_8 = bigint_mul!(x354, x354, 8);
    let x385: BytePoly_9 = bigint_nondet_quot!(ctx, x384, x3, 9);
    let x386: BytePoly_4 = bigint_nondet_rem!(ctx, x384, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x385, x3, 13), x386, 13), x384, 13),
        73156,
        4,
    )?;
    let x387: BytePoly_5 = bigint_add!(bigint_mul!(x386, x0, 5), x2, 5);
    let x388: BytePoly_6 = bigint_nondet_quot!(ctx, x387, x3, 6);
    let x389: BytePoly_4 = bigint_nondet_rem!(ctx, x387, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x388, x3, 10), x389, 10), x387, 10),
        48771,
        4,
    )?;
    let x390: BytePoly_4 = bigint_add!(x360, x360, 4);
    let x391: BytePoly_4 = bigint_nondet_quot!(ctx, x390, x3, 4);
    let x392: BytePoly_4 = bigint_nondet_rem!(ctx, x390, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x391, x3, 8), x392, 8), x390, 8),
        32515,
        2,
    )?;
    let x393: BytePoly_4 = bigint_nondet_inv!(ctx, x392, x3, 4);
    let x394: BytePoly_8 = bigint_mul!(x392, x393, 8);
    let x395: BytePoly_9 = bigint_nondet_quot!(ctx, x394, x3, 9);
    let x396: BytePoly_4 = bigint_nondet_rem!(ctx, x394, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x395, x3, 13), x396, 13), x394, 13),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x396, x5, 4), 34, 1)?;
    let x397: BytePoly_8 = bigint_mul!(x389, x393, 8);
    let x398: BytePoly_9 = bigint_nondet_quot!(ctx, x397, x3, 9);
    let x399: BytePoly_4 = bigint_nondet_rem!(ctx, x397, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x398, x3, 13), x399, 13), x397, 13),
        73156,
        4,
    )?;
    let x400: BytePoly_8 = bigint_mul!(x399, x354, 8);
    let x401: BytePoly_9 = bigint_nondet_quot!(ctx, x400, x3, 9);
    let x402: BytePoly_4 = bigint_nondet_rem!(ctx, x400, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x401, x3, 13), x402, 13), x400, 13),
        73156,
        4,
    )?;
    let x403: BytePoly_4 = bigint_add!(bigint_sub!(x360, x402, 4), x3, 4);
    let x404: BytePoly_4 = bigint_nondet_quot!(ctx, x403, x3, 4);
    let x405: BytePoly_4 = bigint_nondet_rem!(ctx, x403, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x404, x3, 8), x405, 8), x403, 8),
        32515,
        2,
    )?;
    let x406: BytePoly_8 = bigint_mul!(x399, x399, 8);
    let x407: BytePoly_9 = bigint_nondet_quot!(ctx, x406, x3, 9);
    let x408: BytePoly_4 = bigint_nondet_rem!(ctx, x406, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x407, x3, 13), x408, 13), x406, 13),
        73156,
        4,
    )?;
    let x409: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x408, x354, 4), x3, 4), x354, 4),
        x3,
        4
    );
    let x410: BytePoly_4 = bigint_nondet_quot!(ctx, x409, x3, 4);
    let x411: BytePoly_4 = bigint_nondet_rem!(ctx, x409, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x410, x3, 8), x411, 8), x409, 8),
        32515,
        2,
    )?;
    let x412: BytePoly_8 = bigint_mul!(x399, x411, 8);
    let x413: BytePoly_9 = bigint_nondet_quot!(ctx, x412, x3, 9);
    let x414: BytePoly_4 = bigint_nondet_rem!(ctx, x412, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x413, x3, 13), x414, 13), x412, 13),
        73156,
        4,
    )?;
    let x415: BytePoly_4 = bigint_add!(bigint_sub!(x3, bigint_add!(x414, x405, 4), 4), x3, 4);
    let x416: BytePoly_4 = bigint_nondet_quot!(ctx, x415, x3, 4);
    let x417: BytePoly_4 = bigint_nondet_rem!(ctx, x415, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x416, x3, 8), x417, 8), x415, 8),
        32515,
        2,
    )?;
    let x418: BytePoly_1 = bigint_nondet_rem!(ctx, x362, x4, 1);
    let x419: BytePoly_4 = bigint_nondet_quot!(ctx, x362, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x419, x4, 5), x418, 5), x362, 5),
        32515,
        2,
    )?;
    let x420: BytePoly_1 = bigint_sub!(x5, x418, 1);
    eqz(ctx, &bigint_mul!(x418, x420, 2), 8131, 2)?;
    let x421: BytePoly_4 = bigint_add!(bigint_sub!(x417, x383, 4), x3, 4);
    let x422: BytePoly_4 = bigint_add!(bigint_sub!(x411, x381, 4), x3, 4);
    let x423: BytePoly_4 = bigint_nondet_inv!(ctx, x422, x3, 4);
    let x424: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x421, x423, 8), x3, 4);
    let x425: BytePoly_8 = bigint_add!(bigint_sub!(bigint_mul!(x424, x422, 8), x421, 8), x3, 8);
    let x426: BytePoly_9 = bigint_nondet_quot!(ctx, x425, x3, 9);
    eqz(
        ctx,
        &bigint_sub!(x425, bigint_mul!(x426, x3, 13), 13),
        73156,
        4,
    )?;
    let x427: BytePoly_8 = bigint_mul!(x424, x424, 8);
    let x428: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x427, x381, 8), x3, 8), x411, 8),
        x3,
        8
    );
    let x429: BytePoly_9 = bigint_nondet_quot!(ctx, x428, x3, 9);
    let x430: BytePoly_4 = bigint_nondet_rem!(ctx, x428, x3, 4);
    let x431: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x3,
                bigint_add!(
                    bigint_mul!(x424, x430, 8),
                    bigint_add!(bigint_sub!(x383, bigint_mul!(x424, x381, 8), 8), x3, 8),
                    8
                ),
                8
            ),
            x3,
            8
        ),
        x3,
        8
    );
    let x432: BytePoly_9 = bigint_nondet_quot!(ctx, x431, x3, 9);
    let x433: BytePoly_4 = bigint_nondet_rem!(ctx, x431, x3, 4);
    let x434: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x427, bigint_mul!(x429, x3, 13), 13), x381, 13),
                    x411,
                    13
                ),
                x3,
                13
            ),
            x3,
            13
        ),
        x430,
        13
    );
    eqz(ctx, &x434, 73156, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x432, x3, 13), x433, 13),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x424, bigint_sub!(x381, x430, 4), 8), x383, 8),
                    x3,
                    8
                ),
                x3,
                8
            ),
            13
        ),
        73156,
        4,
    )?;
    let x435: BytePoly_5 = bigint_add!(bigint_mul!(x430, x418, 5), bigint_mul!(x381, x420, 5), 5);
    let x436: BytePoly_5 = bigint_add!(bigint_mul!(x433, x418, 5), bigint_mul!(x383, x420, 5), 5);
    let x437: BytePoly_6 = bigint_nondet_quot!(ctx, x435, x3, 6);
    let x438: BytePoly_4 = bigint_nondet_rem!(ctx, x435, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x437, x3, 10), x438, 10), x435, 10),
        48771,
        4,
    )?;
    let x439: BytePoly_6 = bigint_nondet_quot!(ctx, x436, x3, 6);
    let x440: BytePoly_4 = bigint_nondet_rem!(ctx, x436, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x439, x3, 10), x440, 10), x436, 10),
        48771,
        4,
    )?;
    let x441: BytePoly_8 = bigint_mul!(x411, x411, 8);
    let x442: BytePoly_9 = bigint_nondet_quot!(ctx, x441, x3, 9);
    let x443: BytePoly_4 = bigint_nondet_rem!(ctx, x441, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x442, x3, 13), x443, 13), x441, 13),
        73156,
        4,
    )?;
    let x444: BytePoly_5 = bigint_add!(bigint_mul!(x443, x0, 5), x2, 5);
    let x445: BytePoly_6 = bigint_nondet_quot!(ctx, x444, x3, 6);
    let x446: BytePoly_4 = bigint_nondet_rem!(ctx, x444, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x445, x3, 10), x446, 10), x444, 10),
        48771,
        4,
    )?;
    let x447: BytePoly_4 = bigint_add!(x417, x417, 4);
    let x448: BytePoly_4 = bigint_nondet_quot!(ctx, x447, x3, 4);
    let x449: BytePoly_4 = bigint_nondet_rem!(ctx, x447, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x448, x3, 8), x449, 8), x447, 8),
        32515,
        2,
    )?;
    let x450: BytePoly_4 = bigint_nondet_inv!(ctx, x449, x3, 4);
    let x451: BytePoly_8 = bigint_mul!(x449, x450, 8);
    let x452: BytePoly_9 = bigint_nondet_quot!(ctx, x451, x3, 9);
    let x453: BytePoly_4 = bigint_nondet_rem!(ctx, x451, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x452, x3, 13), x453, 13), x451, 13),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x453, x5, 4), 34, 1)?;
    let x454: BytePoly_8 = bigint_mul!(x446, x450, 8);
    let x455: BytePoly_9 = bigint_nondet_quot!(ctx, x454, x3, 9);
    let x456: BytePoly_4 = bigint_nondet_rem!(ctx, x454, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x455, x3, 13), x456, 13), x454, 13),
        73156,
        4,
    )?;
    let x457: BytePoly_8 = bigint_mul!(x456, x411, 8);
    let x458: BytePoly_9 = bigint_nondet_quot!(ctx, x457, x3, 9);
    let x459: BytePoly_4 = bigint_nondet_rem!(ctx, x457, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x458, x3, 13), x459, 13), x457, 13),
        73156,
        4,
    )?;
    let x460: BytePoly_4 = bigint_add!(bigint_sub!(x417, x459, 4), x3, 4);
    let x461: BytePoly_4 = bigint_nondet_quot!(ctx, x460, x3, 4);
    let x462: BytePoly_4 = bigint_nondet_rem!(ctx, x460, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x461, x3, 8), x462, 8), x460, 8),
        32515,
        2,
    )?;
    let x463: BytePoly_8 = bigint_mul!(x456, x456, 8);
    let x464: BytePoly_9 = bigint_nondet_quot!(ctx, x463, x3, 9);
    let x465: BytePoly_4 = bigint_nondet_rem!(ctx, x463, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x464, x3, 13), x465, 13), x463, 13),
        73156,
        4,
    )?;
    let x466: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x465, x411, 4), x3, 4), x411, 4),
        x3,
        4
    );
    let x467: BytePoly_4 = bigint_nondet_quot!(ctx, x466, x3, 4);
    let x468: BytePoly_4 = bigint_nondet_rem!(ctx, x466, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x467, x3, 8), x468, 8), x466, 8),
        32515,
        2,
    )?;
    let x469: BytePoly_8 = bigint_mul!(x456, x468, 8);
    let x470: BytePoly_9 = bigint_nondet_quot!(ctx, x469, x3, 9);
    let x471: BytePoly_4 = bigint_nondet_rem!(ctx, x469, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x470, x3, 13), x471, 13), x469, 13),
        73156,
        4,
    )?;
    let x472: BytePoly_4 = bigint_add!(bigint_sub!(x3, bigint_add!(x471, x462, 4), 4), x3, 4);
    let x473: BytePoly_4 = bigint_nondet_quot!(ctx, x472, x3, 4);
    let x474: BytePoly_4 = bigint_nondet_rem!(ctx, x472, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x473, x3, 8), x474, 8), x472, 8),
        32515,
        2,
    )?;
    let x475: BytePoly_1 = bigint_nondet_rem!(ctx, x419, x4, 1);
    let x476: BytePoly_4 = bigint_nondet_quot!(ctx, x419, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x476, x4, 5), x475, 5), x419, 5),
        32515,
        2,
    )?;
    let x477: BytePoly_1 = bigint_sub!(x5, x475, 1);
    eqz(ctx, &bigint_mul!(x475, x477, 2), 8131, 2)?;
    let x478: BytePoly_4 = bigint_add!(bigint_sub!(x474, x440, 4), x3, 4);
    let x479: BytePoly_4 = bigint_add!(bigint_sub!(x468, x438, 4), x3, 4);
    let x480: BytePoly_4 = bigint_nondet_inv!(ctx, x479, x3, 4);
    let x481: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x478, x480, 8), x3, 4);
    let x482: BytePoly_8 = bigint_add!(bigint_sub!(bigint_mul!(x481, x479, 8), x478, 8), x3, 8);
    let x483: BytePoly_9 = bigint_nondet_quot!(ctx, x482, x3, 9);
    eqz(
        ctx,
        &bigint_sub!(x482, bigint_mul!(x483, x3, 13), 13),
        73156,
        4,
    )?;
    let x484: BytePoly_8 = bigint_mul!(x481, x481, 8);
    let x485: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x484, x438, 8), x3, 8), x468, 8),
        x3,
        8
    );
    let x486: BytePoly_9 = bigint_nondet_quot!(ctx, x485, x3, 9);
    let x487: BytePoly_4 = bigint_nondet_rem!(ctx, x485, x3, 4);
    let x488: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x3,
                bigint_add!(
                    bigint_mul!(x481, x487, 8),
                    bigint_add!(bigint_sub!(x440, bigint_mul!(x481, x438, 8), 8), x3, 8),
                    8
                ),
                8
            ),
            x3,
            8
        ),
        x3,
        8
    );
    let x489: BytePoly_9 = bigint_nondet_quot!(ctx, x488, x3, 9);
    let x490: BytePoly_4 = bigint_nondet_rem!(ctx, x488, x3, 4);
    let x491: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x484, bigint_mul!(x486, x3, 13), 13), x438, 13),
                    x468,
                    13
                ),
                x3,
                13
            ),
            x3,
            13
        ),
        x487,
        13
    );
    eqz(ctx, &x491, 73156, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x489, x3, 13), x490, 13),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x481, bigint_sub!(x438, x487, 4), 8), x440, 8),
                    x3,
                    8
                ),
                x3,
                8
            ),
            13
        ),
        73156,
        4,
    )?;
    let x492: BytePoly_5 = bigint_add!(bigint_mul!(x487, x475, 5), bigint_mul!(x438, x477, 5), 5);
    let x493: BytePoly_5 = bigint_add!(bigint_mul!(x490, x475, 5), bigint_mul!(x440, x477, 5), 5);
    let x494: BytePoly_6 = bigint_nondet_quot!(ctx, x492, x3, 6);
    let x495: BytePoly_4 = bigint_nondet_rem!(ctx, x492, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x494, x3, 10), x495, 10), x492, 10),
        48771,
        4,
    )?;
    let x496: BytePoly_6 = bigint_nondet_quot!(ctx, x493, x3, 6);
    let x497: BytePoly_4 = bigint_nondet_rem!(ctx, x493, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x496, x3, 10), x497, 10), x493, 10),
        48771,
        4,
    )?;
    let x498: BytePoly_8 = bigint_mul!(x468, x468, 8);
    let x499: BytePoly_9 = bigint_nondet_quot!(ctx, x498, x3, 9);
    let x500: BytePoly_4 = bigint_nondet_rem!(ctx, x498, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x499, x3, 13), x500, 13), x498, 13),
        73156,
        4,
    )?;
    let x501: BytePoly_5 = bigint_add!(bigint_mul!(x500, x0, 5), x2, 5);
    let x502: BytePoly_6 = bigint_nondet_quot!(ctx, x501, x3, 6);
    let x503: BytePoly_4 = bigint_nondet_rem!(ctx, x501, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x502, x3, 10), x503, 10), x501, 10),
        48771,
        4,
    )?;
    let x504: BytePoly_4 = bigint_add!(x474, x474, 4);
    let x505: BytePoly_4 = bigint_nondet_quot!(ctx, x504, x3, 4);
    let x506: BytePoly_4 = bigint_nondet_rem!(ctx, x504, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x505, x3, 8), x506, 8), x504, 8),
        32515,
        2,
    )?;
    let x507: BytePoly_4 = bigint_nondet_inv!(ctx, x506, x3, 4);
    let x508: BytePoly_8 = bigint_mul!(x506, x507, 8);
    let x509: BytePoly_9 = bigint_nondet_quot!(ctx, x508, x3, 9);
    let x510: BytePoly_4 = bigint_nondet_rem!(ctx, x508, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x509, x3, 13), x510, 13), x508, 13),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x510, x5, 4), 34, 1)?;
    let x511: BytePoly_8 = bigint_mul!(x503, x507, 8);
    let x512: BytePoly_9 = bigint_nondet_quot!(ctx, x511, x3, 9);
    let x513: BytePoly_4 = bigint_nondet_rem!(ctx, x511, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x512, x3, 13), x513, 13), x511, 13),
        73156,
        4,
    )?;
    let x514: BytePoly_8 = bigint_mul!(x513, x468, 8);
    let x515: BytePoly_9 = bigint_nondet_quot!(ctx, x514, x3, 9);
    let x516: BytePoly_4 = bigint_nondet_rem!(ctx, x514, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x515, x3, 13), x516, 13), x514, 13),
        73156,
        4,
    )?;
    let x517: BytePoly_4 = bigint_add!(bigint_sub!(x474, x516, 4), x3, 4);
    let x518: BytePoly_4 = bigint_nondet_quot!(ctx, x517, x3, 4);
    let x519: BytePoly_4 = bigint_nondet_rem!(ctx, x517, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x518, x3, 8), x519, 8), x517, 8),
        32515,
        2,
    )?;
    let x520: BytePoly_8 = bigint_mul!(x513, x513, 8);
    let x521: BytePoly_9 = bigint_nondet_quot!(ctx, x520, x3, 9);
    let x522: BytePoly_4 = bigint_nondet_rem!(ctx, x520, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x521, x3, 13), x522, 13), x520, 13),
        73156,
        4,
    )?;
    let x523: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x522, x468, 4), x3, 4), x468, 4),
        x3,
        4
    );
    let x524: BytePoly_4 = bigint_nondet_quot!(ctx, x523, x3, 4);
    let x525: BytePoly_4 = bigint_nondet_rem!(ctx, x523, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x524, x3, 8), x525, 8), x523, 8),
        32515,
        2,
    )?;
    let x526: BytePoly_8 = bigint_mul!(x513, x525, 8);
    let x527: BytePoly_9 = bigint_nondet_quot!(ctx, x526, x3, 9);
    let x528: BytePoly_4 = bigint_nondet_rem!(ctx, x526, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x527, x3, 13), x528, 13), x526, 13),
        73156,
        4,
    )?;
    let x529: BytePoly_4 = bigint_add!(bigint_sub!(x3, bigint_add!(x528, x519, 4), 4), x3, 4);
    let x530: BytePoly_4 = bigint_nondet_quot!(ctx, x529, x3, 4);
    let x531: BytePoly_4 = bigint_nondet_rem!(ctx, x529, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x530, x3, 8), x531, 8), x529, 8),
        32515,
        2,
    )?;
    let x532: BytePoly_1 = bigint_nondet_rem!(ctx, x476, x4, 1);
    let x533: BytePoly_4 = bigint_nondet_quot!(ctx, x476, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x533, x4, 5), x532, 5), x476, 5),
        32515,
        2,
    )?;
    let x534: BytePoly_1 = bigint_sub!(x5, x532, 1);
    eqz(ctx, &bigint_mul!(x532, x534, 2), 8131, 2)?;
    let x535: BytePoly_4 = bigint_add!(bigint_sub!(x531, x497, 4), x3, 4);
    let x536: BytePoly_4 = bigint_add!(bigint_sub!(x525, x495, 4), x3, 4);
    let x537: BytePoly_4 = bigint_nondet_inv!(ctx, x536, x3, 4);
    let x538: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x535, x537, 8), x3, 4);
    let x539: BytePoly_8 = bigint_add!(bigint_sub!(bigint_mul!(x538, x536, 8), x535, 8), x3, 8);
    let x540: BytePoly_9 = bigint_nondet_quot!(ctx, x539, x3, 9);
    eqz(
        ctx,
        &bigint_sub!(x539, bigint_mul!(x540, x3, 13), 13),
        73156,
        4,
    )?;
    let x541: BytePoly_8 = bigint_mul!(x538, x538, 8);
    let x542: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x541, x495, 8), x3, 8), x525, 8),
        x3,
        8
    );
    let x543: BytePoly_9 = bigint_nondet_quot!(ctx, x542, x3, 9);
    let x544: BytePoly_4 = bigint_nondet_rem!(ctx, x542, x3, 4);
    let x545: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x3,
                bigint_add!(
                    bigint_mul!(x538, x544, 8),
                    bigint_add!(bigint_sub!(x497, bigint_mul!(x538, x495, 8), 8), x3, 8),
                    8
                ),
                8
            ),
            x3,
            8
        ),
        x3,
        8
    );
    let x546: BytePoly_9 = bigint_nondet_quot!(ctx, x545, x3, 9);
    let x547: BytePoly_4 = bigint_nondet_rem!(ctx, x545, x3, 4);
    let x548: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x541, bigint_mul!(x543, x3, 13), 13), x495, 13),
                    x525,
                    13
                ),
                x3,
                13
            ),
            x3,
            13
        ),
        x544,
        13
    );
    eqz(ctx, &x548, 73156, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x546, x3, 13), x547, 13),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x538, bigint_sub!(x495, x544, 4), 8), x497, 8),
                    x3,
                    8
                ),
                x3,
                8
            ),
            13
        ),
        73156,
        4,
    )?;
    let x549: BytePoly_5 = bigint_add!(bigint_mul!(x544, x532, 5), bigint_mul!(x495, x534, 5), 5);
    let x550: BytePoly_5 = bigint_add!(bigint_mul!(x547, x532, 5), bigint_mul!(x497, x534, 5), 5);
    let x551: BytePoly_6 = bigint_nondet_quot!(ctx, x549, x3, 6);
    let x552: BytePoly_4 = bigint_nondet_rem!(ctx, x549, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x551, x3, 10), x552, 10), x549, 10),
        48771,
        4,
    )?;
    let x553: BytePoly_6 = bigint_nondet_quot!(ctx, x550, x3, 6);
    let x554: BytePoly_4 = bigint_nondet_rem!(ctx, x550, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x553, x3, 10), x554, 10), x550, 10),
        48771,
        4,
    )?;
    let x555: BytePoly_8 = bigint_mul!(x525, x525, 8);
    let x556: BytePoly_9 = bigint_nondet_quot!(ctx, x555, x3, 9);
    let x557: BytePoly_4 = bigint_nondet_rem!(ctx, x555, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x556, x3, 13), x557, 13), x555, 13),
        73156,
        4,
    )?;
    let x558: BytePoly_5 = bigint_add!(bigint_mul!(x557, x0, 5), x2, 5);
    let x559: BytePoly_6 = bigint_nondet_quot!(ctx, x558, x3, 6);
    let x560: BytePoly_4 = bigint_nondet_rem!(ctx, x558, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x559, x3, 10), x560, 10), x558, 10),
        48771,
        4,
    )?;
    let x561: BytePoly_4 = bigint_add!(x531, x531, 4);
    let x562: BytePoly_4 = bigint_nondet_quot!(ctx, x561, x3, 4);
    let x563: BytePoly_4 = bigint_nondet_rem!(ctx, x561, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x562, x3, 8), x563, 8), x561, 8),
        32515,
        2,
    )?;
    let x564: BytePoly_4 = bigint_nondet_inv!(ctx, x563, x3, 4);
    let x565: BytePoly_8 = bigint_mul!(x563, x564, 8);
    let x566: BytePoly_9 = bigint_nondet_quot!(ctx, x565, x3, 9);
    let x567: BytePoly_4 = bigint_nondet_rem!(ctx, x565, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x566, x3, 13), x567, 13), x565, 13),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x567, x5, 4), 34, 1)?;
    let x568: BytePoly_8 = bigint_mul!(x560, x564, 8);
    let x569: BytePoly_9 = bigint_nondet_quot!(ctx, x568, x3, 9);
    let x570: BytePoly_4 = bigint_nondet_rem!(ctx, x568, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x569, x3, 13), x570, 13), x568, 13),
        73156,
        4,
    )?;
    let x571: BytePoly_8 = bigint_mul!(x570, x525, 8);
    let x572: BytePoly_9 = bigint_nondet_quot!(ctx, x571, x3, 9);
    let x573: BytePoly_4 = bigint_nondet_rem!(ctx, x571, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x572, x3, 13), x573, 13), x571, 13),
        73156,
        4,
    )?;
    let x574: BytePoly_4 = bigint_add!(bigint_sub!(x531, x573, 4), x3, 4);
    let x575: BytePoly_4 = bigint_nondet_quot!(ctx, x574, x3, 4);
    let x576: BytePoly_4 = bigint_nondet_rem!(ctx, x574, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x575, x3, 8), x576, 8), x574, 8),
        32515,
        2,
    )?;
    let x577: BytePoly_8 = bigint_mul!(x570, x570, 8);
    let x578: BytePoly_9 = bigint_nondet_quot!(ctx, x577, x3, 9);
    let x579: BytePoly_4 = bigint_nondet_rem!(ctx, x577, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x578, x3, 13), x579, 13), x577, 13),
        73156,
        4,
    )?;
    let x580: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x579, x525, 4), x3, 4), x525, 4),
        x3,
        4
    );
    let x581: BytePoly_4 = bigint_nondet_quot!(ctx, x580, x3, 4);
    let x582: BytePoly_4 = bigint_nondet_rem!(ctx, x580, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x581, x3, 8), x582, 8), x580, 8),
        32515,
        2,
    )?;
    let x583: BytePoly_8 = bigint_mul!(x570, x582, 8);
    let x584: BytePoly_9 = bigint_nondet_quot!(ctx, x583, x3, 9);
    let x585: BytePoly_4 = bigint_nondet_rem!(ctx, x583, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x584, x3, 13), x585, 13), x583, 13),
        73156,
        4,
    )?;
    let x586: BytePoly_4 = bigint_add!(bigint_sub!(x3, bigint_add!(x585, x576, 4), 4), x3, 4);
    let x587: BytePoly_4 = bigint_nondet_quot!(ctx, x586, x3, 4);
    let x588: BytePoly_4 = bigint_nondet_rem!(ctx, x586, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x587, x3, 8), x588, 8), x586, 8),
        32515,
        2,
    )?;
    let x589: BytePoly_1 = bigint_nondet_rem!(ctx, x533, x4, 1);
    let x590: BytePoly_4 = bigint_nondet_quot!(ctx, x533, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x590, x4, 5), x589, 5), x533, 5),
        32515,
        2,
    )?;
    let x591: BytePoly_1 = bigint_sub!(x5, x589, 1);
    eqz(ctx, &bigint_mul!(x589, x591, 2), 8131, 2)?;
    let x592: BytePoly_4 = bigint_add!(bigint_sub!(x588, x554, 4), x3, 4);
    let x593: BytePoly_4 = bigint_add!(bigint_sub!(x582, x552, 4), x3, 4);
    let x594: BytePoly_4 = bigint_nondet_inv!(ctx, x593, x3, 4);
    let x595: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x592, x594, 8), x3, 4);
    let x596: BytePoly_8 = bigint_add!(bigint_sub!(bigint_mul!(x595, x593, 8), x592, 8), x3, 8);
    let x597: BytePoly_9 = bigint_nondet_quot!(ctx, x596, x3, 9);
    eqz(
        ctx,
        &bigint_sub!(x596, bigint_mul!(x597, x3, 13), 13),
        73156,
        4,
    )?;
    let x598: BytePoly_8 = bigint_mul!(x595, x595, 8);
    let x599: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x598, x552, 8), x3, 8), x582, 8),
        x3,
        8
    );
    let x600: BytePoly_9 = bigint_nondet_quot!(ctx, x599, x3, 9);
    let x601: BytePoly_4 = bigint_nondet_rem!(ctx, x599, x3, 4);
    let x602: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x3,
                bigint_add!(
                    bigint_mul!(x595, x601, 8),
                    bigint_add!(bigint_sub!(x554, bigint_mul!(x595, x552, 8), 8), x3, 8),
                    8
                ),
                8
            ),
            x3,
            8
        ),
        x3,
        8
    );
    let x603: BytePoly_9 = bigint_nondet_quot!(ctx, x602, x3, 9);
    let x604: BytePoly_4 = bigint_nondet_rem!(ctx, x602, x3, 4);
    let x605: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x598, bigint_mul!(x600, x3, 13), 13), x552, 13),
                    x582,
                    13
                ),
                x3,
                13
            ),
            x3,
            13
        ),
        x601,
        13
    );
    eqz(ctx, &x605, 73156, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x603, x3, 13), x604, 13),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x595, bigint_sub!(x552, x601, 4), 8), x554, 8),
                    x3,
                    8
                ),
                x3,
                8
            ),
            13
        ),
        73156,
        4,
    )?;
    let x606: BytePoly_5 = bigint_add!(bigint_mul!(x601, x589, 5), bigint_mul!(x552, x591, 5), 5);
    let x607: BytePoly_5 = bigint_add!(bigint_mul!(x604, x589, 5), bigint_mul!(x554, x591, 5), 5);
    let x608: BytePoly_6 = bigint_nondet_quot!(ctx, x606, x3, 6);
    let x609: BytePoly_4 = bigint_nondet_rem!(ctx, x606, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x608, x3, 10), x609, 10), x606, 10),
        48771,
        4,
    )?;
    let x610: BytePoly_6 = bigint_nondet_quot!(ctx, x607, x3, 6);
    let x611: BytePoly_4 = bigint_nondet_rem!(ctx, x607, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x610, x3, 10), x611, 10), x607, 10),
        48771,
        4,
    )?;
    let x612: BytePoly_8 = bigint_mul!(x582, x582, 8);
    let x613: BytePoly_9 = bigint_nondet_quot!(ctx, x612, x3, 9);
    let x614: BytePoly_4 = bigint_nondet_rem!(ctx, x612, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x613, x3, 13), x614, 13), x612, 13),
        73156,
        4,
    )?;
    let x615: BytePoly_5 = bigint_add!(bigint_mul!(x614, x0, 5), x2, 5);
    let x616: BytePoly_6 = bigint_nondet_quot!(ctx, x615, x3, 6);
    let x617: BytePoly_4 = bigint_nondet_rem!(ctx, x615, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x616, x3, 10), x617, 10), x615, 10),
        48771,
        4,
    )?;
    let x618: BytePoly_4 = bigint_add!(x588, x588, 4);
    let x619: BytePoly_4 = bigint_nondet_quot!(ctx, x618, x3, 4);
    let x620: BytePoly_4 = bigint_nondet_rem!(ctx, x618, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x619, x3, 8), x620, 8), x618, 8),
        32515,
        2,
    )?;
    let x621: BytePoly_4 = bigint_nondet_inv!(ctx, x620, x3, 4);
    let x622: BytePoly_8 = bigint_mul!(x620, x621, 8);
    let x623: BytePoly_9 = bigint_nondet_quot!(ctx, x622, x3, 9);
    let x624: BytePoly_4 = bigint_nondet_rem!(ctx, x622, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x623, x3, 13), x624, 13), x622, 13),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x624, x5, 4), 34, 1)?;
    let x625: BytePoly_8 = bigint_mul!(x617, x621, 8);
    let x626: BytePoly_9 = bigint_nondet_quot!(ctx, x625, x3, 9);
    let x627: BytePoly_4 = bigint_nondet_rem!(ctx, x625, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x626, x3, 13), x627, 13), x625, 13),
        73156,
        4,
    )?;
    let x628: BytePoly_8 = bigint_mul!(x627, x582, 8);
    let x629: BytePoly_9 = bigint_nondet_quot!(ctx, x628, x3, 9);
    let x630: BytePoly_4 = bigint_nondet_rem!(ctx, x628, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x629, x3, 13), x630, 13), x628, 13),
        73156,
        4,
    )?;
    let x631: BytePoly_4 = bigint_add!(bigint_sub!(x588, x630, 4), x3, 4);
    let x632: BytePoly_4 = bigint_nondet_quot!(ctx, x631, x3, 4);
    let x633: BytePoly_4 = bigint_nondet_rem!(ctx, x631, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x632, x3, 8), x633, 8), x631, 8),
        32515,
        2,
    )?;
    let x634: BytePoly_8 = bigint_mul!(x627, x627, 8);
    let x635: BytePoly_9 = bigint_nondet_quot!(ctx, x634, x3, 9);
    let x636: BytePoly_4 = bigint_nondet_rem!(ctx, x634, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x635, x3, 13), x636, 13), x634, 13),
        73156,
        4,
    )?;
    let x637: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x636, x582, 4), x3, 4), x582, 4),
        x3,
        4
    );
    let x638: BytePoly_4 = bigint_nondet_quot!(ctx, x637, x3, 4);
    let x639: BytePoly_4 = bigint_nondet_rem!(ctx, x637, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x638, x3, 8), x639, 8), x637, 8),
        32515,
        2,
    )?;
    let x640: BytePoly_8 = bigint_mul!(x627, x639, 8);
    let x641: BytePoly_9 = bigint_nondet_quot!(ctx, x640, x3, 9);
    let x642: BytePoly_4 = bigint_nondet_rem!(ctx, x640, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x641, x3, 13), x642, 13), x640, 13),
        73156,
        4,
    )?;
    let x643: BytePoly_4 = bigint_add!(bigint_sub!(x3, bigint_add!(x642, x633, 4), 4), x3, 4);
    let x644: BytePoly_4 = bigint_nondet_quot!(ctx, x643, x3, 4);
    let x645: BytePoly_4 = bigint_nondet_rem!(ctx, x643, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x644, x3, 8), x645, 8), x643, 8),
        32515,
        2,
    )?;
    let x646: BytePoly_1 = bigint_nondet_rem!(ctx, x590, x4, 1);
    let x647: BytePoly_4 = bigint_nondet_quot!(ctx, x590, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x647, x4, 5), x646, 5), x590, 5),
        32515,
        2,
    )?;
    let x648: BytePoly_1 = bigint_sub!(x5, x646, 1);
    eqz(ctx, &bigint_mul!(x646, x648, 2), 8131, 2)?;
    let x649: BytePoly_4 = bigint_add!(bigint_sub!(x645, x611, 4), x3, 4);
    let x650: BytePoly_4 = bigint_add!(bigint_sub!(x639, x609, 4), x3, 4);
    let x651: BytePoly_4 = bigint_nondet_inv!(ctx, x650, x3, 4);
    let x652: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x649, x651, 8), x3, 4);
    let x653: BytePoly_8 = bigint_add!(bigint_sub!(bigint_mul!(x652, x650, 8), x649, 8), x3, 8);
    let x654: BytePoly_9 = bigint_nondet_quot!(ctx, x653, x3, 9);
    eqz(
        ctx,
        &bigint_sub!(x653, bigint_mul!(x654, x3, 13), 13),
        73156,
        4,
    )?;
    let x655: BytePoly_8 = bigint_mul!(x652, x652, 8);
    let x656: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x655, x609, 8), x3, 8), x639, 8),
        x3,
        8
    );
    let x657: BytePoly_9 = bigint_nondet_quot!(ctx, x656, x3, 9);
    let x658: BytePoly_4 = bigint_nondet_rem!(ctx, x656, x3, 4);
    let x659: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x3,
                bigint_add!(
                    bigint_mul!(x652, x658, 8),
                    bigint_add!(bigint_sub!(x611, bigint_mul!(x652, x609, 8), 8), x3, 8),
                    8
                ),
                8
            ),
            x3,
            8
        ),
        x3,
        8
    );
    let x660: BytePoly_9 = bigint_nondet_quot!(ctx, x659, x3, 9);
    let x661: BytePoly_4 = bigint_nondet_rem!(ctx, x659, x3, 4);
    let x662: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x655, bigint_mul!(x657, x3, 13), 13), x609, 13),
                    x639,
                    13
                ),
                x3,
                13
            ),
            x3,
            13
        ),
        x658,
        13
    );
    eqz(ctx, &x662, 73156, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x660, x3, 13), x661, 13),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x652, bigint_sub!(x609, x658, 4), 8), x611, 8),
                    x3,
                    8
                ),
                x3,
                8
            ),
            13
        ),
        73156,
        4,
    )?;
    let x663: BytePoly_5 = bigint_add!(bigint_mul!(x658, x646, 5), bigint_mul!(x609, x648, 5), 5);
    let x664: BytePoly_5 = bigint_add!(bigint_mul!(x661, x646, 5), bigint_mul!(x611, x648, 5), 5);
    let x665: BytePoly_6 = bigint_nondet_quot!(ctx, x663, x3, 6);
    let x666: BytePoly_4 = bigint_nondet_rem!(ctx, x663, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x665, x3, 10), x666, 10), x663, 10),
        48771,
        4,
    )?;
    let x667: BytePoly_6 = bigint_nondet_quot!(ctx, x664, x3, 6);
    let x668: BytePoly_4 = bigint_nondet_rem!(ctx, x664, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x667, x3, 10), x668, 10), x664, 10),
        48771,
        4,
    )?;
    let x669: BytePoly_8 = bigint_mul!(x639, x639, 8);
    let x670: BytePoly_9 = bigint_nondet_quot!(ctx, x669, x3, 9);
    let x671: BytePoly_4 = bigint_nondet_rem!(ctx, x669, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x670, x3, 13), x671, 13), x669, 13),
        73156,
        4,
    )?;
    let x672: BytePoly_5 = bigint_add!(bigint_mul!(x671, x0, 5), x2, 5);
    let x673: BytePoly_6 = bigint_nondet_quot!(ctx, x672, x3, 6);
    let x674: BytePoly_4 = bigint_nondet_rem!(ctx, x672, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x673, x3, 10), x674, 10), x672, 10),
        48771,
        4,
    )?;
    let x675: BytePoly_4 = bigint_add!(x645, x645, 4);
    let x676: BytePoly_4 = bigint_nondet_quot!(ctx, x675, x3, 4);
    let x677: BytePoly_4 = bigint_nondet_rem!(ctx, x675, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x676, x3, 8), x677, 8), x675, 8),
        32515,
        2,
    )?;
    let x678: BytePoly_4 = bigint_nondet_inv!(ctx, x677, x3, 4);
    let x679: BytePoly_8 = bigint_mul!(x677, x678, 8);
    let x680: BytePoly_9 = bigint_nondet_quot!(ctx, x679, x3, 9);
    let x681: BytePoly_4 = bigint_nondet_rem!(ctx, x679, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x680, x3, 13), x681, 13), x679, 13),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x681, x5, 4), 34, 1)?;
    let x682: BytePoly_8 = bigint_mul!(x674, x678, 8);
    let x683: BytePoly_9 = bigint_nondet_quot!(ctx, x682, x3, 9);
    let x684: BytePoly_4 = bigint_nondet_rem!(ctx, x682, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x683, x3, 13), x684, 13), x682, 13),
        73156,
        4,
    )?;
    let x685: BytePoly_8 = bigint_mul!(x684, x639, 8);
    let x686: BytePoly_9 = bigint_nondet_quot!(ctx, x685, x3, 9);
    let x687: BytePoly_4 = bigint_nondet_rem!(ctx, x685, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x686, x3, 13), x687, 13), x685, 13),
        73156,
        4,
    )?;
    let x688: BytePoly_4 = bigint_add!(bigint_sub!(x645, x687, 4), x3, 4);
    let x689: BytePoly_4 = bigint_nondet_quot!(ctx, x688, x3, 4);
    let x690: BytePoly_4 = bigint_nondet_rem!(ctx, x688, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x689, x3, 8), x690, 8), x688, 8),
        32515,
        2,
    )?;
    let x691: BytePoly_8 = bigint_mul!(x684, x684, 8);
    let x692: BytePoly_9 = bigint_nondet_quot!(ctx, x691, x3, 9);
    let x693: BytePoly_4 = bigint_nondet_rem!(ctx, x691, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x692, x3, 13), x693, 13), x691, 13),
        73156,
        4,
    )?;
    let x694: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x693, x639, 4), x3, 4), x639, 4),
        x3,
        4
    );
    let x695: BytePoly_4 = bigint_nondet_quot!(ctx, x694, x3, 4);
    let x696: BytePoly_4 = bigint_nondet_rem!(ctx, x694, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x695, x3, 8), x696, 8), x694, 8),
        32515,
        2,
    )?;
    let x697: BytePoly_8 = bigint_mul!(x684, x696, 8);
    let x698: BytePoly_9 = bigint_nondet_quot!(ctx, x697, x3, 9);
    let x699: BytePoly_4 = bigint_nondet_rem!(ctx, x697, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x698, x3, 13), x699, 13), x697, 13),
        73156,
        4,
    )?;
    let x700: BytePoly_4 = bigint_add!(bigint_sub!(x3, bigint_add!(x699, x690, 4), 4), x3, 4);
    let x701: BytePoly_4 = bigint_nondet_quot!(ctx, x700, x3, 4);
    let x702: BytePoly_4 = bigint_nondet_rem!(ctx, x700, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x701, x3, 8), x702, 8), x700, 8),
        32515,
        2,
    )?;
    let x703: BytePoly_1 = bigint_nondet_rem!(ctx, x647, x4, 1);
    let x704: BytePoly_4 = bigint_nondet_quot!(ctx, x647, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x704, x4, 5), x703, 5), x647, 5),
        32515,
        2,
    )?;
    let x705: BytePoly_1 = bigint_sub!(x5, x703, 1);
    eqz(ctx, &bigint_mul!(x703, x705, 2), 8131, 2)?;
    let x706: BytePoly_4 = bigint_add!(bigint_sub!(x702, x668, 4), x3, 4);
    let x707: BytePoly_4 = bigint_add!(bigint_sub!(x696, x666, 4), x3, 4);
    let x708: BytePoly_4 = bigint_nondet_inv!(ctx, x707, x3, 4);
    let x709: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x706, x708, 8), x3, 4);
    let x710: BytePoly_8 = bigint_add!(bigint_sub!(bigint_mul!(x709, x707, 8), x706, 8), x3, 8);
    let x711: BytePoly_9 = bigint_nondet_quot!(ctx, x710, x3, 9);
    eqz(
        ctx,
        &bigint_sub!(x710, bigint_mul!(x711, x3, 13), 13),
        73156,
        4,
    )?;
    let x712: BytePoly_8 = bigint_mul!(x709, x709, 8);
    let x713: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x712, x666, 8), x3, 8), x696, 8),
        x3,
        8
    );
    let x714: BytePoly_9 = bigint_nondet_quot!(ctx, x713, x3, 9);
    let x715: BytePoly_4 = bigint_nondet_rem!(ctx, x713, x3, 4);
    let x716: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x3,
                bigint_add!(
                    bigint_mul!(x709, x715, 8),
                    bigint_add!(bigint_sub!(x668, bigint_mul!(x709, x666, 8), 8), x3, 8),
                    8
                ),
                8
            ),
            x3,
            8
        ),
        x3,
        8
    );
    let x717: BytePoly_9 = bigint_nondet_quot!(ctx, x716, x3, 9);
    let x718: BytePoly_4 = bigint_nondet_rem!(ctx, x716, x3, 4);
    let x719: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x712, bigint_mul!(x714, x3, 13), 13), x666, 13),
                    x696,
                    13
                ),
                x3,
                13
            ),
            x3,
            13
        ),
        x715,
        13
    );
    eqz(ctx, &x719, 73156, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x717, x3, 13), x718, 13),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x709, bigint_sub!(x666, x715, 4), 8), x668, 8),
                    x3,
                    8
                ),
                x3,
                8
            ),
            13
        ),
        73156,
        4,
    )?;
    let x720: BytePoly_5 = bigint_add!(bigint_mul!(x715, x703, 5), bigint_mul!(x666, x705, 5), 5);
    let x721: BytePoly_5 = bigint_add!(bigint_mul!(x718, x703, 5), bigint_mul!(x668, x705, 5), 5);
    let x722: BytePoly_6 = bigint_nondet_quot!(ctx, x720, x3, 6);
    let x723: BytePoly_4 = bigint_nondet_rem!(ctx, x720, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x722, x3, 10), x723, 10), x720, 10),
        48771,
        4,
    )?;
    let x724: BytePoly_6 = bigint_nondet_quot!(ctx, x721, x3, 6);
    let x725: BytePoly_4 = bigint_nondet_rem!(ctx, x721, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x724, x3, 10), x725, 10), x721, 10),
        48771,
        4,
    )?;
    let x726: BytePoly_8 = bigint_mul!(x696, x696, 8);
    let x727: BytePoly_9 = bigint_nondet_quot!(ctx, x726, x3, 9);
    let x728: BytePoly_4 = bigint_nondet_rem!(ctx, x726, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x727, x3, 13), x728, 13), x726, 13),
        73156,
        4,
    )?;
    let x729: BytePoly_5 = bigint_add!(bigint_mul!(x728, x0, 5), x2, 5);
    let x730: BytePoly_6 = bigint_nondet_quot!(ctx, x729, x3, 6);
    let x731: BytePoly_4 = bigint_nondet_rem!(ctx, x729, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x730, x3, 10), x731, 10), x729, 10),
        48771,
        4,
    )?;
    let x732: BytePoly_4 = bigint_add!(x702, x702, 4);
    let x733: BytePoly_4 = bigint_nondet_quot!(ctx, x732, x3, 4);
    let x734: BytePoly_4 = bigint_nondet_rem!(ctx, x732, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x733, x3, 8), x734, 8), x732, 8),
        32515,
        2,
    )?;
    let x735: BytePoly_4 = bigint_nondet_inv!(ctx, x734, x3, 4);
    let x736: BytePoly_8 = bigint_mul!(x734, x735, 8);
    let x737: BytePoly_9 = bigint_nondet_quot!(ctx, x736, x3, 9);
    let x738: BytePoly_4 = bigint_nondet_rem!(ctx, x736, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x737, x3, 13), x738, 13), x736, 13),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x738, x5, 4), 34, 1)?;
    let x739: BytePoly_8 = bigint_mul!(x731, x735, 8);
    let x740: BytePoly_9 = bigint_nondet_quot!(ctx, x739, x3, 9);
    let x741: BytePoly_4 = bigint_nondet_rem!(ctx, x739, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x740, x3, 13), x741, 13), x739, 13),
        73156,
        4,
    )?;
    let x742: BytePoly_8 = bigint_mul!(x741, x696, 8);
    let x743: BytePoly_9 = bigint_nondet_quot!(ctx, x742, x3, 9);
    let x744: BytePoly_4 = bigint_nondet_rem!(ctx, x742, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x743, x3, 13), x744, 13), x742, 13),
        73156,
        4,
    )?;
    let x745: BytePoly_4 = bigint_add!(bigint_sub!(x702, x744, 4), x3, 4);
    let x746: BytePoly_4 = bigint_nondet_quot!(ctx, x745, x3, 4);
    let x747: BytePoly_4 = bigint_nondet_rem!(ctx, x745, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x746, x3, 8), x747, 8), x745, 8),
        32515,
        2,
    )?;
    let x748: BytePoly_8 = bigint_mul!(x741, x741, 8);
    let x749: BytePoly_9 = bigint_nondet_quot!(ctx, x748, x3, 9);
    let x750: BytePoly_4 = bigint_nondet_rem!(ctx, x748, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x749, x3, 13), x750, 13), x748, 13),
        73156,
        4,
    )?;
    let x751: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x750, x696, 4), x3, 4), x696, 4),
        x3,
        4
    );
    let x752: BytePoly_4 = bigint_nondet_quot!(ctx, x751, x3, 4);
    let x753: BytePoly_4 = bigint_nondet_rem!(ctx, x751, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x752, x3, 8), x753, 8), x751, 8),
        32515,
        2,
    )?;
    let x754: BytePoly_8 = bigint_mul!(x741, x753, 8);
    let x755: BytePoly_9 = bigint_nondet_quot!(ctx, x754, x3, 9);
    let x756: BytePoly_4 = bigint_nondet_rem!(ctx, x754, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x755, x3, 13), x756, 13), x754, 13),
        73156,
        4,
    )?;
    let x757: BytePoly_4 = bigint_add!(bigint_sub!(x3, bigint_add!(x756, x747, 4), 4), x3, 4);
    let x758: BytePoly_4 = bigint_nondet_quot!(ctx, x757, x3, 4);
    let x759: BytePoly_4 = bigint_nondet_rem!(ctx, x757, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x758, x3, 8), x759, 8), x757, 8),
        32515,
        2,
    )?;
    let x760: BytePoly_1 = bigint_nondet_rem!(ctx, x704, x4, 1);
    let x761: BytePoly_4 = bigint_nondet_quot!(ctx, x704, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x761, x4, 5), x760, 5), x704, 5),
        32515,
        2,
    )?;
    let x762: BytePoly_1 = bigint_sub!(x5, x760, 1);
    eqz(ctx, &bigint_mul!(x760, x762, 2), 8131, 2)?;
    let x763: BytePoly_4 = bigint_add!(bigint_sub!(x759, x725, 4), x3, 4);
    let x764: BytePoly_4 = bigint_add!(bigint_sub!(x753, x723, 4), x3, 4);
    let x765: BytePoly_4 = bigint_nondet_inv!(ctx, x764, x3, 4);
    let x766: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x763, x765, 8), x3, 4);
    let x767: BytePoly_8 = bigint_add!(bigint_sub!(bigint_mul!(x766, x764, 8), x763, 8), x3, 8);
    let x768: BytePoly_9 = bigint_nondet_quot!(ctx, x767, x3, 9);
    eqz(
        ctx,
        &bigint_sub!(x767, bigint_mul!(x768, x3, 13), 13),
        73156,
        4,
    )?;
    let x769: BytePoly_8 = bigint_mul!(x766, x766, 8);
    let x770: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x769, x723, 8), x3, 8), x753, 8),
        x3,
        8
    );
    let x771: BytePoly_9 = bigint_nondet_quot!(ctx, x770, x3, 9);
    let x772: BytePoly_4 = bigint_nondet_rem!(ctx, x770, x3, 4);
    let x773: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x3,
                bigint_add!(
                    bigint_mul!(x766, x772, 8),
                    bigint_add!(bigint_sub!(x725, bigint_mul!(x766, x723, 8), 8), x3, 8),
                    8
                ),
                8
            ),
            x3,
            8
        ),
        x3,
        8
    );
    let x774: BytePoly_9 = bigint_nondet_quot!(ctx, x773, x3, 9);
    let x775: BytePoly_4 = bigint_nondet_rem!(ctx, x773, x3, 4);
    let x776: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x769, bigint_mul!(x771, x3, 13), 13), x723, 13),
                    x753,
                    13
                ),
                x3,
                13
            ),
            x3,
            13
        ),
        x772,
        13
    );
    eqz(ctx, &x776, 73156, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x774, x3, 13), x775, 13),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x766, bigint_sub!(x723, x772, 4), 8), x725, 8),
                    x3,
                    8
                ),
                x3,
                8
            ),
            13
        ),
        73156,
        4,
    )?;
    let x777: BytePoly_5 = bigint_add!(bigint_mul!(x772, x760, 5), bigint_mul!(x723, x762, 5), 5);
    let x778: BytePoly_5 = bigint_add!(bigint_mul!(x775, x760, 5), bigint_mul!(x725, x762, 5), 5);
    let x779: BytePoly_6 = bigint_nondet_quot!(ctx, x777, x3, 6);
    let x780: BytePoly_4 = bigint_nondet_rem!(ctx, x777, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x779, x3, 10), x780, 10), x777, 10),
        48771,
        4,
    )?;
    let x781: BytePoly_6 = bigint_nondet_quot!(ctx, x778, x3, 6);
    let x782: BytePoly_4 = bigint_nondet_rem!(ctx, x778, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x781, x3, 10), x782, 10), x778, 10),
        48771,
        4,
    )?;
    let x783: BytePoly_8 = bigint_mul!(x753, x753, 8);
    let x784: BytePoly_9 = bigint_nondet_quot!(ctx, x783, x3, 9);
    let x785: BytePoly_4 = bigint_nondet_rem!(ctx, x783, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x784, x3, 13), x785, 13), x783, 13),
        73156,
        4,
    )?;
    let x786: BytePoly_5 = bigint_add!(bigint_mul!(x785, x0, 5), x2, 5);
    let x787: BytePoly_6 = bigint_nondet_quot!(ctx, x786, x3, 6);
    let x788: BytePoly_4 = bigint_nondet_rem!(ctx, x786, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x787, x3, 10), x788, 10), x786, 10),
        48771,
        4,
    )?;
    let x789: BytePoly_4 = bigint_add!(x759, x759, 4);
    let x790: BytePoly_4 = bigint_nondet_quot!(ctx, x789, x3, 4);
    let x791: BytePoly_4 = bigint_nondet_rem!(ctx, x789, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x790, x3, 8), x791, 8), x789, 8),
        32515,
        2,
    )?;
    let x792: BytePoly_4 = bigint_nondet_inv!(ctx, x791, x3, 4);
    let x793: BytePoly_8 = bigint_mul!(x791, x792, 8);
    let x794: BytePoly_9 = bigint_nondet_quot!(ctx, x793, x3, 9);
    let x795: BytePoly_4 = bigint_nondet_rem!(ctx, x793, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x794, x3, 13), x795, 13), x793, 13),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x795, x5, 4), 34, 1)?;
    let x796: BytePoly_8 = bigint_mul!(x788, x792, 8);
    let x797: BytePoly_9 = bigint_nondet_quot!(ctx, x796, x3, 9);
    let x798: BytePoly_4 = bigint_nondet_rem!(ctx, x796, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x797, x3, 13), x798, 13), x796, 13),
        73156,
        4,
    )?;
    let x799: BytePoly_8 = bigint_mul!(x798, x753, 8);
    let x800: BytePoly_9 = bigint_nondet_quot!(ctx, x799, x3, 9);
    let x801: BytePoly_4 = bigint_nondet_rem!(ctx, x799, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x800, x3, 13), x801, 13), x799, 13),
        73156,
        4,
    )?;
    let x802: BytePoly_4 = bigint_add!(bigint_sub!(x759, x801, 4), x3, 4);
    let x803: BytePoly_4 = bigint_nondet_quot!(ctx, x802, x3, 4);
    let x804: BytePoly_4 = bigint_nondet_rem!(ctx, x802, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x803, x3, 8), x804, 8), x802, 8),
        32515,
        2,
    )?;
    let x805: BytePoly_8 = bigint_mul!(x798, x798, 8);
    let x806: BytePoly_9 = bigint_nondet_quot!(ctx, x805, x3, 9);
    let x807: BytePoly_4 = bigint_nondet_rem!(ctx, x805, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x806, x3, 13), x807, 13), x805, 13),
        73156,
        4,
    )?;
    let x808: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x807, x753, 4), x3, 4), x753, 4),
        x3,
        4
    );
    let x809: BytePoly_4 = bigint_nondet_quot!(ctx, x808, x3, 4);
    let x810: BytePoly_4 = bigint_nondet_rem!(ctx, x808, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x809, x3, 8), x810, 8), x808, 8),
        32515,
        2,
    )?;
    let x811: BytePoly_8 = bigint_mul!(x798, x810, 8);
    let x812: BytePoly_9 = bigint_nondet_quot!(ctx, x811, x3, 9);
    let x813: BytePoly_4 = bigint_nondet_rem!(ctx, x811, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x812, x3, 13), x813, 13), x811, 13),
        73156,
        4,
    )?;
    let x814: BytePoly_4 = bigint_add!(bigint_sub!(x3, bigint_add!(x813, x804, 4), 4), x3, 4);
    let x815: BytePoly_4 = bigint_nondet_quot!(ctx, x814, x3, 4);
    let x816: BytePoly_4 = bigint_nondet_rem!(ctx, x814, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x815, x3, 8), x816, 8), x814, 8),
        32515,
        2,
    )?;
    let x817: BytePoly_1 = bigint_nondet_rem!(ctx, x761, x4, 1);
    let x818: BytePoly_4 = bigint_nondet_quot!(ctx, x761, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x818, x4, 5), x817, 5), x761, 5),
        32515,
        2,
    )?;
    let x819: BytePoly_1 = bigint_sub!(x5, x817, 1);
    eqz(ctx, &bigint_mul!(x817, x819, 2), 8131, 2)?;
    let x820: BytePoly_4 = bigint_add!(bigint_sub!(x816, x782, 4), x3, 4);
    let x821: BytePoly_4 = bigint_add!(bigint_sub!(x810, x780, 4), x3, 4);
    let x822: BytePoly_4 = bigint_nondet_inv!(ctx, x821, x3, 4);
    let x823: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x820, x822, 8), x3, 4);
    let x824: BytePoly_8 = bigint_add!(bigint_sub!(bigint_mul!(x823, x821, 8), x820, 8), x3, 8);
    let x825: BytePoly_9 = bigint_nondet_quot!(ctx, x824, x3, 9);
    eqz(
        ctx,
        &bigint_sub!(x824, bigint_mul!(x825, x3, 13), 13),
        73156,
        4,
    )?;
    let x826: BytePoly_8 = bigint_mul!(x823, x823, 8);
    let x827: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x826, x780, 8), x3, 8), x810, 8),
        x3,
        8
    );
    let x828: BytePoly_9 = bigint_nondet_quot!(ctx, x827, x3, 9);
    let x829: BytePoly_4 = bigint_nondet_rem!(ctx, x827, x3, 4);
    let x830: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x3,
                bigint_add!(
                    bigint_mul!(x823, x829, 8),
                    bigint_add!(bigint_sub!(x782, bigint_mul!(x823, x780, 8), 8), x3, 8),
                    8
                ),
                8
            ),
            x3,
            8
        ),
        x3,
        8
    );
    let x831: BytePoly_9 = bigint_nondet_quot!(ctx, x830, x3, 9);
    let x832: BytePoly_4 = bigint_nondet_rem!(ctx, x830, x3, 4);
    let x833: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x826, bigint_mul!(x828, x3, 13), 13), x780, 13),
                    x810,
                    13
                ),
                x3,
                13
            ),
            x3,
            13
        ),
        x829,
        13
    );
    eqz(ctx, &x833, 73156, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x831, x3, 13), x832, 13),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x823, bigint_sub!(x780, x829, 4), 8), x782, 8),
                    x3,
                    8
                ),
                x3,
                8
            ),
            13
        ),
        73156,
        4,
    )?;
    let x834: BytePoly_5 = bigint_add!(bigint_mul!(x829, x817, 5), bigint_mul!(x780, x819, 5), 5);
    let x835: BytePoly_5 = bigint_add!(bigint_mul!(x832, x817, 5), bigint_mul!(x782, x819, 5), 5);
    let x836: BytePoly_6 = bigint_nondet_quot!(ctx, x834, x3, 6);
    let x837: BytePoly_4 = bigint_nondet_rem!(ctx, x834, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x836, x3, 10), x837, 10), x834, 10),
        48771,
        4,
    )?;
    let x838: BytePoly_6 = bigint_nondet_quot!(ctx, x835, x3, 6);
    let x839: BytePoly_4 = bigint_nondet_rem!(ctx, x835, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x838, x3, 10), x839, 10), x835, 10),
        48771,
        4,
    )?;
    let x840: BytePoly_8 = bigint_mul!(x810, x810, 8);
    let x841: BytePoly_9 = bigint_nondet_quot!(ctx, x840, x3, 9);
    let x842: BytePoly_4 = bigint_nondet_rem!(ctx, x840, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x841, x3, 13), x842, 13), x840, 13),
        73156,
        4,
    )?;
    let x843: BytePoly_5 = bigint_add!(bigint_mul!(x842, x0, 5), x2, 5);
    let x844: BytePoly_6 = bigint_nondet_quot!(ctx, x843, x3, 6);
    let x845: BytePoly_4 = bigint_nondet_rem!(ctx, x843, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x844, x3, 10), x845, 10), x843, 10),
        48771,
        4,
    )?;
    let x846: BytePoly_4 = bigint_add!(x816, x816, 4);
    let x847: BytePoly_4 = bigint_nondet_quot!(ctx, x846, x3, 4);
    let x848: BytePoly_4 = bigint_nondet_rem!(ctx, x846, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x847, x3, 8), x848, 8), x846, 8),
        32515,
        2,
    )?;
    let x849: BytePoly_4 = bigint_nondet_inv!(ctx, x848, x3, 4);
    let x850: BytePoly_8 = bigint_mul!(x848, x849, 8);
    let x851: BytePoly_9 = bigint_nondet_quot!(ctx, x850, x3, 9);
    let x852: BytePoly_4 = bigint_nondet_rem!(ctx, x850, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x851, x3, 13), x852, 13), x850, 13),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x852, x5, 4), 34, 1)?;
    let x853: BytePoly_8 = bigint_mul!(x845, x849, 8);
    let x854: BytePoly_9 = bigint_nondet_quot!(ctx, x853, x3, 9);
    let x855: BytePoly_4 = bigint_nondet_rem!(ctx, x853, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x854, x3, 13), x855, 13), x853, 13),
        73156,
        4,
    )?;
    let x856: BytePoly_8 = bigint_mul!(x855, x810, 8);
    let x857: BytePoly_9 = bigint_nondet_quot!(ctx, x856, x3, 9);
    let x858: BytePoly_4 = bigint_nondet_rem!(ctx, x856, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x857, x3, 13), x858, 13), x856, 13),
        73156,
        4,
    )?;
    let x859: BytePoly_4 = bigint_add!(bigint_sub!(x816, x858, 4), x3, 4);
    let x860: BytePoly_4 = bigint_nondet_quot!(ctx, x859, x3, 4);
    let x861: BytePoly_4 = bigint_nondet_rem!(ctx, x859, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x860, x3, 8), x861, 8), x859, 8),
        32515,
        2,
    )?;
    let x862: BytePoly_8 = bigint_mul!(x855, x855, 8);
    let x863: BytePoly_9 = bigint_nondet_quot!(ctx, x862, x3, 9);
    let x864: BytePoly_4 = bigint_nondet_rem!(ctx, x862, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x863, x3, 13), x864, 13), x862, 13),
        73156,
        4,
    )?;
    let x865: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x864, x810, 4), x3, 4), x810, 4),
        x3,
        4
    );
    let x866: BytePoly_4 = bigint_nondet_quot!(ctx, x865, x3, 4);
    let x867: BytePoly_4 = bigint_nondet_rem!(ctx, x865, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x866, x3, 8), x867, 8), x865, 8),
        32515,
        2,
    )?;
    let x868: BytePoly_8 = bigint_mul!(x855, x867, 8);
    let x869: BytePoly_9 = bigint_nondet_quot!(ctx, x868, x3, 9);
    let x870: BytePoly_4 = bigint_nondet_rem!(ctx, x868, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x869, x3, 13), x870, 13), x868, 13),
        73156,
        4,
    )?;
    let x871: BytePoly_4 = bigint_add!(bigint_sub!(x3, bigint_add!(x870, x861, 4), 4), x3, 4);
    let x872: BytePoly_4 = bigint_nondet_quot!(ctx, x871, x3, 4);
    let x873: BytePoly_4 = bigint_nondet_rem!(ctx, x871, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x872, x3, 8), x873, 8), x871, 8),
        32515,
        2,
    )?;
    let x874: BytePoly_1 = bigint_nondet_rem!(ctx, x818, x4, 1);
    let x875: BytePoly_4 = bigint_nondet_quot!(ctx, x818, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x875, x4, 5), x874, 5), x818, 5),
        32515,
        2,
    )?;
    let x876: BytePoly_1 = bigint_sub!(x5, x874, 1);
    eqz(ctx, &bigint_mul!(x874, x876, 2), 8131, 2)?;
    let x877: BytePoly_4 = bigint_add!(bigint_sub!(x873, x839, 4), x3, 4);
    let x878: BytePoly_4 = bigint_add!(bigint_sub!(x867, x837, 4), x3, 4);
    let x879: BytePoly_4 = bigint_nondet_inv!(ctx, x878, x3, 4);
    let x880: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x877, x879, 8), x3, 4);
    let x881: BytePoly_8 = bigint_add!(bigint_sub!(bigint_mul!(x880, x878, 8), x877, 8), x3, 8);
    let x882: BytePoly_9 = bigint_nondet_quot!(ctx, x881, x3, 9);
    eqz(
        ctx,
        &bigint_sub!(x881, bigint_mul!(x882, x3, 13), 13),
        73156,
        4,
    )?;
    let x883: BytePoly_8 = bigint_mul!(x880, x880, 8);
    let x884: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x883, x837, 8), x3, 8), x867, 8),
        x3,
        8
    );
    let x885: BytePoly_9 = bigint_nondet_quot!(ctx, x884, x3, 9);
    let x886: BytePoly_4 = bigint_nondet_rem!(ctx, x884, x3, 4);
    let x887: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x3,
                bigint_add!(
                    bigint_mul!(x880, x886, 8),
                    bigint_add!(bigint_sub!(x839, bigint_mul!(x880, x837, 8), 8), x3, 8),
                    8
                ),
                8
            ),
            x3,
            8
        ),
        x3,
        8
    );
    let x888: BytePoly_9 = bigint_nondet_quot!(ctx, x887, x3, 9);
    let x889: BytePoly_4 = bigint_nondet_rem!(ctx, x887, x3, 4);
    let x890: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x883, bigint_mul!(x885, x3, 13), 13), x837, 13),
                    x867,
                    13
                ),
                x3,
                13
            ),
            x3,
            13
        ),
        x886,
        13
    );
    eqz(ctx, &x890, 73156, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x888, x3, 13), x889, 13),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x880, bigint_sub!(x837, x886, 4), 8), x839, 8),
                    x3,
                    8
                ),
                x3,
                8
            ),
            13
        ),
        73156,
        4,
    )?;
    let x891: BytePoly_5 = bigint_add!(bigint_mul!(x886, x874, 5), bigint_mul!(x837, x876, 5), 5);
    let x892: BytePoly_5 = bigint_add!(bigint_mul!(x889, x874, 5), bigint_mul!(x839, x876, 5), 5);
    let x893: BytePoly_6 = bigint_nondet_quot!(ctx, x891, x3, 6);
    let x894: BytePoly_4 = bigint_nondet_rem!(ctx, x891, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x893, x3, 10), x894, 10), x891, 10),
        48771,
        4,
    )?;
    let x895: BytePoly_6 = bigint_nondet_quot!(ctx, x892, x3, 6);
    let x896: BytePoly_4 = bigint_nondet_rem!(ctx, x892, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x895, x3, 10), x896, 10), x892, 10),
        48771,
        4,
    )?;
    let x897: BytePoly_8 = bigint_mul!(x867, x867, 8);
    let x898: BytePoly_9 = bigint_nondet_quot!(ctx, x897, x3, 9);
    let x899: BytePoly_4 = bigint_nondet_rem!(ctx, x897, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x898, x3, 13), x899, 13), x897, 13),
        73156,
        4,
    )?;
    let x900: BytePoly_5 = bigint_add!(bigint_mul!(x899, x0, 5), x2, 5);
    let x901: BytePoly_6 = bigint_nondet_quot!(ctx, x900, x3, 6);
    let x902: BytePoly_4 = bigint_nondet_rem!(ctx, x900, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x901, x3, 10), x902, 10), x900, 10),
        48771,
        4,
    )?;
    let x903: BytePoly_4 = bigint_add!(x873, x873, 4);
    let x904: BytePoly_4 = bigint_nondet_quot!(ctx, x903, x3, 4);
    let x905: BytePoly_4 = bigint_nondet_rem!(ctx, x903, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x904, x3, 8), x905, 8), x903, 8),
        32515,
        2,
    )?;
    let x906: BytePoly_4 = bigint_nondet_inv!(ctx, x905, x3, 4);
    let x907: BytePoly_8 = bigint_mul!(x905, x906, 8);
    let x908: BytePoly_9 = bigint_nondet_quot!(ctx, x907, x3, 9);
    let x909: BytePoly_4 = bigint_nondet_rem!(ctx, x907, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x908, x3, 13), x909, 13), x907, 13),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x909, x5, 4), 34, 1)?;
    let x910: BytePoly_8 = bigint_mul!(x902, x906, 8);
    let x911: BytePoly_9 = bigint_nondet_quot!(ctx, x910, x3, 9);
    let x912: BytePoly_4 = bigint_nondet_rem!(ctx, x910, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x911, x3, 13), x912, 13), x910, 13),
        73156,
        4,
    )?;
    let x913: BytePoly_8 = bigint_mul!(x912, x867, 8);
    let x914: BytePoly_9 = bigint_nondet_quot!(ctx, x913, x3, 9);
    let x915: BytePoly_4 = bigint_nondet_rem!(ctx, x913, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x914, x3, 13), x915, 13), x913, 13),
        73156,
        4,
    )?;
    let x916: BytePoly_4 = bigint_add!(bigint_sub!(x873, x915, 4), x3, 4);
    let x917: BytePoly_4 = bigint_nondet_quot!(ctx, x916, x3, 4);
    let x918: BytePoly_4 = bigint_nondet_rem!(ctx, x916, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x917, x3, 8), x918, 8), x916, 8),
        32515,
        2,
    )?;
    let x919: BytePoly_8 = bigint_mul!(x912, x912, 8);
    let x920: BytePoly_9 = bigint_nondet_quot!(ctx, x919, x3, 9);
    let x921: BytePoly_4 = bigint_nondet_rem!(ctx, x919, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x920, x3, 13), x921, 13), x919, 13),
        73156,
        4,
    )?;
    let x922: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x921, x867, 4), x3, 4), x867, 4),
        x3,
        4
    );
    let x923: BytePoly_4 = bigint_nondet_quot!(ctx, x922, x3, 4);
    let x924: BytePoly_4 = bigint_nondet_rem!(ctx, x922, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x923, x3, 8), x924, 8), x922, 8),
        32515,
        2,
    )?;
    let x925: BytePoly_8 = bigint_mul!(x912, x924, 8);
    let x926: BytePoly_9 = bigint_nondet_quot!(ctx, x925, x3, 9);
    let x927: BytePoly_4 = bigint_nondet_rem!(ctx, x925, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x926, x3, 13), x927, 13), x925, 13),
        73156,
        4,
    )?;
    let x928: BytePoly_4 = bigint_add!(bigint_sub!(x3, bigint_add!(x927, x918, 4), 4), x3, 4);
    let x929: BytePoly_4 = bigint_nondet_quot!(ctx, x928, x3, 4);
    let x930: BytePoly_4 = bigint_nondet_rem!(ctx, x928, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x929, x3, 8), x930, 8), x928, 8),
        32515,
        2,
    )?;
    let x931: BytePoly_1 = bigint_nondet_rem!(ctx, x875, x4, 1);
    let x932: BytePoly_4 = bigint_nondet_quot!(ctx, x875, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x932, x4, 5), x931, 5), x875, 5),
        32515,
        2,
    )?;
    let x933: BytePoly_1 = bigint_sub!(x5, x931, 1);
    eqz(ctx, &bigint_mul!(x931, x933, 2), 8131, 2)?;
    let x934: BytePoly_4 = bigint_add!(bigint_sub!(x930, x896, 4), x3, 4);
    let x935: BytePoly_4 = bigint_add!(bigint_sub!(x924, x894, 4), x3, 4);
    let x936: BytePoly_4 = bigint_nondet_inv!(ctx, x935, x3, 4);
    let x937: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x934, x936, 8), x3, 4);
    let x938: BytePoly_8 = bigint_add!(bigint_sub!(bigint_mul!(x937, x935, 8), x934, 8), x3, 8);
    let x939: BytePoly_9 = bigint_nondet_quot!(ctx, x938, x3, 9);
    eqz(
        ctx,
        &bigint_sub!(x938, bigint_mul!(x939, x3, 13), 13),
        73156,
        4,
    )?;
    let x940: BytePoly_8 = bigint_mul!(x937, x937, 8);
    let x941: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x940, x894, 8), x3, 8), x924, 8),
        x3,
        8
    );
    let x942: BytePoly_9 = bigint_nondet_quot!(ctx, x941, x3, 9);
    let x943: BytePoly_4 = bigint_nondet_rem!(ctx, x941, x3, 4);
    let x944: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x3,
                bigint_add!(
                    bigint_mul!(x937, x943, 8),
                    bigint_add!(bigint_sub!(x896, bigint_mul!(x937, x894, 8), 8), x3, 8),
                    8
                ),
                8
            ),
            x3,
            8
        ),
        x3,
        8
    );
    let x945: BytePoly_9 = bigint_nondet_quot!(ctx, x944, x3, 9);
    let x946: BytePoly_4 = bigint_nondet_rem!(ctx, x944, x3, 4);
    let x947: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x940, bigint_mul!(x942, x3, 13), 13), x894, 13),
                    x924,
                    13
                ),
                x3,
                13
            ),
            x3,
            13
        ),
        x943,
        13
    );
    eqz(ctx, &x947, 73156, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x945, x3, 13), x946, 13),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x937, bigint_sub!(x894, x943, 4), 8), x896, 8),
                    x3,
                    8
                ),
                x3,
                8
            ),
            13
        ),
        73156,
        4,
    )?;
    let x948: BytePoly_5 = bigint_add!(bigint_mul!(x943, x931, 5), bigint_mul!(x894, x933, 5), 5);
    let x949: BytePoly_5 = bigint_add!(bigint_mul!(x946, x931, 5), bigint_mul!(x896, x933, 5), 5);
    let x950: BytePoly_6 = bigint_nondet_quot!(ctx, x948, x3, 6);
    let x951: BytePoly_4 = bigint_nondet_rem!(ctx, x948, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x950, x3, 10), x951, 10), x948, 10),
        48771,
        4,
    )?;
    let x952: BytePoly_6 = bigint_nondet_quot!(ctx, x949, x3, 6);
    let x953: BytePoly_4 = bigint_nondet_rem!(ctx, x949, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x952, x3, 10), x953, 10), x949, 10),
        48771,
        4,
    )?;
    let x954: BytePoly_8 = bigint_mul!(x924, x924, 8);
    let x955: BytePoly_9 = bigint_nondet_quot!(ctx, x954, x3, 9);
    let x956: BytePoly_4 = bigint_nondet_rem!(ctx, x954, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x955, x3, 13), x956, 13), x954, 13),
        73156,
        4,
    )?;
    let x957: BytePoly_5 = bigint_add!(bigint_mul!(x956, x0, 5), x2, 5);
    let x958: BytePoly_6 = bigint_nondet_quot!(ctx, x957, x3, 6);
    let x959: BytePoly_4 = bigint_nondet_rem!(ctx, x957, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x958, x3, 10), x959, 10), x957, 10),
        48771,
        4,
    )?;
    let x960: BytePoly_4 = bigint_add!(x930, x930, 4);
    let x961: BytePoly_4 = bigint_nondet_quot!(ctx, x960, x3, 4);
    let x962: BytePoly_4 = bigint_nondet_rem!(ctx, x960, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x961, x3, 8), x962, 8), x960, 8),
        32515,
        2,
    )?;
    let x963: BytePoly_4 = bigint_nondet_inv!(ctx, x962, x3, 4);
    let x964: BytePoly_8 = bigint_mul!(x962, x963, 8);
    let x965: BytePoly_9 = bigint_nondet_quot!(ctx, x964, x3, 9);
    let x966: BytePoly_4 = bigint_nondet_rem!(ctx, x964, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x965, x3, 13), x966, 13), x964, 13),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x966, x5, 4), 34, 1)?;
    let x967: BytePoly_8 = bigint_mul!(x959, x963, 8);
    let x968: BytePoly_9 = bigint_nondet_quot!(ctx, x967, x3, 9);
    let x969: BytePoly_4 = bigint_nondet_rem!(ctx, x967, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x968, x3, 13), x969, 13), x967, 13),
        73156,
        4,
    )?;
    let x970: BytePoly_8 = bigint_mul!(x969, x924, 8);
    let x971: BytePoly_9 = bigint_nondet_quot!(ctx, x970, x3, 9);
    let x972: BytePoly_4 = bigint_nondet_rem!(ctx, x970, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x971, x3, 13), x972, 13), x970, 13),
        73156,
        4,
    )?;
    let x973: BytePoly_4 = bigint_add!(bigint_sub!(x930, x972, 4), x3, 4);
    let x974: BytePoly_4 = bigint_nondet_quot!(ctx, x973, x3, 4);
    let x975: BytePoly_4 = bigint_nondet_rem!(ctx, x973, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x974, x3, 8), x975, 8), x973, 8),
        32515,
        2,
    )?;
    let x976: BytePoly_8 = bigint_mul!(x969, x969, 8);
    let x977: BytePoly_9 = bigint_nondet_quot!(ctx, x976, x3, 9);
    let x978: BytePoly_4 = bigint_nondet_rem!(ctx, x976, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x977, x3, 13), x978, 13), x976, 13),
        73156,
        4,
    )?;
    let x979: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x978, x924, 4), x3, 4), x924, 4),
        x3,
        4
    );
    let x980: BytePoly_4 = bigint_nondet_quot!(ctx, x979, x3, 4);
    let x981: BytePoly_4 = bigint_nondet_rem!(ctx, x979, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x980, x3, 8), x981, 8), x979, 8),
        32515,
        2,
    )?;
    let x982: BytePoly_8 = bigint_mul!(x969, x981, 8);
    let x983: BytePoly_9 = bigint_nondet_quot!(ctx, x982, x3, 9);
    let x984: BytePoly_4 = bigint_nondet_rem!(ctx, x982, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x983, x3, 13), x984, 13), x982, 13),
        73156,
        4,
    )?;
    let x985: BytePoly_4 = bigint_add!(bigint_sub!(x3, bigint_add!(x984, x975, 4), 4), x3, 4);
    let x986: BytePoly_4 = bigint_nondet_quot!(ctx, x985, x3, 4);
    let x987: BytePoly_4 = bigint_nondet_rem!(ctx, x985, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x986, x3, 8), x987, 8), x985, 8),
        32515,
        2,
    )?;
    let x988: BytePoly_1 = bigint_nondet_rem!(ctx, x932, x4, 1);
    let x989: BytePoly_4 = bigint_nondet_quot!(ctx, x932, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x989, x4, 5), x988, 5), x932, 5),
        32515,
        2,
    )?;
    let x990: BytePoly_1 = bigint_sub!(x5, x988, 1);
    eqz(ctx, &bigint_mul!(x988, x990, 2), 8131, 2)?;
    let x991: BytePoly_4 = bigint_add!(bigint_sub!(x987, x953, 4), x3, 4);
    let x992: BytePoly_4 = bigint_add!(bigint_sub!(x981, x951, 4), x3, 4);
    let x993: BytePoly_4 = bigint_nondet_inv!(ctx, x992, x3, 4);
    let x994: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x991, x993, 8), x3, 4);
    let x995: BytePoly_8 = bigint_add!(bigint_sub!(bigint_mul!(x994, x992, 8), x991, 8), x3, 8);
    let x996: BytePoly_9 = bigint_nondet_quot!(ctx, x995, x3, 9);
    eqz(
        ctx,
        &bigint_sub!(x995, bigint_mul!(x996, x3, 13), 13),
        73156,
        4,
    )?;
    let x997: BytePoly_8 = bigint_mul!(x994, x994, 8);
    let x998: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x997, x951, 8), x3, 8), x981, 8),
        x3,
        8
    );
    let x999: BytePoly_9 = bigint_nondet_quot!(ctx, x998, x3, 9);
    let x1000: BytePoly_4 = bigint_nondet_rem!(ctx, x998, x3, 4);
    let x1001: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x3,
                bigint_add!(
                    bigint_mul!(x994, x1000, 8),
                    bigint_add!(bigint_sub!(x953, bigint_mul!(x994, x951, 8), 8), x3, 8),
                    8
                ),
                8
            ),
            x3,
            8
        ),
        x3,
        8
    );
    let x1002: BytePoly_9 = bigint_nondet_quot!(ctx, x1001, x3, 9);
    let x1003: BytePoly_4 = bigint_nondet_rem!(ctx, x1001, x3, 4);
    let x1004: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x997, bigint_mul!(x999, x3, 13), 13), x951, 13),
                    x981,
                    13
                ),
                x3,
                13
            ),
            x3,
            13
        ),
        x1000,
        13
    );
    eqz(ctx, &x1004, 73156, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1002, x3, 13), x1003, 13),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x994, bigint_sub!(x951, x1000, 4), 8), x953, 8),
                    x3,
                    8
                ),
                x3,
                8
            ),
            13
        ),
        73156,
        4,
    )?;
    let x1005: BytePoly_5 = bigint_add!(bigint_mul!(x1000, x988, 5), bigint_mul!(x951, x990, 5), 5);
    let x1006: BytePoly_5 = bigint_add!(bigint_mul!(x1003, x988, 5), bigint_mul!(x953, x990, 5), 5);
    let x1007: BytePoly_6 = bigint_nondet_quot!(ctx, x1005, x3, 6);
    let x1008: BytePoly_4 = bigint_nondet_rem!(ctx, x1005, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1007, x3, 10), x1008, 10),
            x1005,
            10
        ),
        48771,
        4,
    )?;
    let x1009: BytePoly_6 = bigint_nondet_quot!(ctx, x1006, x3, 6);
    let x1010: BytePoly_4 = bigint_nondet_rem!(ctx, x1006, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1009, x3, 10), x1010, 10),
            x1006,
            10
        ),
        48771,
        4,
    )?;
    let x1011: BytePoly_8 = bigint_mul!(x981, x981, 8);
    let x1012: BytePoly_9 = bigint_nondet_quot!(ctx, x1011, x3, 9);
    let x1013: BytePoly_4 = bigint_nondet_rem!(ctx, x1011, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1012, x3, 13), x1013, 13),
            x1011,
            13
        ),
        73156,
        4,
    )?;
    let x1014: BytePoly_5 = bigint_add!(bigint_mul!(x1013, x0, 5), x2, 5);
    let x1015: BytePoly_6 = bigint_nondet_quot!(ctx, x1014, x3, 6);
    let x1016: BytePoly_4 = bigint_nondet_rem!(ctx, x1014, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1015, x3, 10), x1016, 10),
            x1014,
            10
        ),
        48771,
        4,
    )?;
    let x1017: BytePoly_4 = bigint_add!(x987, x987, 4);
    let x1018: BytePoly_4 = bigint_nondet_quot!(ctx, x1017, x3, 4);
    let x1019: BytePoly_4 = bigint_nondet_rem!(ctx, x1017, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1018, x3, 8), x1019, 8), x1017, 8),
        32515,
        2,
    )?;
    let x1020: BytePoly_4 = bigint_nondet_inv!(ctx, x1019, x3, 4);
    let x1021: BytePoly_8 = bigint_mul!(x1019, x1020, 8);
    let x1022: BytePoly_9 = bigint_nondet_quot!(ctx, x1021, x3, 9);
    let x1023: BytePoly_4 = bigint_nondet_rem!(ctx, x1021, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1022, x3, 13), x1023, 13),
            x1021,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1023, x5, 4), 34, 1)?;
    let x1024: BytePoly_8 = bigint_mul!(x1016, x1020, 8);
    let x1025: BytePoly_9 = bigint_nondet_quot!(ctx, x1024, x3, 9);
    let x1026: BytePoly_4 = bigint_nondet_rem!(ctx, x1024, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1025, x3, 13), x1026, 13),
            x1024,
            13
        ),
        73156,
        4,
    )?;
    let x1027: BytePoly_8 = bigint_mul!(x1026, x981, 8);
    let x1028: BytePoly_9 = bigint_nondet_quot!(ctx, x1027, x3, 9);
    let x1029: BytePoly_4 = bigint_nondet_rem!(ctx, x1027, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1028, x3, 13), x1029, 13),
            x1027,
            13
        ),
        73156,
        4,
    )?;
    let x1030: BytePoly_4 = bigint_add!(bigint_sub!(x987, x1029, 4), x3, 4);
    let x1031: BytePoly_4 = bigint_nondet_quot!(ctx, x1030, x3, 4);
    let x1032: BytePoly_4 = bigint_nondet_rem!(ctx, x1030, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1031, x3, 8), x1032, 8), x1030, 8),
        32515,
        2,
    )?;
    let x1033: BytePoly_8 = bigint_mul!(x1026, x1026, 8);
    let x1034: BytePoly_9 = bigint_nondet_quot!(ctx, x1033, x3, 9);
    let x1035: BytePoly_4 = bigint_nondet_rem!(ctx, x1033, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1034, x3, 13), x1035, 13),
            x1033,
            13
        ),
        73156,
        4,
    )?;
    let x1036: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1035, x981, 4), x3, 4), x981, 4),
        x3,
        4
    );
    let x1037: BytePoly_4 = bigint_nondet_quot!(ctx, x1036, x3, 4);
    let x1038: BytePoly_4 = bigint_nondet_rem!(ctx, x1036, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1037, x3, 8), x1038, 8), x1036, 8),
        32515,
        2,
    )?;
    let x1039: BytePoly_8 = bigint_mul!(x1026, x1038, 8);
    let x1040: BytePoly_9 = bigint_nondet_quot!(ctx, x1039, x3, 9);
    let x1041: BytePoly_4 = bigint_nondet_rem!(ctx, x1039, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1040, x3, 13), x1041, 13),
            x1039,
            13
        ),
        73156,
        4,
    )?;
    let x1042: BytePoly_4 = bigint_add!(bigint_sub!(x3, bigint_add!(x1041, x1032, 4), 4), x3, 4);
    let x1043: BytePoly_4 = bigint_nondet_quot!(ctx, x1042, x3, 4);
    let x1044: BytePoly_4 = bigint_nondet_rem!(ctx, x1042, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1043, x3, 8), x1044, 8), x1042, 8),
        32515,
        2,
    )?;
    let x1045: BytePoly_1 = bigint_nondet_rem!(ctx, x989, x4, 1);
    let x1046: BytePoly_4 = bigint_nondet_quot!(ctx, x989, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1046, x4, 5), x1045, 5), x989, 5),
        32515,
        2,
    )?;
    let x1047: BytePoly_1 = bigint_sub!(x5, x1045, 1);
    eqz(ctx, &bigint_mul!(x1045, x1047, 2), 8131, 2)?;
    let x1048: BytePoly_4 = bigint_add!(bigint_sub!(x1044, x1010, 4), x3, 4);
    let x1049: BytePoly_4 = bigint_add!(bigint_sub!(x1038, x1008, 4), x3, 4);
    let x1050: BytePoly_4 = bigint_nondet_inv!(ctx, x1049, x3, 4);
    let x1051: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x1048, x1050, 8), x3, 4);
    let x1052: BytePoly_8 = bigint_add!(bigint_sub!(bigint_mul!(x1051, x1049, 8), x1048, 8), x3, 8);
    let x1053: BytePoly_9 = bigint_nondet_quot!(ctx, x1052, x3, 9);
    eqz(
        ctx,
        &bigint_sub!(x1052, bigint_mul!(x1053, x3, 13), 13),
        73156,
        4,
    )?;
    let x1054: BytePoly_8 = bigint_mul!(x1051, x1051, 8);
    let x1055: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1054, x1008, 8), x3, 8), x1038, 8),
        x3,
        8
    );
    let x1056: BytePoly_9 = bigint_nondet_quot!(ctx, x1055, x3, 9);
    let x1057: BytePoly_4 = bigint_nondet_rem!(ctx, x1055, x3, 4);
    let x1058: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x3,
                bigint_add!(
                    bigint_mul!(x1051, x1057, 8),
                    bigint_add!(bigint_sub!(x1010, bigint_mul!(x1051, x1008, 8), 8), x3, 8),
                    8
                ),
                8
            ),
            x3,
            8
        ),
        x3,
        8
    );
    let x1059: BytePoly_9 = bigint_nondet_quot!(ctx, x1058, x3, 9);
    let x1060: BytePoly_4 = bigint_nondet_rem!(ctx, x1058, x3, 4);
    let x1061: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1054, bigint_mul!(x1056, x3, 13), 13),
                        x1008,
                        13
                    ),
                    x1038,
                    13
                ),
                x3,
                13
            ),
            x3,
            13
        ),
        x1057,
        13
    );
    eqz(ctx, &x1061, 73156, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1059, x3, 13), x1060, 13),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1051, bigint_sub!(x1008, x1057, 4), 8),
                        x1010,
                        8
                    ),
                    x3,
                    8
                ),
                x3,
                8
            ),
            13
        ),
        73156,
        4,
    )?;
    let x1062: BytePoly_5 = bigint_add!(
        bigint_mul!(x1057, x1045, 5),
        bigint_mul!(x1008, x1047, 5),
        5
    );
    let x1063: BytePoly_5 = bigint_add!(
        bigint_mul!(x1060, x1045, 5),
        bigint_mul!(x1010, x1047, 5),
        5
    );
    let x1064: BytePoly_6 = bigint_nondet_quot!(ctx, x1062, x3, 6);
    let x1065: BytePoly_4 = bigint_nondet_rem!(ctx, x1062, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1064, x3, 10), x1065, 10),
            x1062,
            10
        ),
        48771,
        4,
    )?;
    let x1066: BytePoly_6 = bigint_nondet_quot!(ctx, x1063, x3, 6);
    let x1067: BytePoly_4 = bigint_nondet_rem!(ctx, x1063, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1066, x3, 10), x1067, 10),
            x1063,
            10
        ),
        48771,
        4,
    )?;
    let x1068: BytePoly_8 = bigint_mul!(x1038, x1038, 8);
    let x1069: BytePoly_9 = bigint_nondet_quot!(ctx, x1068, x3, 9);
    let x1070: BytePoly_4 = bigint_nondet_rem!(ctx, x1068, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1069, x3, 13), x1070, 13),
            x1068,
            13
        ),
        73156,
        4,
    )?;
    let x1071: BytePoly_5 = bigint_add!(bigint_mul!(x1070, x0, 5), x2, 5);
    let x1072: BytePoly_6 = bigint_nondet_quot!(ctx, x1071, x3, 6);
    let x1073: BytePoly_4 = bigint_nondet_rem!(ctx, x1071, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1072, x3, 10), x1073, 10),
            x1071,
            10
        ),
        48771,
        4,
    )?;
    let x1074: BytePoly_4 = bigint_add!(x1044, x1044, 4);
    let x1075: BytePoly_4 = bigint_nondet_quot!(ctx, x1074, x3, 4);
    let x1076: BytePoly_4 = bigint_nondet_rem!(ctx, x1074, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1075, x3, 8), x1076, 8), x1074, 8),
        32515,
        2,
    )?;
    let x1077: BytePoly_4 = bigint_nondet_inv!(ctx, x1076, x3, 4);
    let x1078: BytePoly_8 = bigint_mul!(x1076, x1077, 8);
    let x1079: BytePoly_9 = bigint_nondet_quot!(ctx, x1078, x3, 9);
    let x1080: BytePoly_4 = bigint_nondet_rem!(ctx, x1078, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1079, x3, 13), x1080, 13),
            x1078,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1080, x5, 4), 34, 1)?;
    let x1081: BytePoly_8 = bigint_mul!(x1073, x1077, 8);
    let x1082: BytePoly_9 = bigint_nondet_quot!(ctx, x1081, x3, 9);
    let x1083: BytePoly_4 = bigint_nondet_rem!(ctx, x1081, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1082, x3, 13), x1083, 13),
            x1081,
            13
        ),
        73156,
        4,
    )?;
    let x1084: BytePoly_8 = bigint_mul!(x1083, x1038, 8);
    let x1085: BytePoly_9 = bigint_nondet_quot!(ctx, x1084, x3, 9);
    let x1086: BytePoly_4 = bigint_nondet_rem!(ctx, x1084, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1085, x3, 13), x1086, 13),
            x1084,
            13
        ),
        73156,
        4,
    )?;
    let x1087: BytePoly_4 = bigint_add!(bigint_sub!(x1044, x1086, 4), x3, 4);
    let x1088: BytePoly_4 = bigint_nondet_quot!(ctx, x1087, x3, 4);
    let x1089: BytePoly_4 = bigint_nondet_rem!(ctx, x1087, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1088, x3, 8), x1089, 8), x1087, 8),
        32515,
        2,
    )?;
    let x1090: BytePoly_8 = bigint_mul!(x1083, x1083, 8);
    let x1091: BytePoly_9 = bigint_nondet_quot!(ctx, x1090, x3, 9);
    let x1092: BytePoly_4 = bigint_nondet_rem!(ctx, x1090, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1091, x3, 13), x1092, 13),
            x1090,
            13
        ),
        73156,
        4,
    )?;
    let x1093: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1092, x1038, 4), x3, 4), x1038, 4),
        x3,
        4
    );
    let x1094: BytePoly_4 = bigint_nondet_quot!(ctx, x1093, x3, 4);
    let x1095: BytePoly_4 = bigint_nondet_rem!(ctx, x1093, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1094, x3, 8), x1095, 8), x1093, 8),
        32515,
        2,
    )?;
    let x1096: BytePoly_8 = bigint_mul!(x1083, x1095, 8);
    let x1097: BytePoly_9 = bigint_nondet_quot!(ctx, x1096, x3, 9);
    let x1098: BytePoly_4 = bigint_nondet_rem!(ctx, x1096, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1097, x3, 13), x1098, 13),
            x1096,
            13
        ),
        73156,
        4,
    )?;
    let x1099: BytePoly_4 = bigint_add!(bigint_sub!(x3, bigint_add!(x1098, x1089, 4), 4), x3, 4);
    let x1100: BytePoly_4 = bigint_nondet_quot!(ctx, x1099, x3, 4);
    let x1101: BytePoly_4 = bigint_nondet_rem!(ctx, x1099, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1100, x3, 8), x1101, 8), x1099, 8),
        32515,
        2,
    )?;
    let x1102: BytePoly_1 = bigint_nondet_rem!(ctx, x1046, x4, 1);
    let x1103: BytePoly_4 = bigint_nondet_quot!(ctx, x1046, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1103, x4, 5), x1102, 5), x1046, 5),
        32515,
        2,
    )?;
    let x1104: BytePoly_1 = bigint_sub!(x5, x1102, 1);
    eqz(ctx, &bigint_mul!(x1102, x1104, 2), 8131, 2)?;
    let x1105: BytePoly_4 = bigint_add!(bigint_sub!(x1101, x1067, 4), x3, 4);
    let x1106: BytePoly_4 = bigint_add!(bigint_sub!(x1095, x1065, 4), x3, 4);
    let x1107: BytePoly_4 = bigint_nondet_inv!(ctx, x1106, x3, 4);
    let x1108: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x1105, x1107, 8), x3, 4);
    let x1109: BytePoly_8 = bigint_add!(bigint_sub!(bigint_mul!(x1108, x1106, 8), x1105, 8), x3, 8);
    let x1110: BytePoly_9 = bigint_nondet_quot!(ctx, x1109, x3, 9);
    eqz(
        ctx,
        &bigint_sub!(x1109, bigint_mul!(x1110, x3, 13), 13),
        73156,
        4,
    )?;
    let x1111: BytePoly_8 = bigint_mul!(x1108, x1108, 8);
    let x1112: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1111, x1065, 8), x3, 8), x1095, 8),
        x3,
        8
    );
    let x1113: BytePoly_9 = bigint_nondet_quot!(ctx, x1112, x3, 9);
    let x1114: BytePoly_4 = bigint_nondet_rem!(ctx, x1112, x3, 4);
    let x1115: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x3,
                bigint_add!(
                    bigint_mul!(x1108, x1114, 8),
                    bigint_add!(bigint_sub!(x1067, bigint_mul!(x1108, x1065, 8), 8), x3, 8),
                    8
                ),
                8
            ),
            x3,
            8
        ),
        x3,
        8
    );
    let x1116: BytePoly_9 = bigint_nondet_quot!(ctx, x1115, x3, 9);
    let x1117: BytePoly_4 = bigint_nondet_rem!(ctx, x1115, x3, 4);
    let x1118: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1111, bigint_mul!(x1113, x3, 13), 13),
                        x1065,
                        13
                    ),
                    x1095,
                    13
                ),
                x3,
                13
            ),
            x3,
            13
        ),
        x1114,
        13
    );
    eqz(ctx, &x1118, 73156, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1116, x3, 13), x1117, 13),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1108, bigint_sub!(x1065, x1114, 4), 8),
                        x1067,
                        8
                    ),
                    x3,
                    8
                ),
                x3,
                8
            ),
            13
        ),
        73156,
        4,
    )?;
    let x1119: BytePoly_5 = bigint_add!(
        bigint_mul!(x1114, x1102, 5),
        bigint_mul!(x1065, x1104, 5),
        5
    );
    let x1120: BytePoly_5 = bigint_add!(
        bigint_mul!(x1117, x1102, 5),
        bigint_mul!(x1067, x1104, 5),
        5
    );
    let x1121: BytePoly_6 = bigint_nondet_quot!(ctx, x1119, x3, 6);
    let x1122: BytePoly_4 = bigint_nondet_rem!(ctx, x1119, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1121, x3, 10), x1122, 10),
            x1119,
            10
        ),
        48771,
        4,
    )?;
    let x1123: BytePoly_6 = bigint_nondet_quot!(ctx, x1120, x3, 6);
    let x1124: BytePoly_4 = bigint_nondet_rem!(ctx, x1120, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1123, x3, 10), x1124, 10),
            x1120,
            10
        ),
        48771,
        4,
    )?;
    let x1125: BytePoly_8 = bigint_mul!(x1095, x1095, 8);
    let x1126: BytePoly_9 = bigint_nondet_quot!(ctx, x1125, x3, 9);
    let x1127: BytePoly_4 = bigint_nondet_rem!(ctx, x1125, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1126, x3, 13), x1127, 13),
            x1125,
            13
        ),
        73156,
        4,
    )?;
    let x1128: BytePoly_5 = bigint_add!(bigint_mul!(x1127, x0, 5), x2, 5);
    let x1129: BytePoly_6 = bigint_nondet_quot!(ctx, x1128, x3, 6);
    let x1130: BytePoly_4 = bigint_nondet_rem!(ctx, x1128, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1129, x3, 10), x1130, 10),
            x1128,
            10
        ),
        48771,
        4,
    )?;
    let x1131: BytePoly_4 = bigint_add!(x1101, x1101, 4);
    let x1132: BytePoly_4 = bigint_nondet_quot!(ctx, x1131, x3, 4);
    let x1133: BytePoly_4 = bigint_nondet_rem!(ctx, x1131, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1132, x3, 8), x1133, 8), x1131, 8),
        32515,
        2,
    )?;
    let x1134: BytePoly_4 = bigint_nondet_inv!(ctx, x1133, x3, 4);
    let x1135: BytePoly_8 = bigint_mul!(x1133, x1134, 8);
    let x1136: BytePoly_9 = bigint_nondet_quot!(ctx, x1135, x3, 9);
    let x1137: BytePoly_4 = bigint_nondet_rem!(ctx, x1135, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1136, x3, 13), x1137, 13),
            x1135,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1137, x5, 4), 34, 1)?;
    let x1138: BytePoly_8 = bigint_mul!(x1130, x1134, 8);
    let x1139: BytePoly_9 = bigint_nondet_quot!(ctx, x1138, x3, 9);
    let x1140: BytePoly_4 = bigint_nondet_rem!(ctx, x1138, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1139, x3, 13), x1140, 13),
            x1138,
            13
        ),
        73156,
        4,
    )?;
    let x1141: BytePoly_8 = bigint_mul!(x1140, x1095, 8);
    let x1142: BytePoly_9 = bigint_nondet_quot!(ctx, x1141, x3, 9);
    let x1143: BytePoly_4 = bigint_nondet_rem!(ctx, x1141, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1142, x3, 13), x1143, 13),
            x1141,
            13
        ),
        73156,
        4,
    )?;
    let x1144: BytePoly_4 = bigint_add!(bigint_sub!(x1101, x1143, 4), x3, 4);
    let x1145: BytePoly_4 = bigint_nondet_quot!(ctx, x1144, x3, 4);
    let x1146: BytePoly_4 = bigint_nondet_rem!(ctx, x1144, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1145, x3, 8), x1146, 8), x1144, 8),
        32515,
        2,
    )?;
    let x1147: BytePoly_8 = bigint_mul!(x1140, x1140, 8);
    let x1148: BytePoly_9 = bigint_nondet_quot!(ctx, x1147, x3, 9);
    let x1149: BytePoly_4 = bigint_nondet_rem!(ctx, x1147, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1148, x3, 13), x1149, 13),
            x1147,
            13
        ),
        73156,
        4,
    )?;
    let x1150: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1149, x1095, 4), x3, 4), x1095, 4),
        x3,
        4
    );
    let x1151: BytePoly_4 = bigint_nondet_quot!(ctx, x1150, x3, 4);
    let x1152: BytePoly_4 = bigint_nondet_rem!(ctx, x1150, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1151, x3, 8), x1152, 8), x1150, 8),
        32515,
        2,
    )?;
    let x1153: BytePoly_8 = bigint_mul!(x1140, x1152, 8);
    let x1154: BytePoly_9 = bigint_nondet_quot!(ctx, x1153, x3, 9);
    let x1155: BytePoly_4 = bigint_nondet_rem!(ctx, x1153, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1154, x3, 13), x1155, 13),
            x1153,
            13
        ),
        73156,
        4,
    )?;
    let x1156: BytePoly_4 = bigint_add!(bigint_sub!(x3, bigint_add!(x1155, x1146, 4), 4), x3, 4);
    let x1157: BytePoly_4 = bigint_nondet_quot!(ctx, x1156, x3, 4);
    let x1158: BytePoly_4 = bigint_nondet_rem!(ctx, x1156, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1157, x3, 8), x1158, 8), x1156, 8),
        32515,
        2,
    )?;
    let x1159: BytePoly_1 = bigint_nondet_rem!(ctx, x1103, x4, 1);
    let x1160: BytePoly_4 = bigint_nondet_quot!(ctx, x1103, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1160, x4, 5), x1159, 5), x1103, 5),
        32515,
        2,
    )?;
    let x1161: BytePoly_1 = bigint_sub!(x5, x1159, 1);
    eqz(ctx, &bigint_mul!(x1159, x1161, 2), 8131, 2)?;
    let x1162: BytePoly_4 = bigint_add!(bigint_sub!(x1158, x1124, 4), x3, 4);
    let x1163: BytePoly_4 = bigint_add!(bigint_sub!(x1152, x1122, 4), x3, 4);
    let x1164: BytePoly_4 = bigint_nondet_inv!(ctx, x1163, x3, 4);
    let x1165: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x1162, x1164, 8), x3, 4);
    let x1166: BytePoly_8 = bigint_add!(bigint_sub!(bigint_mul!(x1165, x1163, 8), x1162, 8), x3, 8);
    let x1167: BytePoly_9 = bigint_nondet_quot!(ctx, x1166, x3, 9);
    eqz(
        ctx,
        &bigint_sub!(x1166, bigint_mul!(x1167, x3, 13), 13),
        73156,
        4,
    )?;
    let x1168: BytePoly_8 = bigint_mul!(x1165, x1165, 8);
    let x1169: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1168, x1122, 8), x3, 8), x1152, 8),
        x3,
        8
    );
    let x1170: BytePoly_9 = bigint_nondet_quot!(ctx, x1169, x3, 9);
    let x1171: BytePoly_4 = bigint_nondet_rem!(ctx, x1169, x3, 4);
    let x1172: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x3,
                bigint_add!(
                    bigint_mul!(x1165, x1171, 8),
                    bigint_add!(bigint_sub!(x1124, bigint_mul!(x1165, x1122, 8), 8), x3, 8),
                    8
                ),
                8
            ),
            x3,
            8
        ),
        x3,
        8
    );
    let x1173: BytePoly_9 = bigint_nondet_quot!(ctx, x1172, x3, 9);
    let x1174: BytePoly_4 = bigint_nondet_rem!(ctx, x1172, x3, 4);
    let x1175: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1168, bigint_mul!(x1170, x3, 13), 13),
                        x1122,
                        13
                    ),
                    x1152,
                    13
                ),
                x3,
                13
            ),
            x3,
            13
        ),
        x1171,
        13
    );
    eqz(ctx, &x1175, 73156, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1173, x3, 13), x1174, 13),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1165, bigint_sub!(x1122, x1171, 4), 8),
                        x1124,
                        8
                    ),
                    x3,
                    8
                ),
                x3,
                8
            ),
            13
        ),
        73156,
        4,
    )?;
    let x1176: BytePoly_5 = bigint_add!(
        bigint_mul!(x1171, x1159, 5),
        bigint_mul!(x1122, x1161, 5),
        5
    );
    let x1177: BytePoly_5 = bigint_add!(
        bigint_mul!(x1174, x1159, 5),
        bigint_mul!(x1124, x1161, 5),
        5
    );
    let x1178: BytePoly_6 = bigint_nondet_quot!(ctx, x1176, x3, 6);
    let x1179: BytePoly_4 = bigint_nondet_rem!(ctx, x1176, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1178, x3, 10), x1179, 10),
            x1176,
            10
        ),
        48771,
        4,
    )?;
    let x1180: BytePoly_6 = bigint_nondet_quot!(ctx, x1177, x3, 6);
    let x1181: BytePoly_4 = bigint_nondet_rem!(ctx, x1177, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1180, x3, 10), x1181, 10),
            x1177,
            10
        ),
        48771,
        4,
    )?;
    let x1182: BytePoly_8 = bigint_mul!(x1152, x1152, 8);
    let x1183: BytePoly_9 = bigint_nondet_quot!(ctx, x1182, x3, 9);
    let x1184: BytePoly_4 = bigint_nondet_rem!(ctx, x1182, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1183, x3, 13), x1184, 13),
            x1182,
            13
        ),
        73156,
        4,
    )?;
    let x1185: BytePoly_5 = bigint_add!(bigint_mul!(x1184, x0, 5), x2, 5);
    let x1186: BytePoly_6 = bigint_nondet_quot!(ctx, x1185, x3, 6);
    let x1187: BytePoly_4 = bigint_nondet_rem!(ctx, x1185, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1186, x3, 10), x1187, 10),
            x1185,
            10
        ),
        48771,
        4,
    )?;
    let x1188: BytePoly_4 = bigint_add!(x1158, x1158, 4);
    let x1189: BytePoly_4 = bigint_nondet_quot!(ctx, x1188, x3, 4);
    let x1190: BytePoly_4 = bigint_nondet_rem!(ctx, x1188, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1189, x3, 8), x1190, 8), x1188, 8),
        32515,
        2,
    )?;
    let x1191: BytePoly_4 = bigint_nondet_inv!(ctx, x1190, x3, 4);
    let x1192: BytePoly_8 = bigint_mul!(x1190, x1191, 8);
    let x1193: BytePoly_9 = bigint_nondet_quot!(ctx, x1192, x3, 9);
    let x1194: BytePoly_4 = bigint_nondet_rem!(ctx, x1192, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1193, x3, 13), x1194, 13),
            x1192,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1194, x5, 4), 34, 1)?;
    let x1195: BytePoly_8 = bigint_mul!(x1187, x1191, 8);
    let x1196: BytePoly_9 = bigint_nondet_quot!(ctx, x1195, x3, 9);
    let x1197: BytePoly_4 = bigint_nondet_rem!(ctx, x1195, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1196, x3, 13), x1197, 13),
            x1195,
            13
        ),
        73156,
        4,
    )?;
    let x1198: BytePoly_8 = bigint_mul!(x1197, x1152, 8);
    let x1199: BytePoly_9 = bigint_nondet_quot!(ctx, x1198, x3, 9);
    let x1200: BytePoly_4 = bigint_nondet_rem!(ctx, x1198, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1199, x3, 13), x1200, 13),
            x1198,
            13
        ),
        73156,
        4,
    )?;
    let x1201: BytePoly_4 = bigint_add!(bigint_sub!(x1158, x1200, 4), x3, 4);
    let x1202: BytePoly_4 = bigint_nondet_quot!(ctx, x1201, x3, 4);
    let x1203: BytePoly_4 = bigint_nondet_rem!(ctx, x1201, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1202, x3, 8), x1203, 8), x1201, 8),
        32515,
        2,
    )?;
    let x1204: BytePoly_8 = bigint_mul!(x1197, x1197, 8);
    let x1205: BytePoly_9 = bigint_nondet_quot!(ctx, x1204, x3, 9);
    let x1206: BytePoly_4 = bigint_nondet_rem!(ctx, x1204, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1205, x3, 13), x1206, 13),
            x1204,
            13
        ),
        73156,
        4,
    )?;
    let x1207: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1206, x1152, 4), x3, 4), x1152, 4),
        x3,
        4
    );
    let x1208: BytePoly_4 = bigint_nondet_quot!(ctx, x1207, x3, 4);
    let x1209: BytePoly_4 = bigint_nondet_rem!(ctx, x1207, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1208, x3, 8), x1209, 8), x1207, 8),
        32515,
        2,
    )?;
    let x1210: BytePoly_8 = bigint_mul!(x1197, x1209, 8);
    let x1211: BytePoly_9 = bigint_nondet_quot!(ctx, x1210, x3, 9);
    let x1212: BytePoly_4 = bigint_nondet_rem!(ctx, x1210, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1211, x3, 13), x1212, 13),
            x1210,
            13
        ),
        73156,
        4,
    )?;
    let x1213: BytePoly_4 = bigint_add!(bigint_sub!(x3, bigint_add!(x1212, x1203, 4), 4), x3, 4);
    let x1214: BytePoly_4 = bigint_nondet_quot!(ctx, x1213, x3, 4);
    let x1215: BytePoly_4 = bigint_nondet_rem!(ctx, x1213, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1214, x3, 8), x1215, 8), x1213, 8),
        32515,
        2,
    )?;
    let x1216: BytePoly_1 = bigint_nondet_rem!(ctx, x1160, x4, 1);
    let x1217: BytePoly_4 = bigint_nondet_quot!(ctx, x1160, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1217, x4, 5), x1216, 5), x1160, 5),
        32515,
        2,
    )?;
    let x1218: BytePoly_1 = bigint_sub!(x5, x1216, 1);
    eqz(ctx, &bigint_mul!(x1216, x1218, 2), 8131, 2)?;
    let x1219: BytePoly_4 = bigint_add!(bigint_sub!(x1215, x1181, 4), x3, 4);
    let x1220: BytePoly_4 = bigint_add!(bigint_sub!(x1209, x1179, 4), x3, 4);
    let x1221: BytePoly_4 = bigint_nondet_inv!(ctx, x1220, x3, 4);
    let x1222: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x1219, x1221, 8), x3, 4);
    let x1223: BytePoly_8 = bigint_add!(bigint_sub!(bigint_mul!(x1222, x1220, 8), x1219, 8), x3, 8);
    let x1224: BytePoly_9 = bigint_nondet_quot!(ctx, x1223, x3, 9);
    eqz(
        ctx,
        &bigint_sub!(x1223, bigint_mul!(x1224, x3, 13), 13),
        73156,
        4,
    )?;
    let x1225: BytePoly_8 = bigint_mul!(x1222, x1222, 8);
    let x1226: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1225, x1179, 8), x3, 8), x1209, 8),
        x3,
        8
    );
    let x1227: BytePoly_9 = bigint_nondet_quot!(ctx, x1226, x3, 9);
    let x1228: BytePoly_4 = bigint_nondet_rem!(ctx, x1226, x3, 4);
    let x1229: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x3,
                bigint_add!(
                    bigint_mul!(x1222, x1228, 8),
                    bigint_add!(bigint_sub!(x1181, bigint_mul!(x1222, x1179, 8), 8), x3, 8),
                    8
                ),
                8
            ),
            x3,
            8
        ),
        x3,
        8
    );
    let x1230: BytePoly_9 = bigint_nondet_quot!(ctx, x1229, x3, 9);
    let x1231: BytePoly_4 = bigint_nondet_rem!(ctx, x1229, x3, 4);
    let x1232: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1225, bigint_mul!(x1227, x3, 13), 13),
                        x1179,
                        13
                    ),
                    x1209,
                    13
                ),
                x3,
                13
            ),
            x3,
            13
        ),
        x1228,
        13
    );
    eqz(ctx, &x1232, 73156, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1230, x3, 13), x1231, 13),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1222, bigint_sub!(x1179, x1228, 4), 8),
                        x1181,
                        8
                    ),
                    x3,
                    8
                ),
                x3,
                8
            ),
            13
        ),
        73156,
        4,
    )?;
    let x1233: BytePoly_5 = bigint_add!(
        bigint_mul!(x1228, x1216, 5),
        bigint_mul!(x1179, x1218, 5),
        5
    );
    let x1234: BytePoly_5 = bigint_add!(
        bigint_mul!(x1231, x1216, 5),
        bigint_mul!(x1181, x1218, 5),
        5
    );
    let x1235: BytePoly_6 = bigint_nondet_quot!(ctx, x1233, x3, 6);
    let x1236: BytePoly_4 = bigint_nondet_rem!(ctx, x1233, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1235, x3, 10), x1236, 10),
            x1233,
            10
        ),
        48771,
        4,
    )?;
    let x1237: BytePoly_6 = bigint_nondet_quot!(ctx, x1234, x3, 6);
    let x1238: BytePoly_4 = bigint_nondet_rem!(ctx, x1234, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1237, x3, 10), x1238, 10),
            x1234,
            10
        ),
        48771,
        4,
    )?;
    let x1239: BytePoly_8 = bigint_mul!(x1209, x1209, 8);
    let x1240: BytePoly_9 = bigint_nondet_quot!(ctx, x1239, x3, 9);
    let x1241: BytePoly_4 = bigint_nondet_rem!(ctx, x1239, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1240, x3, 13), x1241, 13),
            x1239,
            13
        ),
        73156,
        4,
    )?;
    let x1242: BytePoly_5 = bigint_add!(bigint_mul!(x1241, x0, 5), x2, 5);
    let x1243: BytePoly_6 = bigint_nondet_quot!(ctx, x1242, x3, 6);
    let x1244: BytePoly_4 = bigint_nondet_rem!(ctx, x1242, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1243, x3, 10), x1244, 10),
            x1242,
            10
        ),
        48771,
        4,
    )?;
    let x1245: BytePoly_4 = bigint_add!(x1215, x1215, 4);
    let x1246: BytePoly_4 = bigint_nondet_quot!(ctx, x1245, x3, 4);
    let x1247: BytePoly_4 = bigint_nondet_rem!(ctx, x1245, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1246, x3, 8), x1247, 8), x1245, 8),
        32515,
        2,
    )?;
    let x1248: BytePoly_4 = bigint_nondet_inv!(ctx, x1247, x3, 4);
    let x1249: BytePoly_8 = bigint_mul!(x1247, x1248, 8);
    let x1250: BytePoly_9 = bigint_nondet_quot!(ctx, x1249, x3, 9);
    let x1251: BytePoly_4 = bigint_nondet_rem!(ctx, x1249, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1250, x3, 13), x1251, 13),
            x1249,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1251, x5, 4), 34, 1)?;
    let x1252: BytePoly_8 = bigint_mul!(x1244, x1248, 8);
    let x1253: BytePoly_9 = bigint_nondet_quot!(ctx, x1252, x3, 9);
    let x1254: BytePoly_4 = bigint_nondet_rem!(ctx, x1252, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1253, x3, 13), x1254, 13),
            x1252,
            13
        ),
        73156,
        4,
    )?;
    let x1255: BytePoly_8 = bigint_mul!(x1254, x1209, 8);
    let x1256: BytePoly_9 = bigint_nondet_quot!(ctx, x1255, x3, 9);
    let x1257: BytePoly_4 = bigint_nondet_rem!(ctx, x1255, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1256, x3, 13), x1257, 13),
            x1255,
            13
        ),
        73156,
        4,
    )?;
    let x1258: BytePoly_4 = bigint_add!(bigint_sub!(x1215, x1257, 4), x3, 4);
    let x1259: BytePoly_4 = bigint_nondet_quot!(ctx, x1258, x3, 4);
    let x1260: BytePoly_4 = bigint_nondet_rem!(ctx, x1258, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1259, x3, 8), x1260, 8), x1258, 8),
        32515,
        2,
    )?;
    let x1261: BytePoly_8 = bigint_mul!(x1254, x1254, 8);
    let x1262: BytePoly_9 = bigint_nondet_quot!(ctx, x1261, x3, 9);
    let x1263: BytePoly_4 = bigint_nondet_rem!(ctx, x1261, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1262, x3, 13), x1263, 13),
            x1261,
            13
        ),
        73156,
        4,
    )?;
    let x1264: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1263, x1209, 4), x3, 4), x1209, 4),
        x3,
        4
    );
    let x1265: BytePoly_4 = bigint_nondet_quot!(ctx, x1264, x3, 4);
    let x1266: BytePoly_4 = bigint_nondet_rem!(ctx, x1264, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1265, x3, 8), x1266, 8), x1264, 8),
        32515,
        2,
    )?;
    let x1267: BytePoly_8 = bigint_mul!(x1254, x1266, 8);
    let x1268: BytePoly_9 = bigint_nondet_quot!(ctx, x1267, x3, 9);
    let x1269: BytePoly_4 = bigint_nondet_rem!(ctx, x1267, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1268, x3, 13), x1269, 13),
            x1267,
            13
        ),
        73156,
        4,
    )?;
    let x1270: BytePoly_4 = bigint_add!(bigint_sub!(x3, bigint_add!(x1269, x1260, 4), 4), x3, 4);
    let x1271: BytePoly_4 = bigint_nondet_quot!(ctx, x1270, x3, 4);
    let x1272: BytePoly_4 = bigint_nondet_rem!(ctx, x1270, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1271, x3, 8), x1272, 8), x1270, 8),
        32515,
        2,
    )?;
    let x1273: BytePoly_1 = bigint_nondet_rem!(ctx, x1217, x4, 1);
    let x1274: BytePoly_4 = bigint_nondet_quot!(ctx, x1217, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1274, x4, 5), x1273, 5), x1217, 5),
        32515,
        2,
    )?;
    let x1275: BytePoly_1 = bigint_sub!(x5, x1273, 1);
    eqz(ctx, &bigint_mul!(x1273, x1275, 2), 8131, 2)?;
    let x1276: BytePoly_4 = bigint_add!(bigint_sub!(x1272, x1238, 4), x3, 4);
    let x1277: BytePoly_4 = bigint_add!(bigint_sub!(x1266, x1236, 4), x3, 4);
    let x1278: BytePoly_4 = bigint_nondet_inv!(ctx, x1277, x3, 4);
    let x1279: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x1276, x1278, 8), x3, 4);
    let x1280: BytePoly_8 = bigint_add!(bigint_sub!(bigint_mul!(x1279, x1277, 8), x1276, 8), x3, 8);
    let x1281: BytePoly_9 = bigint_nondet_quot!(ctx, x1280, x3, 9);
    eqz(
        ctx,
        &bigint_sub!(x1280, bigint_mul!(x1281, x3, 13), 13),
        73156,
        4,
    )?;
    let x1282: BytePoly_8 = bigint_mul!(x1279, x1279, 8);
    let x1283: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1282, x1236, 8), x3, 8), x1266, 8),
        x3,
        8
    );
    let x1284: BytePoly_9 = bigint_nondet_quot!(ctx, x1283, x3, 9);
    let x1285: BytePoly_4 = bigint_nondet_rem!(ctx, x1283, x3, 4);
    let x1286: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x3,
                bigint_add!(
                    bigint_mul!(x1279, x1285, 8),
                    bigint_add!(bigint_sub!(x1238, bigint_mul!(x1279, x1236, 8), 8), x3, 8),
                    8
                ),
                8
            ),
            x3,
            8
        ),
        x3,
        8
    );
    let x1287: BytePoly_9 = bigint_nondet_quot!(ctx, x1286, x3, 9);
    let x1288: BytePoly_4 = bigint_nondet_rem!(ctx, x1286, x3, 4);
    let x1289: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1282, bigint_mul!(x1284, x3, 13), 13),
                        x1236,
                        13
                    ),
                    x1266,
                    13
                ),
                x3,
                13
            ),
            x3,
            13
        ),
        x1285,
        13
    );
    eqz(ctx, &x1289, 73156, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1287, x3, 13), x1288, 13),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1279, bigint_sub!(x1236, x1285, 4), 8),
                        x1238,
                        8
                    ),
                    x3,
                    8
                ),
                x3,
                8
            ),
            13
        ),
        73156,
        4,
    )?;
    let x1290: BytePoly_5 = bigint_add!(
        bigint_mul!(x1285, x1273, 5),
        bigint_mul!(x1236, x1275, 5),
        5
    );
    let x1291: BytePoly_5 = bigint_add!(
        bigint_mul!(x1288, x1273, 5),
        bigint_mul!(x1238, x1275, 5),
        5
    );
    let x1292: BytePoly_6 = bigint_nondet_quot!(ctx, x1290, x3, 6);
    let x1293: BytePoly_4 = bigint_nondet_rem!(ctx, x1290, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1292, x3, 10), x1293, 10),
            x1290,
            10
        ),
        48771,
        4,
    )?;
    let x1294: BytePoly_6 = bigint_nondet_quot!(ctx, x1291, x3, 6);
    let x1295: BytePoly_4 = bigint_nondet_rem!(ctx, x1291, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1294, x3, 10), x1295, 10),
            x1291,
            10
        ),
        48771,
        4,
    )?;
    let x1296: BytePoly_8 = bigint_mul!(x1266, x1266, 8);
    let x1297: BytePoly_9 = bigint_nondet_quot!(ctx, x1296, x3, 9);
    let x1298: BytePoly_4 = bigint_nondet_rem!(ctx, x1296, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1297, x3, 13), x1298, 13),
            x1296,
            13
        ),
        73156,
        4,
    )?;
    let x1299: BytePoly_5 = bigint_add!(bigint_mul!(x1298, x0, 5), x2, 5);
    let x1300: BytePoly_6 = bigint_nondet_quot!(ctx, x1299, x3, 6);
    let x1301: BytePoly_4 = bigint_nondet_rem!(ctx, x1299, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1300, x3, 10), x1301, 10),
            x1299,
            10
        ),
        48771,
        4,
    )?;
    let x1302: BytePoly_4 = bigint_add!(x1272, x1272, 4);
    let x1303: BytePoly_4 = bigint_nondet_quot!(ctx, x1302, x3, 4);
    let x1304: BytePoly_4 = bigint_nondet_rem!(ctx, x1302, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1303, x3, 8), x1304, 8), x1302, 8),
        32515,
        2,
    )?;
    let x1305: BytePoly_4 = bigint_nondet_inv!(ctx, x1304, x3, 4);
    let x1306: BytePoly_8 = bigint_mul!(x1304, x1305, 8);
    let x1307: BytePoly_9 = bigint_nondet_quot!(ctx, x1306, x3, 9);
    let x1308: BytePoly_4 = bigint_nondet_rem!(ctx, x1306, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1307, x3, 13), x1308, 13),
            x1306,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1308, x5, 4), 34, 1)?;
    let x1309: BytePoly_8 = bigint_mul!(x1301, x1305, 8);
    let x1310: BytePoly_9 = bigint_nondet_quot!(ctx, x1309, x3, 9);
    let x1311: BytePoly_4 = bigint_nondet_rem!(ctx, x1309, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1310, x3, 13), x1311, 13),
            x1309,
            13
        ),
        73156,
        4,
    )?;
    let x1312: BytePoly_8 = bigint_mul!(x1311, x1266, 8);
    let x1313: BytePoly_9 = bigint_nondet_quot!(ctx, x1312, x3, 9);
    let x1314: BytePoly_4 = bigint_nondet_rem!(ctx, x1312, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1313, x3, 13), x1314, 13),
            x1312,
            13
        ),
        73156,
        4,
    )?;
    let x1315: BytePoly_4 = bigint_add!(bigint_sub!(x1272, x1314, 4), x3, 4);
    let x1316: BytePoly_4 = bigint_nondet_quot!(ctx, x1315, x3, 4);
    let x1317: BytePoly_4 = bigint_nondet_rem!(ctx, x1315, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1316, x3, 8), x1317, 8), x1315, 8),
        32515,
        2,
    )?;
    let x1318: BytePoly_8 = bigint_mul!(x1311, x1311, 8);
    let x1319: BytePoly_9 = bigint_nondet_quot!(ctx, x1318, x3, 9);
    let x1320: BytePoly_4 = bigint_nondet_rem!(ctx, x1318, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1319, x3, 13), x1320, 13),
            x1318,
            13
        ),
        73156,
        4,
    )?;
    let x1321: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1320, x1266, 4), x3, 4), x1266, 4),
        x3,
        4
    );
    let x1322: BytePoly_4 = bigint_nondet_quot!(ctx, x1321, x3, 4);
    let x1323: BytePoly_4 = bigint_nondet_rem!(ctx, x1321, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1322, x3, 8), x1323, 8), x1321, 8),
        32515,
        2,
    )?;
    let x1324: BytePoly_8 = bigint_mul!(x1311, x1323, 8);
    let x1325: BytePoly_9 = bigint_nondet_quot!(ctx, x1324, x3, 9);
    let x1326: BytePoly_4 = bigint_nondet_rem!(ctx, x1324, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1325, x3, 13), x1326, 13),
            x1324,
            13
        ),
        73156,
        4,
    )?;
    let x1327: BytePoly_4 = bigint_add!(bigint_sub!(x3, bigint_add!(x1326, x1317, 4), 4), x3, 4);
    let x1328: BytePoly_4 = bigint_nondet_quot!(ctx, x1327, x3, 4);
    let x1329: BytePoly_4 = bigint_nondet_rem!(ctx, x1327, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1328, x3, 8), x1329, 8), x1327, 8),
        32515,
        2,
    )?;
    let x1330: BytePoly_1 = bigint_nondet_rem!(ctx, x1274, x4, 1);
    let x1331: BytePoly_4 = bigint_nondet_quot!(ctx, x1274, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1331, x4, 5), x1330, 5), x1274, 5),
        32515,
        2,
    )?;
    let x1332: BytePoly_1 = bigint_sub!(x5, x1330, 1);
    eqz(ctx, &bigint_mul!(x1330, x1332, 2), 8131, 2)?;
    let x1333: BytePoly_4 = bigint_add!(bigint_sub!(x1329, x1295, 4), x3, 4);
    let x1334: BytePoly_4 = bigint_add!(bigint_sub!(x1323, x1293, 4), x3, 4);
    let x1335: BytePoly_4 = bigint_nondet_inv!(ctx, x1334, x3, 4);
    let x1336: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x1333, x1335, 8), x3, 4);
    let x1337: BytePoly_8 = bigint_add!(bigint_sub!(bigint_mul!(x1336, x1334, 8), x1333, 8), x3, 8);
    let x1338: BytePoly_9 = bigint_nondet_quot!(ctx, x1337, x3, 9);
    eqz(
        ctx,
        &bigint_sub!(x1337, bigint_mul!(x1338, x3, 13), 13),
        73156,
        4,
    )?;
    let x1339: BytePoly_8 = bigint_mul!(x1336, x1336, 8);
    let x1340: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1339, x1293, 8), x3, 8), x1323, 8),
        x3,
        8
    );
    let x1341: BytePoly_9 = bigint_nondet_quot!(ctx, x1340, x3, 9);
    let x1342: BytePoly_4 = bigint_nondet_rem!(ctx, x1340, x3, 4);
    let x1343: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x3,
                bigint_add!(
                    bigint_mul!(x1336, x1342, 8),
                    bigint_add!(bigint_sub!(x1295, bigint_mul!(x1336, x1293, 8), 8), x3, 8),
                    8
                ),
                8
            ),
            x3,
            8
        ),
        x3,
        8
    );
    let x1344: BytePoly_9 = bigint_nondet_quot!(ctx, x1343, x3, 9);
    let x1345: BytePoly_4 = bigint_nondet_rem!(ctx, x1343, x3, 4);
    let x1346: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1339, bigint_mul!(x1341, x3, 13), 13),
                        x1293,
                        13
                    ),
                    x1323,
                    13
                ),
                x3,
                13
            ),
            x3,
            13
        ),
        x1342,
        13
    );
    eqz(ctx, &x1346, 73156, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1344, x3, 13), x1345, 13),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1336, bigint_sub!(x1293, x1342, 4), 8),
                        x1295,
                        8
                    ),
                    x3,
                    8
                ),
                x3,
                8
            ),
            13
        ),
        73156,
        4,
    )?;
    let x1347: BytePoly_5 = bigint_add!(
        bigint_mul!(x1342, x1330, 5),
        bigint_mul!(x1293, x1332, 5),
        5
    );
    let x1348: BytePoly_5 = bigint_add!(
        bigint_mul!(x1345, x1330, 5),
        bigint_mul!(x1295, x1332, 5),
        5
    );
    let x1349: BytePoly_6 = bigint_nondet_quot!(ctx, x1347, x3, 6);
    let x1350: BytePoly_4 = bigint_nondet_rem!(ctx, x1347, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1349, x3, 10), x1350, 10),
            x1347,
            10
        ),
        48771,
        4,
    )?;
    let x1351: BytePoly_6 = bigint_nondet_quot!(ctx, x1348, x3, 6);
    let x1352: BytePoly_4 = bigint_nondet_rem!(ctx, x1348, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1351, x3, 10), x1352, 10),
            x1348,
            10
        ),
        48771,
        4,
    )?;
    let x1353: BytePoly_8 = bigint_mul!(x1323, x1323, 8);
    let x1354: BytePoly_9 = bigint_nondet_quot!(ctx, x1353, x3, 9);
    let x1355: BytePoly_4 = bigint_nondet_rem!(ctx, x1353, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1354, x3, 13), x1355, 13),
            x1353,
            13
        ),
        73156,
        4,
    )?;
    let x1356: BytePoly_5 = bigint_add!(bigint_mul!(x1355, x0, 5), x2, 5);
    let x1357: BytePoly_6 = bigint_nondet_quot!(ctx, x1356, x3, 6);
    let x1358: BytePoly_4 = bigint_nondet_rem!(ctx, x1356, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1357, x3, 10), x1358, 10),
            x1356,
            10
        ),
        48771,
        4,
    )?;
    let x1359: BytePoly_4 = bigint_add!(x1329, x1329, 4);
    let x1360: BytePoly_4 = bigint_nondet_quot!(ctx, x1359, x3, 4);
    let x1361: BytePoly_4 = bigint_nondet_rem!(ctx, x1359, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1360, x3, 8), x1361, 8), x1359, 8),
        32515,
        2,
    )?;
    let x1362: BytePoly_4 = bigint_nondet_inv!(ctx, x1361, x3, 4);
    let x1363: BytePoly_8 = bigint_mul!(x1361, x1362, 8);
    let x1364: BytePoly_9 = bigint_nondet_quot!(ctx, x1363, x3, 9);
    let x1365: BytePoly_4 = bigint_nondet_rem!(ctx, x1363, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1364, x3, 13), x1365, 13),
            x1363,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1365, x5, 4), 34, 1)?;
    let x1366: BytePoly_8 = bigint_mul!(x1358, x1362, 8);
    let x1367: BytePoly_9 = bigint_nondet_quot!(ctx, x1366, x3, 9);
    let x1368: BytePoly_4 = bigint_nondet_rem!(ctx, x1366, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1367, x3, 13), x1368, 13),
            x1366,
            13
        ),
        73156,
        4,
    )?;
    let x1369: BytePoly_8 = bigint_mul!(x1368, x1323, 8);
    let x1370: BytePoly_9 = bigint_nondet_quot!(ctx, x1369, x3, 9);
    let x1371: BytePoly_4 = bigint_nondet_rem!(ctx, x1369, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1370, x3, 13), x1371, 13),
            x1369,
            13
        ),
        73156,
        4,
    )?;
    let x1372: BytePoly_4 = bigint_add!(bigint_sub!(x1329, x1371, 4), x3, 4);
    let x1373: BytePoly_4 = bigint_nondet_quot!(ctx, x1372, x3, 4);
    let x1374: BytePoly_4 = bigint_nondet_rem!(ctx, x1372, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1373, x3, 8), x1374, 8), x1372, 8),
        32515,
        2,
    )?;
    let x1375: BytePoly_8 = bigint_mul!(x1368, x1368, 8);
    let x1376: BytePoly_9 = bigint_nondet_quot!(ctx, x1375, x3, 9);
    let x1377: BytePoly_4 = bigint_nondet_rem!(ctx, x1375, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1376, x3, 13), x1377, 13),
            x1375,
            13
        ),
        73156,
        4,
    )?;
    let x1378: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1377, x1323, 4), x3, 4), x1323, 4),
        x3,
        4
    );
    let x1379: BytePoly_4 = bigint_nondet_quot!(ctx, x1378, x3, 4);
    let x1380: BytePoly_4 = bigint_nondet_rem!(ctx, x1378, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1379, x3, 8), x1380, 8), x1378, 8),
        32515,
        2,
    )?;
    let x1381: BytePoly_8 = bigint_mul!(x1368, x1380, 8);
    let x1382: BytePoly_9 = bigint_nondet_quot!(ctx, x1381, x3, 9);
    let x1383: BytePoly_4 = bigint_nondet_rem!(ctx, x1381, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1382, x3, 13), x1383, 13),
            x1381,
            13
        ),
        73156,
        4,
    )?;
    let x1384: BytePoly_4 = bigint_add!(bigint_sub!(x3, bigint_add!(x1383, x1374, 4), 4), x3, 4);
    let x1385: BytePoly_4 = bigint_nondet_quot!(ctx, x1384, x3, 4);
    let x1386: BytePoly_4 = bigint_nondet_rem!(ctx, x1384, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1385, x3, 8), x1386, 8), x1384, 8),
        32515,
        2,
    )?;
    let x1387: BytePoly_1 = bigint_nondet_rem!(ctx, x1331, x4, 1);
    let x1388: BytePoly_4 = bigint_nondet_quot!(ctx, x1331, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1388, x4, 5), x1387, 5), x1331, 5),
        32515,
        2,
    )?;
    let x1389: BytePoly_1 = bigint_sub!(x5, x1387, 1);
    eqz(ctx, &bigint_mul!(x1387, x1389, 2), 8131, 2)?;
    let x1390: BytePoly_4 = bigint_add!(bigint_sub!(x1386, x1352, 4), x3, 4);
    let x1391: BytePoly_4 = bigint_add!(bigint_sub!(x1380, x1350, 4), x3, 4);
    let x1392: BytePoly_4 = bigint_nondet_inv!(ctx, x1391, x3, 4);
    let x1393: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x1390, x1392, 8), x3, 4);
    let x1394: BytePoly_8 = bigint_add!(bigint_sub!(bigint_mul!(x1393, x1391, 8), x1390, 8), x3, 8);
    let x1395: BytePoly_9 = bigint_nondet_quot!(ctx, x1394, x3, 9);
    eqz(
        ctx,
        &bigint_sub!(x1394, bigint_mul!(x1395, x3, 13), 13),
        73156,
        4,
    )?;
    let x1396: BytePoly_8 = bigint_mul!(x1393, x1393, 8);
    let x1397: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1396, x1350, 8), x3, 8), x1380, 8),
        x3,
        8
    );
    let x1398: BytePoly_9 = bigint_nondet_quot!(ctx, x1397, x3, 9);
    let x1399: BytePoly_4 = bigint_nondet_rem!(ctx, x1397, x3, 4);
    let x1400: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x3,
                bigint_add!(
                    bigint_mul!(x1393, x1399, 8),
                    bigint_add!(bigint_sub!(x1352, bigint_mul!(x1393, x1350, 8), 8), x3, 8),
                    8
                ),
                8
            ),
            x3,
            8
        ),
        x3,
        8
    );
    let x1401: BytePoly_9 = bigint_nondet_quot!(ctx, x1400, x3, 9);
    let x1402: BytePoly_4 = bigint_nondet_rem!(ctx, x1400, x3, 4);
    let x1403: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1396, bigint_mul!(x1398, x3, 13), 13),
                        x1350,
                        13
                    ),
                    x1380,
                    13
                ),
                x3,
                13
            ),
            x3,
            13
        ),
        x1399,
        13
    );
    eqz(ctx, &x1403, 73156, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1401, x3, 13), x1402, 13),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1393, bigint_sub!(x1350, x1399, 4), 8),
                        x1352,
                        8
                    ),
                    x3,
                    8
                ),
                x3,
                8
            ),
            13
        ),
        73156,
        4,
    )?;
    let x1404: BytePoly_5 = bigint_add!(
        bigint_mul!(x1399, x1387, 5),
        bigint_mul!(x1350, x1389, 5),
        5
    );
    let x1405: BytePoly_5 = bigint_add!(
        bigint_mul!(x1402, x1387, 5),
        bigint_mul!(x1352, x1389, 5),
        5
    );
    let x1406: BytePoly_6 = bigint_nondet_quot!(ctx, x1404, x3, 6);
    let x1407: BytePoly_4 = bigint_nondet_rem!(ctx, x1404, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1406, x3, 10), x1407, 10),
            x1404,
            10
        ),
        48771,
        4,
    )?;
    let x1408: BytePoly_6 = bigint_nondet_quot!(ctx, x1405, x3, 6);
    let x1409: BytePoly_4 = bigint_nondet_rem!(ctx, x1405, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1408, x3, 10), x1409, 10),
            x1405,
            10
        ),
        48771,
        4,
    )?;
    let x1410: BytePoly_8 = bigint_mul!(x1380, x1380, 8);
    let x1411: BytePoly_9 = bigint_nondet_quot!(ctx, x1410, x3, 9);
    let x1412: BytePoly_4 = bigint_nondet_rem!(ctx, x1410, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1411, x3, 13), x1412, 13),
            x1410,
            13
        ),
        73156,
        4,
    )?;
    let x1413: BytePoly_5 = bigint_add!(bigint_mul!(x1412, x0, 5), x2, 5);
    let x1414: BytePoly_6 = bigint_nondet_quot!(ctx, x1413, x3, 6);
    let x1415: BytePoly_4 = bigint_nondet_rem!(ctx, x1413, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1414, x3, 10), x1415, 10),
            x1413,
            10
        ),
        48771,
        4,
    )?;
    let x1416: BytePoly_4 = bigint_add!(x1386, x1386, 4);
    let x1417: BytePoly_4 = bigint_nondet_quot!(ctx, x1416, x3, 4);
    let x1418: BytePoly_4 = bigint_nondet_rem!(ctx, x1416, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1417, x3, 8), x1418, 8), x1416, 8),
        32515,
        2,
    )?;
    let x1419: BytePoly_4 = bigint_nondet_inv!(ctx, x1418, x3, 4);
    let x1420: BytePoly_8 = bigint_mul!(x1418, x1419, 8);
    let x1421: BytePoly_9 = bigint_nondet_quot!(ctx, x1420, x3, 9);
    let x1422: BytePoly_4 = bigint_nondet_rem!(ctx, x1420, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1421, x3, 13), x1422, 13),
            x1420,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1422, x5, 4), 34, 1)?;
    let x1423: BytePoly_8 = bigint_mul!(x1415, x1419, 8);
    let x1424: BytePoly_9 = bigint_nondet_quot!(ctx, x1423, x3, 9);
    let x1425: BytePoly_4 = bigint_nondet_rem!(ctx, x1423, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1424, x3, 13), x1425, 13),
            x1423,
            13
        ),
        73156,
        4,
    )?;
    let x1426: BytePoly_8 = bigint_mul!(x1425, x1380, 8);
    let x1427: BytePoly_9 = bigint_nondet_quot!(ctx, x1426, x3, 9);
    let x1428: BytePoly_4 = bigint_nondet_rem!(ctx, x1426, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1427, x3, 13), x1428, 13),
            x1426,
            13
        ),
        73156,
        4,
    )?;
    let x1429: BytePoly_4 = bigint_add!(bigint_sub!(x1386, x1428, 4), x3, 4);
    let x1430: BytePoly_4 = bigint_nondet_quot!(ctx, x1429, x3, 4);
    let x1431: BytePoly_4 = bigint_nondet_rem!(ctx, x1429, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1430, x3, 8), x1431, 8), x1429, 8),
        32515,
        2,
    )?;
    let x1432: BytePoly_8 = bigint_mul!(x1425, x1425, 8);
    let x1433: BytePoly_9 = bigint_nondet_quot!(ctx, x1432, x3, 9);
    let x1434: BytePoly_4 = bigint_nondet_rem!(ctx, x1432, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1433, x3, 13), x1434, 13),
            x1432,
            13
        ),
        73156,
        4,
    )?;
    let x1435: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1434, x1380, 4), x3, 4), x1380, 4),
        x3,
        4
    );
    let x1436: BytePoly_4 = bigint_nondet_quot!(ctx, x1435, x3, 4);
    let x1437: BytePoly_4 = bigint_nondet_rem!(ctx, x1435, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1436, x3, 8), x1437, 8), x1435, 8),
        32515,
        2,
    )?;
    let x1438: BytePoly_8 = bigint_mul!(x1425, x1437, 8);
    let x1439: BytePoly_9 = bigint_nondet_quot!(ctx, x1438, x3, 9);
    let x1440: BytePoly_4 = bigint_nondet_rem!(ctx, x1438, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1439, x3, 13), x1440, 13),
            x1438,
            13
        ),
        73156,
        4,
    )?;
    let x1441: BytePoly_4 = bigint_add!(bigint_sub!(x3, bigint_add!(x1440, x1431, 4), 4), x3, 4);
    let x1442: BytePoly_4 = bigint_nondet_quot!(ctx, x1441, x3, 4);
    let x1443: BytePoly_4 = bigint_nondet_rem!(ctx, x1441, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1442, x3, 8), x1443, 8), x1441, 8),
        32515,
        2,
    )?;
    let x1444: BytePoly_1 = bigint_nondet_rem!(ctx, x1388, x4, 1);
    let x1445: BytePoly_4 = bigint_nondet_quot!(ctx, x1388, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1445, x4, 5), x1444, 5), x1388, 5),
        32515,
        2,
    )?;
    let x1446: BytePoly_1 = bigint_sub!(x5, x1444, 1);
    eqz(ctx, &bigint_mul!(x1444, x1446, 2), 8131, 2)?;
    let x1447: BytePoly_4 = bigint_add!(bigint_sub!(x1443, x1409, 4), x3, 4);
    let x1448: BytePoly_4 = bigint_add!(bigint_sub!(x1437, x1407, 4), x3, 4);
    let x1449: BytePoly_4 = bigint_nondet_inv!(ctx, x1448, x3, 4);
    let x1450: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x1447, x1449, 8), x3, 4);
    let x1451: BytePoly_8 = bigint_add!(bigint_sub!(bigint_mul!(x1450, x1448, 8), x1447, 8), x3, 8);
    let x1452: BytePoly_9 = bigint_nondet_quot!(ctx, x1451, x3, 9);
    eqz(
        ctx,
        &bigint_sub!(x1451, bigint_mul!(x1452, x3, 13), 13),
        73156,
        4,
    )?;
    let x1453: BytePoly_8 = bigint_mul!(x1450, x1450, 8);
    let x1454: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1453, x1407, 8), x3, 8), x1437, 8),
        x3,
        8
    );
    let x1455: BytePoly_9 = bigint_nondet_quot!(ctx, x1454, x3, 9);
    let x1456: BytePoly_4 = bigint_nondet_rem!(ctx, x1454, x3, 4);
    let x1457: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x3,
                bigint_add!(
                    bigint_mul!(x1450, x1456, 8),
                    bigint_add!(bigint_sub!(x1409, bigint_mul!(x1450, x1407, 8), 8), x3, 8),
                    8
                ),
                8
            ),
            x3,
            8
        ),
        x3,
        8
    );
    let x1458: BytePoly_9 = bigint_nondet_quot!(ctx, x1457, x3, 9);
    let x1459: BytePoly_4 = bigint_nondet_rem!(ctx, x1457, x3, 4);
    let x1460: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1453, bigint_mul!(x1455, x3, 13), 13),
                        x1407,
                        13
                    ),
                    x1437,
                    13
                ),
                x3,
                13
            ),
            x3,
            13
        ),
        x1456,
        13
    );
    eqz(ctx, &x1460, 73156, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1458, x3, 13), x1459, 13),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1450, bigint_sub!(x1407, x1456, 4), 8),
                        x1409,
                        8
                    ),
                    x3,
                    8
                ),
                x3,
                8
            ),
            13
        ),
        73156,
        4,
    )?;
    let x1461: BytePoly_5 = bigint_add!(
        bigint_mul!(x1456, x1444, 5),
        bigint_mul!(x1407, x1446, 5),
        5
    );
    let x1462: BytePoly_5 = bigint_add!(
        bigint_mul!(x1459, x1444, 5),
        bigint_mul!(x1409, x1446, 5),
        5
    );
    let x1463: BytePoly_6 = bigint_nondet_quot!(ctx, x1461, x3, 6);
    let x1464: BytePoly_4 = bigint_nondet_rem!(ctx, x1461, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1463, x3, 10), x1464, 10),
            x1461,
            10
        ),
        48771,
        4,
    )?;
    let x1465: BytePoly_6 = bigint_nondet_quot!(ctx, x1462, x3, 6);
    let x1466: BytePoly_4 = bigint_nondet_rem!(ctx, x1462, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1465, x3, 10), x1466, 10),
            x1462,
            10
        ),
        48771,
        4,
    )?;
    let x1467: BytePoly_8 = bigint_mul!(x1437, x1437, 8);
    let x1468: BytePoly_9 = bigint_nondet_quot!(ctx, x1467, x3, 9);
    let x1469: BytePoly_4 = bigint_nondet_rem!(ctx, x1467, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1468, x3, 13), x1469, 13),
            x1467,
            13
        ),
        73156,
        4,
    )?;
    let x1470: BytePoly_5 = bigint_add!(bigint_mul!(x1469, x0, 5), x2, 5);
    let x1471: BytePoly_6 = bigint_nondet_quot!(ctx, x1470, x3, 6);
    let x1472: BytePoly_4 = bigint_nondet_rem!(ctx, x1470, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1471, x3, 10), x1472, 10),
            x1470,
            10
        ),
        48771,
        4,
    )?;
    let x1473: BytePoly_4 = bigint_add!(x1443, x1443, 4);
    let x1474: BytePoly_4 = bigint_nondet_quot!(ctx, x1473, x3, 4);
    let x1475: BytePoly_4 = bigint_nondet_rem!(ctx, x1473, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1474, x3, 8), x1475, 8), x1473, 8),
        32515,
        2,
    )?;
    let x1476: BytePoly_4 = bigint_nondet_inv!(ctx, x1475, x3, 4);
    let x1477: BytePoly_8 = bigint_mul!(x1475, x1476, 8);
    let x1478: BytePoly_9 = bigint_nondet_quot!(ctx, x1477, x3, 9);
    let x1479: BytePoly_4 = bigint_nondet_rem!(ctx, x1477, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1478, x3, 13), x1479, 13),
            x1477,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1479, x5, 4), 34, 1)?;
    let x1480: BytePoly_8 = bigint_mul!(x1472, x1476, 8);
    let x1481: BytePoly_9 = bigint_nondet_quot!(ctx, x1480, x3, 9);
    let x1482: BytePoly_4 = bigint_nondet_rem!(ctx, x1480, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1481, x3, 13), x1482, 13),
            x1480,
            13
        ),
        73156,
        4,
    )?;
    let x1483: BytePoly_8 = bigint_mul!(x1482, x1437, 8);
    let x1484: BytePoly_9 = bigint_nondet_quot!(ctx, x1483, x3, 9);
    let x1485: BytePoly_4 = bigint_nondet_rem!(ctx, x1483, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1484, x3, 13), x1485, 13),
            x1483,
            13
        ),
        73156,
        4,
    )?;
    let x1486: BytePoly_4 = bigint_add!(bigint_sub!(x1443, x1485, 4), x3, 4);
    let x1487: BytePoly_4 = bigint_nondet_quot!(ctx, x1486, x3, 4);
    let x1488: BytePoly_4 = bigint_nondet_rem!(ctx, x1486, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1487, x3, 8), x1488, 8), x1486, 8),
        32515,
        2,
    )?;
    let x1489: BytePoly_8 = bigint_mul!(x1482, x1482, 8);
    let x1490: BytePoly_9 = bigint_nondet_quot!(ctx, x1489, x3, 9);
    let x1491: BytePoly_4 = bigint_nondet_rem!(ctx, x1489, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1490, x3, 13), x1491, 13),
            x1489,
            13
        ),
        73156,
        4,
    )?;
    let x1492: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1491, x1437, 4), x3, 4), x1437, 4),
        x3,
        4
    );
    let x1493: BytePoly_4 = bigint_nondet_quot!(ctx, x1492, x3, 4);
    let x1494: BytePoly_4 = bigint_nondet_rem!(ctx, x1492, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1493, x3, 8), x1494, 8), x1492, 8),
        32515,
        2,
    )?;
    let x1495: BytePoly_8 = bigint_mul!(x1482, x1494, 8);
    let x1496: BytePoly_9 = bigint_nondet_quot!(ctx, x1495, x3, 9);
    let x1497: BytePoly_4 = bigint_nondet_rem!(ctx, x1495, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1496, x3, 13), x1497, 13),
            x1495,
            13
        ),
        73156,
        4,
    )?;
    let x1498: BytePoly_4 = bigint_add!(bigint_sub!(x3, bigint_add!(x1497, x1488, 4), 4), x3, 4);
    let x1499: BytePoly_4 = bigint_nondet_quot!(ctx, x1498, x3, 4);
    let x1500: BytePoly_4 = bigint_nondet_rem!(ctx, x1498, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1499, x3, 8), x1500, 8), x1498, 8),
        32515,
        2,
    )?;
    let x1501: BytePoly_1 = bigint_nondet_rem!(ctx, x1445, x4, 1);
    let x1502: BytePoly_4 = bigint_nondet_quot!(ctx, x1445, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1502, x4, 5), x1501, 5), x1445, 5),
        32515,
        2,
    )?;
    let x1503: BytePoly_1 = bigint_sub!(x5, x1501, 1);
    eqz(ctx, &bigint_mul!(x1501, x1503, 2), 8131, 2)?;
    let x1504: BytePoly_4 = bigint_add!(bigint_sub!(x1500, x1466, 4), x3, 4);
    let x1505: BytePoly_4 = bigint_add!(bigint_sub!(x1494, x1464, 4), x3, 4);
    let x1506: BytePoly_4 = bigint_nondet_inv!(ctx, x1505, x3, 4);
    let x1507: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x1504, x1506, 8), x3, 4);
    let x1508: BytePoly_8 = bigint_add!(bigint_sub!(bigint_mul!(x1507, x1505, 8), x1504, 8), x3, 8);
    let x1509: BytePoly_9 = bigint_nondet_quot!(ctx, x1508, x3, 9);
    eqz(
        ctx,
        &bigint_sub!(x1508, bigint_mul!(x1509, x3, 13), 13),
        73156,
        4,
    )?;
    let x1510: BytePoly_8 = bigint_mul!(x1507, x1507, 8);
    let x1511: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1510, x1464, 8), x3, 8), x1494, 8),
        x3,
        8
    );
    let x1512: BytePoly_9 = bigint_nondet_quot!(ctx, x1511, x3, 9);
    let x1513: BytePoly_4 = bigint_nondet_rem!(ctx, x1511, x3, 4);
    let x1514: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x3,
                bigint_add!(
                    bigint_mul!(x1507, x1513, 8),
                    bigint_add!(bigint_sub!(x1466, bigint_mul!(x1507, x1464, 8), 8), x3, 8),
                    8
                ),
                8
            ),
            x3,
            8
        ),
        x3,
        8
    );
    let x1515: BytePoly_9 = bigint_nondet_quot!(ctx, x1514, x3, 9);
    let x1516: BytePoly_4 = bigint_nondet_rem!(ctx, x1514, x3, 4);
    let x1517: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1510, bigint_mul!(x1512, x3, 13), 13),
                        x1464,
                        13
                    ),
                    x1494,
                    13
                ),
                x3,
                13
            ),
            x3,
            13
        ),
        x1513,
        13
    );
    eqz(ctx, &x1517, 73156, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1515, x3, 13), x1516, 13),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1507, bigint_sub!(x1464, x1513, 4), 8),
                        x1466,
                        8
                    ),
                    x3,
                    8
                ),
                x3,
                8
            ),
            13
        ),
        73156,
        4,
    )?;
    let x1518: BytePoly_5 = bigint_add!(
        bigint_mul!(x1513, x1501, 5),
        bigint_mul!(x1464, x1503, 5),
        5
    );
    let x1519: BytePoly_5 = bigint_add!(
        bigint_mul!(x1516, x1501, 5),
        bigint_mul!(x1466, x1503, 5),
        5
    );
    let x1520: BytePoly_6 = bigint_nondet_quot!(ctx, x1518, x3, 6);
    let x1521: BytePoly_4 = bigint_nondet_rem!(ctx, x1518, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1520, x3, 10), x1521, 10),
            x1518,
            10
        ),
        48771,
        4,
    )?;
    let x1522: BytePoly_6 = bigint_nondet_quot!(ctx, x1519, x3, 6);
    let x1523: BytePoly_4 = bigint_nondet_rem!(ctx, x1519, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1522, x3, 10), x1523, 10),
            x1519,
            10
        ),
        48771,
        4,
    )?;
    let x1524: BytePoly_8 = bigint_mul!(x1494, x1494, 8);
    let x1525: BytePoly_9 = bigint_nondet_quot!(ctx, x1524, x3, 9);
    let x1526: BytePoly_4 = bigint_nondet_rem!(ctx, x1524, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1525, x3, 13), x1526, 13),
            x1524,
            13
        ),
        73156,
        4,
    )?;
    let x1527: BytePoly_5 = bigint_add!(bigint_mul!(x1526, x0, 5), x2, 5);
    let x1528: BytePoly_6 = bigint_nondet_quot!(ctx, x1527, x3, 6);
    let x1529: BytePoly_4 = bigint_nondet_rem!(ctx, x1527, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1528, x3, 10), x1529, 10),
            x1527,
            10
        ),
        48771,
        4,
    )?;
    let x1530: BytePoly_4 = bigint_add!(x1500, x1500, 4);
    let x1531: BytePoly_4 = bigint_nondet_quot!(ctx, x1530, x3, 4);
    let x1532: BytePoly_4 = bigint_nondet_rem!(ctx, x1530, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1531, x3, 8), x1532, 8), x1530, 8),
        32515,
        2,
    )?;
    let x1533: BytePoly_4 = bigint_nondet_inv!(ctx, x1532, x3, 4);
    let x1534: BytePoly_8 = bigint_mul!(x1532, x1533, 8);
    let x1535: BytePoly_9 = bigint_nondet_quot!(ctx, x1534, x3, 9);
    let x1536: BytePoly_4 = bigint_nondet_rem!(ctx, x1534, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1535, x3, 13), x1536, 13),
            x1534,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1536, x5, 4), 34, 1)?;
    let x1537: BytePoly_8 = bigint_mul!(x1529, x1533, 8);
    let x1538: BytePoly_9 = bigint_nondet_quot!(ctx, x1537, x3, 9);
    let x1539: BytePoly_4 = bigint_nondet_rem!(ctx, x1537, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1538, x3, 13), x1539, 13),
            x1537,
            13
        ),
        73156,
        4,
    )?;
    let x1540: BytePoly_8 = bigint_mul!(x1539, x1494, 8);
    let x1541: BytePoly_9 = bigint_nondet_quot!(ctx, x1540, x3, 9);
    let x1542: BytePoly_4 = bigint_nondet_rem!(ctx, x1540, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1541, x3, 13), x1542, 13),
            x1540,
            13
        ),
        73156,
        4,
    )?;
    let x1543: BytePoly_4 = bigint_add!(bigint_sub!(x1500, x1542, 4), x3, 4);
    let x1544: BytePoly_4 = bigint_nondet_quot!(ctx, x1543, x3, 4);
    let x1545: BytePoly_4 = bigint_nondet_rem!(ctx, x1543, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1544, x3, 8), x1545, 8), x1543, 8),
        32515,
        2,
    )?;
    let x1546: BytePoly_8 = bigint_mul!(x1539, x1539, 8);
    let x1547: BytePoly_9 = bigint_nondet_quot!(ctx, x1546, x3, 9);
    let x1548: BytePoly_4 = bigint_nondet_rem!(ctx, x1546, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1547, x3, 13), x1548, 13),
            x1546,
            13
        ),
        73156,
        4,
    )?;
    let x1549: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1548, x1494, 4), x3, 4), x1494, 4),
        x3,
        4
    );
    let x1550: BytePoly_4 = bigint_nondet_quot!(ctx, x1549, x3, 4);
    let x1551: BytePoly_4 = bigint_nondet_rem!(ctx, x1549, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1550, x3, 8), x1551, 8), x1549, 8),
        32515,
        2,
    )?;
    let x1552: BytePoly_8 = bigint_mul!(x1539, x1551, 8);
    let x1553: BytePoly_9 = bigint_nondet_quot!(ctx, x1552, x3, 9);
    let x1554: BytePoly_4 = bigint_nondet_rem!(ctx, x1552, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1553, x3, 13), x1554, 13),
            x1552,
            13
        ),
        73156,
        4,
    )?;
    let x1555: BytePoly_4 = bigint_add!(bigint_sub!(x3, bigint_add!(x1554, x1545, 4), 4), x3, 4);
    let x1556: BytePoly_4 = bigint_nondet_quot!(ctx, x1555, x3, 4);
    let x1557: BytePoly_4 = bigint_nondet_rem!(ctx, x1555, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1556, x3, 8), x1557, 8), x1555, 8),
        32515,
        2,
    )?;
    let x1558: BytePoly_1 = bigint_nondet_rem!(ctx, x1502, x4, 1);
    let x1559: BytePoly_4 = bigint_nondet_quot!(ctx, x1502, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1559, x4, 5), x1558, 5), x1502, 5),
        32515,
        2,
    )?;
    let x1560: BytePoly_1 = bigint_sub!(x5, x1558, 1);
    eqz(ctx, &bigint_mul!(x1558, x1560, 2), 8131, 2)?;
    let x1561: BytePoly_4 = bigint_add!(bigint_sub!(x1557, x1523, 4), x3, 4);
    let x1562: BytePoly_4 = bigint_add!(bigint_sub!(x1551, x1521, 4), x3, 4);
    let x1563: BytePoly_4 = bigint_nondet_inv!(ctx, x1562, x3, 4);
    let x1564: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x1561, x1563, 8), x3, 4);
    let x1565: BytePoly_8 = bigint_add!(bigint_sub!(bigint_mul!(x1564, x1562, 8), x1561, 8), x3, 8);
    let x1566: BytePoly_9 = bigint_nondet_quot!(ctx, x1565, x3, 9);
    eqz(
        ctx,
        &bigint_sub!(x1565, bigint_mul!(x1566, x3, 13), 13),
        73156,
        4,
    )?;
    let x1567: BytePoly_8 = bigint_mul!(x1564, x1564, 8);
    let x1568: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1567, x1521, 8), x3, 8), x1551, 8),
        x3,
        8
    );
    let x1569: BytePoly_9 = bigint_nondet_quot!(ctx, x1568, x3, 9);
    let x1570: BytePoly_4 = bigint_nondet_rem!(ctx, x1568, x3, 4);
    let x1571: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x3,
                bigint_add!(
                    bigint_mul!(x1564, x1570, 8),
                    bigint_add!(bigint_sub!(x1523, bigint_mul!(x1564, x1521, 8), 8), x3, 8),
                    8
                ),
                8
            ),
            x3,
            8
        ),
        x3,
        8
    );
    let x1572: BytePoly_9 = bigint_nondet_quot!(ctx, x1571, x3, 9);
    let x1573: BytePoly_4 = bigint_nondet_rem!(ctx, x1571, x3, 4);
    let x1574: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1567, bigint_mul!(x1569, x3, 13), 13),
                        x1521,
                        13
                    ),
                    x1551,
                    13
                ),
                x3,
                13
            ),
            x3,
            13
        ),
        x1570,
        13
    );
    eqz(ctx, &x1574, 73156, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1572, x3, 13), x1573, 13),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1564, bigint_sub!(x1521, x1570, 4), 8),
                        x1523,
                        8
                    ),
                    x3,
                    8
                ),
                x3,
                8
            ),
            13
        ),
        73156,
        4,
    )?;
    let x1575: BytePoly_5 = bigint_add!(
        bigint_mul!(x1570, x1558, 5),
        bigint_mul!(x1521, x1560, 5),
        5
    );
    let x1576: BytePoly_5 = bigint_add!(
        bigint_mul!(x1573, x1558, 5),
        bigint_mul!(x1523, x1560, 5),
        5
    );
    let x1577: BytePoly_6 = bigint_nondet_quot!(ctx, x1575, x3, 6);
    let x1578: BytePoly_4 = bigint_nondet_rem!(ctx, x1575, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1577, x3, 10), x1578, 10),
            x1575,
            10
        ),
        48771,
        4,
    )?;
    let x1579: BytePoly_6 = bigint_nondet_quot!(ctx, x1576, x3, 6);
    let x1580: BytePoly_4 = bigint_nondet_rem!(ctx, x1576, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1579, x3, 10), x1580, 10),
            x1576,
            10
        ),
        48771,
        4,
    )?;
    let x1581: BytePoly_8 = bigint_mul!(x1551, x1551, 8);
    let x1582: BytePoly_9 = bigint_nondet_quot!(ctx, x1581, x3, 9);
    let x1583: BytePoly_4 = bigint_nondet_rem!(ctx, x1581, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1582, x3, 13), x1583, 13),
            x1581,
            13
        ),
        73156,
        4,
    )?;
    let x1584: BytePoly_5 = bigint_add!(bigint_mul!(x1583, x0, 5), x2, 5);
    let x1585: BytePoly_6 = bigint_nondet_quot!(ctx, x1584, x3, 6);
    let x1586: BytePoly_4 = bigint_nondet_rem!(ctx, x1584, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1585, x3, 10), x1586, 10),
            x1584,
            10
        ),
        48771,
        4,
    )?;
    let x1587: BytePoly_4 = bigint_add!(x1557, x1557, 4);
    let x1588: BytePoly_4 = bigint_nondet_quot!(ctx, x1587, x3, 4);
    let x1589: BytePoly_4 = bigint_nondet_rem!(ctx, x1587, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1588, x3, 8), x1589, 8), x1587, 8),
        32515,
        2,
    )?;
    let x1590: BytePoly_4 = bigint_nondet_inv!(ctx, x1589, x3, 4);
    let x1591: BytePoly_8 = bigint_mul!(x1589, x1590, 8);
    let x1592: BytePoly_9 = bigint_nondet_quot!(ctx, x1591, x3, 9);
    let x1593: BytePoly_4 = bigint_nondet_rem!(ctx, x1591, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1592, x3, 13), x1593, 13),
            x1591,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1593, x5, 4), 34, 1)?;
    let x1594: BytePoly_8 = bigint_mul!(x1586, x1590, 8);
    let x1595: BytePoly_9 = bigint_nondet_quot!(ctx, x1594, x3, 9);
    let x1596: BytePoly_4 = bigint_nondet_rem!(ctx, x1594, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1595, x3, 13), x1596, 13),
            x1594,
            13
        ),
        73156,
        4,
    )?;
    let x1597: BytePoly_8 = bigint_mul!(x1596, x1551, 8);
    let x1598: BytePoly_9 = bigint_nondet_quot!(ctx, x1597, x3, 9);
    let x1599: BytePoly_4 = bigint_nondet_rem!(ctx, x1597, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1598, x3, 13), x1599, 13),
            x1597,
            13
        ),
        73156,
        4,
    )?;
    let x1600: BytePoly_4 = bigint_add!(bigint_sub!(x1557, x1599, 4), x3, 4);
    let x1601: BytePoly_4 = bigint_nondet_quot!(ctx, x1600, x3, 4);
    let x1602: BytePoly_4 = bigint_nondet_rem!(ctx, x1600, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1601, x3, 8), x1602, 8), x1600, 8),
        32515,
        2,
    )?;
    let x1603: BytePoly_8 = bigint_mul!(x1596, x1596, 8);
    let x1604: BytePoly_9 = bigint_nondet_quot!(ctx, x1603, x3, 9);
    let x1605: BytePoly_4 = bigint_nondet_rem!(ctx, x1603, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1604, x3, 13), x1605, 13),
            x1603,
            13
        ),
        73156,
        4,
    )?;
    let x1606: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1605, x1551, 4), x3, 4), x1551, 4),
        x3,
        4
    );
    let x1607: BytePoly_4 = bigint_nondet_quot!(ctx, x1606, x3, 4);
    let x1608: BytePoly_4 = bigint_nondet_rem!(ctx, x1606, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1607, x3, 8), x1608, 8), x1606, 8),
        32515,
        2,
    )?;
    let x1609: BytePoly_8 = bigint_mul!(x1596, x1608, 8);
    let x1610: BytePoly_9 = bigint_nondet_quot!(ctx, x1609, x3, 9);
    let x1611: BytePoly_4 = bigint_nondet_rem!(ctx, x1609, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1610, x3, 13), x1611, 13),
            x1609,
            13
        ),
        73156,
        4,
    )?;
    let x1612: BytePoly_4 = bigint_add!(bigint_sub!(x3, bigint_add!(x1611, x1602, 4), 4), x3, 4);
    let x1613: BytePoly_4 = bigint_nondet_quot!(ctx, x1612, x3, 4);
    let x1614: BytePoly_4 = bigint_nondet_rem!(ctx, x1612, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1613, x3, 8), x1614, 8), x1612, 8),
        32515,
        2,
    )?;
    let x1615: BytePoly_1 = bigint_nondet_rem!(ctx, x1559, x4, 1);
    let x1616: BytePoly_4 = bigint_nondet_quot!(ctx, x1559, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1616, x4, 5), x1615, 5), x1559, 5),
        32515,
        2,
    )?;
    let x1617: BytePoly_1 = bigint_sub!(x5, x1615, 1);
    eqz(ctx, &bigint_mul!(x1615, x1617, 2), 8131, 2)?;
    let x1618: BytePoly_4 = bigint_add!(bigint_sub!(x1614, x1580, 4), x3, 4);
    let x1619: BytePoly_4 = bigint_add!(bigint_sub!(x1608, x1578, 4), x3, 4);
    let x1620: BytePoly_4 = bigint_nondet_inv!(ctx, x1619, x3, 4);
    let x1621: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x1618, x1620, 8), x3, 4);
    let x1622: BytePoly_8 = bigint_add!(bigint_sub!(bigint_mul!(x1621, x1619, 8), x1618, 8), x3, 8);
    let x1623: BytePoly_9 = bigint_nondet_quot!(ctx, x1622, x3, 9);
    eqz(
        ctx,
        &bigint_sub!(x1622, bigint_mul!(x1623, x3, 13), 13),
        73156,
        4,
    )?;
    let x1624: BytePoly_8 = bigint_mul!(x1621, x1621, 8);
    let x1625: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1624, x1578, 8), x3, 8), x1608, 8),
        x3,
        8
    );
    let x1626: BytePoly_9 = bigint_nondet_quot!(ctx, x1625, x3, 9);
    let x1627: BytePoly_4 = bigint_nondet_rem!(ctx, x1625, x3, 4);
    let x1628: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x3,
                bigint_add!(
                    bigint_mul!(x1621, x1627, 8),
                    bigint_add!(bigint_sub!(x1580, bigint_mul!(x1621, x1578, 8), 8), x3, 8),
                    8
                ),
                8
            ),
            x3,
            8
        ),
        x3,
        8
    );
    let x1629: BytePoly_9 = bigint_nondet_quot!(ctx, x1628, x3, 9);
    let x1630: BytePoly_4 = bigint_nondet_rem!(ctx, x1628, x3, 4);
    let x1631: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1624, bigint_mul!(x1626, x3, 13), 13),
                        x1578,
                        13
                    ),
                    x1608,
                    13
                ),
                x3,
                13
            ),
            x3,
            13
        ),
        x1627,
        13
    );
    eqz(ctx, &x1631, 73156, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1629, x3, 13), x1630, 13),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1621, bigint_sub!(x1578, x1627, 4), 8),
                        x1580,
                        8
                    ),
                    x3,
                    8
                ),
                x3,
                8
            ),
            13
        ),
        73156,
        4,
    )?;
    let x1632: BytePoly_5 = bigint_add!(
        bigint_mul!(x1627, x1615, 5),
        bigint_mul!(x1578, x1617, 5),
        5
    );
    let x1633: BytePoly_5 = bigint_add!(
        bigint_mul!(x1630, x1615, 5),
        bigint_mul!(x1580, x1617, 5),
        5
    );
    let x1634: BytePoly_6 = bigint_nondet_quot!(ctx, x1632, x3, 6);
    let x1635: BytePoly_4 = bigint_nondet_rem!(ctx, x1632, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1634, x3, 10), x1635, 10),
            x1632,
            10
        ),
        48771,
        4,
    )?;
    let x1636: BytePoly_6 = bigint_nondet_quot!(ctx, x1633, x3, 6);
    let x1637: BytePoly_4 = bigint_nondet_rem!(ctx, x1633, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1636, x3, 10), x1637, 10),
            x1633,
            10
        ),
        48771,
        4,
    )?;
    let x1638: BytePoly_8 = bigint_mul!(x1608, x1608, 8);
    let x1639: BytePoly_9 = bigint_nondet_quot!(ctx, x1638, x3, 9);
    let x1640: BytePoly_4 = bigint_nondet_rem!(ctx, x1638, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1639, x3, 13), x1640, 13),
            x1638,
            13
        ),
        73156,
        4,
    )?;
    let x1641: BytePoly_5 = bigint_add!(bigint_mul!(x1640, x0, 5), x2, 5);
    let x1642: BytePoly_6 = bigint_nondet_quot!(ctx, x1641, x3, 6);
    let x1643: BytePoly_4 = bigint_nondet_rem!(ctx, x1641, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1642, x3, 10), x1643, 10),
            x1641,
            10
        ),
        48771,
        4,
    )?;
    let x1644: BytePoly_4 = bigint_add!(x1614, x1614, 4);
    let x1645: BytePoly_4 = bigint_nondet_quot!(ctx, x1644, x3, 4);
    let x1646: BytePoly_4 = bigint_nondet_rem!(ctx, x1644, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1645, x3, 8), x1646, 8), x1644, 8),
        32515,
        2,
    )?;
    let x1647: BytePoly_4 = bigint_nondet_inv!(ctx, x1646, x3, 4);
    let x1648: BytePoly_8 = bigint_mul!(x1646, x1647, 8);
    let x1649: BytePoly_9 = bigint_nondet_quot!(ctx, x1648, x3, 9);
    let x1650: BytePoly_4 = bigint_nondet_rem!(ctx, x1648, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1649, x3, 13), x1650, 13),
            x1648,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1650, x5, 4), 34, 1)?;
    let x1651: BytePoly_8 = bigint_mul!(x1643, x1647, 8);
    let x1652: BytePoly_9 = bigint_nondet_quot!(ctx, x1651, x3, 9);
    let x1653: BytePoly_4 = bigint_nondet_rem!(ctx, x1651, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1652, x3, 13), x1653, 13),
            x1651,
            13
        ),
        73156,
        4,
    )?;
    let x1654: BytePoly_8 = bigint_mul!(x1653, x1608, 8);
    let x1655: BytePoly_9 = bigint_nondet_quot!(ctx, x1654, x3, 9);
    let x1656: BytePoly_4 = bigint_nondet_rem!(ctx, x1654, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1655, x3, 13), x1656, 13),
            x1654,
            13
        ),
        73156,
        4,
    )?;
    let x1657: BytePoly_4 = bigint_add!(bigint_sub!(x1614, x1656, 4), x3, 4);
    let x1658: BytePoly_4 = bigint_nondet_quot!(ctx, x1657, x3, 4);
    let x1659: BytePoly_4 = bigint_nondet_rem!(ctx, x1657, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1658, x3, 8), x1659, 8), x1657, 8),
        32515,
        2,
    )?;
    let x1660: BytePoly_8 = bigint_mul!(x1653, x1653, 8);
    let x1661: BytePoly_9 = bigint_nondet_quot!(ctx, x1660, x3, 9);
    let x1662: BytePoly_4 = bigint_nondet_rem!(ctx, x1660, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1661, x3, 13), x1662, 13),
            x1660,
            13
        ),
        73156,
        4,
    )?;
    let x1663: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1662, x1608, 4), x3, 4), x1608, 4),
        x3,
        4
    );
    let x1664: BytePoly_4 = bigint_nondet_quot!(ctx, x1663, x3, 4);
    let x1665: BytePoly_4 = bigint_nondet_rem!(ctx, x1663, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1664, x3, 8), x1665, 8), x1663, 8),
        32515,
        2,
    )?;
    let x1666: BytePoly_8 = bigint_mul!(x1653, x1665, 8);
    let x1667: BytePoly_9 = bigint_nondet_quot!(ctx, x1666, x3, 9);
    let x1668: BytePoly_4 = bigint_nondet_rem!(ctx, x1666, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1667, x3, 13), x1668, 13),
            x1666,
            13
        ),
        73156,
        4,
    )?;
    let x1669: BytePoly_4 = bigint_add!(bigint_sub!(x3, bigint_add!(x1668, x1659, 4), 4), x3, 4);
    let x1670: BytePoly_4 = bigint_nondet_quot!(ctx, x1669, x3, 4);
    let x1671: BytePoly_4 = bigint_nondet_rem!(ctx, x1669, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1670, x3, 8), x1671, 8), x1669, 8),
        32515,
        2,
    )?;
    let x1672: BytePoly_1 = bigint_nondet_rem!(ctx, x1616, x4, 1);
    let x1673: BytePoly_4 = bigint_nondet_quot!(ctx, x1616, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1673, x4, 5), x1672, 5), x1616, 5),
        32515,
        2,
    )?;
    let x1674: BytePoly_1 = bigint_sub!(x5, x1672, 1);
    eqz(ctx, &bigint_mul!(x1672, x1674, 2), 8131, 2)?;
    let x1675: BytePoly_4 = bigint_add!(bigint_sub!(x1671, x1637, 4), x3, 4);
    let x1676: BytePoly_4 = bigint_add!(bigint_sub!(x1665, x1635, 4), x3, 4);
    let x1677: BytePoly_4 = bigint_nondet_inv!(ctx, x1676, x3, 4);
    let x1678: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x1675, x1677, 8), x3, 4);
    let x1679: BytePoly_8 = bigint_add!(bigint_sub!(bigint_mul!(x1678, x1676, 8), x1675, 8), x3, 8);
    let x1680: BytePoly_9 = bigint_nondet_quot!(ctx, x1679, x3, 9);
    eqz(
        ctx,
        &bigint_sub!(x1679, bigint_mul!(x1680, x3, 13), 13),
        73156,
        4,
    )?;
    let x1681: BytePoly_8 = bigint_mul!(x1678, x1678, 8);
    let x1682: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1681, x1635, 8), x3, 8), x1665, 8),
        x3,
        8
    );
    let x1683: BytePoly_9 = bigint_nondet_quot!(ctx, x1682, x3, 9);
    let x1684: BytePoly_4 = bigint_nondet_rem!(ctx, x1682, x3, 4);
    let x1685: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x3,
                bigint_add!(
                    bigint_mul!(x1678, x1684, 8),
                    bigint_add!(bigint_sub!(x1637, bigint_mul!(x1678, x1635, 8), 8), x3, 8),
                    8
                ),
                8
            ),
            x3,
            8
        ),
        x3,
        8
    );
    let x1686: BytePoly_9 = bigint_nondet_quot!(ctx, x1685, x3, 9);
    let x1687: BytePoly_4 = bigint_nondet_rem!(ctx, x1685, x3, 4);
    let x1688: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1681, bigint_mul!(x1683, x3, 13), 13),
                        x1635,
                        13
                    ),
                    x1665,
                    13
                ),
                x3,
                13
            ),
            x3,
            13
        ),
        x1684,
        13
    );
    eqz(ctx, &x1688, 73156, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1686, x3, 13), x1687, 13),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1678, bigint_sub!(x1635, x1684, 4), 8),
                        x1637,
                        8
                    ),
                    x3,
                    8
                ),
                x3,
                8
            ),
            13
        ),
        73156,
        4,
    )?;
    let x1689: BytePoly_5 = bigint_add!(
        bigint_mul!(x1684, x1672, 5),
        bigint_mul!(x1635, x1674, 5),
        5
    );
    let x1690: BytePoly_5 = bigint_add!(
        bigint_mul!(x1687, x1672, 5),
        bigint_mul!(x1637, x1674, 5),
        5
    );
    let x1691: BytePoly_6 = bigint_nondet_quot!(ctx, x1689, x3, 6);
    let x1692: BytePoly_4 = bigint_nondet_rem!(ctx, x1689, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1691, x3, 10), x1692, 10),
            x1689,
            10
        ),
        48771,
        4,
    )?;
    let x1693: BytePoly_6 = bigint_nondet_quot!(ctx, x1690, x3, 6);
    let x1694: BytePoly_4 = bigint_nondet_rem!(ctx, x1690, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1693, x3, 10), x1694, 10),
            x1690,
            10
        ),
        48771,
        4,
    )?;
    let x1695: BytePoly_8 = bigint_mul!(x1665, x1665, 8);
    let x1696: BytePoly_9 = bigint_nondet_quot!(ctx, x1695, x3, 9);
    let x1697: BytePoly_4 = bigint_nondet_rem!(ctx, x1695, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1696, x3, 13), x1697, 13),
            x1695,
            13
        ),
        73156,
        4,
    )?;
    let x1698: BytePoly_5 = bigint_add!(bigint_mul!(x1697, x0, 5), x2, 5);
    let x1699: BytePoly_6 = bigint_nondet_quot!(ctx, x1698, x3, 6);
    let x1700: BytePoly_4 = bigint_nondet_rem!(ctx, x1698, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1699, x3, 10), x1700, 10),
            x1698,
            10
        ),
        48771,
        4,
    )?;
    let x1701: BytePoly_4 = bigint_add!(x1671, x1671, 4);
    let x1702: BytePoly_4 = bigint_nondet_quot!(ctx, x1701, x3, 4);
    let x1703: BytePoly_4 = bigint_nondet_rem!(ctx, x1701, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1702, x3, 8), x1703, 8), x1701, 8),
        32515,
        2,
    )?;
    let x1704: BytePoly_4 = bigint_nondet_inv!(ctx, x1703, x3, 4);
    let x1705: BytePoly_8 = bigint_mul!(x1703, x1704, 8);
    let x1706: BytePoly_9 = bigint_nondet_quot!(ctx, x1705, x3, 9);
    let x1707: BytePoly_4 = bigint_nondet_rem!(ctx, x1705, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1706, x3, 13), x1707, 13),
            x1705,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1707, x5, 4), 34, 1)?;
    let x1708: BytePoly_8 = bigint_mul!(x1700, x1704, 8);
    let x1709: BytePoly_9 = bigint_nondet_quot!(ctx, x1708, x3, 9);
    let x1710: BytePoly_4 = bigint_nondet_rem!(ctx, x1708, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1709, x3, 13), x1710, 13),
            x1708,
            13
        ),
        73156,
        4,
    )?;
    let x1711: BytePoly_8 = bigint_mul!(x1710, x1665, 8);
    let x1712: BytePoly_9 = bigint_nondet_quot!(ctx, x1711, x3, 9);
    let x1713: BytePoly_4 = bigint_nondet_rem!(ctx, x1711, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1712, x3, 13), x1713, 13),
            x1711,
            13
        ),
        73156,
        4,
    )?;
    let x1714: BytePoly_4 = bigint_add!(bigint_sub!(x1671, x1713, 4), x3, 4);
    let x1715: BytePoly_4 = bigint_nondet_quot!(ctx, x1714, x3, 4);
    let x1716: BytePoly_4 = bigint_nondet_rem!(ctx, x1714, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1715, x3, 8), x1716, 8), x1714, 8),
        32515,
        2,
    )?;
    let x1717: BytePoly_8 = bigint_mul!(x1710, x1710, 8);
    let x1718: BytePoly_9 = bigint_nondet_quot!(ctx, x1717, x3, 9);
    let x1719: BytePoly_4 = bigint_nondet_rem!(ctx, x1717, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1718, x3, 13), x1719, 13),
            x1717,
            13
        ),
        73156,
        4,
    )?;
    let x1720: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1719, x1665, 4), x3, 4), x1665, 4),
        x3,
        4
    );
    let x1721: BytePoly_4 = bigint_nondet_quot!(ctx, x1720, x3, 4);
    let x1722: BytePoly_4 = bigint_nondet_rem!(ctx, x1720, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1721, x3, 8), x1722, 8), x1720, 8),
        32515,
        2,
    )?;
    let x1723: BytePoly_8 = bigint_mul!(x1710, x1722, 8);
    let x1724: BytePoly_9 = bigint_nondet_quot!(ctx, x1723, x3, 9);
    let x1725: BytePoly_4 = bigint_nondet_rem!(ctx, x1723, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1724, x3, 13), x1725, 13),
            x1723,
            13
        ),
        73156,
        4,
    )?;
    let x1726: BytePoly_4 = bigint_add!(bigint_sub!(x3, bigint_add!(x1725, x1716, 4), 4), x3, 4);
    let x1727: BytePoly_4 = bigint_nondet_quot!(ctx, x1726, x3, 4);
    let x1728: BytePoly_4 = bigint_nondet_rem!(ctx, x1726, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1727, x3, 8), x1728, 8), x1726, 8),
        32515,
        2,
    )?;
    let x1729: BytePoly_1 = bigint_nondet_rem!(ctx, x1673, x4, 1);
    let x1730: BytePoly_4 = bigint_nondet_quot!(ctx, x1673, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1730, x4, 5), x1729, 5), x1673, 5),
        32515,
        2,
    )?;
    let x1731: BytePoly_1 = bigint_sub!(x5, x1729, 1);
    eqz(ctx, &bigint_mul!(x1729, x1731, 2), 8131, 2)?;
    let x1732: BytePoly_4 = bigint_add!(bigint_sub!(x1728, x1694, 4), x3, 4);
    let x1733: BytePoly_4 = bigint_add!(bigint_sub!(x1722, x1692, 4), x3, 4);
    let x1734: BytePoly_4 = bigint_nondet_inv!(ctx, x1733, x3, 4);
    let x1735: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x1732, x1734, 8), x3, 4);
    let x1736: BytePoly_8 = bigint_add!(bigint_sub!(bigint_mul!(x1735, x1733, 8), x1732, 8), x3, 8);
    let x1737: BytePoly_9 = bigint_nondet_quot!(ctx, x1736, x3, 9);
    eqz(
        ctx,
        &bigint_sub!(x1736, bigint_mul!(x1737, x3, 13), 13),
        73156,
        4,
    )?;
    let x1738: BytePoly_8 = bigint_mul!(x1735, x1735, 8);
    let x1739: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1738, x1692, 8), x3, 8), x1722, 8),
        x3,
        8
    );
    let x1740: BytePoly_9 = bigint_nondet_quot!(ctx, x1739, x3, 9);
    let x1741: BytePoly_4 = bigint_nondet_rem!(ctx, x1739, x3, 4);
    let x1742: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x3,
                bigint_add!(
                    bigint_mul!(x1735, x1741, 8),
                    bigint_add!(bigint_sub!(x1694, bigint_mul!(x1735, x1692, 8), 8), x3, 8),
                    8
                ),
                8
            ),
            x3,
            8
        ),
        x3,
        8
    );
    let x1743: BytePoly_9 = bigint_nondet_quot!(ctx, x1742, x3, 9);
    let x1744: BytePoly_4 = bigint_nondet_rem!(ctx, x1742, x3, 4);
    let x1745: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1738, bigint_mul!(x1740, x3, 13), 13),
                        x1692,
                        13
                    ),
                    x1722,
                    13
                ),
                x3,
                13
            ),
            x3,
            13
        ),
        x1741,
        13
    );
    eqz(ctx, &x1745, 73156, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1743, x3, 13), x1744, 13),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1735, bigint_sub!(x1692, x1741, 4), 8),
                        x1694,
                        8
                    ),
                    x3,
                    8
                ),
                x3,
                8
            ),
            13
        ),
        73156,
        4,
    )?;
    let x1746: BytePoly_5 = bigint_add!(
        bigint_mul!(x1741, x1729, 5),
        bigint_mul!(x1692, x1731, 5),
        5
    );
    let x1747: BytePoly_5 = bigint_add!(
        bigint_mul!(x1744, x1729, 5),
        bigint_mul!(x1694, x1731, 5),
        5
    );
    let x1748: BytePoly_6 = bigint_nondet_quot!(ctx, x1746, x3, 6);
    let x1749: BytePoly_4 = bigint_nondet_rem!(ctx, x1746, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1748, x3, 10), x1749, 10),
            x1746,
            10
        ),
        48771,
        4,
    )?;
    let x1750: BytePoly_6 = bigint_nondet_quot!(ctx, x1747, x3, 6);
    let x1751: BytePoly_4 = bigint_nondet_rem!(ctx, x1747, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1750, x3, 10), x1751, 10),
            x1747,
            10
        ),
        48771,
        4,
    )?;
    let x1752: BytePoly_8 = bigint_mul!(x1722, x1722, 8);
    let x1753: BytePoly_9 = bigint_nondet_quot!(ctx, x1752, x3, 9);
    let x1754: BytePoly_4 = bigint_nondet_rem!(ctx, x1752, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1753, x3, 13), x1754, 13),
            x1752,
            13
        ),
        73156,
        4,
    )?;
    let x1755: BytePoly_5 = bigint_add!(bigint_mul!(x1754, x0, 5), x2, 5);
    let x1756: BytePoly_6 = bigint_nondet_quot!(ctx, x1755, x3, 6);
    let x1757: BytePoly_4 = bigint_nondet_rem!(ctx, x1755, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1756, x3, 10), x1757, 10),
            x1755,
            10
        ),
        48771,
        4,
    )?;
    let x1758: BytePoly_4 = bigint_add!(x1728, x1728, 4);
    let x1759: BytePoly_4 = bigint_nondet_quot!(ctx, x1758, x3, 4);
    let x1760: BytePoly_4 = bigint_nondet_rem!(ctx, x1758, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1759, x3, 8), x1760, 8), x1758, 8),
        32515,
        2,
    )?;
    let x1761: BytePoly_4 = bigint_nondet_inv!(ctx, x1760, x3, 4);
    let x1762: BytePoly_8 = bigint_mul!(x1760, x1761, 8);
    let x1763: BytePoly_9 = bigint_nondet_quot!(ctx, x1762, x3, 9);
    let x1764: BytePoly_4 = bigint_nondet_rem!(ctx, x1762, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1763, x3, 13), x1764, 13),
            x1762,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1764, x5, 4), 34, 1)?;
    let x1765: BytePoly_8 = bigint_mul!(x1757, x1761, 8);
    let x1766: BytePoly_9 = bigint_nondet_quot!(ctx, x1765, x3, 9);
    let x1767: BytePoly_4 = bigint_nondet_rem!(ctx, x1765, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1766, x3, 13), x1767, 13),
            x1765,
            13
        ),
        73156,
        4,
    )?;
    let x1768: BytePoly_8 = bigint_mul!(x1767, x1722, 8);
    let x1769: BytePoly_9 = bigint_nondet_quot!(ctx, x1768, x3, 9);
    let x1770: BytePoly_4 = bigint_nondet_rem!(ctx, x1768, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1769, x3, 13), x1770, 13),
            x1768,
            13
        ),
        73156,
        4,
    )?;
    let x1771: BytePoly_4 = bigint_add!(bigint_sub!(x1728, x1770, 4), x3, 4);
    let x1772: BytePoly_4 = bigint_nondet_quot!(ctx, x1771, x3, 4);
    let x1773: BytePoly_4 = bigint_nondet_rem!(ctx, x1771, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1772, x3, 8), x1773, 8), x1771, 8),
        32515,
        2,
    )?;
    let x1774: BytePoly_8 = bigint_mul!(x1767, x1767, 8);
    let x1775: BytePoly_9 = bigint_nondet_quot!(ctx, x1774, x3, 9);
    let x1776: BytePoly_4 = bigint_nondet_rem!(ctx, x1774, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1775, x3, 13), x1776, 13),
            x1774,
            13
        ),
        73156,
        4,
    )?;
    let x1777: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1776, x1722, 4), x3, 4), x1722, 4),
        x3,
        4
    );
    let x1778: BytePoly_4 = bigint_nondet_quot!(ctx, x1777, x3, 4);
    let x1779: BytePoly_4 = bigint_nondet_rem!(ctx, x1777, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1778, x3, 8), x1779, 8), x1777, 8),
        32515,
        2,
    )?;
    let x1780: BytePoly_8 = bigint_mul!(x1767, x1779, 8);
    let x1781: BytePoly_9 = bigint_nondet_quot!(ctx, x1780, x3, 9);
    let x1782: BytePoly_4 = bigint_nondet_rem!(ctx, x1780, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1781, x3, 13), x1782, 13),
            x1780,
            13
        ),
        73156,
        4,
    )?;
    let x1783: BytePoly_4 = bigint_add!(bigint_sub!(x3, bigint_add!(x1782, x1773, 4), 4), x3, 4);
    let x1784: BytePoly_4 = bigint_nondet_quot!(ctx, x1783, x3, 4);
    let x1785: BytePoly_4 = bigint_nondet_rem!(ctx, x1783, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1784, x3, 8), x1785, 8), x1783, 8),
        32515,
        2,
    )?;
    let x1786: BytePoly_1 = bigint_nondet_rem!(ctx, x1730, x4, 1);
    let x1787: BytePoly_4 = bigint_nondet_quot!(ctx, x1730, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1787, x4, 5), x1786, 5), x1730, 5),
        32515,
        2,
    )?;
    let x1788: BytePoly_1 = bigint_sub!(x5, x1786, 1);
    eqz(ctx, &bigint_mul!(x1786, x1788, 2), 8131, 2)?;
    let x1789: BytePoly_4 = bigint_add!(bigint_sub!(x1785, x1751, 4), x3, 4);
    let x1790: BytePoly_4 = bigint_add!(bigint_sub!(x1779, x1749, 4), x3, 4);
    let x1791: BytePoly_4 = bigint_nondet_inv!(ctx, x1790, x3, 4);
    let x1792: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x1789, x1791, 8), x3, 4);
    let x1793: BytePoly_8 = bigint_add!(bigint_sub!(bigint_mul!(x1792, x1790, 8), x1789, 8), x3, 8);
    let x1794: BytePoly_9 = bigint_nondet_quot!(ctx, x1793, x3, 9);
    eqz(
        ctx,
        &bigint_sub!(x1793, bigint_mul!(x1794, x3, 13), 13),
        73156,
        4,
    )?;
    let x1795: BytePoly_8 = bigint_mul!(x1792, x1792, 8);
    let x1796: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1795, x1749, 8), x3, 8), x1779, 8),
        x3,
        8
    );
    let x1797: BytePoly_9 = bigint_nondet_quot!(ctx, x1796, x3, 9);
    let x1798: BytePoly_4 = bigint_nondet_rem!(ctx, x1796, x3, 4);
    let x1799: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x3,
                bigint_add!(
                    bigint_mul!(x1792, x1798, 8),
                    bigint_add!(bigint_sub!(x1751, bigint_mul!(x1792, x1749, 8), 8), x3, 8),
                    8
                ),
                8
            ),
            x3,
            8
        ),
        x3,
        8
    );
    let x1800: BytePoly_9 = bigint_nondet_quot!(ctx, x1799, x3, 9);
    let x1801: BytePoly_4 = bigint_nondet_rem!(ctx, x1799, x3, 4);
    let x1802: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1795, bigint_mul!(x1797, x3, 13), 13),
                        x1749,
                        13
                    ),
                    x1779,
                    13
                ),
                x3,
                13
            ),
            x3,
            13
        ),
        x1798,
        13
    );
    eqz(ctx, &x1802, 73156, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1800, x3, 13), x1801, 13),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1792, bigint_sub!(x1749, x1798, 4), 8),
                        x1751,
                        8
                    ),
                    x3,
                    8
                ),
                x3,
                8
            ),
            13
        ),
        73156,
        4,
    )?;
    let x1803: BytePoly_5 = bigint_add!(
        bigint_mul!(x1798, x1786, 5),
        bigint_mul!(x1749, x1788, 5),
        5
    );
    let x1804: BytePoly_5 = bigint_add!(
        bigint_mul!(x1801, x1786, 5),
        bigint_mul!(x1751, x1788, 5),
        5
    );
    let x1805: BytePoly_6 = bigint_nondet_quot!(ctx, x1803, x3, 6);
    let x1806: BytePoly_4 = bigint_nondet_rem!(ctx, x1803, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1805, x3, 10), x1806, 10),
            x1803,
            10
        ),
        48771,
        4,
    )?;
    let x1807: BytePoly_6 = bigint_nondet_quot!(ctx, x1804, x3, 6);
    let x1808: BytePoly_4 = bigint_nondet_rem!(ctx, x1804, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1807, x3, 10), x1808, 10),
            x1804,
            10
        ),
        48771,
        4,
    )?;
    let x1809: BytePoly_8 = bigint_mul!(x1779, x1779, 8);
    let x1810: BytePoly_9 = bigint_nondet_quot!(ctx, x1809, x3, 9);
    let x1811: BytePoly_4 = bigint_nondet_rem!(ctx, x1809, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1810, x3, 13), x1811, 13),
            x1809,
            13
        ),
        73156,
        4,
    )?;
    let x1812: BytePoly_5 = bigint_add!(bigint_mul!(x1811, x0, 5), x2, 5);
    let x1813: BytePoly_6 = bigint_nondet_quot!(ctx, x1812, x3, 6);
    let x1814: BytePoly_4 = bigint_nondet_rem!(ctx, x1812, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1813, x3, 10), x1814, 10),
            x1812,
            10
        ),
        48771,
        4,
    )?;
    let x1815: BytePoly_4 = bigint_add!(x1785, x1785, 4);
    let x1816: BytePoly_4 = bigint_nondet_quot!(ctx, x1815, x3, 4);
    let x1817: BytePoly_4 = bigint_nondet_rem!(ctx, x1815, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1816, x3, 8), x1817, 8), x1815, 8),
        32515,
        2,
    )?;
    let x1818: BytePoly_4 = bigint_nondet_inv!(ctx, x1817, x3, 4);
    let x1819: BytePoly_8 = bigint_mul!(x1817, x1818, 8);
    let x1820: BytePoly_9 = bigint_nondet_quot!(ctx, x1819, x3, 9);
    let x1821: BytePoly_4 = bigint_nondet_rem!(ctx, x1819, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1820, x3, 13), x1821, 13),
            x1819,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1821, x5, 4), 34, 1)?;
    let x1822: BytePoly_8 = bigint_mul!(x1814, x1818, 8);
    let x1823: BytePoly_9 = bigint_nondet_quot!(ctx, x1822, x3, 9);
    let x1824: BytePoly_4 = bigint_nondet_rem!(ctx, x1822, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1823, x3, 13), x1824, 13),
            x1822,
            13
        ),
        73156,
        4,
    )?;
    let x1825: BytePoly_8 = bigint_mul!(x1824, x1779, 8);
    let x1826: BytePoly_9 = bigint_nondet_quot!(ctx, x1825, x3, 9);
    let x1827: BytePoly_4 = bigint_nondet_rem!(ctx, x1825, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1826, x3, 13), x1827, 13),
            x1825,
            13
        ),
        73156,
        4,
    )?;
    let x1828: BytePoly_4 = bigint_add!(bigint_sub!(x1785, x1827, 4), x3, 4);
    let x1829: BytePoly_4 = bigint_nondet_quot!(ctx, x1828, x3, 4);
    let x1830: BytePoly_4 = bigint_nondet_rem!(ctx, x1828, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1829, x3, 8), x1830, 8), x1828, 8),
        32515,
        2,
    )?;
    let x1831: BytePoly_8 = bigint_mul!(x1824, x1824, 8);
    let x1832: BytePoly_9 = bigint_nondet_quot!(ctx, x1831, x3, 9);
    let x1833: BytePoly_4 = bigint_nondet_rem!(ctx, x1831, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1832, x3, 13), x1833, 13),
            x1831,
            13
        ),
        73156,
        4,
    )?;
    let x1834: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1833, x1779, 4), x3, 4), x1779, 4),
        x3,
        4
    );
    let x1835: BytePoly_4 = bigint_nondet_quot!(ctx, x1834, x3, 4);
    let x1836: BytePoly_4 = bigint_nondet_rem!(ctx, x1834, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1835, x3, 8), x1836, 8), x1834, 8),
        32515,
        2,
    )?;
    let x1837: BytePoly_8 = bigint_mul!(x1824, x1836, 8);
    let x1838: BytePoly_9 = bigint_nondet_quot!(ctx, x1837, x3, 9);
    let x1839: BytePoly_4 = bigint_nondet_rem!(ctx, x1837, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1838, x3, 13), x1839, 13),
            x1837,
            13
        ),
        73156,
        4,
    )?;
    let x1840: BytePoly_4 = bigint_add!(bigint_sub!(x3, bigint_add!(x1839, x1830, 4), 4), x3, 4);
    let x1841: BytePoly_4 = bigint_nondet_quot!(ctx, x1840, x3, 4);
    let x1842: BytePoly_4 = bigint_nondet_rem!(ctx, x1840, x3, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1841, x3, 8), x1842, 8), x1840, 8),
        32515,
        2,
    )?;
    let x1843: BytePoly_4 = bigint_add!(bigint_sub!(bigint_sub!(x3, x10, 4), x1808, 4), x3, 4);
    let x1844: BytePoly_4 = bigint_add!(bigint_sub!(x9, x1806, 4), x3, 4);
    let x1845: BytePoly_4 = bigint_nondet_inv!(ctx, x1844, x3, 4);
    let x1846: BytePoly_4 = bigint_nondet_rem!(ctx, bigint_mul!(x1843, x1845, 8), x3, 4);
    let x1847: BytePoly_8 = bigint_add!(bigint_sub!(bigint_mul!(x1846, x1844, 8), x1843, 8), x3, 8);
    let x1848: BytePoly_9 = bigint_nondet_quot!(ctx, x1847, x3, 9);
    eqz(
        ctx,
        &bigint_sub!(x1847, bigint_mul!(x1848, x3, 13), 13),
        73156,
        4,
    )?;
    let x1849: BytePoly_8 = bigint_mul!(x1846, x1846, 8);
    let x1850: BytePoly_8 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1849, x1806, 8), x3, 8), x9, 8),
        x3,
        8
    );
    let x1851: BytePoly_9 = bigint_nondet_quot!(ctx, x1850, x3, 9);
    let x1852: BytePoly_4 = bigint_nondet_rem!(ctx, x1850, x3, 4);
    let x1853: BytePoly_8 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x3,
                bigint_add!(
                    bigint_mul!(x1846, x1852, 8),
                    bigint_add!(bigint_sub!(x1808, bigint_mul!(x1846, x1806, 8), 8), x3, 8),
                    8
                ),
                8
            ),
            x3,
            8
        ),
        x3,
        8
    );
    let x1854: BytePoly_9 = bigint_nondet_quot!(ctx, x1853, x3, 9);
    let x1855: BytePoly_4 = bigint_nondet_rem!(ctx, x1853, x3, 4);
    let x1856: BytePoly_13 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1849, bigint_mul!(x1851, x3, 13), 13),
                        x1806,
                        13
                    ),
                    x9,
                    13
                ),
                x3,
                13
            ),
            x3,
            13
        ),
        x1852,
        13
    );
    eqz(ctx, &x1856, 73156, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1854, x3, 13), x1855, 13),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1846, bigint_sub!(x1806, x1852, 4), 8),
                        x1808,
                        8
                    ),
                    x3,
                    8
                ),
                x3,
                8
            ),
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1852, x11, 4), 34, 1)?;
    eqz(ctx, &bigint_sub!(x1855, x12, 4), 34, 1)?;
    return Ok(());
}
pub fn ec_aff_neg_test_8(ctx: &mut BigIntContext) -> Result<()> {
    let x0: BytePoly_1 = bigint_const!(ctx, 11);
    let x1: BytePoly_1 = bigint_def!(ctx, 1, 0, 1);
    let x2: BytePoly_1 = bigint_def!(ctx, 1, 1, 1);
    let x3: BytePoly_1 = bigint_def!(ctx, 1, 2, 1);
    let x4: BytePoly_1 = bigint_def!(ctx, 1, 3, 1);
    eqz(ctx, &bigint_sub!(x1, x3, 1), 34, 1)?;
    eqz(ctx, &bigint_sub!(bigint_sub!(x0, x2, 1), x4, 1), 34, 1)?;
    return Ok(());
}
pub fn ec_aff_sub_test_8(ctx: &mut BigIntContext) -> Result<()> {
    let x0: BytePoly_1 = bigint_const!(ctx, 11);
    let x1: BytePoly_1 = bigint_def!(ctx, 1, 0, 1);
    let x2: BytePoly_1 = bigint_def!(ctx, 1, 1, 1);
    let x3: BytePoly_1 = bigint_def!(ctx, 1, 2, 1);
    let x4: BytePoly_1 = bigint_def!(ctx, 1, 3, 1);
    let x5: BytePoly_1 = bigint_def!(ctx, 1, 4, 1);
    let x6: BytePoly_1 = bigint_def!(ctx, 1, 5, 1);
    let x7: BytePoly_1 = bigint_add!(bigint_sub!(bigint_sub!(x0, x4, 1), x2, 1), x0, 1);
    let x8: BytePoly_1 = bigint_add!(bigint_sub!(x3, x1, 1), x0, 1);
    let x9: BytePoly_1 = bigint_nondet_inv!(ctx, x8, x0, 1);
    let x10: BytePoly_1 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x9, 2), x0, 1);
    let x11: BytePoly_2 = bigint_add!(bigint_sub!(bigint_mul!(x10, x8, 2), x7, 2), x0, 2);
    let x12: BytePoly_3 = bigint_nondet_quot!(ctx, x11, x0, 3);
    eqz(ctx, &bigint_sub!(x11, bigint_mul!(x12, x0, 4), 4), 24387, 2)?;
    let x13: BytePoly_2 = bigint_mul!(x10, x10, 2);
    let x14: BytePoly_2 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x13, x1, 2), x0, 2), x3, 2),
        x0,
        2
    );
    let x15: BytePoly_3 = bigint_nondet_quot!(ctx, x14, x0, 3);
    let x16: BytePoly_1 = bigint_nondet_rem!(ctx, x14, x0, 1);
    let x17: BytePoly_2 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x10, x16, 2),
                    bigint_add!(bigint_sub!(x2, bigint_mul!(x10, x1, 2), 2), x0, 2),
                    2
                ),
                2
            ),
            x0,
            2
        ),
        x0,
        2
    );
    let x18: BytePoly_3 = bigint_nondet_quot!(ctx, x17, x0, 3);
    let x19: BytePoly_1 = bigint_nondet_rem!(ctx, x17, x0, 1);
    let x20: BytePoly_4 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x13, bigint_mul!(x15, x0, 4), 4), x1, 4),
                    x3,
                    4
                ),
                x0,
                4
            ),
            x0,
            4
        ),
        x16,
        4
    );
    eqz(ctx, &x20, 24387, 2)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x18, x0, 4), x19, 4),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x10, bigint_sub!(x1, x16, 1), 2), x2, 2),
                    x0,
                    2
                ),
                x0,
                2
            ),
            4
        ),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x16, x5, 1), 34, 1)?;
    eqz(ctx, &bigint_sub!(x19, x6, 1), 34, 1)?;
    return Ok(());
}
pub fn ec_pts_eq_test_8(ctx: &mut BigIntContext) -> Result<()> {
    let x0: BytePoly_1 = bigint_def!(ctx, 1, 0, 1);
    let x1: BytePoly_1 = bigint_def!(ctx, 1, 1, 1);
    let x2: BytePoly_1 = bigint_def!(ctx, 1, 2, 1);
    let x3: BytePoly_1 = bigint_def!(ctx, 1, 3, 1);
    eqz(ctx, &bigint_sub!(x0, x2, 1), 34, 1)?;
    eqz(ctx, &bigint_sub!(x1, x3, 1), 34, 1)?;
    return Ok(());
}
pub fn rep_ec_aff_add_test_256_r5(ctx: &mut BigIntContext) -> Result<()> {
    let x0: BytePoly_32 = bigint_const!(
        ctx, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0
    );
    let x1: BytePoly_32 = bigint_def!(ctx, 32, 0, 1);
    let x2: BytePoly_32 = bigint_def!(ctx, 32, 1, 1);
    let x3: BytePoly_32 = bigint_def!(ctx, 32, 2, 1);
    let x4: BytePoly_32 = bigint_def!(ctx, 32, 3, 1);
    let x5: BytePoly_32 = bigint_def!(ctx, 32, 4, 1);
    let x6: BytePoly_32 = bigint_def!(ctx, 32, 5, 1);
    let x7: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2, 32), x0, 32);
    let x8: BytePoly_32 = bigint_add!(bigint_sub!(x3, x1, 32), x0, 32);
    let x9: BytePoly_32 = bigint_nondet_inv!(ctx, x8, x0, 32);
    let x10: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x9, 64), x0, 32);
    let x11: BytePoly_64 = bigint_add!(bigint_sub!(bigint_mul!(x10, x8, 64), x7, 64), x0, 64);
    let x12: BytePoly_66 = bigint_nondet_quot!(ctx, x11, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x11, bigint_mul!(x12, x0, 98), 98),
        536459,
        4,
    )?;
    let x13: BytePoly_64 = bigint_mul!(x10, x10, 64);
    let x14: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x13, x1, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x15: BytePoly_66 = bigint_nondet_quot!(ctx, x14, x0, 66);
    let x16: BytePoly_32 = bigint_nondet_rem!(ctx, x14, x0, 32);
    let x17: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x10, x16, 64),
                    bigint_add!(bigint_sub!(x2, bigint_mul!(x10, x1, 64), 64), x0, 64),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x18: BytePoly_66 = bigint_nondet_quot!(ctx, x17, x0, 66);
    let x19: BytePoly_32 = bigint_nondet_rem!(ctx, x17, x0, 32);
    let x20: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x13, bigint_mul!(x15, x0, 98), 98), x1, 98),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x16,
        98
    );
    eqz(ctx, &x20, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x18, x0, 98), x19, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x10, bigint_sub!(x1, x16, 32), 64), x2, 64),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x21: BytePoly_32 = bigint_add!(bigint_sub!(x4, x19, 32), x0, 32);
    let x22: BytePoly_32 = bigint_add!(bigint_sub!(x3, x16, 32), x0, 32);
    let x23: BytePoly_32 = bigint_nondet_inv!(ctx, x22, x0, 32);
    let x24: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x21, x23, 64), x0, 32);
    let x25: BytePoly_64 = bigint_add!(bigint_sub!(bigint_mul!(x24, x22, 64), x21, 64), x0, 64);
    let x26: BytePoly_66 = bigint_nondet_quot!(ctx, x25, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x25, bigint_mul!(x26, x0, 98), 98),
        536459,
        4,
    )?;
    let x27: BytePoly_64 = bigint_mul!(x24, x24, 64);
    let x28: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x27, x16, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x29: BytePoly_66 = bigint_nondet_quot!(ctx, x28, x0, 66);
    let x30: BytePoly_32 = bigint_nondet_rem!(ctx, x28, x0, 32);
    let x31: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x24, x30, 64),
                    bigint_add!(bigint_sub!(x19, bigint_mul!(x24, x16, 64), 64), x0, 64),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x32: BytePoly_66 = bigint_nondet_quot!(ctx, x31, x0, 66);
    let x33: BytePoly_32 = bigint_nondet_rem!(ctx, x31, x0, 32);
    let x34: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x27, bigint_mul!(x29, x0, 98), 98), x16, 98),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x30,
        98
    );
    eqz(ctx, &x34, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x32, x0, 98), x33, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x24, bigint_sub!(x16, x30, 32), 64), x19, 64),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x35: BytePoly_32 = bigint_add!(bigint_sub!(x4, x33, 32), x0, 32);
    let x36: BytePoly_32 = bigint_add!(bigint_sub!(x3, x30, 32), x0, 32);
    let x37: BytePoly_32 = bigint_nondet_inv!(ctx, x36, x0, 32);
    let x38: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x35, x37, 64), x0, 32);
    let x39: BytePoly_64 = bigint_add!(bigint_sub!(bigint_mul!(x38, x36, 64), x35, 64), x0, 64);
    let x40: BytePoly_66 = bigint_nondet_quot!(ctx, x39, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x39, bigint_mul!(x40, x0, 98), 98),
        536459,
        4,
    )?;
    let x41: BytePoly_64 = bigint_mul!(x38, x38, 64);
    let x42: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x41, x30, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x43: BytePoly_66 = bigint_nondet_quot!(ctx, x42, x0, 66);
    let x44: BytePoly_32 = bigint_nondet_rem!(ctx, x42, x0, 32);
    let x45: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x38, x44, 64),
                    bigint_add!(bigint_sub!(x33, bigint_mul!(x38, x30, 64), 64), x0, 64),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x46: BytePoly_66 = bigint_nondet_quot!(ctx, x45, x0, 66);
    let x47: BytePoly_32 = bigint_nondet_rem!(ctx, x45, x0, 32);
    let x48: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x41, bigint_mul!(x43, x0, 98), 98), x30, 98),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x44,
        98
    );
    eqz(ctx, &x48, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x46, x0, 98), x47, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x38, bigint_sub!(x30, x44, 32), 64), x33, 64),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x49: BytePoly_32 = bigint_add!(bigint_sub!(x4, x47, 32), x0, 32);
    let x50: BytePoly_32 = bigint_add!(bigint_sub!(x3, x44, 32), x0, 32);
    let x51: BytePoly_32 = bigint_nondet_inv!(ctx, x50, x0, 32);
    let x52: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x49, x51, 64), x0, 32);
    let x53: BytePoly_64 = bigint_add!(bigint_sub!(bigint_mul!(x52, x50, 64), x49, 64), x0, 64);
    let x54: BytePoly_66 = bigint_nondet_quot!(ctx, x53, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x53, bigint_mul!(x54, x0, 98), 98),
        536459,
        4,
    )?;
    let x55: BytePoly_64 = bigint_mul!(x52, x52, 64);
    let x56: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x55, x44, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x57: BytePoly_66 = bigint_nondet_quot!(ctx, x56, x0, 66);
    let x58: BytePoly_32 = bigint_nondet_rem!(ctx, x56, x0, 32);
    let x59: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x52, x58, 64),
                    bigint_add!(bigint_sub!(x47, bigint_mul!(x52, x44, 64), 64), x0, 64),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x60: BytePoly_66 = bigint_nondet_quot!(ctx, x59, x0, 66);
    let x61: BytePoly_32 = bigint_nondet_rem!(ctx, x59, x0, 32);
    let x62: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x55, bigint_mul!(x57, x0, 98), 98), x44, 98),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x58,
        98
    );
    eqz(ctx, &x62, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x60, x0, 98), x61, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x52, bigint_sub!(x44, x58, 32), 64), x47, 64),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x63: BytePoly_32 = bigint_add!(bigint_sub!(x4, x61, 32), x0, 32);
    let x64: BytePoly_32 = bigint_add!(bigint_sub!(x3, x58, 32), x0, 32);
    let x65: BytePoly_32 = bigint_nondet_inv!(ctx, x64, x0, 32);
    let x66: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x63, x65, 64), x0, 32);
    let x67: BytePoly_64 = bigint_add!(bigint_sub!(bigint_mul!(x66, x64, 64), x63, 64), x0, 64);
    let x68: BytePoly_66 = bigint_nondet_quot!(ctx, x67, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x67, bigint_mul!(x68, x0, 98), 98),
        536459,
        4,
    )?;
    let x69: BytePoly_64 = bigint_mul!(x66, x66, 64);
    let x70: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x69, x58, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x71: BytePoly_66 = bigint_nondet_quot!(ctx, x70, x0, 66);
    let x72: BytePoly_32 = bigint_nondet_rem!(ctx, x70, x0, 32);
    let x73: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x66, x72, 64),
                    bigint_add!(bigint_sub!(x61, bigint_mul!(x66, x58, 64), 64), x0, 64),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x74: BytePoly_66 = bigint_nondet_quot!(ctx, x73, x0, 66);
    let x75: BytePoly_32 = bigint_nondet_rem!(ctx, x73, x0, 32);
    let x76: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x69, bigint_mul!(x71, x0, 98), 98), x58, 98),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x72,
        98
    );
    eqz(ctx, &x76, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x74, x0, 98), x75, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x66, bigint_sub!(x58, x72, 32), 64), x61, 64),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x72, x5, 32), 34, 1)?;
    eqz(ctx, &bigint_sub!(x75, x6, 32), 34, 1)?;
    return Ok(());
}
pub fn rep_ec_aff_add_test_256_r10(ctx: &mut BigIntContext) -> Result<()> {
    let x0: BytePoly_32 = bigint_const!(
        ctx, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0
    );
    let x1: BytePoly_32 = bigint_def!(ctx, 32, 0, 1);
    let x2: BytePoly_32 = bigint_def!(ctx, 32, 1, 1);
    let x3: BytePoly_32 = bigint_def!(ctx, 32, 2, 1);
    let x4: BytePoly_32 = bigint_def!(ctx, 32, 3, 1);
    let x5: BytePoly_32 = bigint_def!(ctx, 32, 4, 1);
    let x6: BytePoly_32 = bigint_def!(ctx, 32, 5, 1);
    let x7: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2, 32), x0, 32);
    let x8: BytePoly_32 = bigint_add!(bigint_sub!(x3, x1, 32), x0, 32);
    let x9: BytePoly_32 = bigint_nondet_inv!(ctx, x8, x0, 32);
    let x10: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x9, 64), x0, 32);
    let x11: BytePoly_64 = bigint_add!(bigint_sub!(bigint_mul!(x10, x8, 64), x7, 64), x0, 64);
    let x12: BytePoly_66 = bigint_nondet_quot!(ctx, x11, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x11, bigint_mul!(x12, x0, 98), 98),
        536459,
        4,
    )?;
    let x13: BytePoly_64 = bigint_mul!(x10, x10, 64);
    let x14: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x13, x1, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x15: BytePoly_66 = bigint_nondet_quot!(ctx, x14, x0, 66);
    let x16: BytePoly_32 = bigint_nondet_rem!(ctx, x14, x0, 32);
    let x17: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x10, x16, 64),
                    bigint_add!(bigint_sub!(x2, bigint_mul!(x10, x1, 64), 64), x0, 64),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x18: BytePoly_66 = bigint_nondet_quot!(ctx, x17, x0, 66);
    let x19: BytePoly_32 = bigint_nondet_rem!(ctx, x17, x0, 32);
    let x20: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x13, bigint_mul!(x15, x0, 98), 98), x1, 98),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x16,
        98
    );
    eqz(ctx, &x20, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x18, x0, 98), x19, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x10, bigint_sub!(x1, x16, 32), 64), x2, 64),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x21: BytePoly_32 = bigint_add!(bigint_sub!(x4, x19, 32), x0, 32);
    let x22: BytePoly_32 = bigint_add!(bigint_sub!(x3, x16, 32), x0, 32);
    let x23: BytePoly_32 = bigint_nondet_inv!(ctx, x22, x0, 32);
    let x24: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x21, x23, 64), x0, 32);
    let x25: BytePoly_64 = bigint_add!(bigint_sub!(bigint_mul!(x24, x22, 64), x21, 64), x0, 64);
    let x26: BytePoly_66 = bigint_nondet_quot!(ctx, x25, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x25, bigint_mul!(x26, x0, 98), 98),
        536459,
        4,
    )?;
    let x27: BytePoly_64 = bigint_mul!(x24, x24, 64);
    let x28: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x27, x16, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x29: BytePoly_66 = bigint_nondet_quot!(ctx, x28, x0, 66);
    let x30: BytePoly_32 = bigint_nondet_rem!(ctx, x28, x0, 32);
    let x31: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x24, x30, 64),
                    bigint_add!(bigint_sub!(x19, bigint_mul!(x24, x16, 64), 64), x0, 64),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x32: BytePoly_66 = bigint_nondet_quot!(ctx, x31, x0, 66);
    let x33: BytePoly_32 = bigint_nondet_rem!(ctx, x31, x0, 32);
    let x34: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x27, bigint_mul!(x29, x0, 98), 98), x16, 98),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x30,
        98
    );
    eqz(ctx, &x34, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x32, x0, 98), x33, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x24, bigint_sub!(x16, x30, 32), 64), x19, 64),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x35: BytePoly_32 = bigint_add!(bigint_sub!(x4, x33, 32), x0, 32);
    let x36: BytePoly_32 = bigint_add!(bigint_sub!(x3, x30, 32), x0, 32);
    let x37: BytePoly_32 = bigint_nondet_inv!(ctx, x36, x0, 32);
    let x38: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x35, x37, 64), x0, 32);
    let x39: BytePoly_64 = bigint_add!(bigint_sub!(bigint_mul!(x38, x36, 64), x35, 64), x0, 64);
    let x40: BytePoly_66 = bigint_nondet_quot!(ctx, x39, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x39, bigint_mul!(x40, x0, 98), 98),
        536459,
        4,
    )?;
    let x41: BytePoly_64 = bigint_mul!(x38, x38, 64);
    let x42: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x41, x30, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x43: BytePoly_66 = bigint_nondet_quot!(ctx, x42, x0, 66);
    let x44: BytePoly_32 = bigint_nondet_rem!(ctx, x42, x0, 32);
    let x45: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x38, x44, 64),
                    bigint_add!(bigint_sub!(x33, bigint_mul!(x38, x30, 64), 64), x0, 64),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x46: BytePoly_66 = bigint_nondet_quot!(ctx, x45, x0, 66);
    let x47: BytePoly_32 = bigint_nondet_rem!(ctx, x45, x0, 32);
    let x48: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x41, bigint_mul!(x43, x0, 98), 98), x30, 98),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x44,
        98
    );
    eqz(ctx, &x48, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x46, x0, 98), x47, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x38, bigint_sub!(x30, x44, 32), 64), x33, 64),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x49: BytePoly_32 = bigint_add!(bigint_sub!(x4, x47, 32), x0, 32);
    let x50: BytePoly_32 = bigint_add!(bigint_sub!(x3, x44, 32), x0, 32);
    let x51: BytePoly_32 = bigint_nondet_inv!(ctx, x50, x0, 32);
    let x52: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x49, x51, 64), x0, 32);
    let x53: BytePoly_64 = bigint_add!(bigint_sub!(bigint_mul!(x52, x50, 64), x49, 64), x0, 64);
    let x54: BytePoly_66 = bigint_nondet_quot!(ctx, x53, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x53, bigint_mul!(x54, x0, 98), 98),
        536459,
        4,
    )?;
    let x55: BytePoly_64 = bigint_mul!(x52, x52, 64);
    let x56: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x55, x44, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x57: BytePoly_66 = bigint_nondet_quot!(ctx, x56, x0, 66);
    let x58: BytePoly_32 = bigint_nondet_rem!(ctx, x56, x0, 32);
    let x59: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x52, x58, 64),
                    bigint_add!(bigint_sub!(x47, bigint_mul!(x52, x44, 64), 64), x0, 64),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x60: BytePoly_66 = bigint_nondet_quot!(ctx, x59, x0, 66);
    let x61: BytePoly_32 = bigint_nondet_rem!(ctx, x59, x0, 32);
    let x62: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x55, bigint_mul!(x57, x0, 98), 98), x44, 98),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x58,
        98
    );
    eqz(ctx, &x62, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x60, x0, 98), x61, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x52, bigint_sub!(x44, x58, 32), 64), x47, 64),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x63: BytePoly_32 = bigint_add!(bigint_sub!(x4, x61, 32), x0, 32);
    let x64: BytePoly_32 = bigint_add!(bigint_sub!(x3, x58, 32), x0, 32);
    let x65: BytePoly_32 = bigint_nondet_inv!(ctx, x64, x0, 32);
    let x66: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x63, x65, 64), x0, 32);
    let x67: BytePoly_64 = bigint_add!(bigint_sub!(bigint_mul!(x66, x64, 64), x63, 64), x0, 64);
    let x68: BytePoly_66 = bigint_nondet_quot!(ctx, x67, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x67, bigint_mul!(x68, x0, 98), 98),
        536459,
        4,
    )?;
    let x69: BytePoly_64 = bigint_mul!(x66, x66, 64);
    let x70: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x69, x58, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x71: BytePoly_66 = bigint_nondet_quot!(ctx, x70, x0, 66);
    let x72: BytePoly_32 = bigint_nondet_rem!(ctx, x70, x0, 32);
    let x73: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x66, x72, 64),
                    bigint_add!(bigint_sub!(x61, bigint_mul!(x66, x58, 64), 64), x0, 64),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x74: BytePoly_66 = bigint_nondet_quot!(ctx, x73, x0, 66);
    let x75: BytePoly_32 = bigint_nondet_rem!(ctx, x73, x0, 32);
    let x76: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x69, bigint_mul!(x71, x0, 98), 98), x58, 98),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x72,
        98
    );
    eqz(ctx, &x76, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x74, x0, 98), x75, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x66, bigint_sub!(x58, x72, 32), 64), x61, 64),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x77: BytePoly_32 = bigint_add!(bigint_sub!(x4, x75, 32), x0, 32);
    let x78: BytePoly_32 = bigint_add!(bigint_sub!(x3, x72, 32), x0, 32);
    let x79: BytePoly_32 = bigint_nondet_inv!(ctx, x78, x0, 32);
    let x80: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x77, x79, 64), x0, 32);
    let x81: BytePoly_64 = bigint_add!(bigint_sub!(bigint_mul!(x80, x78, 64), x77, 64), x0, 64);
    let x82: BytePoly_66 = bigint_nondet_quot!(ctx, x81, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x81, bigint_mul!(x82, x0, 98), 98),
        536459,
        4,
    )?;
    let x83: BytePoly_64 = bigint_mul!(x80, x80, 64);
    let x84: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x83, x72, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x85: BytePoly_66 = bigint_nondet_quot!(ctx, x84, x0, 66);
    let x86: BytePoly_32 = bigint_nondet_rem!(ctx, x84, x0, 32);
    let x87: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x80, x86, 64),
                    bigint_add!(bigint_sub!(x75, bigint_mul!(x80, x72, 64), 64), x0, 64),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x88: BytePoly_66 = bigint_nondet_quot!(ctx, x87, x0, 66);
    let x89: BytePoly_32 = bigint_nondet_rem!(ctx, x87, x0, 32);
    let x90: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x83, bigint_mul!(x85, x0, 98), 98), x72, 98),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x86,
        98
    );
    eqz(ctx, &x90, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x88, x0, 98), x89, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x80, bigint_sub!(x72, x86, 32), 64), x75, 64),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x91: BytePoly_32 = bigint_add!(bigint_sub!(x4, x89, 32), x0, 32);
    let x92: BytePoly_32 = bigint_add!(bigint_sub!(x3, x86, 32), x0, 32);
    let x93: BytePoly_32 = bigint_nondet_inv!(ctx, x92, x0, 32);
    let x94: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x91, x93, 64), x0, 32);
    let x95: BytePoly_64 = bigint_add!(bigint_sub!(bigint_mul!(x94, x92, 64), x91, 64), x0, 64);
    let x96: BytePoly_66 = bigint_nondet_quot!(ctx, x95, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x95, bigint_mul!(x96, x0, 98), 98),
        536459,
        4,
    )?;
    let x97: BytePoly_64 = bigint_mul!(x94, x94, 64);
    let x98: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x97, x86, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x99: BytePoly_66 = bigint_nondet_quot!(ctx, x98, x0, 66);
    let x100: BytePoly_32 = bigint_nondet_rem!(ctx, x98, x0, 32);
    let x101: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x94, x100, 64),
                    bigint_add!(bigint_sub!(x89, bigint_mul!(x94, x86, 64), 64), x0, 64),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x102: BytePoly_66 = bigint_nondet_quot!(ctx, x101, x0, 66);
    let x103: BytePoly_32 = bigint_nondet_rem!(ctx, x101, x0, 32);
    let x104: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x97, bigint_mul!(x99, x0, 98), 98), x86, 98),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x100,
        98
    );
    eqz(ctx, &x104, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x102, x0, 98), x103, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x94, bigint_sub!(x86, x100, 32), 64), x89, 64),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x105: BytePoly_32 = bigint_add!(bigint_sub!(x4, x103, 32), x0, 32);
    let x106: BytePoly_32 = bigint_add!(bigint_sub!(x3, x100, 32), x0, 32);
    let x107: BytePoly_32 = bigint_nondet_inv!(ctx, x106, x0, 32);
    let x108: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x105, x107, 64), x0, 32);
    let x109: BytePoly_64 = bigint_add!(bigint_sub!(bigint_mul!(x108, x106, 64), x105, 64), x0, 64);
    let x110: BytePoly_66 = bigint_nondet_quot!(ctx, x109, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x109, bigint_mul!(x110, x0, 98), 98),
        536459,
        4,
    )?;
    let x111: BytePoly_64 = bigint_mul!(x108, x108, 64);
    let x112: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x111, x100, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x113: BytePoly_66 = bigint_nondet_quot!(ctx, x112, x0, 66);
    let x114: BytePoly_32 = bigint_nondet_rem!(ctx, x112, x0, 32);
    let x115: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x108, x114, 64),
                    bigint_add!(bigint_sub!(x103, bigint_mul!(x108, x100, 64), 64), x0, 64),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x116: BytePoly_66 = bigint_nondet_quot!(ctx, x115, x0, 66);
    let x117: BytePoly_32 = bigint_nondet_rem!(ctx, x115, x0, 32);
    let x118: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x111, bigint_mul!(x113, x0, 98), 98), x100, 98),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x114,
        98
    );
    eqz(ctx, &x118, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x116, x0, 98), x117, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x108, bigint_sub!(x100, x114, 32), 64), x103, 64),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x119: BytePoly_32 = bigint_add!(bigint_sub!(x4, x117, 32), x0, 32);
    let x120: BytePoly_32 = bigint_add!(bigint_sub!(x3, x114, 32), x0, 32);
    let x121: BytePoly_32 = bigint_nondet_inv!(ctx, x120, x0, 32);
    let x122: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x119, x121, 64), x0, 32);
    let x123: BytePoly_64 = bigint_add!(bigint_sub!(bigint_mul!(x122, x120, 64), x119, 64), x0, 64);
    let x124: BytePoly_66 = bigint_nondet_quot!(ctx, x123, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x123, bigint_mul!(x124, x0, 98), 98),
        536459,
        4,
    )?;
    let x125: BytePoly_64 = bigint_mul!(x122, x122, 64);
    let x126: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x125, x114, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x127: BytePoly_66 = bigint_nondet_quot!(ctx, x126, x0, 66);
    let x128: BytePoly_32 = bigint_nondet_rem!(ctx, x126, x0, 32);
    let x129: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x122, x128, 64),
                    bigint_add!(bigint_sub!(x117, bigint_mul!(x122, x114, 64), 64), x0, 64),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x130: BytePoly_66 = bigint_nondet_quot!(ctx, x129, x0, 66);
    let x131: BytePoly_32 = bigint_nondet_rem!(ctx, x129, x0, 32);
    let x132: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x125, bigint_mul!(x127, x0, 98), 98), x114, 98),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x128,
        98
    );
    eqz(ctx, &x132, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x130, x0, 98), x131, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x122, bigint_sub!(x114, x128, 32), 64), x117, 64),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x133: BytePoly_32 = bigint_add!(bigint_sub!(x4, x131, 32), x0, 32);
    let x134: BytePoly_32 = bigint_add!(bigint_sub!(x3, x128, 32), x0, 32);
    let x135: BytePoly_32 = bigint_nondet_inv!(ctx, x134, x0, 32);
    let x136: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x133, x135, 64), x0, 32);
    let x137: BytePoly_64 = bigint_add!(bigint_sub!(bigint_mul!(x136, x134, 64), x133, 64), x0, 64);
    let x138: BytePoly_66 = bigint_nondet_quot!(ctx, x137, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x137, bigint_mul!(x138, x0, 98), 98),
        536459,
        4,
    )?;
    let x139: BytePoly_64 = bigint_mul!(x136, x136, 64);
    let x140: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x139, x128, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x141: BytePoly_66 = bigint_nondet_quot!(ctx, x140, x0, 66);
    let x142: BytePoly_32 = bigint_nondet_rem!(ctx, x140, x0, 32);
    let x143: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x136, x142, 64),
                    bigint_add!(bigint_sub!(x131, bigint_mul!(x136, x128, 64), 64), x0, 64),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x144: BytePoly_66 = bigint_nondet_quot!(ctx, x143, x0, 66);
    let x145: BytePoly_32 = bigint_nondet_rem!(ctx, x143, x0, 32);
    let x146: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x139, bigint_mul!(x141, x0, 98), 98), x128, 98),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x142,
        98
    );
    eqz(ctx, &x146, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x144, x0, 98), x145, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x136, bigint_sub!(x128, x142, 32), 64), x131, 64),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x142, x5, 32), 34, 1)?;
    eqz(ctx, &bigint_sub!(x145, x6, 32), 34, 1)?;
    return Ok(());
}
pub fn rep_ec_aff_add_test_256_r256(ctx: &mut BigIntContext) -> Result<()> {
    let x0: BytePoly_32 = bigint_const!(
        ctx, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0
    );
    let x1: BytePoly_32 = bigint_def!(ctx, 32, 0, 1);
    let x2: BytePoly_32 = bigint_def!(ctx, 32, 1, 1);
    let x3: BytePoly_32 = bigint_def!(ctx, 32, 2, 1);
    let x4: BytePoly_32 = bigint_def!(ctx, 32, 3, 1);
    let x5: BytePoly_32 = bigint_def!(ctx, 32, 4, 1);
    let x6: BytePoly_32 = bigint_def!(ctx, 32, 5, 1);
    let x7: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2, 32), x0, 32);
    let x8: BytePoly_32 = bigint_add!(bigint_sub!(x3, x1, 32), x0, 32);
    let x9: BytePoly_32 = bigint_nondet_inv!(ctx, x8, x0, 32);
    let x10: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x7, x9, 64), x0, 32);
    let x11: BytePoly_64 = bigint_add!(bigint_sub!(bigint_mul!(x10, x8, 64), x7, 64), x0, 64);
    let x12: BytePoly_66 = bigint_nondet_quot!(ctx, x11, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x11, bigint_mul!(x12, x0, 98), 98),
        536459,
        4,
    )?;
    let x13: BytePoly_64 = bigint_mul!(x10, x10, 64);
    let x14: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x13, x1, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x15: BytePoly_66 = bigint_nondet_quot!(ctx, x14, x0, 66);
    let x16: BytePoly_32 = bigint_nondet_rem!(ctx, x14, x0, 32);
    let x17: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x10, x16, 64),
                    bigint_add!(bigint_sub!(x2, bigint_mul!(x10, x1, 64), 64), x0, 64),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x18: BytePoly_66 = bigint_nondet_quot!(ctx, x17, x0, 66);
    let x19: BytePoly_32 = bigint_nondet_rem!(ctx, x17, x0, 32);
    let x20: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x13, bigint_mul!(x15, x0, 98), 98), x1, 98),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x16,
        98
    );
    eqz(ctx, &x20, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x18, x0, 98), x19, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x10, bigint_sub!(x1, x16, 32), 64), x2, 64),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x21: BytePoly_32 = bigint_add!(bigint_sub!(x4, x19, 32), x0, 32);
    let x22: BytePoly_32 = bigint_add!(bigint_sub!(x3, x16, 32), x0, 32);
    let x23: BytePoly_32 = bigint_nondet_inv!(ctx, x22, x0, 32);
    let x24: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x21, x23, 64), x0, 32);
    let x25: BytePoly_64 = bigint_add!(bigint_sub!(bigint_mul!(x24, x22, 64), x21, 64), x0, 64);
    let x26: BytePoly_66 = bigint_nondet_quot!(ctx, x25, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x25, bigint_mul!(x26, x0, 98), 98),
        536459,
        4,
    )?;
    let x27: BytePoly_64 = bigint_mul!(x24, x24, 64);
    let x28: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x27, x16, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x29: BytePoly_66 = bigint_nondet_quot!(ctx, x28, x0, 66);
    let x30: BytePoly_32 = bigint_nondet_rem!(ctx, x28, x0, 32);
    let x31: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x24, x30, 64),
                    bigint_add!(bigint_sub!(x19, bigint_mul!(x24, x16, 64), 64), x0, 64),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x32: BytePoly_66 = bigint_nondet_quot!(ctx, x31, x0, 66);
    let x33: BytePoly_32 = bigint_nondet_rem!(ctx, x31, x0, 32);
    let x34: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x27, bigint_mul!(x29, x0, 98), 98), x16, 98),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x30,
        98
    );
    eqz(ctx, &x34, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x32, x0, 98), x33, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x24, bigint_sub!(x16, x30, 32), 64), x19, 64),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x35: BytePoly_32 = bigint_add!(bigint_sub!(x4, x33, 32), x0, 32);
    let x36: BytePoly_32 = bigint_add!(bigint_sub!(x3, x30, 32), x0, 32);
    let x37: BytePoly_32 = bigint_nondet_inv!(ctx, x36, x0, 32);
    let x38: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x35, x37, 64), x0, 32);
    let x39: BytePoly_64 = bigint_add!(bigint_sub!(bigint_mul!(x38, x36, 64), x35, 64), x0, 64);
    let x40: BytePoly_66 = bigint_nondet_quot!(ctx, x39, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x39, bigint_mul!(x40, x0, 98), 98),
        536459,
        4,
    )?;
    let x41: BytePoly_64 = bigint_mul!(x38, x38, 64);
    let x42: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x41, x30, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x43: BytePoly_66 = bigint_nondet_quot!(ctx, x42, x0, 66);
    let x44: BytePoly_32 = bigint_nondet_rem!(ctx, x42, x0, 32);
    let x45: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x38, x44, 64),
                    bigint_add!(bigint_sub!(x33, bigint_mul!(x38, x30, 64), 64), x0, 64),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x46: BytePoly_66 = bigint_nondet_quot!(ctx, x45, x0, 66);
    let x47: BytePoly_32 = bigint_nondet_rem!(ctx, x45, x0, 32);
    let x48: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x41, bigint_mul!(x43, x0, 98), 98), x30, 98),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x44,
        98
    );
    eqz(ctx, &x48, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x46, x0, 98), x47, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x38, bigint_sub!(x30, x44, 32), 64), x33, 64),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x49: BytePoly_32 = bigint_add!(bigint_sub!(x4, x47, 32), x0, 32);
    let x50: BytePoly_32 = bigint_add!(bigint_sub!(x3, x44, 32), x0, 32);
    let x51: BytePoly_32 = bigint_nondet_inv!(ctx, x50, x0, 32);
    let x52: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x49, x51, 64), x0, 32);
    let x53: BytePoly_64 = bigint_add!(bigint_sub!(bigint_mul!(x52, x50, 64), x49, 64), x0, 64);
    let x54: BytePoly_66 = bigint_nondet_quot!(ctx, x53, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x53, bigint_mul!(x54, x0, 98), 98),
        536459,
        4,
    )?;
    let x55: BytePoly_64 = bigint_mul!(x52, x52, 64);
    let x56: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x55, x44, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x57: BytePoly_66 = bigint_nondet_quot!(ctx, x56, x0, 66);
    let x58: BytePoly_32 = bigint_nondet_rem!(ctx, x56, x0, 32);
    let x59: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x52, x58, 64),
                    bigint_add!(bigint_sub!(x47, bigint_mul!(x52, x44, 64), 64), x0, 64),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x60: BytePoly_66 = bigint_nondet_quot!(ctx, x59, x0, 66);
    let x61: BytePoly_32 = bigint_nondet_rem!(ctx, x59, x0, 32);
    let x62: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x55, bigint_mul!(x57, x0, 98), 98), x44, 98),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x58,
        98
    );
    eqz(ctx, &x62, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x60, x0, 98), x61, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x52, bigint_sub!(x44, x58, 32), 64), x47, 64),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x63: BytePoly_32 = bigint_add!(bigint_sub!(x4, x61, 32), x0, 32);
    let x64: BytePoly_32 = bigint_add!(bigint_sub!(x3, x58, 32), x0, 32);
    let x65: BytePoly_32 = bigint_nondet_inv!(ctx, x64, x0, 32);
    let x66: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x63, x65, 64), x0, 32);
    let x67: BytePoly_64 = bigint_add!(bigint_sub!(bigint_mul!(x66, x64, 64), x63, 64), x0, 64);
    let x68: BytePoly_66 = bigint_nondet_quot!(ctx, x67, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x67, bigint_mul!(x68, x0, 98), 98),
        536459,
        4,
    )?;
    let x69: BytePoly_64 = bigint_mul!(x66, x66, 64);
    let x70: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x69, x58, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x71: BytePoly_66 = bigint_nondet_quot!(ctx, x70, x0, 66);
    let x72: BytePoly_32 = bigint_nondet_rem!(ctx, x70, x0, 32);
    let x73: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x66, x72, 64),
                    bigint_add!(bigint_sub!(x61, bigint_mul!(x66, x58, 64), 64), x0, 64),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x74: BytePoly_66 = bigint_nondet_quot!(ctx, x73, x0, 66);
    let x75: BytePoly_32 = bigint_nondet_rem!(ctx, x73, x0, 32);
    let x76: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x69, bigint_mul!(x71, x0, 98), 98), x58, 98),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x72,
        98
    );
    eqz(ctx, &x76, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x74, x0, 98), x75, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x66, bigint_sub!(x58, x72, 32), 64), x61, 64),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x77: BytePoly_32 = bigint_add!(bigint_sub!(x4, x75, 32), x0, 32);
    let x78: BytePoly_32 = bigint_add!(bigint_sub!(x3, x72, 32), x0, 32);
    let x79: BytePoly_32 = bigint_nondet_inv!(ctx, x78, x0, 32);
    let x80: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x77, x79, 64), x0, 32);
    let x81: BytePoly_64 = bigint_add!(bigint_sub!(bigint_mul!(x80, x78, 64), x77, 64), x0, 64);
    let x82: BytePoly_66 = bigint_nondet_quot!(ctx, x81, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x81, bigint_mul!(x82, x0, 98), 98),
        536459,
        4,
    )?;
    let x83: BytePoly_64 = bigint_mul!(x80, x80, 64);
    let x84: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x83, x72, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x85: BytePoly_66 = bigint_nondet_quot!(ctx, x84, x0, 66);
    let x86: BytePoly_32 = bigint_nondet_rem!(ctx, x84, x0, 32);
    let x87: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x80, x86, 64),
                    bigint_add!(bigint_sub!(x75, bigint_mul!(x80, x72, 64), 64), x0, 64),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x88: BytePoly_66 = bigint_nondet_quot!(ctx, x87, x0, 66);
    let x89: BytePoly_32 = bigint_nondet_rem!(ctx, x87, x0, 32);
    let x90: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x83, bigint_mul!(x85, x0, 98), 98), x72, 98),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x86,
        98
    );
    eqz(ctx, &x90, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x88, x0, 98), x89, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x80, bigint_sub!(x72, x86, 32), 64), x75, 64),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x91: BytePoly_32 = bigint_add!(bigint_sub!(x4, x89, 32), x0, 32);
    let x92: BytePoly_32 = bigint_add!(bigint_sub!(x3, x86, 32), x0, 32);
    let x93: BytePoly_32 = bigint_nondet_inv!(ctx, x92, x0, 32);
    let x94: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x91, x93, 64), x0, 32);
    let x95: BytePoly_64 = bigint_add!(bigint_sub!(bigint_mul!(x94, x92, 64), x91, 64), x0, 64);
    let x96: BytePoly_66 = bigint_nondet_quot!(ctx, x95, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x95, bigint_mul!(x96, x0, 98), 98),
        536459,
        4,
    )?;
    let x97: BytePoly_64 = bigint_mul!(x94, x94, 64);
    let x98: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x97, x86, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x99: BytePoly_66 = bigint_nondet_quot!(ctx, x98, x0, 66);
    let x100: BytePoly_32 = bigint_nondet_rem!(ctx, x98, x0, 32);
    let x101: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x94, x100, 64),
                    bigint_add!(bigint_sub!(x89, bigint_mul!(x94, x86, 64), 64), x0, 64),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x102: BytePoly_66 = bigint_nondet_quot!(ctx, x101, x0, 66);
    let x103: BytePoly_32 = bigint_nondet_rem!(ctx, x101, x0, 32);
    let x104: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x97, bigint_mul!(x99, x0, 98), 98), x86, 98),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x100,
        98
    );
    eqz(ctx, &x104, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x102, x0, 98), x103, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x94, bigint_sub!(x86, x100, 32), 64), x89, 64),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x105: BytePoly_32 = bigint_add!(bigint_sub!(x4, x103, 32), x0, 32);
    let x106: BytePoly_32 = bigint_add!(bigint_sub!(x3, x100, 32), x0, 32);
    let x107: BytePoly_32 = bigint_nondet_inv!(ctx, x106, x0, 32);
    let x108: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x105, x107, 64), x0, 32);
    let x109: BytePoly_64 = bigint_add!(bigint_sub!(bigint_mul!(x108, x106, 64), x105, 64), x0, 64);
    let x110: BytePoly_66 = bigint_nondet_quot!(ctx, x109, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x109, bigint_mul!(x110, x0, 98), 98),
        536459,
        4,
    )?;
    let x111: BytePoly_64 = bigint_mul!(x108, x108, 64);
    let x112: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x111, x100, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x113: BytePoly_66 = bigint_nondet_quot!(ctx, x112, x0, 66);
    let x114: BytePoly_32 = bigint_nondet_rem!(ctx, x112, x0, 32);
    let x115: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x108, x114, 64),
                    bigint_add!(bigint_sub!(x103, bigint_mul!(x108, x100, 64), 64), x0, 64),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x116: BytePoly_66 = bigint_nondet_quot!(ctx, x115, x0, 66);
    let x117: BytePoly_32 = bigint_nondet_rem!(ctx, x115, x0, 32);
    let x118: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x111, bigint_mul!(x113, x0, 98), 98), x100, 98),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x114,
        98
    );
    eqz(ctx, &x118, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x116, x0, 98), x117, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x108, bigint_sub!(x100, x114, 32), 64), x103, 64),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x119: BytePoly_32 = bigint_add!(bigint_sub!(x4, x117, 32), x0, 32);
    let x120: BytePoly_32 = bigint_add!(bigint_sub!(x3, x114, 32), x0, 32);
    let x121: BytePoly_32 = bigint_nondet_inv!(ctx, x120, x0, 32);
    let x122: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x119, x121, 64), x0, 32);
    let x123: BytePoly_64 = bigint_add!(bigint_sub!(bigint_mul!(x122, x120, 64), x119, 64), x0, 64);
    let x124: BytePoly_66 = bigint_nondet_quot!(ctx, x123, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x123, bigint_mul!(x124, x0, 98), 98),
        536459,
        4,
    )?;
    let x125: BytePoly_64 = bigint_mul!(x122, x122, 64);
    let x126: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x125, x114, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x127: BytePoly_66 = bigint_nondet_quot!(ctx, x126, x0, 66);
    let x128: BytePoly_32 = bigint_nondet_rem!(ctx, x126, x0, 32);
    let x129: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x122, x128, 64),
                    bigint_add!(bigint_sub!(x117, bigint_mul!(x122, x114, 64), 64), x0, 64),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x130: BytePoly_66 = bigint_nondet_quot!(ctx, x129, x0, 66);
    let x131: BytePoly_32 = bigint_nondet_rem!(ctx, x129, x0, 32);
    let x132: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x125, bigint_mul!(x127, x0, 98), 98), x114, 98),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x128,
        98
    );
    eqz(ctx, &x132, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x130, x0, 98), x131, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x122, bigint_sub!(x114, x128, 32), 64), x117, 64),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x133: BytePoly_32 = bigint_add!(bigint_sub!(x4, x131, 32), x0, 32);
    let x134: BytePoly_32 = bigint_add!(bigint_sub!(x3, x128, 32), x0, 32);
    let x135: BytePoly_32 = bigint_nondet_inv!(ctx, x134, x0, 32);
    let x136: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x133, x135, 64), x0, 32);
    let x137: BytePoly_64 = bigint_add!(bigint_sub!(bigint_mul!(x136, x134, 64), x133, 64), x0, 64);
    let x138: BytePoly_66 = bigint_nondet_quot!(ctx, x137, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x137, bigint_mul!(x138, x0, 98), 98),
        536459,
        4,
    )?;
    let x139: BytePoly_64 = bigint_mul!(x136, x136, 64);
    let x140: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x139, x128, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x141: BytePoly_66 = bigint_nondet_quot!(ctx, x140, x0, 66);
    let x142: BytePoly_32 = bigint_nondet_rem!(ctx, x140, x0, 32);
    let x143: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x136, x142, 64),
                    bigint_add!(bigint_sub!(x131, bigint_mul!(x136, x128, 64), 64), x0, 64),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x144: BytePoly_66 = bigint_nondet_quot!(ctx, x143, x0, 66);
    let x145: BytePoly_32 = bigint_nondet_rem!(ctx, x143, x0, 32);
    let x146: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x139, bigint_mul!(x141, x0, 98), 98), x128, 98),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x142,
        98
    );
    eqz(ctx, &x146, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x144, x0, 98), x145, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x136, bigint_sub!(x128, x142, 32), 64), x131, 64),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x147: BytePoly_32 = bigint_add!(bigint_sub!(x4, x145, 32), x0, 32);
    let x148: BytePoly_32 = bigint_add!(bigint_sub!(x3, x142, 32), x0, 32);
    let x149: BytePoly_32 = bigint_nondet_inv!(ctx, x148, x0, 32);
    let x150: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x147, x149, 64), x0, 32);
    let x151: BytePoly_64 = bigint_add!(bigint_sub!(bigint_mul!(x150, x148, 64), x147, 64), x0, 64);
    let x152: BytePoly_66 = bigint_nondet_quot!(ctx, x151, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x151, bigint_mul!(x152, x0, 98), 98),
        536459,
        4,
    )?;
    let x153: BytePoly_64 = bigint_mul!(x150, x150, 64);
    let x154: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x153, x142, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x155: BytePoly_66 = bigint_nondet_quot!(ctx, x154, x0, 66);
    let x156: BytePoly_32 = bigint_nondet_rem!(ctx, x154, x0, 32);
    let x157: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x150, x156, 64),
                    bigint_add!(bigint_sub!(x145, bigint_mul!(x150, x142, 64), 64), x0, 64),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x158: BytePoly_66 = bigint_nondet_quot!(ctx, x157, x0, 66);
    let x159: BytePoly_32 = bigint_nondet_rem!(ctx, x157, x0, 32);
    let x160: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x153, bigint_mul!(x155, x0, 98), 98), x142, 98),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x156,
        98
    );
    eqz(ctx, &x160, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x158, x0, 98), x159, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x150, bigint_sub!(x142, x156, 32), 64), x145, 64),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x161: BytePoly_32 = bigint_add!(bigint_sub!(x4, x159, 32), x0, 32);
    let x162: BytePoly_32 = bigint_add!(bigint_sub!(x3, x156, 32), x0, 32);
    let x163: BytePoly_32 = bigint_nondet_inv!(ctx, x162, x0, 32);
    let x164: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x161, x163, 64), x0, 32);
    let x165: BytePoly_64 = bigint_add!(bigint_sub!(bigint_mul!(x164, x162, 64), x161, 64), x0, 64);
    let x166: BytePoly_66 = bigint_nondet_quot!(ctx, x165, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x165, bigint_mul!(x166, x0, 98), 98),
        536459,
        4,
    )?;
    let x167: BytePoly_64 = bigint_mul!(x164, x164, 64);
    let x168: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x167, x156, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x169: BytePoly_66 = bigint_nondet_quot!(ctx, x168, x0, 66);
    let x170: BytePoly_32 = bigint_nondet_rem!(ctx, x168, x0, 32);
    let x171: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x164, x170, 64),
                    bigint_add!(bigint_sub!(x159, bigint_mul!(x164, x156, 64), 64), x0, 64),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x172: BytePoly_66 = bigint_nondet_quot!(ctx, x171, x0, 66);
    let x173: BytePoly_32 = bigint_nondet_rem!(ctx, x171, x0, 32);
    let x174: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x167, bigint_mul!(x169, x0, 98), 98), x156, 98),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x170,
        98
    );
    eqz(ctx, &x174, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x172, x0, 98), x173, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x164, bigint_sub!(x156, x170, 32), 64), x159, 64),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x175: BytePoly_32 = bigint_add!(bigint_sub!(x4, x173, 32), x0, 32);
    let x176: BytePoly_32 = bigint_add!(bigint_sub!(x3, x170, 32), x0, 32);
    let x177: BytePoly_32 = bigint_nondet_inv!(ctx, x176, x0, 32);
    let x178: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x175, x177, 64), x0, 32);
    let x179: BytePoly_64 = bigint_add!(bigint_sub!(bigint_mul!(x178, x176, 64), x175, 64), x0, 64);
    let x180: BytePoly_66 = bigint_nondet_quot!(ctx, x179, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x179, bigint_mul!(x180, x0, 98), 98),
        536459,
        4,
    )?;
    let x181: BytePoly_64 = bigint_mul!(x178, x178, 64);
    let x182: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x181, x170, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x183: BytePoly_66 = bigint_nondet_quot!(ctx, x182, x0, 66);
    let x184: BytePoly_32 = bigint_nondet_rem!(ctx, x182, x0, 32);
    let x185: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x178, x184, 64),
                    bigint_add!(bigint_sub!(x173, bigint_mul!(x178, x170, 64), 64), x0, 64),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x186: BytePoly_66 = bigint_nondet_quot!(ctx, x185, x0, 66);
    let x187: BytePoly_32 = bigint_nondet_rem!(ctx, x185, x0, 32);
    let x188: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x181, bigint_mul!(x183, x0, 98), 98), x170, 98),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x184,
        98
    );
    eqz(ctx, &x188, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x186, x0, 98), x187, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x178, bigint_sub!(x170, x184, 32), 64), x173, 64),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x189: BytePoly_32 = bigint_add!(bigint_sub!(x4, x187, 32), x0, 32);
    let x190: BytePoly_32 = bigint_add!(bigint_sub!(x3, x184, 32), x0, 32);
    let x191: BytePoly_32 = bigint_nondet_inv!(ctx, x190, x0, 32);
    let x192: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x189, x191, 64), x0, 32);
    let x193: BytePoly_64 = bigint_add!(bigint_sub!(bigint_mul!(x192, x190, 64), x189, 64), x0, 64);
    let x194: BytePoly_66 = bigint_nondet_quot!(ctx, x193, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x193, bigint_mul!(x194, x0, 98), 98),
        536459,
        4,
    )?;
    let x195: BytePoly_64 = bigint_mul!(x192, x192, 64);
    let x196: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x195, x184, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x197: BytePoly_66 = bigint_nondet_quot!(ctx, x196, x0, 66);
    let x198: BytePoly_32 = bigint_nondet_rem!(ctx, x196, x0, 32);
    let x199: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x192, x198, 64),
                    bigint_add!(bigint_sub!(x187, bigint_mul!(x192, x184, 64), 64), x0, 64),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x200: BytePoly_66 = bigint_nondet_quot!(ctx, x199, x0, 66);
    let x201: BytePoly_32 = bigint_nondet_rem!(ctx, x199, x0, 32);
    let x202: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x195, bigint_mul!(x197, x0, 98), 98), x184, 98),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x198,
        98
    );
    eqz(ctx, &x202, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x200, x0, 98), x201, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x192, bigint_sub!(x184, x198, 32), 64), x187, 64),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x203: BytePoly_32 = bigint_add!(bigint_sub!(x4, x201, 32), x0, 32);
    let x204: BytePoly_32 = bigint_add!(bigint_sub!(x3, x198, 32), x0, 32);
    let x205: BytePoly_32 = bigint_nondet_inv!(ctx, x204, x0, 32);
    let x206: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x203, x205, 64), x0, 32);
    let x207: BytePoly_64 = bigint_add!(bigint_sub!(bigint_mul!(x206, x204, 64), x203, 64), x0, 64);
    let x208: BytePoly_66 = bigint_nondet_quot!(ctx, x207, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x207, bigint_mul!(x208, x0, 98), 98),
        536459,
        4,
    )?;
    let x209: BytePoly_64 = bigint_mul!(x206, x206, 64);
    let x210: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x209, x198, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x211: BytePoly_66 = bigint_nondet_quot!(ctx, x210, x0, 66);
    let x212: BytePoly_32 = bigint_nondet_rem!(ctx, x210, x0, 32);
    let x213: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x206, x212, 64),
                    bigint_add!(bigint_sub!(x201, bigint_mul!(x206, x198, 64), 64), x0, 64),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x214: BytePoly_66 = bigint_nondet_quot!(ctx, x213, x0, 66);
    let x215: BytePoly_32 = bigint_nondet_rem!(ctx, x213, x0, 32);
    let x216: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x209, bigint_mul!(x211, x0, 98), 98), x198, 98),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x212,
        98
    );
    eqz(ctx, &x216, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x214, x0, 98), x215, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x206, bigint_sub!(x198, x212, 32), 64), x201, 64),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x217: BytePoly_32 = bigint_add!(bigint_sub!(x4, x215, 32), x0, 32);
    let x218: BytePoly_32 = bigint_add!(bigint_sub!(x3, x212, 32), x0, 32);
    let x219: BytePoly_32 = bigint_nondet_inv!(ctx, x218, x0, 32);
    let x220: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x217, x219, 64), x0, 32);
    let x221: BytePoly_64 = bigint_add!(bigint_sub!(bigint_mul!(x220, x218, 64), x217, 64), x0, 64);
    let x222: BytePoly_66 = bigint_nondet_quot!(ctx, x221, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x221, bigint_mul!(x222, x0, 98), 98),
        536459,
        4,
    )?;
    let x223: BytePoly_64 = bigint_mul!(x220, x220, 64);
    let x224: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x223, x212, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x225: BytePoly_66 = bigint_nondet_quot!(ctx, x224, x0, 66);
    let x226: BytePoly_32 = bigint_nondet_rem!(ctx, x224, x0, 32);
    let x227: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x220, x226, 64),
                    bigint_add!(bigint_sub!(x215, bigint_mul!(x220, x212, 64), 64), x0, 64),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x228: BytePoly_66 = bigint_nondet_quot!(ctx, x227, x0, 66);
    let x229: BytePoly_32 = bigint_nondet_rem!(ctx, x227, x0, 32);
    let x230: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x223, bigint_mul!(x225, x0, 98), 98), x212, 98),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x226,
        98
    );
    eqz(ctx, &x230, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x228, x0, 98), x229, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x220, bigint_sub!(x212, x226, 32), 64), x215, 64),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x231: BytePoly_32 = bigint_add!(bigint_sub!(x4, x229, 32), x0, 32);
    let x232: BytePoly_32 = bigint_add!(bigint_sub!(x3, x226, 32), x0, 32);
    let x233: BytePoly_32 = bigint_nondet_inv!(ctx, x232, x0, 32);
    let x234: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x231, x233, 64), x0, 32);
    let x235: BytePoly_64 = bigint_add!(bigint_sub!(bigint_mul!(x234, x232, 64), x231, 64), x0, 64);
    let x236: BytePoly_66 = bigint_nondet_quot!(ctx, x235, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x235, bigint_mul!(x236, x0, 98), 98),
        536459,
        4,
    )?;
    let x237: BytePoly_64 = bigint_mul!(x234, x234, 64);
    let x238: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x237, x226, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x239: BytePoly_66 = bigint_nondet_quot!(ctx, x238, x0, 66);
    let x240: BytePoly_32 = bigint_nondet_rem!(ctx, x238, x0, 32);
    let x241: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x234, x240, 64),
                    bigint_add!(bigint_sub!(x229, bigint_mul!(x234, x226, 64), 64), x0, 64),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x242: BytePoly_66 = bigint_nondet_quot!(ctx, x241, x0, 66);
    let x243: BytePoly_32 = bigint_nondet_rem!(ctx, x241, x0, 32);
    let x244: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x237, bigint_mul!(x239, x0, 98), 98), x226, 98),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x240,
        98
    );
    eqz(ctx, &x244, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x242, x0, 98), x243, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x234, bigint_sub!(x226, x240, 32), 64), x229, 64),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x245: BytePoly_32 = bigint_add!(bigint_sub!(x4, x243, 32), x0, 32);
    let x246: BytePoly_32 = bigint_add!(bigint_sub!(x3, x240, 32), x0, 32);
    let x247: BytePoly_32 = bigint_nondet_inv!(ctx, x246, x0, 32);
    let x248: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x245, x247, 64), x0, 32);
    let x249: BytePoly_64 = bigint_add!(bigint_sub!(bigint_mul!(x248, x246, 64), x245, 64), x0, 64);
    let x250: BytePoly_66 = bigint_nondet_quot!(ctx, x249, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x249, bigint_mul!(x250, x0, 98), 98),
        536459,
        4,
    )?;
    let x251: BytePoly_64 = bigint_mul!(x248, x248, 64);
    let x252: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x251, x240, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x253: BytePoly_66 = bigint_nondet_quot!(ctx, x252, x0, 66);
    let x254: BytePoly_32 = bigint_nondet_rem!(ctx, x252, x0, 32);
    let x255: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x248, x254, 64),
                    bigint_add!(bigint_sub!(x243, bigint_mul!(x248, x240, 64), 64), x0, 64),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x256: BytePoly_66 = bigint_nondet_quot!(ctx, x255, x0, 66);
    let x257: BytePoly_32 = bigint_nondet_rem!(ctx, x255, x0, 32);
    let x258: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x251, bigint_mul!(x253, x0, 98), 98), x240, 98),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x254,
        98
    );
    eqz(ctx, &x258, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x256, x0, 98), x257, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x248, bigint_sub!(x240, x254, 32), 64), x243, 64),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x259: BytePoly_32 = bigint_add!(bigint_sub!(x4, x257, 32), x0, 32);
    let x260: BytePoly_32 = bigint_add!(bigint_sub!(x3, x254, 32), x0, 32);
    let x261: BytePoly_32 = bigint_nondet_inv!(ctx, x260, x0, 32);
    let x262: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x259, x261, 64), x0, 32);
    let x263: BytePoly_64 = bigint_add!(bigint_sub!(bigint_mul!(x262, x260, 64), x259, 64), x0, 64);
    let x264: BytePoly_66 = bigint_nondet_quot!(ctx, x263, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x263, bigint_mul!(x264, x0, 98), 98),
        536459,
        4,
    )?;
    let x265: BytePoly_64 = bigint_mul!(x262, x262, 64);
    let x266: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x265, x254, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x267: BytePoly_66 = bigint_nondet_quot!(ctx, x266, x0, 66);
    let x268: BytePoly_32 = bigint_nondet_rem!(ctx, x266, x0, 32);
    let x269: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x262, x268, 64),
                    bigint_add!(bigint_sub!(x257, bigint_mul!(x262, x254, 64), 64), x0, 64),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x270: BytePoly_66 = bigint_nondet_quot!(ctx, x269, x0, 66);
    let x271: BytePoly_32 = bigint_nondet_rem!(ctx, x269, x0, 32);
    let x272: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x265, bigint_mul!(x267, x0, 98), 98), x254, 98),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x268,
        98
    );
    eqz(ctx, &x272, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x270, x0, 98), x271, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x262, bigint_sub!(x254, x268, 32), 64), x257, 64),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x273: BytePoly_32 = bigint_add!(bigint_sub!(x4, x271, 32), x0, 32);
    let x274: BytePoly_32 = bigint_add!(bigint_sub!(x3, x268, 32), x0, 32);
    let x275: BytePoly_32 = bigint_nondet_inv!(ctx, x274, x0, 32);
    let x276: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x273, x275, 64), x0, 32);
    let x277: BytePoly_64 = bigint_add!(bigint_sub!(bigint_mul!(x276, x274, 64), x273, 64), x0, 64);
    let x278: BytePoly_66 = bigint_nondet_quot!(ctx, x277, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x277, bigint_mul!(x278, x0, 98), 98),
        536459,
        4,
    )?;
    let x279: BytePoly_64 = bigint_mul!(x276, x276, 64);
    let x280: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x279, x268, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x281: BytePoly_66 = bigint_nondet_quot!(ctx, x280, x0, 66);
    let x282: BytePoly_32 = bigint_nondet_rem!(ctx, x280, x0, 32);
    let x283: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x276, x282, 64),
                    bigint_add!(bigint_sub!(x271, bigint_mul!(x276, x268, 64), 64), x0, 64),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x284: BytePoly_66 = bigint_nondet_quot!(ctx, x283, x0, 66);
    let x285: BytePoly_32 = bigint_nondet_rem!(ctx, x283, x0, 32);
    let x286: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x279, bigint_mul!(x281, x0, 98), 98), x268, 98),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x282,
        98
    );
    eqz(ctx, &x286, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x284, x0, 98), x285, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x276, bigint_sub!(x268, x282, 32), 64), x271, 64),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x287: BytePoly_32 = bigint_add!(bigint_sub!(x4, x285, 32), x0, 32);
    let x288: BytePoly_32 = bigint_add!(bigint_sub!(x3, x282, 32), x0, 32);
    let x289: BytePoly_32 = bigint_nondet_inv!(ctx, x288, x0, 32);
    let x290: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x287, x289, 64), x0, 32);
    let x291: BytePoly_64 = bigint_add!(bigint_sub!(bigint_mul!(x290, x288, 64), x287, 64), x0, 64);
    let x292: BytePoly_66 = bigint_nondet_quot!(ctx, x291, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x291, bigint_mul!(x292, x0, 98), 98),
        536459,
        4,
    )?;
    let x293: BytePoly_64 = bigint_mul!(x290, x290, 64);
    let x294: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x293, x282, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x295: BytePoly_66 = bigint_nondet_quot!(ctx, x294, x0, 66);
    let x296: BytePoly_32 = bigint_nondet_rem!(ctx, x294, x0, 32);
    let x297: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x290, x296, 64),
                    bigint_add!(bigint_sub!(x285, bigint_mul!(x290, x282, 64), 64), x0, 64),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x298: BytePoly_66 = bigint_nondet_quot!(ctx, x297, x0, 66);
    let x299: BytePoly_32 = bigint_nondet_rem!(ctx, x297, x0, 32);
    let x300: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x293, bigint_mul!(x295, x0, 98), 98), x282, 98),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x296,
        98
    );
    eqz(ctx, &x300, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x298, x0, 98), x299, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x290, bigint_sub!(x282, x296, 32), 64), x285, 64),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x301: BytePoly_32 = bigint_add!(bigint_sub!(x4, x299, 32), x0, 32);
    let x302: BytePoly_32 = bigint_add!(bigint_sub!(x3, x296, 32), x0, 32);
    let x303: BytePoly_32 = bigint_nondet_inv!(ctx, x302, x0, 32);
    let x304: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x301, x303, 64), x0, 32);
    let x305: BytePoly_64 = bigint_add!(bigint_sub!(bigint_mul!(x304, x302, 64), x301, 64), x0, 64);
    let x306: BytePoly_66 = bigint_nondet_quot!(ctx, x305, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x305, bigint_mul!(x306, x0, 98), 98),
        536459,
        4,
    )?;
    let x307: BytePoly_64 = bigint_mul!(x304, x304, 64);
    let x308: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x307, x296, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x309: BytePoly_66 = bigint_nondet_quot!(ctx, x308, x0, 66);
    let x310: BytePoly_32 = bigint_nondet_rem!(ctx, x308, x0, 32);
    let x311: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x304, x310, 64),
                    bigint_add!(bigint_sub!(x299, bigint_mul!(x304, x296, 64), 64), x0, 64),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x312: BytePoly_66 = bigint_nondet_quot!(ctx, x311, x0, 66);
    let x313: BytePoly_32 = bigint_nondet_rem!(ctx, x311, x0, 32);
    let x314: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x307, bigint_mul!(x309, x0, 98), 98), x296, 98),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x310,
        98
    );
    eqz(ctx, &x314, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x312, x0, 98), x313, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x304, bigint_sub!(x296, x310, 32), 64), x299, 64),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x315: BytePoly_32 = bigint_add!(bigint_sub!(x4, x313, 32), x0, 32);
    let x316: BytePoly_32 = bigint_add!(bigint_sub!(x3, x310, 32), x0, 32);
    let x317: BytePoly_32 = bigint_nondet_inv!(ctx, x316, x0, 32);
    let x318: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x315, x317, 64), x0, 32);
    let x319: BytePoly_64 = bigint_add!(bigint_sub!(bigint_mul!(x318, x316, 64), x315, 64), x0, 64);
    let x320: BytePoly_66 = bigint_nondet_quot!(ctx, x319, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x319, bigint_mul!(x320, x0, 98), 98),
        536459,
        4,
    )?;
    let x321: BytePoly_64 = bigint_mul!(x318, x318, 64);
    let x322: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x321, x310, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x323: BytePoly_66 = bigint_nondet_quot!(ctx, x322, x0, 66);
    let x324: BytePoly_32 = bigint_nondet_rem!(ctx, x322, x0, 32);
    let x325: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x318, x324, 64),
                    bigint_add!(bigint_sub!(x313, bigint_mul!(x318, x310, 64), 64), x0, 64),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x326: BytePoly_66 = bigint_nondet_quot!(ctx, x325, x0, 66);
    let x327: BytePoly_32 = bigint_nondet_rem!(ctx, x325, x0, 32);
    let x328: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x321, bigint_mul!(x323, x0, 98), 98), x310, 98),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x324,
        98
    );
    eqz(ctx, &x328, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x326, x0, 98), x327, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x318, bigint_sub!(x310, x324, 32), 64), x313, 64),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x329: BytePoly_32 = bigint_add!(bigint_sub!(x4, x327, 32), x0, 32);
    let x330: BytePoly_32 = bigint_add!(bigint_sub!(x3, x324, 32), x0, 32);
    let x331: BytePoly_32 = bigint_nondet_inv!(ctx, x330, x0, 32);
    let x332: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x329, x331, 64), x0, 32);
    let x333: BytePoly_64 = bigint_add!(bigint_sub!(bigint_mul!(x332, x330, 64), x329, 64), x0, 64);
    let x334: BytePoly_66 = bigint_nondet_quot!(ctx, x333, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x333, bigint_mul!(x334, x0, 98), 98),
        536459,
        4,
    )?;
    let x335: BytePoly_64 = bigint_mul!(x332, x332, 64);
    let x336: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x335, x324, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x337: BytePoly_66 = bigint_nondet_quot!(ctx, x336, x0, 66);
    let x338: BytePoly_32 = bigint_nondet_rem!(ctx, x336, x0, 32);
    let x339: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x332, x338, 64),
                    bigint_add!(bigint_sub!(x327, bigint_mul!(x332, x324, 64), 64), x0, 64),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x340: BytePoly_66 = bigint_nondet_quot!(ctx, x339, x0, 66);
    let x341: BytePoly_32 = bigint_nondet_rem!(ctx, x339, x0, 32);
    let x342: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x335, bigint_mul!(x337, x0, 98), 98), x324, 98),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x338,
        98
    );
    eqz(ctx, &x342, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x340, x0, 98), x341, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x332, bigint_sub!(x324, x338, 32), 64), x327, 64),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x343: BytePoly_32 = bigint_add!(bigint_sub!(x4, x341, 32), x0, 32);
    let x344: BytePoly_32 = bigint_add!(bigint_sub!(x3, x338, 32), x0, 32);
    let x345: BytePoly_32 = bigint_nondet_inv!(ctx, x344, x0, 32);
    let x346: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x343, x345, 64), x0, 32);
    let x347: BytePoly_64 = bigint_add!(bigint_sub!(bigint_mul!(x346, x344, 64), x343, 64), x0, 64);
    let x348: BytePoly_66 = bigint_nondet_quot!(ctx, x347, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x347, bigint_mul!(x348, x0, 98), 98),
        536459,
        4,
    )?;
    let x349: BytePoly_64 = bigint_mul!(x346, x346, 64);
    let x350: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x349, x338, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x351: BytePoly_66 = bigint_nondet_quot!(ctx, x350, x0, 66);
    let x352: BytePoly_32 = bigint_nondet_rem!(ctx, x350, x0, 32);
    let x353: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x346, x352, 64),
                    bigint_add!(bigint_sub!(x341, bigint_mul!(x346, x338, 64), 64), x0, 64),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x354: BytePoly_66 = bigint_nondet_quot!(ctx, x353, x0, 66);
    let x355: BytePoly_32 = bigint_nondet_rem!(ctx, x353, x0, 32);
    let x356: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x349, bigint_mul!(x351, x0, 98), 98), x338, 98),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x352,
        98
    );
    eqz(ctx, &x356, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x354, x0, 98), x355, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x346, bigint_sub!(x338, x352, 32), 64), x341, 64),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x357: BytePoly_32 = bigint_add!(bigint_sub!(x4, x355, 32), x0, 32);
    let x358: BytePoly_32 = bigint_add!(bigint_sub!(x3, x352, 32), x0, 32);
    let x359: BytePoly_32 = bigint_nondet_inv!(ctx, x358, x0, 32);
    let x360: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x357, x359, 64), x0, 32);
    let x361: BytePoly_64 = bigint_add!(bigint_sub!(bigint_mul!(x360, x358, 64), x357, 64), x0, 64);
    let x362: BytePoly_66 = bigint_nondet_quot!(ctx, x361, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x361, bigint_mul!(x362, x0, 98), 98),
        536459,
        4,
    )?;
    let x363: BytePoly_64 = bigint_mul!(x360, x360, 64);
    let x364: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x363, x352, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x365: BytePoly_66 = bigint_nondet_quot!(ctx, x364, x0, 66);
    let x366: BytePoly_32 = bigint_nondet_rem!(ctx, x364, x0, 32);
    let x367: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x360, x366, 64),
                    bigint_add!(bigint_sub!(x355, bigint_mul!(x360, x352, 64), 64), x0, 64),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x368: BytePoly_66 = bigint_nondet_quot!(ctx, x367, x0, 66);
    let x369: BytePoly_32 = bigint_nondet_rem!(ctx, x367, x0, 32);
    let x370: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x363, bigint_mul!(x365, x0, 98), 98), x352, 98),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x366,
        98
    );
    eqz(ctx, &x370, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x368, x0, 98), x369, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x360, bigint_sub!(x352, x366, 32), 64), x355, 64),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x371: BytePoly_32 = bigint_add!(bigint_sub!(x4, x369, 32), x0, 32);
    let x372: BytePoly_32 = bigint_add!(bigint_sub!(x3, x366, 32), x0, 32);
    let x373: BytePoly_32 = bigint_nondet_inv!(ctx, x372, x0, 32);
    let x374: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x371, x373, 64), x0, 32);
    let x375: BytePoly_64 = bigint_add!(bigint_sub!(bigint_mul!(x374, x372, 64), x371, 64), x0, 64);
    let x376: BytePoly_66 = bigint_nondet_quot!(ctx, x375, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x375, bigint_mul!(x376, x0, 98), 98),
        536459,
        4,
    )?;
    let x377: BytePoly_64 = bigint_mul!(x374, x374, 64);
    let x378: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x377, x366, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x379: BytePoly_66 = bigint_nondet_quot!(ctx, x378, x0, 66);
    let x380: BytePoly_32 = bigint_nondet_rem!(ctx, x378, x0, 32);
    let x381: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x374, x380, 64),
                    bigint_add!(bigint_sub!(x369, bigint_mul!(x374, x366, 64), 64), x0, 64),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x382: BytePoly_66 = bigint_nondet_quot!(ctx, x381, x0, 66);
    let x383: BytePoly_32 = bigint_nondet_rem!(ctx, x381, x0, 32);
    let x384: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x377, bigint_mul!(x379, x0, 98), 98), x366, 98),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x380,
        98
    );
    eqz(ctx, &x384, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x382, x0, 98), x383, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x374, bigint_sub!(x366, x380, 32), 64), x369, 64),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x385: BytePoly_32 = bigint_add!(bigint_sub!(x4, x383, 32), x0, 32);
    let x386: BytePoly_32 = bigint_add!(bigint_sub!(x3, x380, 32), x0, 32);
    let x387: BytePoly_32 = bigint_nondet_inv!(ctx, x386, x0, 32);
    let x388: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x385, x387, 64), x0, 32);
    let x389: BytePoly_64 = bigint_add!(bigint_sub!(bigint_mul!(x388, x386, 64), x385, 64), x0, 64);
    let x390: BytePoly_66 = bigint_nondet_quot!(ctx, x389, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x389, bigint_mul!(x390, x0, 98), 98),
        536459,
        4,
    )?;
    let x391: BytePoly_64 = bigint_mul!(x388, x388, 64);
    let x392: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x391, x380, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x393: BytePoly_66 = bigint_nondet_quot!(ctx, x392, x0, 66);
    let x394: BytePoly_32 = bigint_nondet_rem!(ctx, x392, x0, 32);
    let x395: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x388, x394, 64),
                    bigint_add!(bigint_sub!(x383, bigint_mul!(x388, x380, 64), 64), x0, 64),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x396: BytePoly_66 = bigint_nondet_quot!(ctx, x395, x0, 66);
    let x397: BytePoly_32 = bigint_nondet_rem!(ctx, x395, x0, 32);
    let x398: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x391, bigint_mul!(x393, x0, 98), 98), x380, 98),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x394,
        98
    );
    eqz(ctx, &x398, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x396, x0, 98), x397, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x388, bigint_sub!(x380, x394, 32), 64), x383, 64),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x399: BytePoly_32 = bigint_add!(bigint_sub!(x4, x397, 32), x0, 32);
    let x400: BytePoly_32 = bigint_add!(bigint_sub!(x3, x394, 32), x0, 32);
    let x401: BytePoly_32 = bigint_nondet_inv!(ctx, x400, x0, 32);
    let x402: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x399, x401, 64), x0, 32);
    let x403: BytePoly_64 = bigint_add!(bigint_sub!(bigint_mul!(x402, x400, 64), x399, 64), x0, 64);
    let x404: BytePoly_66 = bigint_nondet_quot!(ctx, x403, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x403, bigint_mul!(x404, x0, 98), 98),
        536459,
        4,
    )?;
    let x405: BytePoly_64 = bigint_mul!(x402, x402, 64);
    let x406: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x405, x394, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x407: BytePoly_66 = bigint_nondet_quot!(ctx, x406, x0, 66);
    let x408: BytePoly_32 = bigint_nondet_rem!(ctx, x406, x0, 32);
    let x409: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x402, x408, 64),
                    bigint_add!(bigint_sub!(x397, bigint_mul!(x402, x394, 64), 64), x0, 64),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x410: BytePoly_66 = bigint_nondet_quot!(ctx, x409, x0, 66);
    let x411: BytePoly_32 = bigint_nondet_rem!(ctx, x409, x0, 32);
    let x412: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x405, bigint_mul!(x407, x0, 98), 98), x394, 98),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x408,
        98
    );
    eqz(ctx, &x412, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x410, x0, 98), x411, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x402, bigint_sub!(x394, x408, 32), 64), x397, 64),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x413: BytePoly_32 = bigint_add!(bigint_sub!(x4, x411, 32), x0, 32);
    let x414: BytePoly_32 = bigint_add!(bigint_sub!(x3, x408, 32), x0, 32);
    let x415: BytePoly_32 = bigint_nondet_inv!(ctx, x414, x0, 32);
    let x416: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x413, x415, 64), x0, 32);
    let x417: BytePoly_64 = bigint_add!(bigint_sub!(bigint_mul!(x416, x414, 64), x413, 64), x0, 64);
    let x418: BytePoly_66 = bigint_nondet_quot!(ctx, x417, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x417, bigint_mul!(x418, x0, 98), 98),
        536459,
        4,
    )?;
    let x419: BytePoly_64 = bigint_mul!(x416, x416, 64);
    let x420: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x419, x408, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x421: BytePoly_66 = bigint_nondet_quot!(ctx, x420, x0, 66);
    let x422: BytePoly_32 = bigint_nondet_rem!(ctx, x420, x0, 32);
    let x423: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x416, x422, 64),
                    bigint_add!(bigint_sub!(x411, bigint_mul!(x416, x408, 64), 64), x0, 64),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x424: BytePoly_66 = bigint_nondet_quot!(ctx, x423, x0, 66);
    let x425: BytePoly_32 = bigint_nondet_rem!(ctx, x423, x0, 32);
    let x426: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x419, bigint_mul!(x421, x0, 98), 98), x408, 98),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x422,
        98
    );
    eqz(ctx, &x426, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x424, x0, 98), x425, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x416, bigint_sub!(x408, x422, 32), 64), x411, 64),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x427: BytePoly_32 = bigint_add!(bigint_sub!(x4, x425, 32), x0, 32);
    let x428: BytePoly_32 = bigint_add!(bigint_sub!(x3, x422, 32), x0, 32);
    let x429: BytePoly_32 = bigint_nondet_inv!(ctx, x428, x0, 32);
    let x430: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x427, x429, 64), x0, 32);
    let x431: BytePoly_64 = bigint_add!(bigint_sub!(bigint_mul!(x430, x428, 64), x427, 64), x0, 64);
    let x432: BytePoly_66 = bigint_nondet_quot!(ctx, x431, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x431, bigint_mul!(x432, x0, 98), 98),
        536459,
        4,
    )?;
    let x433: BytePoly_64 = bigint_mul!(x430, x430, 64);
    let x434: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x433, x422, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x435: BytePoly_66 = bigint_nondet_quot!(ctx, x434, x0, 66);
    let x436: BytePoly_32 = bigint_nondet_rem!(ctx, x434, x0, 32);
    let x437: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x430, x436, 64),
                    bigint_add!(bigint_sub!(x425, bigint_mul!(x430, x422, 64), 64), x0, 64),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x438: BytePoly_66 = bigint_nondet_quot!(ctx, x437, x0, 66);
    let x439: BytePoly_32 = bigint_nondet_rem!(ctx, x437, x0, 32);
    let x440: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x433, bigint_mul!(x435, x0, 98), 98), x422, 98),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x436,
        98
    );
    eqz(ctx, &x440, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x438, x0, 98), x439, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x430, bigint_sub!(x422, x436, 32), 64), x425, 64),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x441: BytePoly_32 = bigint_add!(bigint_sub!(x4, x439, 32), x0, 32);
    let x442: BytePoly_32 = bigint_add!(bigint_sub!(x3, x436, 32), x0, 32);
    let x443: BytePoly_32 = bigint_nondet_inv!(ctx, x442, x0, 32);
    let x444: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x441, x443, 64), x0, 32);
    let x445: BytePoly_64 = bigint_add!(bigint_sub!(bigint_mul!(x444, x442, 64), x441, 64), x0, 64);
    let x446: BytePoly_66 = bigint_nondet_quot!(ctx, x445, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x445, bigint_mul!(x446, x0, 98), 98),
        536459,
        4,
    )?;
    let x447: BytePoly_64 = bigint_mul!(x444, x444, 64);
    let x448: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x447, x436, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x449: BytePoly_66 = bigint_nondet_quot!(ctx, x448, x0, 66);
    let x450: BytePoly_32 = bigint_nondet_rem!(ctx, x448, x0, 32);
    let x451: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x444, x450, 64),
                    bigint_add!(bigint_sub!(x439, bigint_mul!(x444, x436, 64), 64), x0, 64),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x452: BytePoly_66 = bigint_nondet_quot!(ctx, x451, x0, 66);
    let x453: BytePoly_32 = bigint_nondet_rem!(ctx, x451, x0, 32);
    let x454: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x447, bigint_mul!(x449, x0, 98), 98), x436, 98),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x450,
        98
    );
    eqz(ctx, &x454, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x452, x0, 98), x453, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x444, bigint_sub!(x436, x450, 32), 64), x439, 64),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x455: BytePoly_32 = bigint_add!(bigint_sub!(x4, x453, 32), x0, 32);
    let x456: BytePoly_32 = bigint_add!(bigint_sub!(x3, x450, 32), x0, 32);
    let x457: BytePoly_32 = bigint_nondet_inv!(ctx, x456, x0, 32);
    let x458: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x455, x457, 64), x0, 32);
    let x459: BytePoly_64 = bigint_add!(bigint_sub!(bigint_mul!(x458, x456, 64), x455, 64), x0, 64);
    let x460: BytePoly_66 = bigint_nondet_quot!(ctx, x459, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x459, bigint_mul!(x460, x0, 98), 98),
        536459,
        4,
    )?;
    let x461: BytePoly_64 = bigint_mul!(x458, x458, 64);
    let x462: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x461, x450, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x463: BytePoly_66 = bigint_nondet_quot!(ctx, x462, x0, 66);
    let x464: BytePoly_32 = bigint_nondet_rem!(ctx, x462, x0, 32);
    let x465: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x458, x464, 64),
                    bigint_add!(bigint_sub!(x453, bigint_mul!(x458, x450, 64), 64), x0, 64),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x466: BytePoly_66 = bigint_nondet_quot!(ctx, x465, x0, 66);
    let x467: BytePoly_32 = bigint_nondet_rem!(ctx, x465, x0, 32);
    let x468: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x461, bigint_mul!(x463, x0, 98), 98), x450, 98),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x464,
        98
    );
    eqz(ctx, &x468, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x466, x0, 98), x467, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x458, bigint_sub!(x450, x464, 32), 64), x453, 64),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x469: BytePoly_32 = bigint_add!(bigint_sub!(x4, x467, 32), x0, 32);
    let x470: BytePoly_32 = bigint_add!(bigint_sub!(x3, x464, 32), x0, 32);
    let x471: BytePoly_32 = bigint_nondet_inv!(ctx, x470, x0, 32);
    let x472: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x469, x471, 64), x0, 32);
    let x473: BytePoly_64 = bigint_add!(bigint_sub!(bigint_mul!(x472, x470, 64), x469, 64), x0, 64);
    let x474: BytePoly_66 = bigint_nondet_quot!(ctx, x473, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x473, bigint_mul!(x474, x0, 98), 98),
        536459,
        4,
    )?;
    let x475: BytePoly_64 = bigint_mul!(x472, x472, 64);
    let x476: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x475, x464, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x477: BytePoly_66 = bigint_nondet_quot!(ctx, x476, x0, 66);
    let x478: BytePoly_32 = bigint_nondet_rem!(ctx, x476, x0, 32);
    let x479: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x472, x478, 64),
                    bigint_add!(bigint_sub!(x467, bigint_mul!(x472, x464, 64), 64), x0, 64),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x480: BytePoly_66 = bigint_nondet_quot!(ctx, x479, x0, 66);
    let x481: BytePoly_32 = bigint_nondet_rem!(ctx, x479, x0, 32);
    let x482: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x475, bigint_mul!(x477, x0, 98), 98), x464, 98),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x478,
        98
    );
    eqz(ctx, &x482, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x480, x0, 98), x481, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x472, bigint_sub!(x464, x478, 32), 64), x467, 64),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x483: BytePoly_32 = bigint_add!(bigint_sub!(x4, x481, 32), x0, 32);
    let x484: BytePoly_32 = bigint_add!(bigint_sub!(x3, x478, 32), x0, 32);
    let x485: BytePoly_32 = bigint_nondet_inv!(ctx, x484, x0, 32);
    let x486: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x483, x485, 64), x0, 32);
    let x487: BytePoly_64 = bigint_add!(bigint_sub!(bigint_mul!(x486, x484, 64), x483, 64), x0, 64);
    let x488: BytePoly_66 = bigint_nondet_quot!(ctx, x487, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x487, bigint_mul!(x488, x0, 98), 98),
        536459,
        4,
    )?;
    let x489: BytePoly_64 = bigint_mul!(x486, x486, 64);
    let x490: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x489, x478, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x491: BytePoly_66 = bigint_nondet_quot!(ctx, x490, x0, 66);
    let x492: BytePoly_32 = bigint_nondet_rem!(ctx, x490, x0, 32);
    let x493: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x486, x492, 64),
                    bigint_add!(bigint_sub!(x481, bigint_mul!(x486, x478, 64), 64), x0, 64),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x494: BytePoly_66 = bigint_nondet_quot!(ctx, x493, x0, 66);
    let x495: BytePoly_32 = bigint_nondet_rem!(ctx, x493, x0, 32);
    let x496: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x489, bigint_mul!(x491, x0, 98), 98), x478, 98),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x492,
        98
    );
    eqz(ctx, &x496, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x494, x0, 98), x495, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x486, bigint_sub!(x478, x492, 32), 64), x481, 64),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x497: BytePoly_32 = bigint_add!(bigint_sub!(x4, x495, 32), x0, 32);
    let x498: BytePoly_32 = bigint_add!(bigint_sub!(x3, x492, 32), x0, 32);
    let x499: BytePoly_32 = bigint_nondet_inv!(ctx, x498, x0, 32);
    let x500: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x497, x499, 64), x0, 32);
    let x501: BytePoly_64 = bigint_add!(bigint_sub!(bigint_mul!(x500, x498, 64), x497, 64), x0, 64);
    let x502: BytePoly_66 = bigint_nondet_quot!(ctx, x501, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x501, bigint_mul!(x502, x0, 98), 98),
        536459,
        4,
    )?;
    let x503: BytePoly_64 = bigint_mul!(x500, x500, 64);
    let x504: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x503, x492, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x505: BytePoly_66 = bigint_nondet_quot!(ctx, x504, x0, 66);
    let x506: BytePoly_32 = bigint_nondet_rem!(ctx, x504, x0, 32);
    let x507: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x500, x506, 64),
                    bigint_add!(bigint_sub!(x495, bigint_mul!(x500, x492, 64), 64), x0, 64),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x508: BytePoly_66 = bigint_nondet_quot!(ctx, x507, x0, 66);
    let x509: BytePoly_32 = bigint_nondet_rem!(ctx, x507, x0, 32);
    let x510: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x503, bigint_mul!(x505, x0, 98), 98), x492, 98),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x506,
        98
    );
    eqz(ctx, &x510, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x508, x0, 98), x509, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x500, bigint_sub!(x492, x506, 32), 64), x495, 64),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x511: BytePoly_32 = bigint_add!(bigint_sub!(x4, x509, 32), x0, 32);
    let x512: BytePoly_32 = bigint_add!(bigint_sub!(x3, x506, 32), x0, 32);
    let x513: BytePoly_32 = bigint_nondet_inv!(ctx, x512, x0, 32);
    let x514: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x511, x513, 64), x0, 32);
    let x515: BytePoly_64 = bigint_add!(bigint_sub!(bigint_mul!(x514, x512, 64), x511, 64), x0, 64);
    let x516: BytePoly_66 = bigint_nondet_quot!(ctx, x515, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x515, bigint_mul!(x516, x0, 98), 98),
        536459,
        4,
    )?;
    let x517: BytePoly_64 = bigint_mul!(x514, x514, 64);
    let x518: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x517, x506, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x519: BytePoly_66 = bigint_nondet_quot!(ctx, x518, x0, 66);
    let x520: BytePoly_32 = bigint_nondet_rem!(ctx, x518, x0, 32);
    let x521: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x514, x520, 64),
                    bigint_add!(bigint_sub!(x509, bigint_mul!(x514, x506, 64), 64), x0, 64),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x522: BytePoly_66 = bigint_nondet_quot!(ctx, x521, x0, 66);
    let x523: BytePoly_32 = bigint_nondet_rem!(ctx, x521, x0, 32);
    let x524: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x517, bigint_mul!(x519, x0, 98), 98), x506, 98),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x520,
        98
    );
    eqz(ctx, &x524, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x522, x0, 98), x523, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x514, bigint_sub!(x506, x520, 32), 64), x509, 64),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x525: BytePoly_32 = bigint_add!(bigint_sub!(x4, x523, 32), x0, 32);
    let x526: BytePoly_32 = bigint_add!(bigint_sub!(x3, x520, 32), x0, 32);
    let x527: BytePoly_32 = bigint_nondet_inv!(ctx, x526, x0, 32);
    let x528: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x525, x527, 64), x0, 32);
    let x529: BytePoly_64 = bigint_add!(bigint_sub!(bigint_mul!(x528, x526, 64), x525, 64), x0, 64);
    let x530: BytePoly_66 = bigint_nondet_quot!(ctx, x529, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x529, bigint_mul!(x530, x0, 98), 98),
        536459,
        4,
    )?;
    let x531: BytePoly_64 = bigint_mul!(x528, x528, 64);
    let x532: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x531, x520, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x533: BytePoly_66 = bigint_nondet_quot!(ctx, x532, x0, 66);
    let x534: BytePoly_32 = bigint_nondet_rem!(ctx, x532, x0, 32);
    let x535: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x528, x534, 64),
                    bigint_add!(bigint_sub!(x523, bigint_mul!(x528, x520, 64), 64), x0, 64),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x536: BytePoly_66 = bigint_nondet_quot!(ctx, x535, x0, 66);
    let x537: BytePoly_32 = bigint_nondet_rem!(ctx, x535, x0, 32);
    let x538: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x531, bigint_mul!(x533, x0, 98), 98), x520, 98),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x534,
        98
    );
    eqz(ctx, &x538, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x536, x0, 98), x537, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x528, bigint_sub!(x520, x534, 32), 64), x523, 64),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x539: BytePoly_32 = bigint_add!(bigint_sub!(x4, x537, 32), x0, 32);
    let x540: BytePoly_32 = bigint_add!(bigint_sub!(x3, x534, 32), x0, 32);
    let x541: BytePoly_32 = bigint_nondet_inv!(ctx, x540, x0, 32);
    let x542: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x539, x541, 64), x0, 32);
    let x543: BytePoly_64 = bigint_add!(bigint_sub!(bigint_mul!(x542, x540, 64), x539, 64), x0, 64);
    let x544: BytePoly_66 = bigint_nondet_quot!(ctx, x543, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x543, bigint_mul!(x544, x0, 98), 98),
        536459,
        4,
    )?;
    let x545: BytePoly_64 = bigint_mul!(x542, x542, 64);
    let x546: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x545, x534, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x547: BytePoly_66 = bigint_nondet_quot!(ctx, x546, x0, 66);
    let x548: BytePoly_32 = bigint_nondet_rem!(ctx, x546, x0, 32);
    let x549: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x542, x548, 64),
                    bigint_add!(bigint_sub!(x537, bigint_mul!(x542, x534, 64), 64), x0, 64),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x550: BytePoly_66 = bigint_nondet_quot!(ctx, x549, x0, 66);
    let x551: BytePoly_32 = bigint_nondet_rem!(ctx, x549, x0, 32);
    let x552: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x545, bigint_mul!(x547, x0, 98), 98), x534, 98),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x548,
        98
    );
    eqz(ctx, &x552, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x550, x0, 98), x551, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x542, bigint_sub!(x534, x548, 32), 64), x537, 64),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x553: BytePoly_32 = bigint_add!(bigint_sub!(x4, x551, 32), x0, 32);
    let x554: BytePoly_32 = bigint_add!(bigint_sub!(x3, x548, 32), x0, 32);
    let x555: BytePoly_32 = bigint_nondet_inv!(ctx, x554, x0, 32);
    let x556: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x553, x555, 64), x0, 32);
    let x557: BytePoly_64 = bigint_add!(bigint_sub!(bigint_mul!(x556, x554, 64), x553, 64), x0, 64);
    let x558: BytePoly_66 = bigint_nondet_quot!(ctx, x557, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x557, bigint_mul!(x558, x0, 98), 98),
        536459,
        4,
    )?;
    let x559: BytePoly_64 = bigint_mul!(x556, x556, 64);
    let x560: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x559, x548, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x561: BytePoly_66 = bigint_nondet_quot!(ctx, x560, x0, 66);
    let x562: BytePoly_32 = bigint_nondet_rem!(ctx, x560, x0, 32);
    let x563: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x556, x562, 64),
                    bigint_add!(bigint_sub!(x551, bigint_mul!(x556, x548, 64), 64), x0, 64),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x564: BytePoly_66 = bigint_nondet_quot!(ctx, x563, x0, 66);
    let x565: BytePoly_32 = bigint_nondet_rem!(ctx, x563, x0, 32);
    let x566: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x559, bigint_mul!(x561, x0, 98), 98), x548, 98),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x562,
        98
    );
    eqz(ctx, &x566, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x564, x0, 98), x565, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x556, bigint_sub!(x548, x562, 32), 64), x551, 64),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x567: BytePoly_32 = bigint_add!(bigint_sub!(x4, x565, 32), x0, 32);
    let x568: BytePoly_32 = bigint_add!(bigint_sub!(x3, x562, 32), x0, 32);
    let x569: BytePoly_32 = bigint_nondet_inv!(ctx, x568, x0, 32);
    let x570: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x567, x569, 64), x0, 32);
    let x571: BytePoly_64 = bigint_add!(bigint_sub!(bigint_mul!(x570, x568, 64), x567, 64), x0, 64);
    let x572: BytePoly_66 = bigint_nondet_quot!(ctx, x571, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x571, bigint_mul!(x572, x0, 98), 98),
        536459,
        4,
    )?;
    let x573: BytePoly_64 = bigint_mul!(x570, x570, 64);
    let x574: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x573, x562, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x575: BytePoly_66 = bigint_nondet_quot!(ctx, x574, x0, 66);
    let x576: BytePoly_32 = bigint_nondet_rem!(ctx, x574, x0, 32);
    let x577: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x570, x576, 64),
                    bigint_add!(bigint_sub!(x565, bigint_mul!(x570, x562, 64), 64), x0, 64),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x578: BytePoly_66 = bigint_nondet_quot!(ctx, x577, x0, 66);
    let x579: BytePoly_32 = bigint_nondet_rem!(ctx, x577, x0, 32);
    let x580: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x573, bigint_mul!(x575, x0, 98), 98), x562, 98),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x576,
        98
    );
    eqz(ctx, &x580, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x578, x0, 98), x579, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x570, bigint_sub!(x562, x576, 32), 64), x565, 64),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x581: BytePoly_32 = bigint_add!(bigint_sub!(x4, x579, 32), x0, 32);
    let x582: BytePoly_32 = bigint_add!(bigint_sub!(x3, x576, 32), x0, 32);
    let x583: BytePoly_32 = bigint_nondet_inv!(ctx, x582, x0, 32);
    let x584: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x581, x583, 64), x0, 32);
    let x585: BytePoly_64 = bigint_add!(bigint_sub!(bigint_mul!(x584, x582, 64), x581, 64), x0, 64);
    let x586: BytePoly_66 = bigint_nondet_quot!(ctx, x585, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x585, bigint_mul!(x586, x0, 98), 98),
        536459,
        4,
    )?;
    let x587: BytePoly_64 = bigint_mul!(x584, x584, 64);
    let x588: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x587, x576, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x589: BytePoly_66 = bigint_nondet_quot!(ctx, x588, x0, 66);
    let x590: BytePoly_32 = bigint_nondet_rem!(ctx, x588, x0, 32);
    let x591: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x584, x590, 64),
                    bigint_add!(bigint_sub!(x579, bigint_mul!(x584, x576, 64), 64), x0, 64),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x592: BytePoly_66 = bigint_nondet_quot!(ctx, x591, x0, 66);
    let x593: BytePoly_32 = bigint_nondet_rem!(ctx, x591, x0, 32);
    let x594: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x587, bigint_mul!(x589, x0, 98), 98), x576, 98),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x590,
        98
    );
    eqz(ctx, &x594, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x592, x0, 98), x593, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x584, bigint_sub!(x576, x590, 32), 64), x579, 64),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x595: BytePoly_32 = bigint_add!(bigint_sub!(x4, x593, 32), x0, 32);
    let x596: BytePoly_32 = bigint_add!(bigint_sub!(x3, x590, 32), x0, 32);
    let x597: BytePoly_32 = bigint_nondet_inv!(ctx, x596, x0, 32);
    let x598: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x595, x597, 64), x0, 32);
    let x599: BytePoly_64 = bigint_add!(bigint_sub!(bigint_mul!(x598, x596, 64), x595, 64), x0, 64);
    let x600: BytePoly_66 = bigint_nondet_quot!(ctx, x599, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x599, bigint_mul!(x600, x0, 98), 98),
        536459,
        4,
    )?;
    let x601: BytePoly_64 = bigint_mul!(x598, x598, 64);
    let x602: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x601, x590, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x603: BytePoly_66 = bigint_nondet_quot!(ctx, x602, x0, 66);
    let x604: BytePoly_32 = bigint_nondet_rem!(ctx, x602, x0, 32);
    let x605: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x598, x604, 64),
                    bigint_add!(bigint_sub!(x593, bigint_mul!(x598, x590, 64), 64), x0, 64),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x606: BytePoly_66 = bigint_nondet_quot!(ctx, x605, x0, 66);
    let x607: BytePoly_32 = bigint_nondet_rem!(ctx, x605, x0, 32);
    let x608: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x601, bigint_mul!(x603, x0, 98), 98), x590, 98),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x604,
        98
    );
    eqz(ctx, &x608, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x606, x0, 98), x607, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x598, bigint_sub!(x590, x604, 32), 64), x593, 64),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x609: BytePoly_32 = bigint_add!(bigint_sub!(x4, x607, 32), x0, 32);
    let x610: BytePoly_32 = bigint_add!(bigint_sub!(x3, x604, 32), x0, 32);
    let x611: BytePoly_32 = bigint_nondet_inv!(ctx, x610, x0, 32);
    let x612: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x609, x611, 64), x0, 32);
    let x613: BytePoly_64 = bigint_add!(bigint_sub!(bigint_mul!(x612, x610, 64), x609, 64), x0, 64);
    let x614: BytePoly_66 = bigint_nondet_quot!(ctx, x613, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x613, bigint_mul!(x614, x0, 98), 98),
        536459,
        4,
    )?;
    let x615: BytePoly_64 = bigint_mul!(x612, x612, 64);
    let x616: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x615, x604, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x617: BytePoly_66 = bigint_nondet_quot!(ctx, x616, x0, 66);
    let x618: BytePoly_32 = bigint_nondet_rem!(ctx, x616, x0, 32);
    let x619: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x612, x618, 64),
                    bigint_add!(bigint_sub!(x607, bigint_mul!(x612, x604, 64), 64), x0, 64),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x620: BytePoly_66 = bigint_nondet_quot!(ctx, x619, x0, 66);
    let x621: BytePoly_32 = bigint_nondet_rem!(ctx, x619, x0, 32);
    let x622: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x615, bigint_mul!(x617, x0, 98), 98), x604, 98),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x618,
        98
    );
    eqz(ctx, &x622, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x620, x0, 98), x621, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x612, bigint_sub!(x604, x618, 32), 64), x607, 64),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x623: BytePoly_32 = bigint_add!(bigint_sub!(x4, x621, 32), x0, 32);
    let x624: BytePoly_32 = bigint_add!(bigint_sub!(x3, x618, 32), x0, 32);
    let x625: BytePoly_32 = bigint_nondet_inv!(ctx, x624, x0, 32);
    let x626: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x623, x625, 64), x0, 32);
    let x627: BytePoly_64 = bigint_add!(bigint_sub!(bigint_mul!(x626, x624, 64), x623, 64), x0, 64);
    let x628: BytePoly_66 = bigint_nondet_quot!(ctx, x627, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x627, bigint_mul!(x628, x0, 98), 98),
        536459,
        4,
    )?;
    let x629: BytePoly_64 = bigint_mul!(x626, x626, 64);
    let x630: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x629, x618, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x631: BytePoly_66 = bigint_nondet_quot!(ctx, x630, x0, 66);
    let x632: BytePoly_32 = bigint_nondet_rem!(ctx, x630, x0, 32);
    let x633: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x626, x632, 64),
                    bigint_add!(bigint_sub!(x621, bigint_mul!(x626, x618, 64), 64), x0, 64),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x634: BytePoly_66 = bigint_nondet_quot!(ctx, x633, x0, 66);
    let x635: BytePoly_32 = bigint_nondet_rem!(ctx, x633, x0, 32);
    let x636: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x629, bigint_mul!(x631, x0, 98), 98), x618, 98),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x632,
        98
    );
    eqz(ctx, &x636, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x634, x0, 98), x635, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x626, bigint_sub!(x618, x632, 32), 64), x621, 64),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x637: BytePoly_32 = bigint_add!(bigint_sub!(x4, x635, 32), x0, 32);
    let x638: BytePoly_32 = bigint_add!(bigint_sub!(x3, x632, 32), x0, 32);
    let x639: BytePoly_32 = bigint_nondet_inv!(ctx, x638, x0, 32);
    let x640: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x637, x639, 64), x0, 32);
    let x641: BytePoly_64 = bigint_add!(bigint_sub!(bigint_mul!(x640, x638, 64), x637, 64), x0, 64);
    let x642: BytePoly_66 = bigint_nondet_quot!(ctx, x641, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x641, bigint_mul!(x642, x0, 98), 98),
        536459,
        4,
    )?;
    let x643: BytePoly_64 = bigint_mul!(x640, x640, 64);
    let x644: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x643, x632, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x645: BytePoly_66 = bigint_nondet_quot!(ctx, x644, x0, 66);
    let x646: BytePoly_32 = bigint_nondet_rem!(ctx, x644, x0, 32);
    let x647: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x640, x646, 64),
                    bigint_add!(bigint_sub!(x635, bigint_mul!(x640, x632, 64), 64), x0, 64),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x648: BytePoly_66 = bigint_nondet_quot!(ctx, x647, x0, 66);
    let x649: BytePoly_32 = bigint_nondet_rem!(ctx, x647, x0, 32);
    let x650: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x643, bigint_mul!(x645, x0, 98), 98), x632, 98),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x646,
        98
    );
    eqz(ctx, &x650, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x648, x0, 98), x649, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x640, bigint_sub!(x632, x646, 32), 64), x635, 64),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x651: BytePoly_32 = bigint_add!(bigint_sub!(x4, x649, 32), x0, 32);
    let x652: BytePoly_32 = bigint_add!(bigint_sub!(x3, x646, 32), x0, 32);
    let x653: BytePoly_32 = bigint_nondet_inv!(ctx, x652, x0, 32);
    let x654: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x651, x653, 64), x0, 32);
    let x655: BytePoly_64 = bigint_add!(bigint_sub!(bigint_mul!(x654, x652, 64), x651, 64), x0, 64);
    let x656: BytePoly_66 = bigint_nondet_quot!(ctx, x655, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x655, bigint_mul!(x656, x0, 98), 98),
        536459,
        4,
    )?;
    let x657: BytePoly_64 = bigint_mul!(x654, x654, 64);
    let x658: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x657, x646, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x659: BytePoly_66 = bigint_nondet_quot!(ctx, x658, x0, 66);
    let x660: BytePoly_32 = bigint_nondet_rem!(ctx, x658, x0, 32);
    let x661: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x654, x660, 64),
                    bigint_add!(bigint_sub!(x649, bigint_mul!(x654, x646, 64), 64), x0, 64),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x662: BytePoly_66 = bigint_nondet_quot!(ctx, x661, x0, 66);
    let x663: BytePoly_32 = bigint_nondet_rem!(ctx, x661, x0, 32);
    let x664: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x657, bigint_mul!(x659, x0, 98), 98), x646, 98),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x660,
        98
    );
    eqz(ctx, &x664, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x662, x0, 98), x663, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x654, bigint_sub!(x646, x660, 32), 64), x649, 64),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x665: BytePoly_32 = bigint_add!(bigint_sub!(x4, x663, 32), x0, 32);
    let x666: BytePoly_32 = bigint_add!(bigint_sub!(x3, x660, 32), x0, 32);
    let x667: BytePoly_32 = bigint_nondet_inv!(ctx, x666, x0, 32);
    let x668: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x665, x667, 64), x0, 32);
    let x669: BytePoly_64 = bigint_add!(bigint_sub!(bigint_mul!(x668, x666, 64), x665, 64), x0, 64);
    let x670: BytePoly_66 = bigint_nondet_quot!(ctx, x669, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x669, bigint_mul!(x670, x0, 98), 98),
        536459,
        4,
    )?;
    let x671: BytePoly_64 = bigint_mul!(x668, x668, 64);
    let x672: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x671, x660, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x673: BytePoly_66 = bigint_nondet_quot!(ctx, x672, x0, 66);
    let x674: BytePoly_32 = bigint_nondet_rem!(ctx, x672, x0, 32);
    let x675: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x668, x674, 64),
                    bigint_add!(bigint_sub!(x663, bigint_mul!(x668, x660, 64), 64), x0, 64),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x676: BytePoly_66 = bigint_nondet_quot!(ctx, x675, x0, 66);
    let x677: BytePoly_32 = bigint_nondet_rem!(ctx, x675, x0, 32);
    let x678: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x671, bigint_mul!(x673, x0, 98), 98), x660, 98),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x674,
        98
    );
    eqz(ctx, &x678, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x676, x0, 98), x677, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x668, bigint_sub!(x660, x674, 32), 64), x663, 64),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x679: BytePoly_32 = bigint_add!(bigint_sub!(x4, x677, 32), x0, 32);
    let x680: BytePoly_32 = bigint_add!(bigint_sub!(x3, x674, 32), x0, 32);
    let x681: BytePoly_32 = bigint_nondet_inv!(ctx, x680, x0, 32);
    let x682: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x679, x681, 64), x0, 32);
    let x683: BytePoly_64 = bigint_add!(bigint_sub!(bigint_mul!(x682, x680, 64), x679, 64), x0, 64);
    let x684: BytePoly_66 = bigint_nondet_quot!(ctx, x683, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x683, bigint_mul!(x684, x0, 98), 98),
        536459,
        4,
    )?;
    let x685: BytePoly_64 = bigint_mul!(x682, x682, 64);
    let x686: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x685, x674, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x687: BytePoly_66 = bigint_nondet_quot!(ctx, x686, x0, 66);
    let x688: BytePoly_32 = bigint_nondet_rem!(ctx, x686, x0, 32);
    let x689: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x682, x688, 64),
                    bigint_add!(bigint_sub!(x677, bigint_mul!(x682, x674, 64), 64), x0, 64),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x690: BytePoly_66 = bigint_nondet_quot!(ctx, x689, x0, 66);
    let x691: BytePoly_32 = bigint_nondet_rem!(ctx, x689, x0, 32);
    let x692: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x685, bigint_mul!(x687, x0, 98), 98), x674, 98),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x688,
        98
    );
    eqz(ctx, &x692, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x690, x0, 98), x691, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x682, bigint_sub!(x674, x688, 32), 64), x677, 64),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x693: BytePoly_32 = bigint_add!(bigint_sub!(x4, x691, 32), x0, 32);
    let x694: BytePoly_32 = bigint_add!(bigint_sub!(x3, x688, 32), x0, 32);
    let x695: BytePoly_32 = bigint_nondet_inv!(ctx, x694, x0, 32);
    let x696: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x693, x695, 64), x0, 32);
    let x697: BytePoly_64 = bigint_add!(bigint_sub!(bigint_mul!(x696, x694, 64), x693, 64), x0, 64);
    let x698: BytePoly_66 = bigint_nondet_quot!(ctx, x697, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x697, bigint_mul!(x698, x0, 98), 98),
        536459,
        4,
    )?;
    let x699: BytePoly_64 = bigint_mul!(x696, x696, 64);
    let x700: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x699, x688, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x701: BytePoly_66 = bigint_nondet_quot!(ctx, x700, x0, 66);
    let x702: BytePoly_32 = bigint_nondet_rem!(ctx, x700, x0, 32);
    let x703: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x696, x702, 64),
                    bigint_add!(bigint_sub!(x691, bigint_mul!(x696, x688, 64), 64), x0, 64),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x704: BytePoly_66 = bigint_nondet_quot!(ctx, x703, x0, 66);
    let x705: BytePoly_32 = bigint_nondet_rem!(ctx, x703, x0, 32);
    let x706: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x699, bigint_mul!(x701, x0, 98), 98), x688, 98),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x702,
        98
    );
    eqz(ctx, &x706, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x704, x0, 98), x705, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x696, bigint_sub!(x688, x702, 32), 64), x691, 64),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x707: BytePoly_32 = bigint_add!(bigint_sub!(x4, x705, 32), x0, 32);
    let x708: BytePoly_32 = bigint_add!(bigint_sub!(x3, x702, 32), x0, 32);
    let x709: BytePoly_32 = bigint_nondet_inv!(ctx, x708, x0, 32);
    let x710: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x707, x709, 64), x0, 32);
    let x711: BytePoly_64 = bigint_add!(bigint_sub!(bigint_mul!(x710, x708, 64), x707, 64), x0, 64);
    let x712: BytePoly_66 = bigint_nondet_quot!(ctx, x711, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x711, bigint_mul!(x712, x0, 98), 98),
        536459,
        4,
    )?;
    let x713: BytePoly_64 = bigint_mul!(x710, x710, 64);
    let x714: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x713, x702, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x715: BytePoly_66 = bigint_nondet_quot!(ctx, x714, x0, 66);
    let x716: BytePoly_32 = bigint_nondet_rem!(ctx, x714, x0, 32);
    let x717: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x710, x716, 64),
                    bigint_add!(bigint_sub!(x705, bigint_mul!(x710, x702, 64), 64), x0, 64),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x718: BytePoly_66 = bigint_nondet_quot!(ctx, x717, x0, 66);
    let x719: BytePoly_32 = bigint_nondet_rem!(ctx, x717, x0, 32);
    let x720: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x713, bigint_mul!(x715, x0, 98), 98), x702, 98),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x716,
        98
    );
    eqz(ctx, &x720, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x718, x0, 98), x719, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x710, bigint_sub!(x702, x716, 32), 64), x705, 64),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x721: BytePoly_32 = bigint_add!(bigint_sub!(x4, x719, 32), x0, 32);
    let x722: BytePoly_32 = bigint_add!(bigint_sub!(x3, x716, 32), x0, 32);
    let x723: BytePoly_32 = bigint_nondet_inv!(ctx, x722, x0, 32);
    let x724: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x721, x723, 64), x0, 32);
    let x725: BytePoly_64 = bigint_add!(bigint_sub!(bigint_mul!(x724, x722, 64), x721, 64), x0, 64);
    let x726: BytePoly_66 = bigint_nondet_quot!(ctx, x725, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x725, bigint_mul!(x726, x0, 98), 98),
        536459,
        4,
    )?;
    let x727: BytePoly_64 = bigint_mul!(x724, x724, 64);
    let x728: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x727, x716, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x729: BytePoly_66 = bigint_nondet_quot!(ctx, x728, x0, 66);
    let x730: BytePoly_32 = bigint_nondet_rem!(ctx, x728, x0, 32);
    let x731: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x724, x730, 64),
                    bigint_add!(bigint_sub!(x719, bigint_mul!(x724, x716, 64), 64), x0, 64),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x732: BytePoly_66 = bigint_nondet_quot!(ctx, x731, x0, 66);
    let x733: BytePoly_32 = bigint_nondet_rem!(ctx, x731, x0, 32);
    let x734: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x727, bigint_mul!(x729, x0, 98), 98), x716, 98),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x730,
        98
    );
    eqz(ctx, &x734, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x732, x0, 98), x733, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x724, bigint_sub!(x716, x730, 32), 64), x719, 64),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x735: BytePoly_32 = bigint_add!(bigint_sub!(x4, x733, 32), x0, 32);
    let x736: BytePoly_32 = bigint_add!(bigint_sub!(x3, x730, 32), x0, 32);
    let x737: BytePoly_32 = bigint_nondet_inv!(ctx, x736, x0, 32);
    let x738: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x735, x737, 64), x0, 32);
    let x739: BytePoly_64 = bigint_add!(bigint_sub!(bigint_mul!(x738, x736, 64), x735, 64), x0, 64);
    let x740: BytePoly_66 = bigint_nondet_quot!(ctx, x739, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x739, bigint_mul!(x740, x0, 98), 98),
        536459,
        4,
    )?;
    let x741: BytePoly_64 = bigint_mul!(x738, x738, 64);
    let x742: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x741, x730, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x743: BytePoly_66 = bigint_nondet_quot!(ctx, x742, x0, 66);
    let x744: BytePoly_32 = bigint_nondet_rem!(ctx, x742, x0, 32);
    let x745: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x738, x744, 64),
                    bigint_add!(bigint_sub!(x733, bigint_mul!(x738, x730, 64), 64), x0, 64),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x746: BytePoly_66 = bigint_nondet_quot!(ctx, x745, x0, 66);
    let x747: BytePoly_32 = bigint_nondet_rem!(ctx, x745, x0, 32);
    let x748: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x741, bigint_mul!(x743, x0, 98), 98), x730, 98),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x744,
        98
    );
    eqz(ctx, &x748, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x746, x0, 98), x747, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x738, bigint_sub!(x730, x744, 32), 64), x733, 64),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x749: BytePoly_32 = bigint_add!(bigint_sub!(x4, x747, 32), x0, 32);
    let x750: BytePoly_32 = bigint_add!(bigint_sub!(x3, x744, 32), x0, 32);
    let x751: BytePoly_32 = bigint_nondet_inv!(ctx, x750, x0, 32);
    let x752: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x749, x751, 64), x0, 32);
    let x753: BytePoly_64 = bigint_add!(bigint_sub!(bigint_mul!(x752, x750, 64), x749, 64), x0, 64);
    let x754: BytePoly_66 = bigint_nondet_quot!(ctx, x753, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x753, bigint_mul!(x754, x0, 98), 98),
        536459,
        4,
    )?;
    let x755: BytePoly_64 = bigint_mul!(x752, x752, 64);
    let x756: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x755, x744, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x757: BytePoly_66 = bigint_nondet_quot!(ctx, x756, x0, 66);
    let x758: BytePoly_32 = bigint_nondet_rem!(ctx, x756, x0, 32);
    let x759: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x752, x758, 64),
                    bigint_add!(bigint_sub!(x747, bigint_mul!(x752, x744, 64), 64), x0, 64),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x760: BytePoly_66 = bigint_nondet_quot!(ctx, x759, x0, 66);
    let x761: BytePoly_32 = bigint_nondet_rem!(ctx, x759, x0, 32);
    let x762: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x755, bigint_mul!(x757, x0, 98), 98), x744, 98),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x758,
        98
    );
    eqz(ctx, &x762, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x760, x0, 98), x761, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x752, bigint_sub!(x744, x758, 32), 64), x747, 64),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x763: BytePoly_32 = bigint_add!(bigint_sub!(x4, x761, 32), x0, 32);
    let x764: BytePoly_32 = bigint_add!(bigint_sub!(x3, x758, 32), x0, 32);
    let x765: BytePoly_32 = bigint_nondet_inv!(ctx, x764, x0, 32);
    let x766: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x763, x765, 64), x0, 32);
    let x767: BytePoly_64 = bigint_add!(bigint_sub!(bigint_mul!(x766, x764, 64), x763, 64), x0, 64);
    let x768: BytePoly_66 = bigint_nondet_quot!(ctx, x767, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x767, bigint_mul!(x768, x0, 98), 98),
        536459,
        4,
    )?;
    let x769: BytePoly_64 = bigint_mul!(x766, x766, 64);
    let x770: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x769, x758, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x771: BytePoly_66 = bigint_nondet_quot!(ctx, x770, x0, 66);
    let x772: BytePoly_32 = bigint_nondet_rem!(ctx, x770, x0, 32);
    let x773: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x766, x772, 64),
                    bigint_add!(bigint_sub!(x761, bigint_mul!(x766, x758, 64), 64), x0, 64),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x774: BytePoly_66 = bigint_nondet_quot!(ctx, x773, x0, 66);
    let x775: BytePoly_32 = bigint_nondet_rem!(ctx, x773, x0, 32);
    let x776: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x769, bigint_mul!(x771, x0, 98), 98), x758, 98),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x772,
        98
    );
    eqz(ctx, &x776, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x774, x0, 98), x775, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x766, bigint_sub!(x758, x772, 32), 64), x761, 64),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x777: BytePoly_32 = bigint_add!(bigint_sub!(x4, x775, 32), x0, 32);
    let x778: BytePoly_32 = bigint_add!(bigint_sub!(x3, x772, 32), x0, 32);
    let x779: BytePoly_32 = bigint_nondet_inv!(ctx, x778, x0, 32);
    let x780: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x777, x779, 64), x0, 32);
    let x781: BytePoly_64 = bigint_add!(bigint_sub!(bigint_mul!(x780, x778, 64), x777, 64), x0, 64);
    let x782: BytePoly_66 = bigint_nondet_quot!(ctx, x781, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x781, bigint_mul!(x782, x0, 98), 98),
        536459,
        4,
    )?;
    let x783: BytePoly_64 = bigint_mul!(x780, x780, 64);
    let x784: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x783, x772, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x785: BytePoly_66 = bigint_nondet_quot!(ctx, x784, x0, 66);
    let x786: BytePoly_32 = bigint_nondet_rem!(ctx, x784, x0, 32);
    let x787: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x780, x786, 64),
                    bigint_add!(bigint_sub!(x775, bigint_mul!(x780, x772, 64), 64), x0, 64),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x788: BytePoly_66 = bigint_nondet_quot!(ctx, x787, x0, 66);
    let x789: BytePoly_32 = bigint_nondet_rem!(ctx, x787, x0, 32);
    let x790: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x783, bigint_mul!(x785, x0, 98), 98), x772, 98),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x786,
        98
    );
    eqz(ctx, &x790, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x788, x0, 98), x789, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x780, bigint_sub!(x772, x786, 32), 64), x775, 64),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x791: BytePoly_32 = bigint_add!(bigint_sub!(x4, x789, 32), x0, 32);
    let x792: BytePoly_32 = bigint_add!(bigint_sub!(x3, x786, 32), x0, 32);
    let x793: BytePoly_32 = bigint_nondet_inv!(ctx, x792, x0, 32);
    let x794: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x791, x793, 64), x0, 32);
    let x795: BytePoly_64 = bigint_add!(bigint_sub!(bigint_mul!(x794, x792, 64), x791, 64), x0, 64);
    let x796: BytePoly_66 = bigint_nondet_quot!(ctx, x795, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x795, bigint_mul!(x796, x0, 98), 98),
        536459,
        4,
    )?;
    let x797: BytePoly_64 = bigint_mul!(x794, x794, 64);
    let x798: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x797, x786, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x799: BytePoly_66 = bigint_nondet_quot!(ctx, x798, x0, 66);
    let x800: BytePoly_32 = bigint_nondet_rem!(ctx, x798, x0, 32);
    let x801: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x794, x800, 64),
                    bigint_add!(bigint_sub!(x789, bigint_mul!(x794, x786, 64), 64), x0, 64),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x802: BytePoly_66 = bigint_nondet_quot!(ctx, x801, x0, 66);
    let x803: BytePoly_32 = bigint_nondet_rem!(ctx, x801, x0, 32);
    let x804: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x797, bigint_mul!(x799, x0, 98), 98), x786, 98),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x800,
        98
    );
    eqz(ctx, &x804, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x802, x0, 98), x803, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x794, bigint_sub!(x786, x800, 32), 64), x789, 64),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x805: BytePoly_32 = bigint_add!(bigint_sub!(x4, x803, 32), x0, 32);
    let x806: BytePoly_32 = bigint_add!(bigint_sub!(x3, x800, 32), x0, 32);
    let x807: BytePoly_32 = bigint_nondet_inv!(ctx, x806, x0, 32);
    let x808: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x805, x807, 64), x0, 32);
    let x809: BytePoly_64 = bigint_add!(bigint_sub!(bigint_mul!(x808, x806, 64), x805, 64), x0, 64);
    let x810: BytePoly_66 = bigint_nondet_quot!(ctx, x809, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x809, bigint_mul!(x810, x0, 98), 98),
        536459,
        4,
    )?;
    let x811: BytePoly_64 = bigint_mul!(x808, x808, 64);
    let x812: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x811, x800, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x813: BytePoly_66 = bigint_nondet_quot!(ctx, x812, x0, 66);
    let x814: BytePoly_32 = bigint_nondet_rem!(ctx, x812, x0, 32);
    let x815: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x808, x814, 64),
                    bigint_add!(bigint_sub!(x803, bigint_mul!(x808, x800, 64), 64), x0, 64),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x816: BytePoly_66 = bigint_nondet_quot!(ctx, x815, x0, 66);
    let x817: BytePoly_32 = bigint_nondet_rem!(ctx, x815, x0, 32);
    let x818: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x811, bigint_mul!(x813, x0, 98), 98), x800, 98),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x814,
        98
    );
    eqz(ctx, &x818, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x816, x0, 98), x817, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x808, bigint_sub!(x800, x814, 32), 64), x803, 64),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x819: BytePoly_32 = bigint_add!(bigint_sub!(x4, x817, 32), x0, 32);
    let x820: BytePoly_32 = bigint_add!(bigint_sub!(x3, x814, 32), x0, 32);
    let x821: BytePoly_32 = bigint_nondet_inv!(ctx, x820, x0, 32);
    let x822: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x819, x821, 64), x0, 32);
    let x823: BytePoly_64 = bigint_add!(bigint_sub!(bigint_mul!(x822, x820, 64), x819, 64), x0, 64);
    let x824: BytePoly_66 = bigint_nondet_quot!(ctx, x823, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x823, bigint_mul!(x824, x0, 98), 98),
        536459,
        4,
    )?;
    let x825: BytePoly_64 = bigint_mul!(x822, x822, 64);
    let x826: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x825, x814, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x827: BytePoly_66 = bigint_nondet_quot!(ctx, x826, x0, 66);
    let x828: BytePoly_32 = bigint_nondet_rem!(ctx, x826, x0, 32);
    let x829: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x822, x828, 64),
                    bigint_add!(bigint_sub!(x817, bigint_mul!(x822, x814, 64), 64), x0, 64),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x830: BytePoly_66 = bigint_nondet_quot!(ctx, x829, x0, 66);
    let x831: BytePoly_32 = bigint_nondet_rem!(ctx, x829, x0, 32);
    let x832: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x825, bigint_mul!(x827, x0, 98), 98), x814, 98),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x828,
        98
    );
    eqz(ctx, &x832, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x830, x0, 98), x831, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x822, bigint_sub!(x814, x828, 32), 64), x817, 64),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x833: BytePoly_32 = bigint_add!(bigint_sub!(x4, x831, 32), x0, 32);
    let x834: BytePoly_32 = bigint_add!(bigint_sub!(x3, x828, 32), x0, 32);
    let x835: BytePoly_32 = bigint_nondet_inv!(ctx, x834, x0, 32);
    let x836: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x833, x835, 64), x0, 32);
    let x837: BytePoly_64 = bigint_add!(bigint_sub!(bigint_mul!(x836, x834, 64), x833, 64), x0, 64);
    let x838: BytePoly_66 = bigint_nondet_quot!(ctx, x837, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x837, bigint_mul!(x838, x0, 98), 98),
        536459,
        4,
    )?;
    let x839: BytePoly_64 = bigint_mul!(x836, x836, 64);
    let x840: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x839, x828, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x841: BytePoly_66 = bigint_nondet_quot!(ctx, x840, x0, 66);
    let x842: BytePoly_32 = bigint_nondet_rem!(ctx, x840, x0, 32);
    let x843: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x836, x842, 64),
                    bigint_add!(bigint_sub!(x831, bigint_mul!(x836, x828, 64), 64), x0, 64),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x844: BytePoly_66 = bigint_nondet_quot!(ctx, x843, x0, 66);
    let x845: BytePoly_32 = bigint_nondet_rem!(ctx, x843, x0, 32);
    let x846: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x839, bigint_mul!(x841, x0, 98), 98), x828, 98),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x842,
        98
    );
    eqz(ctx, &x846, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x844, x0, 98), x845, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x836, bigint_sub!(x828, x842, 32), 64), x831, 64),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x847: BytePoly_32 = bigint_add!(bigint_sub!(x4, x845, 32), x0, 32);
    let x848: BytePoly_32 = bigint_add!(bigint_sub!(x3, x842, 32), x0, 32);
    let x849: BytePoly_32 = bigint_nondet_inv!(ctx, x848, x0, 32);
    let x850: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x847, x849, 64), x0, 32);
    let x851: BytePoly_64 = bigint_add!(bigint_sub!(bigint_mul!(x850, x848, 64), x847, 64), x0, 64);
    let x852: BytePoly_66 = bigint_nondet_quot!(ctx, x851, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x851, bigint_mul!(x852, x0, 98), 98),
        536459,
        4,
    )?;
    let x853: BytePoly_64 = bigint_mul!(x850, x850, 64);
    let x854: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x853, x842, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x855: BytePoly_66 = bigint_nondet_quot!(ctx, x854, x0, 66);
    let x856: BytePoly_32 = bigint_nondet_rem!(ctx, x854, x0, 32);
    let x857: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x850, x856, 64),
                    bigint_add!(bigint_sub!(x845, bigint_mul!(x850, x842, 64), 64), x0, 64),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x858: BytePoly_66 = bigint_nondet_quot!(ctx, x857, x0, 66);
    let x859: BytePoly_32 = bigint_nondet_rem!(ctx, x857, x0, 32);
    let x860: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x853, bigint_mul!(x855, x0, 98), 98), x842, 98),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x856,
        98
    );
    eqz(ctx, &x860, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x858, x0, 98), x859, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x850, bigint_sub!(x842, x856, 32), 64), x845, 64),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x861: BytePoly_32 = bigint_add!(bigint_sub!(x4, x859, 32), x0, 32);
    let x862: BytePoly_32 = bigint_add!(bigint_sub!(x3, x856, 32), x0, 32);
    let x863: BytePoly_32 = bigint_nondet_inv!(ctx, x862, x0, 32);
    let x864: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x861, x863, 64), x0, 32);
    let x865: BytePoly_64 = bigint_add!(bigint_sub!(bigint_mul!(x864, x862, 64), x861, 64), x0, 64);
    let x866: BytePoly_66 = bigint_nondet_quot!(ctx, x865, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x865, bigint_mul!(x866, x0, 98), 98),
        536459,
        4,
    )?;
    let x867: BytePoly_64 = bigint_mul!(x864, x864, 64);
    let x868: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x867, x856, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x869: BytePoly_66 = bigint_nondet_quot!(ctx, x868, x0, 66);
    let x870: BytePoly_32 = bigint_nondet_rem!(ctx, x868, x0, 32);
    let x871: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x864, x870, 64),
                    bigint_add!(bigint_sub!(x859, bigint_mul!(x864, x856, 64), 64), x0, 64),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x872: BytePoly_66 = bigint_nondet_quot!(ctx, x871, x0, 66);
    let x873: BytePoly_32 = bigint_nondet_rem!(ctx, x871, x0, 32);
    let x874: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x867, bigint_mul!(x869, x0, 98), 98), x856, 98),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x870,
        98
    );
    eqz(ctx, &x874, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x872, x0, 98), x873, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x864, bigint_sub!(x856, x870, 32), 64), x859, 64),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x875: BytePoly_32 = bigint_add!(bigint_sub!(x4, x873, 32), x0, 32);
    let x876: BytePoly_32 = bigint_add!(bigint_sub!(x3, x870, 32), x0, 32);
    let x877: BytePoly_32 = bigint_nondet_inv!(ctx, x876, x0, 32);
    let x878: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x875, x877, 64), x0, 32);
    let x879: BytePoly_64 = bigint_add!(bigint_sub!(bigint_mul!(x878, x876, 64), x875, 64), x0, 64);
    let x880: BytePoly_66 = bigint_nondet_quot!(ctx, x879, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x879, bigint_mul!(x880, x0, 98), 98),
        536459,
        4,
    )?;
    let x881: BytePoly_64 = bigint_mul!(x878, x878, 64);
    let x882: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x881, x870, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x883: BytePoly_66 = bigint_nondet_quot!(ctx, x882, x0, 66);
    let x884: BytePoly_32 = bigint_nondet_rem!(ctx, x882, x0, 32);
    let x885: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x878, x884, 64),
                    bigint_add!(bigint_sub!(x873, bigint_mul!(x878, x870, 64), 64), x0, 64),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x886: BytePoly_66 = bigint_nondet_quot!(ctx, x885, x0, 66);
    let x887: BytePoly_32 = bigint_nondet_rem!(ctx, x885, x0, 32);
    let x888: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x881, bigint_mul!(x883, x0, 98), 98), x870, 98),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x884,
        98
    );
    eqz(ctx, &x888, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x886, x0, 98), x887, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x878, bigint_sub!(x870, x884, 32), 64), x873, 64),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x889: BytePoly_32 = bigint_add!(bigint_sub!(x4, x887, 32), x0, 32);
    let x890: BytePoly_32 = bigint_add!(bigint_sub!(x3, x884, 32), x0, 32);
    let x891: BytePoly_32 = bigint_nondet_inv!(ctx, x890, x0, 32);
    let x892: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x889, x891, 64), x0, 32);
    let x893: BytePoly_64 = bigint_add!(bigint_sub!(bigint_mul!(x892, x890, 64), x889, 64), x0, 64);
    let x894: BytePoly_66 = bigint_nondet_quot!(ctx, x893, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x893, bigint_mul!(x894, x0, 98), 98),
        536459,
        4,
    )?;
    let x895: BytePoly_64 = bigint_mul!(x892, x892, 64);
    let x896: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x895, x884, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x897: BytePoly_66 = bigint_nondet_quot!(ctx, x896, x0, 66);
    let x898: BytePoly_32 = bigint_nondet_rem!(ctx, x896, x0, 32);
    let x899: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x892, x898, 64),
                    bigint_add!(bigint_sub!(x887, bigint_mul!(x892, x884, 64), 64), x0, 64),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x900: BytePoly_66 = bigint_nondet_quot!(ctx, x899, x0, 66);
    let x901: BytePoly_32 = bigint_nondet_rem!(ctx, x899, x0, 32);
    let x902: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x895, bigint_mul!(x897, x0, 98), 98), x884, 98),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x898,
        98
    );
    eqz(ctx, &x902, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x900, x0, 98), x901, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x892, bigint_sub!(x884, x898, 32), 64), x887, 64),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x903: BytePoly_32 = bigint_add!(bigint_sub!(x4, x901, 32), x0, 32);
    let x904: BytePoly_32 = bigint_add!(bigint_sub!(x3, x898, 32), x0, 32);
    let x905: BytePoly_32 = bigint_nondet_inv!(ctx, x904, x0, 32);
    let x906: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x903, x905, 64), x0, 32);
    let x907: BytePoly_64 = bigint_add!(bigint_sub!(bigint_mul!(x906, x904, 64), x903, 64), x0, 64);
    let x908: BytePoly_66 = bigint_nondet_quot!(ctx, x907, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x907, bigint_mul!(x908, x0, 98), 98),
        536459,
        4,
    )?;
    let x909: BytePoly_64 = bigint_mul!(x906, x906, 64);
    let x910: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x909, x898, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x911: BytePoly_66 = bigint_nondet_quot!(ctx, x910, x0, 66);
    let x912: BytePoly_32 = bigint_nondet_rem!(ctx, x910, x0, 32);
    let x913: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x906, x912, 64),
                    bigint_add!(bigint_sub!(x901, bigint_mul!(x906, x898, 64), 64), x0, 64),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x914: BytePoly_66 = bigint_nondet_quot!(ctx, x913, x0, 66);
    let x915: BytePoly_32 = bigint_nondet_rem!(ctx, x913, x0, 32);
    let x916: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x909, bigint_mul!(x911, x0, 98), 98), x898, 98),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x912,
        98
    );
    eqz(ctx, &x916, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x914, x0, 98), x915, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x906, bigint_sub!(x898, x912, 32), 64), x901, 64),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x917: BytePoly_32 = bigint_add!(bigint_sub!(x4, x915, 32), x0, 32);
    let x918: BytePoly_32 = bigint_add!(bigint_sub!(x3, x912, 32), x0, 32);
    let x919: BytePoly_32 = bigint_nondet_inv!(ctx, x918, x0, 32);
    let x920: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x917, x919, 64), x0, 32);
    let x921: BytePoly_64 = bigint_add!(bigint_sub!(bigint_mul!(x920, x918, 64), x917, 64), x0, 64);
    let x922: BytePoly_66 = bigint_nondet_quot!(ctx, x921, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x921, bigint_mul!(x922, x0, 98), 98),
        536459,
        4,
    )?;
    let x923: BytePoly_64 = bigint_mul!(x920, x920, 64);
    let x924: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x923, x912, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x925: BytePoly_66 = bigint_nondet_quot!(ctx, x924, x0, 66);
    let x926: BytePoly_32 = bigint_nondet_rem!(ctx, x924, x0, 32);
    let x927: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x920, x926, 64),
                    bigint_add!(bigint_sub!(x915, bigint_mul!(x920, x912, 64), 64), x0, 64),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x928: BytePoly_66 = bigint_nondet_quot!(ctx, x927, x0, 66);
    let x929: BytePoly_32 = bigint_nondet_rem!(ctx, x927, x0, 32);
    let x930: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x923, bigint_mul!(x925, x0, 98), 98), x912, 98),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x926,
        98
    );
    eqz(ctx, &x930, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x928, x0, 98), x929, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x920, bigint_sub!(x912, x926, 32), 64), x915, 64),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x931: BytePoly_32 = bigint_add!(bigint_sub!(x4, x929, 32), x0, 32);
    let x932: BytePoly_32 = bigint_add!(bigint_sub!(x3, x926, 32), x0, 32);
    let x933: BytePoly_32 = bigint_nondet_inv!(ctx, x932, x0, 32);
    let x934: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x931, x933, 64), x0, 32);
    let x935: BytePoly_64 = bigint_add!(bigint_sub!(bigint_mul!(x934, x932, 64), x931, 64), x0, 64);
    let x936: BytePoly_66 = bigint_nondet_quot!(ctx, x935, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x935, bigint_mul!(x936, x0, 98), 98),
        536459,
        4,
    )?;
    let x937: BytePoly_64 = bigint_mul!(x934, x934, 64);
    let x938: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x937, x926, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x939: BytePoly_66 = bigint_nondet_quot!(ctx, x938, x0, 66);
    let x940: BytePoly_32 = bigint_nondet_rem!(ctx, x938, x0, 32);
    let x941: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x934, x940, 64),
                    bigint_add!(bigint_sub!(x929, bigint_mul!(x934, x926, 64), 64), x0, 64),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x942: BytePoly_66 = bigint_nondet_quot!(ctx, x941, x0, 66);
    let x943: BytePoly_32 = bigint_nondet_rem!(ctx, x941, x0, 32);
    let x944: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x937, bigint_mul!(x939, x0, 98), 98), x926, 98),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x940,
        98
    );
    eqz(ctx, &x944, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x942, x0, 98), x943, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x934, bigint_sub!(x926, x940, 32), 64), x929, 64),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x945: BytePoly_32 = bigint_add!(bigint_sub!(x4, x943, 32), x0, 32);
    let x946: BytePoly_32 = bigint_add!(bigint_sub!(x3, x940, 32), x0, 32);
    let x947: BytePoly_32 = bigint_nondet_inv!(ctx, x946, x0, 32);
    let x948: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x945, x947, 64), x0, 32);
    let x949: BytePoly_64 = bigint_add!(bigint_sub!(bigint_mul!(x948, x946, 64), x945, 64), x0, 64);
    let x950: BytePoly_66 = bigint_nondet_quot!(ctx, x949, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x949, bigint_mul!(x950, x0, 98), 98),
        536459,
        4,
    )?;
    let x951: BytePoly_64 = bigint_mul!(x948, x948, 64);
    let x952: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x951, x940, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x953: BytePoly_66 = bigint_nondet_quot!(ctx, x952, x0, 66);
    let x954: BytePoly_32 = bigint_nondet_rem!(ctx, x952, x0, 32);
    let x955: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x948, x954, 64),
                    bigint_add!(bigint_sub!(x943, bigint_mul!(x948, x940, 64), 64), x0, 64),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x956: BytePoly_66 = bigint_nondet_quot!(ctx, x955, x0, 66);
    let x957: BytePoly_32 = bigint_nondet_rem!(ctx, x955, x0, 32);
    let x958: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x951, bigint_mul!(x953, x0, 98), 98), x940, 98),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x954,
        98
    );
    eqz(ctx, &x958, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x956, x0, 98), x957, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x948, bigint_sub!(x940, x954, 32), 64), x943, 64),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x959: BytePoly_32 = bigint_add!(bigint_sub!(x4, x957, 32), x0, 32);
    let x960: BytePoly_32 = bigint_add!(bigint_sub!(x3, x954, 32), x0, 32);
    let x961: BytePoly_32 = bigint_nondet_inv!(ctx, x960, x0, 32);
    let x962: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x959, x961, 64), x0, 32);
    let x963: BytePoly_64 = bigint_add!(bigint_sub!(bigint_mul!(x962, x960, 64), x959, 64), x0, 64);
    let x964: BytePoly_66 = bigint_nondet_quot!(ctx, x963, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x963, bigint_mul!(x964, x0, 98), 98),
        536459,
        4,
    )?;
    let x965: BytePoly_64 = bigint_mul!(x962, x962, 64);
    let x966: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x965, x954, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x967: BytePoly_66 = bigint_nondet_quot!(ctx, x966, x0, 66);
    let x968: BytePoly_32 = bigint_nondet_rem!(ctx, x966, x0, 32);
    let x969: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x962, x968, 64),
                    bigint_add!(bigint_sub!(x957, bigint_mul!(x962, x954, 64), 64), x0, 64),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x970: BytePoly_66 = bigint_nondet_quot!(ctx, x969, x0, 66);
    let x971: BytePoly_32 = bigint_nondet_rem!(ctx, x969, x0, 32);
    let x972: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x965, bigint_mul!(x967, x0, 98), 98), x954, 98),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x968,
        98
    );
    eqz(ctx, &x972, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x970, x0, 98), x971, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x962, bigint_sub!(x954, x968, 32), 64), x957, 64),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x973: BytePoly_32 = bigint_add!(bigint_sub!(x4, x971, 32), x0, 32);
    let x974: BytePoly_32 = bigint_add!(bigint_sub!(x3, x968, 32), x0, 32);
    let x975: BytePoly_32 = bigint_nondet_inv!(ctx, x974, x0, 32);
    let x976: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x973, x975, 64), x0, 32);
    let x977: BytePoly_64 = bigint_add!(bigint_sub!(bigint_mul!(x976, x974, 64), x973, 64), x0, 64);
    let x978: BytePoly_66 = bigint_nondet_quot!(ctx, x977, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x977, bigint_mul!(x978, x0, 98), 98),
        536459,
        4,
    )?;
    let x979: BytePoly_64 = bigint_mul!(x976, x976, 64);
    let x980: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x979, x968, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x981: BytePoly_66 = bigint_nondet_quot!(ctx, x980, x0, 66);
    let x982: BytePoly_32 = bigint_nondet_rem!(ctx, x980, x0, 32);
    let x983: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x976, x982, 64),
                    bigint_add!(bigint_sub!(x971, bigint_mul!(x976, x968, 64), 64), x0, 64),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x984: BytePoly_66 = bigint_nondet_quot!(ctx, x983, x0, 66);
    let x985: BytePoly_32 = bigint_nondet_rem!(ctx, x983, x0, 32);
    let x986: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x979, bigint_mul!(x981, x0, 98), 98), x968, 98),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x982,
        98
    );
    eqz(ctx, &x986, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x984, x0, 98), x985, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x976, bigint_sub!(x968, x982, 32), 64), x971, 64),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x987: BytePoly_32 = bigint_add!(bigint_sub!(x4, x985, 32), x0, 32);
    let x988: BytePoly_32 = bigint_add!(bigint_sub!(x3, x982, 32), x0, 32);
    let x989: BytePoly_32 = bigint_nondet_inv!(ctx, x988, x0, 32);
    let x990: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x987, x989, 64), x0, 32);
    let x991: BytePoly_64 = bigint_add!(bigint_sub!(bigint_mul!(x990, x988, 64), x987, 64), x0, 64);
    let x992: BytePoly_66 = bigint_nondet_quot!(ctx, x991, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x991, bigint_mul!(x992, x0, 98), 98),
        536459,
        4,
    )?;
    let x993: BytePoly_64 = bigint_mul!(x990, x990, 64);
    let x994: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x993, x982, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x995: BytePoly_66 = bigint_nondet_quot!(ctx, x994, x0, 66);
    let x996: BytePoly_32 = bigint_nondet_rem!(ctx, x994, x0, 32);
    let x997: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x990, x996, 64),
                    bigint_add!(bigint_sub!(x985, bigint_mul!(x990, x982, 64), 64), x0, 64),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x998: BytePoly_66 = bigint_nondet_quot!(ctx, x997, x0, 66);
    let x999: BytePoly_32 = bigint_nondet_rem!(ctx, x997, x0, 32);
    let x1000: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x993, bigint_mul!(x995, x0, 98), 98), x982, 98),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x996,
        98
    );
    eqz(ctx, &x1000, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x998, x0, 98), x999, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(bigint_mul!(x990, bigint_sub!(x982, x996, 32), 64), x985, 64),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x1001: BytePoly_32 = bigint_add!(bigint_sub!(x4, x999, 32), x0, 32);
    let x1002: BytePoly_32 = bigint_add!(bigint_sub!(x3, x996, 32), x0, 32);
    let x1003: BytePoly_32 = bigint_nondet_inv!(ctx, x1002, x0, 32);
    let x1004: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1001, x1003, 64), x0, 32);
    let x1005: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x1004, x1002, 64), x1001, 64),
        x0,
        64
    );
    let x1006: BytePoly_66 = bigint_nondet_quot!(ctx, x1005, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x1005, bigint_mul!(x1006, x0, 98), 98),
        536459,
        4,
    )?;
    let x1007: BytePoly_64 = bigint_mul!(x1004, x1004, 64);
    let x1008: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1007, x996, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x1009: BytePoly_66 = bigint_nondet_quot!(ctx, x1008, x0, 66);
    let x1010: BytePoly_32 = bigint_nondet_rem!(ctx, x1008, x0, 32);
    let x1011: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x1004, x1010, 64),
                    bigint_add!(bigint_sub!(x999, bigint_mul!(x1004, x996, 64), 64), x0, 64),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x1012: BytePoly_66 = bigint_nondet_quot!(ctx, x1011, x0, 66);
    let x1013: BytePoly_32 = bigint_nondet_rem!(ctx, x1011, x0, 32);
    let x1014: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(bigint_sub!(x1007, bigint_mul!(x1009, x0, 98), 98), x996, 98),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x1010,
        98
    );
    eqz(ctx, &x1014, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1012, x0, 98), x1013, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1004, bigint_sub!(x996, x1010, 32), 64),
                        x999,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x1015: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1013, 32), x0, 32);
    let x1016: BytePoly_32 = bigint_add!(bigint_sub!(x3, x1010, 32), x0, 32);
    let x1017: BytePoly_32 = bigint_nondet_inv!(ctx, x1016, x0, 32);
    let x1018: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1015, x1017, 64), x0, 32);
    let x1019: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x1018, x1016, 64), x1015, 64),
        x0,
        64
    );
    let x1020: BytePoly_66 = bigint_nondet_quot!(ctx, x1019, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x1019, bigint_mul!(x1020, x0, 98), 98),
        536459,
        4,
    )?;
    let x1021: BytePoly_64 = bigint_mul!(x1018, x1018, 64);
    let x1022: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1021, x1010, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x1023: BytePoly_66 = bigint_nondet_quot!(ctx, x1022, x0, 66);
    let x1024: BytePoly_32 = bigint_nondet_rem!(ctx, x1022, x0, 32);
    let x1025: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x1018, x1024, 64),
                    bigint_add!(
                        bigint_sub!(x1013, bigint_mul!(x1018, x1010, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x1026: BytePoly_66 = bigint_nondet_quot!(ctx, x1025, x0, 66);
    let x1027: BytePoly_32 = bigint_nondet_rem!(ctx, x1025, x0, 32);
    let x1028: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1021, bigint_mul!(x1023, x0, 98), 98),
                        x1010,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x1024,
        98
    );
    eqz(ctx, &x1028, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1026, x0, 98), x1027, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1018, bigint_sub!(x1010, x1024, 32), 64),
                        x1013,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x1029: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1027, 32), x0, 32);
    let x1030: BytePoly_32 = bigint_add!(bigint_sub!(x3, x1024, 32), x0, 32);
    let x1031: BytePoly_32 = bigint_nondet_inv!(ctx, x1030, x0, 32);
    let x1032: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1029, x1031, 64), x0, 32);
    let x1033: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x1032, x1030, 64), x1029, 64),
        x0,
        64
    );
    let x1034: BytePoly_66 = bigint_nondet_quot!(ctx, x1033, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x1033, bigint_mul!(x1034, x0, 98), 98),
        536459,
        4,
    )?;
    let x1035: BytePoly_64 = bigint_mul!(x1032, x1032, 64);
    let x1036: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1035, x1024, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x1037: BytePoly_66 = bigint_nondet_quot!(ctx, x1036, x0, 66);
    let x1038: BytePoly_32 = bigint_nondet_rem!(ctx, x1036, x0, 32);
    let x1039: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x1032, x1038, 64),
                    bigint_add!(
                        bigint_sub!(x1027, bigint_mul!(x1032, x1024, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x1040: BytePoly_66 = bigint_nondet_quot!(ctx, x1039, x0, 66);
    let x1041: BytePoly_32 = bigint_nondet_rem!(ctx, x1039, x0, 32);
    let x1042: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1035, bigint_mul!(x1037, x0, 98), 98),
                        x1024,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x1038,
        98
    );
    eqz(ctx, &x1042, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1040, x0, 98), x1041, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1032, bigint_sub!(x1024, x1038, 32), 64),
                        x1027,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x1043: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1041, 32), x0, 32);
    let x1044: BytePoly_32 = bigint_add!(bigint_sub!(x3, x1038, 32), x0, 32);
    let x1045: BytePoly_32 = bigint_nondet_inv!(ctx, x1044, x0, 32);
    let x1046: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1043, x1045, 64), x0, 32);
    let x1047: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x1046, x1044, 64), x1043, 64),
        x0,
        64
    );
    let x1048: BytePoly_66 = bigint_nondet_quot!(ctx, x1047, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x1047, bigint_mul!(x1048, x0, 98), 98),
        536459,
        4,
    )?;
    let x1049: BytePoly_64 = bigint_mul!(x1046, x1046, 64);
    let x1050: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1049, x1038, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x1051: BytePoly_66 = bigint_nondet_quot!(ctx, x1050, x0, 66);
    let x1052: BytePoly_32 = bigint_nondet_rem!(ctx, x1050, x0, 32);
    let x1053: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x1046, x1052, 64),
                    bigint_add!(
                        bigint_sub!(x1041, bigint_mul!(x1046, x1038, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x1054: BytePoly_66 = bigint_nondet_quot!(ctx, x1053, x0, 66);
    let x1055: BytePoly_32 = bigint_nondet_rem!(ctx, x1053, x0, 32);
    let x1056: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1049, bigint_mul!(x1051, x0, 98), 98),
                        x1038,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x1052,
        98
    );
    eqz(ctx, &x1056, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1054, x0, 98), x1055, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1046, bigint_sub!(x1038, x1052, 32), 64),
                        x1041,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x1057: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1055, 32), x0, 32);
    let x1058: BytePoly_32 = bigint_add!(bigint_sub!(x3, x1052, 32), x0, 32);
    let x1059: BytePoly_32 = bigint_nondet_inv!(ctx, x1058, x0, 32);
    let x1060: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1057, x1059, 64), x0, 32);
    let x1061: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x1060, x1058, 64), x1057, 64),
        x0,
        64
    );
    let x1062: BytePoly_66 = bigint_nondet_quot!(ctx, x1061, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x1061, bigint_mul!(x1062, x0, 98), 98),
        536459,
        4,
    )?;
    let x1063: BytePoly_64 = bigint_mul!(x1060, x1060, 64);
    let x1064: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1063, x1052, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x1065: BytePoly_66 = bigint_nondet_quot!(ctx, x1064, x0, 66);
    let x1066: BytePoly_32 = bigint_nondet_rem!(ctx, x1064, x0, 32);
    let x1067: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x1060, x1066, 64),
                    bigint_add!(
                        bigint_sub!(x1055, bigint_mul!(x1060, x1052, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x1068: BytePoly_66 = bigint_nondet_quot!(ctx, x1067, x0, 66);
    let x1069: BytePoly_32 = bigint_nondet_rem!(ctx, x1067, x0, 32);
    let x1070: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1063, bigint_mul!(x1065, x0, 98), 98),
                        x1052,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x1066,
        98
    );
    eqz(ctx, &x1070, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1068, x0, 98), x1069, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1060, bigint_sub!(x1052, x1066, 32), 64),
                        x1055,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x1071: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1069, 32), x0, 32);
    let x1072: BytePoly_32 = bigint_add!(bigint_sub!(x3, x1066, 32), x0, 32);
    let x1073: BytePoly_32 = bigint_nondet_inv!(ctx, x1072, x0, 32);
    let x1074: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1071, x1073, 64), x0, 32);
    let x1075: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x1074, x1072, 64), x1071, 64),
        x0,
        64
    );
    let x1076: BytePoly_66 = bigint_nondet_quot!(ctx, x1075, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x1075, bigint_mul!(x1076, x0, 98), 98),
        536459,
        4,
    )?;
    let x1077: BytePoly_64 = bigint_mul!(x1074, x1074, 64);
    let x1078: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1077, x1066, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x1079: BytePoly_66 = bigint_nondet_quot!(ctx, x1078, x0, 66);
    let x1080: BytePoly_32 = bigint_nondet_rem!(ctx, x1078, x0, 32);
    let x1081: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x1074, x1080, 64),
                    bigint_add!(
                        bigint_sub!(x1069, bigint_mul!(x1074, x1066, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x1082: BytePoly_66 = bigint_nondet_quot!(ctx, x1081, x0, 66);
    let x1083: BytePoly_32 = bigint_nondet_rem!(ctx, x1081, x0, 32);
    let x1084: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1077, bigint_mul!(x1079, x0, 98), 98),
                        x1066,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x1080,
        98
    );
    eqz(ctx, &x1084, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1082, x0, 98), x1083, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1074, bigint_sub!(x1066, x1080, 32), 64),
                        x1069,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x1085: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1083, 32), x0, 32);
    let x1086: BytePoly_32 = bigint_add!(bigint_sub!(x3, x1080, 32), x0, 32);
    let x1087: BytePoly_32 = bigint_nondet_inv!(ctx, x1086, x0, 32);
    let x1088: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1085, x1087, 64), x0, 32);
    let x1089: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x1088, x1086, 64), x1085, 64),
        x0,
        64
    );
    let x1090: BytePoly_66 = bigint_nondet_quot!(ctx, x1089, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x1089, bigint_mul!(x1090, x0, 98), 98),
        536459,
        4,
    )?;
    let x1091: BytePoly_64 = bigint_mul!(x1088, x1088, 64);
    let x1092: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1091, x1080, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x1093: BytePoly_66 = bigint_nondet_quot!(ctx, x1092, x0, 66);
    let x1094: BytePoly_32 = bigint_nondet_rem!(ctx, x1092, x0, 32);
    let x1095: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x1088, x1094, 64),
                    bigint_add!(
                        bigint_sub!(x1083, bigint_mul!(x1088, x1080, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x1096: BytePoly_66 = bigint_nondet_quot!(ctx, x1095, x0, 66);
    let x1097: BytePoly_32 = bigint_nondet_rem!(ctx, x1095, x0, 32);
    let x1098: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1091, bigint_mul!(x1093, x0, 98), 98),
                        x1080,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x1094,
        98
    );
    eqz(ctx, &x1098, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1096, x0, 98), x1097, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1088, bigint_sub!(x1080, x1094, 32), 64),
                        x1083,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x1099: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1097, 32), x0, 32);
    let x1100: BytePoly_32 = bigint_add!(bigint_sub!(x3, x1094, 32), x0, 32);
    let x1101: BytePoly_32 = bigint_nondet_inv!(ctx, x1100, x0, 32);
    let x1102: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1099, x1101, 64), x0, 32);
    let x1103: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x1102, x1100, 64), x1099, 64),
        x0,
        64
    );
    let x1104: BytePoly_66 = bigint_nondet_quot!(ctx, x1103, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x1103, bigint_mul!(x1104, x0, 98), 98),
        536459,
        4,
    )?;
    let x1105: BytePoly_64 = bigint_mul!(x1102, x1102, 64);
    let x1106: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1105, x1094, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x1107: BytePoly_66 = bigint_nondet_quot!(ctx, x1106, x0, 66);
    let x1108: BytePoly_32 = bigint_nondet_rem!(ctx, x1106, x0, 32);
    let x1109: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x1102, x1108, 64),
                    bigint_add!(
                        bigint_sub!(x1097, bigint_mul!(x1102, x1094, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x1110: BytePoly_66 = bigint_nondet_quot!(ctx, x1109, x0, 66);
    let x1111: BytePoly_32 = bigint_nondet_rem!(ctx, x1109, x0, 32);
    let x1112: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1105, bigint_mul!(x1107, x0, 98), 98),
                        x1094,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x1108,
        98
    );
    eqz(ctx, &x1112, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1110, x0, 98), x1111, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1102, bigint_sub!(x1094, x1108, 32), 64),
                        x1097,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x1113: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1111, 32), x0, 32);
    let x1114: BytePoly_32 = bigint_add!(bigint_sub!(x3, x1108, 32), x0, 32);
    let x1115: BytePoly_32 = bigint_nondet_inv!(ctx, x1114, x0, 32);
    let x1116: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1113, x1115, 64), x0, 32);
    let x1117: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x1116, x1114, 64), x1113, 64),
        x0,
        64
    );
    let x1118: BytePoly_66 = bigint_nondet_quot!(ctx, x1117, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x1117, bigint_mul!(x1118, x0, 98), 98),
        536459,
        4,
    )?;
    let x1119: BytePoly_64 = bigint_mul!(x1116, x1116, 64);
    let x1120: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1119, x1108, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x1121: BytePoly_66 = bigint_nondet_quot!(ctx, x1120, x0, 66);
    let x1122: BytePoly_32 = bigint_nondet_rem!(ctx, x1120, x0, 32);
    let x1123: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x1116, x1122, 64),
                    bigint_add!(
                        bigint_sub!(x1111, bigint_mul!(x1116, x1108, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x1124: BytePoly_66 = bigint_nondet_quot!(ctx, x1123, x0, 66);
    let x1125: BytePoly_32 = bigint_nondet_rem!(ctx, x1123, x0, 32);
    let x1126: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1119, bigint_mul!(x1121, x0, 98), 98),
                        x1108,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x1122,
        98
    );
    eqz(ctx, &x1126, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1124, x0, 98), x1125, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1116, bigint_sub!(x1108, x1122, 32), 64),
                        x1111,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x1127: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1125, 32), x0, 32);
    let x1128: BytePoly_32 = bigint_add!(bigint_sub!(x3, x1122, 32), x0, 32);
    let x1129: BytePoly_32 = bigint_nondet_inv!(ctx, x1128, x0, 32);
    let x1130: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1127, x1129, 64), x0, 32);
    let x1131: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x1130, x1128, 64), x1127, 64),
        x0,
        64
    );
    let x1132: BytePoly_66 = bigint_nondet_quot!(ctx, x1131, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x1131, bigint_mul!(x1132, x0, 98), 98),
        536459,
        4,
    )?;
    let x1133: BytePoly_64 = bigint_mul!(x1130, x1130, 64);
    let x1134: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1133, x1122, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x1135: BytePoly_66 = bigint_nondet_quot!(ctx, x1134, x0, 66);
    let x1136: BytePoly_32 = bigint_nondet_rem!(ctx, x1134, x0, 32);
    let x1137: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x1130, x1136, 64),
                    bigint_add!(
                        bigint_sub!(x1125, bigint_mul!(x1130, x1122, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x1138: BytePoly_66 = bigint_nondet_quot!(ctx, x1137, x0, 66);
    let x1139: BytePoly_32 = bigint_nondet_rem!(ctx, x1137, x0, 32);
    let x1140: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1133, bigint_mul!(x1135, x0, 98), 98),
                        x1122,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x1136,
        98
    );
    eqz(ctx, &x1140, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1138, x0, 98), x1139, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1130, bigint_sub!(x1122, x1136, 32), 64),
                        x1125,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x1141: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1139, 32), x0, 32);
    let x1142: BytePoly_32 = bigint_add!(bigint_sub!(x3, x1136, 32), x0, 32);
    let x1143: BytePoly_32 = bigint_nondet_inv!(ctx, x1142, x0, 32);
    let x1144: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1141, x1143, 64), x0, 32);
    let x1145: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x1144, x1142, 64), x1141, 64),
        x0,
        64
    );
    let x1146: BytePoly_66 = bigint_nondet_quot!(ctx, x1145, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x1145, bigint_mul!(x1146, x0, 98), 98),
        536459,
        4,
    )?;
    let x1147: BytePoly_64 = bigint_mul!(x1144, x1144, 64);
    let x1148: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1147, x1136, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x1149: BytePoly_66 = bigint_nondet_quot!(ctx, x1148, x0, 66);
    let x1150: BytePoly_32 = bigint_nondet_rem!(ctx, x1148, x0, 32);
    let x1151: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x1144, x1150, 64),
                    bigint_add!(
                        bigint_sub!(x1139, bigint_mul!(x1144, x1136, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x1152: BytePoly_66 = bigint_nondet_quot!(ctx, x1151, x0, 66);
    let x1153: BytePoly_32 = bigint_nondet_rem!(ctx, x1151, x0, 32);
    let x1154: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1147, bigint_mul!(x1149, x0, 98), 98),
                        x1136,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x1150,
        98
    );
    eqz(ctx, &x1154, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1152, x0, 98), x1153, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1144, bigint_sub!(x1136, x1150, 32), 64),
                        x1139,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x1155: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1153, 32), x0, 32);
    let x1156: BytePoly_32 = bigint_add!(bigint_sub!(x3, x1150, 32), x0, 32);
    let x1157: BytePoly_32 = bigint_nondet_inv!(ctx, x1156, x0, 32);
    let x1158: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1155, x1157, 64), x0, 32);
    let x1159: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x1158, x1156, 64), x1155, 64),
        x0,
        64
    );
    let x1160: BytePoly_66 = bigint_nondet_quot!(ctx, x1159, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x1159, bigint_mul!(x1160, x0, 98), 98),
        536459,
        4,
    )?;
    let x1161: BytePoly_64 = bigint_mul!(x1158, x1158, 64);
    let x1162: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1161, x1150, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x1163: BytePoly_66 = bigint_nondet_quot!(ctx, x1162, x0, 66);
    let x1164: BytePoly_32 = bigint_nondet_rem!(ctx, x1162, x0, 32);
    let x1165: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x1158, x1164, 64),
                    bigint_add!(
                        bigint_sub!(x1153, bigint_mul!(x1158, x1150, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x1166: BytePoly_66 = bigint_nondet_quot!(ctx, x1165, x0, 66);
    let x1167: BytePoly_32 = bigint_nondet_rem!(ctx, x1165, x0, 32);
    let x1168: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1161, bigint_mul!(x1163, x0, 98), 98),
                        x1150,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x1164,
        98
    );
    eqz(ctx, &x1168, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1166, x0, 98), x1167, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1158, bigint_sub!(x1150, x1164, 32), 64),
                        x1153,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x1169: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1167, 32), x0, 32);
    let x1170: BytePoly_32 = bigint_add!(bigint_sub!(x3, x1164, 32), x0, 32);
    let x1171: BytePoly_32 = bigint_nondet_inv!(ctx, x1170, x0, 32);
    let x1172: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1169, x1171, 64), x0, 32);
    let x1173: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x1172, x1170, 64), x1169, 64),
        x0,
        64
    );
    let x1174: BytePoly_66 = bigint_nondet_quot!(ctx, x1173, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x1173, bigint_mul!(x1174, x0, 98), 98),
        536459,
        4,
    )?;
    let x1175: BytePoly_64 = bigint_mul!(x1172, x1172, 64);
    let x1176: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1175, x1164, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x1177: BytePoly_66 = bigint_nondet_quot!(ctx, x1176, x0, 66);
    let x1178: BytePoly_32 = bigint_nondet_rem!(ctx, x1176, x0, 32);
    let x1179: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x1172, x1178, 64),
                    bigint_add!(
                        bigint_sub!(x1167, bigint_mul!(x1172, x1164, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x1180: BytePoly_66 = bigint_nondet_quot!(ctx, x1179, x0, 66);
    let x1181: BytePoly_32 = bigint_nondet_rem!(ctx, x1179, x0, 32);
    let x1182: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1175, bigint_mul!(x1177, x0, 98), 98),
                        x1164,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x1178,
        98
    );
    eqz(ctx, &x1182, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1180, x0, 98), x1181, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1172, bigint_sub!(x1164, x1178, 32), 64),
                        x1167,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x1183: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1181, 32), x0, 32);
    let x1184: BytePoly_32 = bigint_add!(bigint_sub!(x3, x1178, 32), x0, 32);
    let x1185: BytePoly_32 = bigint_nondet_inv!(ctx, x1184, x0, 32);
    let x1186: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1183, x1185, 64), x0, 32);
    let x1187: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x1186, x1184, 64), x1183, 64),
        x0,
        64
    );
    let x1188: BytePoly_66 = bigint_nondet_quot!(ctx, x1187, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x1187, bigint_mul!(x1188, x0, 98), 98),
        536459,
        4,
    )?;
    let x1189: BytePoly_64 = bigint_mul!(x1186, x1186, 64);
    let x1190: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1189, x1178, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x1191: BytePoly_66 = bigint_nondet_quot!(ctx, x1190, x0, 66);
    let x1192: BytePoly_32 = bigint_nondet_rem!(ctx, x1190, x0, 32);
    let x1193: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x1186, x1192, 64),
                    bigint_add!(
                        bigint_sub!(x1181, bigint_mul!(x1186, x1178, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x1194: BytePoly_66 = bigint_nondet_quot!(ctx, x1193, x0, 66);
    let x1195: BytePoly_32 = bigint_nondet_rem!(ctx, x1193, x0, 32);
    let x1196: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1189, bigint_mul!(x1191, x0, 98), 98),
                        x1178,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x1192,
        98
    );
    eqz(ctx, &x1196, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1194, x0, 98), x1195, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1186, bigint_sub!(x1178, x1192, 32), 64),
                        x1181,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x1197: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1195, 32), x0, 32);
    let x1198: BytePoly_32 = bigint_add!(bigint_sub!(x3, x1192, 32), x0, 32);
    let x1199: BytePoly_32 = bigint_nondet_inv!(ctx, x1198, x0, 32);
    let x1200: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1197, x1199, 64), x0, 32);
    let x1201: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x1200, x1198, 64), x1197, 64),
        x0,
        64
    );
    let x1202: BytePoly_66 = bigint_nondet_quot!(ctx, x1201, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x1201, bigint_mul!(x1202, x0, 98), 98),
        536459,
        4,
    )?;
    let x1203: BytePoly_64 = bigint_mul!(x1200, x1200, 64);
    let x1204: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1203, x1192, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x1205: BytePoly_66 = bigint_nondet_quot!(ctx, x1204, x0, 66);
    let x1206: BytePoly_32 = bigint_nondet_rem!(ctx, x1204, x0, 32);
    let x1207: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x1200, x1206, 64),
                    bigint_add!(
                        bigint_sub!(x1195, bigint_mul!(x1200, x1192, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x1208: BytePoly_66 = bigint_nondet_quot!(ctx, x1207, x0, 66);
    let x1209: BytePoly_32 = bigint_nondet_rem!(ctx, x1207, x0, 32);
    let x1210: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1203, bigint_mul!(x1205, x0, 98), 98),
                        x1192,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x1206,
        98
    );
    eqz(ctx, &x1210, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1208, x0, 98), x1209, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1200, bigint_sub!(x1192, x1206, 32), 64),
                        x1195,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x1211: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1209, 32), x0, 32);
    let x1212: BytePoly_32 = bigint_add!(bigint_sub!(x3, x1206, 32), x0, 32);
    let x1213: BytePoly_32 = bigint_nondet_inv!(ctx, x1212, x0, 32);
    let x1214: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1211, x1213, 64), x0, 32);
    let x1215: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x1214, x1212, 64), x1211, 64),
        x0,
        64
    );
    let x1216: BytePoly_66 = bigint_nondet_quot!(ctx, x1215, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x1215, bigint_mul!(x1216, x0, 98), 98),
        536459,
        4,
    )?;
    let x1217: BytePoly_64 = bigint_mul!(x1214, x1214, 64);
    let x1218: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1217, x1206, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x1219: BytePoly_66 = bigint_nondet_quot!(ctx, x1218, x0, 66);
    let x1220: BytePoly_32 = bigint_nondet_rem!(ctx, x1218, x0, 32);
    let x1221: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x1214, x1220, 64),
                    bigint_add!(
                        bigint_sub!(x1209, bigint_mul!(x1214, x1206, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x1222: BytePoly_66 = bigint_nondet_quot!(ctx, x1221, x0, 66);
    let x1223: BytePoly_32 = bigint_nondet_rem!(ctx, x1221, x0, 32);
    let x1224: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1217, bigint_mul!(x1219, x0, 98), 98),
                        x1206,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x1220,
        98
    );
    eqz(ctx, &x1224, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1222, x0, 98), x1223, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1214, bigint_sub!(x1206, x1220, 32), 64),
                        x1209,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x1225: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1223, 32), x0, 32);
    let x1226: BytePoly_32 = bigint_add!(bigint_sub!(x3, x1220, 32), x0, 32);
    let x1227: BytePoly_32 = bigint_nondet_inv!(ctx, x1226, x0, 32);
    let x1228: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1225, x1227, 64), x0, 32);
    let x1229: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x1228, x1226, 64), x1225, 64),
        x0,
        64
    );
    let x1230: BytePoly_66 = bigint_nondet_quot!(ctx, x1229, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x1229, bigint_mul!(x1230, x0, 98), 98),
        536459,
        4,
    )?;
    let x1231: BytePoly_64 = bigint_mul!(x1228, x1228, 64);
    let x1232: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1231, x1220, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x1233: BytePoly_66 = bigint_nondet_quot!(ctx, x1232, x0, 66);
    let x1234: BytePoly_32 = bigint_nondet_rem!(ctx, x1232, x0, 32);
    let x1235: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x1228, x1234, 64),
                    bigint_add!(
                        bigint_sub!(x1223, bigint_mul!(x1228, x1220, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x1236: BytePoly_66 = bigint_nondet_quot!(ctx, x1235, x0, 66);
    let x1237: BytePoly_32 = bigint_nondet_rem!(ctx, x1235, x0, 32);
    let x1238: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1231, bigint_mul!(x1233, x0, 98), 98),
                        x1220,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x1234,
        98
    );
    eqz(ctx, &x1238, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1236, x0, 98), x1237, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1228, bigint_sub!(x1220, x1234, 32), 64),
                        x1223,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x1239: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1237, 32), x0, 32);
    let x1240: BytePoly_32 = bigint_add!(bigint_sub!(x3, x1234, 32), x0, 32);
    let x1241: BytePoly_32 = bigint_nondet_inv!(ctx, x1240, x0, 32);
    let x1242: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1239, x1241, 64), x0, 32);
    let x1243: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x1242, x1240, 64), x1239, 64),
        x0,
        64
    );
    let x1244: BytePoly_66 = bigint_nondet_quot!(ctx, x1243, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x1243, bigint_mul!(x1244, x0, 98), 98),
        536459,
        4,
    )?;
    let x1245: BytePoly_64 = bigint_mul!(x1242, x1242, 64);
    let x1246: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1245, x1234, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x1247: BytePoly_66 = bigint_nondet_quot!(ctx, x1246, x0, 66);
    let x1248: BytePoly_32 = bigint_nondet_rem!(ctx, x1246, x0, 32);
    let x1249: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x1242, x1248, 64),
                    bigint_add!(
                        bigint_sub!(x1237, bigint_mul!(x1242, x1234, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x1250: BytePoly_66 = bigint_nondet_quot!(ctx, x1249, x0, 66);
    let x1251: BytePoly_32 = bigint_nondet_rem!(ctx, x1249, x0, 32);
    let x1252: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1245, bigint_mul!(x1247, x0, 98), 98),
                        x1234,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x1248,
        98
    );
    eqz(ctx, &x1252, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1250, x0, 98), x1251, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1242, bigint_sub!(x1234, x1248, 32), 64),
                        x1237,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x1253: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1251, 32), x0, 32);
    let x1254: BytePoly_32 = bigint_add!(bigint_sub!(x3, x1248, 32), x0, 32);
    let x1255: BytePoly_32 = bigint_nondet_inv!(ctx, x1254, x0, 32);
    let x1256: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1253, x1255, 64), x0, 32);
    let x1257: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x1256, x1254, 64), x1253, 64),
        x0,
        64
    );
    let x1258: BytePoly_66 = bigint_nondet_quot!(ctx, x1257, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x1257, bigint_mul!(x1258, x0, 98), 98),
        536459,
        4,
    )?;
    let x1259: BytePoly_64 = bigint_mul!(x1256, x1256, 64);
    let x1260: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1259, x1248, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x1261: BytePoly_66 = bigint_nondet_quot!(ctx, x1260, x0, 66);
    let x1262: BytePoly_32 = bigint_nondet_rem!(ctx, x1260, x0, 32);
    let x1263: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x1256, x1262, 64),
                    bigint_add!(
                        bigint_sub!(x1251, bigint_mul!(x1256, x1248, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x1264: BytePoly_66 = bigint_nondet_quot!(ctx, x1263, x0, 66);
    let x1265: BytePoly_32 = bigint_nondet_rem!(ctx, x1263, x0, 32);
    let x1266: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1259, bigint_mul!(x1261, x0, 98), 98),
                        x1248,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x1262,
        98
    );
    eqz(ctx, &x1266, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1264, x0, 98), x1265, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1256, bigint_sub!(x1248, x1262, 32), 64),
                        x1251,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x1267: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1265, 32), x0, 32);
    let x1268: BytePoly_32 = bigint_add!(bigint_sub!(x3, x1262, 32), x0, 32);
    let x1269: BytePoly_32 = bigint_nondet_inv!(ctx, x1268, x0, 32);
    let x1270: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1267, x1269, 64), x0, 32);
    let x1271: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x1270, x1268, 64), x1267, 64),
        x0,
        64
    );
    let x1272: BytePoly_66 = bigint_nondet_quot!(ctx, x1271, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x1271, bigint_mul!(x1272, x0, 98), 98),
        536459,
        4,
    )?;
    let x1273: BytePoly_64 = bigint_mul!(x1270, x1270, 64);
    let x1274: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1273, x1262, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x1275: BytePoly_66 = bigint_nondet_quot!(ctx, x1274, x0, 66);
    let x1276: BytePoly_32 = bigint_nondet_rem!(ctx, x1274, x0, 32);
    let x1277: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x1270, x1276, 64),
                    bigint_add!(
                        bigint_sub!(x1265, bigint_mul!(x1270, x1262, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x1278: BytePoly_66 = bigint_nondet_quot!(ctx, x1277, x0, 66);
    let x1279: BytePoly_32 = bigint_nondet_rem!(ctx, x1277, x0, 32);
    let x1280: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1273, bigint_mul!(x1275, x0, 98), 98),
                        x1262,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x1276,
        98
    );
    eqz(ctx, &x1280, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1278, x0, 98), x1279, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1270, bigint_sub!(x1262, x1276, 32), 64),
                        x1265,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x1281: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1279, 32), x0, 32);
    let x1282: BytePoly_32 = bigint_add!(bigint_sub!(x3, x1276, 32), x0, 32);
    let x1283: BytePoly_32 = bigint_nondet_inv!(ctx, x1282, x0, 32);
    let x1284: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1281, x1283, 64), x0, 32);
    let x1285: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x1284, x1282, 64), x1281, 64),
        x0,
        64
    );
    let x1286: BytePoly_66 = bigint_nondet_quot!(ctx, x1285, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x1285, bigint_mul!(x1286, x0, 98), 98),
        536459,
        4,
    )?;
    let x1287: BytePoly_64 = bigint_mul!(x1284, x1284, 64);
    let x1288: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1287, x1276, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x1289: BytePoly_66 = bigint_nondet_quot!(ctx, x1288, x0, 66);
    let x1290: BytePoly_32 = bigint_nondet_rem!(ctx, x1288, x0, 32);
    let x1291: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x1284, x1290, 64),
                    bigint_add!(
                        bigint_sub!(x1279, bigint_mul!(x1284, x1276, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x1292: BytePoly_66 = bigint_nondet_quot!(ctx, x1291, x0, 66);
    let x1293: BytePoly_32 = bigint_nondet_rem!(ctx, x1291, x0, 32);
    let x1294: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1287, bigint_mul!(x1289, x0, 98), 98),
                        x1276,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x1290,
        98
    );
    eqz(ctx, &x1294, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1292, x0, 98), x1293, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1284, bigint_sub!(x1276, x1290, 32), 64),
                        x1279,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x1295: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1293, 32), x0, 32);
    let x1296: BytePoly_32 = bigint_add!(bigint_sub!(x3, x1290, 32), x0, 32);
    let x1297: BytePoly_32 = bigint_nondet_inv!(ctx, x1296, x0, 32);
    let x1298: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1295, x1297, 64), x0, 32);
    let x1299: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x1298, x1296, 64), x1295, 64),
        x0,
        64
    );
    let x1300: BytePoly_66 = bigint_nondet_quot!(ctx, x1299, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x1299, bigint_mul!(x1300, x0, 98), 98),
        536459,
        4,
    )?;
    let x1301: BytePoly_64 = bigint_mul!(x1298, x1298, 64);
    let x1302: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1301, x1290, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x1303: BytePoly_66 = bigint_nondet_quot!(ctx, x1302, x0, 66);
    let x1304: BytePoly_32 = bigint_nondet_rem!(ctx, x1302, x0, 32);
    let x1305: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x1298, x1304, 64),
                    bigint_add!(
                        bigint_sub!(x1293, bigint_mul!(x1298, x1290, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x1306: BytePoly_66 = bigint_nondet_quot!(ctx, x1305, x0, 66);
    let x1307: BytePoly_32 = bigint_nondet_rem!(ctx, x1305, x0, 32);
    let x1308: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1301, bigint_mul!(x1303, x0, 98), 98),
                        x1290,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x1304,
        98
    );
    eqz(ctx, &x1308, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1306, x0, 98), x1307, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1298, bigint_sub!(x1290, x1304, 32), 64),
                        x1293,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x1309: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1307, 32), x0, 32);
    let x1310: BytePoly_32 = bigint_add!(bigint_sub!(x3, x1304, 32), x0, 32);
    let x1311: BytePoly_32 = bigint_nondet_inv!(ctx, x1310, x0, 32);
    let x1312: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1309, x1311, 64), x0, 32);
    let x1313: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x1312, x1310, 64), x1309, 64),
        x0,
        64
    );
    let x1314: BytePoly_66 = bigint_nondet_quot!(ctx, x1313, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x1313, bigint_mul!(x1314, x0, 98), 98),
        536459,
        4,
    )?;
    let x1315: BytePoly_64 = bigint_mul!(x1312, x1312, 64);
    let x1316: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1315, x1304, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x1317: BytePoly_66 = bigint_nondet_quot!(ctx, x1316, x0, 66);
    let x1318: BytePoly_32 = bigint_nondet_rem!(ctx, x1316, x0, 32);
    let x1319: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x1312, x1318, 64),
                    bigint_add!(
                        bigint_sub!(x1307, bigint_mul!(x1312, x1304, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x1320: BytePoly_66 = bigint_nondet_quot!(ctx, x1319, x0, 66);
    let x1321: BytePoly_32 = bigint_nondet_rem!(ctx, x1319, x0, 32);
    let x1322: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1315, bigint_mul!(x1317, x0, 98), 98),
                        x1304,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x1318,
        98
    );
    eqz(ctx, &x1322, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1320, x0, 98), x1321, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1312, bigint_sub!(x1304, x1318, 32), 64),
                        x1307,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x1323: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1321, 32), x0, 32);
    let x1324: BytePoly_32 = bigint_add!(bigint_sub!(x3, x1318, 32), x0, 32);
    let x1325: BytePoly_32 = bigint_nondet_inv!(ctx, x1324, x0, 32);
    let x1326: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1323, x1325, 64), x0, 32);
    let x1327: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x1326, x1324, 64), x1323, 64),
        x0,
        64
    );
    let x1328: BytePoly_66 = bigint_nondet_quot!(ctx, x1327, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x1327, bigint_mul!(x1328, x0, 98), 98),
        536459,
        4,
    )?;
    let x1329: BytePoly_64 = bigint_mul!(x1326, x1326, 64);
    let x1330: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1329, x1318, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x1331: BytePoly_66 = bigint_nondet_quot!(ctx, x1330, x0, 66);
    let x1332: BytePoly_32 = bigint_nondet_rem!(ctx, x1330, x0, 32);
    let x1333: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x1326, x1332, 64),
                    bigint_add!(
                        bigint_sub!(x1321, bigint_mul!(x1326, x1318, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x1334: BytePoly_66 = bigint_nondet_quot!(ctx, x1333, x0, 66);
    let x1335: BytePoly_32 = bigint_nondet_rem!(ctx, x1333, x0, 32);
    let x1336: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1329, bigint_mul!(x1331, x0, 98), 98),
                        x1318,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x1332,
        98
    );
    eqz(ctx, &x1336, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1334, x0, 98), x1335, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1326, bigint_sub!(x1318, x1332, 32), 64),
                        x1321,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x1337: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1335, 32), x0, 32);
    let x1338: BytePoly_32 = bigint_add!(bigint_sub!(x3, x1332, 32), x0, 32);
    let x1339: BytePoly_32 = bigint_nondet_inv!(ctx, x1338, x0, 32);
    let x1340: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1337, x1339, 64), x0, 32);
    let x1341: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x1340, x1338, 64), x1337, 64),
        x0,
        64
    );
    let x1342: BytePoly_66 = bigint_nondet_quot!(ctx, x1341, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x1341, bigint_mul!(x1342, x0, 98), 98),
        536459,
        4,
    )?;
    let x1343: BytePoly_64 = bigint_mul!(x1340, x1340, 64);
    let x1344: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1343, x1332, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x1345: BytePoly_66 = bigint_nondet_quot!(ctx, x1344, x0, 66);
    let x1346: BytePoly_32 = bigint_nondet_rem!(ctx, x1344, x0, 32);
    let x1347: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x1340, x1346, 64),
                    bigint_add!(
                        bigint_sub!(x1335, bigint_mul!(x1340, x1332, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x1348: BytePoly_66 = bigint_nondet_quot!(ctx, x1347, x0, 66);
    let x1349: BytePoly_32 = bigint_nondet_rem!(ctx, x1347, x0, 32);
    let x1350: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1343, bigint_mul!(x1345, x0, 98), 98),
                        x1332,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x1346,
        98
    );
    eqz(ctx, &x1350, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1348, x0, 98), x1349, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1340, bigint_sub!(x1332, x1346, 32), 64),
                        x1335,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x1351: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1349, 32), x0, 32);
    let x1352: BytePoly_32 = bigint_add!(bigint_sub!(x3, x1346, 32), x0, 32);
    let x1353: BytePoly_32 = bigint_nondet_inv!(ctx, x1352, x0, 32);
    let x1354: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1351, x1353, 64), x0, 32);
    let x1355: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x1354, x1352, 64), x1351, 64),
        x0,
        64
    );
    let x1356: BytePoly_66 = bigint_nondet_quot!(ctx, x1355, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x1355, bigint_mul!(x1356, x0, 98), 98),
        536459,
        4,
    )?;
    let x1357: BytePoly_64 = bigint_mul!(x1354, x1354, 64);
    let x1358: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1357, x1346, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x1359: BytePoly_66 = bigint_nondet_quot!(ctx, x1358, x0, 66);
    let x1360: BytePoly_32 = bigint_nondet_rem!(ctx, x1358, x0, 32);
    let x1361: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x1354, x1360, 64),
                    bigint_add!(
                        bigint_sub!(x1349, bigint_mul!(x1354, x1346, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x1362: BytePoly_66 = bigint_nondet_quot!(ctx, x1361, x0, 66);
    let x1363: BytePoly_32 = bigint_nondet_rem!(ctx, x1361, x0, 32);
    let x1364: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1357, bigint_mul!(x1359, x0, 98), 98),
                        x1346,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x1360,
        98
    );
    eqz(ctx, &x1364, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1362, x0, 98), x1363, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1354, bigint_sub!(x1346, x1360, 32), 64),
                        x1349,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x1365: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1363, 32), x0, 32);
    let x1366: BytePoly_32 = bigint_add!(bigint_sub!(x3, x1360, 32), x0, 32);
    let x1367: BytePoly_32 = bigint_nondet_inv!(ctx, x1366, x0, 32);
    let x1368: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1365, x1367, 64), x0, 32);
    let x1369: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x1368, x1366, 64), x1365, 64),
        x0,
        64
    );
    let x1370: BytePoly_66 = bigint_nondet_quot!(ctx, x1369, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x1369, bigint_mul!(x1370, x0, 98), 98),
        536459,
        4,
    )?;
    let x1371: BytePoly_64 = bigint_mul!(x1368, x1368, 64);
    let x1372: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1371, x1360, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x1373: BytePoly_66 = bigint_nondet_quot!(ctx, x1372, x0, 66);
    let x1374: BytePoly_32 = bigint_nondet_rem!(ctx, x1372, x0, 32);
    let x1375: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x1368, x1374, 64),
                    bigint_add!(
                        bigint_sub!(x1363, bigint_mul!(x1368, x1360, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x1376: BytePoly_66 = bigint_nondet_quot!(ctx, x1375, x0, 66);
    let x1377: BytePoly_32 = bigint_nondet_rem!(ctx, x1375, x0, 32);
    let x1378: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1371, bigint_mul!(x1373, x0, 98), 98),
                        x1360,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x1374,
        98
    );
    eqz(ctx, &x1378, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1376, x0, 98), x1377, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1368, bigint_sub!(x1360, x1374, 32), 64),
                        x1363,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x1379: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1377, 32), x0, 32);
    let x1380: BytePoly_32 = bigint_add!(bigint_sub!(x3, x1374, 32), x0, 32);
    let x1381: BytePoly_32 = bigint_nondet_inv!(ctx, x1380, x0, 32);
    let x1382: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1379, x1381, 64), x0, 32);
    let x1383: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x1382, x1380, 64), x1379, 64),
        x0,
        64
    );
    let x1384: BytePoly_66 = bigint_nondet_quot!(ctx, x1383, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x1383, bigint_mul!(x1384, x0, 98), 98),
        536459,
        4,
    )?;
    let x1385: BytePoly_64 = bigint_mul!(x1382, x1382, 64);
    let x1386: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1385, x1374, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x1387: BytePoly_66 = bigint_nondet_quot!(ctx, x1386, x0, 66);
    let x1388: BytePoly_32 = bigint_nondet_rem!(ctx, x1386, x0, 32);
    let x1389: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x1382, x1388, 64),
                    bigint_add!(
                        bigint_sub!(x1377, bigint_mul!(x1382, x1374, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x1390: BytePoly_66 = bigint_nondet_quot!(ctx, x1389, x0, 66);
    let x1391: BytePoly_32 = bigint_nondet_rem!(ctx, x1389, x0, 32);
    let x1392: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1385, bigint_mul!(x1387, x0, 98), 98),
                        x1374,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x1388,
        98
    );
    eqz(ctx, &x1392, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1390, x0, 98), x1391, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1382, bigint_sub!(x1374, x1388, 32), 64),
                        x1377,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x1393: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1391, 32), x0, 32);
    let x1394: BytePoly_32 = bigint_add!(bigint_sub!(x3, x1388, 32), x0, 32);
    let x1395: BytePoly_32 = bigint_nondet_inv!(ctx, x1394, x0, 32);
    let x1396: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1393, x1395, 64), x0, 32);
    let x1397: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x1396, x1394, 64), x1393, 64),
        x0,
        64
    );
    let x1398: BytePoly_66 = bigint_nondet_quot!(ctx, x1397, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x1397, bigint_mul!(x1398, x0, 98), 98),
        536459,
        4,
    )?;
    let x1399: BytePoly_64 = bigint_mul!(x1396, x1396, 64);
    let x1400: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1399, x1388, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x1401: BytePoly_66 = bigint_nondet_quot!(ctx, x1400, x0, 66);
    let x1402: BytePoly_32 = bigint_nondet_rem!(ctx, x1400, x0, 32);
    let x1403: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x1396, x1402, 64),
                    bigint_add!(
                        bigint_sub!(x1391, bigint_mul!(x1396, x1388, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x1404: BytePoly_66 = bigint_nondet_quot!(ctx, x1403, x0, 66);
    let x1405: BytePoly_32 = bigint_nondet_rem!(ctx, x1403, x0, 32);
    let x1406: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1399, bigint_mul!(x1401, x0, 98), 98),
                        x1388,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x1402,
        98
    );
    eqz(ctx, &x1406, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1404, x0, 98), x1405, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1396, bigint_sub!(x1388, x1402, 32), 64),
                        x1391,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x1407: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1405, 32), x0, 32);
    let x1408: BytePoly_32 = bigint_add!(bigint_sub!(x3, x1402, 32), x0, 32);
    let x1409: BytePoly_32 = bigint_nondet_inv!(ctx, x1408, x0, 32);
    let x1410: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1407, x1409, 64), x0, 32);
    let x1411: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x1410, x1408, 64), x1407, 64),
        x0,
        64
    );
    let x1412: BytePoly_66 = bigint_nondet_quot!(ctx, x1411, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x1411, bigint_mul!(x1412, x0, 98), 98),
        536459,
        4,
    )?;
    let x1413: BytePoly_64 = bigint_mul!(x1410, x1410, 64);
    let x1414: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1413, x1402, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x1415: BytePoly_66 = bigint_nondet_quot!(ctx, x1414, x0, 66);
    let x1416: BytePoly_32 = bigint_nondet_rem!(ctx, x1414, x0, 32);
    let x1417: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x1410, x1416, 64),
                    bigint_add!(
                        bigint_sub!(x1405, bigint_mul!(x1410, x1402, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x1418: BytePoly_66 = bigint_nondet_quot!(ctx, x1417, x0, 66);
    let x1419: BytePoly_32 = bigint_nondet_rem!(ctx, x1417, x0, 32);
    let x1420: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1413, bigint_mul!(x1415, x0, 98), 98),
                        x1402,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x1416,
        98
    );
    eqz(ctx, &x1420, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1418, x0, 98), x1419, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1410, bigint_sub!(x1402, x1416, 32), 64),
                        x1405,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x1421: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1419, 32), x0, 32);
    let x1422: BytePoly_32 = bigint_add!(bigint_sub!(x3, x1416, 32), x0, 32);
    let x1423: BytePoly_32 = bigint_nondet_inv!(ctx, x1422, x0, 32);
    let x1424: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1421, x1423, 64), x0, 32);
    let x1425: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x1424, x1422, 64), x1421, 64),
        x0,
        64
    );
    let x1426: BytePoly_66 = bigint_nondet_quot!(ctx, x1425, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x1425, bigint_mul!(x1426, x0, 98), 98),
        536459,
        4,
    )?;
    let x1427: BytePoly_64 = bigint_mul!(x1424, x1424, 64);
    let x1428: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1427, x1416, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x1429: BytePoly_66 = bigint_nondet_quot!(ctx, x1428, x0, 66);
    let x1430: BytePoly_32 = bigint_nondet_rem!(ctx, x1428, x0, 32);
    let x1431: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x1424, x1430, 64),
                    bigint_add!(
                        bigint_sub!(x1419, bigint_mul!(x1424, x1416, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x1432: BytePoly_66 = bigint_nondet_quot!(ctx, x1431, x0, 66);
    let x1433: BytePoly_32 = bigint_nondet_rem!(ctx, x1431, x0, 32);
    let x1434: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1427, bigint_mul!(x1429, x0, 98), 98),
                        x1416,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x1430,
        98
    );
    eqz(ctx, &x1434, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1432, x0, 98), x1433, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1424, bigint_sub!(x1416, x1430, 32), 64),
                        x1419,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x1435: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1433, 32), x0, 32);
    let x1436: BytePoly_32 = bigint_add!(bigint_sub!(x3, x1430, 32), x0, 32);
    let x1437: BytePoly_32 = bigint_nondet_inv!(ctx, x1436, x0, 32);
    let x1438: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1435, x1437, 64), x0, 32);
    let x1439: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x1438, x1436, 64), x1435, 64),
        x0,
        64
    );
    let x1440: BytePoly_66 = bigint_nondet_quot!(ctx, x1439, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x1439, bigint_mul!(x1440, x0, 98), 98),
        536459,
        4,
    )?;
    let x1441: BytePoly_64 = bigint_mul!(x1438, x1438, 64);
    let x1442: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1441, x1430, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x1443: BytePoly_66 = bigint_nondet_quot!(ctx, x1442, x0, 66);
    let x1444: BytePoly_32 = bigint_nondet_rem!(ctx, x1442, x0, 32);
    let x1445: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x1438, x1444, 64),
                    bigint_add!(
                        bigint_sub!(x1433, bigint_mul!(x1438, x1430, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x1446: BytePoly_66 = bigint_nondet_quot!(ctx, x1445, x0, 66);
    let x1447: BytePoly_32 = bigint_nondet_rem!(ctx, x1445, x0, 32);
    let x1448: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1441, bigint_mul!(x1443, x0, 98), 98),
                        x1430,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x1444,
        98
    );
    eqz(ctx, &x1448, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1446, x0, 98), x1447, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1438, bigint_sub!(x1430, x1444, 32), 64),
                        x1433,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x1449: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1447, 32), x0, 32);
    let x1450: BytePoly_32 = bigint_add!(bigint_sub!(x3, x1444, 32), x0, 32);
    let x1451: BytePoly_32 = bigint_nondet_inv!(ctx, x1450, x0, 32);
    let x1452: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1449, x1451, 64), x0, 32);
    let x1453: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x1452, x1450, 64), x1449, 64),
        x0,
        64
    );
    let x1454: BytePoly_66 = bigint_nondet_quot!(ctx, x1453, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x1453, bigint_mul!(x1454, x0, 98), 98),
        536459,
        4,
    )?;
    let x1455: BytePoly_64 = bigint_mul!(x1452, x1452, 64);
    let x1456: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1455, x1444, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x1457: BytePoly_66 = bigint_nondet_quot!(ctx, x1456, x0, 66);
    let x1458: BytePoly_32 = bigint_nondet_rem!(ctx, x1456, x0, 32);
    let x1459: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x1452, x1458, 64),
                    bigint_add!(
                        bigint_sub!(x1447, bigint_mul!(x1452, x1444, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x1460: BytePoly_66 = bigint_nondet_quot!(ctx, x1459, x0, 66);
    let x1461: BytePoly_32 = bigint_nondet_rem!(ctx, x1459, x0, 32);
    let x1462: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1455, bigint_mul!(x1457, x0, 98), 98),
                        x1444,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x1458,
        98
    );
    eqz(ctx, &x1462, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1460, x0, 98), x1461, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1452, bigint_sub!(x1444, x1458, 32), 64),
                        x1447,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x1463: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1461, 32), x0, 32);
    let x1464: BytePoly_32 = bigint_add!(bigint_sub!(x3, x1458, 32), x0, 32);
    let x1465: BytePoly_32 = bigint_nondet_inv!(ctx, x1464, x0, 32);
    let x1466: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1463, x1465, 64), x0, 32);
    let x1467: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x1466, x1464, 64), x1463, 64),
        x0,
        64
    );
    let x1468: BytePoly_66 = bigint_nondet_quot!(ctx, x1467, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x1467, bigint_mul!(x1468, x0, 98), 98),
        536459,
        4,
    )?;
    let x1469: BytePoly_64 = bigint_mul!(x1466, x1466, 64);
    let x1470: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1469, x1458, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x1471: BytePoly_66 = bigint_nondet_quot!(ctx, x1470, x0, 66);
    let x1472: BytePoly_32 = bigint_nondet_rem!(ctx, x1470, x0, 32);
    let x1473: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x1466, x1472, 64),
                    bigint_add!(
                        bigint_sub!(x1461, bigint_mul!(x1466, x1458, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x1474: BytePoly_66 = bigint_nondet_quot!(ctx, x1473, x0, 66);
    let x1475: BytePoly_32 = bigint_nondet_rem!(ctx, x1473, x0, 32);
    let x1476: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1469, bigint_mul!(x1471, x0, 98), 98),
                        x1458,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x1472,
        98
    );
    eqz(ctx, &x1476, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1474, x0, 98), x1475, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1466, bigint_sub!(x1458, x1472, 32), 64),
                        x1461,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x1477: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1475, 32), x0, 32);
    let x1478: BytePoly_32 = bigint_add!(bigint_sub!(x3, x1472, 32), x0, 32);
    let x1479: BytePoly_32 = bigint_nondet_inv!(ctx, x1478, x0, 32);
    let x1480: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1477, x1479, 64), x0, 32);
    let x1481: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x1480, x1478, 64), x1477, 64),
        x0,
        64
    );
    let x1482: BytePoly_66 = bigint_nondet_quot!(ctx, x1481, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x1481, bigint_mul!(x1482, x0, 98), 98),
        536459,
        4,
    )?;
    let x1483: BytePoly_64 = bigint_mul!(x1480, x1480, 64);
    let x1484: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1483, x1472, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x1485: BytePoly_66 = bigint_nondet_quot!(ctx, x1484, x0, 66);
    let x1486: BytePoly_32 = bigint_nondet_rem!(ctx, x1484, x0, 32);
    let x1487: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x1480, x1486, 64),
                    bigint_add!(
                        bigint_sub!(x1475, bigint_mul!(x1480, x1472, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x1488: BytePoly_66 = bigint_nondet_quot!(ctx, x1487, x0, 66);
    let x1489: BytePoly_32 = bigint_nondet_rem!(ctx, x1487, x0, 32);
    let x1490: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1483, bigint_mul!(x1485, x0, 98), 98),
                        x1472,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x1486,
        98
    );
    eqz(ctx, &x1490, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1488, x0, 98), x1489, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1480, bigint_sub!(x1472, x1486, 32), 64),
                        x1475,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x1491: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1489, 32), x0, 32);
    let x1492: BytePoly_32 = bigint_add!(bigint_sub!(x3, x1486, 32), x0, 32);
    let x1493: BytePoly_32 = bigint_nondet_inv!(ctx, x1492, x0, 32);
    let x1494: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1491, x1493, 64), x0, 32);
    let x1495: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x1494, x1492, 64), x1491, 64),
        x0,
        64
    );
    let x1496: BytePoly_66 = bigint_nondet_quot!(ctx, x1495, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x1495, bigint_mul!(x1496, x0, 98), 98),
        536459,
        4,
    )?;
    let x1497: BytePoly_64 = bigint_mul!(x1494, x1494, 64);
    let x1498: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1497, x1486, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x1499: BytePoly_66 = bigint_nondet_quot!(ctx, x1498, x0, 66);
    let x1500: BytePoly_32 = bigint_nondet_rem!(ctx, x1498, x0, 32);
    let x1501: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x1494, x1500, 64),
                    bigint_add!(
                        bigint_sub!(x1489, bigint_mul!(x1494, x1486, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x1502: BytePoly_66 = bigint_nondet_quot!(ctx, x1501, x0, 66);
    let x1503: BytePoly_32 = bigint_nondet_rem!(ctx, x1501, x0, 32);
    let x1504: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1497, bigint_mul!(x1499, x0, 98), 98),
                        x1486,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x1500,
        98
    );
    eqz(ctx, &x1504, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1502, x0, 98), x1503, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1494, bigint_sub!(x1486, x1500, 32), 64),
                        x1489,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x1505: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1503, 32), x0, 32);
    let x1506: BytePoly_32 = bigint_add!(bigint_sub!(x3, x1500, 32), x0, 32);
    let x1507: BytePoly_32 = bigint_nondet_inv!(ctx, x1506, x0, 32);
    let x1508: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1505, x1507, 64), x0, 32);
    let x1509: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x1508, x1506, 64), x1505, 64),
        x0,
        64
    );
    let x1510: BytePoly_66 = bigint_nondet_quot!(ctx, x1509, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x1509, bigint_mul!(x1510, x0, 98), 98),
        536459,
        4,
    )?;
    let x1511: BytePoly_64 = bigint_mul!(x1508, x1508, 64);
    let x1512: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1511, x1500, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x1513: BytePoly_66 = bigint_nondet_quot!(ctx, x1512, x0, 66);
    let x1514: BytePoly_32 = bigint_nondet_rem!(ctx, x1512, x0, 32);
    let x1515: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x1508, x1514, 64),
                    bigint_add!(
                        bigint_sub!(x1503, bigint_mul!(x1508, x1500, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x1516: BytePoly_66 = bigint_nondet_quot!(ctx, x1515, x0, 66);
    let x1517: BytePoly_32 = bigint_nondet_rem!(ctx, x1515, x0, 32);
    let x1518: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1511, bigint_mul!(x1513, x0, 98), 98),
                        x1500,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x1514,
        98
    );
    eqz(ctx, &x1518, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1516, x0, 98), x1517, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1508, bigint_sub!(x1500, x1514, 32), 64),
                        x1503,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x1519: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1517, 32), x0, 32);
    let x1520: BytePoly_32 = bigint_add!(bigint_sub!(x3, x1514, 32), x0, 32);
    let x1521: BytePoly_32 = bigint_nondet_inv!(ctx, x1520, x0, 32);
    let x1522: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1519, x1521, 64), x0, 32);
    let x1523: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x1522, x1520, 64), x1519, 64),
        x0,
        64
    );
    let x1524: BytePoly_66 = bigint_nondet_quot!(ctx, x1523, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x1523, bigint_mul!(x1524, x0, 98), 98),
        536459,
        4,
    )?;
    let x1525: BytePoly_64 = bigint_mul!(x1522, x1522, 64);
    let x1526: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1525, x1514, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x1527: BytePoly_66 = bigint_nondet_quot!(ctx, x1526, x0, 66);
    let x1528: BytePoly_32 = bigint_nondet_rem!(ctx, x1526, x0, 32);
    let x1529: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x1522, x1528, 64),
                    bigint_add!(
                        bigint_sub!(x1517, bigint_mul!(x1522, x1514, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x1530: BytePoly_66 = bigint_nondet_quot!(ctx, x1529, x0, 66);
    let x1531: BytePoly_32 = bigint_nondet_rem!(ctx, x1529, x0, 32);
    let x1532: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1525, bigint_mul!(x1527, x0, 98), 98),
                        x1514,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x1528,
        98
    );
    eqz(ctx, &x1532, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1530, x0, 98), x1531, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1522, bigint_sub!(x1514, x1528, 32), 64),
                        x1517,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x1533: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1531, 32), x0, 32);
    let x1534: BytePoly_32 = bigint_add!(bigint_sub!(x3, x1528, 32), x0, 32);
    let x1535: BytePoly_32 = bigint_nondet_inv!(ctx, x1534, x0, 32);
    let x1536: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1533, x1535, 64), x0, 32);
    let x1537: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x1536, x1534, 64), x1533, 64),
        x0,
        64
    );
    let x1538: BytePoly_66 = bigint_nondet_quot!(ctx, x1537, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x1537, bigint_mul!(x1538, x0, 98), 98),
        536459,
        4,
    )?;
    let x1539: BytePoly_64 = bigint_mul!(x1536, x1536, 64);
    let x1540: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1539, x1528, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x1541: BytePoly_66 = bigint_nondet_quot!(ctx, x1540, x0, 66);
    let x1542: BytePoly_32 = bigint_nondet_rem!(ctx, x1540, x0, 32);
    let x1543: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x1536, x1542, 64),
                    bigint_add!(
                        bigint_sub!(x1531, bigint_mul!(x1536, x1528, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x1544: BytePoly_66 = bigint_nondet_quot!(ctx, x1543, x0, 66);
    let x1545: BytePoly_32 = bigint_nondet_rem!(ctx, x1543, x0, 32);
    let x1546: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1539, bigint_mul!(x1541, x0, 98), 98),
                        x1528,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x1542,
        98
    );
    eqz(ctx, &x1546, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1544, x0, 98), x1545, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1536, bigint_sub!(x1528, x1542, 32), 64),
                        x1531,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x1547: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1545, 32), x0, 32);
    let x1548: BytePoly_32 = bigint_add!(bigint_sub!(x3, x1542, 32), x0, 32);
    let x1549: BytePoly_32 = bigint_nondet_inv!(ctx, x1548, x0, 32);
    let x1550: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1547, x1549, 64), x0, 32);
    let x1551: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x1550, x1548, 64), x1547, 64),
        x0,
        64
    );
    let x1552: BytePoly_66 = bigint_nondet_quot!(ctx, x1551, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x1551, bigint_mul!(x1552, x0, 98), 98),
        536459,
        4,
    )?;
    let x1553: BytePoly_64 = bigint_mul!(x1550, x1550, 64);
    let x1554: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1553, x1542, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x1555: BytePoly_66 = bigint_nondet_quot!(ctx, x1554, x0, 66);
    let x1556: BytePoly_32 = bigint_nondet_rem!(ctx, x1554, x0, 32);
    let x1557: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x1550, x1556, 64),
                    bigint_add!(
                        bigint_sub!(x1545, bigint_mul!(x1550, x1542, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x1558: BytePoly_66 = bigint_nondet_quot!(ctx, x1557, x0, 66);
    let x1559: BytePoly_32 = bigint_nondet_rem!(ctx, x1557, x0, 32);
    let x1560: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1553, bigint_mul!(x1555, x0, 98), 98),
                        x1542,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x1556,
        98
    );
    eqz(ctx, &x1560, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1558, x0, 98), x1559, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1550, bigint_sub!(x1542, x1556, 32), 64),
                        x1545,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x1561: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1559, 32), x0, 32);
    let x1562: BytePoly_32 = bigint_add!(bigint_sub!(x3, x1556, 32), x0, 32);
    let x1563: BytePoly_32 = bigint_nondet_inv!(ctx, x1562, x0, 32);
    let x1564: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1561, x1563, 64), x0, 32);
    let x1565: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x1564, x1562, 64), x1561, 64),
        x0,
        64
    );
    let x1566: BytePoly_66 = bigint_nondet_quot!(ctx, x1565, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x1565, bigint_mul!(x1566, x0, 98), 98),
        536459,
        4,
    )?;
    let x1567: BytePoly_64 = bigint_mul!(x1564, x1564, 64);
    let x1568: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1567, x1556, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x1569: BytePoly_66 = bigint_nondet_quot!(ctx, x1568, x0, 66);
    let x1570: BytePoly_32 = bigint_nondet_rem!(ctx, x1568, x0, 32);
    let x1571: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x1564, x1570, 64),
                    bigint_add!(
                        bigint_sub!(x1559, bigint_mul!(x1564, x1556, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x1572: BytePoly_66 = bigint_nondet_quot!(ctx, x1571, x0, 66);
    let x1573: BytePoly_32 = bigint_nondet_rem!(ctx, x1571, x0, 32);
    let x1574: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1567, bigint_mul!(x1569, x0, 98), 98),
                        x1556,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x1570,
        98
    );
    eqz(ctx, &x1574, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1572, x0, 98), x1573, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1564, bigint_sub!(x1556, x1570, 32), 64),
                        x1559,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x1575: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1573, 32), x0, 32);
    let x1576: BytePoly_32 = bigint_add!(bigint_sub!(x3, x1570, 32), x0, 32);
    let x1577: BytePoly_32 = bigint_nondet_inv!(ctx, x1576, x0, 32);
    let x1578: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1575, x1577, 64), x0, 32);
    let x1579: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x1578, x1576, 64), x1575, 64),
        x0,
        64
    );
    let x1580: BytePoly_66 = bigint_nondet_quot!(ctx, x1579, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x1579, bigint_mul!(x1580, x0, 98), 98),
        536459,
        4,
    )?;
    let x1581: BytePoly_64 = bigint_mul!(x1578, x1578, 64);
    let x1582: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1581, x1570, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x1583: BytePoly_66 = bigint_nondet_quot!(ctx, x1582, x0, 66);
    let x1584: BytePoly_32 = bigint_nondet_rem!(ctx, x1582, x0, 32);
    let x1585: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x1578, x1584, 64),
                    bigint_add!(
                        bigint_sub!(x1573, bigint_mul!(x1578, x1570, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x1586: BytePoly_66 = bigint_nondet_quot!(ctx, x1585, x0, 66);
    let x1587: BytePoly_32 = bigint_nondet_rem!(ctx, x1585, x0, 32);
    let x1588: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1581, bigint_mul!(x1583, x0, 98), 98),
                        x1570,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x1584,
        98
    );
    eqz(ctx, &x1588, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1586, x0, 98), x1587, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1578, bigint_sub!(x1570, x1584, 32), 64),
                        x1573,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x1589: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1587, 32), x0, 32);
    let x1590: BytePoly_32 = bigint_add!(bigint_sub!(x3, x1584, 32), x0, 32);
    let x1591: BytePoly_32 = bigint_nondet_inv!(ctx, x1590, x0, 32);
    let x1592: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1589, x1591, 64), x0, 32);
    let x1593: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x1592, x1590, 64), x1589, 64),
        x0,
        64
    );
    let x1594: BytePoly_66 = bigint_nondet_quot!(ctx, x1593, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x1593, bigint_mul!(x1594, x0, 98), 98),
        536459,
        4,
    )?;
    let x1595: BytePoly_64 = bigint_mul!(x1592, x1592, 64);
    let x1596: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1595, x1584, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x1597: BytePoly_66 = bigint_nondet_quot!(ctx, x1596, x0, 66);
    let x1598: BytePoly_32 = bigint_nondet_rem!(ctx, x1596, x0, 32);
    let x1599: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x1592, x1598, 64),
                    bigint_add!(
                        bigint_sub!(x1587, bigint_mul!(x1592, x1584, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x1600: BytePoly_66 = bigint_nondet_quot!(ctx, x1599, x0, 66);
    let x1601: BytePoly_32 = bigint_nondet_rem!(ctx, x1599, x0, 32);
    let x1602: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1595, bigint_mul!(x1597, x0, 98), 98),
                        x1584,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x1598,
        98
    );
    eqz(ctx, &x1602, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1600, x0, 98), x1601, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1592, bigint_sub!(x1584, x1598, 32), 64),
                        x1587,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x1603: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1601, 32), x0, 32);
    let x1604: BytePoly_32 = bigint_add!(bigint_sub!(x3, x1598, 32), x0, 32);
    let x1605: BytePoly_32 = bigint_nondet_inv!(ctx, x1604, x0, 32);
    let x1606: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1603, x1605, 64), x0, 32);
    let x1607: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x1606, x1604, 64), x1603, 64),
        x0,
        64
    );
    let x1608: BytePoly_66 = bigint_nondet_quot!(ctx, x1607, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x1607, bigint_mul!(x1608, x0, 98), 98),
        536459,
        4,
    )?;
    let x1609: BytePoly_64 = bigint_mul!(x1606, x1606, 64);
    let x1610: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1609, x1598, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x1611: BytePoly_66 = bigint_nondet_quot!(ctx, x1610, x0, 66);
    let x1612: BytePoly_32 = bigint_nondet_rem!(ctx, x1610, x0, 32);
    let x1613: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x1606, x1612, 64),
                    bigint_add!(
                        bigint_sub!(x1601, bigint_mul!(x1606, x1598, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x1614: BytePoly_66 = bigint_nondet_quot!(ctx, x1613, x0, 66);
    let x1615: BytePoly_32 = bigint_nondet_rem!(ctx, x1613, x0, 32);
    let x1616: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1609, bigint_mul!(x1611, x0, 98), 98),
                        x1598,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x1612,
        98
    );
    eqz(ctx, &x1616, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1614, x0, 98), x1615, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1606, bigint_sub!(x1598, x1612, 32), 64),
                        x1601,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x1617: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1615, 32), x0, 32);
    let x1618: BytePoly_32 = bigint_add!(bigint_sub!(x3, x1612, 32), x0, 32);
    let x1619: BytePoly_32 = bigint_nondet_inv!(ctx, x1618, x0, 32);
    let x1620: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1617, x1619, 64), x0, 32);
    let x1621: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x1620, x1618, 64), x1617, 64),
        x0,
        64
    );
    let x1622: BytePoly_66 = bigint_nondet_quot!(ctx, x1621, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x1621, bigint_mul!(x1622, x0, 98), 98),
        536459,
        4,
    )?;
    let x1623: BytePoly_64 = bigint_mul!(x1620, x1620, 64);
    let x1624: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1623, x1612, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x1625: BytePoly_66 = bigint_nondet_quot!(ctx, x1624, x0, 66);
    let x1626: BytePoly_32 = bigint_nondet_rem!(ctx, x1624, x0, 32);
    let x1627: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x1620, x1626, 64),
                    bigint_add!(
                        bigint_sub!(x1615, bigint_mul!(x1620, x1612, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x1628: BytePoly_66 = bigint_nondet_quot!(ctx, x1627, x0, 66);
    let x1629: BytePoly_32 = bigint_nondet_rem!(ctx, x1627, x0, 32);
    let x1630: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1623, bigint_mul!(x1625, x0, 98), 98),
                        x1612,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x1626,
        98
    );
    eqz(ctx, &x1630, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1628, x0, 98), x1629, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1620, bigint_sub!(x1612, x1626, 32), 64),
                        x1615,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x1631: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1629, 32), x0, 32);
    let x1632: BytePoly_32 = bigint_add!(bigint_sub!(x3, x1626, 32), x0, 32);
    let x1633: BytePoly_32 = bigint_nondet_inv!(ctx, x1632, x0, 32);
    let x1634: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1631, x1633, 64), x0, 32);
    let x1635: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x1634, x1632, 64), x1631, 64),
        x0,
        64
    );
    let x1636: BytePoly_66 = bigint_nondet_quot!(ctx, x1635, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x1635, bigint_mul!(x1636, x0, 98), 98),
        536459,
        4,
    )?;
    let x1637: BytePoly_64 = bigint_mul!(x1634, x1634, 64);
    let x1638: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1637, x1626, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x1639: BytePoly_66 = bigint_nondet_quot!(ctx, x1638, x0, 66);
    let x1640: BytePoly_32 = bigint_nondet_rem!(ctx, x1638, x0, 32);
    let x1641: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x1634, x1640, 64),
                    bigint_add!(
                        bigint_sub!(x1629, bigint_mul!(x1634, x1626, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x1642: BytePoly_66 = bigint_nondet_quot!(ctx, x1641, x0, 66);
    let x1643: BytePoly_32 = bigint_nondet_rem!(ctx, x1641, x0, 32);
    let x1644: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1637, bigint_mul!(x1639, x0, 98), 98),
                        x1626,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x1640,
        98
    );
    eqz(ctx, &x1644, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1642, x0, 98), x1643, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1634, bigint_sub!(x1626, x1640, 32), 64),
                        x1629,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x1645: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1643, 32), x0, 32);
    let x1646: BytePoly_32 = bigint_add!(bigint_sub!(x3, x1640, 32), x0, 32);
    let x1647: BytePoly_32 = bigint_nondet_inv!(ctx, x1646, x0, 32);
    let x1648: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1645, x1647, 64), x0, 32);
    let x1649: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x1648, x1646, 64), x1645, 64),
        x0,
        64
    );
    let x1650: BytePoly_66 = bigint_nondet_quot!(ctx, x1649, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x1649, bigint_mul!(x1650, x0, 98), 98),
        536459,
        4,
    )?;
    let x1651: BytePoly_64 = bigint_mul!(x1648, x1648, 64);
    let x1652: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1651, x1640, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x1653: BytePoly_66 = bigint_nondet_quot!(ctx, x1652, x0, 66);
    let x1654: BytePoly_32 = bigint_nondet_rem!(ctx, x1652, x0, 32);
    let x1655: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x1648, x1654, 64),
                    bigint_add!(
                        bigint_sub!(x1643, bigint_mul!(x1648, x1640, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x1656: BytePoly_66 = bigint_nondet_quot!(ctx, x1655, x0, 66);
    let x1657: BytePoly_32 = bigint_nondet_rem!(ctx, x1655, x0, 32);
    let x1658: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1651, bigint_mul!(x1653, x0, 98), 98),
                        x1640,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x1654,
        98
    );
    eqz(ctx, &x1658, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1656, x0, 98), x1657, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1648, bigint_sub!(x1640, x1654, 32), 64),
                        x1643,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x1659: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1657, 32), x0, 32);
    let x1660: BytePoly_32 = bigint_add!(bigint_sub!(x3, x1654, 32), x0, 32);
    let x1661: BytePoly_32 = bigint_nondet_inv!(ctx, x1660, x0, 32);
    let x1662: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1659, x1661, 64), x0, 32);
    let x1663: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x1662, x1660, 64), x1659, 64),
        x0,
        64
    );
    let x1664: BytePoly_66 = bigint_nondet_quot!(ctx, x1663, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x1663, bigint_mul!(x1664, x0, 98), 98),
        536459,
        4,
    )?;
    let x1665: BytePoly_64 = bigint_mul!(x1662, x1662, 64);
    let x1666: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1665, x1654, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x1667: BytePoly_66 = bigint_nondet_quot!(ctx, x1666, x0, 66);
    let x1668: BytePoly_32 = bigint_nondet_rem!(ctx, x1666, x0, 32);
    let x1669: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x1662, x1668, 64),
                    bigint_add!(
                        bigint_sub!(x1657, bigint_mul!(x1662, x1654, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x1670: BytePoly_66 = bigint_nondet_quot!(ctx, x1669, x0, 66);
    let x1671: BytePoly_32 = bigint_nondet_rem!(ctx, x1669, x0, 32);
    let x1672: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1665, bigint_mul!(x1667, x0, 98), 98),
                        x1654,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x1668,
        98
    );
    eqz(ctx, &x1672, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1670, x0, 98), x1671, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1662, bigint_sub!(x1654, x1668, 32), 64),
                        x1657,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x1673: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1671, 32), x0, 32);
    let x1674: BytePoly_32 = bigint_add!(bigint_sub!(x3, x1668, 32), x0, 32);
    let x1675: BytePoly_32 = bigint_nondet_inv!(ctx, x1674, x0, 32);
    let x1676: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1673, x1675, 64), x0, 32);
    let x1677: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x1676, x1674, 64), x1673, 64),
        x0,
        64
    );
    let x1678: BytePoly_66 = bigint_nondet_quot!(ctx, x1677, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x1677, bigint_mul!(x1678, x0, 98), 98),
        536459,
        4,
    )?;
    let x1679: BytePoly_64 = bigint_mul!(x1676, x1676, 64);
    let x1680: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1679, x1668, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x1681: BytePoly_66 = bigint_nondet_quot!(ctx, x1680, x0, 66);
    let x1682: BytePoly_32 = bigint_nondet_rem!(ctx, x1680, x0, 32);
    let x1683: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x1676, x1682, 64),
                    bigint_add!(
                        bigint_sub!(x1671, bigint_mul!(x1676, x1668, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x1684: BytePoly_66 = bigint_nondet_quot!(ctx, x1683, x0, 66);
    let x1685: BytePoly_32 = bigint_nondet_rem!(ctx, x1683, x0, 32);
    let x1686: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1679, bigint_mul!(x1681, x0, 98), 98),
                        x1668,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x1682,
        98
    );
    eqz(ctx, &x1686, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1684, x0, 98), x1685, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1676, bigint_sub!(x1668, x1682, 32), 64),
                        x1671,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x1687: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1685, 32), x0, 32);
    let x1688: BytePoly_32 = bigint_add!(bigint_sub!(x3, x1682, 32), x0, 32);
    let x1689: BytePoly_32 = bigint_nondet_inv!(ctx, x1688, x0, 32);
    let x1690: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1687, x1689, 64), x0, 32);
    let x1691: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x1690, x1688, 64), x1687, 64),
        x0,
        64
    );
    let x1692: BytePoly_66 = bigint_nondet_quot!(ctx, x1691, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x1691, bigint_mul!(x1692, x0, 98), 98),
        536459,
        4,
    )?;
    let x1693: BytePoly_64 = bigint_mul!(x1690, x1690, 64);
    let x1694: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1693, x1682, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x1695: BytePoly_66 = bigint_nondet_quot!(ctx, x1694, x0, 66);
    let x1696: BytePoly_32 = bigint_nondet_rem!(ctx, x1694, x0, 32);
    let x1697: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x1690, x1696, 64),
                    bigint_add!(
                        bigint_sub!(x1685, bigint_mul!(x1690, x1682, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x1698: BytePoly_66 = bigint_nondet_quot!(ctx, x1697, x0, 66);
    let x1699: BytePoly_32 = bigint_nondet_rem!(ctx, x1697, x0, 32);
    let x1700: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1693, bigint_mul!(x1695, x0, 98), 98),
                        x1682,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x1696,
        98
    );
    eqz(ctx, &x1700, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1698, x0, 98), x1699, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1690, bigint_sub!(x1682, x1696, 32), 64),
                        x1685,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x1701: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1699, 32), x0, 32);
    let x1702: BytePoly_32 = bigint_add!(bigint_sub!(x3, x1696, 32), x0, 32);
    let x1703: BytePoly_32 = bigint_nondet_inv!(ctx, x1702, x0, 32);
    let x1704: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1701, x1703, 64), x0, 32);
    let x1705: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x1704, x1702, 64), x1701, 64),
        x0,
        64
    );
    let x1706: BytePoly_66 = bigint_nondet_quot!(ctx, x1705, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x1705, bigint_mul!(x1706, x0, 98), 98),
        536459,
        4,
    )?;
    let x1707: BytePoly_64 = bigint_mul!(x1704, x1704, 64);
    let x1708: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1707, x1696, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x1709: BytePoly_66 = bigint_nondet_quot!(ctx, x1708, x0, 66);
    let x1710: BytePoly_32 = bigint_nondet_rem!(ctx, x1708, x0, 32);
    let x1711: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x1704, x1710, 64),
                    bigint_add!(
                        bigint_sub!(x1699, bigint_mul!(x1704, x1696, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x1712: BytePoly_66 = bigint_nondet_quot!(ctx, x1711, x0, 66);
    let x1713: BytePoly_32 = bigint_nondet_rem!(ctx, x1711, x0, 32);
    let x1714: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1707, bigint_mul!(x1709, x0, 98), 98),
                        x1696,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x1710,
        98
    );
    eqz(ctx, &x1714, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1712, x0, 98), x1713, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1704, bigint_sub!(x1696, x1710, 32), 64),
                        x1699,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x1715: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1713, 32), x0, 32);
    let x1716: BytePoly_32 = bigint_add!(bigint_sub!(x3, x1710, 32), x0, 32);
    let x1717: BytePoly_32 = bigint_nondet_inv!(ctx, x1716, x0, 32);
    let x1718: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1715, x1717, 64), x0, 32);
    let x1719: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x1718, x1716, 64), x1715, 64),
        x0,
        64
    );
    let x1720: BytePoly_66 = bigint_nondet_quot!(ctx, x1719, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x1719, bigint_mul!(x1720, x0, 98), 98),
        536459,
        4,
    )?;
    let x1721: BytePoly_64 = bigint_mul!(x1718, x1718, 64);
    let x1722: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1721, x1710, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x1723: BytePoly_66 = bigint_nondet_quot!(ctx, x1722, x0, 66);
    let x1724: BytePoly_32 = bigint_nondet_rem!(ctx, x1722, x0, 32);
    let x1725: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x1718, x1724, 64),
                    bigint_add!(
                        bigint_sub!(x1713, bigint_mul!(x1718, x1710, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x1726: BytePoly_66 = bigint_nondet_quot!(ctx, x1725, x0, 66);
    let x1727: BytePoly_32 = bigint_nondet_rem!(ctx, x1725, x0, 32);
    let x1728: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1721, bigint_mul!(x1723, x0, 98), 98),
                        x1710,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x1724,
        98
    );
    eqz(ctx, &x1728, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1726, x0, 98), x1727, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1718, bigint_sub!(x1710, x1724, 32), 64),
                        x1713,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x1729: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1727, 32), x0, 32);
    let x1730: BytePoly_32 = bigint_add!(bigint_sub!(x3, x1724, 32), x0, 32);
    let x1731: BytePoly_32 = bigint_nondet_inv!(ctx, x1730, x0, 32);
    let x1732: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1729, x1731, 64), x0, 32);
    let x1733: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x1732, x1730, 64), x1729, 64),
        x0,
        64
    );
    let x1734: BytePoly_66 = bigint_nondet_quot!(ctx, x1733, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x1733, bigint_mul!(x1734, x0, 98), 98),
        536459,
        4,
    )?;
    let x1735: BytePoly_64 = bigint_mul!(x1732, x1732, 64);
    let x1736: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1735, x1724, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x1737: BytePoly_66 = bigint_nondet_quot!(ctx, x1736, x0, 66);
    let x1738: BytePoly_32 = bigint_nondet_rem!(ctx, x1736, x0, 32);
    let x1739: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x1732, x1738, 64),
                    bigint_add!(
                        bigint_sub!(x1727, bigint_mul!(x1732, x1724, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x1740: BytePoly_66 = bigint_nondet_quot!(ctx, x1739, x0, 66);
    let x1741: BytePoly_32 = bigint_nondet_rem!(ctx, x1739, x0, 32);
    let x1742: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1735, bigint_mul!(x1737, x0, 98), 98),
                        x1724,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x1738,
        98
    );
    eqz(ctx, &x1742, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1740, x0, 98), x1741, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1732, bigint_sub!(x1724, x1738, 32), 64),
                        x1727,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x1743: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1741, 32), x0, 32);
    let x1744: BytePoly_32 = bigint_add!(bigint_sub!(x3, x1738, 32), x0, 32);
    let x1745: BytePoly_32 = bigint_nondet_inv!(ctx, x1744, x0, 32);
    let x1746: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1743, x1745, 64), x0, 32);
    let x1747: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x1746, x1744, 64), x1743, 64),
        x0,
        64
    );
    let x1748: BytePoly_66 = bigint_nondet_quot!(ctx, x1747, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x1747, bigint_mul!(x1748, x0, 98), 98),
        536459,
        4,
    )?;
    let x1749: BytePoly_64 = bigint_mul!(x1746, x1746, 64);
    let x1750: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1749, x1738, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x1751: BytePoly_66 = bigint_nondet_quot!(ctx, x1750, x0, 66);
    let x1752: BytePoly_32 = bigint_nondet_rem!(ctx, x1750, x0, 32);
    let x1753: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x1746, x1752, 64),
                    bigint_add!(
                        bigint_sub!(x1741, bigint_mul!(x1746, x1738, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x1754: BytePoly_66 = bigint_nondet_quot!(ctx, x1753, x0, 66);
    let x1755: BytePoly_32 = bigint_nondet_rem!(ctx, x1753, x0, 32);
    let x1756: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1749, bigint_mul!(x1751, x0, 98), 98),
                        x1738,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x1752,
        98
    );
    eqz(ctx, &x1756, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1754, x0, 98), x1755, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1746, bigint_sub!(x1738, x1752, 32), 64),
                        x1741,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x1757: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1755, 32), x0, 32);
    let x1758: BytePoly_32 = bigint_add!(bigint_sub!(x3, x1752, 32), x0, 32);
    let x1759: BytePoly_32 = bigint_nondet_inv!(ctx, x1758, x0, 32);
    let x1760: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1757, x1759, 64), x0, 32);
    let x1761: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x1760, x1758, 64), x1757, 64),
        x0,
        64
    );
    let x1762: BytePoly_66 = bigint_nondet_quot!(ctx, x1761, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x1761, bigint_mul!(x1762, x0, 98), 98),
        536459,
        4,
    )?;
    let x1763: BytePoly_64 = bigint_mul!(x1760, x1760, 64);
    let x1764: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1763, x1752, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x1765: BytePoly_66 = bigint_nondet_quot!(ctx, x1764, x0, 66);
    let x1766: BytePoly_32 = bigint_nondet_rem!(ctx, x1764, x0, 32);
    let x1767: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x1760, x1766, 64),
                    bigint_add!(
                        bigint_sub!(x1755, bigint_mul!(x1760, x1752, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x1768: BytePoly_66 = bigint_nondet_quot!(ctx, x1767, x0, 66);
    let x1769: BytePoly_32 = bigint_nondet_rem!(ctx, x1767, x0, 32);
    let x1770: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1763, bigint_mul!(x1765, x0, 98), 98),
                        x1752,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x1766,
        98
    );
    eqz(ctx, &x1770, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1768, x0, 98), x1769, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1760, bigint_sub!(x1752, x1766, 32), 64),
                        x1755,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x1771: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1769, 32), x0, 32);
    let x1772: BytePoly_32 = bigint_add!(bigint_sub!(x3, x1766, 32), x0, 32);
    let x1773: BytePoly_32 = bigint_nondet_inv!(ctx, x1772, x0, 32);
    let x1774: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1771, x1773, 64), x0, 32);
    let x1775: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x1774, x1772, 64), x1771, 64),
        x0,
        64
    );
    let x1776: BytePoly_66 = bigint_nondet_quot!(ctx, x1775, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x1775, bigint_mul!(x1776, x0, 98), 98),
        536459,
        4,
    )?;
    let x1777: BytePoly_64 = bigint_mul!(x1774, x1774, 64);
    let x1778: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1777, x1766, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x1779: BytePoly_66 = bigint_nondet_quot!(ctx, x1778, x0, 66);
    let x1780: BytePoly_32 = bigint_nondet_rem!(ctx, x1778, x0, 32);
    let x1781: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x1774, x1780, 64),
                    bigint_add!(
                        bigint_sub!(x1769, bigint_mul!(x1774, x1766, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x1782: BytePoly_66 = bigint_nondet_quot!(ctx, x1781, x0, 66);
    let x1783: BytePoly_32 = bigint_nondet_rem!(ctx, x1781, x0, 32);
    let x1784: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1777, bigint_mul!(x1779, x0, 98), 98),
                        x1766,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x1780,
        98
    );
    eqz(ctx, &x1784, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1782, x0, 98), x1783, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1774, bigint_sub!(x1766, x1780, 32), 64),
                        x1769,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x1785: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1783, 32), x0, 32);
    let x1786: BytePoly_32 = bigint_add!(bigint_sub!(x3, x1780, 32), x0, 32);
    let x1787: BytePoly_32 = bigint_nondet_inv!(ctx, x1786, x0, 32);
    let x1788: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1785, x1787, 64), x0, 32);
    let x1789: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x1788, x1786, 64), x1785, 64),
        x0,
        64
    );
    let x1790: BytePoly_66 = bigint_nondet_quot!(ctx, x1789, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x1789, bigint_mul!(x1790, x0, 98), 98),
        536459,
        4,
    )?;
    let x1791: BytePoly_64 = bigint_mul!(x1788, x1788, 64);
    let x1792: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1791, x1780, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x1793: BytePoly_66 = bigint_nondet_quot!(ctx, x1792, x0, 66);
    let x1794: BytePoly_32 = bigint_nondet_rem!(ctx, x1792, x0, 32);
    let x1795: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x1788, x1794, 64),
                    bigint_add!(
                        bigint_sub!(x1783, bigint_mul!(x1788, x1780, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x1796: BytePoly_66 = bigint_nondet_quot!(ctx, x1795, x0, 66);
    let x1797: BytePoly_32 = bigint_nondet_rem!(ctx, x1795, x0, 32);
    let x1798: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1791, bigint_mul!(x1793, x0, 98), 98),
                        x1780,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x1794,
        98
    );
    eqz(ctx, &x1798, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1796, x0, 98), x1797, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1788, bigint_sub!(x1780, x1794, 32), 64),
                        x1783,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x1799: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1797, 32), x0, 32);
    let x1800: BytePoly_32 = bigint_add!(bigint_sub!(x3, x1794, 32), x0, 32);
    let x1801: BytePoly_32 = bigint_nondet_inv!(ctx, x1800, x0, 32);
    let x1802: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1799, x1801, 64), x0, 32);
    let x1803: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x1802, x1800, 64), x1799, 64),
        x0,
        64
    );
    let x1804: BytePoly_66 = bigint_nondet_quot!(ctx, x1803, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x1803, bigint_mul!(x1804, x0, 98), 98),
        536459,
        4,
    )?;
    let x1805: BytePoly_64 = bigint_mul!(x1802, x1802, 64);
    let x1806: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1805, x1794, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x1807: BytePoly_66 = bigint_nondet_quot!(ctx, x1806, x0, 66);
    let x1808: BytePoly_32 = bigint_nondet_rem!(ctx, x1806, x0, 32);
    let x1809: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x1802, x1808, 64),
                    bigint_add!(
                        bigint_sub!(x1797, bigint_mul!(x1802, x1794, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x1810: BytePoly_66 = bigint_nondet_quot!(ctx, x1809, x0, 66);
    let x1811: BytePoly_32 = bigint_nondet_rem!(ctx, x1809, x0, 32);
    let x1812: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1805, bigint_mul!(x1807, x0, 98), 98),
                        x1794,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x1808,
        98
    );
    eqz(ctx, &x1812, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1810, x0, 98), x1811, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1802, bigint_sub!(x1794, x1808, 32), 64),
                        x1797,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x1813: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1811, 32), x0, 32);
    let x1814: BytePoly_32 = bigint_add!(bigint_sub!(x3, x1808, 32), x0, 32);
    let x1815: BytePoly_32 = bigint_nondet_inv!(ctx, x1814, x0, 32);
    let x1816: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1813, x1815, 64), x0, 32);
    let x1817: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x1816, x1814, 64), x1813, 64),
        x0,
        64
    );
    let x1818: BytePoly_66 = bigint_nondet_quot!(ctx, x1817, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x1817, bigint_mul!(x1818, x0, 98), 98),
        536459,
        4,
    )?;
    let x1819: BytePoly_64 = bigint_mul!(x1816, x1816, 64);
    let x1820: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1819, x1808, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x1821: BytePoly_66 = bigint_nondet_quot!(ctx, x1820, x0, 66);
    let x1822: BytePoly_32 = bigint_nondet_rem!(ctx, x1820, x0, 32);
    let x1823: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x1816, x1822, 64),
                    bigint_add!(
                        bigint_sub!(x1811, bigint_mul!(x1816, x1808, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x1824: BytePoly_66 = bigint_nondet_quot!(ctx, x1823, x0, 66);
    let x1825: BytePoly_32 = bigint_nondet_rem!(ctx, x1823, x0, 32);
    let x1826: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1819, bigint_mul!(x1821, x0, 98), 98),
                        x1808,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x1822,
        98
    );
    eqz(ctx, &x1826, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1824, x0, 98), x1825, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1816, bigint_sub!(x1808, x1822, 32), 64),
                        x1811,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x1827: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1825, 32), x0, 32);
    let x1828: BytePoly_32 = bigint_add!(bigint_sub!(x3, x1822, 32), x0, 32);
    let x1829: BytePoly_32 = bigint_nondet_inv!(ctx, x1828, x0, 32);
    let x1830: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1827, x1829, 64), x0, 32);
    let x1831: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x1830, x1828, 64), x1827, 64),
        x0,
        64
    );
    let x1832: BytePoly_66 = bigint_nondet_quot!(ctx, x1831, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x1831, bigint_mul!(x1832, x0, 98), 98),
        536459,
        4,
    )?;
    let x1833: BytePoly_64 = bigint_mul!(x1830, x1830, 64);
    let x1834: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1833, x1822, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x1835: BytePoly_66 = bigint_nondet_quot!(ctx, x1834, x0, 66);
    let x1836: BytePoly_32 = bigint_nondet_rem!(ctx, x1834, x0, 32);
    let x1837: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x1830, x1836, 64),
                    bigint_add!(
                        bigint_sub!(x1825, bigint_mul!(x1830, x1822, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x1838: BytePoly_66 = bigint_nondet_quot!(ctx, x1837, x0, 66);
    let x1839: BytePoly_32 = bigint_nondet_rem!(ctx, x1837, x0, 32);
    let x1840: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1833, bigint_mul!(x1835, x0, 98), 98),
                        x1822,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x1836,
        98
    );
    eqz(ctx, &x1840, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1838, x0, 98), x1839, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1830, bigint_sub!(x1822, x1836, 32), 64),
                        x1825,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x1841: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1839, 32), x0, 32);
    let x1842: BytePoly_32 = bigint_add!(bigint_sub!(x3, x1836, 32), x0, 32);
    let x1843: BytePoly_32 = bigint_nondet_inv!(ctx, x1842, x0, 32);
    let x1844: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1841, x1843, 64), x0, 32);
    let x1845: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x1844, x1842, 64), x1841, 64),
        x0,
        64
    );
    let x1846: BytePoly_66 = bigint_nondet_quot!(ctx, x1845, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x1845, bigint_mul!(x1846, x0, 98), 98),
        536459,
        4,
    )?;
    let x1847: BytePoly_64 = bigint_mul!(x1844, x1844, 64);
    let x1848: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1847, x1836, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x1849: BytePoly_66 = bigint_nondet_quot!(ctx, x1848, x0, 66);
    let x1850: BytePoly_32 = bigint_nondet_rem!(ctx, x1848, x0, 32);
    let x1851: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x1844, x1850, 64),
                    bigint_add!(
                        bigint_sub!(x1839, bigint_mul!(x1844, x1836, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x1852: BytePoly_66 = bigint_nondet_quot!(ctx, x1851, x0, 66);
    let x1853: BytePoly_32 = bigint_nondet_rem!(ctx, x1851, x0, 32);
    let x1854: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1847, bigint_mul!(x1849, x0, 98), 98),
                        x1836,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x1850,
        98
    );
    eqz(ctx, &x1854, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1852, x0, 98), x1853, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1844, bigint_sub!(x1836, x1850, 32), 64),
                        x1839,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x1855: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1853, 32), x0, 32);
    let x1856: BytePoly_32 = bigint_add!(bigint_sub!(x3, x1850, 32), x0, 32);
    let x1857: BytePoly_32 = bigint_nondet_inv!(ctx, x1856, x0, 32);
    let x1858: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1855, x1857, 64), x0, 32);
    let x1859: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x1858, x1856, 64), x1855, 64),
        x0,
        64
    );
    let x1860: BytePoly_66 = bigint_nondet_quot!(ctx, x1859, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x1859, bigint_mul!(x1860, x0, 98), 98),
        536459,
        4,
    )?;
    let x1861: BytePoly_64 = bigint_mul!(x1858, x1858, 64);
    let x1862: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1861, x1850, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x1863: BytePoly_66 = bigint_nondet_quot!(ctx, x1862, x0, 66);
    let x1864: BytePoly_32 = bigint_nondet_rem!(ctx, x1862, x0, 32);
    let x1865: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x1858, x1864, 64),
                    bigint_add!(
                        bigint_sub!(x1853, bigint_mul!(x1858, x1850, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x1866: BytePoly_66 = bigint_nondet_quot!(ctx, x1865, x0, 66);
    let x1867: BytePoly_32 = bigint_nondet_rem!(ctx, x1865, x0, 32);
    let x1868: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1861, bigint_mul!(x1863, x0, 98), 98),
                        x1850,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x1864,
        98
    );
    eqz(ctx, &x1868, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1866, x0, 98), x1867, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1858, bigint_sub!(x1850, x1864, 32), 64),
                        x1853,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x1869: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1867, 32), x0, 32);
    let x1870: BytePoly_32 = bigint_add!(bigint_sub!(x3, x1864, 32), x0, 32);
    let x1871: BytePoly_32 = bigint_nondet_inv!(ctx, x1870, x0, 32);
    let x1872: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1869, x1871, 64), x0, 32);
    let x1873: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x1872, x1870, 64), x1869, 64),
        x0,
        64
    );
    let x1874: BytePoly_66 = bigint_nondet_quot!(ctx, x1873, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x1873, bigint_mul!(x1874, x0, 98), 98),
        536459,
        4,
    )?;
    let x1875: BytePoly_64 = bigint_mul!(x1872, x1872, 64);
    let x1876: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1875, x1864, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x1877: BytePoly_66 = bigint_nondet_quot!(ctx, x1876, x0, 66);
    let x1878: BytePoly_32 = bigint_nondet_rem!(ctx, x1876, x0, 32);
    let x1879: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x1872, x1878, 64),
                    bigint_add!(
                        bigint_sub!(x1867, bigint_mul!(x1872, x1864, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x1880: BytePoly_66 = bigint_nondet_quot!(ctx, x1879, x0, 66);
    let x1881: BytePoly_32 = bigint_nondet_rem!(ctx, x1879, x0, 32);
    let x1882: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1875, bigint_mul!(x1877, x0, 98), 98),
                        x1864,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x1878,
        98
    );
    eqz(ctx, &x1882, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1880, x0, 98), x1881, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1872, bigint_sub!(x1864, x1878, 32), 64),
                        x1867,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x1883: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1881, 32), x0, 32);
    let x1884: BytePoly_32 = bigint_add!(bigint_sub!(x3, x1878, 32), x0, 32);
    let x1885: BytePoly_32 = bigint_nondet_inv!(ctx, x1884, x0, 32);
    let x1886: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1883, x1885, 64), x0, 32);
    let x1887: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x1886, x1884, 64), x1883, 64),
        x0,
        64
    );
    let x1888: BytePoly_66 = bigint_nondet_quot!(ctx, x1887, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x1887, bigint_mul!(x1888, x0, 98), 98),
        536459,
        4,
    )?;
    let x1889: BytePoly_64 = bigint_mul!(x1886, x1886, 64);
    let x1890: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1889, x1878, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x1891: BytePoly_66 = bigint_nondet_quot!(ctx, x1890, x0, 66);
    let x1892: BytePoly_32 = bigint_nondet_rem!(ctx, x1890, x0, 32);
    let x1893: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x1886, x1892, 64),
                    bigint_add!(
                        bigint_sub!(x1881, bigint_mul!(x1886, x1878, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x1894: BytePoly_66 = bigint_nondet_quot!(ctx, x1893, x0, 66);
    let x1895: BytePoly_32 = bigint_nondet_rem!(ctx, x1893, x0, 32);
    let x1896: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1889, bigint_mul!(x1891, x0, 98), 98),
                        x1878,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x1892,
        98
    );
    eqz(ctx, &x1896, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1894, x0, 98), x1895, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1886, bigint_sub!(x1878, x1892, 32), 64),
                        x1881,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x1897: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1895, 32), x0, 32);
    let x1898: BytePoly_32 = bigint_add!(bigint_sub!(x3, x1892, 32), x0, 32);
    let x1899: BytePoly_32 = bigint_nondet_inv!(ctx, x1898, x0, 32);
    let x1900: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1897, x1899, 64), x0, 32);
    let x1901: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x1900, x1898, 64), x1897, 64),
        x0,
        64
    );
    let x1902: BytePoly_66 = bigint_nondet_quot!(ctx, x1901, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x1901, bigint_mul!(x1902, x0, 98), 98),
        536459,
        4,
    )?;
    let x1903: BytePoly_64 = bigint_mul!(x1900, x1900, 64);
    let x1904: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1903, x1892, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x1905: BytePoly_66 = bigint_nondet_quot!(ctx, x1904, x0, 66);
    let x1906: BytePoly_32 = bigint_nondet_rem!(ctx, x1904, x0, 32);
    let x1907: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x1900, x1906, 64),
                    bigint_add!(
                        bigint_sub!(x1895, bigint_mul!(x1900, x1892, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x1908: BytePoly_66 = bigint_nondet_quot!(ctx, x1907, x0, 66);
    let x1909: BytePoly_32 = bigint_nondet_rem!(ctx, x1907, x0, 32);
    let x1910: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1903, bigint_mul!(x1905, x0, 98), 98),
                        x1892,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x1906,
        98
    );
    eqz(ctx, &x1910, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1908, x0, 98), x1909, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1900, bigint_sub!(x1892, x1906, 32), 64),
                        x1895,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x1911: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1909, 32), x0, 32);
    let x1912: BytePoly_32 = bigint_add!(bigint_sub!(x3, x1906, 32), x0, 32);
    let x1913: BytePoly_32 = bigint_nondet_inv!(ctx, x1912, x0, 32);
    let x1914: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1911, x1913, 64), x0, 32);
    let x1915: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x1914, x1912, 64), x1911, 64),
        x0,
        64
    );
    let x1916: BytePoly_66 = bigint_nondet_quot!(ctx, x1915, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x1915, bigint_mul!(x1916, x0, 98), 98),
        536459,
        4,
    )?;
    let x1917: BytePoly_64 = bigint_mul!(x1914, x1914, 64);
    let x1918: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1917, x1906, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x1919: BytePoly_66 = bigint_nondet_quot!(ctx, x1918, x0, 66);
    let x1920: BytePoly_32 = bigint_nondet_rem!(ctx, x1918, x0, 32);
    let x1921: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x1914, x1920, 64),
                    bigint_add!(
                        bigint_sub!(x1909, bigint_mul!(x1914, x1906, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x1922: BytePoly_66 = bigint_nondet_quot!(ctx, x1921, x0, 66);
    let x1923: BytePoly_32 = bigint_nondet_rem!(ctx, x1921, x0, 32);
    let x1924: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1917, bigint_mul!(x1919, x0, 98), 98),
                        x1906,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x1920,
        98
    );
    eqz(ctx, &x1924, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1922, x0, 98), x1923, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1914, bigint_sub!(x1906, x1920, 32), 64),
                        x1909,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x1925: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1923, 32), x0, 32);
    let x1926: BytePoly_32 = bigint_add!(bigint_sub!(x3, x1920, 32), x0, 32);
    let x1927: BytePoly_32 = bigint_nondet_inv!(ctx, x1926, x0, 32);
    let x1928: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1925, x1927, 64), x0, 32);
    let x1929: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x1928, x1926, 64), x1925, 64),
        x0,
        64
    );
    let x1930: BytePoly_66 = bigint_nondet_quot!(ctx, x1929, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x1929, bigint_mul!(x1930, x0, 98), 98),
        536459,
        4,
    )?;
    let x1931: BytePoly_64 = bigint_mul!(x1928, x1928, 64);
    let x1932: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1931, x1920, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x1933: BytePoly_66 = bigint_nondet_quot!(ctx, x1932, x0, 66);
    let x1934: BytePoly_32 = bigint_nondet_rem!(ctx, x1932, x0, 32);
    let x1935: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x1928, x1934, 64),
                    bigint_add!(
                        bigint_sub!(x1923, bigint_mul!(x1928, x1920, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x1936: BytePoly_66 = bigint_nondet_quot!(ctx, x1935, x0, 66);
    let x1937: BytePoly_32 = bigint_nondet_rem!(ctx, x1935, x0, 32);
    let x1938: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1931, bigint_mul!(x1933, x0, 98), 98),
                        x1920,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x1934,
        98
    );
    eqz(ctx, &x1938, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1936, x0, 98), x1937, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1928, bigint_sub!(x1920, x1934, 32), 64),
                        x1923,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x1939: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1937, 32), x0, 32);
    let x1940: BytePoly_32 = bigint_add!(bigint_sub!(x3, x1934, 32), x0, 32);
    let x1941: BytePoly_32 = bigint_nondet_inv!(ctx, x1940, x0, 32);
    let x1942: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1939, x1941, 64), x0, 32);
    let x1943: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x1942, x1940, 64), x1939, 64),
        x0,
        64
    );
    let x1944: BytePoly_66 = bigint_nondet_quot!(ctx, x1943, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x1943, bigint_mul!(x1944, x0, 98), 98),
        536459,
        4,
    )?;
    let x1945: BytePoly_64 = bigint_mul!(x1942, x1942, 64);
    let x1946: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1945, x1934, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x1947: BytePoly_66 = bigint_nondet_quot!(ctx, x1946, x0, 66);
    let x1948: BytePoly_32 = bigint_nondet_rem!(ctx, x1946, x0, 32);
    let x1949: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x1942, x1948, 64),
                    bigint_add!(
                        bigint_sub!(x1937, bigint_mul!(x1942, x1934, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x1950: BytePoly_66 = bigint_nondet_quot!(ctx, x1949, x0, 66);
    let x1951: BytePoly_32 = bigint_nondet_rem!(ctx, x1949, x0, 32);
    let x1952: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1945, bigint_mul!(x1947, x0, 98), 98),
                        x1934,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x1948,
        98
    );
    eqz(ctx, &x1952, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1950, x0, 98), x1951, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1942, bigint_sub!(x1934, x1948, 32), 64),
                        x1937,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x1953: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1951, 32), x0, 32);
    let x1954: BytePoly_32 = bigint_add!(bigint_sub!(x3, x1948, 32), x0, 32);
    let x1955: BytePoly_32 = bigint_nondet_inv!(ctx, x1954, x0, 32);
    let x1956: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1953, x1955, 64), x0, 32);
    let x1957: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x1956, x1954, 64), x1953, 64),
        x0,
        64
    );
    let x1958: BytePoly_66 = bigint_nondet_quot!(ctx, x1957, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x1957, bigint_mul!(x1958, x0, 98), 98),
        536459,
        4,
    )?;
    let x1959: BytePoly_64 = bigint_mul!(x1956, x1956, 64);
    let x1960: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1959, x1948, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x1961: BytePoly_66 = bigint_nondet_quot!(ctx, x1960, x0, 66);
    let x1962: BytePoly_32 = bigint_nondet_rem!(ctx, x1960, x0, 32);
    let x1963: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x1956, x1962, 64),
                    bigint_add!(
                        bigint_sub!(x1951, bigint_mul!(x1956, x1948, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x1964: BytePoly_66 = bigint_nondet_quot!(ctx, x1963, x0, 66);
    let x1965: BytePoly_32 = bigint_nondet_rem!(ctx, x1963, x0, 32);
    let x1966: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1959, bigint_mul!(x1961, x0, 98), 98),
                        x1948,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x1962,
        98
    );
    eqz(ctx, &x1966, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1964, x0, 98), x1965, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1956, bigint_sub!(x1948, x1962, 32), 64),
                        x1951,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x1967: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1965, 32), x0, 32);
    let x1968: BytePoly_32 = bigint_add!(bigint_sub!(x3, x1962, 32), x0, 32);
    let x1969: BytePoly_32 = bigint_nondet_inv!(ctx, x1968, x0, 32);
    let x1970: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1967, x1969, 64), x0, 32);
    let x1971: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x1970, x1968, 64), x1967, 64),
        x0,
        64
    );
    let x1972: BytePoly_66 = bigint_nondet_quot!(ctx, x1971, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x1971, bigint_mul!(x1972, x0, 98), 98),
        536459,
        4,
    )?;
    let x1973: BytePoly_64 = bigint_mul!(x1970, x1970, 64);
    let x1974: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1973, x1962, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x1975: BytePoly_66 = bigint_nondet_quot!(ctx, x1974, x0, 66);
    let x1976: BytePoly_32 = bigint_nondet_rem!(ctx, x1974, x0, 32);
    let x1977: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x1970, x1976, 64),
                    bigint_add!(
                        bigint_sub!(x1965, bigint_mul!(x1970, x1962, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x1978: BytePoly_66 = bigint_nondet_quot!(ctx, x1977, x0, 66);
    let x1979: BytePoly_32 = bigint_nondet_rem!(ctx, x1977, x0, 32);
    let x1980: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1973, bigint_mul!(x1975, x0, 98), 98),
                        x1962,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x1976,
        98
    );
    eqz(ctx, &x1980, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1978, x0, 98), x1979, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1970, bigint_sub!(x1962, x1976, 32), 64),
                        x1965,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x1981: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1979, 32), x0, 32);
    let x1982: BytePoly_32 = bigint_add!(bigint_sub!(x3, x1976, 32), x0, 32);
    let x1983: BytePoly_32 = bigint_nondet_inv!(ctx, x1982, x0, 32);
    let x1984: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1981, x1983, 64), x0, 32);
    let x1985: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x1984, x1982, 64), x1981, 64),
        x0,
        64
    );
    let x1986: BytePoly_66 = bigint_nondet_quot!(ctx, x1985, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x1985, bigint_mul!(x1986, x0, 98), 98),
        536459,
        4,
    )?;
    let x1987: BytePoly_64 = bigint_mul!(x1984, x1984, 64);
    let x1988: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1987, x1976, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x1989: BytePoly_66 = bigint_nondet_quot!(ctx, x1988, x0, 66);
    let x1990: BytePoly_32 = bigint_nondet_rem!(ctx, x1988, x0, 32);
    let x1991: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x1984, x1990, 64),
                    bigint_add!(
                        bigint_sub!(x1979, bigint_mul!(x1984, x1976, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x1992: BytePoly_66 = bigint_nondet_quot!(ctx, x1991, x0, 66);
    let x1993: BytePoly_32 = bigint_nondet_rem!(ctx, x1991, x0, 32);
    let x1994: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x1987, bigint_mul!(x1989, x0, 98), 98),
                        x1976,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x1990,
        98
    );
    eqz(ctx, &x1994, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1992, x0, 98), x1993, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1984, bigint_sub!(x1976, x1990, 32), 64),
                        x1979,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x1995: BytePoly_32 = bigint_add!(bigint_sub!(x4, x1993, 32), x0, 32);
    let x1996: BytePoly_32 = bigint_add!(bigint_sub!(x3, x1990, 32), x0, 32);
    let x1997: BytePoly_32 = bigint_nondet_inv!(ctx, x1996, x0, 32);
    let x1998: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x1995, x1997, 64), x0, 32);
    let x1999: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x1998, x1996, 64), x1995, 64),
        x0,
        64
    );
    let x2000: BytePoly_66 = bigint_nondet_quot!(ctx, x1999, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x1999, bigint_mul!(x2000, x0, 98), 98),
        536459,
        4,
    )?;
    let x2001: BytePoly_64 = bigint_mul!(x1998, x1998, 64);
    let x2002: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2001, x1990, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x2003: BytePoly_66 = bigint_nondet_quot!(ctx, x2002, x0, 66);
    let x2004: BytePoly_32 = bigint_nondet_rem!(ctx, x2002, x0, 32);
    let x2005: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x1998, x2004, 64),
                    bigint_add!(
                        bigint_sub!(x1993, bigint_mul!(x1998, x1990, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x2006: BytePoly_66 = bigint_nondet_quot!(ctx, x2005, x0, 66);
    let x2007: BytePoly_32 = bigint_nondet_rem!(ctx, x2005, x0, 32);
    let x2008: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2001, bigint_mul!(x2003, x0, 98), 98),
                        x1990,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x2004,
        98
    );
    eqz(ctx, &x2008, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2006, x0, 98), x2007, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x1998, bigint_sub!(x1990, x2004, 32), 64),
                        x1993,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x2009: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2007, 32), x0, 32);
    let x2010: BytePoly_32 = bigint_add!(bigint_sub!(x3, x2004, 32), x0, 32);
    let x2011: BytePoly_32 = bigint_nondet_inv!(ctx, x2010, x0, 32);
    let x2012: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2009, x2011, 64), x0, 32);
    let x2013: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x2012, x2010, 64), x2009, 64),
        x0,
        64
    );
    let x2014: BytePoly_66 = bigint_nondet_quot!(ctx, x2013, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x2013, bigint_mul!(x2014, x0, 98), 98),
        536459,
        4,
    )?;
    let x2015: BytePoly_64 = bigint_mul!(x2012, x2012, 64);
    let x2016: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2015, x2004, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x2017: BytePoly_66 = bigint_nondet_quot!(ctx, x2016, x0, 66);
    let x2018: BytePoly_32 = bigint_nondet_rem!(ctx, x2016, x0, 32);
    let x2019: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x2012, x2018, 64),
                    bigint_add!(
                        bigint_sub!(x2007, bigint_mul!(x2012, x2004, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x2020: BytePoly_66 = bigint_nondet_quot!(ctx, x2019, x0, 66);
    let x2021: BytePoly_32 = bigint_nondet_rem!(ctx, x2019, x0, 32);
    let x2022: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2015, bigint_mul!(x2017, x0, 98), 98),
                        x2004,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x2018,
        98
    );
    eqz(ctx, &x2022, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2020, x0, 98), x2021, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2012, bigint_sub!(x2004, x2018, 32), 64),
                        x2007,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x2023: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2021, 32), x0, 32);
    let x2024: BytePoly_32 = bigint_add!(bigint_sub!(x3, x2018, 32), x0, 32);
    let x2025: BytePoly_32 = bigint_nondet_inv!(ctx, x2024, x0, 32);
    let x2026: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2023, x2025, 64), x0, 32);
    let x2027: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x2026, x2024, 64), x2023, 64),
        x0,
        64
    );
    let x2028: BytePoly_66 = bigint_nondet_quot!(ctx, x2027, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x2027, bigint_mul!(x2028, x0, 98), 98),
        536459,
        4,
    )?;
    let x2029: BytePoly_64 = bigint_mul!(x2026, x2026, 64);
    let x2030: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2029, x2018, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x2031: BytePoly_66 = bigint_nondet_quot!(ctx, x2030, x0, 66);
    let x2032: BytePoly_32 = bigint_nondet_rem!(ctx, x2030, x0, 32);
    let x2033: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x2026, x2032, 64),
                    bigint_add!(
                        bigint_sub!(x2021, bigint_mul!(x2026, x2018, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x2034: BytePoly_66 = bigint_nondet_quot!(ctx, x2033, x0, 66);
    let x2035: BytePoly_32 = bigint_nondet_rem!(ctx, x2033, x0, 32);
    let x2036: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2029, bigint_mul!(x2031, x0, 98), 98),
                        x2018,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x2032,
        98
    );
    eqz(ctx, &x2036, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2034, x0, 98), x2035, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2026, bigint_sub!(x2018, x2032, 32), 64),
                        x2021,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x2037: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2035, 32), x0, 32);
    let x2038: BytePoly_32 = bigint_add!(bigint_sub!(x3, x2032, 32), x0, 32);
    let x2039: BytePoly_32 = bigint_nondet_inv!(ctx, x2038, x0, 32);
    let x2040: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2037, x2039, 64), x0, 32);
    let x2041: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x2040, x2038, 64), x2037, 64),
        x0,
        64
    );
    let x2042: BytePoly_66 = bigint_nondet_quot!(ctx, x2041, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x2041, bigint_mul!(x2042, x0, 98), 98),
        536459,
        4,
    )?;
    let x2043: BytePoly_64 = bigint_mul!(x2040, x2040, 64);
    let x2044: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2043, x2032, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x2045: BytePoly_66 = bigint_nondet_quot!(ctx, x2044, x0, 66);
    let x2046: BytePoly_32 = bigint_nondet_rem!(ctx, x2044, x0, 32);
    let x2047: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x2040, x2046, 64),
                    bigint_add!(
                        bigint_sub!(x2035, bigint_mul!(x2040, x2032, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x2048: BytePoly_66 = bigint_nondet_quot!(ctx, x2047, x0, 66);
    let x2049: BytePoly_32 = bigint_nondet_rem!(ctx, x2047, x0, 32);
    let x2050: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2043, bigint_mul!(x2045, x0, 98), 98),
                        x2032,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x2046,
        98
    );
    eqz(ctx, &x2050, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2048, x0, 98), x2049, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2040, bigint_sub!(x2032, x2046, 32), 64),
                        x2035,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x2051: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2049, 32), x0, 32);
    let x2052: BytePoly_32 = bigint_add!(bigint_sub!(x3, x2046, 32), x0, 32);
    let x2053: BytePoly_32 = bigint_nondet_inv!(ctx, x2052, x0, 32);
    let x2054: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2051, x2053, 64), x0, 32);
    let x2055: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x2054, x2052, 64), x2051, 64),
        x0,
        64
    );
    let x2056: BytePoly_66 = bigint_nondet_quot!(ctx, x2055, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x2055, bigint_mul!(x2056, x0, 98), 98),
        536459,
        4,
    )?;
    let x2057: BytePoly_64 = bigint_mul!(x2054, x2054, 64);
    let x2058: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2057, x2046, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x2059: BytePoly_66 = bigint_nondet_quot!(ctx, x2058, x0, 66);
    let x2060: BytePoly_32 = bigint_nondet_rem!(ctx, x2058, x0, 32);
    let x2061: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x2054, x2060, 64),
                    bigint_add!(
                        bigint_sub!(x2049, bigint_mul!(x2054, x2046, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x2062: BytePoly_66 = bigint_nondet_quot!(ctx, x2061, x0, 66);
    let x2063: BytePoly_32 = bigint_nondet_rem!(ctx, x2061, x0, 32);
    let x2064: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2057, bigint_mul!(x2059, x0, 98), 98),
                        x2046,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x2060,
        98
    );
    eqz(ctx, &x2064, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2062, x0, 98), x2063, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2054, bigint_sub!(x2046, x2060, 32), 64),
                        x2049,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x2065: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2063, 32), x0, 32);
    let x2066: BytePoly_32 = bigint_add!(bigint_sub!(x3, x2060, 32), x0, 32);
    let x2067: BytePoly_32 = bigint_nondet_inv!(ctx, x2066, x0, 32);
    let x2068: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2065, x2067, 64), x0, 32);
    let x2069: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x2068, x2066, 64), x2065, 64),
        x0,
        64
    );
    let x2070: BytePoly_66 = bigint_nondet_quot!(ctx, x2069, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x2069, bigint_mul!(x2070, x0, 98), 98),
        536459,
        4,
    )?;
    let x2071: BytePoly_64 = bigint_mul!(x2068, x2068, 64);
    let x2072: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2071, x2060, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x2073: BytePoly_66 = bigint_nondet_quot!(ctx, x2072, x0, 66);
    let x2074: BytePoly_32 = bigint_nondet_rem!(ctx, x2072, x0, 32);
    let x2075: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x2068, x2074, 64),
                    bigint_add!(
                        bigint_sub!(x2063, bigint_mul!(x2068, x2060, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x2076: BytePoly_66 = bigint_nondet_quot!(ctx, x2075, x0, 66);
    let x2077: BytePoly_32 = bigint_nondet_rem!(ctx, x2075, x0, 32);
    let x2078: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2071, bigint_mul!(x2073, x0, 98), 98),
                        x2060,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x2074,
        98
    );
    eqz(ctx, &x2078, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2076, x0, 98), x2077, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2068, bigint_sub!(x2060, x2074, 32), 64),
                        x2063,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x2079: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2077, 32), x0, 32);
    let x2080: BytePoly_32 = bigint_add!(bigint_sub!(x3, x2074, 32), x0, 32);
    let x2081: BytePoly_32 = bigint_nondet_inv!(ctx, x2080, x0, 32);
    let x2082: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2079, x2081, 64), x0, 32);
    let x2083: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x2082, x2080, 64), x2079, 64),
        x0,
        64
    );
    let x2084: BytePoly_66 = bigint_nondet_quot!(ctx, x2083, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x2083, bigint_mul!(x2084, x0, 98), 98),
        536459,
        4,
    )?;
    let x2085: BytePoly_64 = bigint_mul!(x2082, x2082, 64);
    let x2086: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2085, x2074, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x2087: BytePoly_66 = bigint_nondet_quot!(ctx, x2086, x0, 66);
    let x2088: BytePoly_32 = bigint_nondet_rem!(ctx, x2086, x0, 32);
    let x2089: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x2082, x2088, 64),
                    bigint_add!(
                        bigint_sub!(x2077, bigint_mul!(x2082, x2074, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x2090: BytePoly_66 = bigint_nondet_quot!(ctx, x2089, x0, 66);
    let x2091: BytePoly_32 = bigint_nondet_rem!(ctx, x2089, x0, 32);
    let x2092: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2085, bigint_mul!(x2087, x0, 98), 98),
                        x2074,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x2088,
        98
    );
    eqz(ctx, &x2092, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2090, x0, 98), x2091, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2082, bigint_sub!(x2074, x2088, 32), 64),
                        x2077,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x2093: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2091, 32), x0, 32);
    let x2094: BytePoly_32 = bigint_add!(bigint_sub!(x3, x2088, 32), x0, 32);
    let x2095: BytePoly_32 = bigint_nondet_inv!(ctx, x2094, x0, 32);
    let x2096: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2093, x2095, 64), x0, 32);
    let x2097: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x2096, x2094, 64), x2093, 64),
        x0,
        64
    );
    let x2098: BytePoly_66 = bigint_nondet_quot!(ctx, x2097, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x2097, bigint_mul!(x2098, x0, 98), 98),
        536459,
        4,
    )?;
    let x2099: BytePoly_64 = bigint_mul!(x2096, x2096, 64);
    let x2100: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2099, x2088, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x2101: BytePoly_66 = bigint_nondet_quot!(ctx, x2100, x0, 66);
    let x2102: BytePoly_32 = bigint_nondet_rem!(ctx, x2100, x0, 32);
    let x2103: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x2096, x2102, 64),
                    bigint_add!(
                        bigint_sub!(x2091, bigint_mul!(x2096, x2088, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x2104: BytePoly_66 = bigint_nondet_quot!(ctx, x2103, x0, 66);
    let x2105: BytePoly_32 = bigint_nondet_rem!(ctx, x2103, x0, 32);
    let x2106: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2099, bigint_mul!(x2101, x0, 98), 98),
                        x2088,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x2102,
        98
    );
    eqz(ctx, &x2106, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2104, x0, 98), x2105, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2096, bigint_sub!(x2088, x2102, 32), 64),
                        x2091,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x2107: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2105, 32), x0, 32);
    let x2108: BytePoly_32 = bigint_add!(bigint_sub!(x3, x2102, 32), x0, 32);
    let x2109: BytePoly_32 = bigint_nondet_inv!(ctx, x2108, x0, 32);
    let x2110: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2107, x2109, 64), x0, 32);
    let x2111: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x2110, x2108, 64), x2107, 64),
        x0,
        64
    );
    let x2112: BytePoly_66 = bigint_nondet_quot!(ctx, x2111, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x2111, bigint_mul!(x2112, x0, 98), 98),
        536459,
        4,
    )?;
    let x2113: BytePoly_64 = bigint_mul!(x2110, x2110, 64);
    let x2114: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2113, x2102, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x2115: BytePoly_66 = bigint_nondet_quot!(ctx, x2114, x0, 66);
    let x2116: BytePoly_32 = bigint_nondet_rem!(ctx, x2114, x0, 32);
    let x2117: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x2110, x2116, 64),
                    bigint_add!(
                        bigint_sub!(x2105, bigint_mul!(x2110, x2102, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x2118: BytePoly_66 = bigint_nondet_quot!(ctx, x2117, x0, 66);
    let x2119: BytePoly_32 = bigint_nondet_rem!(ctx, x2117, x0, 32);
    let x2120: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2113, bigint_mul!(x2115, x0, 98), 98),
                        x2102,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x2116,
        98
    );
    eqz(ctx, &x2120, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2118, x0, 98), x2119, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2110, bigint_sub!(x2102, x2116, 32), 64),
                        x2105,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x2121: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2119, 32), x0, 32);
    let x2122: BytePoly_32 = bigint_add!(bigint_sub!(x3, x2116, 32), x0, 32);
    let x2123: BytePoly_32 = bigint_nondet_inv!(ctx, x2122, x0, 32);
    let x2124: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2121, x2123, 64), x0, 32);
    let x2125: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x2124, x2122, 64), x2121, 64),
        x0,
        64
    );
    let x2126: BytePoly_66 = bigint_nondet_quot!(ctx, x2125, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x2125, bigint_mul!(x2126, x0, 98), 98),
        536459,
        4,
    )?;
    let x2127: BytePoly_64 = bigint_mul!(x2124, x2124, 64);
    let x2128: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2127, x2116, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x2129: BytePoly_66 = bigint_nondet_quot!(ctx, x2128, x0, 66);
    let x2130: BytePoly_32 = bigint_nondet_rem!(ctx, x2128, x0, 32);
    let x2131: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x2124, x2130, 64),
                    bigint_add!(
                        bigint_sub!(x2119, bigint_mul!(x2124, x2116, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x2132: BytePoly_66 = bigint_nondet_quot!(ctx, x2131, x0, 66);
    let x2133: BytePoly_32 = bigint_nondet_rem!(ctx, x2131, x0, 32);
    let x2134: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2127, bigint_mul!(x2129, x0, 98), 98),
                        x2116,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x2130,
        98
    );
    eqz(ctx, &x2134, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2132, x0, 98), x2133, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2124, bigint_sub!(x2116, x2130, 32), 64),
                        x2119,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x2135: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2133, 32), x0, 32);
    let x2136: BytePoly_32 = bigint_add!(bigint_sub!(x3, x2130, 32), x0, 32);
    let x2137: BytePoly_32 = bigint_nondet_inv!(ctx, x2136, x0, 32);
    let x2138: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2135, x2137, 64), x0, 32);
    let x2139: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x2138, x2136, 64), x2135, 64),
        x0,
        64
    );
    let x2140: BytePoly_66 = bigint_nondet_quot!(ctx, x2139, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x2139, bigint_mul!(x2140, x0, 98), 98),
        536459,
        4,
    )?;
    let x2141: BytePoly_64 = bigint_mul!(x2138, x2138, 64);
    let x2142: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2141, x2130, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x2143: BytePoly_66 = bigint_nondet_quot!(ctx, x2142, x0, 66);
    let x2144: BytePoly_32 = bigint_nondet_rem!(ctx, x2142, x0, 32);
    let x2145: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x2138, x2144, 64),
                    bigint_add!(
                        bigint_sub!(x2133, bigint_mul!(x2138, x2130, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x2146: BytePoly_66 = bigint_nondet_quot!(ctx, x2145, x0, 66);
    let x2147: BytePoly_32 = bigint_nondet_rem!(ctx, x2145, x0, 32);
    let x2148: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2141, bigint_mul!(x2143, x0, 98), 98),
                        x2130,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x2144,
        98
    );
    eqz(ctx, &x2148, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2146, x0, 98), x2147, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2138, bigint_sub!(x2130, x2144, 32), 64),
                        x2133,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x2149: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2147, 32), x0, 32);
    let x2150: BytePoly_32 = bigint_add!(bigint_sub!(x3, x2144, 32), x0, 32);
    let x2151: BytePoly_32 = bigint_nondet_inv!(ctx, x2150, x0, 32);
    let x2152: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2149, x2151, 64), x0, 32);
    let x2153: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x2152, x2150, 64), x2149, 64),
        x0,
        64
    );
    let x2154: BytePoly_66 = bigint_nondet_quot!(ctx, x2153, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x2153, bigint_mul!(x2154, x0, 98), 98),
        536459,
        4,
    )?;
    let x2155: BytePoly_64 = bigint_mul!(x2152, x2152, 64);
    let x2156: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2155, x2144, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x2157: BytePoly_66 = bigint_nondet_quot!(ctx, x2156, x0, 66);
    let x2158: BytePoly_32 = bigint_nondet_rem!(ctx, x2156, x0, 32);
    let x2159: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x2152, x2158, 64),
                    bigint_add!(
                        bigint_sub!(x2147, bigint_mul!(x2152, x2144, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x2160: BytePoly_66 = bigint_nondet_quot!(ctx, x2159, x0, 66);
    let x2161: BytePoly_32 = bigint_nondet_rem!(ctx, x2159, x0, 32);
    let x2162: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2155, bigint_mul!(x2157, x0, 98), 98),
                        x2144,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x2158,
        98
    );
    eqz(ctx, &x2162, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2160, x0, 98), x2161, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2152, bigint_sub!(x2144, x2158, 32), 64),
                        x2147,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x2163: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2161, 32), x0, 32);
    let x2164: BytePoly_32 = bigint_add!(bigint_sub!(x3, x2158, 32), x0, 32);
    let x2165: BytePoly_32 = bigint_nondet_inv!(ctx, x2164, x0, 32);
    let x2166: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2163, x2165, 64), x0, 32);
    let x2167: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x2166, x2164, 64), x2163, 64),
        x0,
        64
    );
    let x2168: BytePoly_66 = bigint_nondet_quot!(ctx, x2167, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x2167, bigint_mul!(x2168, x0, 98), 98),
        536459,
        4,
    )?;
    let x2169: BytePoly_64 = bigint_mul!(x2166, x2166, 64);
    let x2170: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2169, x2158, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x2171: BytePoly_66 = bigint_nondet_quot!(ctx, x2170, x0, 66);
    let x2172: BytePoly_32 = bigint_nondet_rem!(ctx, x2170, x0, 32);
    let x2173: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x2166, x2172, 64),
                    bigint_add!(
                        bigint_sub!(x2161, bigint_mul!(x2166, x2158, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x2174: BytePoly_66 = bigint_nondet_quot!(ctx, x2173, x0, 66);
    let x2175: BytePoly_32 = bigint_nondet_rem!(ctx, x2173, x0, 32);
    let x2176: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2169, bigint_mul!(x2171, x0, 98), 98),
                        x2158,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x2172,
        98
    );
    eqz(ctx, &x2176, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2174, x0, 98), x2175, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2166, bigint_sub!(x2158, x2172, 32), 64),
                        x2161,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x2177: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2175, 32), x0, 32);
    let x2178: BytePoly_32 = bigint_add!(bigint_sub!(x3, x2172, 32), x0, 32);
    let x2179: BytePoly_32 = bigint_nondet_inv!(ctx, x2178, x0, 32);
    let x2180: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2177, x2179, 64), x0, 32);
    let x2181: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x2180, x2178, 64), x2177, 64),
        x0,
        64
    );
    let x2182: BytePoly_66 = bigint_nondet_quot!(ctx, x2181, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x2181, bigint_mul!(x2182, x0, 98), 98),
        536459,
        4,
    )?;
    let x2183: BytePoly_64 = bigint_mul!(x2180, x2180, 64);
    let x2184: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2183, x2172, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x2185: BytePoly_66 = bigint_nondet_quot!(ctx, x2184, x0, 66);
    let x2186: BytePoly_32 = bigint_nondet_rem!(ctx, x2184, x0, 32);
    let x2187: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x2180, x2186, 64),
                    bigint_add!(
                        bigint_sub!(x2175, bigint_mul!(x2180, x2172, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x2188: BytePoly_66 = bigint_nondet_quot!(ctx, x2187, x0, 66);
    let x2189: BytePoly_32 = bigint_nondet_rem!(ctx, x2187, x0, 32);
    let x2190: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2183, bigint_mul!(x2185, x0, 98), 98),
                        x2172,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x2186,
        98
    );
    eqz(ctx, &x2190, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2188, x0, 98), x2189, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2180, bigint_sub!(x2172, x2186, 32), 64),
                        x2175,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x2191: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2189, 32), x0, 32);
    let x2192: BytePoly_32 = bigint_add!(bigint_sub!(x3, x2186, 32), x0, 32);
    let x2193: BytePoly_32 = bigint_nondet_inv!(ctx, x2192, x0, 32);
    let x2194: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2191, x2193, 64), x0, 32);
    let x2195: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x2194, x2192, 64), x2191, 64),
        x0,
        64
    );
    let x2196: BytePoly_66 = bigint_nondet_quot!(ctx, x2195, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x2195, bigint_mul!(x2196, x0, 98), 98),
        536459,
        4,
    )?;
    let x2197: BytePoly_64 = bigint_mul!(x2194, x2194, 64);
    let x2198: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2197, x2186, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x2199: BytePoly_66 = bigint_nondet_quot!(ctx, x2198, x0, 66);
    let x2200: BytePoly_32 = bigint_nondet_rem!(ctx, x2198, x0, 32);
    let x2201: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x2194, x2200, 64),
                    bigint_add!(
                        bigint_sub!(x2189, bigint_mul!(x2194, x2186, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x2202: BytePoly_66 = bigint_nondet_quot!(ctx, x2201, x0, 66);
    let x2203: BytePoly_32 = bigint_nondet_rem!(ctx, x2201, x0, 32);
    let x2204: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2197, bigint_mul!(x2199, x0, 98), 98),
                        x2186,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x2200,
        98
    );
    eqz(ctx, &x2204, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2202, x0, 98), x2203, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2194, bigint_sub!(x2186, x2200, 32), 64),
                        x2189,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x2205: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2203, 32), x0, 32);
    let x2206: BytePoly_32 = bigint_add!(bigint_sub!(x3, x2200, 32), x0, 32);
    let x2207: BytePoly_32 = bigint_nondet_inv!(ctx, x2206, x0, 32);
    let x2208: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2205, x2207, 64), x0, 32);
    let x2209: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x2208, x2206, 64), x2205, 64),
        x0,
        64
    );
    let x2210: BytePoly_66 = bigint_nondet_quot!(ctx, x2209, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x2209, bigint_mul!(x2210, x0, 98), 98),
        536459,
        4,
    )?;
    let x2211: BytePoly_64 = bigint_mul!(x2208, x2208, 64);
    let x2212: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2211, x2200, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x2213: BytePoly_66 = bigint_nondet_quot!(ctx, x2212, x0, 66);
    let x2214: BytePoly_32 = bigint_nondet_rem!(ctx, x2212, x0, 32);
    let x2215: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x2208, x2214, 64),
                    bigint_add!(
                        bigint_sub!(x2203, bigint_mul!(x2208, x2200, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x2216: BytePoly_66 = bigint_nondet_quot!(ctx, x2215, x0, 66);
    let x2217: BytePoly_32 = bigint_nondet_rem!(ctx, x2215, x0, 32);
    let x2218: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2211, bigint_mul!(x2213, x0, 98), 98),
                        x2200,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x2214,
        98
    );
    eqz(ctx, &x2218, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2216, x0, 98), x2217, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2208, bigint_sub!(x2200, x2214, 32), 64),
                        x2203,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x2219: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2217, 32), x0, 32);
    let x2220: BytePoly_32 = bigint_add!(bigint_sub!(x3, x2214, 32), x0, 32);
    let x2221: BytePoly_32 = bigint_nondet_inv!(ctx, x2220, x0, 32);
    let x2222: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2219, x2221, 64), x0, 32);
    let x2223: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x2222, x2220, 64), x2219, 64),
        x0,
        64
    );
    let x2224: BytePoly_66 = bigint_nondet_quot!(ctx, x2223, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x2223, bigint_mul!(x2224, x0, 98), 98),
        536459,
        4,
    )?;
    let x2225: BytePoly_64 = bigint_mul!(x2222, x2222, 64);
    let x2226: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2225, x2214, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x2227: BytePoly_66 = bigint_nondet_quot!(ctx, x2226, x0, 66);
    let x2228: BytePoly_32 = bigint_nondet_rem!(ctx, x2226, x0, 32);
    let x2229: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x2222, x2228, 64),
                    bigint_add!(
                        bigint_sub!(x2217, bigint_mul!(x2222, x2214, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x2230: BytePoly_66 = bigint_nondet_quot!(ctx, x2229, x0, 66);
    let x2231: BytePoly_32 = bigint_nondet_rem!(ctx, x2229, x0, 32);
    let x2232: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2225, bigint_mul!(x2227, x0, 98), 98),
                        x2214,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x2228,
        98
    );
    eqz(ctx, &x2232, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2230, x0, 98), x2231, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2222, bigint_sub!(x2214, x2228, 32), 64),
                        x2217,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x2233: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2231, 32), x0, 32);
    let x2234: BytePoly_32 = bigint_add!(bigint_sub!(x3, x2228, 32), x0, 32);
    let x2235: BytePoly_32 = bigint_nondet_inv!(ctx, x2234, x0, 32);
    let x2236: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2233, x2235, 64), x0, 32);
    let x2237: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x2236, x2234, 64), x2233, 64),
        x0,
        64
    );
    let x2238: BytePoly_66 = bigint_nondet_quot!(ctx, x2237, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x2237, bigint_mul!(x2238, x0, 98), 98),
        536459,
        4,
    )?;
    let x2239: BytePoly_64 = bigint_mul!(x2236, x2236, 64);
    let x2240: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2239, x2228, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x2241: BytePoly_66 = bigint_nondet_quot!(ctx, x2240, x0, 66);
    let x2242: BytePoly_32 = bigint_nondet_rem!(ctx, x2240, x0, 32);
    let x2243: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x2236, x2242, 64),
                    bigint_add!(
                        bigint_sub!(x2231, bigint_mul!(x2236, x2228, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x2244: BytePoly_66 = bigint_nondet_quot!(ctx, x2243, x0, 66);
    let x2245: BytePoly_32 = bigint_nondet_rem!(ctx, x2243, x0, 32);
    let x2246: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2239, bigint_mul!(x2241, x0, 98), 98),
                        x2228,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x2242,
        98
    );
    eqz(ctx, &x2246, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2244, x0, 98), x2245, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2236, bigint_sub!(x2228, x2242, 32), 64),
                        x2231,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x2247: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2245, 32), x0, 32);
    let x2248: BytePoly_32 = bigint_add!(bigint_sub!(x3, x2242, 32), x0, 32);
    let x2249: BytePoly_32 = bigint_nondet_inv!(ctx, x2248, x0, 32);
    let x2250: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2247, x2249, 64), x0, 32);
    let x2251: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x2250, x2248, 64), x2247, 64),
        x0,
        64
    );
    let x2252: BytePoly_66 = bigint_nondet_quot!(ctx, x2251, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x2251, bigint_mul!(x2252, x0, 98), 98),
        536459,
        4,
    )?;
    let x2253: BytePoly_64 = bigint_mul!(x2250, x2250, 64);
    let x2254: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2253, x2242, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x2255: BytePoly_66 = bigint_nondet_quot!(ctx, x2254, x0, 66);
    let x2256: BytePoly_32 = bigint_nondet_rem!(ctx, x2254, x0, 32);
    let x2257: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x2250, x2256, 64),
                    bigint_add!(
                        bigint_sub!(x2245, bigint_mul!(x2250, x2242, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x2258: BytePoly_66 = bigint_nondet_quot!(ctx, x2257, x0, 66);
    let x2259: BytePoly_32 = bigint_nondet_rem!(ctx, x2257, x0, 32);
    let x2260: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2253, bigint_mul!(x2255, x0, 98), 98),
                        x2242,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x2256,
        98
    );
    eqz(ctx, &x2260, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2258, x0, 98), x2259, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2250, bigint_sub!(x2242, x2256, 32), 64),
                        x2245,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x2261: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2259, 32), x0, 32);
    let x2262: BytePoly_32 = bigint_add!(bigint_sub!(x3, x2256, 32), x0, 32);
    let x2263: BytePoly_32 = bigint_nondet_inv!(ctx, x2262, x0, 32);
    let x2264: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2261, x2263, 64), x0, 32);
    let x2265: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x2264, x2262, 64), x2261, 64),
        x0,
        64
    );
    let x2266: BytePoly_66 = bigint_nondet_quot!(ctx, x2265, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x2265, bigint_mul!(x2266, x0, 98), 98),
        536459,
        4,
    )?;
    let x2267: BytePoly_64 = bigint_mul!(x2264, x2264, 64);
    let x2268: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2267, x2256, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x2269: BytePoly_66 = bigint_nondet_quot!(ctx, x2268, x0, 66);
    let x2270: BytePoly_32 = bigint_nondet_rem!(ctx, x2268, x0, 32);
    let x2271: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x2264, x2270, 64),
                    bigint_add!(
                        bigint_sub!(x2259, bigint_mul!(x2264, x2256, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x2272: BytePoly_66 = bigint_nondet_quot!(ctx, x2271, x0, 66);
    let x2273: BytePoly_32 = bigint_nondet_rem!(ctx, x2271, x0, 32);
    let x2274: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2267, bigint_mul!(x2269, x0, 98), 98),
                        x2256,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x2270,
        98
    );
    eqz(ctx, &x2274, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2272, x0, 98), x2273, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2264, bigint_sub!(x2256, x2270, 32), 64),
                        x2259,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x2275: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2273, 32), x0, 32);
    let x2276: BytePoly_32 = bigint_add!(bigint_sub!(x3, x2270, 32), x0, 32);
    let x2277: BytePoly_32 = bigint_nondet_inv!(ctx, x2276, x0, 32);
    let x2278: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2275, x2277, 64), x0, 32);
    let x2279: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x2278, x2276, 64), x2275, 64),
        x0,
        64
    );
    let x2280: BytePoly_66 = bigint_nondet_quot!(ctx, x2279, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x2279, bigint_mul!(x2280, x0, 98), 98),
        536459,
        4,
    )?;
    let x2281: BytePoly_64 = bigint_mul!(x2278, x2278, 64);
    let x2282: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2281, x2270, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x2283: BytePoly_66 = bigint_nondet_quot!(ctx, x2282, x0, 66);
    let x2284: BytePoly_32 = bigint_nondet_rem!(ctx, x2282, x0, 32);
    let x2285: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x2278, x2284, 64),
                    bigint_add!(
                        bigint_sub!(x2273, bigint_mul!(x2278, x2270, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x2286: BytePoly_66 = bigint_nondet_quot!(ctx, x2285, x0, 66);
    let x2287: BytePoly_32 = bigint_nondet_rem!(ctx, x2285, x0, 32);
    let x2288: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2281, bigint_mul!(x2283, x0, 98), 98),
                        x2270,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x2284,
        98
    );
    eqz(ctx, &x2288, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2286, x0, 98), x2287, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2278, bigint_sub!(x2270, x2284, 32), 64),
                        x2273,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x2289: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2287, 32), x0, 32);
    let x2290: BytePoly_32 = bigint_add!(bigint_sub!(x3, x2284, 32), x0, 32);
    let x2291: BytePoly_32 = bigint_nondet_inv!(ctx, x2290, x0, 32);
    let x2292: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2289, x2291, 64), x0, 32);
    let x2293: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x2292, x2290, 64), x2289, 64),
        x0,
        64
    );
    let x2294: BytePoly_66 = bigint_nondet_quot!(ctx, x2293, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x2293, bigint_mul!(x2294, x0, 98), 98),
        536459,
        4,
    )?;
    let x2295: BytePoly_64 = bigint_mul!(x2292, x2292, 64);
    let x2296: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2295, x2284, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x2297: BytePoly_66 = bigint_nondet_quot!(ctx, x2296, x0, 66);
    let x2298: BytePoly_32 = bigint_nondet_rem!(ctx, x2296, x0, 32);
    let x2299: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x2292, x2298, 64),
                    bigint_add!(
                        bigint_sub!(x2287, bigint_mul!(x2292, x2284, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x2300: BytePoly_66 = bigint_nondet_quot!(ctx, x2299, x0, 66);
    let x2301: BytePoly_32 = bigint_nondet_rem!(ctx, x2299, x0, 32);
    let x2302: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2295, bigint_mul!(x2297, x0, 98), 98),
                        x2284,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x2298,
        98
    );
    eqz(ctx, &x2302, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2300, x0, 98), x2301, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2292, bigint_sub!(x2284, x2298, 32), 64),
                        x2287,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x2303: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2301, 32), x0, 32);
    let x2304: BytePoly_32 = bigint_add!(bigint_sub!(x3, x2298, 32), x0, 32);
    let x2305: BytePoly_32 = bigint_nondet_inv!(ctx, x2304, x0, 32);
    let x2306: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2303, x2305, 64), x0, 32);
    let x2307: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x2306, x2304, 64), x2303, 64),
        x0,
        64
    );
    let x2308: BytePoly_66 = bigint_nondet_quot!(ctx, x2307, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x2307, bigint_mul!(x2308, x0, 98), 98),
        536459,
        4,
    )?;
    let x2309: BytePoly_64 = bigint_mul!(x2306, x2306, 64);
    let x2310: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2309, x2298, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x2311: BytePoly_66 = bigint_nondet_quot!(ctx, x2310, x0, 66);
    let x2312: BytePoly_32 = bigint_nondet_rem!(ctx, x2310, x0, 32);
    let x2313: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x2306, x2312, 64),
                    bigint_add!(
                        bigint_sub!(x2301, bigint_mul!(x2306, x2298, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x2314: BytePoly_66 = bigint_nondet_quot!(ctx, x2313, x0, 66);
    let x2315: BytePoly_32 = bigint_nondet_rem!(ctx, x2313, x0, 32);
    let x2316: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2309, bigint_mul!(x2311, x0, 98), 98),
                        x2298,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x2312,
        98
    );
    eqz(ctx, &x2316, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2314, x0, 98), x2315, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2306, bigint_sub!(x2298, x2312, 32), 64),
                        x2301,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x2317: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2315, 32), x0, 32);
    let x2318: BytePoly_32 = bigint_add!(bigint_sub!(x3, x2312, 32), x0, 32);
    let x2319: BytePoly_32 = bigint_nondet_inv!(ctx, x2318, x0, 32);
    let x2320: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2317, x2319, 64), x0, 32);
    let x2321: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x2320, x2318, 64), x2317, 64),
        x0,
        64
    );
    let x2322: BytePoly_66 = bigint_nondet_quot!(ctx, x2321, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x2321, bigint_mul!(x2322, x0, 98), 98),
        536459,
        4,
    )?;
    let x2323: BytePoly_64 = bigint_mul!(x2320, x2320, 64);
    let x2324: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2323, x2312, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x2325: BytePoly_66 = bigint_nondet_quot!(ctx, x2324, x0, 66);
    let x2326: BytePoly_32 = bigint_nondet_rem!(ctx, x2324, x0, 32);
    let x2327: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x2320, x2326, 64),
                    bigint_add!(
                        bigint_sub!(x2315, bigint_mul!(x2320, x2312, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x2328: BytePoly_66 = bigint_nondet_quot!(ctx, x2327, x0, 66);
    let x2329: BytePoly_32 = bigint_nondet_rem!(ctx, x2327, x0, 32);
    let x2330: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2323, bigint_mul!(x2325, x0, 98), 98),
                        x2312,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x2326,
        98
    );
    eqz(ctx, &x2330, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2328, x0, 98), x2329, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2320, bigint_sub!(x2312, x2326, 32), 64),
                        x2315,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x2331: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2329, 32), x0, 32);
    let x2332: BytePoly_32 = bigint_add!(bigint_sub!(x3, x2326, 32), x0, 32);
    let x2333: BytePoly_32 = bigint_nondet_inv!(ctx, x2332, x0, 32);
    let x2334: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2331, x2333, 64), x0, 32);
    let x2335: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x2334, x2332, 64), x2331, 64),
        x0,
        64
    );
    let x2336: BytePoly_66 = bigint_nondet_quot!(ctx, x2335, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x2335, bigint_mul!(x2336, x0, 98), 98),
        536459,
        4,
    )?;
    let x2337: BytePoly_64 = bigint_mul!(x2334, x2334, 64);
    let x2338: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2337, x2326, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x2339: BytePoly_66 = bigint_nondet_quot!(ctx, x2338, x0, 66);
    let x2340: BytePoly_32 = bigint_nondet_rem!(ctx, x2338, x0, 32);
    let x2341: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x2334, x2340, 64),
                    bigint_add!(
                        bigint_sub!(x2329, bigint_mul!(x2334, x2326, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x2342: BytePoly_66 = bigint_nondet_quot!(ctx, x2341, x0, 66);
    let x2343: BytePoly_32 = bigint_nondet_rem!(ctx, x2341, x0, 32);
    let x2344: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2337, bigint_mul!(x2339, x0, 98), 98),
                        x2326,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x2340,
        98
    );
    eqz(ctx, &x2344, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2342, x0, 98), x2343, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2334, bigint_sub!(x2326, x2340, 32), 64),
                        x2329,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x2345: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2343, 32), x0, 32);
    let x2346: BytePoly_32 = bigint_add!(bigint_sub!(x3, x2340, 32), x0, 32);
    let x2347: BytePoly_32 = bigint_nondet_inv!(ctx, x2346, x0, 32);
    let x2348: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2345, x2347, 64), x0, 32);
    let x2349: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x2348, x2346, 64), x2345, 64),
        x0,
        64
    );
    let x2350: BytePoly_66 = bigint_nondet_quot!(ctx, x2349, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x2349, bigint_mul!(x2350, x0, 98), 98),
        536459,
        4,
    )?;
    let x2351: BytePoly_64 = bigint_mul!(x2348, x2348, 64);
    let x2352: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2351, x2340, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x2353: BytePoly_66 = bigint_nondet_quot!(ctx, x2352, x0, 66);
    let x2354: BytePoly_32 = bigint_nondet_rem!(ctx, x2352, x0, 32);
    let x2355: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x2348, x2354, 64),
                    bigint_add!(
                        bigint_sub!(x2343, bigint_mul!(x2348, x2340, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x2356: BytePoly_66 = bigint_nondet_quot!(ctx, x2355, x0, 66);
    let x2357: BytePoly_32 = bigint_nondet_rem!(ctx, x2355, x0, 32);
    let x2358: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2351, bigint_mul!(x2353, x0, 98), 98),
                        x2340,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x2354,
        98
    );
    eqz(ctx, &x2358, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2356, x0, 98), x2357, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2348, bigint_sub!(x2340, x2354, 32), 64),
                        x2343,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x2359: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2357, 32), x0, 32);
    let x2360: BytePoly_32 = bigint_add!(bigint_sub!(x3, x2354, 32), x0, 32);
    let x2361: BytePoly_32 = bigint_nondet_inv!(ctx, x2360, x0, 32);
    let x2362: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2359, x2361, 64), x0, 32);
    let x2363: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x2362, x2360, 64), x2359, 64),
        x0,
        64
    );
    let x2364: BytePoly_66 = bigint_nondet_quot!(ctx, x2363, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x2363, bigint_mul!(x2364, x0, 98), 98),
        536459,
        4,
    )?;
    let x2365: BytePoly_64 = bigint_mul!(x2362, x2362, 64);
    let x2366: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2365, x2354, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x2367: BytePoly_66 = bigint_nondet_quot!(ctx, x2366, x0, 66);
    let x2368: BytePoly_32 = bigint_nondet_rem!(ctx, x2366, x0, 32);
    let x2369: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x2362, x2368, 64),
                    bigint_add!(
                        bigint_sub!(x2357, bigint_mul!(x2362, x2354, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x2370: BytePoly_66 = bigint_nondet_quot!(ctx, x2369, x0, 66);
    let x2371: BytePoly_32 = bigint_nondet_rem!(ctx, x2369, x0, 32);
    let x2372: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2365, bigint_mul!(x2367, x0, 98), 98),
                        x2354,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x2368,
        98
    );
    eqz(ctx, &x2372, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2370, x0, 98), x2371, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2362, bigint_sub!(x2354, x2368, 32), 64),
                        x2357,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x2373: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2371, 32), x0, 32);
    let x2374: BytePoly_32 = bigint_add!(bigint_sub!(x3, x2368, 32), x0, 32);
    let x2375: BytePoly_32 = bigint_nondet_inv!(ctx, x2374, x0, 32);
    let x2376: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2373, x2375, 64), x0, 32);
    let x2377: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x2376, x2374, 64), x2373, 64),
        x0,
        64
    );
    let x2378: BytePoly_66 = bigint_nondet_quot!(ctx, x2377, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x2377, bigint_mul!(x2378, x0, 98), 98),
        536459,
        4,
    )?;
    let x2379: BytePoly_64 = bigint_mul!(x2376, x2376, 64);
    let x2380: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2379, x2368, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x2381: BytePoly_66 = bigint_nondet_quot!(ctx, x2380, x0, 66);
    let x2382: BytePoly_32 = bigint_nondet_rem!(ctx, x2380, x0, 32);
    let x2383: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x2376, x2382, 64),
                    bigint_add!(
                        bigint_sub!(x2371, bigint_mul!(x2376, x2368, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x2384: BytePoly_66 = bigint_nondet_quot!(ctx, x2383, x0, 66);
    let x2385: BytePoly_32 = bigint_nondet_rem!(ctx, x2383, x0, 32);
    let x2386: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2379, bigint_mul!(x2381, x0, 98), 98),
                        x2368,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x2382,
        98
    );
    eqz(ctx, &x2386, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2384, x0, 98), x2385, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2376, bigint_sub!(x2368, x2382, 32), 64),
                        x2371,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x2387: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2385, 32), x0, 32);
    let x2388: BytePoly_32 = bigint_add!(bigint_sub!(x3, x2382, 32), x0, 32);
    let x2389: BytePoly_32 = bigint_nondet_inv!(ctx, x2388, x0, 32);
    let x2390: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2387, x2389, 64), x0, 32);
    let x2391: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x2390, x2388, 64), x2387, 64),
        x0,
        64
    );
    let x2392: BytePoly_66 = bigint_nondet_quot!(ctx, x2391, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x2391, bigint_mul!(x2392, x0, 98), 98),
        536459,
        4,
    )?;
    let x2393: BytePoly_64 = bigint_mul!(x2390, x2390, 64);
    let x2394: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2393, x2382, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x2395: BytePoly_66 = bigint_nondet_quot!(ctx, x2394, x0, 66);
    let x2396: BytePoly_32 = bigint_nondet_rem!(ctx, x2394, x0, 32);
    let x2397: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x2390, x2396, 64),
                    bigint_add!(
                        bigint_sub!(x2385, bigint_mul!(x2390, x2382, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x2398: BytePoly_66 = bigint_nondet_quot!(ctx, x2397, x0, 66);
    let x2399: BytePoly_32 = bigint_nondet_rem!(ctx, x2397, x0, 32);
    let x2400: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2393, bigint_mul!(x2395, x0, 98), 98),
                        x2382,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x2396,
        98
    );
    eqz(ctx, &x2400, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2398, x0, 98), x2399, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2390, bigint_sub!(x2382, x2396, 32), 64),
                        x2385,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x2401: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2399, 32), x0, 32);
    let x2402: BytePoly_32 = bigint_add!(bigint_sub!(x3, x2396, 32), x0, 32);
    let x2403: BytePoly_32 = bigint_nondet_inv!(ctx, x2402, x0, 32);
    let x2404: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2401, x2403, 64), x0, 32);
    let x2405: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x2404, x2402, 64), x2401, 64),
        x0,
        64
    );
    let x2406: BytePoly_66 = bigint_nondet_quot!(ctx, x2405, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x2405, bigint_mul!(x2406, x0, 98), 98),
        536459,
        4,
    )?;
    let x2407: BytePoly_64 = bigint_mul!(x2404, x2404, 64);
    let x2408: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2407, x2396, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x2409: BytePoly_66 = bigint_nondet_quot!(ctx, x2408, x0, 66);
    let x2410: BytePoly_32 = bigint_nondet_rem!(ctx, x2408, x0, 32);
    let x2411: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x2404, x2410, 64),
                    bigint_add!(
                        bigint_sub!(x2399, bigint_mul!(x2404, x2396, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x2412: BytePoly_66 = bigint_nondet_quot!(ctx, x2411, x0, 66);
    let x2413: BytePoly_32 = bigint_nondet_rem!(ctx, x2411, x0, 32);
    let x2414: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2407, bigint_mul!(x2409, x0, 98), 98),
                        x2396,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x2410,
        98
    );
    eqz(ctx, &x2414, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2412, x0, 98), x2413, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2404, bigint_sub!(x2396, x2410, 32), 64),
                        x2399,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x2415: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2413, 32), x0, 32);
    let x2416: BytePoly_32 = bigint_add!(bigint_sub!(x3, x2410, 32), x0, 32);
    let x2417: BytePoly_32 = bigint_nondet_inv!(ctx, x2416, x0, 32);
    let x2418: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2415, x2417, 64), x0, 32);
    let x2419: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x2418, x2416, 64), x2415, 64),
        x0,
        64
    );
    let x2420: BytePoly_66 = bigint_nondet_quot!(ctx, x2419, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x2419, bigint_mul!(x2420, x0, 98), 98),
        536459,
        4,
    )?;
    let x2421: BytePoly_64 = bigint_mul!(x2418, x2418, 64);
    let x2422: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2421, x2410, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x2423: BytePoly_66 = bigint_nondet_quot!(ctx, x2422, x0, 66);
    let x2424: BytePoly_32 = bigint_nondet_rem!(ctx, x2422, x0, 32);
    let x2425: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x2418, x2424, 64),
                    bigint_add!(
                        bigint_sub!(x2413, bigint_mul!(x2418, x2410, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x2426: BytePoly_66 = bigint_nondet_quot!(ctx, x2425, x0, 66);
    let x2427: BytePoly_32 = bigint_nondet_rem!(ctx, x2425, x0, 32);
    let x2428: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2421, bigint_mul!(x2423, x0, 98), 98),
                        x2410,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x2424,
        98
    );
    eqz(ctx, &x2428, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2426, x0, 98), x2427, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2418, bigint_sub!(x2410, x2424, 32), 64),
                        x2413,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x2429: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2427, 32), x0, 32);
    let x2430: BytePoly_32 = bigint_add!(bigint_sub!(x3, x2424, 32), x0, 32);
    let x2431: BytePoly_32 = bigint_nondet_inv!(ctx, x2430, x0, 32);
    let x2432: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2429, x2431, 64), x0, 32);
    let x2433: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x2432, x2430, 64), x2429, 64),
        x0,
        64
    );
    let x2434: BytePoly_66 = bigint_nondet_quot!(ctx, x2433, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x2433, bigint_mul!(x2434, x0, 98), 98),
        536459,
        4,
    )?;
    let x2435: BytePoly_64 = bigint_mul!(x2432, x2432, 64);
    let x2436: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2435, x2424, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x2437: BytePoly_66 = bigint_nondet_quot!(ctx, x2436, x0, 66);
    let x2438: BytePoly_32 = bigint_nondet_rem!(ctx, x2436, x0, 32);
    let x2439: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x2432, x2438, 64),
                    bigint_add!(
                        bigint_sub!(x2427, bigint_mul!(x2432, x2424, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x2440: BytePoly_66 = bigint_nondet_quot!(ctx, x2439, x0, 66);
    let x2441: BytePoly_32 = bigint_nondet_rem!(ctx, x2439, x0, 32);
    let x2442: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2435, bigint_mul!(x2437, x0, 98), 98),
                        x2424,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x2438,
        98
    );
    eqz(ctx, &x2442, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2440, x0, 98), x2441, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2432, bigint_sub!(x2424, x2438, 32), 64),
                        x2427,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x2443: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2441, 32), x0, 32);
    let x2444: BytePoly_32 = bigint_add!(bigint_sub!(x3, x2438, 32), x0, 32);
    let x2445: BytePoly_32 = bigint_nondet_inv!(ctx, x2444, x0, 32);
    let x2446: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2443, x2445, 64), x0, 32);
    let x2447: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x2446, x2444, 64), x2443, 64),
        x0,
        64
    );
    let x2448: BytePoly_66 = bigint_nondet_quot!(ctx, x2447, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x2447, bigint_mul!(x2448, x0, 98), 98),
        536459,
        4,
    )?;
    let x2449: BytePoly_64 = bigint_mul!(x2446, x2446, 64);
    let x2450: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2449, x2438, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x2451: BytePoly_66 = bigint_nondet_quot!(ctx, x2450, x0, 66);
    let x2452: BytePoly_32 = bigint_nondet_rem!(ctx, x2450, x0, 32);
    let x2453: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x2446, x2452, 64),
                    bigint_add!(
                        bigint_sub!(x2441, bigint_mul!(x2446, x2438, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x2454: BytePoly_66 = bigint_nondet_quot!(ctx, x2453, x0, 66);
    let x2455: BytePoly_32 = bigint_nondet_rem!(ctx, x2453, x0, 32);
    let x2456: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2449, bigint_mul!(x2451, x0, 98), 98),
                        x2438,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x2452,
        98
    );
    eqz(ctx, &x2456, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2454, x0, 98), x2455, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2446, bigint_sub!(x2438, x2452, 32), 64),
                        x2441,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x2457: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2455, 32), x0, 32);
    let x2458: BytePoly_32 = bigint_add!(bigint_sub!(x3, x2452, 32), x0, 32);
    let x2459: BytePoly_32 = bigint_nondet_inv!(ctx, x2458, x0, 32);
    let x2460: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2457, x2459, 64), x0, 32);
    let x2461: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x2460, x2458, 64), x2457, 64),
        x0,
        64
    );
    let x2462: BytePoly_66 = bigint_nondet_quot!(ctx, x2461, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x2461, bigint_mul!(x2462, x0, 98), 98),
        536459,
        4,
    )?;
    let x2463: BytePoly_64 = bigint_mul!(x2460, x2460, 64);
    let x2464: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2463, x2452, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x2465: BytePoly_66 = bigint_nondet_quot!(ctx, x2464, x0, 66);
    let x2466: BytePoly_32 = bigint_nondet_rem!(ctx, x2464, x0, 32);
    let x2467: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x2460, x2466, 64),
                    bigint_add!(
                        bigint_sub!(x2455, bigint_mul!(x2460, x2452, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x2468: BytePoly_66 = bigint_nondet_quot!(ctx, x2467, x0, 66);
    let x2469: BytePoly_32 = bigint_nondet_rem!(ctx, x2467, x0, 32);
    let x2470: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2463, bigint_mul!(x2465, x0, 98), 98),
                        x2452,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x2466,
        98
    );
    eqz(ctx, &x2470, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2468, x0, 98), x2469, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2460, bigint_sub!(x2452, x2466, 32), 64),
                        x2455,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x2471: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2469, 32), x0, 32);
    let x2472: BytePoly_32 = bigint_add!(bigint_sub!(x3, x2466, 32), x0, 32);
    let x2473: BytePoly_32 = bigint_nondet_inv!(ctx, x2472, x0, 32);
    let x2474: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2471, x2473, 64), x0, 32);
    let x2475: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x2474, x2472, 64), x2471, 64),
        x0,
        64
    );
    let x2476: BytePoly_66 = bigint_nondet_quot!(ctx, x2475, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x2475, bigint_mul!(x2476, x0, 98), 98),
        536459,
        4,
    )?;
    let x2477: BytePoly_64 = bigint_mul!(x2474, x2474, 64);
    let x2478: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2477, x2466, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x2479: BytePoly_66 = bigint_nondet_quot!(ctx, x2478, x0, 66);
    let x2480: BytePoly_32 = bigint_nondet_rem!(ctx, x2478, x0, 32);
    let x2481: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x2474, x2480, 64),
                    bigint_add!(
                        bigint_sub!(x2469, bigint_mul!(x2474, x2466, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x2482: BytePoly_66 = bigint_nondet_quot!(ctx, x2481, x0, 66);
    let x2483: BytePoly_32 = bigint_nondet_rem!(ctx, x2481, x0, 32);
    let x2484: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2477, bigint_mul!(x2479, x0, 98), 98),
                        x2466,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x2480,
        98
    );
    eqz(ctx, &x2484, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2482, x0, 98), x2483, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2474, bigint_sub!(x2466, x2480, 32), 64),
                        x2469,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x2485: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2483, 32), x0, 32);
    let x2486: BytePoly_32 = bigint_add!(bigint_sub!(x3, x2480, 32), x0, 32);
    let x2487: BytePoly_32 = bigint_nondet_inv!(ctx, x2486, x0, 32);
    let x2488: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2485, x2487, 64), x0, 32);
    let x2489: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x2488, x2486, 64), x2485, 64),
        x0,
        64
    );
    let x2490: BytePoly_66 = bigint_nondet_quot!(ctx, x2489, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x2489, bigint_mul!(x2490, x0, 98), 98),
        536459,
        4,
    )?;
    let x2491: BytePoly_64 = bigint_mul!(x2488, x2488, 64);
    let x2492: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2491, x2480, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x2493: BytePoly_66 = bigint_nondet_quot!(ctx, x2492, x0, 66);
    let x2494: BytePoly_32 = bigint_nondet_rem!(ctx, x2492, x0, 32);
    let x2495: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x2488, x2494, 64),
                    bigint_add!(
                        bigint_sub!(x2483, bigint_mul!(x2488, x2480, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x2496: BytePoly_66 = bigint_nondet_quot!(ctx, x2495, x0, 66);
    let x2497: BytePoly_32 = bigint_nondet_rem!(ctx, x2495, x0, 32);
    let x2498: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2491, bigint_mul!(x2493, x0, 98), 98),
                        x2480,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x2494,
        98
    );
    eqz(ctx, &x2498, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2496, x0, 98), x2497, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2488, bigint_sub!(x2480, x2494, 32), 64),
                        x2483,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x2499: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2497, 32), x0, 32);
    let x2500: BytePoly_32 = bigint_add!(bigint_sub!(x3, x2494, 32), x0, 32);
    let x2501: BytePoly_32 = bigint_nondet_inv!(ctx, x2500, x0, 32);
    let x2502: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2499, x2501, 64), x0, 32);
    let x2503: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x2502, x2500, 64), x2499, 64),
        x0,
        64
    );
    let x2504: BytePoly_66 = bigint_nondet_quot!(ctx, x2503, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x2503, bigint_mul!(x2504, x0, 98), 98),
        536459,
        4,
    )?;
    let x2505: BytePoly_64 = bigint_mul!(x2502, x2502, 64);
    let x2506: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2505, x2494, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x2507: BytePoly_66 = bigint_nondet_quot!(ctx, x2506, x0, 66);
    let x2508: BytePoly_32 = bigint_nondet_rem!(ctx, x2506, x0, 32);
    let x2509: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x2502, x2508, 64),
                    bigint_add!(
                        bigint_sub!(x2497, bigint_mul!(x2502, x2494, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x2510: BytePoly_66 = bigint_nondet_quot!(ctx, x2509, x0, 66);
    let x2511: BytePoly_32 = bigint_nondet_rem!(ctx, x2509, x0, 32);
    let x2512: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2505, bigint_mul!(x2507, x0, 98), 98),
                        x2494,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x2508,
        98
    );
    eqz(ctx, &x2512, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2510, x0, 98), x2511, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2502, bigint_sub!(x2494, x2508, 32), 64),
                        x2497,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x2513: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2511, 32), x0, 32);
    let x2514: BytePoly_32 = bigint_add!(bigint_sub!(x3, x2508, 32), x0, 32);
    let x2515: BytePoly_32 = bigint_nondet_inv!(ctx, x2514, x0, 32);
    let x2516: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2513, x2515, 64), x0, 32);
    let x2517: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x2516, x2514, 64), x2513, 64),
        x0,
        64
    );
    let x2518: BytePoly_66 = bigint_nondet_quot!(ctx, x2517, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x2517, bigint_mul!(x2518, x0, 98), 98),
        536459,
        4,
    )?;
    let x2519: BytePoly_64 = bigint_mul!(x2516, x2516, 64);
    let x2520: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2519, x2508, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x2521: BytePoly_66 = bigint_nondet_quot!(ctx, x2520, x0, 66);
    let x2522: BytePoly_32 = bigint_nondet_rem!(ctx, x2520, x0, 32);
    let x2523: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x2516, x2522, 64),
                    bigint_add!(
                        bigint_sub!(x2511, bigint_mul!(x2516, x2508, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x2524: BytePoly_66 = bigint_nondet_quot!(ctx, x2523, x0, 66);
    let x2525: BytePoly_32 = bigint_nondet_rem!(ctx, x2523, x0, 32);
    let x2526: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2519, bigint_mul!(x2521, x0, 98), 98),
                        x2508,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x2522,
        98
    );
    eqz(ctx, &x2526, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2524, x0, 98), x2525, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2516, bigint_sub!(x2508, x2522, 32), 64),
                        x2511,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x2527: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2525, 32), x0, 32);
    let x2528: BytePoly_32 = bigint_add!(bigint_sub!(x3, x2522, 32), x0, 32);
    let x2529: BytePoly_32 = bigint_nondet_inv!(ctx, x2528, x0, 32);
    let x2530: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2527, x2529, 64), x0, 32);
    let x2531: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x2530, x2528, 64), x2527, 64),
        x0,
        64
    );
    let x2532: BytePoly_66 = bigint_nondet_quot!(ctx, x2531, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x2531, bigint_mul!(x2532, x0, 98), 98),
        536459,
        4,
    )?;
    let x2533: BytePoly_64 = bigint_mul!(x2530, x2530, 64);
    let x2534: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2533, x2522, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x2535: BytePoly_66 = bigint_nondet_quot!(ctx, x2534, x0, 66);
    let x2536: BytePoly_32 = bigint_nondet_rem!(ctx, x2534, x0, 32);
    let x2537: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x2530, x2536, 64),
                    bigint_add!(
                        bigint_sub!(x2525, bigint_mul!(x2530, x2522, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x2538: BytePoly_66 = bigint_nondet_quot!(ctx, x2537, x0, 66);
    let x2539: BytePoly_32 = bigint_nondet_rem!(ctx, x2537, x0, 32);
    let x2540: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2533, bigint_mul!(x2535, x0, 98), 98),
                        x2522,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x2536,
        98
    );
    eqz(ctx, &x2540, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2538, x0, 98), x2539, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2530, bigint_sub!(x2522, x2536, 32), 64),
                        x2525,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x2541: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2539, 32), x0, 32);
    let x2542: BytePoly_32 = bigint_add!(bigint_sub!(x3, x2536, 32), x0, 32);
    let x2543: BytePoly_32 = bigint_nondet_inv!(ctx, x2542, x0, 32);
    let x2544: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2541, x2543, 64), x0, 32);
    let x2545: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x2544, x2542, 64), x2541, 64),
        x0,
        64
    );
    let x2546: BytePoly_66 = bigint_nondet_quot!(ctx, x2545, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x2545, bigint_mul!(x2546, x0, 98), 98),
        536459,
        4,
    )?;
    let x2547: BytePoly_64 = bigint_mul!(x2544, x2544, 64);
    let x2548: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2547, x2536, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x2549: BytePoly_66 = bigint_nondet_quot!(ctx, x2548, x0, 66);
    let x2550: BytePoly_32 = bigint_nondet_rem!(ctx, x2548, x0, 32);
    let x2551: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x2544, x2550, 64),
                    bigint_add!(
                        bigint_sub!(x2539, bigint_mul!(x2544, x2536, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x2552: BytePoly_66 = bigint_nondet_quot!(ctx, x2551, x0, 66);
    let x2553: BytePoly_32 = bigint_nondet_rem!(ctx, x2551, x0, 32);
    let x2554: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2547, bigint_mul!(x2549, x0, 98), 98),
                        x2536,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x2550,
        98
    );
    eqz(ctx, &x2554, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2552, x0, 98), x2553, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2544, bigint_sub!(x2536, x2550, 32), 64),
                        x2539,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x2555: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2553, 32), x0, 32);
    let x2556: BytePoly_32 = bigint_add!(bigint_sub!(x3, x2550, 32), x0, 32);
    let x2557: BytePoly_32 = bigint_nondet_inv!(ctx, x2556, x0, 32);
    let x2558: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2555, x2557, 64), x0, 32);
    let x2559: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x2558, x2556, 64), x2555, 64),
        x0,
        64
    );
    let x2560: BytePoly_66 = bigint_nondet_quot!(ctx, x2559, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x2559, bigint_mul!(x2560, x0, 98), 98),
        536459,
        4,
    )?;
    let x2561: BytePoly_64 = bigint_mul!(x2558, x2558, 64);
    let x2562: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2561, x2550, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x2563: BytePoly_66 = bigint_nondet_quot!(ctx, x2562, x0, 66);
    let x2564: BytePoly_32 = bigint_nondet_rem!(ctx, x2562, x0, 32);
    let x2565: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x2558, x2564, 64),
                    bigint_add!(
                        bigint_sub!(x2553, bigint_mul!(x2558, x2550, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x2566: BytePoly_66 = bigint_nondet_quot!(ctx, x2565, x0, 66);
    let x2567: BytePoly_32 = bigint_nondet_rem!(ctx, x2565, x0, 32);
    let x2568: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2561, bigint_mul!(x2563, x0, 98), 98),
                        x2550,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x2564,
        98
    );
    eqz(ctx, &x2568, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2566, x0, 98), x2567, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2558, bigint_sub!(x2550, x2564, 32), 64),
                        x2553,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x2569: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2567, 32), x0, 32);
    let x2570: BytePoly_32 = bigint_add!(bigint_sub!(x3, x2564, 32), x0, 32);
    let x2571: BytePoly_32 = bigint_nondet_inv!(ctx, x2570, x0, 32);
    let x2572: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2569, x2571, 64), x0, 32);
    let x2573: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x2572, x2570, 64), x2569, 64),
        x0,
        64
    );
    let x2574: BytePoly_66 = bigint_nondet_quot!(ctx, x2573, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x2573, bigint_mul!(x2574, x0, 98), 98),
        536459,
        4,
    )?;
    let x2575: BytePoly_64 = bigint_mul!(x2572, x2572, 64);
    let x2576: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2575, x2564, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x2577: BytePoly_66 = bigint_nondet_quot!(ctx, x2576, x0, 66);
    let x2578: BytePoly_32 = bigint_nondet_rem!(ctx, x2576, x0, 32);
    let x2579: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x2572, x2578, 64),
                    bigint_add!(
                        bigint_sub!(x2567, bigint_mul!(x2572, x2564, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x2580: BytePoly_66 = bigint_nondet_quot!(ctx, x2579, x0, 66);
    let x2581: BytePoly_32 = bigint_nondet_rem!(ctx, x2579, x0, 32);
    let x2582: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2575, bigint_mul!(x2577, x0, 98), 98),
                        x2564,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x2578,
        98
    );
    eqz(ctx, &x2582, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2580, x0, 98), x2581, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2572, bigint_sub!(x2564, x2578, 32), 64),
                        x2567,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x2583: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2581, 32), x0, 32);
    let x2584: BytePoly_32 = bigint_add!(bigint_sub!(x3, x2578, 32), x0, 32);
    let x2585: BytePoly_32 = bigint_nondet_inv!(ctx, x2584, x0, 32);
    let x2586: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2583, x2585, 64), x0, 32);
    let x2587: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x2586, x2584, 64), x2583, 64),
        x0,
        64
    );
    let x2588: BytePoly_66 = bigint_nondet_quot!(ctx, x2587, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x2587, bigint_mul!(x2588, x0, 98), 98),
        536459,
        4,
    )?;
    let x2589: BytePoly_64 = bigint_mul!(x2586, x2586, 64);
    let x2590: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2589, x2578, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x2591: BytePoly_66 = bigint_nondet_quot!(ctx, x2590, x0, 66);
    let x2592: BytePoly_32 = bigint_nondet_rem!(ctx, x2590, x0, 32);
    let x2593: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x2586, x2592, 64),
                    bigint_add!(
                        bigint_sub!(x2581, bigint_mul!(x2586, x2578, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x2594: BytePoly_66 = bigint_nondet_quot!(ctx, x2593, x0, 66);
    let x2595: BytePoly_32 = bigint_nondet_rem!(ctx, x2593, x0, 32);
    let x2596: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2589, bigint_mul!(x2591, x0, 98), 98),
                        x2578,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x2592,
        98
    );
    eqz(ctx, &x2596, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2594, x0, 98), x2595, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2586, bigint_sub!(x2578, x2592, 32), 64),
                        x2581,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x2597: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2595, 32), x0, 32);
    let x2598: BytePoly_32 = bigint_add!(bigint_sub!(x3, x2592, 32), x0, 32);
    let x2599: BytePoly_32 = bigint_nondet_inv!(ctx, x2598, x0, 32);
    let x2600: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2597, x2599, 64), x0, 32);
    let x2601: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x2600, x2598, 64), x2597, 64),
        x0,
        64
    );
    let x2602: BytePoly_66 = bigint_nondet_quot!(ctx, x2601, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x2601, bigint_mul!(x2602, x0, 98), 98),
        536459,
        4,
    )?;
    let x2603: BytePoly_64 = bigint_mul!(x2600, x2600, 64);
    let x2604: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2603, x2592, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x2605: BytePoly_66 = bigint_nondet_quot!(ctx, x2604, x0, 66);
    let x2606: BytePoly_32 = bigint_nondet_rem!(ctx, x2604, x0, 32);
    let x2607: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x2600, x2606, 64),
                    bigint_add!(
                        bigint_sub!(x2595, bigint_mul!(x2600, x2592, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x2608: BytePoly_66 = bigint_nondet_quot!(ctx, x2607, x0, 66);
    let x2609: BytePoly_32 = bigint_nondet_rem!(ctx, x2607, x0, 32);
    let x2610: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2603, bigint_mul!(x2605, x0, 98), 98),
                        x2592,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x2606,
        98
    );
    eqz(ctx, &x2610, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2608, x0, 98), x2609, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2600, bigint_sub!(x2592, x2606, 32), 64),
                        x2595,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x2611: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2609, 32), x0, 32);
    let x2612: BytePoly_32 = bigint_add!(bigint_sub!(x3, x2606, 32), x0, 32);
    let x2613: BytePoly_32 = bigint_nondet_inv!(ctx, x2612, x0, 32);
    let x2614: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2611, x2613, 64), x0, 32);
    let x2615: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x2614, x2612, 64), x2611, 64),
        x0,
        64
    );
    let x2616: BytePoly_66 = bigint_nondet_quot!(ctx, x2615, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x2615, bigint_mul!(x2616, x0, 98), 98),
        536459,
        4,
    )?;
    let x2617: BytePoly_64 = bigint_mul!(x2614, x2614, 64);
    let x2618: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2617, x2606, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x2619: BytePoly_66 = bigint_nondet_quot!(ctx, x2618, x0, 66);
    let x2620: BytePoly_32 = bigint_nondet_rem!(ctx, x2618, x0, 32);
    let x2621: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x2614, x2620, 64),
                    bigint_add!(
                        bigint_sub!(x2609, bigint_mul!(x2614, x2606, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x2622: BytePoly_66 = bigint_nondet_quot!(ctx, x2621, x0, 66);
    let x2623: BytePoly_32 = bigint_nondet_rem!(ctx, x2621, x0, 32);
    let x2624: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2617, bigint_mul!(x2619, x0, 98), 98),
                        x2606,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x2620,
        98
    );
    eqz(ctx, &x2624, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2622, x0, 98), x2623, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2614, bigint_sub!(x2606, x2620, 32), 64),
                        x2609,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x2625: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2623, 32), x0, 32);
    let x2626: BytePoly_32 = bigint_add!(bigint_sub!(x3, x2620, 32), x0, 32);
    let x2627: BytePoly_32 = bigint_nondet_inv!(ctx, x2626, x0, 32);
    let x2628: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2625, x2627, 64), x0, 32);
    let x2629: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x2628, x2626, 64), x2625, 64),
        x0,
        64
    );
    let x2630: BytePoly_66 = bigint_nondet_quot!(ctx, x2629, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x2629, bigint_mul!(x2630, x0, 98), 98),
        536459,
        4,
    )?;
    let x2631: BytePoly_64 = bigint_mul!(x2628, x2628, 64);
    let x2632: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2631, x2620, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x2633: BytePoly_66 = bigint_nondet_quot!(ctx, x2632, x0, 66);
    let x2634: BytePoly_32 = bigint_nondet_rem!(ctx, x2632, x0, 32);
    let x2635: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x2628, x2634, 64),
                    bigint_add!(
                        bigint_sub!(x2623, bigint_mul!(x2628, x2620, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x2636: BytePoly_66 = bigint_nondet_quot!(ctx, x2635, x0, 66);
    let x2637: BytePoly_32 = bigint_nondet_rem!(ctx, x2635, x0, 32);
    let x2638: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2631, bigint_mul!(x2633, x0, 98), 98),
                        x2620,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x2634,
        98
    );
    eqz(ctx, &x2638, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2636, x0, 98), x2637, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2628, bigint_sub!(x2620, x2634, 32), 64),
                        x2623,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x2639: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2637, 32), x0, 32);
    let x2640: BytePoly_32 = bigint_add!(bigint_sub!(x3, x2634, 32), x0, 32);
    let x2641: BytePoly_32 = bigint_nondet_inv!(ctx, x2640, x0, 32);
    let x2642: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2639, x2641, 64), x0, 32);
    let x2643: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x2642, x2640, 64), x2639, 64),
        x0,
        64
    );
    let x2644: BytePoly_66 = bigint_nondet_quot!(ctx, x2643, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x2643, bigint_mul!(x2644, x0, 98), 98),
        536459,
        4,
    )?;
    let x2645: BytePoly_64 = bigint_mul!(x2642, x2642, 64);
    let x2646: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2645, x2634, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x2647: BytePoly_66 = bigint_nondet_quot!(ctx, x2646, x0, 66);
    let x2648: BytePoly_32 = bigint_nondet_rem!(ctx, x2646, x0, 32);
    let x2649: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x2642, x2648, 64),
                    bigint_add!(
                        bigint_sub!(x2637, bigint_mul!(x2642, x2634, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x2650: BytePoly_66 = bigint_nondet_quot!(ctx, x2649, x0, 66);
    let x2651: BytePoly_32 = bigint_nondet_rem!(ctx, x2649, x0, 32);
    let x2652: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2645, bigint_mul!(x2647, x0, 98), 98),
                        x2634,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x2648,
        98
    );
    eqz(ctx, &x2652, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2650, x0, 98), x2651, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2642, bigint_sub!(x2634, x2648, 32), 64),
                        x2637,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x2653: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2651, 32), x0, 32);
    let x2654: BytePoly_32 = bigint_add!(bigint_sub!(x3, x2648, 32), x0, 32);
    let x2655: BytePoly_32 = bigint_nondet_inv!(ctx, x2654, x0, 32);
    let x2656: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2653, x2655, 64), x0, 32);
    let x2657: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x2656, x2654, 64), x2653, 64),
        x0,
        64
    );
    let x2658: BytePoly_66 = bigint_nondet_quot!(ctx, x2657, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x2657, bigint_mul!(x2658, x0, 98), 98),
        536459,
        4,
    )?;
    let x2659: BytePoly_64 = bigint_mul!(x2656, x2656, 64);
    let x2660: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2659, x2648, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x2661: BytePoly_66 = bigint_nondet_quot!(ctx, x2660, x0, 66);
    let x2662: BytePoly_32 = bigint_nondet_rem!(ctx, x2660, x0, 32);
    let x2663: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x2656, x2662, 64),
                    bigint_add!(
                        bigint_sub!(x2651, bigint_mul!(x2656, x2648, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x2664: BytePoly_66 = bigint_nondet_quot!(ctx, x2663, x0, 66);
    let x2665: BytePoly_32 = bigint_nondet_rem!(ctx, x2663, x0, 32);
    let x2666: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2659, bigint_mul!(x2661, x0, 98), 98),
                        x2648,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x2662,
        98
    );
    eqz(ctx, &x2666, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2664, x0, 98), x2665, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2656, bigint_sub!(x2648, x2662, 32), 64),
                        x2651,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x2667: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2665, 32), x0, 32);
    let x2668: BytePoly_32 = bigint_add!(bigint_sub!(x3, x2662, 32), x0, 32);
    let x2669: BytePoly_32 = bigint_nondet_inv!(ctx, x2668, x0, 32);
    let x2670: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2667, x2669, 64), x0, 32);
    let x2671: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x2670, x2668, 64), x2667, 64),
        x0,
        64
    );
    let x2672: BytePoly_66 = bigint_nondet_quot!(ctx, x2671, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x2671, bigint_mul!(x2672, x0, 98), 98),
        536459,
        4,
    )?;
    let x2673: BytePoly_64 = bigint_mul!(x2670, x2670, 64);
    let x2674: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2673, x2662, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x2675: BytePoly_66 = bigint_nondet_quot!(ctx, x2674, x0, 66);
    let x2676: BytePoly_32 = bigint_nondet_rem!(ctx, x2674, x0, 32);
    let x2677: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x2670, x2676, 64),
                    bigint_add!(
                        bigint_sub!(x2665, bigint_mul!(x2670, x2662, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x2678: BytePoly_66 = bigint_nondet_quot!(ctx, x2677, x0, 66);
    let x2679: BytePoly_32 = bigint_nondet_rem!(ctx, x2677, x0, 32);
    let x2680: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2673, bigint_mul!(x2675, x0, 98), 98),
                        x2662,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x2676,
        98
    );
    eqz(ctx, &x2680, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2678, x0, 98), x2679, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2670, bigint_sub!(x2662, x2676, 32), 64),
                        x2665,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x2681: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2679, 32), x0, 32);
    let x2682: BytePoly_32 = bigint_add!(bigint_sub!(x3, x2676, 32), x0, 32);
    let x2683: BytePoly_32 = bigint_nondet_inv!(ctx, x2682, x0, 32);
    let x2684: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2681, x2683, 64), x0, 32);
    let x2685: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x2684, x2682, 64), x2681, 64),
        x0,
        64
    );
    let x2686: BytePoly_66 = bigint_nondet_quot!(ctx, x2685, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x2685, bigint_mul!(x2686, x0, 98), 98),
        536459,
        4,
    )?;
    let x2687: BytePoly_64 = bigint_mul!(x2684, x2684, 64);
    let x2688: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2687, x2676, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x2689: BytePoly_66 = bigint_nondet_quot!(ctx, x2688, x0, 66);
    let x2690: BytePoly_32 = bigint_nondet_rem!(ctx, x2688, x0, 32);
    let x2691: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x2684, x2690, 64),
                    bigint_add!(
                        bigint_sub!(x2679, bigint_mul!(x2684, x2676, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x2692: BytePoly_66 = bigint_nondet_quot!(ctx, x2691, x0, 66);
    let x2693: BytePoly_32 = bigint_nondet_rem!(ctx, x2691, x0, 32);
    let x2694: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2687, bigint_mul!(x2689, x0, 98), 98),
                        x2676,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x2690,
        98
    );
    eqz(ctx, &x2694, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2692, x0, 98), x2693, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2684, bigint_sub!(x2676, x2690, 32), 64),
                        x2679,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x2695: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2693, 32), x0, 32);
    let x2696: BytePoly_32 = bigint_add!(bigint_sub!(x3, x2690, 32), x0, 32);
    let x2697: BytePoly_32 = bigint_nondet_inv!(ctx, x2696, x0, 32);
    let x2698: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2695, x2697, 64), x0, 32);
    let x2699: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x2698, x2696, 64), x2695, 64),
        x0,
        64
    );
    let x2700: BytePoly_66 = bigint_nondet_quot!(ctx, x2699, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x2699, bigint_mul!(x2700, x0, 98), 98),
        536459,
        4,
    )?;
    let x2701: BytePoly_64 = bigint_mul!(x2698, x2698, 64);
    let x2702: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2701, x2690, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x2703: BytePoly_66 = bigint_nondet_quot!(ctx, x2702, x0, 66);
    let x2704: BytePoly_32 = bigint_nondet_rem!(ctx, x2702, x0, 32);
    let x2705: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x2698, x2704, 64),
                    bigint_add!(
                        bigint_sub!(x2693, bigint_mul!(x2698, x2690, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x2706: BytePoly_66 = bigint_nondet_quot!(ctx, x2705, x0, 66);
    let x2707: BytePoly_32 = bigint_nondet_rem!(ctx, x2705, x0, 32);
    let x2708: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2701, bigint_mul!(x2703, x0, 98), 98),
                        x2690,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x2704,
        98
    );
    eqz(ctx, &x2708, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2706, x0, 98), x2707, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2698, bigint_sub!(x2690, x2704, 32), 64),
                        x2693,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x2709: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2707, 32), x0, 32);
    let x2710: BytePoly_32 = bigint_add!(bigint_sub!(x3, x2704, 32), x0, 32);
    let x2711: BytePoly_32 = bigint_nondet_inv!(ctx, x2710, x0, 32);
    let x2712: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2709, x2711, 64), x0, 32);
    let x2713: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x2712, x2710, 64), x2709, 64),
        x0,
        64
    );
    let x2714: BytePoly_66 = bigint_nondet_quot!(ctx, x2713, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x2713, bigint_mul!(x2714, x0, 98), 98),
        536459,
        4,
    )?;
    let x2715: BytePoly_64 = bigint_mul!(x2712, x2712, 64);
    let x2716: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2715, x2704, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x2717: BytePoly_66 = bigint_nondet_quot!(ctx, x2716, x0, 66);
    let x2718: BytePoly_32 = bigint_nondet_rem!(ctx, x2716, x0, 32);
    let x2719: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x2712, x2718, 64),
                    bigint_add!(
                        bigint_sub!(x2707, bigint_mul!(x2712, x2704, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x2720: BytePoly_66 = bigint_nondet_quot!(ctx, x2719, x0, 66);
    let x2721: BytePoly_32 = bigint_nondet_rem!(ctx, x2719, x0, 32);
    let x2722: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2715, bigint_mul!(x2717, x0, 98), 98),
                        x2704,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x2718,
        98
    );
    eqz(ctx, &x2722, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2720, x0, 98), x2721, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2712, bigint_sub!(x2704, x2718, 32), 64),
                        x2707,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x2723: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2721, 32), x0, 32);
    let x2724: BytePoly_32 = bigint_add!(bigint_sub!(x3, x2718, 32), x0, 32);
    let x2725: BytePoly_32 = bigint_nondet_inv!(ctx, x2724, x0, 32);
    let x2726: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2723, x2725, 64), x0, 32);
    let x2727: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x2726, x2724, 64), x2723, 64),
        x0,
        64
    );
    let x2728: BytePoly_66 = bigint_nondet_quot!(ctx, x2727, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x2727, bigint_mul!(x2728, x0, 98), 98),
        536459,
        4,
    )?;
    let x2729: BytePoly_64 = bigint_mul!(x2726, x2726, 64);
    let x2730: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2729, x2718, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x2731: BytePoly_66 = bigint_nondet_quot!(ctx, x2730, x0, 66);
    let x2732: BytePoly_32 = bigint_nondet_rem!(ctx, x2730, x0, 32);
    let x2733: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x2726, x2732, 64),
                    bigint_add!(
                        bigint_sub!(x2721, bigint_mul!(x2726, x2718, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x2734: BytePoly_66 = bigint_nondet_quot!(ctx, x2733, x0, 66);
    let x2735: BytePoly_32 = bigint_nondet_rem!(ctx, x2733, x0, 32);
    let x2736: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2729, bigint_mul!(x2731, x0, 98), 98),
                        x2718,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x2732,
        98
    );
    eqz(ctx, &x2736, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2734, x0, 98), x2735, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2726, bigint_sub!(x2718, x2732, 32), 64),
                        x2721,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x2737: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2735, 32), x0, 32);
    let x2738: BytePoly_32 = bigint_add!(bigint_sub!(x3, x2732, 32), x0, 32);
    let x2739: BytePoly_32 = bigint_nondet_inv!(ctx, x2738, x0, 32);
    let x2740: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2737, x2739, 64), x0, 32);
    let x2741: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x2740, x2738, 64), x2737, 64),
        x0,
        64
    );
    let x2742: BytePoly_66 = bigint_nondet_quot!(ctx, x2741, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x2741, bigint_mul!(x2742, x0, 98), 98),
        536459,
        4,
    )?;
    let x2743: BytePoly_64 = bigint_mul!(x2740, x2740, 64);
    let x2744: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2743, x2732, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x2745: BytePoly_66 = bigint_nondet_quot!(ctx, x2744, x0, 66);
    let x2746: BytePoly_32 = bigint_nondet_rem!(ctx, x2744, x0, 32);
    let x2747: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x2740, x2746, 64),
                    bigint_add!(
                        bigint_sub!(x2735, bigint_mul!(x2740, x2732, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x2748: BytePoly_66 = bigint_nondet_quot!(ctx, x2747, x0, 66);
    let x2749: BytePoly_32 = bigint_nondet_rem!(ctx, x2747, x0, 32);
    let x2750: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2743, bigint_mul!(x2745, x0, 98), 98),
                        x2732,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x2746,
        98
    );
    eqz(ctx, &x2750, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2748, x0, 98), x2749, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2740, bigint_sub!(x2732, x2746, 32), 64),
                        x2735,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x2751: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2749, 32), x0, 32);
    let x2752: BytePoly_32 = bigint_add!(bigint_sub!(x3, x2746, 32), x0, 32);
    let x2753: BytePoly_32 = bigint_nondet_inv!(ctx, x2752, x0, 32);
    let x2754: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2751, x2753, 64), x0, 32);
    let x2755: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x2754, x2752, 64), x2751, 64),
        x0,
        64
    );
    let x2756: BytePoly_66 = bigint_nondet_quot!(ctx, x2755, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x2755, bigint_mul!(x2756, x0, 98), 98),
        536459,
        4,
    )?;
    let x2757: BytePoly_64 = bigint_mul!(x2754, x2754, 64);
    let x2758: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2757, x2746, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x2759: BytePoly_66 = bigint_nondet_quot!(ctx, x2758, x0, 66);
    let x2760: BytePoly_32 = bigint_nondet_rem!(ctx, x2758, x0, 32);
    let x2761: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x2754, x2760, 64),
                    bigint_add!(
                        bigint_sub!(x2749, bigint_mul!(x2754, x2746, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x2762: BytePoly_66 = bigint_nondet_quot!(ctx, x2761, x0, 66);
    let x2763: BytePoly_32 = bigint_nondet_rem!(ctx, x2761, x0, 32);
    let x2764: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2757, bigint_mul!(x2759, x0, 98), 98),
                        x2746,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x2760,
        98
    );
    eqz(ctx, &x2764, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2762, x0, 98), x2763, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2754, bigint_sub!(x2746, x2760, 32), 64),
                        x2749,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x2765: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2763, 32), x0, 32);
    let x2766: BytePoly_32 = bigint_add!(bigint_sub!(x3, x2760, 32), x0, 32);
    let x2767: BytePoly_32 = bigint_nondet_inv!(ctx, x2766, x0, 32);
    let x2768: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2765, x2767, 64), x0, 32);
    let x2769: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x2768, x2766, 64), x2765, 64),
        x0,
        64
    );
    let x2770: BytePoly_66 = bigint_nondet_quot!(ctx, x2769, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x2769, bigint_mul!(x2770, x0, 98), 98),
        536459,
        4,
    )?;
    let x2771: BytePoly_64 = bigint_mul!(x2768, x2768, 64);
    let x2772: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2771, x2760, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x2773: BytePoly_66 = bigint_nondet_quot!(ctx, x2772, x0, 66);
    let x2774: BytePoly_32 = bigint_nondet_rem!(ctx, x2772, x0, 32);
    let x2775: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x2768, x2774, 64),
                    bigint_add!(
                        bigint_sub!(x2763, bigint_mul!(x2768, x2760, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x2776: BytePoly_66 = bigint_nondet_quot!(ctx, x2775, x0, 66);
    let x2777: BytePoly_32 = bigint_nondet_rem!(ctx, x2775, x0, 32);
    let x2778: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2771, bigint_mul!(x2773, x0, 98), 98),
                        x2760,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x2774,
        98
    );
    eqz(ctx, &x2778, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2776, x0, 98), x2777, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2768, bigint_sub!(x2760, x2774, 32), 64),
                        x2763,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x2779: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2777, 32), x0, 32);
    let x2780: BytePoly_32 = bigint_add!(bigint_sub!(x3, x2774, 32), x0, 32);
    let x2781: BytePoly_32 = bigint_nondet_inv!(ctx, x2780, x0, 32);
    let x2782: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2779, x2781, 64), x0, 32);
    let x2783: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x2782, x2780, 64), x2779, 64),
        x0,
        64
    );
    let x2784: BytePoly_66 = bigint_nondet_quot!(ctx, x2783, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x2783, bigint_mul!(x2784, x0, 98), 98),
        536459,
        4,
    )?;
    let x2785: BytePoly_64 = bigint_mul!(x2782, x2782, 64);
    let x2786: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2785, x2774, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x2787: BytePoly_66 = bigint_nondet_quot!(ctx, x2786, x0, 66);
    let x2788: BytePoly_32 = bigint_nondet_rem!(ctx, x2786, x0, 32);
    let x2789: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x2782, x2788, 64),
                    bigint_add!(
                        bigint_sub!(x2777, bigint_mul!(x2782, x2774, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x2790: BytePoly_66 = bigint_nondet_quot!(ctx, x2789, x0, 66);
    let x2791: BytePoly_32 = bigint_nondet_rem!(ctx, x2789, x0, 32);
    let x2792: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2785, bigint_mul!(x2787, x0, 98), 98),
                        x2774,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x2788,
        98
    );
    eqz(ctx, &x2792, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2790, x0, 98), x2791, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2782, bigint_sub!(x2774, x2788, 32), 64),
                        x2777,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x2793: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2791, 32), x0, 32);
    let x2794: BytePoly_32 = bigint_add!(bigint_sub!(x3, x2788, 32), x0, 32);
    let x2795: BytePoly_32 = bigint_nondet_inv!(ctx, x2794, x0, 32);
    let x2796: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2793, x2795, 64), x0, 32);
    let x2797: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x2796, x2794, 64), x2793, 64),
        x0,
        64
    );
    let x2798: BytePoly_66 = bigint_nondet_quot!(ctx, x2797, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x2797, bigint_mul!(x2798, x0, 98), 98),
        536459,
        4,
    )?;
    let x2799: BytePoly_64 = bigint_mul!(x2796, x2796, 64);
    let x2800: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2799, x2788, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x2801: BytePoly_66 = bigint_nondet_quot!(ctx, x2800, x0, 66);
    let x2802: BytePoly_32 = bigint_nondet_rem!(ctx, x2800, x0, 32);
    let x2803: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x2796, x2802, 64),
                    bigint_add!(
                        bigint_sub!(x2791, bigint_mul!(x2796, x2788, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x2804: BytePoly_66 = bigint_nondet_quot!(ctx, x2803, x0, 66);
    let x2805: BytePoly_32 = bigint_nondet_rem!(ctx, x2803, x0, 32);
    let x2806: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2799, bigint_mul!(x2801, x0, 98), 98),
                        x2788,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x2802,
        98
    );
    eqz(ctx, &x2806, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2804, x0, 98), x2805, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2796, bigint_sub!(x2788, x2802, 32), 64),
                        x2791,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x2807: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2805, 32), x0, 32);
    let x2808: BytePoly_32 = bigint_add!(bigint_sub!(x3, x2802, 32), x0, 32);
    let x2809: BytePoly_32 = bigint_nondet_inv!(ctx, x2808, x0, 32);
    let x2810: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2807, x2809, 64), x0, 32);
    let x2811: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x2810, x2808, 64), x2807, 64),
        x0,
        64
    );
    let x2812: BytePoly_66 = bigint_nondet_quot!(ctx, x2811, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x2811, bigint_mul!(x2812, x0, 98), 98),
        536459,
        4,
    )?;
    let x2813: BytePoly_64 = bigint_mul!(x2810, x2810, 64);
    let x2814: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2813, x2802, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x2815: BytePoly_66 = bigint_nondet_quot!(ctx, x2814, x0, 66);
    let x2816: BytePoly_32 = bigint_nondet_rem!(ctx, x2814, x0, 32);
    let x2817: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x2810, x2816, 64),
                    bigint_add!(
                        bigint_sub!(x2805, bigint_mul!(x2810, x2802, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x2818: BytePoly_66 = bigint_nondet_quot!(ctx, x2817, x0, 66);
    let x2819: BytePoly_32 = bigint_nondet_rem!(ctx, x2817, x0, 32);
    let x2820: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2813, bigint_mul!(x2815, x0, 98), 98),
                        x2802,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x2816,
        98
    );
    eqz(ctx, &x2820, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2818, x0, 98), x2819, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2810, bigint_sub!(x2802, x2816, 32), 64),
                        x2805,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x2821: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2819, 32), x0, 32);
    let x2822: BytePoly_32 = bigint_add!(bigint_sub!(x3, x2816, 32), x0, 32);
    let x2823: BytePoly_32 = bigint_nondet_inv!(ctx, x2822, x0, 32);
    let x2824: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2821, x2823, 64), x0, 32);
    let x2825: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x2824, x2822, 64), x2821, 64),
        x0,
        64
    );
    let x2826: BytePoly_66 = bigint_nondet_quot!(ctx, x2825, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x2825, bigint_mul!(x2826, x0, 98), 98),
        536459,
        4,
    )?;
    let x2827: BytePoly_64 = bigint_mul!(x2824, x2824, 64);
    let x2828: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2827, x2816, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x2829: BytePoly_66 = bigint_nondet_quot!(ctx, x2828, x0, 66);
    let x2830: BytePoly_32 = bigint_nondet_rem!(ctx, x2828, x0, 32);
    let x2831: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x2824, x2830, 64),
                    bigint_add!(
                        bigint_sub!(x2819, bigint_mul!(x2824, x2816, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x2832: BytePoly_66 = bigint_nondet_quot!(ctx, x2831, x0, 66);
    let x2833: BytePoly_32 = bigint_nondet_rem!(ctx, x2831, x0, 32);
    let x2834: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2827, bigint_mul!(x2829, x0, 98), 98),
                        x2816,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x2830,
        98
    );
    eqz(ctx, &x2834, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2832, x0, 98), x2833, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2824, bigint_sub!(x2816, x2830, 32), 64),
                        x2819,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x2835: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2833, 32), x0, 32);
    let x2836: BytePoly_32 = bigint_add!(bigint_sub!(x3, x2830, 32), x0, 32);
    let x2837: BytePoly_32 = bigint_nondet_inv!(ctx, x2836, x0, 32);
    let x2838: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2835, x2837, 64), x0, 32);
    let x2839: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x2838, x2836, 64), x2835, 64),
        x0,
        64
    );
    let x2840: BytePoly_66 = bigint_nondet_quot!(ctx, x2839, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x2839, bigint_mul!(x2840, x0, 98), 98),
        536459,
        4,
    )?;
    let x2841: BytePoly_64 = bigint_mul!(x2838, x2838, 64);
    let x2842: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2841, x2830, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x2843: BytePoly_66 = bigint_nondet_quot!(ctx, x2842, x0, 66);
    let x2844: BytePoly_32 = bigint_nondet_rem!(ctx, x2842, x0, 32);
    let x2845: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x2838, x2844, 64),
                    bigint_add!(
                        bigint_sub!(x2833, bigint_mul!(x2838, x2830, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x2846: BytePoly_66 = bigint_nondet_quot!(ctx, x2845, x0, 66);
    let x2847: BytePoly_32 = bigint_nondet_rem!(ctx, x2845, x0, 32);
    let x2848: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2841, bigint_mul!(x2843, x0, 98), 98),
                        x2830,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x2844,
        98
    );
    eqz(ctx, &x2848, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2846, x0, 98), x2847, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2838, bigint_sub!(x2830, x2844, 32), 64),
                        x2833,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x2849: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2847, 32), x0, 32);
    let x2850: BytePoly_32 = bigint_add!(bigint_sub!(x3, x2844, 32), x0, 32);
    let x2851: BytePoly_32 = bigint_nondet_inv!(ctx, x2850, x0, 32);
    let x2852: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2849, x2851, 64), x0, 32);
    let x2853: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x2852, x2850, 64), x2849, 64),
        x0,
        64
    );
    let x2854: BytePoly_66 = bigint_nondet_quot!(ctx, x2853, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x2853, bigint_mul!(x2854, x0, 98), 98),
        536459,
        4,
    )?;
    let x2855: BytePoly_64 = bigint_mul!(x2852, x2852, 64);
    let x2856: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2855, x2844, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x2857: BytePoly_66 = bigint_nondet_quot!(ctx, x2856, x0, 66);
    let x2858: BytePoly_32 = bigint_nondet_rem!(ctx, x2856, x0, 32);
    let x2859: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x2852, x2858, 64),
                    bigint_add!(
                        bigint_sub!(x2847, bigint_mul!(x2852, x2844, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x2860: BytePoly_66 = bigint_nondet_quot!(ctx, x2859, x0, 66);
    let x2861: BytePoly_32 = bigint_nondet_rem!(ctx, x2859, x0, 32);
    let x2862: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2855, bigint_mul!(x2857, x0, 98), 98),
                        x2844,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x2858,
        98
    );
    eqz(ctx, &x2862, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2860, x0, 98), x2861, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2852, bigint_sub!(x2844, x2858, 32), 64),
                        x2847,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x2863: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2861, 32), x0, 32);
    let x2864: BytePoly_32 = bigint_add!(bigint_sub!(x3, x2858, 32), x0, 32);
    let x2865: BytePoly_32 = bigint_nondet_inv!(ctx, x2864, x0, 32);
    let x2866: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2863, x2865, 64), x0, 32);
    let x2867: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x2866, x2864, 64), x2863, 64),
        x0,
        64
    );
    let x2868: BytePoly_66 = bigint_nondet_quot!(ctx, x2867, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x2867, bigint_mul!(x2868, x0, 98), 98),
        536459,
        4,
    )?;
    let x2869: BytePoly_64 = bigint_mul!(x2866, x2866, 64);
    let x2870: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2869, x2858, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x2871: BytePoly_66 = bigint_nondet_quot!(ctx, x2870, x0, 66);
    let x2872: BytePoly_32 = bigint_nondet_rem!(ctx, x2870, x0, 32);
    let x2873: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x2866, x2872, 64),
                    bigint_add!(
                        bigint_sub!(x2861, bigint_mul!(x2866, x2858, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x2874: BytePoly_66 = bigint_nondet_quot!(ctx, x2873, x0, 66);
    let x2875: BytePoly_32 = bigint_nondet_rem!(ctx, x2873, x0, 32);
    let x2876: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2869, bigint_mul!(x2871, x0, 98), 98),
                        x2858,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x2872,
        98
    );
    eqz(ctx, &x2876, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2874, x0, 98), x2875, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2866, bigint_sub!(x2858, x2872, 32), 64),
                        x2861,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x2877: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2875, 32), x0, 32);
    let x2878: BytePoly_32 = bigint_add!(bigint_sub!(x3, x2872, 32), x0, 32);
    let x2879: BytePoly_32 = bigint_nondet_inv!(ctx, x2878, x0, 32);
    let x2880: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2877, x2879, 64), x0, 32);
    let x2881: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x2880, x2878, 64), x2877, 64),
        x0,
        64
    );
    let x2882: BytePoly_66 = bigint_nondet_quot!(ctx, x2881, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x2881, bigint_mul!(x2882, x0, 98), 98),
        536459,
        4,
    )?;
    let x2883: BytePoly_64 = bigint_mul!(x2880, x2880, 64);
    let x2884: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2883, x2872, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x2885: BytePoly_66 = bigint_nondet_quot!(ctx, x2884, x0, 66);
    let x2886: BytePoly_32 = bigint_nondet_rem!(ctx, x2884, x0, 32);
    let x2887: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x2880, x2886, 64),
                    bigint_add!(
                        bigint_sub!(x2875, bigint_mul!(x2880, x2872, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x2888: BytePoly_66 = bigint_nondet_quot!(ctx, x2887, x0, 66);
    let x2889: BytePoly_32 = bigint_nondet_rem!(ctx, x2887, x0, 32);
    let x2890: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2883, bigint_mul!(x2885, x0, 98), 98),
                        x2872,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x2886,
        98
    );
    eqz(ctx, &x2890, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2888, x0, 98), x2889, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2880, bigint_sub!(x2872, x2886, 32), 64),
                        x2875,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x2891: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2889, 32), x0, 32);
    let x2892: BytePoly_32 = bigint_add!(bigint_sub!(x3, x2886, 32), x0, 32);
    let x2893: BytePoly_32 = bigint_nondet_inv!(ctx, x2892, x0, 32);
    let x2894: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2891, x2893, 64), x0, 32);
    let x2895: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x2894, x2892, 64), x2891, 64),
        x0,
        64
    );
    let x2896: BytePoly_66 = bigint_nondet_quot!(ctx, x2895, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x2895, bigint_mul!(x2896, x0, 98), 98),
        536459,
        4,
    )?;
    let x2897: BytePoly_64 = bigint_mul!(x2894, x2894, 64);
    let x2898: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2897, x2886, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x2899: BytePoly_66 = bigint_nondet_quot!(ctx, x2898, x0, 66);
    let x2900: BytePoly_32 = bigint_nondet_rem!(ctx, x2898, x0, 32);
    let x2901: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x2894, x2900, 64),
                    bigint_add!(
                        bigint_sub!(x2889, bigint_mul!(x2894, x2886, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x2902: BytePoly_66 = bigint_nondet_quot!(ctx, x2901, x0, 66);
    let x2903: BytePoly_32 = bigint_nondet_rem!(ctx, x2901, x0, 32);
    let x2904: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2897, bigint_mul!(x2899, x0, 98), 98),
                        x2886,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x2900,
        98
    );
    eqz(ctx, &x2904, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2902, x0, 98), x2903, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2894, bigint_sub!(x2886, x2900, 32), 64),
                        x2889,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x2905: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2903, 32), x0, 32);
    let x2906: BytePoly_32 = bigint_add!(bigint_sub!(x3, x2900, 32), x0, 32);
    let x2907: BytePoly_32 = bigint_nondet_inv!(ctx, x2906, x0, 32);
    let x2908: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2905, x2907, 64), x0, 32);
    let x2909: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x2908, x2906, 64), x2905, 64),
        x0,
        64
    );
    let x2910: BytePoly_66 = bigint_nondet_quot!(ctx, x2909, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x2909, bigint_mul!(x2910, x0, 98), 98),
        536459,
        4,
    )?;
    let x2911: BytePoly_64 = bigint_mul!(x2908, x2908, 64);
    let x2912: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2911, x2900, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x2913: BytePoly_66 = bigint_nondet_quot!(ctx, x2912, x0, 66);
    let x2914: BytePoly_32 = bigint_nondet_rem!(ctx, x2912, x0, 32);
    let x2915: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x2908, x2914, 64),
                    bigint_add!(
                        bigint_sub!(x2903, bigint_mul!(x2908, x2900, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x2916: BytePoly_66 = bigint_nondet_quot!(ctx, x2915, x0, 66);
    let x2917: BytePoly_32 = bigint_nondet_rem!(ctx, x2915, x0, 32);
    let x2918: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2911, bigint_mul!(x2913, x0, 98), 98),
                        x2900,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x2914,
        98
    );
    eqz(ctx, &x2918, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2916, x0, 98), x2917, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2908, bigint_sub!(x2900, x2914, 32), 64),
                        x2903,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x2919: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2917, 32), x0, 32);
    let x2920: BytePoly_32 = bigint_add!(bigint_sub!(x3, x2914, 32), x0, 32);
    let x2921: BytePoly_32 = bigint_nondet_inv!(ctx, x2920, x0, 32);
    let x2922: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2919, x2921, 64), x0, 32);
    let x2923: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x2922, x2920, 64), x2919, 64),
        x0,
        64
    );
    let x2924: BytePoly_66 = bigint_nondet_quot!(ctx, x2923, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x2923, bigint_mul!(x2924, x0, 98), 98),
        536459,
        4,
    )?;
    let x2925: BytePoly_64 = bigint_mul!(x2922, x2922, 64);
    let x2926: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2925, x2914, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x2927: BytePoly_66 = bigint_nondet_quot!(ctx, x2926, x0, 66);
    let x2928: BytePoly_32 = bigint_nondet_rem!(ctx, x2926, x0, 32);
    let x2929: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x2922, x2928, 64),
                    bigint_add!(
                        bigint_sub!(x2917, bigint_mul!(x2922, x2914, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x2930: BytePoly_66 = bigint_nondet_quot!(ctx, x2929, x0, 66);
    let x2931: BytePoly_32 = bigint_nondet_rem!(ctx, x2929, x0, 32);
    let x2932: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2925, bigint_mul!(x2927, x0, 98), 98),
                        x2914,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x2928,
        98
    );
    eqz(ctx, &x2932, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2930, x0, 98), x2931, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2922, bigint_sub!(x2914, x2928, 32), 64),
                        x2917,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x2933: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2931, 32), x0, 32);
    let x2934: BytePoly_32 = bigint_add!(bigint_sub!(x3, x2928, 32), x0, 32);
    let x2935: BytePoly_32 = bigint_nondet_inv!(ctx, x2934, x0, 32);
    let x2936: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2933, x2935, 64), x0, 32);
    let x2937: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x2936, x2934, 64), x2933, 64),
        x0,
        64
    );
    let x2938: BytePoly_66 = bigint_nondet_quot!(ctx, x2937, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x2937, bigint_mul!(x2938, x0, 98), 98),
        536459,
        4,
    )?;
    let x2939: BytePoly_64 = bigint_mul!(x2936, x2936, 64);
    let x2940: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2939, x2928, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x2941: BytePoly_66 = bigint_nondet_quot!(ctx, x2940, x0, 66);
    let x2942: BytePoly_32 = bigint_nondet_rem!(ctx, x2940, x0, 32);
    let x2943: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x2936, x2942, 64),
                    bigint_add!(
                        bigint_sub!(x2931, bigint_mul!(x2936, x2928, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x2944: BytePoly_66 = bigint_nondet_quot!(ctx, x2943, x0, 66);
    let x2945: BytePoly_32 = bigint_nondet_rem!(ctx, x2943, x0, 32);
    let x2946: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2939, bigint_mul!(x2941, x0, 98), 98),
                        x2928,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x2942,
        98
    );
    eqz(ctx, &x2946, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2944, x0, 98), x2945, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2936, bigint_sub!(x2928, x2942, 32), 64),
                        x2931,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x2947: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2945, 32), x0, 32);
    let x2948: BytePoly_32 = bigint_add!(bigint_sub!(x3, x2942, 32), x0, 32);
    let x2949: BytePoly_32 = bigint_nondet_inv!(ctx, x2948, x0, 32);
    let x2950: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2947, x2949, 64), x0, 32);
    let x2951: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x2950, x2948, 64), x2947, 64),
        x0,
        64
    );
    let x2952: BytePoly_66 = bigint_nondet_quot!(ctx, x2951, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x2951, bigint_mul!(x2952, x0, 98), 98),
        536459,
        4,
    )?;
    let x2953: BytePoly_64 = bigint_mul!(x2950, x2950, 64);
    let x2954: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2953, x2942, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x2955: BytePoly_66 = bigint_nondet_quot!(ctx, x2954, x0, 66);
    let x2956: BytePoly_32 = bigint_nondet_rem!(ctx, x2954, x0, 32);
    let x2957: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x2950, x2956, 64),
                    bigint_add!(
                        bigint_sub!(x2945, bigint_mul!(x2950, x2942, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x2958: BytePoly_66 = bigint_nondet_quot!(ctx, x2957, x0, 66);
    let x2959: BytePoly_32 = bigint_nondet_rem!(ctx, x2957, x0, 32);
    let x2960: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2953, bigint_mul!(x2955, x0, 98), 98),
                        x2942,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x2956,
        98
    );
    eqz(ctx, &x2960, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2958, x0, 98), x2959, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2950, bigint_sub!(x2942, x2956, 32), 64),
                        x2945,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x2961: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2959, 32), x0, 32);
    let x2962: BytePoly_32 = bigint_add!(bigint_sub!(x3, x2956, 32), x0, 32);
    let x2963: BytePoly_32 = bigint_nondet_inv!(ctx, x2962, x0, 32);
    let x2964: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2961, x2963, 64), x0, 32);
    let x2965: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x2964, x2962, 64), x2961, 64),
        x0,
        64
    );
    let x2966: BytePoly_66 = bigint_nondet_quot!(ctx, x2965, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x2965, bigint_mul!(x2966, x0, 98), 98),
        536459,
        4,
    )?;
    let x2967: BytePoly_64 = bigint_mul!(x2964, x2964, 64);
    let x2968: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2967, x2956, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x2969: BytePoly_66 = bigint_nondet_quot!(ctx, x2968, x0, 66);
    let x2970: BytePoly_32 = bigint_nondet_rem!(ctx, x2968, x0, 32);
    let x2971: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x2964, x2970, 64),
                    bigint_add!(
                        bigint_sub!(x2959, bigint_mul!(x2964, x2956, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x2972: BytePoly_66 = bigint_nondet_quot!(ctx, x2971, x0, 66);
    let x2973: BytePoly_32 = bigint_nondet_rem!(ctx, x2971, x0, 32);
    let x2974: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2967, bigint_mul!(x2969, x0, 98), 98),
                        x2956,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x2970,
        98
    );
    eqz(ctx, &x2974, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2972, x0, 98), x2973, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2964, bigint_sub!(x2956, x2970, 32), 64),
                        x2959,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x2975: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2973, 32), x0, 32);
    let x2976: BytePoly_32 = bigint_add!(bigint_sub!(x3, x2970, 32), x0, 32);
    let x2977: BytePoly_32 = bigint_nondet_inv!(ctx, x2976, x0, 32);
    let x2978: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2975, x2977, 64), x0, 32);
    let x2979: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x2978, x2976, 64), x2975, 64),
        x0,
        64
    );
    let x2980: BytePoly_66 = bigint_nondet_quot!(ctx, x2979, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x2979, bigint_mul!(x2980, x0, 98), 98),
        536459,
        4,
    )?;
    let x2981: BytePoly_64 = bigint_mul!(x2978, x2978, 64);
    let x2982: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2981, x2970, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x2983: BytePoly_66 = bigint_nondet_quot!(ctx, x2982, x0, 66);
    let x2984: BytePoly_32 = bigint_nondet_rem!(ctx, x2982, x0, 32);
    let x2985: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x2978, x2984, 64),
                    bigint_add!(
                        bigint_sub!(x2973, bigint_mul!(x2978, x2970, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x2986: BytePoly_66 = bigint_nondet_quot!(ctx, x2985, x0, 66);
    let x2987: BytePoly_32 = bigint_nondet_rem!(ctx, x2985, x0, 32);
    let x2988: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2981, bigint_mul!(x2983, x0, 98), 98),
                        x2970,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x2984,
        98
    );
    eqz(ctx, &x2988, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2986, x0, 98), x2987, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2978, bigint_sub!(x2970, x2984, 32), 64),
                        x2973,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x2989: BytePoly_32 = bigint_add!(bigint_sub!(x4, x2987, 32), x0, 32);
    let x2990: BytePoly_32 = bigint_add!(bigint_sub!(x3, x2984, 32), x0, 32);
    let x2991: BytePoly_32 = bigint_nondet_inv!(ctx, x2990, x0, 32);
    let x2992: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x2989, x2991, 64), x0, 32);
    let x2993: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x2992, x2990, 64), x2989, 64),
        x0,
        64
    );
    let x2994: BytePoly_66 = bigint_nondet_quot!(ctx, x2993, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x2993, bigint_mul!(x2994, x0, 98), 98),
        536459,
        4,
    )?;
    let x2995: BytePoly_64 = bigint_mul!(x2992, x2992, 64);
    let x2996: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2995, x2984, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x2997: BytePoly_66 = bigint_nondet_quot!(ctx, x2996, x0, 66);
    let x2998: BytePoly_32 = bigint_nondet_rem!(ctx, x2996, x0, 32);
    let x2999: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x2992, x2998, 64),
                    bigint_add!(
                        bigint_sub!(x2987, bigint_mul!(x2992, x2984, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x3000: BytePoly_66 = bigint_nondet_quot!(ctx, x2999, x0, 66);
    let x3001: BytePoly_32 = bigint_nondet_rem!(ctx, x2999, x0, 32);
    let x3002: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x2995, bigint_mul!(x2997, x0, 98), 98),
                        x2984,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x2998,
        98
    );
    eqz(ctx, &x3002, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3000, x0, 98), x3001, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x2992, bigint_sub!(x2984, x2998, 32), 64),
                        x2987,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x3003: BytePoly_32 = bigint_add!(bigint_sub!(x4, x3001, 32), x0, 32);
    let x3004: BytePoly_32 = bigint_add!(bigint_sub!(x3, x2998, 32), x0, 32);
    let x3005: BytePoly_32 = bigint_nondet_inv!(ctx, x3004, x0, 32);
    let x3006: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3003, x3005, 64), x0, 32);
    let x3007: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x3006, x3004, 64), x3003, 64),
        x0,
        64
    );
    let x3008: BytePoly_66 = bigint_nondet_quot!(ctx, x3007, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x3007, bigint_mul!(x3008, x0, 98), 98),
        536459,
        4,
    )?;
    let x3009: BytePoly_64 = bigint_mul!(x3006, x3006, 64);
    let x3010: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3009, x2998, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x3011: BytePoly_66 = bigint_nondet_quot!(ctx, x3010, x0, 66);
    let x3012: BytePoly_32 = bigint_nondet_rem!(ctx, x3010, x0, 32);
    let x3013: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x3006, x3012, 64),
                    bigint_add!(
                        bigint_sub!(x3001, bigint_mul!(x3006, x2998, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x3014: BytePoly_66 = bigint_nondet_quot!(ctx, x3013, x0, 66);
    let x3015: BytePoly_32 = bigint_nondet_rem!(ctx, x3013, x0, 32);
    let x3016: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3009, bigint_mul!(x3011, x0, 98), 98),
                        x2998,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x3012,
        98
    );
    eqz(ctx, &x3016, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3014, x0, 98), x3015, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3006, bigint_sub!(x2998, x3012, 32), 64),
                        x3001,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x3017: BytePoly_32 = bigint_add!(bigint_sub!(x4, x3015, 32), x0, 32);
    let x3018: BytePoly_32 = bigint_add!(bigint_sub!(x3, x3012, 32), x0, 32);
    let x3019: BytePoly_32 = bigint_nondet_inv!(ctx, x3018, x0, 32);
    let x3020: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3017, x3019, 64), x0, 32);
    let x3021: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x3020, x3018, 64), x3017, 64),
        x0,
        64
    );
    let x3022: BytePoly_66 = bigint_nondet_quot!(ctx, x3021, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x3021, bigint_mul!(x3022, x0, 98), 98),
        536459,
        4,
    )?;
    let x3023: BytePoly_64 = bigint_mul!(x3020, x3020, 64);
    let x3024: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3023, x3012, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x3025: BytePoly_66 = bigint_nondet_quot!(ctx, x3024, x0, 66);
    let x3026: BytePoly_32 = bigint_nondet_rem!(ctx, x3024, x0, 32);
    let x3027: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x3020, x3026, 64),
                    bigint_add!(
                        bigint_sub!(x3015, bigint_mul!(x3020, x3012, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x3028: BytePoly_66 = bigint_nondet_quot!(ctx, x3027, x0, 66);
    let x3029: BytePoly_32 = bigint_nondet_rem!(ctx, x3027, x0, 32);
    let x3030: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3023, bigint_mul!(x3025, x0, 98), 98),
                        x3012,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x3026,
        98
    );
    eqz(ctx, &x3030, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3028, x0, 98), x3029, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3020, bigint_sub!(x3012, x3026, 32), 64),
                        x3015,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x3031: BytePoly_32 = bigint_add!(bigint_sub!(x4, x3029, 32), x0, 32);
    let x3032: BytePoly_32 = bigint_add!(bigint_sub!(x3, x3026, 32), x0, 32);
    let x3033: BytePoly_32 = bigint_nondet_inv!(ctx, x3032, x0, 32);
    let x3034: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3031, x3033, 64), x0, 32);
    let x3035: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x3034, x3032, 64), x3031, 64),
        x0,
        64
    );
    let x3036: BytePoly_66 = bigint_nondet_quot!(ctx, x3035, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x3035, bigint_mul!(x3036, x0, 98), 98),
        536459,
        4,
    )?;
    let x3037: BytePoly_64 = bigint_mul!(x3034, x3034, 64);
    let x3038: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3037, x3026, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x3039: BytePoly_66 = bigint_nondet_quot!(ctx, x3038, x0, 66);
    let x3040: BytePoly_32 = bigint_nondet_rem!(ctx, x3038, x0, 32);
    let x3041: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x3034, x3040, 64),
                    bigint_add!(
                        bigint_sub!(x3029, bigint_mul!(x3034, x3026, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x3042: BytePoly_66 = bigint_nondet_quot!(ctx, x3041, x0, 66);
    let x3043: BytePoly_32 = bigint_nondet_rem!(ctx, x3041, x0, 32);
    let x3044: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3037, bigint_mul!(x3039, x0, 98), 98),
                        x3026,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x3040,
        98
    );
    eqz(ctx, &x3044, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3042, x0, 98), x3043, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3034, bigint_sub!(x3026, x3040, 32), 64),
                        x3029,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x3045: BytePoly_32 = bigint_add!(bigint_sub!(x4, x3043, 32), x0, 32);
    let x3046: BytePoly_32 = bigint_add!(bigint_sub!(x3, x3040, 32), x0, 32);
    let x3047: BytePoly_32 = bigint_nondet_inv!(ctx, x3046, x0, 32);
    let x3048: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3045, x3047, 64), x0, 32);
    let x3049: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x3048, x3046, 64), x3045, 64),
        x0,
        64
    );
    let x3050: BytePoly_66 = bigint_nondet_quot!(ctx, x3049, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x3049, bigint_mul!(x3050, x0, 98), 98),
        536459,
        4,
    )?;
    let x3051: BytePoly_64 = bigint_mul!(x3048, x3048, 64);
    let x3052: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3051, x3040, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x3053: BytePoly_66 = bigint_nondet_quot!(ctx, x3052, x0, 66);
    let x3054: BytePoly_32 = bigint_nondet_rem!(ctx, x3052, x0, 32);
    let x3055: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x3048, x3054, 64),
                    bigint_add!(
                        bigint_sub!(x3043, bigint_mul!(x3048, x3040, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x3056: BytePoly_66 = bigint_nondet_quot!(ctx, x3055, x0, 66);
    let x3057: BytePoly_32 = bigint_nondet_rem!(ctx, x3055, x0, 32);
    let x3058: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3051, bigint_mul!(x3053, x0, 98), 98),
                        x3040,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x3054,
        98
    );
    eqz(ctx, &x3058, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3056, x0, 98), x3057, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3048, bigint_sub!(x3040, x3054, 32), 64),
                        x3043,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x3059: BytePoly_32 = bigint_add!(bigint_sub!(x4, x3057, 32), x0, 32);
    let x3060: BytePoly_32 = bigint_add!(bigint_sub!(x3, x3054, 32), x0, 32);
    let x3061: BytePoly_32 = bigint_nondet_inv!(ctx, x3060, x0, 32);
    let x3062: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3059, x3061, 64), x0, 32);
    let x3063: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x3062, x3060, 64), x3059, 64),
        x0,
        64
    );
    let x3064: BytePoly_66 = bigint_nondet_quot!(ctx, x3063, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x3063, bigint_mul!(x3064, x0, 98), 98),
        536459,
        4,
    )?;
    let x3065: BytePoly_64 = bigint_mul!(x3062, x3062, 64);
    let x3066: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3065, x3054, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x3067: BytePoly_66 = bigint_nondet_quot!(ctx, x3066, x0, 66);
    let x3068: BytePoly_32 = bigint_nondet_rem!(ctx, x3066, x0, 32);
    let x3069: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x3062, x3068, 64),
                    bigint_add!(
                        bigint_sub!(x3057, bigint_mul!(x3062, x3054, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x3070: BytePoly_66 = bigint_nondet_quot!(ctx, x3069, x0, 66);
    let x3071: BytePoly_32 = bigint_nondet_rem!(ctx, x3069, x0, 32);
    let x3072: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3065, bigint_mul!(x3067, x0, 98), 98),
                        x3054,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x3068,
        98
    );
    eqz(ctx, &x3072, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3070, x0, 98), x3071, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3062, bigint_sub!(x3054, x3068, 32), 64),
                        x3057,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x3073: BytePoly_32 = bigint_add!(bigint_sub!(x4, x3071, 32), x0, 32);
    let x3074: BytePoly_32 = bigint_add!(bigint_sub!(x3, x3068, 32), x0, 32);
    let x3075: BytePoly_32 = bigint_nondet_inv!(ctx, x3074, x0, 32);
    let x3076: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3073, x3075, 64), x0, 32);
    let x3077: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x3076, x3074, 64), x3073, 64),
        x0,
        64
    );
    let x3078: BytePoly_66 = bigint_nondet_quot!(ctx, x3077, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x3077, bigint_mul!(x3078, x0, 98), 98),
        536459,
        4,
    )?;
    let x3079: BytePoly_64 = bigint_mul!(x3076, x3076, 64);
    let x3080: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3079, x3068, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x3081: BytePoly_66 = bigint_nondet_quot!(ctx, x3080, x0, 66);
    let x3082: BytePoly_32 = bigint_nondet_rem!(ctx, x3080, x0, 32);
    let x3083: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x3076, x3082, 64),
                    bigint_add!(
                        bigint_sub!(x3071, bigint_mul!(x3076, x3068, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x3084: BytePoly_66 = bigint_nondet_quot!(ctx, x3083, x0, 66);
    let x3085: BytePoly_32 = bigint_nondet_rem!(ctx, x3083, x0, 32);
    let x3086: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3079, bigint_mul!(x3081, x0, 98), 98),
                        x3068,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x3082,
        98
    );
    eqz(ctx, &x3086, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3084, x0, 98), x3085, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3076, bigint_sub!(x3068, x3082, 32), 64),
                        x3071,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x3087: BytePoly_32 = bigint_add!(bigint_sub!(x4, x3085, 32), x0, 32);
    let x3088: BytePoly_32 = bigint_add!(bigint_sub!(x3, x3082, 32), x0, 32);
    let x3089: BytePoly_32 = bigint_nondet_inv!(ctx, x3088, x0, 32);
    let x3090: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3087, x3089, 64), x0, 32);
    let x3091: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x3090, x3088, 64), x3087, 64),
        x0,
        64
    );
    let x3092: BytePoly_66 = bigint_nondet_quot!(ctx, x3091, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x3091, bigint_mul!(x3092, x0, 98), 98),
        536459,
        4,
    )?;
    let x3093: BytePoly_64 = bigint_mul!(x3090, x3090, 64);
    let x3094: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3093, x3082, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x3095: BytePoly_66 = bigint_nondet_quot!(ctx, x3094, x0, 66);
    let x3096: BytePoly_32 = bigint_nondet_rem!(ctx, x3094, x0, 32);
    let x3097: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x3090, x3096, 64),
                    bigint_add!(
                        bigint_sub!(x3085, bigint_mul!(x3090, x3082, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x3098: BytePoly_66 = bigint_nondet_quot!(ctx, x3097, x0, 66);
    let x3099: BytePoly_32 = bigint_nondet_rem!(ctx, x3097, x0, 32);
    let x3100: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3093, bigint_mul!(x3095, x0, 98), 98),
                        x3082,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x3096,
        98
    );
    eqz(ctx, &x3100, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3098, x0, 98), x3099, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3090, bigint_sub!(x3082, x3096, 32), 64),
                        x3085,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x3101: BytePoly_32 = bigint_add!(bigint_sub!(x4, x3099, 32), x0, 32);
    let x3102: BytePoly_32 = bigint_add!(bigint_sub!(x3, x3096, 32), x0, 32);
    let x3103: BytePoly_32 = bigint_nondet_inv!(ctx, x3102, x0, 32);
    let x3104: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3101, x3103, 64), x0, 32);
    let x3105: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x3104, x3102, 64), x3101, 64),
        x0,
        64
    );
    let x3106: BytePoly_66 = bigint_nondet_quot!(ctx, x3105, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x3105, bigint_mul!(x3106, x0, 98), 98),
        536459,
        4,
    )?;
    let x3107: BytePoly_64 = bigint_mul!(x3104, x3104, 64);
    let x3108: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3107, x3096, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x3109: BytePoly_66 = bigint_nondet_quot!(ctx, x3108, x0, 66);
    let x3110: BytePoly_32 = bigint_nondet_rem!(ctx, x3108, x0, 32);
    let x3111: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x3104, x3110, 64),
                    bigint_add!(
                        bigint_sub!(x3099, bigint_mul!(x3104, x3096, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x3112: BytePoly_66 = bigint_nondet_quot!(ctx, x3111, x0, 66);
    let x3113: BytePoly_32 = bigint_nondet_rem!(ctx, x3111, x0, 32);
    let x3114: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3107, bigint_mul!(x3109, x0, 98), 98),
                        x3096,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x3110,
        98
    );
    eqz(ctx, &x3114, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3112, x0, 98), x3113, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3104, bigint_sub!(x3096, x3110, 32), 64),
                        x3099,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x3115: BytePoly_32 = bigint_add!(bigint_sub!(x4, x3113, 32), x0, 32);
    let x3116: BytePoly_32 = bigint_add!(bigint_sub!(x3, x3110, 32), x0, 32);
    let x3117: BytePoly_32 = bigint_nondet_inv!(ctx, x3116, x0, 32);
    let x3118: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3115, x3117, 64), x0, 32);
    let x3119: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x3118, x3116, 64), x3115, 64),
        x0,
        64
    );
    let x3120: BytePoly_66 = bigint_nondet_quot!(ctx, x3119, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x3119, bigint_mul!(x3120, x0, 98), 98),
        536459,
        4,
    )?;
    let x3121: BytePoly_64 = bigint_mul!(x3118, x3118, 64);
    let x3122: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3121, x3110, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x3123: BytePoly_66 = bigint_nondet_quot!(ctx, x3122, x0, 66);
    let x3124: BytePoly_32 = bigint_nondet_rem!(ctx, x3122, x0, 32);
    let x3125: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x3118, x3124, 64),
                    bigint_add!(
                        bigint_sub!(x3113, bigint_mul!(x3118, x3110, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x3126: BytePoly_66 = bigint_nondet_quot!(ctx, x3125, x0, 66);
    let x3127: BytePoly_32 = bigint_nondet_rem!(ctx, x3125, x0, 32);
    let x3128: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3121, bigint_mul!(x3123, x0, 98), 98),
                        x3110,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x3124,
        98
    );
    eqz(ctx, &x3128, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3126, x0, 98), x3127, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3118, bigint_sub!(x3110, x3124, 32), 64),
                        x3113,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x3129: BytePoly_32 = bigint_add!(bigint_sub!(x4, x3127, 32), x0, 32);
    let x3130: BytePoly_32 = bigint_add!(bigint_sub!(x3, x3124, 32), x0, 32);
    let x3131: BytePoly_32 = bigint_nondet_inv!(ctx, x3130, x0, 32);
    let x3132: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3129, x3131, 64), x0, 32);
    let x3133: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x3132, x3130, 64), x3129, 64),
        x0,
        64
    );
    let x3134: BytePoly_66 = bigint_nondet_quot!(ctx, x3133, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x3133, bigint_mul!(x3134, x0, 98), 98),
        536459,
        4,
    )?;
    let x3135: BytePoly_64 = bigint_mul!(x3132, x3132, 64);
    let x3136: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3135, x3124, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x3137: BytePoly_66 = bigint_nondet_quot!(ctx, x3136, x0, 66);
    let x3138: BytePoly_32 = bigint_nondet_rem!(ctx, x3136, x0, 32);
    let x3139: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x3132, x3138, 64),
                    bigint_add!(
                        bigint_sub!(x3127, bigint_mul!(x3132, x3124, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x3140: BytePoly_66 = bigint_nondet_quot!(ctx, x3139, x0, 66);
    let x3141: BytePoly_32 = bigint_nondet_rem!(ctx, x3139, x0, 32);
    let x3142: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3135, bigint_mul!(x3137, x0, 98), 98),
                        x3124,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x3138,
        98
    );
    eqz(ctx, &x3142, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3140, x0, 98), x3141, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3132, bigint_sub!(x3124, x3138, 32), 64),
                        x3127,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x3143: BytePoly_32 = bigint_add!(bigint_sub!(x4, x3141, 32), x0, 32);
    let x3144: BytePoly_32 = bigint_add!(bigint_sub!(x3, x3138, 32), x0, 32);
    let x3145: BytePoly_32 = bigint_nondet_inv!(ctx, x3144, x0, 32);
    let x3146: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3143, x3145, 64), x0, 32);
    let x3147: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x3146, x3144, 64), x3143, 64),
        x0,
        64
    );
    let x3148: BytePoly_66 = bigint_nondet_quot!(ctx, x3147, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x3147, bigint_mul!(x3148, x0, 98), 98),
        536459,
        4,
    )?;
    let x3149: BytePoly_64 = bigint_mul!(x3146, x3146, 64);
    let x3150: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3149, x3138, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x3151: BytePoly_66 = bigint_nondet_quot!(ctx, x3150, x0, 66);
    let x3152: BytePoly_32 = bigint_nondet_rem!(ctx, x3150, x0, 32);
    let x3153: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x3146, x3152, 64),
                    bigint_add!(
                        bigint_sub!(x3141, bigint_mul!(x3146, x3138, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x3154: BytePoly_66 = bigint_nondet_quot!(ctx, x3153, x0, 66);
    let x3155: BytePoly_32 = bigint_nondet_rem!(ctx, x3153, x0, 32);
    let x3156: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3149, bigint_mul!(x3151, x0, 98), 98),
                        x3138,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x3152,
        98
    );
    eqz(ctx, &x3156, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3154, x0, 98), x3155, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3146, bigint_sub!(x3138, x3152, 32), 64),
                        x3141,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x3157: BytePoly_32 = bigint_add!(bigint_sub!(x4, x3155, 32), x0, 32);
    let x3158: BytePoly_32 = bigint_add!(bigint_sub!(x3, x3152, 32), x0, 32);
    let x3159: BytePoly_32 = bigint_nondet_inv!(ctx, x3158, x0, 32);
    let x3160: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3157, x3159, 64), x0, 32);
    let x3161: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x3160, x3158, 64), x3157, 64),
        x0,
        64
    );
    let x3162: BytePoly_66 = bigint_nondet_quot!(ctx, x3161, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x3161, bigint_mul!(x3162, x0, 98), 98),
        536459,
        4,
    )?;
    let x3163: BytePoly_64 = bigint_mul!(x3160, x3160, 64);
    let x3164: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3163, x3152, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x3165: BytePoly_66 = bigint_nondet_quot!(ctx, x3164, x0, 66);
    let x3166: BytePoly_32 = bigint_nondet_rem!(ctx, x3164, x0, 32);
    let x3167: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x3160, x3166, 64),
                    bigint_add!(
                        bigint_sub!(x3155, bigint_mul!(x3160, x3152, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x3168: BytePoly_66 = bigint_nondet_quot!(ctx, x3167, x0, 66);
    let x3169: BytePoly_32 = bigint_nondet_rem!(ctx, x3167, x0, 32);
    let x3170: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3163, bigint_mul!(x3165, x0, 98), 98),
                        x3152,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x3166,
        98
    );
    eqz(ctx, &x3170, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3168, x0, 98), x3169, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3160, bigint_sub!(x3152, x3166, 32), 64),
                        x3155,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x3171: BytePoly_32 = bigint_add!(bigint_sub!(x4, x3169, 32), x0, 32);
    let x3172: BytePoly_32 = bigint_add!(bigint_sub!(x3, x3166, 32), x0, 32);
    let x3173: BytePoly_32 = bigint_nondet_inv!(ctx, x3172, x0, 32);
    let x3174: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3171, x3173, 64), x0, 32);
    let x3175: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x3174, x3172, 64), x3171, 64),
        x0,
        64
    );
    let x3176: BytePoly_66 = bigint_nondet_quot!(ctx, x3175, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x3175, bigint_mul!(x3176, x0, 98), 98),
        536459,
        4,
    )?;
    let x3177: BytePoly_64 = bigint_mul!(x3174, x3174, 64);
    let x3178: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3177, x3166, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x3179: BytePoly_66 = bigint_nondet_quot!(ctx, x3178, x0, 66);
    let x3180: BytePoly_32 = bigint_nondet_rem!(ctx, x3178, x0, 32);
    let x3181: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x3174, x3180, 64),
                    bigint_add!(
                        bigint_sub!(x3169, bigint_mul!(x3174, x3166, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x3182: BytePoly_66 = bigint_nondet_quot!(ctx, x3181, x0, 66);
    let x3183: BytePoly_32 = bigint_nondet_rem!(ctx, x3181, x0, 32);
    let x3184: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3177, bigint_mul!(x3179, x0, 98), 98),
                        x3166,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x3180,
        98
    );
    eqz(ctx, &x3184, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3182, x0, 98), x3183, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3174, bigint_sub!(x3166, x3180, 32), 64),
                        x3169,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x3185: BytePoly_32 = bigint_add!(bigint_sub!(x4, x3183, 32), x0, 32);
    let x3186: BytePoly_32 = bigint_add!(bigint_sub!(x3, x3180, 32), x0, 32);
    let x3187: BytePoly_32 = bigint_nondet_inv!(ctx, x3186, x0, 32);
    let x3188: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3185, x3187, 64), x0, 32);
    let x3189: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x3188, x3186, 64), x3185, 64),
        x0,
        64
    );
    let x3190: BytePoly_66 = bigint_nondet_quot!(ctx, x3189, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x3189, bigint_mul!(x3190, x0, 98), 98),
        536459,
        4,
    )?;
    let x3191: BytePoly_64 = bigint_mul!(x3188, x3188, 64);
    let x3192: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3191, x3180, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x3193: BytePoly_66 = bigint_nondet_quot!(ctx, x3192, x0, 66);
    let x3194: BytePoly_32 = bigint_nondet_rem!(ctx, x3192, x0, 32);
    let x3195: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x3188, x3194, 64),
                    bigint_add!(
                        bigint_sub!(x3183, bigint_mul!(x3188, x3180, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x3196: BytePoly_66 = bigint_nondet_quot!(ctx, x3195, x0, 66);
    let x3197: BytePoly_32 = bigint_nondet_rem!(ctx, x3195, x0, 32);
    let x3198: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3191, bigint_mul!(x3193, x0, 98), 98),
                        x3180,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x3194,
        98
    );
    eqz(ctx, &x3198, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3196, x0, 98), x3197, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3188, bigint_sub!(x3180, x3194, 32), 64),
                        x3183,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x3199: BytePoly_32 = bigint_add!(bigint_sub!(x4, x3197, 32), x0, 32);
    let x3200: BytePoly_32 = bigint_add!(bigint_sub!(x3, x3194, 32), x0, 32);
    let x3201: BytePoly_32 = bigint_nondet_inv!(ctx, x3200, x0, 32);
    let x3202: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3199, x3201, 64), x0, 32);
    let x3203: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x3202, x3200, 64), x3199, 64),
        x0,
        64
    );
    let x3204: BytePoly_66 = bigint_nondet_quot!(ctx, x3203, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x3203, bigint_mul!(x3204, x0, 98), 98),
        536459,
        4,
    )?;
    let x3205: BytePoly_64 = bigint_mul!(x3202, x3202, 64);
    let x3206: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3205, x3194, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x3207: BytePoly_66 = bigint_nondet_quot!(ctx, x3206, x0, 66);
    let x3208: BytePoly_32 = bigint_nondet_rem!(ctx, x3206, x0, 32);
    let x3209: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x3202, x3208, 64),
                    bigint_add!(
                        bigint_sub!(x3197, bigint_mul!(x3202, x3194, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x3210: BytePoly_66 = bigint_nondet_quot!(ctx, x3209, x0, 66);
    let x3211: BytePoly_32 = bigint_nondet_rem!(ctx, x3209, x0, 32);
    let x3212: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3205, bigint_mul!(x3207, x0, 98), 98),
                        x3194,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x3208,
        98
    );
    eqz(ctx, &x3212, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3210, x0, 98), x3211, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3202, bigint_sub!(x3194, x3208, 32), 64),
                        x3197,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x3213: BytePoly_32 = bigint_add!(bigint_sub!(x4, x3211, 32), x0, 32);
    let x3214: BytePoly_32 = bigint_add!(bigint_sub!(x3, x3208, 32), x0, 32);
    let x3215: BytePoly_32 = bigint_nondet_inv!(ctx, x3214, x0, 32);
    let x3216: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3213, x3215, 64), x0, 32);
    let x3217: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x3216, x3214, 64), x3213, 64),
        x0,
        64
    );
    let x3218: BytePoly_66 = bigint_nondet_quot!(ctx, x3217, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x3217, bigint_mul!(x3218, x0, 98), 98),
        536459,
        4,
    )?;
    let x3219: BytePoly_64 = bigint_mul!(x3216, x3216, 64);
    let x3220: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3219, x3208, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x3221: BytePoly_66 = bigint_nondet_quot!(ctx, x3220, x0, 66);
    let x3222: BytePoly_32 = bigint_nondet_rem!(ctx, x3220, x0, 32);
    let x3223: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x3216, x3222, 64),
                    bigint_add!(
                        bigint_sub!(x3211, bigint_mul!(x3216, x3208, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x3224: BytePoly_66 = bigint_nondet_quot!(ctx, x3223, x0, 66);
    let x3225: BytePoly_32 = bigint_nondet_rem!(ctx, x3223, x0, 32);
    let x3226: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3219, bigint_mul!(x3221, x0, 98), 98),
                        x3208,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x3222,
        98
    );
    eqz(ctx, &x3226, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3224, x0, 98), x3225, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3216, bigint_sub!(x3208, x3222, 32), 64),
                        x3211,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x3227: BytePoly_32 = bigint_add!(bigint_sub!(x4, x3225, 32), x0, 32);
    let x3228: BytePoly_32 = bigint_add!(bigint_sub!(x3, x3222, 32), x0, 32);
    let x3229: BytePoly_32 = bigint_nondet_inv!(ctx, x3228, x0, 32);
    let x3230: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3227, x3229, 64), x0, 32);
    let x3231: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x3230, x3228, 64), x3227, 64),
        x0,
        64
    );
    let x3232: BytePoly_66 = bigint_nondet_quot!(ctx, x3231, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x3231, bigint_mul!(x3232, x0, 98), 98),
        536459,
        4,
    )?;
    let x3233: BytePoly_64 = bigint_mul!(x3230, x3230, 64);
    let x3234: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3233, x3222, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x3235: BytePoly_66 = bigint_nondet_quot!(ctx, x3234, x0, 66);
    let x3236: BytePoly_32 = bigint_nondet_rem!(ctx, x3234, x0, 32);
    let x3237: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x3230, x3236, 64),
                    bigint_add!(
                        bigint_sub!(x3225, bigint_mul!(x3230, x3222, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x3238: BytePoly_66 = bigint_nondet_quot!(ctx, x3237, x0, 66);
    let x3239: BytePoly_32 = bigint_nondet_rem!(ctx, x3237, x0, 32);
    let x3240: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3233, bigint_mul!(x3235, x0, 98), 98),
                        x3222,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x3236,
        98
    );
    eqz(ctx, &x3240, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3238, x0, 98), x3239, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3230, bigint_sub!(x3222, x3236, 32), 64),
                        x3225,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x3241: BytePoly_32 = bigint_add!(bigint_sub!(x4, x3239, 32), x0, 32);
    let x3242: BytePoly_32 = bigint_add!(bigint_sub!(x3, x3236, 32), x0, 32);
    let x3243: BytePoly_32 = bigint_nondet_inv!(ctx, x3242, x0, 32);
    let x3244: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3241, x3243, 64), x0, 32);
    let x3245: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x3244, x3242, 64), x3241, 64),
        x0,
        64
    );
    let x3246: BytePoly_66 = bigint_nondet_quot!(ctx, x3245, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x3245, bigint_mul!(x3246, x0, 98), 98),
        536459,
        4,
    )?;
    let x3247: BytePoly_64 = bigint_mul!(x3244, x3244, 64);
    let x3248: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3247, x3236, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x3249: BytePoly_66 = bigint_nondet_quot!(ctx, x3248, x0, 66);
    let x3250: BytePoly_32 = bigint_nondet_rem!(ctx, x3248, x0, 32);
    let x3251: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x3244, x3250, 64),
                    bigint_add!(
                        bigint_sub!(x3239, bigint_mul!(x3244, x3236, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x3252: BytePoly_66 = bigint_nondet_quot!(ctx, x3251, x0, 66);
    let x3253: BytePoly_32 = bigint_nondet_rem!(ctx, x3251, x0, 32);
    let x3254: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3247, bigint_mul!(x3249, x0, 98), 98),
                        x3236,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x3250,
        98
    );
    eqz(ctx, &x3254, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3252, x0, 98), x3253, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3244, bigint_sub!(x3236, x3250, 32), 64),
                        x3239,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x3255: BytePoly_32 = bigint_add!(bigint_sub!(x4, x3253, 32), x0, 32);
    let x3256: BytePoly_32 = bigint_add!(bigint_sub!(x3, x3250, 32), x0, 32);
    let x3257: BytePoly_32 = bigint_nondet_inv!(ctx, x3256, x0, 32);
    let x3258: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3255, x3257, 64), x0, 32);
    let x3259: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x3258, x3256, 64), x3255, 64),
        x0,
        64
    );
    let x3260: BytePoly_66 = bigint_nondet_quot!(ctx, x3259, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x3259, bigint_mul!(x3260, x0, 98), 98),
        536459,
        4,
    )?;
    let x3261: BytePoly_64 = bigint_mul!(x3258, x3258, 64);
    let x3262: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3261, x3250, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x3263: BytePoly_66 = bigint_nondet_quot!(ctx, x3262, x0, 66);
    let x3264: BytePoly_32 = bigint_nondet_rem!(ctx, x3262, x0, 32);
    let x3265: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x3258, x3264, 64),
                    bigint_add!(
                        bigint_sub!(x3253, bigint_mul!(x3258, x3250, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x3266: BytePoly_66 = bigint_nondet_quot!(ctx, x3265, x0, 66);
    let x3267: BytePoly_32 = bigint_nondet_rem!(ctx, x3265, x0, 32);
    let x3268: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3261, bigint_mul!(x3263, x0, 98), 98),
                        x3250,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x3264,
        98
    );
    eqz(ctx, &x3268, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3266, x0, 98), x3267, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3258, bigint_sub!(x3250, x3264, 32), 64),
                        x3253,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x3269: BytePoly_32 = bigint_add!(bigint_sub!(x4, x3267, 32), x0, 32);
    let x3270: BytePoly_32 = bigint_add!(bigint_sub!(x3, x3264, 32), x0, 32);
    let x3271: BytePoly_32 = bigint_nondet_inv!(ctx, x3270, x0, 32);
    let x3272: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3269, x3271, 64), x0, 32);
    let x3273: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x3272, x3270, 64), x3269, 64),
        x0,
        64
    );
    let x3274: BytePoly_66 = bigint_nondet_quot!(ctx, x3273, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x3273, bigint_mul!(x3274, x0, 98), 98),
        536459,
        4,
    )?;
    let x3275: BytePoly_64 = bigint_mul!(x3272, x3272, 64);
    let x3276: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3275, x3264, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x3277: BytePoly_66 = bigint_nondet_quot!(ctx, x3276, x0, 66);
    let x3278: BytePoly_32 = bigint_nondet_rem!(ctx, x3276, x0, 32);
    let x3279: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x3272, x3278, 64),
                    bigint_add!(
                        bigint_sub!(x3267, bigint_mul!(x3272, x3264, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x3280: BytePoly_66 = bigint_nondet_quot!(ctx, x3279, x0, 66);
    let x3281: BytePoly_32 = bigint_nondet_rem!(ctx, x3279, x0, 32);
    let x3282: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3275, bigint_mul!(x3277, x0, 98), 98),
                        x3264,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x3278,
        98
    );
    eqz(ctx, &x3282, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3280, x0, 98), x3281, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3272, bigint_sub!(x3264, x3278, 32), 64),
                        x3267,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x3283: BytePoly_32 = bigint_add!(bigint_sub!(x4, x3281, 32), x0, 32);
    let x3284: BytePoly_32 = bigint_add!(bigint_sub!(x3, x3278, 32), x0, 32);
    let x3285: BytePoly_32 = bigint_nondet_inv!(ctx, x3284, x0, 32);
    let x3286: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3283, x3285, 64), x0, 32);
    let x3287: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x3286, x3284, 64), x3283, 64),
        x0,
        64
    );
    let x3288: BytePoly_66 = bigint_nondet_quot!(ctx, x3287, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x3287, bigint_mul!(x3288, x0, 98), 98),
        536459,
        4,
    )?;
    let x3289: BytePoly_64 = bigint_mul!(x3286, x3286, 64);
    let x3290: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3289, x3278, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x3291: BytePoly_66 = bigint_nondet_quot!(ctx, x3290, x0, 66);
    let x3292: BytePoly_32 = bigint_nondet_rem!(ctx, x3290, x0, 32);
    let x3293: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x3286, x3292, 64),
                    bigint_add!(
                        bigint_sub!(x3281, bigint_mul!(x3286, x3278, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x3294: BytePoly_66 = bigint_nondet_quot!(ctx, x3293, x0, 66);
    let x3295: BytePoly_32 = bigint_nondet_rem!(ctx, x3293, x0, 32);
    let x3296: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3289, bigint_mul!(x3291, x0, 98), 98),
                        x3278,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x3292,
        98
    );
    eqz(ctx, &x3296, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3294, x0, 98), x3295, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3286, bigint_sub!(x3278, x3292, 32), 64),
                        x3281,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x3297: BytePoly_32 = bigint_add!(bigint_sub!(x4, x3295, 32), x0, 32);
    let x3298: BytePoly_32 = bigint_add!(bigint_sub!(x3, x3292, 32), x0, 32);
    let x3299: BytePoly_32 = bigint_nondet_inv!(ctx, x3298, x0, 32);
    let x3300: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3297, x3299, 64), x0, 32);
    let x3301: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x3300, x3298, 64), x3297, 64),
        x0,
        64
    );
    let x3302: BytePoly_66 = bigint_nondet_quot!(ctx, x3301, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x3301, bigint_mul!(x3302, x0, 98), 98),
        536459,
        4,
    )?;
    let x3303: BytePoly_64 = bigint_mul!(x3300, x3300, 64);
    let x3304: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3303, x3292, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x3305: BytePoly_66 = bigint_nondet_quot!(ctx, x3304, x0, 66);
    let x3306: BytePoly_32 = bigint_nondet_rem!(ctx, x3304, x0, 32);
    let x3307: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x3300, x3306, 64),
                    bigint_add!(
                        bigint_sub!(x3295, bigint_mul!(x3300, x3292, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x3308: BytePoly_66 = bigint_nondet_quot!(ctx, x3307, x0, 66);
    let x3309: BytePoly_32 = bigint_nondet_rem!(ctx, x3307, x0, 32);
    let x3310: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3303, bigint_mul!(x3305, x0, 98), 98),
                        x3292,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x3306,
        98
    );
    eqz(ctx, &x3310, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3308, x0, 98), x3309, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3300, bigint_sub!(x3292, x3306, 32), 64),
                        x3295,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x3311: BytePoly_32 = bigint_add!(bigint_sub!(x4, x3309, 32), x0, 32);
    let x3312: BytePoly_32 = bigint_add!(bigint_sub!(x3, x3306, 32), x0, 32);
    let x3313: BytePoly_32 = bigint_nondet_inv!(ctx, x3312, x0, 32);
    let x3314: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3311, x3313, 64), x0, 32);
    let x3315: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x3314, x3312, 64), x3311, 64),
        x0,
        64
    );
    let x3316: BytePoly_66 = bigint_nondet_quot!(ctx, x3315, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x3315, bigint_mul!(x3316, x0, 98), 98),
        536459,
        4,
    )?;
    let x3317: BytePoly_64 = bigint_mul!(x3314, x3314, 64);
    let x3318: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3317, x3306, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x3319: BytePoly_66 = bigint_nondet_quot!(ctx, x3318, x0, 66);
    let x3320: BytePoly_32 = bigint_nondet_rem!(ctx, x3318, x0, 32);
    let x3321: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x3314, x3320, 64),
                    bigint_add!(
                        bigint_sub!(x3309, bigint_mul!(x3314, x3306, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x3322: BytePoly_66 = bigint_nondet_quot!(ctx, x3321, x0, 66);
    let x3323: BytePoly_32 = bigint_nondet_rem!(ctx, x3321, x0, 32);
    let x3324: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3317, bigint_mul!(x3319, x0, 98), 98),
                        x3306,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x3320,
        98
    );
    eqz(ctx, &x3324, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3322, x0, 98), x3323, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3314, bigint_sub!(x3306, x3320, 32), 64),
                        x3309,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x3325: BytePoly_32 = bigint_add!(bigint_sub!(x4, x3323, 32), x0, 32);
    let x3326: BytePoly_32 = bigint_add!(bigint_sub!(x3, x3320, 32), x0, 32);
    let x3327: BytePoly_32 = bigint_nondet_inv!(ctx, x3326, x0, 32);
    let x3328: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3325, x3327, 64), x0, 32);
    let x3329: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x3328, x3326, 64), x3325, 64),
        x0,
        64
    );
    let x3330: BytePoly_66 = bigint_nondet_quot!(ctx, x3329, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x3329, bigint_mul!(x3330, x0, 98), 98),
        536459,
        4,
    )?;
    let x3331: BytePoly_64 = bigint_mul!(x3328, x3328, 64);
    let x3332: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3331, x3320, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x3333: BytePoly_66 = bigint_nondet_quot!(ctx, x3332, x0, 66);
    let x3334: BytePoly_32 = bigint_nondet_rem!(ctx, x3332, x0, 32);
    let x3335: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x3328, x3334, 64),
                    bigint_add!(
                        bigint_sub!(x3323, bigint_mul!(x3328, x3320, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x3336: BytePoly_66 = bigint_nondet_quot!(ctx, x3335, x0, 66);
    let x3337: BytePoly_32 = bigint_nondet_rem!(ctx, x3335, x0, 32);
    let x3338: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3331, bigint_mul!(x3333, x0, 98), 98),
                        x3320,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x3334,
        98
    );
    eqz(ctx, &x3338, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3336, x0, 98), x3337, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3328, bigint_sub!(x3320, x3334, 32), 64),
                        x3323,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x3339: BytePoly_32 = bigint_add!(bigint_sub!(x4, x3337, 32), x0, 32);
    let x3340: BytePoly_32 = bigint_add!(bigint_sub!(x3, x3334, 32), x0, 32);
    let x3341: BytePoly_32 = bigint_nondet_inv!(ctx, x3340, x0, 32);
    let x3342: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3339, x3341, 64), x0, 32);
    let x3343: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x3342, x3340, 64), x3339, 64),
        x0,
        64
    );
    let x3344: BytePoly_66 = bigint_nondet_quot!(ctx, x3343, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x3343, bigint_mul!(x3344, x0, 98), 98),
        536459,
        4,
    )?;
    let x3345: BytePoly_64 = bigint_mul!(x3342, x3342, 64);
    let x3346: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3345, x3334, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x3347: BytePoly_66 = bigint_nondet_quot!(ctx, x3346, x0, 66);
    let x3348: BytePoly_32 = bigint_nondet_rem!(ctx, x3346, x0, 32);
    let x3349: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x3342, x3348, 64),
                    bigint_add!(
                        bigint_sub!(x3337, bigint_mul!(x3342, x3334, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x3350: BytePoly_66 = bigint_nondet_quot!(ctx, x3349, x0, 66);
    let x3351: BytePoly_32 = bigint_nondet_rem!(ctx, x3349, x0, 32);
    let x3352: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3345, bigint_mul!(x3347, x0, 98), 98),
                        x3334,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x3348,
        98
    );
    eqz(ctx, &x3352, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3350, x0, 98), x3351, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3342, bigint_sub!(x3334, x3348, 32), 64),
                        x3337,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x3353: BytePoly_32 = bigint_add!(bigint_sub!(x4, x3351, 32), x0, 32);
    let x3354: BytePoly_32 = bigint_add!(bigint_sub!(x3, x3348, 32), x0, 32);
    let x3355: BytePoly_32 = bigint_nondet_inv!(ctx, x3354, x0, 32);
    let x3356: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3353, x3355, 64), x0, 32);
    let x3357: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x3356, x3354, 64), x3353, 64),
        x0,
        64
    );
    let x3358: BytePoly_66 = bigint_nondet_quot!(ctx, x3357, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x3357, bigint_mul!(x3358, x0, 98), 98),
        536459,
        4,
    )?;
    let x3359: BytePoly_64 = bigint_mul!(x3356, x3356, 64);
    let x3360: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3359, x3348, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x3361: BytePoly_66 = bigint_nondet_quot!(ctx, x3360, x0, 66);
    let x3362: BytePoly_32 = bigint_nondet_rem!(ctx, x3360, x0, 32);
    let x3363: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x3356, x3362, 64),
                    bigint_add!(
                        bigint_sub!(x3351, bigint_mul!(x3356, x3348, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x3364: BytePoly_66 = bigint_nondet_quot!(ctx, x3363, x0, 66);
    let x3365: BytePoly_32 = bigint_nondet_rem!(ctx, x3363, x0, 32);
    let x3366: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3359, bigint_mul!(x3361, x0, 98), 98),
                        x3348,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x3362,
        98
    );
    eqz(ctx, &x3366, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3364, x0, 98), x3365, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3356, bigint_sub!(x3348, x3362, 32), 64),
                        x3351,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x3367: BytePoly_32 = bigint_add!(bigint_sub!(x4, x3365, 32), x0, 32);
    let x3368: BytePoly_32 = bigint_add!(bigint_sub!(x3, x3362, 32), x0, 32);
    let x3369: BytePoly_32 = bigint_nondet_inv!(ctx, x3368, x0, 32);
    let x3370: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3367, x3369, 64), x0, 32);
    let x3371: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x3370, x3368, 64), x3367, 64),
        x0,
        64
    );
    let x3372: BytePoly_66 = bigint_nondet_quot!(ctx, x3371, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x3371, bigint_mul!(x3372, x0, 98), 98),
        536459,
        4,
    )?;
    let x3373: BytePoly_64 = bigint_mul!(x3370, x3370, 64);
    let x3374: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3373, x3362, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x3375: BytePoly_66 = bigint_nondet_quot!(ctx, x3374, x0, 66);
    let x3376: BytePoly_32 = bigint_nondet_rem!(ctx, x3374, x0, 32);
    let x3377: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x3370, x3376, 64),
                    bigint_add!(
                        bigint_sub!(x3365, bigint_mul!(x3370, x3362, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x3378: BytePoly_66 = bigint_nondet_quot!(ctx, x3377, x0, 66);
    let x3379: BytePoly_32 = bigint_nondet_rem!(ctx, x3377, x0, 32);
    let x3380: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3373, bigint_mul!(x3375, x0, 98), 98),
                        x3362,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x3376,
        98
    );
    eqz(ctx, &x3380, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3378, x0, 98), x3379, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3370, bigint_sub!(x3362, x3376, 32), 64),
                        x3365,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x3381: BytePoly_32 = bigint_add!(bigint_sub!(x4, x3379, 32), x0, 32);
    let x3382: BytePoly_32 = bigint_add!(bigint_sub!(x3, x3376, 32), x0, 32);
    let x3383: BytePoly_32 = bigint_nondet_inv!(ctx, x3382, x0, 32);
    let x3384: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3381, x3383, 64), x0, 32);
    let x3385: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x3384, x3382, 64), x3381, 64),
        x0,
        64
    );
    let x3386: BytePoly_66 = bigint_nondet_quot!(ctx, x3385, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x3385, bigint_mul!(x3386, x0, 98), 98),
        536459,
        4,
    )?;
    let x3387: BytePoly_64 = bigint_mul!(x3384, x3384, 64);
    let x3388: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3387, x3376, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x3389: BytePoly_66 = bigint_nondet_quot!(ctx, x3388, x0, 66);
    let x3390: BytePoly_32 = bigint_nondet_rem!(ctx, x3388, x0, 32);
    let x3391: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x3384, x3390, 64),
                    bigint_add!(
                        bigint_sub!(x3379, bigint_mul!(x3384, x3376, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x3392: BytePoly_66 = bigint_nondet_quot!(ctx, x3391, x0, 66);
    let x3393: BytePoly_32 = bigint_nondet_rem!(ctx, x3391, x0, 32);
    let x3394: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3387, bigint_mul!(x3389, x0, 98), 98),
                        x3376,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x3390,
        98
    );
    eqz(ctx, &x3394, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3392, x0, 98), x3393, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3384, bigint_sub!(x3376, x3390, 32), 64),
                        x3379,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x3395: BytePoly_32 = bigint_add!(bigint_sub!(x4, x3393, 32), x0, 32);
    let x3396: BytePoly_32 = bigint_add!(bigint_sub!(x3, x3390, 32), x0, 32);
    let x3397: BytePoly_32 = bigint_nondet_inv!(ctx, x3396, x0, 32);
    let x3398: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3395, x3397, 64), x0, 32);
    let x3399: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x3398, x3396, 64), x3395, 64),
        x0,
        64
    );
    let x3400: BytePoly_66 = bigint_nondet_quot!(ctx, x3399, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x3399, bigint_mul!(x3400, x0, 98), 98),
        536459,
        4,
    )?;
    let x3401: BytePoly_64 = bigint_mul!(x3398, x3398, 64);
    let x3402: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3401, x3390, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x3403: BytePoly_66 = bigint_nondet_quot!(ctx, x3402, x0, 66);
    let x3404: BytePoly_32 = bigint_nondet_rem!(ctx, x3402, x0, 32);
    let x3405: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x3398, x3404, 64),
                    bigint_add!(
                        bigint_sub!(x3393, bigint_mul!(x3398, x3390, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x3406: BytePoly_66 = bigint_nondet_quot!(ctx, x3405, x0, 66);
    let x3407: BytePoly_32 = bigint_nondet_rem!(ctx, x3405, x0, 32);
    let x3408: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3401, bigint_mul!(x3403, x0, 98), 98),
                        x3390,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x3404,
        98
    );
    eqz(ctx, &x3408, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3406, x0, 98), x3407, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3398, bigint_sub!(x3390, x3404, 32), 64),
                        x3393,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x3409: BytePoly_32 = bigint_add!(bigint_sub!(x4, x3407, 32), x0, 32);
    let x3410: BytePoly_32 = bigint_add!(bigint_sub!(x3, x3404, 32), x0, 32);
    let x3411: BytePoly_32 = bigint_nondet_inv!(ctx, x3410, x0, 32);
    let x3412: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3409, x3411, 64), x0, 32);
    let x3413: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x3412, x3410, 64), x3409, 64),
        x0,
        64
    );
    let x3414: BytePoly_66 = bigint_nondet_quot!(ctx, x3413, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x3413, bigint_mul!(x3414, x0, 98), 98),
        536459,
        4,
    )?;
    let x3415: BytePoly_64 = bigint_mul!(x3412, x3412, 64);
    let x3416: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3415, x3404, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x3417: BytePoly_66 = bigint_nondet_quot!(ctx, x3416, x0, 66);
    let x3418: BytePoly_32 = bigint_nondet_rem!(ctx, x3416, x0, 32);
    let x3419: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x3412, x3418, 64),
                    bigint_add!(
                        bigint_sub!(x3407, bigint_mul!(x3412, x3404, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x3420: BytePoly_66 = bigint_nondet_quot!(ctx, x3419, x0, 66);
    let x3421: BytePoly_32 = bigint_nondet_rem!(ctx, x3419, x0, 32);
    let x3422: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3415, bigint_mul!(x3417, x0, 98), 98),
                        x3404,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x3418,
        98
    );
    eqz(ctx, &x3422, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3420, x0, 98), x3421, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3412, bigint_sub!(x3404, x3418, 32), 64),
                        x3407,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x3423: BytePoly_32 = bigint_add!(bigint_sub!(x4, x3421, 32), x0, 32);
    let x3424: BytePoly_32 = bigint_add!(bigint_sub!(x3, x3418, 32), x0, 32);
    let x3425: BytePoly_32 = bigint_nondet_inv!(ctx, x3424, x0, 32);
    let x3426: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3423, x3425, 64), x0, 32);
    let x3427: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x3426, x3424, 64), x3423, 64),
        x0,
        64
    );
    let x3428: BytePoly_66 = bigint_nondet_quot!(ctx, x3427, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x3427, bigint_mul!(x3428, x0, 98), 98),
        536459,
        4,
    )?;
    let x3429: BytePoly_64 = bigint_mul!(x3426, x3426, 64);
    let x3430: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3429, x3418, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x3431: BytePoly_66 = bigint_nondet_quot!(ctx, x3430, x0, 66);
    let x3432: BytePoly_32 = bigint_nondet_rem!(ctx, x3430, x0, 32);
    let x3433: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x3426, x3432, 64),
                    bigint_add!(
                        bigint_sub!(x3421, bigint_mul!(x3426, x3418, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x3434: BytePoly_66 = bigint_nondet_quot!(ctx, x3433, x0, 66);
    let x3435: BytePoly_32 = bigint_nondet_rem!(ctx, x3433, x0, 32);
    let x3436: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3429, bigint_mul!(x3431, x0, 98), 98),
                        x3418,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x3432,
        98
    );
    eqz(ctx, &x3436, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3434, x0, 98), x3435, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3426, bigint_sub!(x3418, x3432, 32), 64),
                        x3421,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x3437: BytePoly_32 = bigint_add!(bigint_sub!(x4, x3435, 32), x0, 32);
    let x3438: BytePoly_32 = bigint_add!(bigint_sub!(x3, x3432, 32), x0, 32);
    let x3439: BytePoly_32 = bigint_nondet_inv!(ctx, x3438, x0, 32);
    let x3440: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3437, x3439, 64), x0, 32);
    let x3441: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x3440, x3438, 64), x3437, 64),
        x0,
        64
    );
    let x3442: BytePoly_66 = bigint_nondet_quot!(ctx, x3441, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x3441, bigint_mul!(x3442, x0, 98), 98),
        536459,
        4,
    )?;
    let x3443: BytePoly_64 = bigint_mul!(x3440, x3440, 64);
    let x3444: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3443, x3432, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x3445: BytePoly_66 = bigint_nondet_quot!(ctx, x3444, x0, 66);
    let x3446: BytePoly_32 = bigint_nondet_rem!(ctx, x3444, x0, 32);
    let x3447: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x3440, x3446, 64),
                    bigint_add!(
                        bigint_sub!(x3435, bigint_mul!(x3440, x3432, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x3448: BytePoly_66 = bigint_nondet_quot!(ctx, x3447, x0, 66);
    let x3449: BytePoly_32 = bigint_nondet_rem!(ctx, x3447, x0, 32);
    let x3450: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3443, bigint_mul!(x3445, x0, 98), 98),
                        x3432,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x3446,
        98
    );
    eqz(ctx, &x3450, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3448, x0, 98), x3449, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3440, bigint_sub!(x3432, x3446, 32), 64),
                        x3435,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x3451: BytePoly_32 = bigint_add!(bigint_sub!(x4, x3449, 32), x0, 32);
    let x3452: BytePoly_32 = bigint_add!(bigint_sub!(x3, x3446, 32), x0, 32);
    let x3453: BytePoly_32 = bigint_nondet_inv!(ctx, x3452, x0, 32);
    let x3454: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3451, x3453, 64), x0, 32);
    let x3455: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x3454, x3452, 64), x3451, 64),
        x0,
        64
    );
    let x3456: BytePoly_66 = bigint_nondet_quot!(ctx, x3455, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x3455, bigint_mul!(x3456, x0, 98), 98),
        536459,
        4,
    )?;
    let x3457: BytePoly_64 = bigint_mul!(x3454, x3454, 64);
    let x3458: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3457, x3446, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x3459: BytePoly_66 = bigint_nondet_quot!(ctx, x3458, x0, 66);
    let x3460: BytePoly_32 = bigint_nondet_rem!(ctx, x3458, x0, 32);
    let x3461: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x3454, x3460, 64),
                    bigint_add!(
                        bigint_sub!(x3449, bigint_mul!(x3454, x3446, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x3462: BytePoly_66 = bigint_nondet_quot!(ctx, x3461, x0, 66);
    let x3463: BytePoly_32 = bigint_nondet_rem!(ctx, x3461, x0, 32);
    let x3464: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3457, bigint_mul!(x3459, x0, 98), 98),
                        x3446,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x3460,
        98
    );
    eqz(ctx, &x3464, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3462, x0, 98), x3463, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3454, bigint_sub!(x3446, x3460, 32), 64),
                        x3449,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x3465: BytePoly_32 = bigint_add!(bigint_sub!(x4, x3463, 32), x0, 32);
    let x3466: BytePoly_32 = bigint_add!(bigint_sub!(x3, x3460, 32), x0, 32);
    let x3467: BytePoly_32 = bigint_nondet_inv!(ctx, x3466, x0, 32);
    let x3468: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3465, x3467, 64), x0, 32);
    let x3469: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x3468, x3466, 64), x3465, 64),
        x0,
        64
    );
    let x3470: BytePoly_66 = bigint_nondet_quot!(ctx, x3469, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x3469, bigint_mul!(x3470, x0, 98), 98),
        536459,
        4,
    )?;
    let x3471: BytePoly_64 = bigint_mul!(x3468, x3468, 64);
    let x3472: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3471, x3460, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x3473: BytePoly_66 = bigint_nondet_quot!(ctx, x3472, x0, 66);
    let x3474: BytePoly_32 = bigint_nondet_rem!(ctx, x3472, x0, 32);
    let x3475: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x3468, x3474, 64),
                    bigint_add!(
                        bigint_sub!(x3463, bigint_mul!(x3468, x3460, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x3476: BytePoly_66 = bigint_nondet_quot!(ctx, x3475, x0, 66);
    let x3477: BytePoly_32 = bigint_nondet_rem!(ctx, x3475, x0, 32);
    let x3478: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3471, bigint_mul!(x3473, x0, 98), 98),
                        x3460,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x3474,
        98
    );
    eqz(ctx, &x3478, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3476, x0, 98), x3477, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3468, bigint_sub!(x3460, x3474, 32), 64),
                        x3463,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x3479: BytePoly_32 = bigint_add!(bigint_sub!(x4, x3477, 32), x0, 32);
    let x3480: BytePoly_32 = bigint_add!(bigint_sub!(x3, x3474, 32), x0, 32);
    let x3481: BytePoly_32 = bigint_nondet_inv!(ctx, x3480, x0, 32);
    let x3482: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3479, x3481, 64), x0, 32);
    let x3483: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x3482, x3480, 64), x3479, 64),
        x0,
        64
    );
    let x3484: BytePoly_66 = bigint_nondet_quot!(ctx, x3483, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x3483, bigint_mul!(x3484, x0, 98), 98),
        536459,
        4,
    )?;
    let x3485: BytePoly_64 = bigint_mul!(x3482, x3482, 64);
    let x3486: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3485, x3474, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x3487: BytePoly_66 = bigint_nondet_quot!(ctx, x3486, x0, 66);
    let x3488: BytePoly_32 = bigint_nondet_rem!(ctx, x3486, x0, 32);
    let x3489: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x3482, x3488, 64),
                    bigint_add!(
                        bigint_sub!(x3477, bigint_mul!(x3482, x3474, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x3490: BytePoly_66 = bigint_nondet_quot!(ctx, x3489, x0, 66);
    let x3491: BytePoly_32 = bigint_nondet_rem!(ctx, x3489, x0, 32);
    let x3492: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3485, bigint_mul!(x3487, x0, 98), 98),
                        x3474,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x3488,
        98
    );
    eqz(ctx, &x3492, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3490, x0, 98), x3491, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3482, bigint_sub!(x3474, x3488, 32), 64),
                        x3477,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x3493: BytePoly_32 = bigint_add!(bigint_sub!(x4, x3491, 32), x0, 32);
    let x3494: BytePoly_32 = bigint_add!(bigint_sub!(x3, x3488, 32), x0, 32);
    let x3495: BytePoly_32 = bigint_nondet_inv!(ctx, x3494, x0, 32);
    let x3496: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3493, x3495, 64), x0, 32);
    let x3497: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x3496, x3494, 64), x3493, 64),
        x0,
        64
    );
    let x3498: BytePoly_66 = bigint_nondet_quot!(ctx, x3497, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x3497, bigint_mul!(x3498, x0, 98), 98),
        536459,
        4,
    )?;
    let x3499: BytePoly_64 = bigint_mul!(x3496, x3496, 64);
    let x3500: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3499, x3488, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x3501: BytePoly_66 = bigint_nondet_quot!(ctx, x3500, x0, 66);
    let x3502: BytePoly_32 = bigint_nondet_rem!(ctx, x3500, x0, 32);
    let x3503: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x3496, x3502, 64),
                    bigint_add!(
                        bigint_sub!(x3491, bigint_mul!(x3496, x3488, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x3504: BytePoly_66 = bigint_nondet_quot!(ctx, x3503, x0, 66);
    let x3505: BytePoly_32 = bigint_nondet_rem!(ctx, x3503, x0, 32);
    let x3506: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3499, bigint_mul!(x3501, x0, 98), 98),
                        x3488,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x3502,
        98
    );
    eqz(ctx, &x3506, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3504, x0, 98), x3505, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3496, bigint_sub!(x3488, x3502, 32), 64),
                        x3491,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x3507: BytePoly_32 = bigint_add!(bigint_sub!(x4, x3505, 32), x0, 32);
    let x3508: BytePoly_32 = bigint_add!(bigint_sub!(x3, x3502, 32), x0, 32);
    let x3509: BytePoly_32 = bigint_nondet_inv!(ctx, x3508, x0, 32);
    let x3510: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3507, x3509, 64), x0, 32);
    let x3511: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x3510, x3508, 64), x3507, 64),
        x0,
        64
    );
    let x3512: BytePoly_66 = bigint_nondet_quot!(ctx, x3511, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x3511, bigint_mul!(x3512, x0, 98), 98),
        536459,
        4,
    )?;
    let x3513: BytePoly_64 = bigint_mul!(x3510, x3510, 64);
    let x3514: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3513, x3502, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x3515: BytePoly_66 = bigint_nondet_quot!(ctx, x3514, x0, 66);
    let x3516: BytePoly_32 = bigint_nondet_rem!(ctx, x3514, x0, 32);
    let x3517: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x3510, x3516, 64),
                    bigint_add!(
                        bigint_sub!(x3505, bigint_mul!(x3510, x3502, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x3518: BytePoly_66 = bigint_nondet_quot!(ctx, x3517, x0, 66);
    let x3519: BytePoly_32 = bigint_nondet_rem!(ctx, x3517, x0, 32);
    let x3520: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3513, bigint_mul!(x3515, x0, 98), 98),
                        x3502,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x3516,
        98
    );
    eqz(ctx, &x3520, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3518, x0, 98), x3519, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3510, bigint_sub!(x3502, x3516, 32), 64),
                        x3505,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x3521: BytePoly_32 = bigint_add!(bigint_sub!(x4, x3519, 32), x0, 32);
    let x3522: BytePoly_32 = bigint_add!(bigint_sub!(x3, x3516, 32), x0, 32);
    let x3523: BytePoly_32 = bigint_nondet_inv!(ctx, x3522, x0, 32);
    let x3524: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3521, x3523, 64), x0, 32);
    let x3525: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x3524, x3522, 64), x3521, 64),
        x0,
        64
    );
    let x3526: BytePoly_66 = bigint_nondet_quot!(ctx, x3525, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x3525, bigint_mul!(x3526, x0, 98), 98),
        536459,
        4,
    )?;
    let x3527: BytePoly_64 = bigint_mul!(x3524, x3524, 64);
    let x3528: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3527, x3516, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x3529: BytePoly_66 = bigint_nondet_quot!(ctx, x3528, x0, 66);
    let x3530: BytePoly_32 = bigint_nondet_rem!(ctx, x3528, x0, 32);
    let x3531: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x3524, x3530, 64),
                    bigint_add!(
                        bigint_sub!(x3519, bigint_mul!(x3524, x3516, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x3532: BytePoly_66 = bigint_nondet_quot!(ctx, x3531, x0, 66);
    let x3533: BytePoly_32 = bigint_nondet_rem!(ctx, x3531, x0, 32);
    let x3534: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3527, bigint_mul!(x3529, x0, 98), 98),
                        x3516,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x3530,
        98
    );
    eqz(ctx, &x3534, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3532, x0, 98), x3533, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3524, bigint_sub!(x3516, x3530, 32), 64),
                        x3519,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x3535: BytePoly_32 = bigint_add!(bigint_sub!(x4, x3533, 32), x0, 32);
    let x3536: BytePoly_32 = bigint_add!(bigint_sub!(x3, x3530, 32), x0, 32);
    let x3537: BytePoly_32 = bigint_nondet_inv!(ctx, x3536, x0, 32);
    let x3538: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3535, x3537, 64), x0, 32);
    let x3539: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x3538, x3536, 64), x3535, 64),
        x0,
        64
    );
    let x3540: BytePoly_66 = bigint_nondet_quot!(ctx, x3539, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x3539, bigint_mul!(x3540, x0, 98), 98),
        536459,
        4,
    )?;
    let x3541: BytePoly_64 = bigint_mul!(x3538, x3538, 64);
    let x3542: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3541, x3530, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x3543: BytePoly_66 = bigint_nondet_quot!(ctx, x3542, x0, 66);
    let x3544: BytePoly_32 = bigint_nondet_rem!(ctx, x3542, x0, 32);
    let x3545: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x3538, x3544, 64),
                    bigint_add!(
                        bigint_sub!(x3533, bigint_mul!(x3538, x3530, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x3546: BytePoly_66 = bigint_nondet_quot!(ctx, x3545, x0, 66);
    let x3547: BytePoly_32 = bigint_nondet_rem!(ctx, x3545, x0, 32);
    let x3548: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3541, bigint_mul!(x3543, x0, 98), 98),
                        x3530,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x3544,
        98
    );
    eqz(ctx, &x3548, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3546, x0, 98), x3547, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3538, bigint_sub!(x3530, x3544, 32), 64),
                        x3533,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x3549: BytePoly_32 = bigint_add!(bigint_sub!(x4, x3547, 32), x0, 32);
    let x3550: BytePoly_32 = bigint_add!(bigint_sub!(x3, x3544, 32), x0, 32);
    let x3551: BytePoly_32 = bigint_nondet_inv!(ctx, x3550, x0, 32);
    let x3552: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3549, x3551, 64), x0, 32);
    let x3553: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x3552, x3550, 64), x3549, 64),
        x0,
        64
    );
    let x3554: BytePoly_66 = bigint_nondet_quot!(ctx, x3553, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x3553, bigint_mul!(x3554, x0, 98), 98),
        536459,
        4,
    )?;
    let x3555: BytePoly_64 = bigint_mul!(x3552, x3552, 64);
    let x3556: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3555, x3544, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x3557: BytePoly_66 = bigint_nondet_quot!(ctx, x3556, x0, 66);
    let x3558: BytePoly_32 = bigint_nondet_rem!(ctx, x3556, x0, 32);
    let x3559: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x3552, x3558, 64),
                    bigint_add!(
                        bigint_sub!(x3547, bigint_mul!(x3552, x3544, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x3560: BytePoly_66 = bigint_nondet_quot!(ctx, x3559, x0, 66);
    let x3561: BytePoly_32 = bigint_nondet_rem!(ctx, x3559, x0, 32);
    let x3562: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3555, bigint_mul!(x3557, x0, 98), 98),
                        x3544,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x3558,
        98
    );
    eqz(ctx, &x3562, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3560, x0, 98), x3561, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3552, bigint_sub!(x3544, x3558, 32), 64),
                        x3547,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x3563: BytePoly_32 = bigint_add!(bigint_sub!(x4, x3561, 32), x0, 32);
    let x3564: BytePoly_32 = bigint_add!(bigint_sub!(x3, x3558, 32), x0, 32);
    let x3565: BytePoly_32 = bigint_nondet_inv!(ctx, x3564, x0, 32);
    let x3566: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3563, x3565, 64), x0, 32);
    let x3567: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x3566, x3564, 64), x3563, 64),
        x0,
        64
    );
    let x3568: BytePoly_66 = bigint_nondet_quot!(ctx, x3567, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x3567, bigint_mul!(x3568, x0, 98), 98),
        536459,
        4,
    )?;
    let x3569: BytePoly_64 = bigint_mul!(x3566, x3566, 64);
    let x3570: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3569, x3558, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x3571: BytePoly_66 = bigint_nondet_quot!(ctx, x3570, x0, 66);
    let x3572: BytePoly_32 = bigint_nondet_rem!(ctx, x3570, x0, 32);
    let x3573: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x3566, x3572, 64),
                    bigint_add!(
                        bigint_sub!(x3561, bigint_mul!(x3566, x3558, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x3574: BytePoly_66 = bigint_nondet_quot!(ctx, x3573, x0, 66);
    let x3575: BytePoly_32 = bigint_nondet_rem!(ctx, x3573, x0, 32);
    let x3576: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3569, bigint_mul!(x3571, x0, 98), 98),
                        x3558,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x3572,
        98
    );
    eqz(ctx, &x3576, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3574, x0, 98), x3575, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3566, bigint_sub!(x3558, x3572, 32), 64),
                        x3561,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    let x3577: BytePoly_32 = bigint_add!(bigint_sub!(x4, x3575, 32), x0, 32);
    let x3578: BytePoly_32 = bigint_add!(bigint_sub!(x3, x3572, 32), x0, 32);
    let x3579: BytePoly_32 = bigint_nondet_inv!(ctx, x3578, x0, 32);
    let x3580: BytePoly_32 = bigint_nondet_rem!(ctx, bigint_mul!(x3577, x3579, 64), x0, 32);
    let x3581: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_mul!(x3580, x3578, 64), x3577, 64),
        x0,
        64
    );
    let x3582: BytePoly_66 = bigint_nondet_quot!(ctx, x3581, x0, 66);
    eqz(
        ctx,
        &bigint_sub!(x3581, bigint_mul!(x3582, x0, 98), 98),
        536459,
        4,
    )?;
    let x3583: BytePoly_64 = bigint_mul!(x3580, x3580, 64);
    let x3584: BytePoly_64 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3583, x3572, 64), x0, 64), x3, 64),
        x0,
        64
    );
    let x3585: BytePoly_66 = bigint_nondet_quot!(ctx, x3584, x0, 66);
    let x3586: BytePoly_32 = bigint_nondet_rem!(ctx, x3584, x0, 32);
    let x3587: BytePoly_64 = bigint_add!(
        bigint_add!(
            bigint_sub!(
                x0,
                bigint_add!(
                    bigint_mul!(x3580, x3586, 64),
                    bigint_add!(
                        bigint_sub!(x3575, bigint_mul!(x3580, x3572, 64), 64),
                        x0,
                        64
                    ),
                    64
                ),
                64
            ),
            x0,
            64
        ),
        x0,
        64
    );
    let x3588: BytePoly_66 = bigint_nondet_quot!(ctx, x3587, x0, 66);
    let x3589: BytePoly_32 = bigint_nondet_rem!(ctx, x3587, x0, 32);
    let x3590: BytePoly_98 = bigint_sub!(
        bigint_add!(
            bigint_add!(
                bigint_sub!(
                    bigint_sub!(
                        bigint_sub!(x3583, bigint_mul!(x3585, x0, 98), 98),
                        x3572,
                        98
                    ),
                    x3,
                    98
                ),
                x0,
                98
            ),
            x0,
            98
        ),
        x3586,
        98
    );
    eqz(ctx, &x3590, 536459, 4)?;
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3588, x0, 98), x3589, 98),
            bigint_add!(
                bigint_add!(
                    bigint_sub!(
                        bigint_mul!(x3580, bigint_sub!(x3572, x3586, 32), 64),
                        x3575,
                        64
                    ),
                    x0,
                    64
                ),
                x0,
                64
            ),
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x3586, x5, 32), 34, 1)?;
    eqz(ctx, &bigint_sub!(x3589, x6, 32), 34, 1)?;
    return Ok(());
}
bigint_program_info! {rsa_256_x1, /*iters=*/1,
bigint_witness_info!(/*bits=*/256, /*label=*/0, /*public=*/ true, /*min_bits=*/255),
bigint_witness_info!(/*bits=*/256, /*label=*/1, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/2, /*public=*/ true, /*min_bits=*/0)}
bigint_program_info! {rsa_256_x2, /*iters=*/2,
bigint_witness_info!(/*bits=*/256, /*label=*/0, /*public=*/ true, /*min_bits=*/255),
bigint_witness_info!(/*bits=*/256, /*label=*/1, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/2, /*public=*/ true, /*min_bits=*/0)}
bigint_program_info! {rsa_3072_x15, /*iters=*/15,
bigint_witness_info!(/*bits=*/3072, /*label=*/0, /*public=*/ true, /*min_bits=*/3071),
bigint_witness_info!(/*bits=*/3072, /*label=*/1, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/3072, /*label=*/2, /*public=*/ true, /*min_bits=*/0)}
bigint_program_info! {nondet_inv_test_8, /*iters=*/1,
bigint_witness_info!(/*bits=*/8, /*label=*/0, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/1, /*public=*/ true, /*min_bits=*/7),
bigint_witness_info!(/*bits=*/8, /*label=*/2, /*public=*/ true, /*min_bits=*/0)}
bigint_program_info! {const_add_test_8, /*iters=*/1,
bigint_witness_info!(/*bits=*/8, /*label=*/0, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/17, /*label=*/1, /*public=*/ true, /*min_bits=*/0)}
bigint_program_info! {const_add_alt_test_16, /*iters=*/1,
bigint_witness_info!(/*bits=*/16, /*label=*/0, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/17, /*label=*/1, /*public=*/ true, /*min_bits=*/0)}
bigint_program_info! {const_mul_test_8, /*iters=*/1,
bigint_witness_info!(/*bits=*/8, /*label=*/0, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/24, /*label=*/1, /*public=*/ true, /*min_bits=*/0)}
bigint_program_info! {add_test_8, /*iters=*/1,
bigint_witness_info!(/*bits=*/8, /*label=*/0, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/1, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/9, /*label=*/2, /*public=*/ true, /*min_bits=*/0)}
bigint_program_info! {add_test_16, /*iters=*/1,
bigint_witness_info!(/*bits=*/16, /*label=*/0, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/16, /*label=*/1, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/17, /*label=*/2, /*public=*/ true, /*min_bits=*/0)}
bigint_program_info! {add_test_128, /*iters=*/1,
bigint_witness_info!(/*bits=*/128, /*label=*/0, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/128, /*label=*/1, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/129, /*label=*/2, /*public=*/ true, /*min_bits=*/0)}
bigint_program_info! {const_one_test_8, /*iters=*/1,
bigint_witness_info!(/*bits=*/8, /*label=*/0, /*public=*/ true, /*min_bits=*/0)}
bigint_program_info! {const_twobyte_test_16, /*iters=*/1,
bigint_witness_info!(/*bits=*/16, /*label=*/0, /*public=*/ true, /*min_bits=*/0)}
bigint_program_info! {sub_test_8, /*iters=*/1,
bigint_witness_info!(/*bits=*/8, /*label=*/0, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/1, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/2, /*public=*/ true, /*min_bits=*/0)}
bigint_program_info! {sub_test_128, /*iters=*/1,
bigint_witness_info!(/*bits=*/128, /*label=*/0, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/128, /*label=*/1, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/128, /*label=*/2, /*public=*/ true, /*min_bits=*/0)}
bigint_program_info! {mul_test_8, /*iters=*/1,
bigint_witness_info!(/*bits=*/8, /*label=*/0, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/1, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/16, /*label=*/2, /*public=*/ true, /*min_bits=*/0)}
bigint_program_info! {mul_test_128, /*iters=*/1,
bigint_witness_info!(/*bits=*/128, /*label=*/0, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/128, /*label=*/1, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/2, /*public=*/ true, /*min_bits=*/0)}
bigint_program_info! {reduce_test_8, /*iters=*/1,
bigint_witness_info!(/*bits=*/8, /*label=*/0, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/1, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/2, /*public=*/ true, /*min_bits=*/0)}
bigint_program_info! {reduce_test_128, /*iters=*/1,
bigint_witness_info!(/*bits=*/128, /*label=*/0, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/128, /*label=*/1, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/128, /*label=*/2, /*public=*/ true, /*min_bits=*/0)}
bigint_program_info! {ecdsa_verify_8, /*iters=*/1,
bigint_witness_info!(/*bits=*/8, /*label=*/0, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/1, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/9, /*label=*/2, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/3, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/4, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/9, /*label=*/5, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/9, /*label=*/6, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/9, /*label=*/7, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/8, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/9, /*public=*/ true, /*min_bits=*/0)}
bigint_program_info! {ecdsa_verify_32, /*iters=*/1,
bigint_witness_info!(/*bits=*/32, /*label=*/0, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/32, /*label=*/1, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/33, /*label=*/2, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/32, /*label=*/3, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/32, /*label=*/4, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/33, /*label=*/5, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/33, /*label=*/6, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/33, /*label=*/7, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/32, /*label=*/8, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/32, /*label=*/9, /*public=*/ true, /*min_bits=*/0)}
bigint_program_info! {ec_aff_add_test_8, /*iters=*/1,
bigint_witness_info!(/*bits=*/8, /*label=*/0, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/1, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/2, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/3, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/4, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/5, /*public=*/ true, /*min_bits=*/0)}
bigint_program_info! {ec_aff_add_test_256, /*iters=*/1,
bigint_witness_info!(/*bits=*/256, /*label=*/0, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/1, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/2, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/3, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/4, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/5, /*public=*/ true, /*min_bits=*/0)}
bigint_program_info! {ec_aff_doub_test_8, /*iters=*/1,
bigint_witness_info!(/*bits=*/8, /*label=*/0, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/1, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/2, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/3, /*public=*/ true, /*min_bits=*/0)}
bigint_program_info! {ec_aff_doub_test_256, /*iters=*/1,
bigint_witness_info!(/*bits=*/256, /*label=*/0, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/1, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/2, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/3, /*public=*/ true, /*min_bits=*/0)}
bigint_program_info! {ec_aff_mul_test_8, /*iters=*/1,
bigint_witness_info!(/*bits=*/8, /*label=*/0, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/1, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/2, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/3, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/4, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/5, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/6, /*public=*/ true, /*min_bits=*/0)}
bigint_program_info! {ec_aff_mul_test_32, /*iters=*/1,
bigint_witness_info!(/*bits=*/32, /*label=*/0, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/32, /*label=*/1, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/32, /*label=*/2, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/32, /*label=*/3, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/32, /*label=*/4, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/32, /*label=*/5, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/32, /*label=*/6, /*public=*/ true, /*min_bits=*/0)}
bigint_program_info! {ec_aff_neg_test_8, /*iters=*/1,
bigint_witness_info!(/*bits=*/8, /*label=*/0, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/1, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/2, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/3, /*public=*/ true, /*min_bits=*/0)}
bigint_program_info! {ec_aff_sub_test_8, /*iters=*/1,
bigint_witness_info!(/*bits=*/8, /*label=*/0, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/1, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/2, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/3, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/4, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/5, /*public=*/ true, /*min_bits=*/0)}
bigint_program_info! {ec_pts_eq_test_8, /*iters=*/1,
bigint_witness_info!(/*bits=*/8, /*label=*/0, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/1, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/2, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/3, /*public=*/ true, /*min_bits=*/0)}
bigint_program_info! {rep_ec_aff_add_test_256_r5, /*iters=*/1,
bigint_witness_info!(/*bits=*/256, /*label=*/0, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/1, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/2, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/3, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/4, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/5, /*public=*/ true, /*min_bits=*/0)}
bigint_program_info! {rep_ec_aff_add_test_256_r10, /*iters=*/1,
bigint_witness_info!(/*bits=*/256, /*label=*/0, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/1, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/2, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/3, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/4, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/5, /*public=*/ true, /*min_bits=*/0)}
bigint_program_info! {rep_ec_aff_add_test_256_r256, /*iters=*/1,
bigint_witness_info!(/*bits=*/256, /*label=*/0, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/1, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/2, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/3, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/4, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/5, /*public=*/ true, /*min_bits=*/0)}
bigint_program_list! {rsa_256_x1, rsa_256_x2, rsa_3072_x15, nondet_inv_test_8, const_add_test_8, const_add_alt_test_16, const_mul_test_8, add_test_8, add_test_16, add_test_128, const_one_test_8, const_twobyte_test_16, sub_test_8, sub_test_128, mul_test_8, mul_test_128, reduce_test_8, reduce_test_128, ecdsa_verify_8, ecdsa_verify_32, ec_aff_add_test_8, ec_aff_add_test_256, ec_aff_doub_test_8, ec_aff_doub_test_256, ec_aff_mul_test_8, ec_aff_mul_test_32, ec_aff_neg_test_8, ec_aff_sub_test_8, ec_pts_eq_test_8, rep_ec_aff_add_test_256_r5, rep_ec_aff_add_test_256_r10, rep_ec_aff_add_test_256_r256}
