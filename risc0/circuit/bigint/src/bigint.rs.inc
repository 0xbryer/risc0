bigint_declare_byte_poly!(BytePoly_32, 32);
bigint_declare_byte_poly!(BytePoly_64, 64);
bigint_declare_byte_poly!(BytePoly_34, 34);
bigint_declare_byte_poly!(BytePoly_66, 66);
bigint_declare_byte_poly!(BytePoly_384, 384);
bigint_declare_byte_poly!(BytePoly_768, 768);
bigint_declare_byte_poly!(BytePoly_387, 387);
bigint_declare_byte_poly!(BytePoly_771, 771);
bigint_declare_byte_poly!(BytePoly_1, 1);
bigint_declare_byte_poly!(BytePoly_2, 2);
bigint_declare_byte_poly!(BytePoly_3, 3);
bigint_declare_byte_poly!(BytePoly_4, 4);
bigint_declare_byte_poly!(BytePoly_16, 16);
bigint_declare_byte_poly!(BytePoly_17, 17);
bigint_declare_byte_poly!(BytePoly_6, 6);
bigint_declare_byte_poly!(BytePoly_8, 8);
bigint_declare_byte_poly!(BytePoly_5, 5);
bigint_declare_byte_poly!(BytePoly_9, 9);
bigint_declare_byte_poly!(BytePoly_13, 13);
bigint_declare_byte_poly!(BytePoly_12, 12);
bigint_declare_byte_poly!(BytePoly_10, 10);
bigint_declare_byte_poly!(BytePoly_98, 98);
bigint_declare_byte_poly!(BytePoly_96, 96);
bigint_declare_byte_poly!(BytePoly_33, 33);
bigint_declare_byte_poly!(BytePoly_35, 35);
bigint_declare_byte_poly!(BytePoly_67, 67);
pub fn rsa_256_x1(ctx: &mut BigIntContext) -> Result<()> {
    let x0: BytePoly_32 = bigint_def!(ctx, 32, 0, 1);
    let x1: BytePoly_32 = bigint_def!(ctx, 32, 1, 1);
    let x2: BytePoly_32 = bigint_def!(ctx, 32, 2, 1);
    let x3: BytePoly_64 = bigint_mul!(x1, x1, 64);
    let x4: BytePoly_34 = bigint_nondet_quot!(ctx, x3, x0, 34);
    let x5: BytePoly_32 = bigint_nondet_rem!(ctx, x3, x0, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x4, x0, 66), x5, 66), x3, 66),
        276359,
        4,
    )?;
    let x6: BytePoly_64 = bigint_mul!(x5, x5, 64);
    let x7: BytePoly_34 = bigint_nondet_quot!(ctx, x6, x0, 34);
    let x8: BytePoly_32 = bigint_nondet_rem!(ctx, x6, x0, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x7, x0, 66), x8, 66), x6, 66),
        276359,
        4,
    )?;
    let x9: BytePoly_64 = bigint_mul!(x8, x8, 64);
    let x10: BytePoly_34 = bigint_nondet_quot!(ctx, x9, x0, 34);
    let x11: BytePoly_32 = bigint_nondet_rem!(ctx, x9, x0, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x10, x0, 66), x11, 66), x9, 66),
        276359,
        4,
    )?;
    let x12: BytePoly_64 = bigint_mul!(x11, x11, 64);
    let x13: BytePoly_34 = bigint_nondet_quot!(ctx, x12, x0, 34);
    let x14: BytePoly_32 = bigint_nondet_rem!(ctx, x12, x0, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x13, x0, 66), x14, 66), x12, 66),
        276359,
        4,
    )?;
    let x15: BytePoly_64 = bigint_mul!(x14, x14, 64);
    let x16: BytePoly_34 = bigint_nondet_quot!(ctx, x15, x0, 34);
    let x17: BytePoly_32 = bigint_nondet_rem!(ctx, x15, x0, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x16, x0, 66), x17, 66), x15, 66),
        276359,
        4,
    )?;
    let x18: BytePoly_64 = bigint_mul!(x17, x17, 64);
    let x19: BytePoly_34 = bigint_nondet_quot!(ctx, x18, x0, 34);
    let x20: BytePoly_32 = bigint_nondet_rem!(ctx, x18, x0, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x19, x0, 66), x20, 66), x18, 66),
        276359,
        4,
    )?;
    let x21: BytePoly_64 = bigint_mul!(x20, x20, 64);
    let x22: BytePoly_34 = bigint_nondet_quot!(ctx, x21, x0, 34);
    let x23: BytePoly_32 = bigint_nondet_rem!(ctx, x21, x0, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x22, x0, 66), x23, 66), x21, 66),
        276359,
        4,
    )?;
    let x24: BytePoly_64 = bigint_mul!(x23, x23, 64);
    let x25: BytePoly_34 = bigint_nondet_quot!(ctx, x24, x0, 34);
    let x26: BytePoly_32 = bigint_nondet_rem!(ctx, x24, x0, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x25, x0, 66), x26, 66), x24, 66),
        276359,
        4,
    )?;
    let x27: BytePoly_64 = bigint_mul!(x26, x26, 64);
    let x28: BytePoly_34 = bigint_nondet_quot!(ctx, x27, x0, 34);
    let x29: BytePoly_32 = bigint_nondet_rem!(ctx, x27, x0, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x28, x0, 66), x29, 66), x27, 66),
        276359,
        4,
    )?;
    let x30: BytePoly_64 = bigint_mul!(x29, x29, 64);
    let x31: BytePoly_34 = bigint_nondet_quot!(ctx, x30, x0, 34);
    let x32: BytePoly_32 = bigint_nondet_rem!(ctx, x30, x0, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x31, x0, 66), x32, 66), x30, 66),
        276359,
        4,
    )?;
    let x33: BytePoly_64 = bigint_mul!(x32, x32, 64);
    let x34: BytePoly_34 = bigint_nondet_quot!(ctx, x33, x0, 34);
    let x35: BytePoly_32 = bigint_nondet_rem!(ctx, x33, x0, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x34, x0, 66), x35, 66), x33, 66),
        276359,
        4,
    )?;
    let x36: BytePoly_64 = bigint_mul!(x35, x35, 64);
    let x37: BytePoly_34 = bigint_nondet_quot!(ctx, x36, x0, 34);
    let x38: BytePoly_32 = bigint_nondet_rem!(ctx, x36, x0, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x37, x0, 66), x38, 66), x36, 66),
        276359,
        4,
    )?;
    let x39: BytePoly_64 = bigint_mul!(x38, x38, 64);
    let x40: BytePoly_34 = bigint_nondet_quot!(ctx, x39, x0, 34);
    let x41: BytePoly_32 = bigint_nondet_rem!(ctx, x39, x0, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x40, x0, 66), x41, 66), x39, 66),
        276359,
        4,
    )?;
    let x42: BytePoly_64 = bigint_mul!(x41, x41, 64);
    let x43: BytePoly_34 = bigint_nondet_quot!(ctx, x42, x0, 34);
    let x44: BytePoly_32 = bigint_nondet_rem!(ctx, x42, x0, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x43, x0, 66), x44, 66), x42, 66),
        276359,
        4,
    )?;
    let x45: BytePoly_64 = bigint_mul!(x44, x44, 64);
    let x46: BytePoly_34 = bigint_nondet_quot!(ctx, x45, x0, 34);
    let x47: BytePoly_32 = bigint_nondet_rem!(ctx, x45, x0, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x46, x0, 66), x47, 66), x45, 66),
        276359,
        4,
    )?;
    let x48: BytePoly_64 = bigint_mul!(x47, x47, 64);
    let x49: BytePoly_34 = bigint_nondet_quot!(ctx, x48, x0, 34);
    let x50: BytePoly_32 = bigint_nondet_rem!(ctx, x48, x0, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x49, x0, 66), x50, 66), x48, 66),
        276359,
        4,
    )?;
    let x51: BytePoly_64 = bigint_mul!(x50, x1, 64);
    let x52: BytePoly_34 = bigint_nondet_quot!(ctx, x51, x0, 34);
    let x53: BytePoly_32 = bigint_nondet_rem!(ctx, x51, x0, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x52, x0, 66), x53, 66), x51, 66),
        276359,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x53, x2, 32), 34, 1)?;
    return Ok(());
}
pub fn rsa_256_x2(ctx: &mut BigIntContext) -> Result<()> {
    let x0: BytePoly_32 = bigint_def!(ctx, 32, 0, 1);
    let x1: BytePoly_32 = bigint_def!(ctx, 32, 1, 1);
    let x2: BytePoly_32 = bigint_def!(ctx, 32, 2, 1);
    let x3: BytePoly_64 = bigint_mul!(x1, x1, 64);
    let x4: BytePoly_34 = bigint_nondet_quot!(ctx, x3, x0, 34);
    let x5: BytePoly_32 = bigint_nondet_rem!(ctx, x3, x0, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x4, x0, 66), x5, 66), x3, 66),
        276359,
        4,
    )?;
    let x6: BytePoly_64 = bigint_mul!(x5, x5, 64);
    let x7: BytePoly_34 = bigint_nondet_quot!(ctx, x6, x0, 34);
    let x8: BytePoly_32 = bigint_nondet_rem!(ctx, x6, x0, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x7, x0, 66), x8, 66), x6, 66),
        276359,
        4,
    )?;
    let x9: BytePoly_64 = bigint_mul!(x8, x8, 64);
    let x10: BytePoly_34 = bigint_nondet_quot!(ctx, x9, x0, 34);
    let x11: BytePoly_32 = bigint_nondet_rem!(ctx, x9, x0, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x10, x0, 66), x11, 66), x9, 66),
        276359,
        4,
    )?;
    let x12: BytePoly_64 = bigint_mul!(x11, x11, 64);
    let x13: BytePoly_34 = bigint_nondet_quot!(ctx, x12, x0, 34);
    let x14: BytePoly_32 = bigint_nondet_rem!(ctx, x12, x0, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x13, x0, 66), x14, 66), x12, 66),
        276359,
        4,
    )?;
    let x15: BytePoly_64 = bigint_mul!(x14, x14, 64);
    let x16: BytePoly_34 = bigint_nondet_quot!(ctx, x15, x0, 34);
    let x17: BytePoly_32 = bigint_nondet_rem!(ctx, x15, x0, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x16, x0, 66), x17, 66), x15, 66),
        276359,
        4,
    )?;
    let x18: BytePoly_64 = bigint_mul!(x17, x17, 64);
    let x19: BytePoly_34 = bigint_nondet_quot!(ctx, x18, x0, 34);
    let x20: BytePoly_32 = bigint_nondet_rem!(ctx, x18, x0, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x19, x0, 66), x20, 66), x18, 66),
        276359,
        4,
    )?;
    let x21: BytePoly_64 = bigint_mul!(x20, x20, 64);
    let x22: BytePoly_34 = bigint_nondet_quot!(ctx, x21, x0, 34);
    let x23: BytePoly_32 = bigint_nondet_rem!(ctx, x21, x0, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x22, x0, 66), x23, 66), x21, 66),
        276359,
        4,
    )?;
    let x24: BytePoly_64 = bigint_mul!(x23, x23, 64);
    let x25: BytePoly_34 = bigint_nondet_quot!(ctx, x24, x0, 34);
    let x26: BytePoly_32 = bigint_nondet_rem!(ctx, x24, x0, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x25, x0, 66), x26, 66), x24, 66),
        276359,
        4,
    )?;
    let x27: BytePoly_64 = bigint_mul!(x26, x26, 64);
    let x28: BytePoly_34 = bigint_nondet_quot!(ctx, x27, x0, 34);
    let x29: BytePoly_32 = bigint_nondet_rem!(ctx, x27, x0, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x28, x0, 66), x29, 66), x27, 66),
        276359,
        4,
    )?;
    let x30: BytePoly_64 = bigint_mul!(x29, x29, 64);
    let x31: BytePoly_34 = bigint_nondet_quot!(ctx, x30, x0, 34);
    let x32: BytePoly_32 = bigint_nondet_rem!(ctx, x30, x0, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x31, x0, 66), x32, 66), x30, 66),
        276359,
        4,
    )?;
    let x33: BytePoly_64 = bigint_mul!(x32, x32, 64);
    let x34: BytePoly_34 = bigint_nondet_quot!(ctx, x33, x0, 34);
    let x35: BytePoly_32 = bigint_nondet_rem!(ctx, x33, x0, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x34, x0, 66), x35, 66), x33, 66),
        276359,
        4,
    )?;
    let x36: BytePoly_64 = bigint_mul!(x35, x35, 64);
    let x37: BytePoly_34 = bigint_nondet_quot!(ctx, x36, x0, 34);
    let x38: BytePoly_32 = bigint_nondet_rem!(ctx, x36, x0, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x37, x0, 66), x38, 66), x36, 66),
        276359,
        4,
    )?;
    let x39: BytePoly_64 = bigint_mul!(x38, x38, 64);
    let x40: BytePoly_34 = bigint_nondet_quot!(ctx, x39, x0, 34);
    let x41: BytePoly_32 = bigint_nondet_rem!(ctx, x39, x0, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x40, x0, 66), x41, 66), x39, 66),
        276359,
        4,
    )?;
    let x42: BytePoly_64 = bigint_mul!(x41, x41, 64);
    let x43: BytePoly_34 = bigint_nondet_quot!(ctx, x42, x0, 34);
    let x44: BytePoly_32 = bigint_nondet_rem!(ctx, x42, x0, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x43, x0, 66), x44, 66), x42, 66),
        276359,
        4,
    )?;
    let x45: BytePoly_64 = bigint_mul!(x44, x44, 64);
    let x46: BytePoly_34 = bigint_nondet_quot!(ctx, x45, x0, 34);
    let x47: BytePoly_32 = bigint_nondet_rem!(ctx, x45, x0, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x46, x0, 66), x47, 66), x45, 66),
        276359,
        4,
    )?;
    let x48: BytePoly_64 = bigint_mul!(x47, x47, 64);
    let x49: BytePoly_34 = bigint_nondet_quot!(ctx, x48, x0, 34);
    let x50: BytePoly_32 = bigint_nondet_rem!(ctx, x48, x0, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x49, x0, 66), x50, 66), x48, 66),
        276359,
        4,
    )?;
    let x51: BytePoly_64 = bigint_mul!(x50, x1, 64);
    let x52: BytePoly_34 = bigint_nondet_quot!(ctx, x51, x0, 34);
    let x53: BytePoly_32 = bigint_nondet_rem!(ctx, x51, x0, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x52, x0, 66), x53, 66), x51, 66),
        276359,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x53, x2, 32), 34, 1)?;
    return Ok(());
}
pub fn rsa_3072_x15(ctx: &mut BigIntContext) -> Result<()> {
    let x0: BytePoly_384 = bigint_def!(ctx, 384, 0, 1);
    let x1: BytePoly_384 = bigint_def!(ctx, 384, 1, 1);
    let x2: BytePoly_384 = bigint_def!(ctx, 384, 2, 1);
    let x3: BytePoly_768 = bigint_mul!(x1, x1, 768);
    let x4: BytePoly_387 = bigint_nondet_quot!(ctx, x3, x0, 387);
    let x5: BytePoly_384 = bigint_nondet_rem!(ctx, x3, x0, 384);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x4, x0, 771), x5, 771), x3, 771),
        3145587,
        4,
    )?;
    let x6: BytePoly_768 = bigint_mul!(x5, x5, 768);
    let x7: BytePoly_387 = bigint_nondet_quot!(ctx, x6, x0, 387);
    let x8: BytePoly_384 = bigint_nondet_rem!(ctx, x6, x0, 384);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x7, x0, 771), x8, 771), x6, 771),
        3145587,
        4,
    )?;
    let x9: BytePoly_768 = bigint_mul!(x8, x8, 768);
    let x10: BytePoly_387 = bigint_nondet_quot!(ctx, x9, x0, 387);
    let x11: BytePoly_384 = bigint_nondet_rem!(ctx, x9, x0, 384);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x10, x0, 771), x11, 771), x9, 771),
        3145587,
        4,
    )?;
    let x12: BytePoly_768 = bigint_mul!(x11, x11, 768);
    let x13: BytePoly_387 = bigint_nondet_quot!(ctx, x12, x0, 387);
    let x14: BytePoly_384 = bigint_nondet_rem!(ctx, x12, x0, 384);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x13, x0, 771), x14, 771), x12, 771),
        3145587,
        4,
    )?;
    let x15: BytePoly_768 = bigint_mul!(x14, x14, 768);
    let x16: BytePoly_387 = bigint_nondet_quot!(ctx, x15, x0, 387);
    let x17: BytePoly_384 = bigint_nondet_rem!(ctx, x15, x0, 384);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x16, x0, 771), x17, 771), x15, 771),
        3145587,
        4,
    )?;
    let x18: BytePoly_768 = bigint_mul!(x17, x17, 768);
    let x19: BytePoly_387 = bigint_nondet_quot!(ctx, x18, x0, 387);
    let x20: BytePoly_384 = bigint_nondet_rem!(ctx, x18, x0, 384);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x19, x0, 771), x20, 771), x18, 771),
        3145587,
        4,
    )?;
    let x21: BytePoly_768 = bigint_mul!(x20, x20, 768);
    let x22: BytePoly_387 = bigint_nondet_quot!(ctx, x21, x0, 387);
    let x23: BytePoly_384 = bigint_nondet_rem!(ctx, x21, x0, 384);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x22, x0, 771), x23, 771), x21, 771),
        3145587,
        4,
    )?;
    let x24: BytePoly_768 = bigint_mul!(x23, x23, 768);
    let x25: BytePoly_387 = bigint_nondet_quot!(ctx, x24, x0, 387);
    let x26: BytePoly_384 = bigint_nondet_rem!(ctx, x24, x0, 384);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x25, x0, 771), x26, 771), x24, 771),
        3145587,
        4,
    )?;
    let x27: BytePoly_768 = bigint_mul!(x26, x26, 768);
    let x28: BytePoly_387 = bigint_nondet_quot!(ctx, x27, x0, 387);
    let x29: BytePoly_384 = bigint_nondet_rem!(ctx, x27, x0, 384);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x28, x0, 771), x29, 771), x27, 771),
        3145587,
        4,
    )?;
    let x30: BytePoly_768 = bigint_mul!(x29, x29, 768);
    let x31: BytePoly_387 = bigint_nondet_quot!(ctx, x30, x0, 387);
    let x32: BytePoly_384 = bigint_nondet_rem!(ctx, x30, x0, 384);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x31, x0, 771), x32, 771), x30, 771),
        3145587,
        4,
    )?;
    let x33: BytePoly_768 = bigint_mul!(x32, x32, 768);
    let x34: BytePoly_387 = bigint_nondet_quot!(ctx, x33, x0, 387);
    let x35: BytePoly_384 = bigint_nondet_rem!(ctx, x33, x0, 384);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x34, x0, 771), x35, 771), x33, 771),
        3145587,
        4,
    )?;
    let x36: BytePoly_768 = bigint_mul!(x35, x35, 768);
    let x37: BytePoly_387 = bigint_nondet_quot!(ctx, x36, x0, 387);
    let x38: BytePoly_384 = bigint_nondet_rem!(ctx, x36, x0, 384);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x37, x0, 771), x38, 771), x36, 771),
        3145587,
        4,
    )?;
    let x39: BytePoly_768 = bigint_mul!(x38, x38, 768);
    let x40: BytePoly_387 = bigint_nondet_quot!(ctx, x39, x0, 387);
    let x41: BytePoly_384 = bigint_nondet_rem!(ctx, x39, x0, 384);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x40, x0, 771), x41, 771), x39, 771),
        3145587,
        4,
    )?;
    let x42: BytePoly_768 = bigint_mul!(x41, x41, 768);
    let x43: BytePoly_387 = bigint_nondet_quot!(ctx, x42, x0, 387);
    let x44: BytePoly_384 = bigint_nondet_rem!(ctx, x42, x0, 384);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x43, x0, 771), x44, 771), x42, 771),
        3145587,
        4,
    )?;
    let x45: BytePoly_768 = bigint_mul!(x44, x44, 768);
    let x46: BytePoly_387 = bigint_nondet_quot!(ctx, x45, x0, 387);
    let x47: BytePoly_384 = bigint_nondet_rem!(ctx, x45, x0, 384);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x46, x0, 771), x47, 771), x45, 771),
        3145587,
        4,
    )?;
    let x48: BytePoly_768 = bigint_mul!(x47, x47, 768);
    let x49: BytePoly_387 = bigint_nondet_quot!(ctx, x48, x0, 387);
    let x50: BytePoly_384 = bigint_nondet_rem!(ctx, x48, x0, 384);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x49, x0, 771), x50, 771), x48, 771),
        3145587,
        4,
    )?;
    let x51: BytePoly_768 = bigint_mul!(x50, x1, 768);
    let x52: BytePoly_387 = bigint_nondet_quot!(ctx, x51, x0, 387);
    let x53: BytePoly_384 = bigint_nondet_rem!(ctx, x51, x0, 384);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x52, x0, 771), x53, 771), x51, 771),
        3145587,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x53, x2, 384), 34, 1)?;
    return Ok(());
}
pub fn nondet_inv_test_8(ctx: &mut BigIntContext) -> Result<()> {
    let x0: BytePoly_1 = bigint_const!(ctx, 1);
    let x1: BytePoly_1 = bigint_def!(ctx, 1, 0, 1);
    let x2: BytePoly_1 = bigint_def!(ctx, 1, 1, 1);
    let x3: BytePoly_1 = bigint_def!(ctx, 1, 2, 1);
    let x4: BytePoly_1 = bigint_nondet_inv!(ctx, x1, x2, 1);
    let x5: BytePoly_2 = bigint_mul!(x1, x4, 2);
    let x6: BytePoly_3 = bigint_nondet_quot!(ctx, x5, x2, 3);
    let x7: BytePoly_1 = bigint_nondet_rem!(ctx, x5, x2, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x6, x2, 4), x7, 4), x5, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x7, x0, 1), 34, 1)?;
    eqz(ctx, &bigint_sub!(x4, x3, 1), 34, 1)?;
    return Ok(());
}
pub fn const_add_test_8(ctx: &mut BigIntContext) -> Result<()> {
    let x0: BytePoly_2 = bigint_const!(ctx, 71, 71);
    let x1: BytePoly_1 = bigint_def!(ctx, 1, 0, 1);
    let x2: BytePoly_3 = bigint_def!(ctx, 3, 1, 1);
    eqz(ctx, &bigint_sub!(bigint_add!(x1, x0, 2), x2, 3), 34, 1)?;
    return Ok(());
}
pub fn const_add_alt_test_16(ctx: &mut BigIntContext) -> Result<()> {
    let x0: BytePoly_2 = bigint_const!(ctx, 50, 84);
    let x1: BytePoly_2 = bigint_def!(ctx, 2, 0, 1);
    let x2: BytePoly_3 = bigint_def!(ctx, 3, 1, 1);
    eqz(ctx, &bigint_sub!(bigint_add!(x1, x0, 2), x2, 3), 34, 1)?;
    return Ok(());
}
pub fn const_mul_test_8(ctx: &mut BigIntContext) -> Result<()> {
    let x0: BytePoly_2 = bigint_const!(ctx, 50, 84);
    let x1: BytePoly_1 = bigint_def!(ctx, 1, 0, 1);
    let x2: BytePoly_3 = bigint_def!(ctx, 3, 1, 1);
    eqz(ctx, &bigint_sub!(bigint_mul!(x1, x0, 3), x2, 3), 16259, 2)?;
    return Ok(());
}
pub fn add_test_8(ctx: &mut BigIntContext) -> Result<()> {
    let x0: BytePoly_1 = bigint_def!(ctx, 1, 0, 1);
    let x1: BytePoly_1 = bigint_def!(ctx, 1, 1, 1);
    let x2: BytePoly_2 = bigint_def!(ctx, 2, 2, 1);
    eqz(ctx, &bigint_sub!(bigint_add!(x0, x1, 1), x2, 2), 34, 1)?;
    return Ok(());
}
pub fn add_test_16(ctx: &mut BigIntContext) -> Result<()> {
    let x0: BytePoly_2 = bigint_def!(ctx, 2, 0, 1);
    let x1: BytePoly_2 = bigint_def!(ctx, 2, 1, 1);
    let x2: BytePoly_3 = bigint_def!(ctx, 3, 2, 1);
    eqz(ctx, &bigint_sub!(bigint_add!(x0, x1, 2), x2, 3), 34, 1)?;
    return Ok(());
}
pub fn add_test_128(ctx: &mut BigIntContext) -> Result<()> {
    let x0: BytePoly_16 = bigint_def!(ctx, 16, 0, 1);
    let x1: BytePoly_16 = bigint_def!(ctx, 16, 1, 1);
    let x2: BytePoly_17 = bigint_def!(ctx, 17, 2, 1);
    eqz(ctx, &bigint_sub!(bigint_add!(x0, x1, 16), x2, 17), 34, 1)?;
    return Ok(());
}
pub fn const_one_test_8(ctx: &mut BigIntContext) -> Result<()> {
    let x0: BytePoly_1 = bigint_const!(ctx, 1);
    let x1: BytePoly_1 = bigint_def!(ctx, 1, 0, 1);
    eqz(ctx, &bigint_sub!(x0, x1, 1), 34, 1)?;
    return Ok(());
}
pub fn const_twobyte_test_16(ctx: &mut BigIntContext) -> Result<()> {
    let x0: BytePoly_2 = bigint_const!(ctx, 52, 18);
    let x1: BytePoly_2 = bigint_def!(ctx, 2, 0, 1);
    eqz(ctx, &bigint_sub!(x0, x1, 2), 34, 1)?;
    return Ok(());
}
pub fn sub_test_8(ctx: &mut BigIntContext) -> Result<()> {
    let x0: BytePoly_1 = bigint_def!(ctx, 1, 0, 1);
    let x1: BytePoly_1 = bigint_def!(ctx, 1, 1, 1);
    let x2: BytePoly_1 = bigint_def!(ctx, 1, 2, 1);
    eqz(ctx, &bigint_sub!(bigint_sub!(x0, x1, 1), x2, 1), 34, 1)?;
    return Ok(());
}
pub fn sub_test_128(ctx: &mut BigIntContext) -> Result<()> {
    let x0: BytePoly_16 = bigint_def!(ctx, 16, 0, 1);
    let x1: BytePoly_16 = bigint_def!(ctx, 16, 1, 1);
    let x2: BytePoly_16 = bigint_def!(ctx, 16, 2, 1);
    eqz(ctx, &bigint_sub!(bigint_sub!(x0, x1, 16), x2, 16), 34, 1)?;
    return Ok(());
}
pub fn mul_test_8(ctx: &mut BigIntContext) -> Result<()> {
    let x0: BytePoly_1 = bigint_def!(ctx, 1, 0, 1);
    let x1: BytePoly_1 = bigint_def!(ctx, 1, 1, 1);
    let x2: BytePoly_2 = bigint_def!(ctx, 2, 2, 1);
    eqz(ctx, &bigint_sub!(bigint_mul!(x0, x1, 2), x2, 2), 8131, 2)?;
    return Ok(());
}
pub fn mul_test_128(ctx: &mut BigIntContext) -> Result<()> {
    let x0: BytePoly_16 = bigint_def!(ctx, 16, 0, 1);
    let x1: BytePoly_16 = bigint_def!(ctx, 16, 1, 1);
    let x2: BytePoly_32 = bigint_def!(ctx, 32, 2, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_mul!(x0, x1, 32), x2, 32),
        130053,
        4,
    )?;
    return Ok(());
}
pub fn reduce_test_8(ctx: &mut BigIntContext) -> Result<()> {
    let x0: BytePoly_1 = bigint_def!(ctx, 1, 0, 1);
    let x1: BytePoly_1 = bigint_def!(ctx, 1, 1, 1);
    let x2: BytePoly_1 = bigint_def!(ctx, 1, 2, 1);
    let x3: BytePoly_1 = bigint_nondet_quot!(ctx, x0, x1, 1);
    let x4: BytePoly_1 = bigint_nondet_rem!(ctx, x0, x1, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3, x1, 2), x4, 2), x0, 2),
        8131,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x4, x2, 1), 34, 1)?;
    return Ok(());
}
pub fn reduce_test_128(ctx: &mut BigIntContext) -> Result<()> {
    let x0: BytePoly_16 = bigint_def!(ctx, 16, 0, 1);
    let x1: BytePoly_16 = bigint_def!(ctx, 16, 1, 1);
    let x2: BytePoly_16 = bigint_def!(ctx, 16, 2, 1);
    let x3: BytePoly_16 = bigint_nondet_quot!(ctx, x0, x1, 16);
    let x4: BytePoly_16 = bigint_nondet_rem!(ctx, x0, x1, 16);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3, x1, 32), x4, 32), x0, 32),
        130053,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x4, x2, 16), 34, 1)?;
    return Ok(());
}
pub fn ecdsa_verify_8(ctx: &mut BigIntContext) -> Result<()> {
    let x0: BytePoly_1 = bigint_const!(ctx, 3);
    let x1: BytePoly_1 = bigint_const!(ctx, 1);
    let x2: BytePoly_1 = bigint_const!(ctx, 2);
    let x3: BytePoly_1 = bigint_const!(ctx, 1);
    let x4: BytePoly_1 = bigint_const!(ctx, 3);
    let x5: BytePoly_1 = bigint_const!(ctx, 0);
    let x6: BytePoly_1 = bigint_const!(ctx, 31);
    let x7: BytePoly_1 = bigint_def!(ctx, 1, 0, 1);
    let x8: BytePoly_1 = bigint_def!(ctx, 1, 1, 1);
    let x9: BytePoly_2 = bigint_def!(ctx, 2, 2, 1);
    let x10: BytePoly_1 = bigint_def!(ctx, 1, 3, 1);
    let x11: BytePoly_1 = bigint_def!(ctx, 1, 4, 1);
    let x12: BytePoly_2 = bigint_def!(ctx, 2, 5, 1);
    let x13: BytePoly_2 = bigint_def!(ctx, 2, 6, 1);
    let x14: BytePoly_2 = bigint_def!(ctx, 2, 7, 1);
    let x15: BytePoly_1 = bigint_def!(ctx, 1, 8, 1);
    let x16: BytePoly_1 = bigint_def!(ctx, 1, 9, 1);
    let x17: BytePoly_2 = bigint_mul!(x10, x10, 2);
    let x18: BytePoly_3 = bigint_nondet_quot!(ctx, x17, x6, 3);
    let x19: BytePoly_1 = bigint_nondet_rem!(ctx, x17, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x18, x6, 4), x19, 4), x17, 4),
        24387,
        2,
    )?;
    let x20: BytePoly_2 = bigint_sub!(
        bigint_mul!(x11, x11, 2),
        bigint_add!(
            bigint_add!(bigint_mul!(x10, x19, 2), bigint_mul!(x10, x5, 2), 2),
            x4,
            2
        ),
        2
    );
    let x21: BytePoly_3 = bigint_nondet_quot!(ctx, x20, x6, 3);
    let x22: BytePoly_1 = bigint_nondet_rem!(ctx, x20, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x21, x6, 4), x22, 4), x20, 4),
        24387,
        2,
    )?;
    eqz(ctx, &x22, 34, 1)?;
    let x23: BytePoly_2 = bigint_mul!(x16, x16, 2);
    let x24: BytePoly_2 = bigint_mul!(x15, x15, 2);
    let x25: BytePoly_3 = bigint_nondet_quot!(ctx, x24, x6, 3);
    let x26: BytePoly_1 = bigint_nondet_rem!(ctx, x24, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x25, x6, 4), x26, 4), x24, 4),
        24387,
        2,
    )?;
    let x27: BytePoly_2 = bigint_mul!(x15, x5, 2);
    let x28: BytePoly_2 = bigint_sub!(
        x23,
        bigint_add!(bigint_add!(bigint_mul!(x15, x26, 2), x27, 2), x4, 2),
        2
    );
    let x29: BytePoly_3 = bigint_nondet_quot!(ctx, x28, x6, 3);
    let x30: BytePoly_1 = bigint_nondet_rem!(ctx, x28, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x29, x6, 4), x30, 4), x28, 4),
        24387,
        2,
    )?;
    eqz(ctx, &x30, 34, 1)?;
    let x31: BytePoly_2 = bigint_sub!(x9, x3, 2);
    let x32: BytePoly_3 = bigint_nondet_quot!(ctx, x24, x6, 3);
    let x33: BytePoly_1 = bigint_nondet_rem!(ctx, x24, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x32, x6, 4), x33, 4), x24, 4),
        24387,
        2,
    )?;
    let x34: BytePoly_2 = bigint_sub!(
        x23,
        bigint_add!(bigint_add!(bigint_mul!(x15, x33, 2), x27, 2), x4, 2),
        2
    );
    let x35: BytePoly_3 = bigint_nondet_quot!(ctx, x34, x6, 3);
    let x36: BytePoly_1 = bigint_nondet_rem!(ctx, x34, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x35, x6, 4), x36, 4), x34, 4),
        24387,
        2,
    )?;
    eqz(ctx, &x36, 34, 1)?;
    let x37: BytePoly_1 = bigint_nondet_rem!(ctx, x31, x2, 1);
    let x38: BytePoly_2 = bigint_nondet_quot!(ctx, x31, x2, 2);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x38, x2, 3), x37, 3), x31, 3),
        16259,
        2,
    )?;
    let x39: BytePoly_1 = bigint_sub!(x3, x37, 1);
    eqz(ctx, &bigint_mul!(x37, x39, 2), 8131, 2)?;
    let x40: BytePoly_1 = bigint_add!(bigint_sub!(x11, x16, 1), x6, 1);
    let x41: BytePoly_1 = bigint_add!(bigint_sub!(x10, x15, 1), x6, 1);
    let x42: BytePoly_1 = bigint_nondet_inv!(ctx, x41, x6, 1);
    let x43: BytePoly_2 = bigint_mul!(x41, x42, 2);
    let x44: BytePoly_3 = bigint_nondet_quot!(ctx, x43, x6, 3);
    let x45: BytePoly_1 = bigint_nondet_rem!(ctx, x43, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x44, x6, 4), x45, 4), x43, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x45, x1, 1), 34, 1)?;
    let x46: BytePoly_2 = bigint_mul!(x40, x42, 2);
    let x47: BytePoly_3 = bigint_nondet_quot!(ctx, x46, x6, 3);
    let x48: BytePoly_1 = bigint_nondet_rem!(ctx, x46, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x47, x6, 4), x48, 4), x46, 4),
        24387,
        2,
    )?;
    let x49: BytePoly_2 = bigint_add!(bigint_sub!(x16, bigint_mul!(x48, x15, 2), 2), x6, 2);
    let x50: BytePoly_2 = bigint_nondet_quot!(ctx, x49, x6, 2);
    let x51: BytePoly_1 = bigint_nondet_rem!(ctx, x49, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x50, x6, 3), x51, 3), x49, 3),
        16259,
        2,
    )?;
    let x52: BytePoly_2 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x48, x48, 2), x15, 2), x6, 2),
            x10,
            2
        ),
        x6,
        2
    );
    let x53: BytePoly_3 = bigint_nondet_quot!(ctx, x52, x6, 3);
    let x54: BytePoly_1 = bigint_nondet_rem!(ctx, x52, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x53, x6, 4), x54, 4), x52, 4),
        24387,
        2,
    )?;
    let x55: BytePoly_2 = bigint_mul!(x48, x54, 2);
    let x56: BytePoly_3 = bigint_nondet_quot!(ctx, x55, x6, 3);
    let x57: BytePoly_1 = bigint_nondet_rem!(ctx, x55, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x56, x6, 4), x57, 4), x55, 4),
        24387,
        2,
    )?;
    let x58: BytePoly_1 = bigint_add!(bigint_sub!(x6, bigint_add!(x57, x51, 1), 1), x6, 1);
    let x59: BytePoly_1 = bigint_nondet_quot!(ctx, x58, x6, 1);
    let x60: BytePoly_1 = bigint_nondet_rem!(ctx, x58, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x59, x6, 2), x60, 2), x58, 2),
        8131,
        2,
    )?;
    let x61: BytePoly_2 = bigint_add!(bigint_mul!(x54, x37, 2), bigint_mul!(x15, x39, 2), 2);
    let x62: BytePoly_2 = bigint_add!(bigint_mul!(x60, x37, 2), bigint_mul!(x16, x39, 2), 2);
    let x63: BytePoly_3 = bigint_nondet_quot!(ctx, x61, x6, 3);
    let x64: BytePoly_1 = bigint_nondet_rem!(ctx, x61, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x63, x6, 4), x64, 4), x61, 4),
        24387,
        2,
    )?;
    let x65: BytePoly_3 = bigint_nondet_quot!(ctx, x62, x6, 3);
    let x66: BytePoly_1 = bigint_nondet_rem!(ctx, x62, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x65, x6, 4), x66, 4), x62, 4),
        24387,
        2,
    )?;
    let x67: BytePoly_3 = bigint_nondet_quot!(ctx, x17, x6, 3);
    let x68: BytePoly_1 = bigint_nondet_rem!(ctx, x17, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x67, x6, 4), x68, 4), x17, 4),
        24387,
        2,
    )?;
    let x69: BytePoly_2 = bigint_add!(bigint_mul!(x68, x0, 2), x5, 2);
    let x70: BytePoly_3 = bigint_nondet_quot!(ctx, x69, x6, 3);
    let x71: BytePoly_1 = bigint_nondet_rem!(ctx, x69, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x70, x6, 4), x71, 4), x69, 4),
        24387,
        2,
    )?;
    let x72: BytePoly_1 = bigint_add!(x11, x11, 1);
    let x73: BytePoly_1 = bigint_nondet_quot!(ctx, x72, x6, 1);
    let x74: BytePoly_1 = bigint_nondet_rem!(ctx, x72, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x73, x6, 2), x74, 2), x72, 2),
        8131,
        2,
    )?;
    let x75: BytePoly_1 = bigint_nondet_inv!(ctx, x74, x6, 1);
    let x76: BytePoly_2 = bigint_mul!(x74, x75, 2);
    let x77: BytePoly_3 = bigint_nondet_quot!(ctx, x76, x6, 3);
    let x78: BytePoly_1 = bigint_nondet_rem!(ctx, x76, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x77, x6, 4), x78, 4), x76, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x78, x3, 1), 34, 1)?;
    let x79: BytePoly_2 = bigint_mul!(x71, x75, 2);
    let x80: BytePoly_3 = bigint_nondet_quot!(ctx, x79, x6, 3);
    let x81: BytePoly_1 = bigint_nondet_rem!(ctx, x79, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x80, x6, 4), x81, 4), x79, 4),
        24387,
        2,
    )?;
    let x82: BytePoly_2 = bigint_mul!(x81, x10, 2);
    let x83: BytePoly_3 = bigint_nondet_quot!(ctx, x82, x6, 3);
    let x84: BytePoly_1 = bigint_nondet_rem!(ctx, x82, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x83, x6, 4), x84, 4), x82, 4),
        24387,
        2,
    )?;
    let x85: BytePoly_1 = bigint_add!(bigint_sub!(x11, x84, 1), x6, 1);
    let x86: BytePoly_1 = bigint_nondet_quot!(ctx, x85, x6, 1);
    let x87: BytePoly_1 = bigint_nondet_rem!(ctx, x85, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x86, x6, 2), x87, 2), x85, 2),
        8131,
        2,
    )?;
    let x88: BytePoly_2 = bigint_mul!(x81, x81, 2);
    let x89: BytePoly_3 = bigint_nondet_quot!(ctx, x88, x6, 3);
    let x90: BytePoly_1 = bigint_nondet_rem!(ctx, x88, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x89, x6, 4), x90, 4), x88, 4),
        24387,
        2,
    )?;
    let x91: BytePoly_1 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x90, x10, 1), x6, 1), x10, 1),
        x6,
        1
    );
    let x92: BytePoly_1 = bigint_nondet_quot!(ctx, x91, x6, 1);
    let x93: BytePoly_1 = bigint_nondet_rem!(ctx, x91, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x92, x6, 2), x93, 2), x91, 2),
        8131,
        2,
    )?;
    let x94: BytePoly_2 = bigint_mul!(x81, x93, 2);
    let x95: BytePoly_3 = bigint_nondet_quot!(ctx, x94, x6, 3);
    let x96: BytePoly_1 = bigint_nondet_rem!(ctx, x94, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x95, x6, 4), x96, 4), x94, 4),
        24387,
        2,
    )?;
    let x97: BytePoly_1 = bigint_add!(bigint_sub!(x6, bigint_add!(x96, x87, 1), 1), x6, 1);
    let x98: BytePoly_1 = bigint_nondet_quot!(ctx, x97, x6, 1);
    let x99: BytePoly_1 = bigint_nondet_rem!(ctx, x97, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x98, x6, 2), x99, 2), x97, 2),
        8131,
        2,
    )?;
    let x100: BytePoly_1 = bigint_nondet_rem!(ctx, x38, x2, 1);
    let x101: BytePoly_2 = bigint_nondet_quot!(ctx, x38, x2, 2);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x101, x2, 3), x100, 3), x38, 3),
        16259,
        2,
    )?;
    let x102: BytePoly_1 = bigint_sub!(x3, x100, 1);
    eqz(ctx, &bigint_mul!(x100, x102, 2), 8131, 2)?;
    let x103: BytePoly_1 = bigint_add!(bigint_sub!(x93, x64, 1), x6, 1);
    let x104: BytePoly_1 = bigint_nondet_inv!(ctx, x103, x6, 1);
    let x105: BytePoly_2 = bigint_mul!(x103, x104, 2);
    let x106: BytePoly_3 = bigint_nondet_quot!(ctx, x105, x6, 3);
    let x107: BytePoly_1 = bigint_nondet_rem!(ctx, x105, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x106, x6, 4), x107, 4), x105, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x107, x1, 1), 34, 1)?;
    let x108: BytePoly_2 = bigint_mul!(bigint_add!(bigint_sub!(x99, x66, 1), x6, 1), x104, 2);
    let x109: BytePoly_3 = bigint_nondet_quot!(ctx, x108, x6, 3);
    let x110: BytePoly_1 = bigint_nondet_rem!(ctx, x108, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x109, x6, 4), x110, 4), x108, 4),
        24387,
        2,
    )?;
    let x111: BytePoly_2 = bigint_add!(bigint_sub!(x66, bigint_mul!(x110, x64, 2), 2), x6, 2);
    let x112: BytePoly_2 = bigint_nondet_quot!(ctx, x111, x6, 2);
    let x113: BytePoly_1 = bigint_nondet_rem!(ctx, x111, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x112, x6, 3), x113, 3), x111, 3),
        16259,
        2,
    )?;
    let x114: BytePoly_2 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x110, x110, 2), x64, 2), x6, 2),
            x93,
            2
        ),
        x6,
        2
    );
    let x115: BytePoly_3 = bigint_nondet_quot!(ctx, x114, x6, 3);
    let x116: BytePoly_1 = bigint_nondet_rem!(ctx, x114, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x115, x6, 4), x116, 4), x114, 4),
        24387,
        2,
    )?;
    let x117: BytePoly_2 = bigint_mul!(x110, x116, 2);
    let x118: BytePoly_3 = bigint_nondet_quot!(ctx, x117, x6, 3);
    let x119: BytePoly_1 = bigint_nondet_rem!(ctx, x117, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x118, x6, 4), x119, 4), x117, 4),
        24387,
        2,
    )?;
    let x120: BytePoly_1 = bigint_add!(bigint_sub!(x6, bigint_add!(x119, x113, 1), 1), x6, 1);
    let x121: BytePoly_1 = bigint_nondet_quot!(ctx, x120, x6, 1);
    let x122: BytePoly_1 = bigint_nondet_rem!(ctx, x120, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x121, x6, 2), x122, 2), x120, 2),
        8131,
        2,
    )?;
    let x123: BytePoly_2 = bigint_add!(bigint_mul!(x116, x100, 2), bigint_mul!(x64, x102, 2), 2);
    let x124: BytePoly_2 = bigint_add!(bigint_mul!(x122, x100, 2), bigint_mul!(x66, x102, 2), 2);
    let x125: BytePoly_3 = bigint_nondet_quot!(ctx, x123, x6, 3);
    let x126: BytePoly_1 = bigint_nondet_rem!(ctx, x123, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x125, x6, 4), x126, 4), x123, 4),
        24387,
        2,
    )?;
    let x127: BytePoly_3 = bigint_nondet_quot!(ctx, x124, x6, 3);
    let x128: BytePoly_1 = bigint_nondet_rem!(ctx, x124, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x127, x6, 4), x128, 4), x124, 4),
        24387,
        2,
    )?;
    let x129: BytePoly_2 = bigint_mul!(x93, x93, 2);
    let x130: BytePoly_3 = bigint_nondet_quot!(ctx, x129, x6, 3);
    let x131: BytePoly_1 = bigint_nondet_rem!(ctx, x129, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x130, x6, 4), x131, 4), x129, 4),
        24387,
        2,
    )?;
    let x132: BytePoly_2 = bigint_add!(bigint_mul!(x131, x0, 2), x5, 2);
    let x133: BytePoly_3 = bigint_nondet_quot!(ctx, x132, x6, 3);
    let x134: BytePoly_1 = bigint_nondet_rem!(ctx, x132, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x133, x6, 4), x134, 4), x132, 4),
        24387,
        2,
    )?;
    let x135: BytePoly_1 = bigint_add!(x99, x99, 1);
    let x136: BytePoly_1 = bigint_nondet_quot!(ctx, x135, x6, 1);
    let x137: BytePoly_1 = bigint_nondet_rem!(ctx, x135, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x136, x6, 2), x137, 2), x135, 2),
        8131,
        2,
    )?;
    let x138: BytePoly_1 = bigint_nondet_inv!(ctx, x137, x6, 1);
    let x139: BytePoly_2 = bigint_mul!(x137, x138, 2);
    let x140: BytePoly_3 = bigint_nondet_quot!(ctx, x139, x6, 3);
    let x141: BytePoly_1 = bigint_nondet_rem!(ctx, x139, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x140, x6, 4), x141, 4), x139, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x141, x3, 1), 34, 1)?;
    let x142: BytePoly_2 = bigint_mul!(x134, x138, 2);
    let x143: BytePoly_3 = bigint_nondet_quot!(ctx, x142, x6, 3);
    let x144: BytePoly_1 = bigint_nondet_rem!(ctx, x142, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x143, x6, 4), x144, 4), x142, 4),
        24387,
        2,
    )?;
    let x145: BytePoly_2 = bigint_mul!(x144, x93, 2);
    let x146: BytePoly_3 = bigint_nondet_quot!(ctx, x145, x6, 3);
    let x147: BytePoly_1 = bigint_nondet_rem!(ctx, x145, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x146, x6, 4), x147, 4), x145, 4),
        24387,
        2,
    )?;
    let x148: BytePoly_1 = bigint_add!(bigint_sub!(x99, x147, 1), x6, 1);
    let x149: BytePoly_1 = bigint_nondet_quot!(ctx, x148, x6, 1);
    let x150: BytePoly_1 = bigint_nondet_rem!(ctx, x148, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x149, x6, 2), x150, 2), x148, 2),
        8131,
        2,
    )?;
    let x151: BytePoly_2 = bigint_mul!(x144, x144, 2);
    let x152: BytePoly_3 = bigint_nondet_quot!(ctx, x151, x6, 3);
    let x153: BytePoly_1 = bigint_nondet_rem!(ctx, x151, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x152, x6, 4), x153, 4), x151, 4),
        24387,
        2,
    )?;
    let x154: BytePoly_1 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x153, x93, 1), x6, 1), x93, 1),
        x6,
        1
    );
    let x155: BytePoly_1 = bigint_nondet_quot!(ctx, x154, x6, 1);
    let x156: BytePoly_1 = bigint_nondet_rem!(ctx, x154, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x155, x6, 2), x156, 2), x154, 2),
        8131,
        2,
    )?;
    let x157: BytePoly_2 = bigint_mul!(x144, x156, 2);
    let x158: BytePoly_3 = bigint_nondet_quot!(ctx, x157, x6, 3);
    let x159: BytePoly_1 = bigint_nondet_rem!(ctx, x157, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x158, x6, 4), x159, 4), x157, 4),
        24387,
        2,
    )?;
    let x160: BytePoly_1 = bigint_add!(bigint_sub!(x6, bigint_add!(x159, x150, 1), 1), x6, 1);
    let x161: BytePoly_1 = bigint_nondet_quot!(ctx, x160, x6, 1);
    let x162: BytePoly_1 = bigint_nondet_rem!(ctx, x160, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x161, x6, 2), x162, 2), x160, 2),
        8131,
        2,
    )?;
    let x163: BytePoly_1 = bigint_nondet_rem!(ctx, x101, x2, 1);
    let x164: BytePoly_2 = bigint_nondet_quot!(ctx, x101, x2, 2);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x164, x2, 3), x163, 3), x101, 3),
        16259,
        2,
    )?;
    let x165: BytePoly_1 = bigint_sub!(x3, x163, 1);
    eqz(ctx, &bigint_mul!(x163, x165, 2), 8131, 2)?;
    let x166: BytePoly_1 = bigint_add!(bigint_sub!(x156, x126, 1), x6, 1);
    let x167: BytePoly_1 = bigint_nondet_inv!(ctx, x166, x6, 1);
    let x168: BytePoly_2 = bigint_mul!(x166, x167, 2);
    let x169: BytePoly_3 = bigint_nondet_quot!(ctx, x168, x6, 3);
    let x170: BytePoly_1 = bigint_nondet_rem!(ctx, x168, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x169, x6, 4), x170, 4), x168, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x170, x1, 1), 34, 1)?;
    let x171: BytePoly_2 = bigint_mul!(bigint_add!(bigint_sub!(x162, x128, 1), x6, 1), x167, 2);
    let x172: BytePoly_3 = bigint_nondet_quot!(ctx, x171, x6, 3);
    let x173: BytePoly_1 = bigint_nondet_rem!(ctx, x171, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x172, x6, 4), x173, 4), x171, 4),
        24387,
        2,
    )?;
    let x174: BytePoly_2 = bigint_add!(bigint_sub!(x128, bigint_mul!(x173, x126, 2), 2), x6, 2);
    let x175: BytePoly_2 = bigint_nondet_quot!(ctx, x174, x6, 2);
    let x176: BytePoly_1 = bigint_nondet_rem!(ctx, x174, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x175, x6, 3), x176, 3), x174, 3),
        16259,
        2,
    )?;
    let x177: BytePoly_2 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x173, x173, 2), x126, 2), x6, 2),
            x156,
            2
        ),
        x6,
        2
    );
    let x178: BytePoly_3 = bigint_nondet_quot!(ctx, x177, x6, 3);
    let x179: BytePoly_1 = bigint_nondet_rem!(ctx, x177, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x178, x6, 4), x179, 4), x177, 4),
        24387,
        2,
    )?;
    let x180: BytePoly_2 = bigint_mul!(x173, x179, 2);
    let x181: BytePoly_3 = bigint_nondet_quot!(ctx, x180, x6, 3);
    let x182: BytePoly_1 = bigint_nondet_rem!(ctx, x180, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x181, x6, 4), x182, 4), x180, 4),
        24387,
        2,
    )?;
    let x183: BytePoly_1 = bigint_add!(bigint_sub!(x6, bigint_add!(x182, x176, 1), 1), x6, 1);
    let x184: BytePoly_1 = bigint_nondet_quot!(ctx, x183, x6, 1);
    let x185: BytePoly_1 = bigint_nondet_rem!(ctx, x183, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x184, x6, 2), x185, 2), x183, 2),
        8131,
        2,
    )?;
    let x186: BytePoly_2 = bigint_add!(bigint_mul!(x179, x163, 2), bigint_mul!(x126, x165, 2), 2);
    let x187: BytePoly_2 = bigint_add!(bigint_mul!(x185, x163, 2), bigint_mul!(x128, x165, 2), 2);
    let x188: BytePoly_3 = bigint_nondet_quot!(ctx, x186, x6, 3);
    let x189: BytePoly_1 = bigint_nondet_rem!(ctx, x186, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x188, x6, 4), x189, 4), x186, 4),
        24387,
        2,
    )?;
    let x190: BytePoly_3 = bigint_nondet_quot!(ctx, x187, x6, 3);
    let x191: BytePoly_1 = bigint_nondet_rem!(ctx, x187, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x190, x6, 4), x191, 4), x187, 4),
        24387,
        2,
    )?;
    let x192: BytePoly_2 = bigint_mul!(x156, x156, 2);
    let x193: BytePoly_3 = bigint_nondet_quot!(ctx, x192, x6, 3);
    let x194: BytePoly_1 = bigint_nondet_rem!(ctx, x192, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x193, x6, 4), x194, 4), x192, 4),
        24387,
        2,
    )?;
    let x195: BytePoly_2 = bigint_add!(bigint_mul!(x194, x0, 2), x5, 2);
    let x196: BytePoly_3 = bigint_nondet_quot!(ctx, x195, x6, 3);
    let x197: BytePoly_1 = bigint_nondet_rem!(ctx, x195, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x196, x6, 4), x197, 4), x195, 4),
        24387,
        2,
    )?;
    let x198: BytePoly_1 = bigint_add!(x162, x162, 1);
    let x199: BytePoly_1 = bigint_nondet_quot!(ctx, x198, x6, 1);
    let x200: BytePoly_1 = bigint_nondet_rem!(ctx, x198, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x199, x6, 2), x200, 2), x198, 2),
        8131,
        2,
    )?;
    let x201: BytePoly_1 = bigint_nondet_inv!(ctx, x200, x6, 1);
    let x202: BytePoly_2 = bigint_mul!(x200, x201, 2);
    let x203: BytePoly_3 = bigint_nondet_quot!(ctx, x202, x6, 3);
    let x204: BytePoly_1 = bigint_nondet_rem!(ctx, x202, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x203, x6, 4), x204, 4), x202, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x204, x3, 1), 34, 1)?;
    let x205: BytePoly_2 = bigint_mul!(x197, x201, 2);
    let x206: BytePoly_3 = bigint_nondet_quot!(ctx, x205, x6, 3);
    let x207: BytePoly_1 = bigint_nondet_rem!(ctx, x205, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x206, x6, 4), x207, 4), x205, 4),
        24387,
        2,
    )?;
    let x208: BytePoly_2 = bigint_mul!(x207, x156, 2);
    let x209: BytePoly_3 = bigint_nondet_quot!(ctx, x208, x6, 3);
    let x210: BytePoly_1 = bigint_nondet_rem!(ctx, x208, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x209, x6, 4), x210, 4), x208, 4),
        24387,
        2,
    )?;
    let x211: BytePoly_1 = bigint_add!(bigint_sub!(x162, x210, 1), x6, 1);
    let x212: BytePoly_1 = bigint_nondet_quot!(ctx, x211, x6, 1);
    let x213: BytePoly_1 = bigint_nondet_rem!(ctx, x211, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x212, x6, 2), x213, 2), x211, 2),
        8131,
        2,
    )?;
    let x214: BytePoly_2 = bigint_mul!(x207, x207, 2);
    let x215: BytePoly_3 = bigint_nondet_quot!(ctx, x214, x6, 3);
    let x216: BytePoly_1 = bigint_nondet_rem!(ctx, x214, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x215, x6, 4), x216, 4), x214, 4),
        24387,
        2,
    )?;
    let x217: BytePoly_1 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x216, x156, 1), x6, 1), x156, 1),
        x6,
        1
    );
    let x218: BytePoly_1 = bigint_nondet_quot!(ctx, x217, x6, 1);
    let x219: BytePoly_1 = bigint_nondet_rem!(ctx, x217, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x218, x6, 2), x219, 2), x217, 2),
        8131,
        2,
    )?;
    let x220: BytePoly_2 = bigint_mul!(x207, x219, 2);
    let x221: BytePoly_3 = bigint_nondet_quot!(ctx, x220, x6, 3);
    let x222: BytePoly_1 = bigint_nondet_rem!(ctx, x220, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x221, x6, 4), x222, 4), x220, 4),
        24387,
        2,
    )?;
    let x223: BytePoly_1 = bigint_add!(bigint_sub!(x6, bigint_add!(x222, x213, 1), 1), x6, 1);
    let x224: BytePoly_1 = bigint_nondet_quot!(ctx, x223, x6, 1);
    let x225: BytePoly_1 = bigint_nondet_rem!(ctx, x223, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x224, x6, 2), x225, 2), x223, 2),
        8131,
        2,
    )?;
    let x226: BytePoly_1 = bigint_nondet_rem!(ctx, x164, x2, 1);
    let x227: BytePoly_2 = bigint_nondet_quot!(ctx, x164, x2, 2);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x227, x2, 3), x226, 3), x164, 3),
        16259,
        2,
    )?;
    let x228: BytePoly_1 = bigint_sub!(x3, x226, 1);
    eqz(ctx, &bigint_mul!(x226, x228, 2), 8131, 2)?;
    let x229: BytePoly_1 = bigint_add!(bigint_sub!(x219, x189, 1), x6, 1);
    let x230: BytePoly_1 = bigint_nondet_inv!(ctx, x229, x6, 1);
    let x231: BytePoly_2 = bigint_mul!(x229, x230, 2);
    let x232: BytePoly_3 = bigint_nondet_quot!(ctx, x231, x6, 3);
    let x233: BytePoly_1 = bigint_nondet_rem!(ctx, x231, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x232, x6, 4), x233, 4), x231, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x233, x1, 1), 34, 1)?;
    let x234: BytePoly_2 = bigint_mul!(bigint_add!(bigint_sub!(x225, x191, 1), x6, 1), x230, 2);
    let x235: BytePoly_3 = bigint_nondet_quot!(ctx, x234, x6, 3);
    let x236: BytePoly_1 = bigint_nondet_rem!(ctx, x234, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x235, x6, 4), x236, 4), x234, 4),
        24387,
        2,
    )?;
    let x237: BytePoly_2 = bigint_add!(bigint_sub!(x191, bigint_mul!(x236, x189, 2), 2), x6, 2);
    let x238: BytePoly_2 = bigint_nondet_quot!(ctx, x237, x6, 2);
    let x239: BytePoly_1 = bigint_nondet_rem!(ctx, x237, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x238, x6, 3), x239, 3), x237, 3),
        16259,
        2,
    )?;
    let x240: BytePoly_2 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x236, x236, 2), x189, 2), x6, 2),
            x219,
            2
        ),
        x6,
        2
    );
    let x241: BytePoly_3 = bigint_nondet_quot!(ctx, x240, x6, 3);
    let x242: BytePoly_1 = bigint_nondet_rem!(ctx, x240, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x241, x6, 4), x242, 4), x240, 4),
        24387,
        2,
    )?;
    let x243: BytePoly_2 = bigint_mul!(x236, x242, 2);
    let x244: BytePoly_3 = bigint_nondet_quot!(ctx, x243, x6, 3);
    let x245: BytePoly_1 = bigint_nondet_rem!(ctx, x243, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x244, x6, 4), x245, 4), x243, 4),
        24387,
        2,
    )?;
    let x246: BytePoly_1 = bigint_add!(bigint_sub!(x6, bigint_add!(x245, x239, 1), 1), x6, 1);
    let x247: BytePoly_1 = bigint_nondet_quot!(ctx, x246, x6, 1);
    let x248: BytePoly_1 = bigint_nondet_rem!(ctx, x246, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x247, x6, 2), x248, 2), x246, 2),
        8131,
        2,
    )?;
    let x249: BytePoly_2 = bigint_add!(bigint_mul!(x242, x226, 2), bigint_mul!(x189, x228, 2), 2);
    let x250: BytePoly_2 = bigint_add!(bigint_mul!(x248, x226, 2), bigint_mul!(x191, x228, 2), 2);
    let x251: BytePoly_3 = bigint_nondet_quot!(ctx, x249, x6, 3);
    let x252: BytePoly_1 = bigint_nondet_rem!(ctx, x249, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x251, x6, 4), x252, 4), x249, 4),
        24387,
        2,
    )?;
    let x253: BytePoly_3 = bigint_nondet_quot!(ctx, x250, x6, 3);
    let x254: BytePoly_1 = bigint_nondet_rem!(ctx, x250, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x253, x6, 4), x254, 4), x250, 4),
        24387,
        2,
    )?;
    let x255: BytePoly_2 = bigint_mul!(x219, x219, 2);
    let x256: BytePoly_3 = bigint_nondet_quot!(ctx, x255, x6, 3);
    let x257: BytePoly_1 = bigint_nondet_rem!(ctx, x255, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x256, x6, 4), x257, 4), x255, 4),
        24387,
        2,
    )?;
    let x258: BytePoly_2 = bigint_add!(bigint_mul!(x257, x0, 2), x5, 2);
    let x259: BytePoly_3 = bigint_nondet_quot!(ctx, x258, x6, 3);
    let x260: BytePoly_1 = bigint_nondet_rem!(ctx, x258, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x259, x6, 4), x260, 4), x258, 4),
        24387,
        2,
    )?;
    let x261: BytePoly_1 = bigint_add!(x225, x225, 1);
    let x262: BytePoly_1 = bigint_nondet_quot!(ctx, x261, x6, 1);
    let x263: BytePoly_1 = bigint_nondet_rem!(ctx, x261, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x262, x6, 2), x263, 2), x261, 2),
        8131,
        2,
    )?;
    let x264: BytePoly_1 = bigint_nondet_inv!(ctx, x263, x6, 1);
    let x265: BytePoly_2 = bigint_mul!(x263, x264, 2);
    let x266: BytePoly_3 = bigint_nondet_quot!(ctx, x265, x6, 3);
    let x267: BytePoly_1 = bigint_nondet_rem!(ctx, x265, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x266, x6, 4), x267, 4), x265, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x267, x3, 1), 34, 1)?;
    let x268: BytePoly_2 = bigint_mul!(x260, x264, 2);
    let x269: BytePoly_3 = bigint_nondet_quot!(ctx, x268, x6, 3);
    let x270: BytePoly_1 = bigint_nondet_rem!(ctx, x268, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x269, x6, 4), x270, 4), x268, 4),
        24387,
        2,
    )?;
    let x271: BytePoly_2 = bigint_mul!(x270, x219, 2);
    let x272: BytePoly_3 = bigint_nondet_quot!(ctx, x271, x6, 3);
    let x273: BytePoly_1 = bigint_nondet_rem!(ctx, x271, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x272, x6, 4), x273, 4), x271, 4),
        24387,
        2,
    )?;
    let x274: BytePoly_1 = bigint_add!(bigint_sub!(x225, x273, 1), x6, 1);
    let x275: BytePoly_1 = bigint_nondet_quot!(ctx, x274, x6, 1);
    let x276: BytePoly_1 = bigint_nondet_rem!(ctx, x274, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x275, x6, 2), x276, 2), x274, 2),
        8131,
        2,
    )?;
    let x277: BytePoly_2 = bigint_mul!(x270, x270, 2);
    let x278: BytePoly_3 = bigint_nondet_quot!(ctx, x277, x6, 3);
    let x279: BytePoly_1 = bigint_nondet_rem!(ctx, x277, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x278, x6, 4), x279, 4), x277, 4),
        24387,
        2,
    )?;
    let x280: BytePoly_1 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x279, x219, 1), x6, 1), x219, 1),
        x6,
        1
    );
    let x281: BytePoly_1 = bigint_nondet_quot!(ctx, x280, x6, 1);
    let x282: BytePoly_1 = bigint_nondet_rem!(ctx, x280, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x281, x6, 2), x282, 2), x280, 2),
        8131,
        2,
    )?;
    let x283: BytePoly_2 = bigint_mul!(x270, x282, 2);
    let x284: BytePoly_3 = bigint_nondet_quot!(ctx, x283, x6, 3);
    let x285: BytePoly_1 = bigint_nondet_rem!(ctx, x283, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x284, x6, 4), x285, 4), x283, 4),
        24387,
        2,
    )?;
    let x286: BytePoly_1 = bigint_add!(bigint_sub!(x6, bigint_add!(x285, x276, 1), 1), x6, 1);
    let x287: BytePoly_1 = bigint_nondet_quot!(ctx, x286, x6, 1);
    let x288: BytePoly_1 = bigint_nondet_rem!(ctx, x286, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x287, x6, 2), x288, 2), x286, 2),
        8131,
        2,
    )?;
    let x289: BytePoly_1 = bigint_nondet_rem!(ctx, x227, x2, 1);
    let x290: BytePoly_2 = bigint_nondet_quot!(ctx, x227, x2, 2);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x290, x2, 3), x289, 3), x227, 3),
        16259,
        2,
    )?;
    let x291: BytePoly_1 = bigint_sub!(x3, x289, 1);
    eqz(ctx, &bigint_mul!(x289, x291, 2), 8131, 2)?;
    let x292: BytePoly_1 = bigint_add!(bigint_sub!(x282, x252, 1), x6, 1);
    let x293: BytePoly_1 = bigint_nondet_inv!(ctx, x292, x6, 1);
    let x294: BytePoly_2 = bigint_mul!(x292, x293, 2);
    let x295: BytePoly_3 = bigint_nondet_quot!(ctx, x294, x6, 3);
    let x296: BytePoly_1 = bigint_nondet_rem!(ctx, x294, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x295, x6, 4), x296, 4), x294, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x296, x1, 1), 34, 1)?;
    let x297: BytePoly_2 = bigint_mul!(bigint_add!(bigint_sub!(x288, x254, 1), x6, 1), x293, 2);
    let x298: BytePoly_3 = bigint_nondet_quot!(ctx, x297, x6, 3);
    let x299: BytePoly_1 = bigint_nondet_rem!(ctx, x297, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x298, x6, 4), x299, 4), x297, 4),
        24387,
        2,
    )?;
    let x300: BytePoly_2 = bigint_add!(bigint_sub!(x254, bigint_mul!(x299, x252, 2), 2), x6, 2);
    let x301: BytePoly_2 = bigint_nondet_quot!(ctx, x300, x6, 2);
    let x302: BytePoly_1 = bigint_nondet_rem!(ctx, x300, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x301, x6, 3), x302, 3), x300, 3),
        16259,
        2,
    )?;
    let x303: BytePoly_2 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x299, x299, 2), x252, 2), x6, 2),
            x282,
            2
        ),
        x6,
        2
    );
    let x304: BytePoly_3 = bigint_nondet_quot!(ctx, x303, x6, 3);
    let x305: BytePoly_1 = bigint_nondet_rem!(ctx, x303, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x304, x6, 4), x305, 4), x303, 4),
        24387,
        2,
    )?;
    let x306: BytePoly_2 = bigint_mul!(x299, x305, 2);
    let x307: BytePoly_3 = bigint_nondet_quot!(ctx, x306, x6, 3);
    let x308: BytePoly_1 = bigint_nondet_rem!(ctx, x306, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x307, x6, 4), x308, 4), x306, 4),
        24387,
        2,
    )?;
    let x309: BytePoly_1 = bigint_add!(bigint_sub!(x6, bigint_add!(x308, x302, 1), 1), x6, 1);
    let x310: BytePoly_1 = bigint_nondet_quot!(ctx, x309, x6, 1);
    let x311: BytePoly_1 = bigint_nondet_rem!(ctx, x309, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x310, x6, 2), x311, 2), x309, 2),
        8131,
        2,
    )?;
    let x312: BytePoly_2 = bigint_add!(bigint_mul!(x305, x289, 2), bigint_mul!(x252, x291, 2), 2);
    let x313: BytePoly_2 = bigint_add!(bigint_mul!(x311, x289, 2), bigint_mul!(x254, x291, 2), 2);
    let x314: BytePoly_3 = bigint_nondet_quot!(ctx, x312, x6, 3);
    let x315: BytePoly_1 = bigint_nondet_rem!(ctx, x312, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x314, x6, 4), x315, 4), x312, 4),
        24387,
        2,
    )?;
    let x316: BytePoly_3 = bigint_nondet_quot!(ctx, x313, x6, 3);
    let x317: BytePoly_1 = bigint_nondet_rem!(ctx, x313, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x316, x6, 4), x317, 4), x313, 4),
        24387,
        2,
    )?;
    let x318: BytePoly_2 = bigint_mul!(x282, x282, 2);
    let x319: BytePoly_3 = bigint_nondet_quot!(ctx, x318, x6, 3);
    let x320: BytePoly_1 = bigint_nondet_rem!(ctx, x318, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x319, x6, 4), x320, 4), x318, 4),
        24387,
        2,
    )?;
    let x321: BytePoly_2 = bigint_add!(bigint_mul!(x320, x0, 2), x5, 2);
    let x322: BytePoly_3 = bigint_nondet_quot!(ctx, x321, x6, 3);
    let x323: BytePoly_1 = bigint_nondet_rem!(ctx, x321, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x322, x6, 4), x323, 4), x321, 4),
        24387,
        2,
    )?;
    let x324: BytePoly_1 = bigint_add!(x288, x288, 1);
    let x325: BytePoly_1 = bigint_nondet_quot!(ctx, x324, x6, 1);
    let x326: BytePoly_1 = bigint_nondet_rem!(ctx, x324, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x325, x6, 2), x326, 2), x324, 2),
        8131,
        2,
    )?;
    let x327: BytePoly_1 = bigint_nondet_inv!(ctx, x326, x6, 1);
    let x328: BytePoly_2 = bigint_mul!(x326, x327, 2);
    let x329: BytePoly_3 = bigint_nondet_quot!(ctx, x328, x6, 3);
    let x330: BytePoly_1 = bigint_nondet_rem!(ctx, x328, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x329, x6, 4), x330, 4), x328, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x330, x3, 1), 34, 1)?;
    let x331: BytePoly_2 = bigint_mul!(x323, x327, 2);
    let x332: BytePoly_3 = bigint_nondet_quot!(ctx, x331, x6, 3);
    let x333: BytePoly_1 = bigint_nondet_rem!(ctx, x331, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x332, x6, 4), x333, 4), x331, 4),
        24387,
        2,
    )?;
    let x334: BytePoly_2 = bigint_mul!(x333, x282, 2);
    let x335: BytePoly_3 = bigint_nondet_quot!(ctx, x334, x6, 3);
    let x336: BytePoly_1 = bigint_nondet_rem!(ctx, x334, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x335, x6, 4), x336, 4), x334, 4),
        24387,
        2,
    )?;
    let x337: BytePoly_1 = bigint_add!(bigint_sub!(x288, x336, 1), x6, 1);
    let x338: BytePoly_1 = bigint_nondet_quot!(ctx, x337, x6, 1);
    let x339: BytePoly_1 = bigint_nondet_rem!(ctx, x337, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x338, x6, 2), x339, 2), x337, 2),
        8131,
        2,
    )?;
    let x340: BytePoly_2 = bigint_mul!(x333, x333, 2);
    let x341: BytePoly_3 = bigint_nondet_quot!(ctx, x340, x6, 3);
    let x342: BytePoly_1 = bigint_nondet_rem!(ctx, x340, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x341, x6, 4), x342, 4), x340, 4),
        24387,
        2,
    )?;
    let x343: BytePoly_1 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x342, x282, 1), x6, 1), x282, 1),
        x6,
        1
    );
    let x344: BytePoly_1 = bigint_nondet_quot!(ctx, x343, x6, 1);
    let x345: BytePoly_1 = bigint_nondet_rem!(ctx, x343, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x344, x6, 2), x345, 2), x343, 2),
        8131,
        2,
    )?;
    let x346: BytePoly_2 = bigint_mul!(x333, x345, 2);
    let x347: BytePoly_3 = bigint_nondet_quot!(ctx, x346, x6, 3);
    let x348: BytePoly_1 = bigint_nondet_rem!(ctx, x346, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x347, x6, 4), x348, 4), x346, 4),
        24387,
        2,
    )?;
    let x349: BytePoly_1 = bigint_add!(bigint_sub!(x6, bigint_add!(x348, x339, 1), 1), x6, 1);
    let x350: BytePoly_1 = bigint_nondet_quot!(ctx, x349, x6, 1);
    let x351: BytePoly_1 = bigint_nondet_rem!(ctx, x349, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x350, x6, 2), x351, 2), x349, 2),
        8131,
        2,
    )?;
    let x352: BytePoly_1 = bigint_nondet_rem!(ctx, x290, x2, 1);
    let x353: BytePoly_2 = bigint_nondet_quot!(ctx, x290, x2, 2);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x353, x2, 3), x352, 3), x290, 3),
        16259,
        2,
    )?;
    let x354: BytePoly_1 = bigint_sub!(x3, x352, 1);
    eqz(ctx, &bigint_mul!(x352, x354, 2), 8131, 2)?;
    let x355: BytePoly_1 = bigint_add!(bigint_sub!(x345, x315, 1), x6, 1);
    let x356: BytePoly_1 = bigint_nondet_inv!(ctx, x355, x6, 1);
    let x357: BytePoly_2 = bigint_mul!(x355, x356, 2);
    let x358: BytePoly_3 = bigint_nondet_quot!(ctx, x357, x6, 3);
    let x359: BytePoly_1 = bigint_nondet_rem!(ctx, x357, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x358, x6, 4), x359, 4), x357, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x359, x1, 1), 34, 1)?;
    let x360: BytePoly_2 = bigint_mul!(bigint_add!(bigint_sub!(x351, x317, 1), x6, 1), x356, 2);
    let x361: BytePoly_3 = bigint_nondet_quot!(ctx, x360, x6, 3);
    let x362: BytePoly_1 = bigint_nondet_rem!(ctx, x360, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x361, x6, 4), x362, 4), x360, 4),
        24387,
        2,
    )?;
    let x363: BytePoly_2 = bigint_add!(bigint_sub!(x317, bigint_mul!(x362, x315, 2), 2), x6, 2);
    let x364: BytePoly_2 = bigint_nondet_quot!(ctx, x363, x6, 2);
    let x365: BytePoly_1 = bigint_nondet_rem!(ctx, x363, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x364, x6, 3), x365, 3), x363, 3),
        16259,
        2,
    )?;
    let x366: BytePoly_2 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x362, x362, 2), x315, 2), x6, 2),
            x345,
            2
        ),
        x6,
        2
    );
    let x367: BytePoly_3 = bigint_nondet_quot!(ctx, x366, x6, 3);
    let x368: BytePoly_1 = bigint_nondet_rem!(ctx, x366, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x367, x6, 4), x368, 4), x366, 4),
        24387,
        2,
    )?;
    let x369: BytePoly_2 = bigint_mul!(x362, x368, 2);
    let x370: BytePoly_3 = bigint_nondet_quot!(ctx, x369, x6, 3);
    let x371: BytePoly_1 = bigint_nondet_rem!(ctx, x369, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x370, x6, 4), x371, 4), x369, 4),
        24387,
        2,
    )?;
    let x372: BytePoly_1 = bigint_add!(bigint_sub!(x6, bigint_add!(x371, x365, 1), 1), x6, 1);
    let x373: BytePoly_1 = bigint_nondet_quot!(ctx, x372, x6, 1);
    let x374: BytePoly_1 = bigint_nondet_rem!(ctx, x372, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x373, x6, 2), x374, 2), x372, 2),
        8131,
        2,
    )?;
    let x375: BytePoly_2 = bigint_add!(bigint_mul!(x368, x352, 2), bigint_mul!(x315, x354, 2), 2);
    let x376: BytePoly_2 = bigint_add!(bigint_mul!(x374, x352, 2), bigint_mul!(x317, x354, 2), 2);
    let x377: BytePoly_3 = bigint_nondet_quot!(ctx, x375, x6, 3);
    let x378: BytePoly_1 = bigint_nondet_rem!(ctx, x375, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x377, x6, 4), x378, 4), x375, 4),
        24387,
        2,
    )?;
    let x379: BytePoly_3 = bigint_nondet_quot!(ctx, x376, x6, 3);
    let x380: BytePoly_1 = bigint_nondet_rem!(ctx, x376, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x379, x6, 4), x380, 4), x376, 4),
        24387,
        2,
    )?;
    let x381: BytePoly_2 = bigint_mul!(x345, x345, 2);
    let x382: BytePoly_3 = bigint_nondet_quot!(ctx, x381, x6, 3);
    let x383: BytePoly_1 = bigint_nondet_rem!(ctx, x381, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x382, x6, 4), x383, 4), x381, 4),
        24387,
        2,
    )?;
    let x384: BytePoly_2 = bigint_add!(bigint_mul!(x383, x0, 2), x5, 2);
    let x385: BytePoly_3 = bigint_nondet_quot!(ctx, x384, x6, 3);
    let x386: BytePoly_1 = bigint_nondet_rem!(ctx, x384, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x385, x6, 4), x386, 4), x384, 4),
        24387,
        2,
    )?;
    let x387: BytePoly_1 = bigint_add!(x351, x351, 1);
    let x388: BytePoly_1 = bigint_nondet_quot!(ctx, x387, x6, 1);
    let x389: BytePoly_1 = bigint_nondet_rem!(ctx, x387, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x388, x6, 2), x389, 2), x387, 2),
        8131,
        2,
    )?;
    let x390: BytePoly_1 = bigint_nondet_inv!(ctx, x389, x6, 1);
    let x391: BytePoly_2 = bigint_mul!(x389, x390, 2);
    let x392: BytePoly_3 = bigint_nondet_quot!(ctx, x391, x6, 3);
    let x393: BytePoly_1 = bigint_nondet_rem!(ctx, x391, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x392, x6, 4), x393, 4), x391, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x393, x3, 1), 34, 1)?;
    let x394: BytePoly_2 = bigint_mul!(x386, x390, 2);
    let x395: BytePoly_3 = bigint_nondet_quot!(ctx, x394, x6, 3);
    let x396: BytePoly_1 = bigint_nondet_rem!(ctx, x394, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x395, x6, 4), x396, 4), x394, 4),
        24387,
        2,
    )?;
    let x397: BytePoly_2 = bigint_mul!(x396, x345, 2);
    let x398: BytePoly_3 = bigint_nondet_quot!(ctx, x397, x6, 3);
    let x399: BytePoly_1 = bigint_nondet_rem!(ctx, x397, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x398, x6, 4), x399, 4), x397, 4),
        24387,
        2,
    )?;
    let x400: BytePoly_1 = bigint_add!(bigint_sub!(x351, x399, 1), x6, 1);
    let x401: BytePoly_1 = bigint_nondet_quot!(ctx, x400, x6, 1);
    let x402: BytePoly_1 = bigint_nondet_rem!(ctx, x400, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x401, x6, 2), x402, 2), x400, 2),
        8131,
        2,
    )?;
    let x403: BytePoly_2 = bigint_mul!(x396, x396, 2);
    let x404: BytePoly_3 = bigint_nondet_quot!(ctx, x403, x6, 3);
    let x405: BytePoly_1 = bigint_nondet_rem!(ctx, x403, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x404, x6, 4), x405, 4), x403, 4),
        24387,
        2,
    )?;
    let x406: BytePoly_1 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x405, x345, 1), x6, 1), x345, 1),
        x6,
        1
    );
    let x407: BytePoly_1 = bigint_nondet_quot!(ctx, x406, x6, 1);
    let x408: BytePoly_1 = bigint_nondet_rem!(ctx, x406, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x407, x6, 2), x408, 2), x406, 2),
        8131,
        2,
    )?;
    let x409: BytePoly_2 = bigint_mul!(x396, x408, 2);
    let x410: BytePoly_3 = bigint_nondet_quot!(ctx, x409, x6, 3);
    let x411: BytePoly_1 = bigint_nondet_rem!(ctx, x409, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x410, x6, 4), x411, 4), x409, 4),
        24387,
        2,
    )?;
    let x412: BytePoly_1 = bigint_add!(bigint_sub!(x6, bigint_add!(x411, x402, 1), 1), x6, 1);
    let x413: BytePoly_1 = bigint_nondet_quot!(ctx, x412, x6, 1);
    let x414: BytePoly_1 = bigint_nondet_rem!(ctx, x412, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x413, x6, 2), x414, 2), x412, 2),
        8131,
        2,
    )?;
    let x415: BytePoly_1 = bigint_nondet_rem!(ctx, x353, x2, 1);
    let x416: BytePoly_2 = bigint_nondet_quot!(ctx, x353, x2, 2);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x416, x2, 3), x415, 3), x353, 3),
        16259,
        2,
    )?;
    let x417: BytePoly_1 = bigint_sub!(x3, x415, 1);
    eqz(ctx, &bigint_mul!(x415, x417, 2), 8131, 2)?;
    let x418: BytePoly_1 = bigint_add!(bigint_sub!(x408, x378, 1), x6, 1);
    let x419: BytePoly_1 = bigint_nondet_inv!(ctx, x418, x6, 1);
    let x420: BytePoly_2 = bigint_mul!(x418, x419, 2);
    let x421: BytePoly_3 = bigint_nondet_quot!(ctx, x420, x6, 3);
    let x422: BytePoly_1 = bigint_nondet_rem!(ctx, x420, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x421, x6, 4), x422, 4), x420, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x422, x1, 1), 34, 1)?;
    let x423: BytePoly_2 = bigint_mul!(bigint_add!(bigint_sub!(x414, x380, 1), x6, 1), x419, 2);
    let x424: BytePoly_3 = bigint_nondet_quot!(ctx, x423, x6, 3);
    let x425: BytePoly_1 = bigint_nondet_rem!(ctx, x423, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x424, x6, 4), x425, 4), x423, 4),
        24387,
        2,
    )?;
    let x426: BytePoly_2 = bigint_add!(bigint_sub!(x380, bigint_mul!(x425, x378, 2), 2), x6, 2);
    let x427: BytePoly_2 = bigint_nondet_quot!(ctx, x426, x6, 2);
    let x428: BytePoly_1 = bigint_nondet_rem!(ctx, x426, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x427, x6, 3), x428, 3), x426, 3),
        16259,
        2,
    )?;
    let x429: BytePoly_2 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x425, x425, 2), x378, 2), x6, 2),
            x408,
            2
        ),
        x6,
        2
    );
    let x430: BytePoly_3 = bigint_nondet_quot!(ctx, x429, x6, 3);
    let x431: BytePoly_1 = bigint_nondet_rem!(ctx, x429, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x430, x6, 4), x431, 4), x429, 4),
        24387,
        2,
    )?;
    let x432: BytePoly_2 = bigint_mul!(x425, x431, 2);
    let x433: BytePoly_3 = bigint_nondet_quot!(ctx, x432, x6, 3);
    let x434: BytePoly_1 = bigint_nondet_rem!(ctx, x432, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x433, x6, 4), x434, 4), x432, 4),
        24387,
        2,
    )?;
    let x435: BytePoly_1 = bigint_add!(bigint_sub!(x6, bigint_add!(x434, x428, 1), 1), x6, 1);
    let x436: BytePoly_1 = bigint_nondet_quot!(ctx, x435, x6, 1);
    let x437: BytePoly_1 = bigint_nondet_rem!(ctx, x435, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x436, x6, 2), x437, 2), x435, 2),
        8131,
        2,
    )?;
    let x438: BytePoly_2 = bigint_add!(bigint_mul!(x431, x415, 2), bigint_mul!(x378, x417, 2), 2);
    let x439: BytePoly_2 = bigint_add!(bigint_mul!(x437, x415, 2), bigint_mul!(x380, x417, 2), 2);
    let x440: BytePoly_3 = bigint_nondet_quot!(ctx, x438, x6, 3);
    let x441: BytePoly_1 = bigint_nondet_rem!(ctx, x438, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x440, x6, 4), x441, 4), x438, 4),
        24387,
        2,
    )?;
    let x442: BytePoly_3 = bigint_nondet_quot!(ctx, x439, x6, 3);
    let x443: BytePoly_1 = bigint_nondet_rem!(ctx, x439, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x442, x6, 4), x443, 4), x439, 4),
        24387,
        2,
    )?;
    let x444: BytePoly_2 = bigint_mul!(x408, x408, 2);
    let x445: BytePoly_3 = bigint_nondet_quot!(ctx, x444, x6, 3);
    let x446: BytePoly_1 = bigint_nondet_rem!(ctx, x444, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x445, x6, 4), x446, 4), x444, 4),
        24387,
        2,
    )?;
    let x447: BytePoly_2 = bigint_add!(bigint_mul!(x446, x0, 2), x5, 2);
    let x448: BytePoly_3 = bigint_nondet_quot!(ctx, x447, x6, 3);
    let x449: BytePoly_1 = bigint_nondet_rem!(ctx, x447, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x448, x6, 4), x449, 4), x447, 4),
        24387,
        2,
    )?;
    let x450: BytePoly_1 = bigint_add!(x414, x414, 1);
    let x451: BytePoly_1 = bigint_nondet_quot!(ctx, x450, x6, 1);
    let x452: BytePoly_1 = bigint_nondet_rem!(ctx, x450, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x451, x6, 2), x452, 2), x450, 2),
        8131,
        2,
    )?;
    let x453: BytePoly_1 = bigint_nondet_inv!(ctx, x452, x6, 1);
    let x454: BytePoly_2 = bigint_mul!(x452, x453, 2);
    let x455: BytePoly_3 = bigint_nondet_quot!(ctx, x454, x6, 3);
    let x456: BytePoly_1 = bigint_nondet_rem!(ctx, x454, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x455, x6, 4), x456, 4), x454, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x456, x3, 1), 34, 1)?;
    let x457: BytePoly_2 = bigint_mul!(x449, x453, 2);
    let x458: BytePoly_3 = bigint_nondet_quot!(ctx, x457, x6, 3);
    let x459: BytePoly_1 = bigint_nondet_rem!(ctx, x457, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x458, x6, 4), x459, 4), x457, 4),
        24387,
        2,
    )?;
    let x460: BytePoly_2 = bigint_mul!(x459, x408, 2);
    let x461: BytePoly_3 = bigint_nondet_quot!(ctx, x460, x6, 3);
    let x462: BytePoly_1 = bigint_nondet_rem!(ctx, x460, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x461, x6, 4), x462, 4), x460, 4),
        24387,
        2,
    )?;
    let x463: BytePoly_1 = bigint_add!(bigint_sub!(x414, x462, 1), x6, 1);
    let x464: BytePoly_1 = bigint_nondet_quot!(ctx, x463, x6, 1);
    let x465: BytePoly_1 = bigint_nondet_rem!(ctx, x463, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x464, x6, 2), x465, 2), x463, 2),
        8131,
        2,
    )?;
    let x466: BytePoly_2 = bigint_mul!(x459, x459, 2);
    let x467: BytePoly_3 = bigint_nondet_quot!(ctx, x466, x6, 3);
    let x468: BytePoly_1 = bigint_nondet_rem!(ctx, x466, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x467, x6, 4), x468, 4), x466, 4),
        24387,
        2,
    )?;
    let x469: BytePoly_1 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x468, x408, 1), x6, 1), x408, 1),
        x6,
        1
    );
    let x470: BytePoly_1 = bigint_nondet_quot!(ctx, x469, x6, 1);
    let x471: BytePoly_1 = bigint_nondet_rem!(ctx, x469, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x470, x6, 2), x471, 2), x469, 2),
        8131,
        2,
    )?;
    let x472: BytePoly_2 = bigint_mul!(x459, x471, 2);
    let x473: BytePoly_3 = bigint_nondet_quot!(ctx, x472, x6, 3);
    let x474: BytePoly_1 = bigint_nondet_rem!(ctx, x472, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x473, x6, 4), x474, 4), x472, 4),
        24387,
        2,
    )?;
    let x475: BytePoly_1 = bigint_add!(bigint_sub!(x6, bigint_add!(x474, x465, 1), 1), x6, 1);
    let x476: BytePoly_1 = bigint_nondet_quot!(ctx, x475, x6, 1);
    let x477: BytePoly_1 = bigint_nondet_rem!(ctx, x475, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x476, x6, 2), x477, 2), x475, 2),
        8131,
        2,
    )?;
    let x478: BytePoly_1 = bigint_nondet_rem!(ctx, x416, x2, 1);
    let x479: BytePoly_2 = bigint_nondet_quot!(ctx, x416, x2, 2);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x479, x2, 3), x478, 3), x416, 3),
        16259,
        2,
    )?;
    let x480: BytePoly_1 = bigint_sub!(x3, x478, 1);
    eqz(ctx, &bigint_mul!(x478, x480, 2), 8131, 2)?;
    let x481: BytePoly_1 = bigint_add!(bigint_sub!(x471, x441, 1), x6, 1);
    let x482: BytePoly_1 = bigint_nondet_inv!(ctx, x481, x6, 1);
    let x483: BytePoly_2 = bigint_mul!(x481, x482, 2);
    let x484: BytePoly_3 = bigint_nondet_quot!(ctx, x483, x6, 3);
    let x485: BytePoly_1 = bigint_nondet_rem!(ctx, x483, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x484, x6, 4), x485, 4), x483, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x485, x1, 1), 34, 1)?;
    let x486: BytePoly_2 = bigint_mul!(bigint_add!(bigint_sub!(x477, x443, 1), x6, 1), x482, 2);
    let x487: BytePoly_3 = bigint_nondet_quot!(ctx, x486, x6, 3);
    let x488: BytePoly_1 = bigint_nondet_rem!(ctx, x486, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x487, x6, 4), x488, 4), x486, 4),
        24387,
        2,
    )?;
    let x489: BytePoly_2 = bigint_add!(bigint_sub!(x443, bigint_mul!(x488, x441, 2), 2), x6, 2);
    let x490: BytePoly_2 = bigint_nondet_quot!(ctx, x489, x6, 2);
    let x491: BytePoly_1 = bigint_nondet_rem!(ctx, x489, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x490, x6, 3), x491, 3), x489, 3),
        16259,
        2,
    )?;
    let x492: BytePoly_2 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x488, x488, 2), x441, 2), x6, 2),
            x471,
            2
        ),
        x6,
        2
    );
    let x493: BytePoly_3 = bigint_nondet_quot!(ctx, x492, x6, 3);
    let x494: BytePoly_1 = bigint_nondet_rem!(ctx, x492, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x493, x6, 4), x494, 4), x492, 4),
        24387,
        2,
    )?;
    let x495: BytePoly_2 = bigint_mul!(x488, x494, 2);
    let x496: BytePoly_3 = bigint_nondet_quot!(ctx, x495, x6, 3);
    let x497: BytePoly_1 = bigint_nondet_rem!(ctx, x495, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x496, x6, 4), x497, 4), x495, 4),
        24387,
        2,
    )?;
    let x498: BytePoly_1 = bigint_add!(bigint_sub!(x6, bigint_add!(x497, x491, 1), 1), x6, 1);
    let x499: BytePoly_1 = bigint_nondet_quot!(ctx, x498, x6, 1);
    let x500: BytePoly_1 = bigint_nondet_rem!(ctx, x498, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x499, x6, 2), x500, 2), x498, 2),
        8131,
        2,
    )?;
    let x501: BytePoly_2 = bigint_add!(bigint_mul!(x494, x478, 2), bigint_mul!(x441, x480, 2), 2);
    let x502: BytePoly_2 = bigint_add!(bigint_mul!(x500, x478, 2), bigint_mul!(x443, x480, 2), 2);
    let x503: BytePoly_3 = bigint_nondet_quot!(ctx, x501, x6, 3);
    let x504: BytePoly_1 = bigint_nondet_rem!(ctx, x501, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x503, x6, 4), x504, 4), x501, 4),
        24387,
        2,
    )?;
    let x505: BytePoly_3 = bigint_nondet_quot!(ctx, x502, x6, 3);
    let x506: BytePoly_1 = bigint_nondet_rem!(ctx, x502, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x505, x6, 4), x506, 4), x502, 4),
        24387,
        2,
    )?;
    let x507: BytePoly_2 = bigint_mul!(x471, x471, 2);
    let x508: BytePoly_3 = bigint_nondet_quot!(ctx, x507, x6, 3);
    let x509: BytePoly_1 = bigint_nondet_rem!(ctx, x507, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x508, x6, 4), x509, 4), x507, 4),
        24387,
        2,
    )?;
    let x510: BytePoly_2 = bigint_add!(bigint_mul!(x509, x0, 2), x5, 2);
    let x511: BytePoly_3 = bigint_nondet_quot!(ctx, x510, x6, 3);
    let x512: BytePoly_1 = bigint_nondet_rem!(ctx, x510, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x511, x6, 4), x512, 4), x510, 4),
        24387,
        2,
    )?;
    let x513: BytePoly_1 = bigint_add!(x477, x477, 1);
    let x514: BytePoly_1 = bigint_nondet_quot!(ctx, x513, x6, 1);
    let x515: BytePoly_1 = bigint_nondet_rem!(ctx, x513, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x514, x6, 2), x515, 2), x513, 2),
        8131,
        2,
    )?;
    let x516: BytePoly_1 = bigint_nondet_inv!(ctx, x515, x6, 1);
    let x517: BytePoly_2 = bigint_mul!(x515, x516, 2);
    let x518: BytePoly_3 = bigint_nondet_quot!(ctx, x517, x6, 3);
    let x519: BytePoly_1 = bigint_nondet_rem!(ctx, x517, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x518, x6, 4), x519, 4), x517, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x519, x3, 1), 34, 1)?;
    let x520: BytePoly_2 = bigint_mul!(x512, x516, 2);
    let x521: BytePoly_3 = bigint_nondet_quot!(ctx, x520, x6, 3);
    let x522: BytePoly_1 = bigint_nondet_rem!(ctx, x520, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x521, x6, 4), x522, 4), x520, 4),
        24387,
        2,
    )?;
    let x523: BytePoly_2 = bigint_mul!(x522, x471, 2);
    let x524: BytePoly_3 = bigint_nondet_quot!(ctx, x523, x6, 3);
    let x525: BytePoly_1 = bigint_nondet_rem!(ctx, x523, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x524, x6, 4), x525, 4), x523, 4),
        24387,
        2,
    )?;
    let x526: BytePoly_1 = bigint_add!(bigint_sub!(x477, x525, 1), x6, 1);
    let x527: BytePoly_1 = bigint_nondet_quot!(ctx, x526, x6, 1);
    let x528: BytePoly_1 = bigint_nondet_rem!(ctx, x526, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x527, x6, 2), x528, 2), x526, 2),
        8131,
        2,
    )?;
    let x529: BytePoly_2 = bigint_mul!(x522, x522, 2);
    let x530: BytePoly_3 = bigint_nondet_quot!(ctx, x529, x6, 3);
    let x531: BytePoly_1 = bigint_nondet_rem!(ctx, x529, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x530, x6, 4), x531, 4), x529, 4),
        24387,
        2,
    )?;
    let x532: BytePoly_1 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x531, x471, 1), x6, 1), x471, 1),
        x6,
        1
    );
    let x533: BytePoly_1 = bigint_nondet_quot!(ctx, x532, x6, 1);
    let x534: BytePoly_1 = bigint_nondet_rem!(ctx, x532, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x533, x6, 2), x534, 2), x532, 2),
        8131,
        2,
    )?;
    let x535: BytePoly_2 = bigint_mul!(x522, x534, 2);
    let x536: BytePoly_3 = bigint_nondet_quot!(ctx, x535, x6, 3);
    let x537: BytePoly_1 = bigint_nondet_rem!(ctx, x535, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x536, x6, 4), x537, 4), x535, 4),
        24387,
        2,
    )?;
    let x538: BytePoly_1 = bigint_add!(bigint_sub!(x6, bigint_add!(x537, x528, 1), 1), x6, 1);
    let x539: BytePoly_1 = bigint_nondet_quot!(ctx, x538, x6, 1);
    let x540: BytePoly_1 = bigint_nondet_rem!(ctx, x538, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x539, x6, 2), x540, 2), x538, 2),
        8131,
        2,
    )?;
    let x541: BytePoly_1 = bigint_nondet_rem!(ctx, x479, x2, 1);
    let x542: BytePoly_2 = bigint_nondet_quot!(ctx, x479, x2, 2);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x542, x2, 3), x541, 3), x479, 3),
        16259,
        2,
    )?;
    let x543: BytePoly_1 = bigint_sub!(x3, x541, 1);
    eqz(ctx, &bigint_mul!(x541, x543, 2), 8131, 2)?;
    let x544: BytePoly_1 = bigint_add!(bigint_sub!(x534, x504, 1), x6, 1);
    let x545: BytePoly_1 = bigint_nondet_inv!(ctx, x544, x6, 1);
    let x546: BytePoly_2 = bigint_mul!(x544, x545, 2);
    let x547: BytePoly_3 = bigint_nondet_quot!(ctx, x546, x6, 3);
    let x548: BytePoly_1 = bigint_nondet_rem!(ctx, x546, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x547, x6, 4), x548, 4), x546, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x548, x1, 1), 34, 1)?;
    let x549: BytePoly_2 = bigint_mul!(bigint_add!(bigint_sub!(x540, x506, 1), x6, 1), x545, 2);
    let x550: BytePoly_3 = bigint_nondet_quot!(ctx, x549, x6, 3);
    let x551: BytePoly_1 = bigint_nondet_rem!(ctx, x549, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x550, x6, 4), x551, 4), x549, 4),
        24387,
        2,
    )?;
    let x552: BytePoly_2 = bigint_add!(bigint_sub!(x506, bigint_mul!(x551, x504, 2), 2), x6, 2);
    let x553: BytePoly_2 = bigint_nondet_quot!(ctx, x552, x6, 2);
    let x554: BytePoly_1 = bigint_nondet_rem!(ctx, x552, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x553, x6, 3), x554, 3), x552, 3),
        16259,
        2,
    )?;
    let x555: BytePoly_2 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x551, x551, 2), x504, 2), x6, 2),
            x534,
            2
        ),
        x6,
        2
    );
    let x556: BytePoly_3 = bigint_nondet_quot!(ctx, x555, x6, 3);
    let x557: BytePoly_1 = bigint_nondet_rem!(ctx, x555, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x556, x6, 4), x557, 4), x555, 4),
        24387,
        2,
    )?;
    let x558: BytePoly_2 = bigint_mul!(x551, x557, 2);
    let x559: BytePoly_3 = bigint_nondet_quot!(ctx, x558, x6, 3);
    let x560: BytePoly_1 = bigint_nondet_rem!(ctx, x558, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x559, x6, 4), x560, 4), x558, 4),
        24387,
        2,
    )?;
    let x561: BytePoly_1 = bigint_add!(bigint_sub!(x6, bigint_add!(x560, x554, 1), 1), x6, 1);
    let x562: BytePoly_1 = bigint_nondet_quot!(ctx, x561, x6, 1);
    let x563: BytePoly_1 = bigint_nondet_rem!(ctx, x561, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x562, x6, 2), x563, 2), x561, 2),
        8131,
        2,
    )?;
    let x564: BytePoly_2 = bigint_add!(bigint_mul!(x557, x541, 2), bigint_mul!(x504, x543, 2), 2);
    let x565: BytePoly_2 = bigint_add!(bigint_mul!(x563, x541, 2), bigint_mul!(x506, x543, 2), 2);
    let x566: BytePoly_3 = bigint_nondet_quot!(ctx, x564, x6, 3);
    let x567: BytePoly_1 = bigint_nondet_rem!(ctx, x564, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x566, x6, 4), x567, 4), x564, 4),
        24387,
        2,
    )?;
    let x568: BytePoly_3 = bigint_nondet_quot!(ctx, x565, x6, 3);
    let x569: BytePoly_1 = bigint_nondet_rem!(ctx, x565, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x568, x6, 4), x569, 4), x565, 4),
        24387,
        2,
    )?;
    let x570: BytePoly_2 = bigint_mul!(x534, x534, 2);
    let x571: BytePoly_3 = bigint_nondet_quot!(ctx, x570, x6, 3);
    let x572: BytePoly_1 = bigint_nondet_rem!(ctx, x570, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x571, x6, 4), x572, 4), x570, 4),
        24387,
        2,
    )?;
    let x573: BytePoly_2 = bigint_add!(bigint_mul!(x572, x0, 2), x5, 2);
    let x574: BytePoly_3 = bigint_nondet_quot!(ctx, x573, x6, 3);
    let x575: BytePoly_1 = bigint_nondet_rem!(ctx, x573, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x574, x6, 4), x575, 4), x573, 4),
        24387,
        2,
    )?;
    let x576: BytePoly_1 = bigint_add!(x540, x540, 1);
    let x577: BytePoly_1 = bigint_nondet_quot!(ctx, x576, x6, 1);
    let x578: BytePoly_1 = bigint_nondet_rem!(ctx, x576, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x577, x6, 2), x578, 2), x576, 2),
        8131,
        2,
    )?;
    let x579: BytePoly_1 = bigint_nondet_inv!(ctx, x578, x6, 1);
    let x580: BytePoly_2 = bigint_mul!(x578, x579, 2);
    let x581: BytePoly_3 = bigint_nondet_quot!(ctx, x580, x6, 3);
    let x582: BytePoly_1 = bigint_nondet_rem!(ctx, x580, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x581, x6, 4), x582, 4), x580, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x582, x3, 1), 34, 1)?;
    let x583: BytePoly_2 = bigint_mul!(x575, x579, 2);
    let x584: BytePoly_3 = bigint_nondet_quot!(ctx, x583, x6, 3);
    let x585: BytePoly_1 = bigint_nondet_rem!(ctx, x583, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x584, x6, 4), x585, 4), x583, 4),
        24387,
        2,
    )?;
    let x586: BytePoly_2 = bigint_mul!(x585, x534, 2);
    let x587: BytePoly_3 = bigint_nondet_quot!(ctx, x586, x6, 3);
    let x588: BytePoly_1 = bigint_nondet_rem!(ctx, x586, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x587, x6, 4), x588, 4), x586, 4),
        24387,
        2,
    )?;
    let x589: BytePoly_1 = bigint_add!(bigint_sub!(x540, x588, 1), x6, 1);
    let x590: BytePoly_1 = bigint_nondet_quot!(ctx, x589, x6, 1);
    let x591: BytePoly_1 = bigint_nondet_rem!(ctx, x589, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x590, x6, 2), x591, 2), x589, 2),
        8131,
        2,
    )?;
    let x592: BytePoly_2 = bigint_mul!(x585, x585, 2);
    let x593: BytePoly_3 = bigint_nondet_quot!(ctx, x592, x6, 3);
    let x594: BytePoly_1 = bigint_nondet_rem!(ctx, x592, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x593, x6, 4), x594, 4), x592, 4),
        24387,
        2,
    )?;
    let x595: BytePoly_1 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x594, x534, 1), x6, 1), x534, 1),
        x6,
        1
    );
    let x596: BytePoly_1 = bigint_nondet_quot!(ctx, x595, x6, 1);
    let x597: BytePoly_1 = bigint_nondet_rem!(ctx, x595, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x596, x6, 2), x597, 2), x595, 2),
        8131,
        2,
    )?;
    let x598: BytePoly_2 = bigint_mul!(x585, x597, 2);
    let x599: BytePoly_3 = bigint_nondet_quot!(ctx, x598, x6, 3);
    let x600: BytePoly_1 = bigint_nondet_rem!(ctx, x598, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x599, x6, 4), x600, 4), x598, 4),
        24387,
        2,
    )?;
    let x601: BytePoly_1 = bigint_add!(bigint_sub!(x6, bigint_add!(x600, x591, 1), 1), x6, 1);
    let x602: BytePoly_1 = bigint_nondet_quot!(ctx, x601, x6, 1);
    let x603: BytePoly_1 = bigint_nondet_rem!(ctx, x601, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x602, x6, 2), x603, 2), x601, 2),
        8131,
        2,
    )?;
    let x604: BytePoly_1 = bigint_nondet_rem!(ctx, x542, x2, 1);
    let x605: BytePoly_2 = bigint_nondet_quot!(ctx, x542, x2, 2);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x605, x2, 3), x604, 3), x542, 3),
        16259,
        2,
    )?;
    let x606: BytePoly_1 = bigint_sub!(x3, x604, 1);
    eqz(ctx, &bigint_mul!(x604, x606, 2), 8131, 2)?;
    let x607: BytePoly_1 = bigint_add!(bigint_sub!(x597, x567, 1), x6, 1);
    let x608: BytePoly_1 = bigint_nondet_inv!(ctx, x607, x6, 1);
    let x609: BytePoly_2 = bigint_mul!(x607, x608, 2);
    let x610: BytePoly_3 = bigint_nondet_quot!(ctx, x609, x6, 3);
    let x611: BytePoly_1 = bigint_nondet_rem!(ctx, x609, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x610, x6, 4), x611, 4), x609, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x611, x1, 1), 34, 1)?;
    let x612: BytePoly_2 = bigint_mul!(bigint_add!(bigint_sub!(x603, x569, 1), x6, 1), x608, 2);
    let x613: BytePoly_3 = bigint_nondet_quot!(ctx, x612, x6, 3);
    let x614: BytePoly_1 = bigint_nondet_rem!(ctx, x612, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x613, x6, 4), x614, 4), x612, 4),
        24387,
        2,
    )?;
    let x615: BytePoly_2 = bigint_add!(bigint_sub!(x569, bigint_mul!(x614, x567, 2), 2), x6, 2);
    let x616: BytePoly_2 = bigint_nondet_quot!(ctx, x615, x6, 2);
    let x617: BytePoly_1 = bigint_nondet_rem!(ctx, x615, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x616, x6, 3), x617, 3), x615, 3),
        16259,
        2,
    )?;
    let x618: BytePoly_2 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x614, x614, 2), x567, 2), x6, 2),
            x597,
            2
        ),
        x6,
        2
    );
    let x619: BytePoly_3 = bigint_nondet_quot!(ctx, x618, x6, 3);
    let x620: BytePoly_1 = bigint_nondet_rem!(ctx, x618, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x619, x6, 4), x620, 4), x618, 4),
        24387,
        2,
    )?;
    let x621: BytePoly_2 = bigint_mul!(x614, x620, 2);
    let x622: BytePoly_3 = bigint_nondet_quot!(ctx, x621, x6, 3);
    let x623: BytePoly_1 = bigint_nondet_rem!(ctx, x621, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x622, x6, 4), x623, 4), x621, 4),
        24387,
        2,
    )?;
    let x624: BytePoly_1 = bigint_add!(bigint_sub!(x6, bigint_add!(x623, x617, 1), 1), x6, 1);
    let x625: BytePoly_1 = bigint_nondet_quot!(ctx, x624, x6, 1);
    let x626: BytePoly_1 = bigint_nondet_rem!(ctx, x624, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x625, x6, 2), x626, 2), x624, 2),
        8131,
        2,
    )?;
    let x627: BytePoly_2 = bigint_add!(bigint_mul!(x620, x604, 2), bigint_mul!(x567, x606, 2), 2);
    let x628: BytePoly_2 = bigint_add!(bigint_mul!(x626, x604, 2), bigint_mul!(x569, x606, 2), 2);
    let x629: BytePoly_3 = bigint_nondet_quot!(ctx, x627, x6, 3);
    let x630: BytePoly_1 = bigint_nondet_rem!(ctx, x627, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x629, x6, 4), x630, 4), x627, 4),
        24387,
        2,
    )?;
    let x631: BytePoly_3 = bigint_nondet_quot!(ctx, x628, x6, 3);
    let x632: BytePoly_1 = bigint_nondet_rem!(ctx, x628, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x631, x6, 4), x632, 4), x628, 4),
        24387,
        2,
    )?;
    let x633: BytePoly_2 = bigint_mul!(x597, x597, 2);
    let x634: BytePoly_3 = bigint_nondet_quot!(ctx, x633, x6, 3);
    let x635: BytePoly_1 = bigint_nondet_rem!(ctx, x633, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x634, x6, 4), x635, 4), x633, 4),
        24387,
        2,
    )?;
    let x636: BytePoly_2 = bigint_add!(bigint_mul!(x635, x0, 2), x5, 2);
    let x637: BytePoly_3 = bigint_nondet_quot!(ctx, x636, x6, 3);
    let x638: BytePoly_1 = bigint_nondet_rem!(ctx, x636, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x637, x6, 4), x638, 4), x636, 4),
        24387,
        2,
    )?;
    let x639: BytePoly_1 = bigint_add!(x603, x603, 1);
    let x640: BytePoly_1 = bigint_nondet_quot!(ctx, x639, x6, 1);
    let x641: BytePoly_1 = bigint_nondet_rem!(ctx, x639, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x640, x6, 2), x641, 2), x639, 2),
        8131,
        2,
    )?;
    let x642: BytePoly_1 = bigint_nondet_inv!(ctx, x641, x6, 1);
    let x643: BytePoly_2 = bigint_mul!(x641, x642, 2);
    let x644: BytePoly_3 = bigint_nondet_quot!(ctx, x643, x6, 3);
    let x645: BytePoly_1 = bigint_nondet_rem!(ctx, x643, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x644, x6, 4), x645, 4), x643, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x645, x3, 1), 34, 1)?;
    let x646: BytePoly_2 = bigint_mul!(x638, x642, 2);
    let x647: BytePoly_3 = bigint_nondet_quot!(ctx, x646, x6, 3);
    let x648: BytePoly_1 = bigint_nondet_rem!(ctx, x646, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x647, x6, 4), x648, 4), x646, 4),
        24387,
        2,
    )?;
    let x649: BytePoly_2 = bigint_mul!(x648, x597, 2);
    let x650: BytePoly_3 = bigint_nondet_quot!(ctx, x649, x6, 3);
    let x651: BytePoly_1 = bigint_nondet_rem!(ctx, x649, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x650, x6, 4), x651, 4), x649, 4),
        24387,
        2,
    )?;
    let x652: BytePoly_1 = bigint_add!(bigint_sub!(x603, x651, 1), x6, 1);
    let x653: BytePoly_1 = bigint_nondet_quot!(ctx, x652, x6, 1);
    let x654: BytePoly_1 = bigint_nondet_rem!(ctx, x652, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x653, x6, 2), x654, 2), x652, 2),
        8131,
        2,
    )?;
    let x655: BytePoly_2 = bigint_mul!(x648, x648, 2);
    let x656: BytePoly_3 = bigint_nondet_quot!(ctx, x655, x6, 3);
    let x657: BytePoly_1 = bigint_nondet_rem!(ctx, x655, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x656, x6, 4), x657, 4), x655, 4),
        24387,
        2,
    )?;
    let x658: BytePoly_1 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x657, x597, 1), x6, 1), x597, 1),
        x6,
        1
    );
    let x659: BytePoly_1 = bigint_nondet_quot!(ctx, x658, x6, 1);
    let x660: BytePoly_1 = bigint_nondet_rem!(ctx, x658, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x659, x6, 2), x660, 2), x658, 2),
        8131,
        2,
    )?;
    let x661: BytePoly_2 = bigint_mul!(x648, x660, 2);
    let x662: BytePoly_3 = bigint_nondet_quot!(ctx, x661, x6, 3);
    let x663: BytePoly_1 = bigint_nondet_rem!(ctx, x661, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x662, x6, 4), x663, 4), x661, 4),
        24387,
        2,
    )?;
    let x664: BytePoly_1 = bigint_add!(bigint_sub!(x6, bigint_add!(x663, x654, 1), 1), x6, 1);
    let x665: BytePoly_1 = bigint_nondet_quot!(ctx, x664, x6, 1);
    let x666: BytePoly_1 = bigint_nondet_rem!(ctx, x664, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x665, x6, 2), x666, 2), x664, 2),
        8131,
        2,
    )?;
    let x667: BytePoly_1 = bigint_nondet_rem!(ctx, x605, x2, 1);
    let x668: BytePoly_2 = bigint_nondet_quot!(ctx, x605, x2, 2);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x668, x2, 3), x667, 3), x605, 3),
        16259,
        2,
    )?;
    let x669: BytePoly_1 = bigint_sub!(x3, x667, 1);
    eqz(ctx, &bigint_mul!(x667, x669, 2), 8131, 2)?;
    let x670: BytePoly_1 = bigint_add!(bigint_sub!(x660, x630, 1), x6, 1);
    let x671: BytePoly_1 = bigint_nondet_inv!(ctx, x670, x6, 1);
    let x672: BytePoly_2 = bigint_mul!(x670, x671, 2);
    let x673: BytePoly_3 = bigint_nondet_quot!(ctx, x672, x6, 3);
    let x674: BytePoly_1 = bigint_nondet_rem!(ctx, x672, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x673, x6, 4), x674, 4), x672, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x674, x1, 1), 34, 1)?;
    let x675: BytePoly_2 = bigint_mul!(bigint_add!(bigint_sub!(x666, x632, 1), x6, 1), x671, 2);
    let x676: BytePoly_3 = bigint_nondet_quot!(ctx, x675, x6, 3);
    let x677: BytePoly_1 = bigint_nondet_rem!(ctx, x675, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x676, x6, 4), x677, 4), x675, 4),
        24387,
        2,
    )?;
    let x678: BytePoly_2 = bigint_add!(bigint_sub!(x632, bigint_mul!(x677, x630, 2), 2), x6, 2);
    let x679: BytePoly_2 = bigint_nondet_quot!(ctx, x678, x6, 2);
    let x680: BytePoly_1 = bigint_nondet_rem!(ctx, x678, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x679, x6, 3), x680, 3), x678, 3),
        16259,
        2,
    )?;
    let x681: BytePoly_2 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x677, x677, 2), x630, 2), x6, 2),
            x660,
            2
        ),
        x6,
        2
    );
    let x682: BytePoly_3 = bigint_nondet_quot!(ctx, x681, x6, 3);
    let x683: BytePoly_1 = bigint_nondet_rem!(ctx, x681, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x682, x6, 4), x683, 4), x681, 4),
        24387,
        2,
    )?;
    let x684: BytePoly_2 = bigint_mul!(x677, x683, 2);
    let x685: BytePoly_3 = bigint_nondet_quot!(ctx, x684, x6, 3);
    let x686: BytePoly_1 = bigint_nondet_rem!(ctx, x684, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x685, x6, 4), x686, 4), x684, 4),
        24387,
        2,
    )?;
    let x687: BytePoly_1 = bigint_add!(bigint_sub!(x6, bigint_add!(x686, x680, 1), 1), x6, 1);
    let x688: BytePoly_1 = bigint_nondet_quot!(ctx, x687, x6, 1);
    let x689: BytePoly_1 = bigint_nondet_rem!(ctx, x687, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x688, x6, 2), x689, 2), x687, 2),
        8131,
        2,
    )?;
    let x690: BytePoly_2 = bigint_add!(bigint_mul!(x683, x667, 2), bigint_mul!(x630, x669, 2), 2);
    let x691: BytePoly_2 = bigint_add!(bigint_mul!(x689, x667, 2), bigint_mul!(x632, x669, 2), 2);
    let x692: BytePoly_3 = bigint_nondet_quot!(ctx, x690, x6, 3);
    let x693: BytePoly_1 = bigint_nondet_rem!(ctx, x690, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x692, x6, 4), x693, 4), x690, 4),
        24387,
        2,
    )?;
    let x694: BytePoly_3 = bigint_nondet_quot!(ctx, x691, x6, 3);
    let x695: BytePoly_1 = bigint_nondet_rem!(ctx, x691, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x694, x6, 4), x695, 4), x691, 4),
        24387,
        2,
    )?;
    let x696: BytePoly_2 = bigint_mul!(x660, x660, 2);
    let x697: BytePoly_3 = bigint_nondet_quot!(ctx, x696, x6, 3);
    let x698: BytePoly_1 = bigint_nondet_rem!(ctx, x696, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x697, x6, 4), x698, 4), x696, 4),
        24387,
        2,
    )?;
    let x699: BytePoly_2 = bigint_add!(bigint_mul!(x698, x0, 2), x5, 2);
    let x700: BytePoly_3 = bigint_nondet_quot!(ctx, x699, x6, 3);
    let x701: BytePoly_1 = bigint_nondet_rem!(ctx, x699, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x700, x6, 4), x701, 4), x699, 4),
        24387,
        2,
    )?;
    let x702: BytePoly_1 = bigint_add!(x666, x666, 1);
    let x703: BytePoly_1 = bigint_nondet_quot!(ctx, x702, x6, 1);
    let x704: BytePoly_1 = bigint_nondet_rem!(ctx, x702, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x703, x6, 2), x704, 2), x702, 2),
        8131,
        2,
    )?;
    let x705: BytePoly_1 = bigint_nondet_inv!(ctx, x704, x6, 1);
    let x706: BytePoly_2 = bigint_mul!(x704, x705, 2);
    let x707: BytePoly_3 = bigint_nondet_quot!(ctx, x706, x6, 3);
    let x708: BytePoly_1 = bigint_nondet_rem!(ctx, x706, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x707, x6, 4), x708, 4), x706, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x708, x3, 1), 34, 1)?;
    let x709: BytePoly_2 = bigint_mul!(x701, x705, 2);
    let x710: BytePoly_3 = bigint_nondet_quot!(ctx, x709, x6, 3);
    let x711: BytePoly_1 = bigint_nondet_rem!(ctx, x709, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x710, x6, 4), x711, 4), x709, 4),
        24387,
        2,
    )?;
    let x712: BytePoly_2 = bigint_mul!(x711, x660, 2);
    let x713: BytePoly_3 = bigint_nondet_quot!(ctx, x712, x6, 3);
    let x714: BytePoly_1 = bigint_nondet_rem!(ctx, x712, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x713, x6, 4), x714, 4), x712, 4),
        24387,
        2,
    )?;
    let x715: BytePoly_1 = bigint_add!(bigint_sub!(x666, x714, 1), x6, 1);
    let x716: BytePoly_1 = bigint_nondet_quot!(ctx, x715, x6, 1);
    let x717: BytePoly_1 = bigint_nondet_rem!(ctx, x715, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x716, x6, 2), x717, 2), x715, 2),
        8131,
        2,
    )?;
    let x718: BytePoly_2 = bigint_mul!(x711, x711, 2);
    let x719: BytePoly_3 = bigint_nondet_quot!(ctx, x718, x6, 3);
    let x720: BytePoly_1 = bigint_nondet_rem!(ctx, x718, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x719, x6, 4), x720, 4), x718, 4),
        24387,
        2,
    )?;
    let x721: BytePoly_1 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x720, x660, 1), x6, 1), x660, 1),
        x6,
        1
    );
    let x722: BytePoly_1 = bigint_nondet_quot!(ctx, x721, x6, 1);
    let x723: BytePoly_1 = bigint_nondet_rem!(ctx, x721, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x722, x6, 2), x723, 2), x721, 2),
        8131,
        2,
    )?;
    let x724: BytePoly_2 = bigint_mul!(x711, x723, 2);
    let x725: BytePoly_3 = bigint_nondet_quot!(ctx, x724, x6, 3);
    let x726: BytePoly_1 = bigint_nondet_rem!(ctx, x724, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x725, x6, 4), x726, 4), x724, 4),
        24387,
        2,
    )?;
    let x727: BytePoly_1 = bigint_add!(bigint_sub!(x6, bigint_add!(x726, x717, 1), 1), x6, 1);
    let x728: BytePoly_1 = bigint_nondet_quot!(ctx, x727, x6, 1);
    let x729: BytePoly_1 = bigint_nondet_rem!(ctx, x727, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x728, x6, 2), x729, 2), x727, 2),
        8131,
        2,
    )?;
    let x730: BytePoly_1 = bigint_nondet_rem!(ctx, x668, x2, 1);
    let x731: BytePoly_2 = bigint_nondet_quot!(ctx, x668, x2, 2);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x731, x2, 3), x730, 3), x668, 3),
        16259,
        2,
    )?;
    let x732: BytePoly_1 = bigint_sub!(x3, x730, 1);
    eqz(ctx, &bigint_mul!(x730, x732, 2), 8131, 2)?;
    let x733: BytePoly_1 = bigint_add!(bigint_sub!(x723, x693, 1), x6, 1);
    let x734: BytePoly_1 = bigint_nondet_inv!(ctx, x733, x6, 1);
    let x735: BytePoly_2 = bigint_mul!(x733, x734, 2);
    let x736: BytePoly_3 = bigint_nondet_quot!(ctx, x735, x6, 3);
    let x737: BytePoly_1 = bigint_nondet_rem!(ctx, x735, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x736, x6, 4), x737, 4), x735, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x737, x1, 1), 34, 1)?;
    let x738: BytePoly_2 = bigint_mul!(bigint_add!(bigint_sub!(x729, x695, 1), x6, 1), x734, 2);
    let x739: BytePoly_3 = bigint_nondet_quot!(ctx, x738, x6, 3);
    let x740: BytePoly_1 = bigint_nondet_rem!(ctx, x738, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x739, x6, 4), x740, 4), x738, 4),
        24387,
        2,
    )?;
    let x741: BytePoly_2 = bigint_add!(bigint_sub!(x695, bigint_mul!(x740, x693, 2), 2), x6, 2);
    let x742: BytePoly_2 = bigint_nondet_quot!(ctx, x741, x6, 2);
    let x743: BytePoly_1 = bigint_nondet_rem!(ctx, x741, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x742, x6, 3), x743, 3), x741, 3),
        16259,
        2,
    )?;
    let x744: BytePoly_2 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x740, x740, 2), x693, 2), x6, 2),
            x723,
            2
        ),
        x6,
        2
    );
    let x745: BytePoly_3 = bigint_nondet_quot!(ctx, x744, x6, 3);
    let x746: BytePoly_1 = bigint_nondet_rem!(ctx, x744, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x745, x6, 4), x746, 4), x744, 4),
        24387,
        2,
    )?;
    let x747: BytePoly_2 = bigint_mul!(x740, x746, 2);
    let x748: BytePoly_3 = bigint_nondet_quot!(ctx, x747, x6, 3);
    let x749: BytePoly_1 = bigint_nondet_rem!(ctx, x747, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x748, x6, 4), x749, 4), x747, 4),
        24387,
        2,
    )?;
    let x750: BytePoly_1 = bigint_add!(bigint_sub!(x6, bigint_add!(x749, x743, 1), 1), x6, 1);
    let x751: BytePoly_1 = bigint_nondet_quot!(ctx, x750, x6, 1);
    let x752: BytePoly_1 = bigint_nondet_rem!(ctx, x750, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x751, x6, 2), x752, 2), x750, 2),
        8131,
        2,
    )?;
    let x753: BytePoly_2 = bigint_add!(bigint_mul!(x746, x730, 2), bigint_mul!(x693, x732, 2), 2);
    let x754: BytePoly_2 = bigint_add!(bigint_mul!(x752, x730, 2), bigint_mul!(x695, x732, 2), 2);
    let x755: BytePoly_3 = bigint_nondet_quot!(ctx, x753, x6, 3);
    let x756: BytePoly_1 = bigint_nondet_rem!(ctx, x753, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x755, x6, 4), x756, 4), x753, 4),
        24387,
        2,
    )?;
    let x757: BytePoly_3 = bigint_nondet_quot!(ctx, x754, x6, 3);
    let x758: BytePoly_1 = bigint_nondet_rem!(ctx, x754, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x757, x6, 4), x758, 4), x754, 4),
        24387,
        2,
    )?;
    let x759: BytePoly_2 = bigint_mul!(x723, x723, 2);
    let x760: BytePoly_3 = bigint_nondet_quot!(ctx, x759, x6, 3);
    let x761: BytePoly_1 = bigint_nondet_rem!(ctx, x759, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x760, x6, 4), x761, 4), x759, 4),
        24387,
        2,
    )?;
    let x762: BytePoly_2 = bigint_add!(bigint_mul!(x761, x0, 2), x5, 2);
    let x763: BytePoly_3 = bigint_nondet_quot!(ctx, x762, x6, 3);
    let x764: BytePoly_1 = bigint_nondet_rem!(ctx, x762, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x763, x6, 4), x764, 4), x762, 4),
        24387,
        2,
    )?;
    let x765: BytePoly_1 = bigint_add!(x729, x729, 1);
    let x766: BytePoly_1 = bigint_nondet_quot!(ctx, x765, x6, 1);
    let x767: BytePoly_1 = bigint_nondet_rem!(ctx, x765, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x766, x6, 2), x767, 2), x765, 2),
        8131,
        2,
    )?;
    let x768: BytePoly_1 = bigint_nondet_inv!(ctx, x767, x6, 1);
    let x769: BytePoly_2 = bigint_mul!(x767, x768, 2);
    let x770: BytePoly_3 = bigint_nondet_quot!(ctx, x769, x6, 3);
    let x771: BytePoly_1 = bigint_nondet_rem!(ctx, x769, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x770, x6, 4), x771, 4), x769, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x771, x3, 1), 34, 1)?;
    let x772: BytePoly_2 = bigint_mul!(x764, x768, 2);
    let x773: BytePoly_3 = bigint_nondet_quot!(ctx, x772, x6, 3);
    let x774: BytePoly_1 = bigint_nondet_rem!(ctx, x772, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x773, x6, 4), x774, 4), x772, 4),
        24387,
        2,
    )?;
    let x775: BytePoly_2 = bigint_mul!(x774, x723, 2);
    let x776: BytePoly_3 = bigint_nondet_quot!(ctx, x775, x6, 3);
    let x777: BytePoly_1 = bigint_nondet_rem!(ctx, x775, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x776, x6, 4), x777, 4), x775, 4),
        24387,
        2,
    )?;
    let x778: BytePoly_1 = bigint_add!(bigint_sub!(x729, x777, 1), x6, 1);
    let x779: BytePoly_1 = bigint_nondet_quot!(ctx, x778, x6, 1);
    let x780: BytePoly_1 = bigint_nondet_rem!(ctx, x778, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x779, x6, 2), x780, 2), x778, 2),
        8131,
        2,
    )?;
    let x781: BytePoly_2 = bigint_mul!(x774, x774, 2);
    let x782: BytePoly_3 = bigint_nondet_quot!(ctx, x781, x6, 3);
    let x783: BytePoly_1 = bigint_nondet_rem!(ctx, x781, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x782, x6, 4), x783, 4), x781, 4),
        24387,
        2,
    )?;
    let x784: BytePoly_1 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x783, x723, 1), x6, 1), x723, 1),
        x6,
        1
    );
    let x785: BytePoly_1 = bigint_nondet_quot!(ctx, x784, x6, 1);
    let x786: BytePoly_1 = bigint_nondet_rem!(ctx, x784, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x785, x6, 2), x786, 2), x784, 2),
        8131,
        2,
    )?;
    let x787: BytePoly_2 = bigint_mul!(x774, x786, 2);
    let x788: BytePoly_3 = bigint_nondet_quot!(ctx, x787, x6, 3);
    let x789: BytePoly_1 = bigint_nondet_rem!(ctx, x787, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x788, x6, 4), x789, 4), x787, 4),
        24387,
        2,
    )?;
    let x790: BytePoly_1 = bigint_add!(bigint_sub!(x6, bigint_add!(x789, x780, 1), 1), x6, 1);
    let x791: BytePoly_1 = bigint_nondet_quot!(ctx, x790, x6, 1);
    let x792: BytePoly_1 = bigint_nondet_rem!(ctx, x790, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x791, x6, 2), x792, 2), x790, 2),
        8131,
        2,
    )?;
    let x793: BytePoly_1 = bigint_nondet_rem!(ctx, x731, x2, 1);
    let x794: BytePoly_2 = bigint_nondet_quot!(ctx, x731, x2, 2);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x794, x2, 3), x793, 3), x731, 3),
        16259,
        2,
    )?;
    let x795: BytePoly_1 = bigint_sub!(x3, x793, 1);
    eqz(ctx, &bigint_mul!(x793, x795, 2), 8131, 2)?;
    let x796: BytePoly_1 = bigint_add!(bigint_sub!(x786, x756, 1), x6, 1);
    let x797: BytePoly_1 = bigint_nondet_inv!(ctx, x796, x6, 1);
    let x798: BytePoly_2 = bigint_mul!(x796, x797, 2);
    let x799: BytePoly_3 = bigint_nondet_quot!(ctx, x798, x6, 3);
    let x800: BytePoly_1 = bigint_nondet_rem!(ctx, x798, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x799, x6, 4), x800, 4), x798, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x800, x1, 1), 34, 1)?;
    let x801: BytePoly_2 = bigint_mul!(bigint_add!(bigint_sub!(x792, x758, 1), x6, 1), x797, 2);
    let x802: BytePoly_3 = bigint_nondet_quot!(ctx, x801, x6, 3);
    let x803: BytePoly_1 = bigint_nondet_rem!(ctx, x801, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x802, x6, 4), x803, 4), x801, 4),
        24387,
        2,
    )?;
    let x804: BytePoly_2 = bigint_add!(bigint_sub!(x758, bigint_mul!(x803, x756, 2), 2), x6, 2);
    let x805: BytePoly_2 = bigint_nondet_quot!(ctx, x804, x6, 2);
    let x806: BytePoly_1 = bigint_nondet_rem!(ctx, x804, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x805, x6, 3), x806, 3), x804, 3),
        16259,
        2,
    )?;
    let x807: BytePoly_2 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x803, x803, 2), x756, 2), x6, 2),
            x786,
            2
        ),
        x6,
        2
    );
    let x808: BytePoly_3 = bigint_nondet_quot!(ctx, x807, x6, 3);
    let x809: BytePoly_1 = bigint_nondet_rem!(ctx, x807, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x808, x6, 4), x809, 4), x807, 4),
        24387,
        2,
    )?;
    let x810: BytePoly_2 = bigint_mul!(x803, x809, 2);
    let x811: BytePoly_3 = bigint_nondet_quot!(ctx, x810, x6, 3);
    let x812: BytePoly_1 = bigint_nondet_rem!(ctx, x810, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x811, x6, 4), x812, 4), x810, 4),
        24387,
        2,
    )?;
    let x813: BytePoly_1 = bigint_add!(bigint_sub!(x6, bigint_add!(x812, x806, 1), 1), x6, 1);
    let x814: BytePoly_1 = bigint_nondet_quot!(ctx, x813, x6, 1);
    let x815: BytePoly_1 = bigint_nondet_rem!(ctx, x813, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x814, x6, 2), x815, 2), x813, 2),
        8131,
        2,
    )?;
    let x816: BytePoly_2 = bigint_add!(bigint_mul!(x809, x793, 2), bigint_mul!(x756, x795, 2), 2);
    let x817: BytePoly_2 = bigint_add!(bigint_mul!(x815, x793, 2), bigint_mul!(x758, x795, 2), 2);
    let x818: BytePoly_3 = bigint_nondet_quot!(ctx, x816, x6, 3);
    let x819: BytePoly_1 = bigint_nondet_rem!(ctx, x816, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x818, x6, 4), x819, 4), x816, 4),
        24387,
        2,
    )?;
    let x820: BytePoly_3 = bigint_nondet_quot!(ctx, x817, x6, 3);
    let x821: BytePoly_1 = bigint_nondet_rem!(ctx, x817, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x820, x6, 4), x821, 4), x817, 4),
        24387,
        2,
    )?;
    let x822: BytePoly_2 = bigint_mul!(x786, x786, 2);
    let x823: BytePoly_3 = bigint_nondet_quot!(ctx, x822, x6, 3);
    let x824: BytePoly_1 = bigint_nondet_rem!(ctx, x822, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x823, x6, 4), x824, 4), x822, 4),
        24387,
        2,
    )?;
    let x825: BytePoly_2 = bigint_add!(bigint_mul!(x824, x0, 2), x5, 2);
    let x826: BytePoly_3 = bigint_nondet_quot!(ctx, x825, x6, 3);
    let x827: BytePoly_1 = bigint_nondet_rem!(ctx, x825, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x826, x6, 4), x827, 4), x825, 4),
        24387,
        2,
    )?;
    let x828: BytePoly_1 = bigint_add!(x792, x792, 1);
    let x829: BytePoly_1 = bigint_nondet_quot!(ctx, x828, x6, 1);
    let x830: BytePoly_1 = bigint_nondet_rem!(ctx, x828, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x829, x6, 2), x830, 2), x828, 2),
        8131,
        2,
    )?;
    let x831: BytePoly_1 = bigint_nondet_inv!(ctx, x830, x6, 1);
    let x832: BytePoly_2 = bigint_mul!(x830, x831, 2);
    let x833: BytePoly_3 = bigint_nondet_quot!(ctx, x832, x6, 3);
    let x834: BytePoly_1 = bigint_nondet_rem!(ctx, x832, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x833, x6, 4), x834, 4), x832, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x834, x3, 1), 34, 1)?;
    let x835: BytePoly_2 = bigint_mul!(x827, x831, 2);
    let x836: BytePoly_3 = bigint_nondet_quot!(ctx, x835, x6, 3);
    let x837: BytePoly_1 = bigint_nondet_rem!(ctx, x835, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x836, x6, 4), x837, 4), x835, 4),
        24387,
        2,
    )?;
    let x838: BytePoly_2 = bigint_mul!(x837, x786, 2);
    let x839: BytePoly_3 = bigint_nondet_quot!(ctx, x838, x6, 3);
    let x840: BytePoly_1 = bigint_nondet_rem!(ctx, x838, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x839, x6, 4), x840, 4), x838, 4),
        24387,
        2,
    )?;
    let x841: BytePoly_1 = bigint_add!(bigint_sub!(x792, x840, 1), x6, 1);
    let x842: BytePoly_1 = bigint_nondet_quot!(ctx, x841, x6, 1);
    let x843: BytePoly_1 = bigint_nondet_rem!(ctx, x841, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x842, x6, 2), x843, 2), x841, 2),
        8131,
        2,
    )?;
    let x844: BytePoly_2 = bigint_mul!(x837, x837, 2);
    let x845: BytePoly_3 = bigint_nondet_quot!(ctx, x844, x6, 3);
    let x846: BytePoly_1 = bigint_nondet_rem!(ctx, x844, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x845, x6, 4), x846, 4), x844, 4),
        24387,
        2,
    )?;
    let x847: BytePoly_1 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x846, x786, 1), x6, 1), x786, 1),
        x6,
        1
    );
    let x848: BytePoly_1 = bigint_nondet_quot!(ctx, x847, x6, 1);
    let x849: BytePoly_1 = bigint_nondet_rem!(ctx, x847, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x848, x6, 2), x849, 2), x847, 2),
        8131,
        2,
    )?;
    let x850: BytePoly_2 = bigint_mul!(x837, x849, 2);
    let x851: BytePoly_3 = bigint_nondet_quot!(ctx, x850, x6, 3);
    let x852: BytePoly_1 = bigint_nondet_rem!(ctx, x850, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x851, x6, 4), x852, 4), x850, 4),
        24387,
        2,
    )?;
    let x853: BytePoly_1 = bigint_add!(bigint_sub!(x6, bigint_add!(x852, x843, 1), 1), x6, 1);
    let x854: BytePoly_1 = bigint_nondet_quot!(ctx, x853, x6, 1);
    let x855: BytePoly_1 = bigint_nondet_rem!(ctx, x853, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x854, x6, 2), x855, 2), x853, 2),
        8131,
        2,
    )?;
    let x856: BytePoly_1 = bigint_nondet_rem!(ctx, x794, x2, 1);
    let x857: BytePoly_2 = bigint_nondet_quot!(ctx, x794, x2, 2);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x857, x2, 3), x856, 3), x794, 3),
        16259,
        2,
    )?;
    let x858: BytePoly_1 = bigint_sub!(x3, x856, 1);
    eqz(ctx, &bigint_mul!(x856, x858, 2), 8131, 2)?;
    let x859: BytePoly_1 = bigint_add!(bigint_sub!(x849, x819, 1), x6, 1);
    let x860: BytePoly_1 = bigint_nondet_inv!(ctx, x859, x6, 1);
    let x861: BytePoly_2 = bigint_mul!(x859, x860, 2);
    let x862: BytePoly_3 = bigint_nondet_quot!(ctx, x861, x6, 3);
    let x863: BytePoly_1 = bigint_nondet_rem!(ctx, x861, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x862, x6, 4), x863, 4), x861, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x863, x1, 1), 34, 1)?;
    let x864: BytePoly_2 = bigint_mul!(bigint_add!(bigint_sub!(x855, x821, 1), x6, 1), x860, 2);
    let x865: BytePoly_3 = bigint_nondet_quot!(ctx, x864, x6, 3);
    let x866: BytePoly_1 = bigint_nondet_rem!(ctx, x864, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x865, x6, 4), x866, 4), x864, 4),
        24387,
        2,
    )?;
    let x867: BytePoly_2 = bigint_add!(bigint_sub!(x821, bigint_mul!(x866, x819, 2), 2), x6, 2);
    let x868: BytePoly_2 = bigint_nondet_quot!(ctx, x867, x6, 2);
    let x869: BytePoly_1 = bigint_nondet_rem!(ctx, x867, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x868, x6, 3), x869, 3), x867, 3),
        16259,
        2,
    )?;
    let x870: BytePoly_2 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x866, x866, 2), x819, 2), x6, 2),
            x849,
            2
        ),
        x6,
        2
    );
    let x871: BytePoly_3 = bigint_nondet_quot!(ctx, x870, x6, 3);
    let x872: BytePoly_1 = bigint_nondet_rem!(ctx, x870, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x871, x6, 4), x872, 4), x870, 4),
        24387,
        2,
    )?;
    let x873: BytePoly_2 = bigint_mul!(x866, x872, 2);
    let x874: BytePoly_3 = bigint_nondet_quot!(ctx, x873, x6, 3);
    let x875: BytePoly_1 = bigint_nondet_rem!(ctx, x873, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x874, x6, 4), x875, 4), x873, 4),
        24387,
        2,
    )?;
    let x876: BytePoly_1 = bigint_add!(bigint_sub!(x6, bigint_add!(x875, x869, 1), 1), x6, 1);
    let x877: BytePoly_1 = bigint_nondet_quot!(ctx, x876, x6, 1);
    let x878: BytePoly_1 = bigint_nondet_rem!(ctx, x876, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x877, x6, 2), x878, 2), x876, 2),
        8131,
        2,
    )?;
    let x879: BytePoly_2 = bigint_add!(bigint_mul!(x872, x856, 2), bigint_mul!(x819, x858, 2), 2);
    let x880: BytePoly_2 = bigint_add!(bigint_mul!(x878, x856, 2), bigint_mul!(x821, x858, 2), 2);
    let x881: BytePoly_3 = bigint_nondet_quot!(ctx, x879, x6, 3);
    let x882: BytePoly_1 = bigint_nondet_rem!(ctx, x879, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x881, x6, 4), x882, 4), x879, 4),
        24387,
        2,
    )?;
    let x883: BytePoly_3 = bigint_nondet_quot!(ctx, x880, x6, 3);
    let x884: BytePoly_1 = bigint_nondet_rem!(ctx, x880, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x883, x6, 4), x884, 4), x880, 4),
        24387,
        2,
    )?;
    let x885: BytePoly_2 = bigint_mul!(x849, x849, 2);
    let x886: BytePoly_3 = bigint_nondet_quot!(ctx, x885, x6, 3);
    let x887: BytePoly_1 = bigint_nondet_rem!(ctx, x885, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x886, x6, 4), x887, 4), x885, 4),
        24387,
        2,
    )?;
    let x888: BytePoly_2 = bigint_add!(bigint_mul!(x887, x0, 2), x5, 2);
    let x889: BytePoly_3 = bigint_nondet_quot!(ctx, x888, x6, 3);
    let x890: BytePoly_1 = bigint_nondet_rem!(ctx, x888, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x889, x6, 4), x890, 4), x888, 4),
        24387,
        2,
    )?;
    let x891: BytePoly_1 = bigint_add!(x855, x855, 1);
    let x892: BytePoly_1 = bigint_nondet_quot!(ctx, x891, x6, 1);
    let x893: BytePoly_1 = bigint_nondet_rem!(ctx, x891, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x892, x6, 2), x893, 2), x891, 2),
        8131,
        2,
    )?;
    let x894: BytePoly_1 = bigint_nondet_inv!(ctx, x893, x6, 1);
    let x895: BytePoly_2 = bigint_mul!(x893, x894, 2);
    let x896: BytePoly_3 = bigint_nondet_quot!(ctx, x895, x6, 3);
    let x897: BytePoly_1 = bigint_nondet_rem!(ctx, x895, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x896, x6, 4), x897, 4), x895, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x897, x3, 1), 34, 1)?;
    let x898: BytePoly_2 = bigint_mul!(x890, x894, 2);
    let x899: BytePoly_3 = bigint_nondet_quot!(ctx, x898, x6, 3);
    let x900: BytePoly_1 = bigint_nondet_rem!(ctx, x898, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x899, x6, 4), x900, 4), x898, 4),
        24387,
        2,
    )?;
    let x901: BytePoly_2 = bigint_mul!(x900, x849, 2);
    let x902: BytePoly_3 = bigint_nondet_quot!(ctx, x901, x6, 3);
    let x903: BytePoly_1 = bigint_nondet_rem!(ctx, x901, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x902, x6, 4), x903, 4), x901, 4),
        24387,
        2,
    )?;
    let x904: BytePoly_1 = bigint_add!(bigint_sub!(x855, x903, 1), x6, 1);
    let x905: BytePoly_1 = bigint_nondet_quot!(ctx, x904, x6, 1);
    let x906: BytePoly_1 = bigint_nondet_rem!(ctx, x904, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x905, x6, 2), x906, 2), x904, 2),
        8131,
        2,
    )?;
    let x907: BytePoly_2 = bigint_mul!(x900, x900, 2);
    let x908: BytePoly_3 = bigint_nondet_quot!(ctx, x907, x6, 3);
    let x909: BytePoly_1 = bigint_nondet_rem!(ctx, x907, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x908, x6, 4), x909, 4), x907, 4),
        24387,
        2,
    )?;
    let x910: BytePoly_1 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x909, x849, 1), x6, 1), x849, 1),
        x6,
        1
    );
    let x911: BytePoly_1 = bigint_nondet_quot!(ctx, x910, x6, 1);
    let x912: BytePoly_1 = bigint_nondet_rem!(ctx, x910, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x911, x6, 2), x912, 2), x910, 2),
        8131,
        2,
    )?;
    let x913: BytePoly_2 = bigint_mul!(x900, x912, 2);
    let x914: BytePoly_3 = bigint_nondet_quot!(ctx, x913, x6, 3);
    let x915: BytePoly_1 = bigint_nondet_rem!(ctx, x913, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x914, x6, 4), x915, 4), x913, 4),
        24387,
        2,
    )?;
    let x916: BytePoly_1 = bigint_add!(bigint_sub!(x6, bigint_add!(x915, x906, 1), 1), x6, 1);
    let x917: BytePoly_1 = bigint_nondet_quot!(ctx, x916, x6, 1);
    let x918: BytePoly_1 = bigint_nondet_rem!(ctx, x916, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x917, x6, 2), x918, 2), x916, 2),
        8131,
        2,
    )?;
    let x919: BytePoly_1 = bigint_nondet_rem!(ctx, x857, x2, 1);
    let x920: BytePoly_2 = bigint_nondet_quot!(ctx, x857, x2, 2);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x920, x2, 3), x919, 3), x857, 3),
        16259,
        2,
    )?;
    let x921: BytePoly_1 = bigint_sub!(x3, x919, 1);
    eqz(ctx, &bigint_mul!(x919, x921, 2), 8131, 2)?;
    let x922: BytePoly_1 = bigint_add!(bigint_sub!(x912, x882, 1), x6, 1);
    let x923: BytePoly_1 = bigint_nondet_inv!(ctx, x922, x6, 1);
    let x924: BytePoly_2 = bigint_mul!(x922, x923, 2);
    let x925: BytePoly_3 = bigint_nondet_quot!(ctx, x924, x6, 3);
    let x926: BytePoly_1 = bigint_nondet_rem!(ctx, x924, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x925, x6, 4), x926, 4), x924, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x926, x1, 1), 34, 1)?;
    let x927: BytePoly_2 = bigint_mul!(bigint_add!(bigint_sub!(x918, x884, 1), x6, 1), x923, 2);
    let x928: BytePoly_3 = bigint_nondet_quot!(ctx, x927, x6, 3);
    let x929: BytePoly_1 = bigint_nondet_rem!(ctx, x927, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x928, x6, 4), x929, 4), x927, 4),
        24387,
        2,
    )?;
    let x930: BytePoly_2 = bigint_add!(bigint_sub!(x884, bigint_mul!(x929, x882, 2), 2), x6, 2);
    let x931: BytePoly_2 = bigint_nondet_quot!(ctx, x930, x6, 2);
    let x932: BytePoly_1 = bigint_nondet_rem!(ctx, x930, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x931, x6, 3), x932, 3), x930, 3),
        16259,
        2,
    )?;
    let x933: BytePoly_2 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x929, x929, 2), x882, 2), x6, 2),
            x912,
            2
        ),
        x6,
        2
    );
    let x934: BytePoly_3 = bigint_nondet_quot!(ctx, x933, x6, 3);
    let x935: BytePoly_1 = bigint_nondet_rem!(ctx, x933, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x934, x6, 4), x935, 4), x933, 4),
        24387,
        2,
    )?;
    let x936: BytePoly_2 = bigint_mul!(x929, x935, 2);
    let x937: BytePoly_3 = bigint_nondet_quot!(ctx, x936, x6, 3);
    let x938: BytePoly_1 = bigint_nondet_rem!(ctx, x936, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x937, x6, 4), x938, 4), x936, 4),
        24387,
        2,
    )?;
    let x939: BytePoly_1 = bigint_add!(bigint_sub!(x6, bigint_add!(x938, x932, 1), 1), x6, 1);
    let x940: BytePoly_1 = bigint_nondet_quot!(ctx, x939, x6, 1);
    let x941: BytePoly_1 = bigint_nondet_rem!(ctx, x939, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x940, x6, 2), x941, 2), x939, 2),
        8131,
        2,
    )?;
    let x942: BytePoly_2 = bigint_add!(bigint_mul!(x935, x919, 2), bigint_mul!(x882, x921, 2), 2);
    let x943: BytePoly_2 = bigint_add!(bigint_mul!(x941, x919, 2), bigint_mul!(x884, x921, 2), 2);
    let x944: BytePoly_3 = bigint_nondet_quot!(ctx, x942, x6, 3);
    let x945: BytePoly_1 = bigint_nondet_rem!(ctx, x942, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x944, x6, 4), x945, 4), x942, 4),
        24387,
        2,
    )?;
    let x946: BytePoly_3 = bigint_nondet_quot!(ctx, x943, x6, 3);
    let x947: BytePoly_1 = bigint_nondet_rem!(ctx, x943, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x946, x6, 4), x947, 4), x943, 4),
        24387,
        2,
    )?;
    let x948: BytePoly_2 = bigint_mul!(x912, x912, 2);
    let x949: BytePoly_3 = bigint_nondet_quot!(ctx, x948, x6, 3);
    let x950: BytePoly_1 = bigint_nondet_rem!(ctx, x948, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x949, x6, 4), x950, 4), x948, 4),
        24387,
        2,
    )?;
    let x951: BytePoly_2 = bigint_add!(bigint_mul!(x950, x0, 2), x5, 2);
    let x952: BytePoly_3 = bigint_nondet_quot!(ctx, x951, x6, 3);
    let x953: BytePoly_1 = bigint_nondet_rem!(ctx, x951, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x952, x6, 4), x953, 4), x951, 4),
        24387,
        2,
    )?;
    let x954: BytePoly_1 = bigint_add!(x918, x918, 1);
    let x955: BytePoly_1 = bigint_nondet_quot!(ctx, x954, x6, 1);
    let x956: BytePoly_1 = bigint_nondet_rem!(ctx, x954, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x955, x6, 2), x956, 2), x954, 2),
        8131,
        2,
    )?;
    let x957: BytePoly_1 = bigint_nondet_inv!(ctx, x956, x6, 1);
    let x958: BytePoly_2 = bigint_mul!(x956, x957, 2);
    let x959: BytePoly_3 = bigint_nondet_quot!(ctx, x958, x6, 3);
    let x960: BytePoly_1 = bigint_nondet_rem!(ctx, x958, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x959, x6, 4), x960, 4), x958, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x960, x3, 1), 34, 1)?;
    let x961: BytePoly_2 = bigint_mul!(x953, x957, 2);
    let x962: BytePoly_3 = bigint_nondet_quot!(ctx, x961, x6, 3);
    let x963: BytePoly_1 = bigint_nondet_rem!(ctx, x961, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x962, x6, 4), x963, 4), x961, 4),
        24387,
        2,
    )?;
    let x964: BytePoly_2 = bigint_mul!(x963, x912, 2);
    let x965: BytePoly_3 = bigint_nondet_quot!(ctx, x964, x6, 3);
    let x966: BytePoly_1 = bigint_nondet_rem!(ctx, x964, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x965, x6, 4), x966, 4), x964, 4),
        24387,
        2,
    )?;
    let x967: BytePoly_1 = bigint_add!(bigint_sub!(x918, x966, 1), x6, 1);
    let x968: BytePoly_1 = bigint_nondet_quot!(ctx, x967, x6, 1);
    let x969: BytePoly_1 = bigint_nondet_rem!(ctx, x967, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x968, x6, 2), x969, 2), x967, 2),
        8131,
        2,
    )?;
    let x970: BytePoly_2 = bigint_mul!(x963, x963, 2);
    let x971: BytePoly_3 = bigint_nondet_quot!(ctx, x970, x6, 3);
    let x972: BytePoly_1 = bigint_nondet_rem!(ctx, x970, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x971, x6, 4), x972, 4), x970, 4),
        24387,
        2,
    )?;
    let x973: BytePoly_1 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x972, x912, 1), x6, 1), x912, 1),
        x6,
        1
    );
    let x974: BytePoly_1 = bigint_nondet_quot!(ctx, x973, x6, 1);
    let x975: BytePoly_1 = bigint_nondet_rem!(ctx, x973, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x974, x6, 2), x975, 2), x973, 2),
        8131,
        2,
    )?;
    let x976: BytePoly_2 = bigint_mul!(x963, x975, 2);
    let x977: BytePoly_3 = bigint_nondet_quot!(ctx, x976, x6, 3);
    let x978: BytePoly_1 = bigint_nondet_rem!(ctx, x976, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x977, x6, 4), x978, 4), x976, 4),
        24387,
        2,
    )?;
    let x979: BytePoly_1 = bigint_add!(bigint_sub!(x6, bigint_add!(x978, x969, 1), 1), x6, 1);
    let x980: BytePoly_1 = bigint_nondet_quot!(ctx, x979, x6, 1);
    let x981: BytePoly_1 = bigint_nondet_rem!(ctx, x979, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x980, x6, 2), x981, 2), x979, 2),
        8131,
        2,
    )?;
    let x982: BytePoly_1 = bigint_nondet_rem!(ctx, x920, x2, 1);
    let x983: BytePoly_2 = bigint_nondet_quot!(ctx, x920, x2, 2);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x983, x2, 3), x982, 3), x920, 3),
        16259,
        2,
    )?;
    let x984: BytePoly_1 = bigint_sub!(x3, x982, 1);
    eqz(ctx, &bigint_mul!(x982, x984, 2), 8131, 2)?;
    let x985: BytePoly_1 = bigint_add!(bigint_sub!(x975, x945, 1), x6, 1);
    let x986: BytePoly_1 = bigint_nondet_inv!(ctx, x985, x6, 1);
    let x987: BytePoly_2 = bigint_mul!(x985, x986, 2);
    let x988: BytePoly_3 = bigint_nondet_quot!(ctx, x987, x6, 3);
    let x989: BytePoly_1 = bigint_nondet_rem!(ctx, x987, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x988, x6, 4), x989, 4), x987, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x989, x1, 1), 34, 1)?;
    let x990: BytePoly_2 = bigint_mul!(bigint_add!(bigint_sub!(x981, x947, 1), x6, 1), x986, 2);
    let x991: BytePoly_3 = bigint_nondet_quot!(ctx, x990, x6, 3);
    let x992: BytePoly_1 = bigint_nondet_rem!(ctx, x990, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x991, x6, 4), x992, 4), x990, 4),
        24387,
        2,
    )?;
    let x993: BytePoly_2 = bigint_add!(bigint_sub!(x947, bigint_mul!(x992, x945, 2), 2), x6, 2);
    let x994: BytePoly_2 = bigint_nondet_quot!(ctx, x993, x6, 2);
    let x995: BytePoly_1 = bigint_nondet_rem!(ctx, x993, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x994, x6, 3), x995, 3), x993, 3),
        16259,
        2,
    )?;
    let x996: BytePoly_2 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x992, x992, 2), x945, 2), x6, 2),
            x975,
            2
        ),
        x6,
        2
    );
    let x997: BytePoly_3 = bigint_nondet_quot!(ctx, x996, x6, 3);
    let x998: BytePoly_1 = bigint_nondet_rem!(ctx, x996, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x997, x6, 4), x998, 4), x996, 4),
        24387,
        2,
    )?;
    let x999: BytePoly_2 = bigint_mul!(x992, x998, 2);
    let x1000: BytePoly_3 = bigint_nondet_quot!(ctx, x999, x6, 3);
    let x1001: BytePoly_1 = bigint_nondet_rem!(ctx, x999, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1000, x6, 4), x1001, 4), x999, 4),
        24387,
        2,
    )?;
    let x1002: BytePoly_1 = bigint_add!(bigint_sub!(x6, bigint_add!(x1001, x995, 1), 1), x6, 1);
    let x1003: BytePoly_1 = bigint_nondet_quot!(ctx, x1002, x6, 1);
    let x1004: BytePoly_1 = bigint_nondet_rem!(ctx, x1002, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1003, x6, 2), x1004, 2), x1002, 2),
        8131,
        2,
    )?;
    let x1005: BytePoly_2 = bigint_add!(bigint_mul!(x998, x982, 2), bigint_mul!(x945, x984, 2), 2);
    let x1006: BytePoly_2 = bigint_add!(bigint_mul!(x1004, x982, 2), bigint_mul!(x947, x984, 2), 2);
    let x1007: BytePoly_3 = bigint_nondet_quot!(ctx, x1005, x6, 3);
    let x1008: BytePoly_1 = bigint_nondet_rem!(ctx, x1005, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1007, x6, 4), x1008, 4), x1005, 4),
        24387,
        2,
    )?;
    let x1009: BytePoly_3 = bigint_nondet_quot!(ctx, x1006, x6, 3);
    let x1010: BytePoly_1 = bigint_nondet_rem!(ctx, x1006, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1009, x6, 4), x1010, 4), x1006, 4),
        24387,
        2,
    )?;
    let x1011: BytePoly_2 = bigint_mul!(x975, x975, 2);
    let x1012: BytePoly_3 = bigint_nondet_quot!(ctx, x1011, x6, 3);
    let x1013: BytePoly_1 = bigint_nondet_rem!(ctx, x1011, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1012, x6, 4), x1013, 4), x1011, 4),
        24387,
        2,
    )?;
    let x1014: BytePoly_2 = bigint_add!(bigint_mul!(x1013, x0, 2), x5, 2);
    let x1015: BytePoly_3 = bigint_nondet_quot!(ctx, x1014, x6, 3);
    let x1016: BytePoly_1 = bigint_nondet_rem!(ctx, x1014, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1015, x6, 4), x1016, 4), x1014, 4),
        24387,
        2,
    )?;
    let x1017: BytePoly_1 = bigint_add!(x981, x981, 1);
    let x1018: BytePoly_1 = bigint_nondet_quot!(ctx, x1017, x6, 1);
    let x1019: BytePoly_1 = bigint_nondet_rem!(ctx, x1017, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1018, x6, 2), x1019, 2), x1017, 2),
        8131,
        2,
    )?;
    let x1020: BytePoly_1 = bigint_nondet_inv!(ctx, x1019, x6, 1);
    let x1021: BytePoly_2 = bigint_mul!(x1019, x1020, 2);
    let x1022: BytePoly_3 = bigint_nondet_quot!(ctx, x1021, x6, 3);
    let x1023: BytePoly_1 = bigint_nondet_rem!(ctx, x1021, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1022, x6, 4), x1023, 4), x1021, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x1023, x3, 1), 34, 1)?;
    let x1024: BytePoly_2 = bigint_mul!(x1016, x1020, 2);
    let x1025: BytePoly_3 = bigint_nondet_quot!(ctx, x1024, x6, 3);
    let x1026: BytePoly_1 = bigint_nondet_rem!(ctx, x1024, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1025, x6, 4), x1026, 4), x1024, 4),
        24387,
        2,
    )?;
    let x1027: BytePoly_2 = bigint_mul!(x1026, x975, 2);
    let x1028: BytePoly_3 = bigint_nondet_quot!(ctx, x1027, x6, 3);
    let x1029: BytePoly_1 = bigint_nondet_rem!(ctx, x1027, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1028, x6, 4), x1029, 4), x1027, 4),
        24387,
        2,
    )?;
    let x1030: BytePoly_1 = bigint_add!(bigint_sub!(x981, x1029, 1), x6, 1);
    let x1031: BytePoly_1 = bigint_nondet_quot!(ctx, x1030, x6, 1);
    let x1032: BytePoly_1 = bigint_nondet_rem!(ctx, x1030, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1031, x6, 2), x1032, 2), x1030, 2),
        8131,
        2,
    )?;
    let x1033: BytePoly_2 = bigint_mul!(x1026, x1026, 2);
    let x1034: BytePoly_3 = bigint_nondet_quot!(ctx, x1033, x6, 3);
    let x1035: BytePoly_1 = bigint_nondet_rem!(ctx, x1033, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1034, x6, 4), x1035, 4), x1033, 4),
        24387,
        2,
    )?;
    let x1036: BytePoly_1 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1035, x975, 1), x6, 1), x975, 1),
        x6,
        1
    );
    let x1037: BytePoly_1 = bigint_nondet_quot!(ctx, x1036, x6, 1);
    let x1038: BytePoly_1 = bigint_nondet_rem!(ctx, x1036, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1037, x6, 2), x1038, 2), x1036, 2),
        8131,
        2,
    )?;
    let x1039: BytePoly_2 = bigint_mul!(x1026, x1038, 2);
    let x1040: BytePoly_3 = bigint_nondet_quot!(ctx, x1039, x6, 3);
    let x1041: BytePoly_1 = bigint_nondet_rem!(ctx, x1039, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1040, x6, 4), x1041, 4), x1039, 4),
        24387,
        2,
    )?;
    let x1042: BytePoly_1 = bigint_add!(bigint_sub!(x6, bigint_add!(x1041, x1032, 1), 1), x6, 1);
    let x1043: BytePoly_1 = bigint_nondet_quot!(ctx, x1042, x6, 1);
    let x1044: BytePoly_1 = bigint_nondet_rem!(ctx, x1042, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1043, x6, 2), x1044, 2), x1042, 2),
        8131,
        2,
    )?;
    let x1045: BytePoly_1 = bigint_sub!(x6, x16, 1);
    let x1046: BytePoly_1 = bigint_add!(bigint_sub!(x15, x1008, 1), x6, 1);
    let x1047: BytePoly_1 = bigint_nondet_inv!(ctx, x1046, x6, 1);
    let x1048: BytePoly_2 = bigint_mul!(x1046, x1047, 2);
    let x1049: BytePoly_3 = bigint_nondet_quot!(ctx, x1048, x6, 3);
    let x1050: BytePoly_1 = bigint_nondet_rem!(ctx, x1048, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1049, x6, 4), x1050, 4), x1048, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x1050, x1, 1), 34, 1)?;
    let x1051: BytePoly_2 = bigint_mul!(bigint_add!(bigint_sub!(x1045, x1010, 1), x6, 1), x1047, 2);
    let x1052: BytePoly_3 = bigint_nondet_quot!(ctx, x1051, x6, 3);
    let x1053: BytePoly_1 = bigint_nondet_rem!(ctx, x1051, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1052, x6, 4), x1053, 4), x1051, 4),
        24387,
        2,
    )?;
    let x1054: BytePoly_2 = bigint_add!(bigint_sub!(x1010, bigint_mul!(x1053, x1008, 2), 2), x6, 2);
    let x1055: BytePoly_2 = bigint_nondet_quot!(ctx, x1054, x6, 2);
    let x1056: BytePoly_1 = bigint_nondet_rem!(ctx, x1054, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1055, x6, 3), x1056, 3), x1054, 3),
        16259,
        2,
    )?;
    let x1057: BytePoly_2 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x1053, x1053, 2), x1008, 2), x6, 2),
            x15,
            2
        ),
        x6,
        2
    );
    let x1058: BytePoly_3 = bigint_nondet_quot!(ctx, x1057, x6, 3);
    let x1059: BytePoly_1 = bigint_nondet_rem!(ctx, x1057, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1058, x6, 4), x1059, 4), x1057, 4),
        24387,
        2,
    )?;
    let x1060: BytePoly_2 = bigint_mul!(x1053, x1059, 2);
    let x1061: BytePoly_3 = bigint_nondet_quot!(ctx, x1060, x6, 3);
    let x1062: BytePoly_1 = bigint_nondet_rem!(ctx, x1060, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1061, x6, 4), x1062, 4), x1060, 4),
        24387,
        2,
    )?;
    let x1063: BytePoly_1 = bigint_add!(bigint_sub!(x6, bigint_add!(x1062, x1056, 1), 1), x6, 1);
    let x1064: BytePoly_1 = bigint_nondet_quot!(ctx, x1063, x6, 1);
    let x1065: BytePoly_1 = bigint_nondet_rem!(ctx, x1063, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1064, x6, 2), x1065, 2), x1063, 2),
        8131,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x1059, x10, 1), 34, 1)?;
    eqz(ctx, &bigint_sub!(x1065, bigint_sub!(x6, x11, 1), 1), 34, 1)?;
    let x1066: BytePoly_2 = bigint_nondet_inv!(ctx, x14, x9, 2);
    let x1067: BytePoly_4 = bigint_mul!(x14, x1066, 4);
    let x1068: BytePoly_6 = bigint_nondet_quot!(ctx, x1067, x9, 6);
    let x1069: BytePoly_2 = bigint_nondet_rem!(ctx, x1067, x9, 2);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1068, x9, 8), x1069, 8), x1067, 8),
        48771,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1069, x3, 2), 34, 1)?;
    let x1070: BytePoly_4 = bigint_mul!(x12, x1066, 4);
    let x1071: BytePoly_6 = bigint_nondet_quot!(ctx, x1070, x9, 6);
    let x1072: BytePoly_2 = bigint_nondet_rem!(ctx, x1070, x9, 2);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1071, x9, 8), x1072, 8), x1070, 8),
        48771,
        4,
    )?;
    let x1073: BytePoly_4 = bigint_mul!(x13, x1066, 4);
    let x1074: BytePoly_6 = bigint_nondet_quot!(ctx, x1073, x9, 6);
    let x1075: BytePoly_2 = bigint_nondet_rem!(ctx, x1073, x9, 2);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1074, x9, 8), x1075, 8), x1073, 8),
        48771,
        4,
    )?;
    let x1076: BytePoly_3 = bigint_nondet_quot!(ctx, x24, x6, 3);
    let x1077: BytePoly_1 = bigint_nondet_rem!(ctx, x24, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1076, x6, 4), x1077, 4), x24, 4),
        24387,
        2,
    )?;
    let x1078: BytePoly_2 = bigint_sub!(
        x23,
        bigint_add!(bigint_add!(bigint_mul!(x15, x1077, 2), x27, 2), x4, 2),
        2
    );
    let x1079: BytePoly_3 = bigint_nondet_quot!(ctx, x1078, x6, 3);
    let x1080: BytePoly_1 = bigint_nondet_rem!(ctx, x1078, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1079, x6, 4), x1080, 4), x1078, 4),
        24387,
        2,
    )?;
    eqz(ctx, &x1080, 34, 1)?;
    let x1081: BytePoly_1 = bigint_nondet_rem!(ctx, x1072, x2, 1);
    let x1082: BytePoly_2 = bigint_nondet_quot!(ctx, x1072, x2, 2);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1082, x2, 3), x1081, 3), x1072, 3),
        16259,
        2,
    )?;
    let x1083: BytePoly_1 = bigint_sub!(x3, x1081, 1);
    eqz(ctx, &bigint_mul!(x1081, x1083, 2), 8131, 2)?;
    let x1084: BytePoly_1 = bigint_add!(bigint_sub!(x7, x15, 1), x6, 1);
    let x1085: BytePoly_1 = bigint_nondet_inv!(ctx, x1084, x6, 1);
    let x1086: BytePoly_2 = bigint_mul!(x1084, x1085, 2);
    let x1087: BytePoly_3 = bigint_nondet_quot!(ctx, x1086, x6, 3);
    let x1088: BytePoly_1 = bigint_nondet_rem!(ctx, x1086, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1087, x6, 4), x1088, 4), x1086, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x1088, x1, 1), 34, 1)?;
    let x1089: BytePoly_2 = bigint_mul!(bigint_add!(bigint_sub!(x8, x16, 1), x6, 1), x1085, 2);
    let x1090: BytePoly_3 = bigint_nondet_quot!(ctx, x1089, x6, 3);
    let x1091: BytePoly_1 = bigint_nondet_rem!(ctx, x1089, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1090, x6, 4), x1091, 4), x1089, 4),
        24387,
        2,
    )?;
    let x1092: BytePoly_2 = bigint_add!(bigint_sub!(x16, bigint_mul!(x1091, x15, 2), 2), x6, 2);
    let x1093: BytePoly_2 = bigint_nondet_quot!(ctx, x1092, x6, 2);
    let x1094: BytePoly_1 = bigint_nondet_rem!(ctx, x1092, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1093, x6, 3), x1094, 3), x1092, 3),
        16259,
        2,
    )?;
    let x1095: BytePoly_2 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x1091, x1091, 2), x15, 2), x6, 2),
            x7,
            2
        ),
        x6,
        2
    );
    let x1096: BytePoly_3 = bigint_nondet_quot!(ctx, x1095, x6, 3);
    let x1097: BytePoly_1 = bigint_nondet_rem!(ctx, x1095, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1096, x6, 4), x1097, 4), x1095, 4),
        24387,
        2,
    )?;
    let x1098: BytePoly_2 = bigint_mul!(x1091, x1097, 2);
    let x1099: BytePoly_3 = bigint_nondet_quot!(ctx, x1098, x6, 3);
    let x1100: BytePoly_1 = bigint_nondet_rem!(ctx, x1098, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1099, x6, 4), x1100, 4), x1098, 4),
        24387,
        2,
    )?;
    let x1101: BytePoly_1 = bigint_add!(bigint_sub!(x6, bigint_add!(x1100, x1094, 1), 1), x6, 1);
    let x1102: BytePoly_1 = bigint_nondet_quot!(ctx, x1101, x6, 1);
    let x1103: BytePoly_1 = bigint_nondet_rem!(ctx, x1101, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1102, x6, 2), x1103, 2), x1101, 2),
        8131,
        2,
    )?;
    let x1104: BytePoly_2 =
        bigint_add!(bigint_mul!(x1097, x1081, 2), bigint_mul!(x15, x1083, 2), 2);
    let x1105: BytePoly_2 =
        bigint_add!(bigint_mul!(x1103, x1081, 2), bigint_mul!(x16, x1083, 2), 2);
    let x1106: BytePoly_3 = bigint_nondet_quot!(ctx, x1104, x6, 3);
    let x1107: BytePoly_1 = bigint_nondet_rem!(ctx, x1104, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1106, x6, 4), x1107, 4), x1104, 4),
        24387,
        2,
    )?;
    let x1108: BytePoly_3 = bigint_nondet_quot!(ctx, x1105, x6, 3);
    let x1109: BytePoly_1 = bigint_nondet_rem!(ctx, x1105, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1108, x6, 4), x1109, 4), x1105, 4),
        24387,
        2,
    )?;
    let x1110: BytePoly_2 = bigint_mul!(x7, x7, 2);
    let x1111: BytePoly_3 = bigint_nondet_quot!(ctx, x1110, x6, 3);
    let x1112: BytePoly_1 = bigint_nondet_rem!(ctx, x1110, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1111, x6, 4), x1112, 4), x1110, 4),
        24387,
        2,
    )?;
    let x1113: BytePoly_2 = bigint_add!(bigint_mul!(x1112, x0, 2), x5, 2);
    let x1114: BytePoly_3 = bigint_nondet_quot!(ctx, x1113, x6, 3);
    let x1115: BytePoly_1 = bigint_nondet_rem!(ctx, x1113, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1114, x6, 4), x1115, 4), x1113, 4),
        24387,
        2,
    )?;
    let x1116: BytePoly_1 = bigint_add!(x8, x8, 1);
    let x1117: BytePoly_1 = bigint_nondet_quot!(ctx, x1116, x6, 1);
    let x1118: BytePoly_1 = bigint_nondet_rem!(ctx, x1116, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1117, x6, 2), x1118, 2), x1116, 2),
        8131,
        2,
    )?;
    let x1119: BytePoly_1 = bigint_nondet_inv!(ctx, x1118, x6, 1);
    let x1120: BytePoly_2 = bigint_mul!(x1118, x1119, 2);
    let x1121: BytePoly_3 = bigint_nondet_quot!(ctx, x1120, x6, 3);
    let x1122: BytePoly_1 = bigint_nondet_rem!(ctx, x1120, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1121, x6, 4), x1122, 4), x1120, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x1122, x3, 1), 34, 1)?;
    let x1123: BytePoly_2 = bigint_mul!(x1115, x1119, 2);
    let x1124: BytePoly_3 = bigint_nondet_quot!(ctx, x1123, x6, 3);
    let x1125: BytePoly_1 = bigint_nondet_rem!(ctx, x1123, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1124, x6, 4), x1125, 4), x1123, 4),
        24387,
        2,
    )?;
    let x1126: BytePoly_2 = bigint_mul!(x1125, x7, 2);
    let x1127: BytePoly_3 = bigint_nondet_quot!(ctx, x1126, x6, 3);
    let x1128: BytePoly_1 = bigint_nondet_rem!(ctx, x1126, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1127, x6, 4), x1128, 4), x1126, 4),
        24387,
        2,
    )?;
    let x1129: BytePoly_1 = bigint_add!(bigint_sub!(x8, x1128, 1), x6, 1);
    let x1130: BytePoly_1 = bigint_nondet_quot!(ctx, x1129, x6, 1);
    let x1131: BytePoly_1 = bigint_nondet_rem!(ctx, x1129, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1130, x6, 2), x1131, 2), x1129, 2),
        8131,
        2,
    )?;
    let x1132: BytePoly_2 = bigint_mul!(x1125, x1125, 2);
    let x1133: BytePoly_3 = bigint_nondet_quot!(ctx, x1132, x6, 3);
    let x1134: BytePoly_1 = bigint_nondet_rem!(ctx, x1132, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1133, x6, 4), x1134, 4), x1132, 4),
        24387,
        2,
    )?;
    let x1135: BytePoly_1 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1134, x7, 1), x6, 1), x7, 1),
        x6,
        1
    );
    let x1136: BytePoly_1 = bigint_nondet_quot!(ctx, x1135, x6, 1);
    let x1137: BytePoly_1 = bigint_nondet_rem!(ctx, x1135, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1136, x6, 2), x1137, 2), x1135, 2),
        8131,
        2,
    )?;
    let x1138: BytePoly_2 = bigint_mul!(x1125, x1137, 2);
    let x1139: BytePoly_3 = bigint_nondet_quot!(ctx, x1138, x6, 3);
    let x1140: BytePoly_1 = bigint_nondet_rem!(ctx, x1138, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1139, x6, 4), x1140, 4), x1138, 4),
        24387,
        2,
    )?;
    let x1141: BytePoly_1 = bigint_add!(bigint_sub!(x6, bigint_add!(x1140, x1131, 1), 1), x6, 1);
    let x1142: BytePoly_1 = bigint_nondet_quot!(ctx, x1141, x6, 1);
    let x1143: BytePoly_1 = bigint_nondet_rem!(ctx, x1141, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1142, x6, 2), x1143, 2), x1141, 2),
        8131,
        2,
    )?;
    let x1144: BytePoly_1 = bigint_nondet_rem!(ctx, x1082, x2, 1);
    let x1145: BytePoly_2 = bigint_nondet_quot!(ctx, x1082, x2, 2);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1145, x2, 3), x1144, 3), x1082, 3),
        16259,
        2,
    )?;
    let x1146: BytePoly_1 = bigint_sub!(x3, x1144, 1);
    eqz(ctx, &bigint_mul!(x1144, x1146, 2), 8131, 2)?;
    let x1147: BytePoly_1 = bigint_add!(bigint_sub!(x1137, x1107, 1), x6, 1);
    let x1148: BytePoly_1 = bigint_nondet_inv!(ctx, x1147, x6, 1);
    let x1149: BytePoly_2 = bigint_mul!(x1147, x1148, 2);
    let x1150: BytePoly_3 = bigint_nondet_quot!(ctx, x1149, x6, 3);
    let x1151: BytePoly_1 = bigint_nondet_rem!(ctx, x1149, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1150, x6, 4), x1151, 4), x1149, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x1151, x1, 1), 34, 1)?;
    let x1152: BytePoly_2 = bigint_mul!(bigint_add!(bigint_sub!(x1143, x1109, 1), x6, 1), x1148, 2);
    let x1153: BytePoly_3 = bigint_nondet_quot!(ctx, x1152, x6, 3);
    let x1154: BytePoly_1 = bigint_nondet_rem!(ctx, x1152, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1153, x6, 4), x1154, 4), x1152, 4),
        24387,
        2,
    )?;
    let x1155: BytePoly_2 = bigint_add!(bigint_sub!(x1109, bigint_mul!(x1154, x1107, 2), 2), x6, 2);
    let x1156: BytePoly_2 = bigint_nondet_quot!(ctx, x1155, x6, 2);
    let x1157: BytePoly_1 = bigint_nondet_rem!(ctx, x1155, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1156, x6, 3), x1157, 3), x1155, 3),
        16259,
        2,
    )?;
    let x1158: BytePoly_2 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x1154, x1154, 2), x1107, 2), x6, 2),
            x1137,
            2
        ),
        x6,
        2
    );
    let x1159: BytePoly_3 = bigint_nondet_quot!(ctx, x1158, x6, 3);
    let x1160: BytePoly_1 = bigint_nondet_rem!(ctx, x1158, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1159, x6, 4), x1160, 4), x1158, 4),
        24387,
        2,
    )?;
    let x1161: BytePoly_2 = bigint_mul!(x1154, x1160, 2);
    let x1162: BytePoly_3 = bigint_nondet_quot!(ctx, x1161, x6, 3);
    let x1163: BytePoly_1 = bigint_nondet_rem!(ctx, x1161, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1162, x6, 4), x1163, 4), x1161, 4),
        24387,
        2,
    )?;
    let x1164: BytePoly_1 = bigint_add!(bigint_sub!(x6, bigint_add!(x1163, x1157, 1), 1), x6, 1);
    let x1165: BytePoly_1 = bigint_nondet_quot!(ctx, x1164, x6, 1);
    let x1166: BytePoly_1 = bigint_nondet_rem!(ctx, x1164, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1165, x6, 2), x1166, 2), x1164, 2),
        8131,
        2,
    )?;
    let x1167: BytePoly_2 = bigint_add!(
        bigint_mul!(x1160, x1144, 2),
        bigint_mul!(x1107, x1146, 2),
        2
    );
    let x1168: BytePoly_2 = bigint_add!(
        bigint_mul!(x1166, x1144, 2),
        bigint_mul!(x1109, x1146, 2),
        2
    );
    let x1169: BytePoly_3 = bigint_nondet_quot!(ctx, x1167, x6, 3);
    let x1170: BytePoly_1 = bigint_nondet_rem!(ctx, x1167, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1169, x6, 4), x1170, 4), x1167, 4),
        24387,
        2,
    )?;
    let x1171: BytePoly_3 = bigint_nondet_quot!(ctx, x1168, x6, 3);
    let x1172: BytePoly_1 = bigint_nondet_rem!(ctx, x1168, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1171, x6, 4), x1172, 4), x1168, 4),
        24387,
        2,
    )?;
    let x1173: BytePoly_2 = bigint_mul!(x1137, x1137, 2);
    let x1174: BytePoly_3 = bigint_nondet_quot!(ctx, x1173, x6, 3);
    let x1175: BytePoly_1 = bigint_nondet_rem!(ctx, x1173, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1174, x6, 4), x1175, 4), x1173, 4),
        24387,
        2,
    )?;
    let x1176: BytePoly_2 = bigint_add!(bigint_mul!(x1175, x0, 2), x5, 2);
    let x1177: BytePoly_3 = bigint_nondet_quot!(ctx, x1176, x6, 3);
    let x1178: BytePoly_1 = bigint_nondet_rem!(ctx, x1176, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1177, x6, 4), x1178, 4), x1176, 4),
        24387,
        2,
    )?;
    let x1179: BytePoly_1 = bigint_add!(x1143, x1143, 1);
    let x1180: BytePoly_1 = bigint_nondet_quot!(ctx, x1179, x6, 1);
    let x1181: BytePoly_1 = bigint_nondet_rem!(ctx, x1179, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1180, x6, 2), x1181, 2), x1179, 2),
        8131,
        2,
    )?;
    let x1182: BytePoly_1 = bigint_nondet_inv!(ctx, x1181, x6, 1);
    let x1183: BytePoly_2 = bigint_mul!(x1181, x1182, 2);
    let x1184: BytePoly_3 = bigint_nondet_quot!(ctx, x1183, x6, 3);
    let x1185: BytePoly_1 = bigint_nondet_rem!(ctx, x1183, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1184, x6, 4), x1185, 4), x1183, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x1185, x3, 1), 34, 1)?;
    let x1186: BytePoly_2 = bigint_mul!(x1178, x1182, 2);
    let x1187: BytePoly_3 = bigint_nondet_quot!(ctx, x1186, x6, 3);
    let x1188: BytePoly_1 = bigint_nondet_rem!(ctx, x1186, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1187, x6, 4), x1188, 4), x1186, 4),
        24387,
        2,
    )?;
    let x1189: BytePoly_2 = bigint_mul!(x1188, x1137, 2);
    let x1190: BytePoly_3 = bigint_nondet_quot!(ctx, x1189, x6, 3);
    let x1191: BytePoly_1 = bigint_nondet_rem!(ctx, x1189, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1190, x6, 4), x1191, 4), x1189, 4),
        24387,
        2,
    )?;
    let x1192: BytePoly_1 = bigint_add!(bigint_sub!(x1143, x1191, 1), x6, 1);
    let x1193: BytePoly_1 = bigint_nondet_quot!(ctx, x1192, x6, 1);
    let x1194: BytePoly_1 = bigint_nondet_rem!(ctx, x1192, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1193, x6, 2), x1194, 2), x1192, 2),
        8131,
        2,
    )?;
    let x1195: BytePoly_2 = bigint_mul!(x1188, x1188, 2);
    let x1196: BytePoly_3 = bigint_nondet_quot!(ctx, x1195, x6, 3);
    let x1197: BytePoly_1 = bigint_nondet_rem!(ctx, x1195, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1196, x6, 4), x1197, 4), x1195, 4),
        24387,
        2,
    )?;
    let x1198: BytePoly_1 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1197, x1137, 1), x6, 1), x1137, 1),
        x6,
        1
    );
    let x1199: BytePoly_1 = bigint_nondet_quot!(ctx, x1198, x6, 1);
    let x1200: BytePoly_1 = bigint_nondet_rem!(ctx, x1198, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1199, x6, 2), x1200, 2), x1198, 2),
        8131,
        2,
    )?;
    let x1201: BytePoly_2 = bigint_mul!(x1188, x1200, 2);
    let x1202: BytePoly_3 = bigint_nondet_quot!(ctx, x1201, x6, 3);
    let x1203: BytePoly_1 = bigint_nondet_rem!(ctx, x1201, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1202, x6, 4), x1203, 4), x1201, 4),
        24387,
        2,
    )?;
    let x1204: BytePoly_1 = bigint_add!(bigint_sub!(x6, bigint_add!(x1203, x1194, 1), 1), x6, 1);
    let x1205: BytePoly_1 = bigint_nondet_quot!(ctx, x1204, x6, 1);
    let x1206: BytePoly_1 = bigint_nondet_rem!(ctx, x1204, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1205, x6, 2), x1206, 2), x1204, 2),
        8131,
        2,
    )?;
    let x1207: BytePoly_1 = bigint_nondet_rem!(ctx, x1145, x2, 1);
    let x1208: BytePoly_2 = bigint_nondet_quot!(ctx, x1145, x2, 2);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1208, x2, 3), x1207, 3), x1145, 3),
        16259,
        2,
    )?;
    let x1209: BytePoly_1 = bigint_sub!(x3, x1207, 1);
    eqz(ctx, &bigint_mul!(x1207, x1209, 2), 8131, 2)?;
    let x1210: BytePoly_1 = bigint_add!(bigint_sub!(x1200, x1170, 1), x6, 1);
    let x1211: BytePoly_1 = bigint_nondet_inv!(ctx, x1210, x6, 1);
    let x1212: BytePoly_2 = bigint_mul!(x1210, x1211, 2);
    let x1213: BytePoly_3 = bigint_nondet_quot!(ctx, x1212, x6, 3);
    let x1214: BytePoly_1 = bigint_nondet_rem!(ctx, x1212, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1213, x6, 4), x1214, 4), x1212, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x1214, x1, 1), 34, 1)?;
    let x1215: BytePoly_2 = bigint_mul!(bigint_add!(bigint_sub!(x1206, x1172, 1), x6, 1), x1211, 2);
    let x1216: BytePoly_3 = bigint_nondet_quot!(ctx, x1215, x6, 3);
    let x1217: BytePoly_1 = bigint_nondet_rem!(ctx, x1215, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1216, x6, 4), x1217, 4), x1215, 4),
        24387,
        2,
    )?;
    let x1218: BytePoly_2 = bigint_add!(bigint_sub!(x1172, bigint_mul!(x1217, x1170, 2), 2), x6, 2);
    let x1219: BytePoly_2 = bigint_nondet_quot!(ctx, x1218, x6, 2);
    let x1220: BytePoly_1 = bigint_nondet_rem!(ctx, x1218, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1219, x6, 3), x1220, 3), x1218, 3),
        16259,
        2,
    )?;
    let x1221: BytePoly_2 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x1217, x1217, 2), x1170, 2), x6, 2),
            x1200,
            2
        ),
        x6,
        2
    );
    let x1222: BytePoly_3 = bigint_nondet_quot!(ctx, x1221, x6, 3);
    let x1223: BytePoly_1 = bigint_nondet_rem!(ctx, x1221, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1222, x6, 4), x1223, 4), x1221, 4),
        24387,
        2,
    )?;
    let x1224: BytePoly_2 = bigint_mul!(x1217, x1223, 2);
    let x1225: BytePoly_3 = bigint_nondet_quot!(ctx, x1224, x6, 3);
    let x1226: BytePoly_1 = bigint_nondet_rem!(ctx, x1224, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1225, x6, 4), x1226, 4), x1224, 4),
        24387,
        2,
    )?;
    let x1227: BytePoly_1 = bigint_add!(bigint_sub!(x6, bigint_add!(x1226, x1220, 1), 1), x6, 1);
    let x1228: BytePoly_1 = bigint_nondet_quot!(ctx, x1227, x6, 1);
    let x1229: BytePoly_1 = bigint_nondet_rem!(ctx, x1227, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1228, x6, 2), x1229, 2), x1227, 2),
        8131,
        2,
    )?;
    let x1230: BytePoly_2 = bigint_add!(
        bigint_mul!(x1223, x1207, 2),
        bigint_mul!(x1170, x1209, 2),
        2
    );
    let x1231: BytePoly_2 = bigint_add!(
        bigint_mul!(x1229, x1207, 2),
        bigint_mul!(x1172, x1209, 2),
        2
    );
    let x1232: BytePoly_3 = bigint_nondet_quot!(ctx, x1230, x6, 3);
    let x1233: BytePoly_1 = bigint_nondet_rem!(ctx, x1230, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1232, x6, 4), x1233, 4), x1230, 4),
        24387,
        2,
    )?;
    let x1234: BytePoly_3 = bigint_nondet_quot!(ctx, x1231, x6, 3);
    let x1235: BytePoly_1 = bigint_nondet_rem!(ctx, x1231, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1234, x6, 4), x1235, 4), x1231, 4),
        24387,
        2,
    )?;
    let x1236: BytePoly_2 = bigint_mul!(x1200, x1200, 2);
    let x1237: BytePoly_3 = bigint_nondet_quot!(ctx, x1236, x6, 3);
    let x1238: BytePoly_1 = bigint_nondet_rem!(ctx, x1236, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1237, x6, 4), x1238, 4), x1236, 4),
        24387,
        2,
    )?;
    let x1239: BytePoly_2 = bigint_add!(bigint_mul!(x1238, x0, 2), x5, 2);
    let x1240: BytePoly_3 = bigint_nondet_quot!(ctx, x1239, x6, 3);
    let x1241: BytePoly_1 = bigint_nondet_rem!(ctx, x1239, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1240, x6, 4), x1241, 4), x1239, 4),
        24387,
        2,
    )?;
    let x1242: BytePoly_1 = bigint_add!(x1206, x1206, 1);
    let x1243: BytePoly_1 = bigint_nondet_quot!(ctx, x1242, x6, 1);
    let x1244: BytePoly_1 = bigint_nondet_rem!(ctx, x1242, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1243, x6, 2), x1244, 2), x1242, 2),
        8131,
        2,
    )?;
    let x1245: BytePoly_1 = bigint_nondet_inv!(ctx, x1244, x6, 1);
    let x1246: BytePoly_2 = bigint_mul!(x1244, x1245, 2);
    let x1247: BytePoly_3 = bigint_nondet_quot!(ctx, x1246, x6, 3);
    let x1248: BytePoly_1 = bigint_nondet_rem!(ctx, x1246, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1247, x6, 4), x1248, 4), x1246, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x1248, x3, 1), 34, 1)?;
    let x1249: BytePoly_2 = bigint_mul!(x1241, x1245, 2);
    let x1250: BytePoly_3 = bigint_nondet_quot!(ctx, x1249, x6, 3);
    let x1251: BytePoly_1 = bigint_nondet_rem!(ctx, x1249, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1250, x6, 4), x1251, 4), x1249, 4),
        24387,
        2,
    )?;
    let x1252: BytePoly_2 = bigint_mul!(x1251, x1200, 2);
    let x1253: BytePoly_3 = bigint_nondet_quot!(ctx, x1252, x6, 3);
    let x1254: BytePoly_1 = bigint_nondet_rem!(ctx, x1252, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1253, x6, 4), x1254, 4), x1252, 4),
        24387,
        2,
    )?;
    let x1255: BytePoly_1 = bigint_add!(bigint_sub!(x1206, x1254, 1), x6, 1);
    let x1256: BytePoly_1 = bigint_nondet_quot!(ctx, x1255, x6, 1);
    let x1257: BytePoly_1 = bigint_nondet_rem!(ctx, x1255, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1256, x6, 2), x1257, 2), x1255, 2),
        8131,
        2,
    )?;
    let x1258: BytePoly_2 = bigint_mul!(x1251, x1251, 2);
    let x1259: BytePoly_3 = bigint_nondet_quot!(ctx, x1258, x6, 3);
    let x1260: BytePoly_1 = bigint_nondet_rem!(ctx, x1258, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1259, x6, 4), x1260, 4), x1258, 4),
        24387,
        2,
    )?;
    let x1261: BytePoly_1 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1260, x1200, 1), x6, 1), x1200, 1),
        x6,
        1
    );
    let x1262: BytePoly_1 = bigint_nondet_quot!(ctx, x1261, x6, 1);
    let x1263: BytePoly_1 = bigint_nondet_rem!(ctx, x1261, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1262, x6, 2), x1263, 2), x1261, 2),
        8131,
        2,
    )?;
    let x1264: BytePoly_2 = bigint_mul!(x1251, x1263, 2);
    let x1265: BytePoly_3 = bigint_nondet_quot!(ctx, x1264, x6, 3);
    let x1266: BytePoly_1 = bigint_nondet_rem!(ctx, x1264, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1265, x6, 4), x1266, 4), x1264, 4),
        24387,
        2,
    )?;
    let x1267: BytePoly_1 = bigint_add!(bigint_sub!(x6, bigint_add!(x1266, x1257, 1), 1), x6, 1);
    let x1268: BytePoly_1 = bigint_nondet_quot!(ctx, x1267, x6, 1);
    let x1269: BytePoly_1 = bigint_nondet_rem!(ctx, x1267, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1268, x6, 2), x1269, 2), x1267, 2),
        8131,
        2,
    )?;
    let x1270: BytePoly_1 = bigint_nondet_rem!(ctx, x1208, x2, 1);
    let x1271: BytePoly_2 = bigint_nondet_quot!(ctx, x1208, x2, 2);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1271, x2, 3), x1270, 3), x1208, 3),
        16259,
        2,
    )?;
    let x1272: BytePoly_1 = bigint_sub!(x3, x1270, 1);
    eqz(ctx, &bigint_mul!(x1270, x1272, 2), 8131, 2)?;
    let x1273: BytePoly_1 = bigint_add!(bigint_sub!(x1263, x1233, 1), x6, 1);
    let x1274: BytePoly_1 = bigint_nondet_inv!(ctx, x1273, x6, 1);
    let x1275: BytePoly_2 = bigint_mul!(x1273, x1274, 2);
    let x1276: BytePoly_3 = bigint_nondet_quot!(ctx, x1275, x6, 3);
    let x1277: BytePoly_1 = bigint_nondet_rem!(ctx, x1275, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1276, x6, 4), x1277, 4), x1275, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x1277, x1, 1), 34, 1)?;
    let x1278: BytePoly_2 = bigint_mul!(bigint_add!(bigint_sub!(x1269, x1235, 1), x6, 1), x1274, 2);
    let x1279: BytePoly_3 = bigint_nondet_quot!(ctx, x1278, x6, 3);
    let x1280: BytePoly_1 = bigint_nondet_rem!(ctx, x1278, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1279, x6, 4), x1280, 4), x1278, 4),
        24387,
        2,
    )?;
    let x1281: BytePoly_2 = bigint_add!(bigint_sub!(x1235, bigint_mul!(x1280, x1233, 2), 2), x6, 2);
    let x1282: BytePoly_2 = bigint_nondet_quot!(ctx, x1281, x6, 2);
    let x1283: BytePoly_1 = bigint_nondet_rem!(ctx, x1281, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1282, x6, 3), x1283, 3), x1281, 3),
        16259,
        2,
    )?;
    let x1284: BytePoly_2 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x1280, x1280, 2), x1233, 2), x6, 2),
            x1263,
            2
        ),
        x6,
        2
    );
    let x1285: BytePoly_3 = bigint_nondet_quot!(ctx, x1284, x6, 3);
    let x1286: BytePoly_1 = bigint_nondet_rem!(ctx, x1284, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1285, x6, 4), x1286, 4), x1284, 4),
        24387,
        2,
    )?;
    let x1287: BytePoly_2 = bigint_mul!(x1280, x1286, 2);
    let x1288: BytePoly_3 = bigint_nondet_quot!(ctx, x1287, x6, 3);
    let x1289: BytePoly_1 = bigint_nondet_rem!(ctx, x1287, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1288, x6, 4), x1289, 4), x1287, 4),
        24387,
        2,
    )?;
    let x1290: BytePoly_1 = bigint_add!(bigint_sub!(x6, bigint_add!(x1289, x1283, 1), 1), x6, 1);
    let x1291: BytePoly_1 = bigint_nondet_quot!(ctx, x1290, x6, 1);
    let x1292: BytePoly_1 = bigint_nondet_rem!(ctx, x1290, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1291, x6, 2), x1292, 2), x1290, 2),
        8131,
        2,
    )?;
    let x1293: BytePoly_2 = bigint_add!(
        bigint_mul!(x1286, x1270, 2),
        bigint_mul!(x1233, x1272, 2),
        2
    );
    let x1294: BytePoly_2 = bigint_add!(
        bigint_mul!(x1292, x1270, 2),
        bigint_mul!(x1235, x1272, 2),
        2
    );
    let x1295: BytePoly_3 = bigint_nondet_quot!(ctx, x1293, x6, 3);
    let x1296: BytePoly_1 = bigint_nondet_rem!(ctx, x1293, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1295, x6, 4), x1296, 4), x1293, 4),
        24387,
        2,
    )?;
    let x1297: BytePoly_3 = bigint_nondet_quot!(ctx, x1294, x6, 3);
    let x1298: BytePoly_1 = bigint_nondet_rem!(ctx, x1294, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1297, x6, 4), x1298, 4), x1294, 4),
        24387,
        2,
    )?;
    let x1299: BytePoly_2 = bigint_mul!(x1263, x1263, 2);
    let x1300: BytePoly_3 = bigint_nondet_quot!(ctx, x1299, x6, 3);
    let x1301: BytePoly_1 = bigint_nondet_rem!(ctx, x1299, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1300, x6, 4), x1301, 4), x1299, 4),
        24387,
        2,
    )?;
    let x1302: BytePoly_2 = bigint_add!(bigint_mul!(x1301, x0, 2), x5, 2);
    let x1303: BytePoly_3 = bigint_nondet_quot!(ctx, x1302, x6, 3);
    let x1304: BytePoly_1 = bigint_nondet_rem!(ctx, x1302, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1303, x6, 4), x1304, 4), x1302, 4),
        24387,
        2,
    )?;
    let x1305: BytePoly_1 = bigint_add!(x1269, x1269, 1);
    let x1306: BytePoly_1 = bigint_nondet_quot!(ctx, x1305, x6, 1);
    let x1307: BytePoly_1 = bigint_nondet_rem!(ctx, x1305, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1306, x6, 2), x1307, 2), x1305, 2),
        8131,
        2,
    )?;
    let x1308: BytePoly_1 = bigint_nondet_inv!(ctx, x1307, x6, 1);
    let x1309: BytePoly_2 = bigint_mul!(x1307, x1308, 2);
    let x1310: BytePoly_3 = bigint_nondet_quot!(ctx, x1309, x6, 3);
    let x1311: BytePoly_1 = bigint_nondet_rem!(ctx, x1309, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1310, x6, 4), x1311, 4), x1309, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x1311, x3, 1), 34, 1)?;
    let x1312: BytePoly_2 = bigint_mul!(x1304, x1308, 2);
    let x1313: BytePoly_3 = bigint_nondet_quot!(ctx, x1312, x6, 3);
    let x1314: BytePoly_1 = bigint_nondet_rem!(ctx, x1312, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1313, x6, 4), x1314, 4), x1312, 4),
        24387,
        2,
    )?;
    let x1315: BytePoly_2 = bigint_mul!(x1314, x1263, 2);
    let x1316: BytePoly_3 = bigint_nondet_quot!(ctx, x1315, x6, 3);
    let x1317: BytePoly_1 = bigint_nondet_rem!(ctx, x1315, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1316, x6, 4), x1317, 4), x1315, 4),
        24387,
        2,
    )?;
    let x1318: BytePoly_1 = bigint_add!(bigint_sub!(x1269, x1317, 1), x6, 1);
    let x1319: BytePoly_1 = bigint_nondet_quot!(ctx, x1318, x6, 1);
    let x1320: BytePoly_1 = bigint_nondet_rem!(ctx, x1318, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1319, x6, 2), x1320, 2), x1318, 2),
        8131,
        2,
    )?;
    let x1321: BytePoly_2 = bigint_mul!(x1314, x1314, 2);
    let x1322: BytePoly_3 = bigint_nondet_quot!(ctx, x1321, x6, 3);
    let x1323: BytePoly_1 = bigint_nondet_rem!(ctx, x1321, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1322, x6, 4), x1323, 4), x1321, 4),
        24387,
        2,
    )?;
    let x1324: BytePoly_1 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1323, x1263, 1), x6, 1), x1263, 1),
        x6,
        1
    );
    let x1325: BytePoly_1 = bigint_nondet_quot!(ctx, x1324, x6, 1);
    let x1326: BytePoly_1 = bigint_nondet_rem!(ctx, x1324, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1325, x6, 2), x1326, 2), x1324, 2),
        8131,
        2,
    )?;
    let x1327: BytePoly_2 = bigint_mul!(x1314, x1326, 2);
    let x1328: BytePoly_3 = bigint_nondet_quot!(ctx, x1327, x6, 3);
    let x1329: BytePoly_1 = bigint_nondet_rem!(ctx, x1327, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1328, x6, 4), x1329, 4), x1327, 4),
        24387,
        2,
    )?;
    let x1330: BytePoly_1 = bigint_add!(bigint_sub!(x6, bigint_add!(x1329, x1320, 1), 1), x6, 1);
    let x1331: BytePoly_1 = bigint_nondet_quot!(ctx, x1330, x6, 1);
    let x1332: BytePoly_1 = bigint_nondet_rem!(ctx, x1330, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1331, x6, 2), x1332, 2), x1330, 2),
        8131,
        2,
    )?;
    let x1333: BytePoly_1 = bigint_nondet_rem!(ctx, x1271, x2, 1);
    let x1334: BytePoly_2 = bigint_nondet_quot!(ctx, x1271, x2, 2);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1334, x2, 3), x1333, 3), x1271, 3),
        16259,
        2,
    )?;
    let x1335: BytePoly_1 = bigint_sub!(x3, x1333, 1);
    eqz(ctx, &bigint_mul!(x1333, x1335, 2), 8131, 2)?;
    let x1336: BytePoly_1 = bigint_add!(bigint_sub!(x1326, x1296, 1), x6, 1);
    let x1337: BytePoly_1 = bigint_nondet_inv!(ctx, x1336, x6, 1);
    let x1338: BytePoly_2 = bigint_mul!(x1336, x1337, 2);
    let x1339: BytePoly_3 = bigint_nondet_quot!(ctx, x1338, x6, 3);
    let x1340: BytePoly_1 = bigint_nondet_rem!(ctx, x1338, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1339, x6, 4), x1340, 4), x1338, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x1340, x1, 1), 34, 1)?;
    let x1341: BytePoly_2 = bigint_mul!(bigint_add!(bigint_sub!(x1332, x1298, 1), x6, 1), x1337, 2);
    let x1342: BytePoly_3 = bigint_nondet_quot!(ctx, x1341, x6, 3);
    let x1343: BytePoly_1 = bigint_nondet_rem!(ctx, x1341, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1342, x6, 4), x1343, 4), x1341, 4),
        24387,
        2,
    )?;
    let x1344: BytePoly_2 = bigint_add!(bigint_sub!(x1298, bigint_mul!(x1343, x1296, 2), 2), x6, 2);
    let x1345: BytePoly_2 = bigint_nondet_quot!(ctx, x1344, x6, 2);
    let x1346: BytePoly_1 = bigint_nondet_rem!(ctx, x1344, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1345, x6, 3), x1346, 3), x1344, 3),
        16259,
        2,
    )?;
    let x1347: BytePoly_2 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x1343, x1343, 2), x1296, 2), x6, 2),
            x1326,
            2
        ),
        x6,
        2
    );
    let x1348: BytePoly_3 = bigint_nondet_quot!(ctx, x1347, x6, 3);
    let x1349: BytePoly_1 = bigint_nondet_rem!(ctx, x1347, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1348, x6, 4), x1349, 4), x1347, 4),
        24387,
        2,
    )?;
    let x1350: BytePoly_2 = bigint_mul!(x1343, x1349, 2);
    let x1351: BytePoly_3 = bigint_nondet_quot!(ctx, x1350, x6, 3);
    let x1352: BytePoly_1 = bigint_nondet_rem!(ctx, x1350, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1351, x6, 4), x1352, 4), x1350, 4),
        24387,
        2,
    )?;
    let x1353: BytePoly_1 = bigint_add!(bigint_sub!(x6, bigint_add!(x1352, x1346, 1), 1), x6, 1);
    let x1354: BytePoly_1 = bigint_nondet_quot!(ctx, x1353, x6, 1);
    let x1355: BytePoly_1 = bigint_nondet_rem!(ctx, x1353, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1354, x6, 2), x1355, 2), x1353, 2),
        8131,
        2,
    )?;
    let x1356: BytePoly_2 = bigint_add!(
        bigint_mul!(x1349, x1333, 2),
        bigint_mul!(x1296, x1335, 2),
        2
    );
    let x1357: BytePoly_2 = bigint_add!(
        bigint_mul!(x1355, x1333, 2),
        bigint_mul!(x1298, x1335, 2),
        2
    );
    let x1358: BytePoly_3 = bigint_nondet_quot!(ctx, x1356, x6, 3);
    let x1359: BytePoly_1 = bigint_nondet_rem!(ctx, x1356, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1358, x6, 4), x1359, 4), x1356, 4),
        24387,
        2,
    )?;
    let x1360: BytePoly_3 = bigint_nondet_quot!(ctx, x1357, x6, 3);
    let x1361: BytePoly_1 = bigint_nondet_rem!(ctx, x1357, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1360, x6, 4), x1361, 4), x1357, 4),
        24387,
        2,
    )?;
    let x1362: BytePoly_2 = bigint_mul!(x1326, x1326, 2);
    let x1363: BytePoly_3 = bigint_nondet_quot!(ctx, x1362, x6, 3);
    let x1364: BytePoly_1 = bigint_nondet_rem!(ctx, x1362, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1363, x6, 4), x1364, 4), x1362, 4),
        24387,
        2,
    )?;
    let x1365: BytePoly_2 = bigint_add!(bigint_mul!(x1364, x0, 2), x5, 2);
    let x1366: BytePoly_3 = bigint_nondet_quot!(ctx, x1365, x6, 3);
    let x1367: BytePoly_1 = bigint_nondet_rem!(ctx, x1365, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1366, x6, 4), x1367, 4), x1365, 4),
        24387,
        2,
    )?;
    let x1368: BytePoly_1 = bigint_add!(x1332, x1332, 1);
    let x1369: BytePoly_1 = bigint_nondet_quot!(ctx, x1368, x6, 1);
    let x1370: BytePoly_1 = bigint_nondet_rem!(ctx, x1368, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1369, x6, 2), x1370, 2), x1368, 2),
        8131,
        2,
    )?;
    let x1371: BytePoly_1 = bigint_nondet_inv!(ctx, x1370, x6, 1);
    let x1372: BytePoly_2 = bigint_mul!(x1370, x1371, 2);
    let x1373: BytePoly_3 = bigint_nondet_quot!(ctx, x1372, x6, 3);
    let x1374: BytePoly_1 = bigint_nondet_rem!(ctx, x1372, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1373, x6, 4), x1374, 4), x1372, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x1374, x3, 1), 34, 1)?;
    let x1375: BytePoly_2 = bigint_mul!(x1367, x1371, 2);
    let x1376: BytePoly_3 = bigint_nondet_quot!(ctx, x1375, x6, 3);
    let x1377: BytePoly_1 = bigint_nondet_rem!(ctx, x1375, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1376, x6, 4), x1377, 4), x1375, 4),
        24387,
        2,
    )?;
    let x1378: BytePoly_2 = bigint_mul!(x1377, x1326, 2);
    let x1379: BytePoly_3 = bigint_nondet_quot!(ctx, x1378, x6, 3);
    let x1380: BytePoly_1 = bigint_nondet_rem!(ctx, x1378, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1379, x6, 4), x1380, 4), x1378, 4),
        24387,
        2,
    )?;
    let x1381: BytePoly_1 = bigint_add!(bigint_sub!(x1332, x1380, 1), x6, 1);
    let x1382: BytePoly_1 = bigint_nondet_quot!(ctx, x1381, x6, 1);
    let x1383: BytePoly_1 = bigint_nondet_rem!(ctx, x1381, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1382, x6, 2), x1383, 2), x1381, 2),
        8131,
        2,
    )?;
    let x1384: BytePoly_2 = bigint_mul!(x1377, x1377, 2);
    let x1385: BytePoly_3 = bigint_nondet_quot!(ctx, x1384, x6, 3);
    let x1386: BytePoly_1 = bigint_nondet_rem!(ctx, x1384, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1385, x6, 4), x1386, 4), x1384, 4),
        24387,
        2,
    )?;
    let x1387: BytePoly_1 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1386, x1326, 1), x6, 1), x1326, 1),
        x6,
        1
    );
    let x1388: BytePoly_1 = bigint_nondet_quot!(ctx, x1387, x6, 1);
    let x1389: BytePoly_1 = bigint_nondet_rem!(ctx, x1387, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1388, x6, 2), x1389, 2), x1387, 2),
        8131,
        2,
    )?;
    let x1390: BytePoly_2 = bigint_mul!(x1377, x1389, 2);
    let x1391: BytePoly_3 = bigint_nondet_quot!(ctx, x1390, x6, 3);
    let x1392: BytePoly_1 = bigint_nondet_rem!(ctx, x1390, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1391, x6, 4), x1392, 4), x1390, 4),
        24387,
        2,
    )?;
    let x1393: BytePoly_1 = bigint_add!(bigint_sub!(x6, bigint_add!(x1392, x1383, 1), 1), x6, 1);
    let x1394: BytePoly_1 = bigint_nondet_quot!(ctx, x1393, x6, 1);
    let x1395: BytePoly_1 = bigint_nondet_rem!(ctx, x1393, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1394, x6, 2), x1395, 2), x1393, 2),
        8131,
        2,
    )?;
    let x1396: BytePoly_1 = bigint_nondet_rem!(ctx, x1334, x2, 1);
    let x1397: BytePoly_2 = bigint_nondet_quot!(ctx, x1334, x2, 2);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1397, x2, 3), x1396, 3), x1334, 3),
        16259,
        2,
    )?;
    let x1398: BytePoly_1 = bigint_sub!(x3, x1396, 1);
    eqz(ctx, &bigint_mul!(x1396, x1398, 2), 8131, 2)?;
    let x1399: BytePoly_1 = bigint_add!(bigint_sub!(x1389, x1359, 1), x6, 1);
    let x1400: BytePoly_1 = bigint_nondet_inv!(ctx, x1399, x6, 1);
    let x1401: BytePoly_2 = bigint_mul!(x1399, x1400, 2);
    let x1402: BytePoly_3 = bigint_nondet_quot!(ctx, x1401, x6, 3);
    let x1403: BytePoly_1 = bigint_nondet_rem!(ctx, x1401, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1402, x6, 4), x1403, 4), x1401, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x1403, x1, 1), 34, 1)?;
    let x1404: BytePoly_2 = bigint_mul!(bigint_add!(bigint_sub!(x1395, x1361, 1), x6, 1), x1400, 2);
    let x1405: BytePoly_3 = bigint_nondet_quot!(ctx, x1404, x6, 3);
    let x1406: BytePoly_1 = bigint_nondet_rem!(ctx, x1404, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1405, x6, 4), x1406, 4), x1404, 4),
        24387,
        2,
    )?;
    let x1407: BytePoly_2 = bigint_add!(bigint_sub!(x1361, bigint_mul!(x1406, x1359, 2), 2), x6, 2);
    let x1408: BytePoly_2 = bigint_nondet_quot!(ctx, x1407, x6, 2);
    let x1409: BytePoly_1 = bigint_nondet_rem!(ctx, x1407, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1408, x6, 3), x1409, 3), x1407, 3),
        16259,
        2,
    )?;
    let x1410: BytePoly_2 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x1406, x1406, 2), x1359, 2), x6, 2),
            x1389,
            2
        ),
        x6,
        2
    );
    let x1411: BytePoly_3 = bigint_nondet_quot!(ctx, x1410, x6, 3);
    let x1412: BytePoly_1 = bigint_nondet_rem!(ctx, x1410, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1411, x6, 4), x1412, 4), x1410, 4),
        24387,
        2,
    )?;
    let x1413: BytePoly_2 = bigint_mul!(x1406, x1412, 2);
    let x1414: BytePoly_3 = bigint_nondet_quot!(ctx, x1413, x6, 3);
    let x1415: BytePoly_1 = bigint_nondet_rem!(ctx, x1413, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1414, x6, 4), x1415, 4), x1413, 4),
        24387,
        2,
    )?;
    let x1416: BytePoly_1 = bigint_add!(bigint_sub!(x6, bigint_add!(x1415, x1409, 1), 1), x6, 1);
    let x1417: BytePoly_1 = bigint_nondet_quot!(ctx, x1416, x6, 1);
    let x1418: BytePoly_1 = bigint_nondet_rem!(ctx, x1416, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1417, x6, 2), x1418, 2), x1416, 2),
        8131,
        2,
    )?;
    let x1419: BytePoly_2 = bigint_add!(
        bigint_mul!(x1412, x1396, 2),
        bigint_mul!(x1359, x1398, 2),
        2
    );
    let x1420: BytePoly_2 = bigint_add!(
        bigint_mul!(x1418, x1396, 2),
        bigint_mul!(x1361, x1398, 2),
        2
    );
    let x1421: BytePoly_3 = bigint_nondet_quot!(ctx, x1419, x6, 3);
    let x1422: BytePoly_1 = bigint_nondet_rem!(ctx, x1419, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1421, x6, 4), x1422, 4), x1419, 4),
        24387,
        2,
    )?;
    let x1423: BytePoly_3 = bigint_nondet_quot!(ctx, x1420, x6, 3);
    let x1424: BytePoly_1 = bigint_nondet_rem!(ctx, x1420, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1423, x6, 4), x1424, 4), x1420, 4),
        24387,
        2,
    )?;
    let x1425: BytePoly_2 = bigint_mul!(x1389, x1389, 2);
    let x1426: BytePoly_3 = bigint_nondet_quot!(ctx, x1425, x6, 3);
    let x1427: BytePoly_1 = bigint_nondet_rem!(ctx, x1425, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1426, x6, 4), x1427, 4), x1425, 4),
        24387,
        2,
    )?;
    let x1428: BytePoly_2 = bigint_add!(bigint_mul!(x1427, x0, 2), x5, 2);
    let x1429: BytePoly_3 = bigint_nondet_quot!(ctx, x1428, x6, 3);
    let x1430: BytePoly_1 = bigint_nondet_rem!(ctx, x1428, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1429, x6, 4), x1430, 4), x1428, 4),
        24387,
        2,
    )?;
    let x1431: BytePoly_1 = bigint_add!(x1395, x1395, 1);
    let x1432: BytePoly_1 = bigint_nondet_quot!(ctx, x1431, x6, 1);
    let x1433: BytePoly_1 = bigint_nondet_rem!(ctx, x1431, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1432, x6, 2), x1433, 2), x1431, 2),
        8131,
        2,
    )?;
    let x1434: BytePoly_1 = bigint_nondet_inv!(ctx, x1433, x6, 1);
    let x1435: BytePoly_2 = bigint_mul!(x1433, x1434, 2);
    let x1436: BytePoly_3 = bigint_nondet_quot!(ctx, x1435, x6, 3);
    let x1437: BytePoly_1 = bigint_nondet_rem!(ctx, x1435, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1436, x6, 4), x1437, 4), x1435, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x1437, x3, 1), 34, 1)?;
    let x1438: BytePoly_2 = bigint_mul!(x1430, x1434, 2);
    let x1439: BytePoly_3 = bigint_nondet_quot!(ctx, x1438, x6, 3);
    let x1440: BytePoly_1 = bigint_nondet_rem!(ctx, x1438, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1439, x6, 4), x1440, 4), x1438, 4),
        24387,
        2,
    )?;
    let x1441: BytePoly_2 = bigint_mul!(x1440, x1389, 2);
    let x1442: BytePoly_3 = bigint_nondet_quot!(ctx, x1441, x6, 3);
    let x1443: BytePoly_1 = bigint_nondet_rem!(ctx, x1441, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1442, x6, 4), x1443, 4), x1441, 4),
        24387,
        2,
    )?;
    let x1444: BytePoly_1 = bigint_add!(bigint_sub!(x1395, x1443, 1), x6, 1);
    let x1445: BytePoly_1 = bigint_nondet_quot!(ctx, x1444, x6, 1);
    let x1446: BytePoly_1 = bigint_nondet_rem!(ctx, x1444, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1445, x6, 2), x1446, 2), x1444, 2),
        8131,
        2,
    )?;
    let x1447: BytePoly_2 = bigint_mul!(x1440, x1440, 2);
    let x1448: BytePoly_3 = bigint_nondet_quot!(ctx, x1447, x6, 3);
    let x1449: BytePoly_1 = bigint_nondet_rem!(ctx, x1447, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1448, x6, 4), x1449, 4), x1447, 4),
        24387,
        2,
    )?;
    let x1450: BytePoly_1 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1449, x1389, 1), x6, 1), x1389, 1),
        x6,
        1
    );
    let x1451: BytePoly_1 = bigint_nondet_quot!(ctx, x1450, x6, 1);
    let x1452: BytePoly_1 = bigint_nondet_rem!(ctx, x1450, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1451, x6, 2), x1452, 2), x1450, 2),
        8131,
        2,
    )?;
    let x1453: BytePoly_2 = bigint_mul!(x1440, x1452, 2);
    let x1454: BytePoly_3 = bigint_nondet_quot!(ctx, x1453, x6, 3);
    let x1455: BytePoly_1 = bigint_nondet_rem!(ctx, x1453, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1454, x6, 4), x1455, 4), x1453, 4),
        24387,
        2,
    )?;
    let x1456: BytePoly_1 = bigint_add!(bigint_sub!(x6, bigint_add!(x1455, x1446, 1), 1), x6, 1);
    let x1457: BytePoly_1 = bigint_nondet_quot!(ctx, x1456, x6, 1);
    let x1458: BytePoly_1 = bigint_nondet_rem!(ctx, x1456, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1457, x6, 2), x1458, 2), x1456, 2),
        8131,
        2,
    )?;
    let x1459: BytePoly_1 = bigint_nondet_rem!(ctx, x1397, x2, 1);
    let x1460: BytePoly_2 = bigint_nondet_quot!(ctx, x1397, x2, 2);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1460, x2, 3), x1459, 3), x1397, 3),
        16259,
        2,
    )?;
    let x1461: BytePoly_1 = bigint_sub!(x3, x1459, 1);
    eqz(ctx, &bigint_mul!(x1459, x1461, 2), 8131, 2)?;
    let x1462: BytePoly_1 = bigint_add!(bigint_sub!(x1452, x1422, 1), x6, 1);
    let x1463: BytePoly_1 = bigint_nondet_inv!(ctx, x1462, x6, 1);
    let x1464: BytePoly_2 = bigint_mul!(x1462, x1463, 2);
    let x1465: BytePoly_3 = bigint_nondet_quot!(ctx, x1464, x6, 3);
    let x1466: BytePoly_1 = bigint_nondet_rem!(ctx, x1464, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1465, x6, 4), x1466, 4), x1464, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x1466, x1, 1), 34, 1)?;
    let x1467: BytePoly_2 = bigint_mul!(bigint_add!(bigint_sub!(x1458, x1424, 1), x6, 1), x1463, 2);
    let x1468: BytePoly_3 = bigint_nondet_quot!(ctx, x1467, x6, 3);
    let x1469: BytePoly_1 = bigint_nondet_rem!(ctx, x1467, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1468, x6, 4), x1469, 4), x1467, 4),
        24387,
        2,
    )?;
    let x1470: BytePoly_2 = bigint_add!(bigint_sub!(x1424, bigint_mul!(x1469, x1422, 2), 2), x6, 2);
    let x1471: BytePoly_2 = bigint_nondet_quot!(ctx, x1470, x6, 2);
    let x1472: BytePoly_1 = bigint_nondet_rem!(ctx, x1470, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1471, x6, 3), x1472, 3), x1470, 3),
        16259,
        2,
    )?;
    let x1473: BytePoly_2 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x1469, x1469, 2), x1422, 2), x6, 2),
            x1452,
            2
        ),
        x6,
        2
    );
    let x1474: BytePoly_3 = bigint_nondet_quot!(ctx, x1473, x6, 3);
    let x1475: BytePoly_1 = bigint_nondet_rem!(ctx, x1473, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1474, x6, 4), x1475, 4), x1473, 4),
        24387,
        2,
    )?;
    let x1476: BytePoly_2 = bigint_mul!(x1469, x1475, 2);
    let x1477: BytePoly_3 = bigint_nondet_quot!(ctx, x1476, x6, 3);
    let x1478: BytePoly_1 = bigint_nondet_rem!(ctx, x1476, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1477, x6, 4), x1478, 4), x1476, 4),
        24387,
        2,
    )?;
    let x1479: BytePoly_1 = bigint_add!(bigint_sub!(x6, bigint_add!(x1478, x1472, 1), 1), x6, 1);
    let x1480: BytePoly_1 = bigint_nondet_quot!(ctx, x1479, x6, 1);
    let x1481: BytePoly_1 = bigint_nondet_rem!(ctx, x1479, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1480, x6, 2), x1481, 2), x1479, 2),
        8131,
        2,
    )?;
    let x1482: BytePoly_2 = bigint_add!(
        bigint_mul!(x1475, x1459, 2),
        bigint_mul!(x1422, x1461, 2),
        2
    );
    let x1483: BytePoly_2 = bigint_add!(
        bigint_mul!(x1481, x1459, 2),
        bigint_mul!(x1424, x1461, 2),
        2
    );
    let x1484: BytePoly_3 = bigint_nondet_quot!(ctx, x1482, x6, 3);
    let x1485: BytePoly_1 = bigint_nondet_rem!(ctx, x1482, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1484, x6, 4), x1485, 4), x1482, 4),
        24387,
        2,
    )?;
    let x1486: BytePoly_3 = bigint_nondet_quot!(ctx, x1483, x6, 3);
    let x1487: BytePoly_1 = bigint_nondet_rem!(ctx, x1483, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1486, x6, 4), x1487, 4), x1483, 4),
        24387,
        2,
    )?;
    let x1488: BytePoly_2 = bigint_mul!(x1452, x1452, 2);
    let x1489: BytePoly_3 = bigint_nondet_quot!(ctx, x1488, x6, 3);
    let x1490: BytePoly_1 = bigint_nondet_rem!(ctx, x1488, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1489, x6, 4), x1490, 4), x1488, 4),
        24387,
        2,
    )?;
    let x1491: BytePoly_2 = bigint_add!(bigint_mul!(x1490, x0, 2), x5, 2);
    let x1492: BytePoly_3 = bigint_nondet_quot!(ctx, x1491, x6, 3);
    let x1493: BytePoly_1 = bigint_nondet_rem!(ctx, x1491, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1492, x6, 4), x1493, 4), x1491, 4),
        24387,
        2,
    )?;
    let x1494: BytePoly_1 = bigint_add!(x1458, x1458, 1);
    let x1495: BytePoly_1 = bigint_nondet_quot!(ctx, x1494, x6, 1);
    let x1496: BytePoly_1 = bigint_nondet_rem!(ctx, x1494, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1495, x6, 2), x1496, 2), x1494, 2),
        8131,
        2,
    )?;
    let x1497: BytePoly_1 = bigint_nondet_inv!(ctx, x1496, x6, 1);
    let x1498: BytePoly_2 = bigint_mul!(x1496, x1497, 2);
    let x1499: BytePoly_3 = bigint_nondet_quot!(ctx, x1498, x6, 3);
    let x1500: BytePoly_1 = bigint_nondet_rem!(ctx, x1498, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1499, x6, 4), x1500, 4), x1498, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x1500, x3, 1), 34, 1)?;
    let x1501: BytePoly_2 = bigint_mul!(x1493, x1497, 2);
    let x1502: BytePoly_3 = bigint_nondet_quot!(ctx, x1501, x6, 3);
    let x1503: BytePoly_1 = bigint_nondet_rem!(ctx, x1501, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1502, x6, 4), x1503, 4), x1501, 4),
        24387,
        2,
    )?;
    let x1504: BytePoly_2 = bigint_mul!(x1503, x1452, 2);
    let x1505: BytePoly_3 = bigint_nondet_quot!(ctx, x1504, x6, 3);
    let x1506: BytePoly_1 = bigint_nondet_rem!(ctx, x1504, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1505, x6, 4), x1506, 4), x1504, 4),
        24387,
        2,
    )?;
    let x1507: BytePoly_1 = bigint_add!(bigint_sub!(x1458, x1506, 1), x6, 1);
    let x1508: BytePoly_1 = bigint_nondet_quot!(ctx, x1507, x6, 1);
    let x1509: BytePoly_1 = bigint_nondet_rem!(ctx, x1507, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1508, x6, 2), x1509, 2), x1507, 2),
        8131,
        2,
    )?;
    let x1510: BytePoly_2 = bigint_mul!(x1503, x1503, 2);
    let x1511: BytePoly_3 = bigint_nondet_quot!(ctx, x1510, x6, 3);
    let x1512: BytePoly_1 = bigint_nondet_rem!(ctx, x1510, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1511, x6, 4), x1512, 4), x1510, 4),
        24387,
        2,
    )?;
    let x1513: BytePoly_1 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1512, x1452, 1), x6, 1), x1452, 1),
        x6,
        1
    );
    let x1514: BytePoly_1 = bigint_nondet_quot!(ctx, x1513, x6, 1);
    let x1515: BytePoly_1 = bigint_nondet_rem!(ctx, x1513, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1514, x6, 2), x1515, 2), x1513, 2),
        8131,
        2,
    )?;
    let x1516: BytePoly_2 = bigint_mul!(x1503, x1515, 2);
    let x1517: BytePoly_3 = bigint_nondet_quot!(ctx, x1516, x6, 3);
    let x1518: BytePoly_1 = bigint_nondet_rem!(ctx, x1516, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1517, x6, 4), x1518, 4), x1516, 4),
        24387,
        2,
    )?;
    let x1519: BytePoly_1 = bigint_add!(bigint_sub!(x6, bigint_add!(x1518, x1509, 1), 1), x6, 1);
    let x1520: BytePoly_1 = bigint_nondet_quot!(ctx, x1519, x6, 1);
    let x1521: BytePoly_1 = bigint_nondet_rem!(ctx, x1519, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1520, x6, 2), x1521, 2), x1519, 2),
        8131,
        2,
    )?;
    let x1522: BytePoly_1 = bigint_nondet_rem!(ctx, x1460, x2, 1);
    let x1523: BytePoly_2 = bigint_nondet_quot!(ctx, x1460, x2, 2);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1523, x2, 3), x1522, 3), x1460, 3),
        16259,
        2,
    )?;
    let x1524: BytePoly_1 = bigint_sub!(x3, x1522, 1);
    eqz(ctx, &bigint_mul!(x1522, x1524, 2), 8131, 2)?;
    let x1525: BytePoly_1 = bigint_add!(bigint_sub!(x1515, x1485, 1), x6, 1);
    let x1526: BytePoly_1 = bigint_nondet_inv!(ctx, x1525, x6, 1);
    let x1527: BytePoly_2 = bigint_mul!(x1525, x1526, 2);
    let x1528: BytePoly_3 = bigint_nondet_quot!(ctx, x1527, x6, 3);
    let x1529: BytePoly_1 = bigint_nondet_rem!(ctx, x1527, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1528, x6, 4), x1529, 4), x1527, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x1529, x1, 1), 34, 1)?;
    let x1530: BytePoly_2 = bigint_mul!(bigint_add!(bigint_sub!(x1521, x1487, 1), x6, 1), x1526, 2);
    let x1531: BytePoly_3 = bigint_nondet_quot!(ctx, x1530, x6, 3);
    let x1532: BytePoly_1 = bigint_nondet_rem!(ctx, x1530, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1531, x6, 4), x1532, 4), x1530, 4),
        24387,
        2,
    )?;
    let x1533: BytePoly_2 = bigint_add!(bigint_sub!(x1487, bigint_mul!(x1532, x1485, 2), 2), x6, 2);
    let x1534: BytePoly_2 = bigint_nondet_quot!(ctx, x1533, x6, 2);
    let x1535: BytePoly_1 = bigint_nondet_rem!(ctx, x1533, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1534, x6, 3), x1535, 3), x1533, 3),
        16259,
        2,
    )?;
    let x1536: BytePoly_2 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x1532, x1532, 2), x1485, 2), x6, 2),
            x1515,
            2
        ),
        x6,
        2
    );
    let x1537: BytePoly_3 = bigint_nondet_quot!(ctx, x1536, x6, 3);
    let x1538: BytePoly_1 = bigint_nondet_rem!(ctx, x1536, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1537, x6, 4), x1538, 4), x1536, 4),
        24387,
        2,
    )?;
    let x1539: BytePoly_2 = bigint_mul!(x1532, x1538, 2);
    let x1540: BytePoly_3 = bigint_nondet_quot!(ctx, x1539, x6, 3);
    let x1541: BytePoly_1 = bigint_nondet_rem!(ctx, x1539, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1540, x6, 4), x1541, 4), x1539, 4),
        24387,
        2,
    )?;
    let x1542: BytePoly_1 = bigint_add!(bigint_sub!(x6, bigint_add!(x1541, x1535, 1), 1), x6, 1);
    let x1543: BytePoly_1 = bigint_nondet_quot!(ctx, x1542, x6, 1);
    let x1544: BytePoly_1 = bigint_nondet_rem!(ctx, x1542, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1543, x6, 2), x1544, 2), x1542, 2),
        8131,
        2,
    )?;
    let x1545: BytePoly_2 = bigint_add!(
        bigint_mul!(x1538, x1522, 2),
        bigint_mul!(x1485, x1524, 2),
        2
    );
    let x1546: BytePoly_2 = bigint_add!(
        bigint_mul!(x1544, x1522, 2),
        bigint_mul!(x1487, x1524, 2),
        2
    );
    let x1547: BytePoly_3 = bigint_nondet_quot!(ctx, x1545, x6, 3);
    let x1548: BytePoly_1 = bigint_nondet_rem!(ctx, x1545, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1547, x6, 4), x1548, 4), x1545, 4),
        24387,
        2,
    )?;
    let x1549: BytePoly_3 = bigint_nondet_quot!(ctx, x1546, x6, 3);
    let x1550: BytePoly_1 = bigint_nondet_rem!(ctx, x1546, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1549, x6, 4), x1550, 4), x1546, 4),
        24387,
        2,
    )?;
    let x1551: BytePoly_2 = bigint_mul!(x1515, x1515, 2);
    let x1552: BytePoly_3 = bigint_nondet_quot!(ctx, x1551, x6, 3);
    let x1553: BytePoly_1 = bigint_nondet_rem!(ctx, x1551, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1552, x6, 4), x1553, 4), x1551, 4),
        24387,
        2,
    )?;
    let x1554: BytePoly_2 = bigint_add!(bigint_mul!(x1553, x0, 2), x5, 2);
    let x1555: BytePoly_3 = bigint_nondet_quot!(ctx, x1554, x6, 3);
    let x1556: BytePoly_1 = bigint_nondet_rem!(ctx, x1554, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1555, x6, 4), x1556, 4), x1554, 4),
        24387,
        2,
    )?;
    let x1557: BytePoly_1 = bigint_add!(x1521, x1521, 1);
    let x1558: BytePoly_1 = bigint_nondet_quot!(ctx, x1557, x6, 1);
    let x1559: BytePoly_1 = bigint_nondet_rem!(ctx, x1557, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1558, x6, 2), x1559, 2), x1557, 2),
        8131,
        2,
    )?;
    let x1560: BytePoly_1 = bigint_nondet_inv!(ctx, x1559, x6, 1);
    let x1561: BytePoly_2 = bigint_mul!(x1559, x1560, 2);
    let x1562: BytePoly_3 = bigint_nondet_quot!(ctx, x1561, x6, 3);
    let x1563: BytePoly_1 = bigint_nondet_rem!(ctx, x1561, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1562, x6, 4), x1563, 4), x1561, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x1563, x3, 1), 34, 1)?;
    let x1564: BytePoly_2 = bigint_mul!(x1556, x1560, 2);
    let x1565: BytePoly_3 = bigint_nondet_quot!(ctx, x1564, x6, 3);
    let x1566: BytePoly_1 = bigint_nondet_rem!(ctx, x1564, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1565, x6, 4), x1566, 4), x1564, 4),
        24387,
        2,
    )?;
    let x1567: BytePoly_2 = bigint_mul!(x1566, x1515, 2);
    let x1568: BytePoly_3 = bigint_nondet_quot!(ctx, x1567, x6, 3);
    let x1569: BytePoly_1 = bigint_nondet_rem!(ctx, x1567, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1568, x6, 4), x1569, 4), x1567, 4),
        24387,
        2,
    )?;
    let x1570: BytePoly_1 = bigint_add!(bigint_sub!(x1521, x1569, 1), x6, 1);
    let x1571: BytePoly_1 = bigint_nondet_quot!(ctx, x1570, x6, 1);
    let x1572: BytePoly_1 = bigint_nondet_rem!(ctx, x1570, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1571, x6, 2), x1572, 2), x1570, 2),
        8131,
        2,
    )?;
    let x1573: BytePoly_2 = bigint_mul!(x1566, x1566, 2);
    let x1574: BytePoly_3 = bigint_nondet_quot!(ctx, x1573, x6, 3);
    let x1575: BytePoly_1 = bigint_nondet_rem!(ctx, x1573, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1574, x6, 4), x1575, 4), x1573, 4),
        24387,
        2,
    )?;
    let x1576: BytePoly_1 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1575, x1515, 1), x6, 1), x1515, 1),
        x6,
        1
    );
    let x1577: BytePoly_1 = bigint_nondet_quot!(ctx, x1576, x6, 1);
    let x1578: BytePoly_1 = bigint_nondet_rem!(ctx, x1576, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1577, x6, 2), x1578, 2), x1576, 2),
        8131,
        2,
    )?;
    let x1579: BytePoly_2 = bigint_mul!(x1566, x1578, 2);
    let x1580: BytePoly_3 = bigint_nondet_quot!(ctx, x1579, x6, 3);
    let x1581: BytePoly_1 = bigint_nondet_rem!(ctx, x1579, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1580, x6, 4), x1581, 4), x1579, 4),
        24387,
        2,
    )?;
    let x1582: BytePoly_1 = bigint_add!(bigint_sub!(x6, bigint_add!(x1581, x1572, 1), 1), x6, 1);
    let x1583: BytePoly_1 = bigint_nondet_quot!(ctx, x1582, x6, 1);
    let x1584: BytePoly_1 = bigint_nondet_rem!(ctx, x1582, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1583, x6, 2), x1584, 2), x1582, 2),
        8131,
        2,
    )?;
    let x1585: BytePoly_1 = bigint_nondet_rem!(ctx, x1523, x2, 1);
    let x1586: BytePoly_2 = bigint_nondet_quot!(ctx, x1523, x2, 2);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1586, x2, 3), x1585, 3), x1523, 3),
        16259,
        2,
    )?;
    let x1587: BytePoly_1 = bigint_sub!(x3, x1585, 1);
    eqz(ctx, &bigint_mul!(x1585, x1587, 2), 8131, 2)?;
    let x1588: BytePoly_1 = bigint_add!(bigint_sub!(x1578, x1548, 1), x6, 1);
    let x1589: BytePoly_1 = bigint_nondet_inv!(ctx, x1588, x6, 1);
    let x1590: BytePoly_2 = bigint_mul!(x1588, x1589, 2);
    let x1591: BytePoly_3 = bigint_nondet_quot!(ctx, x1590, x6, 3);
    let x1592: BytePoly_1 = bigint_nondet_rem!(ctx, x1590, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1591, x6, 4), x1592, 4), x1590, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x1592, x1, 1), 34, 1)?;
    let x1593: BytePoly_2 = bigint_mul!(bigint_add!(bigint_sub!(x1584, x1550, 1), x6, 1), x1589, 2);
    let x1594: BytePoly_3 = bigint_nondet_quot!(ctx, x1593, x6, 3);
    let x1595: BytePoly_1 = bigint_nondet_rem!(ctx, x1593, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1594, x6, 4), x1595, 4), x1593, 4),
        24387,
        2,
    )?;
    let x1596: BytePoly_2 = bigint_add!(bigint_sub!(x1550, bigint_mul!(x1595, x1548, 2), 2), x6, 2);
    let x1597: BytePoly_2 = bigint_nondet_quot!(ctx, x1596, x6, 2);
    let x1598: BytePoly_1 = bigint_nondet_rem!(ctx, x1596, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1597, x6, 3), x1598, 3), x1596, 3),
        16259,
        2,
    )?;
    let x1599: BytePoly_2 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x1595, x1595, 2), x1548, 2), x6, 2),
            x1578,
            2
        ),
        x6,
        2
    );
    let x1600: BytePoly_3 = bigint_nondet_quot!(ctx, x1599, x6, 3);
    let x1601: BytePoly_1 = bigint_nondet_rem!(ctx, x1599, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1600, x6, 4), x1601, 4), x1599, 4),
        24387,
        2,
    )?;
    let x1602: BytePoly_2 = bigint_mul!(x1595, x1601, 2);
    let x1603: BytePoly_3 = bigint_nondet_quot!(ctx, x1602, x6, 3);
    let x1604: BytePoly_1 = bigint_nondet_rem!(ctx, x1602, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1603, x6, 4), x1604, 4), x1602, 4),
        24387,
        2,
    )?;
    let x1605: BytePoly_1 = bigint_add!(bigint_sub!(x6, bigint_add!(x1604, x1598, 1), 1), x6, 1);
    let x1606: BytePoly_1 = bigint_nondet_quot!(ctx, x1605, x6, 1);
    let x1607: BytePoly_1 = bigint_nondet_rem!(ctx, x1605, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1606, x6, 2), x1607, 2), x1605, 2),
        8131,
        2,
    )?;
    let x1608: BytePoly_2 = bigint_add!(
        bigint_mul!(x1601, x1585, 2),
        bigint_mul!(x1548, x1587, 2),
        2
    );
    let x1609: BytePoly_2 = bigint_add!(
        bigint_mul!(x1607, x1585, 2),
        bigint_mul!(x1550, x1587, 2),
        2
    );
    let x1610: BytePoly_3 = bigint_nondet_quot!(ctx, x1608, x6, 3);
    let x1611: BytePoly_1 = bigint_nondet_rem!(ctx, x1608, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1610, x6, 4), x1611, 4), x1608, 4),
        24387,
        2,
    )?;
    let x1612: BytePoly_3 = bigint_nondet_quot!(ctx, x1609, x6, 3);
    let x1613: BytePoly_1 = bigint_nondet_rem!(ctx, x1609, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1612, x6, 4), x1613, 4), x1609, 4),
        24387,
        2,
    )?;
    let x1614: BytePoly_2 = bigint_mul!(x1578, x1578, 2);
    let x1615: BytePoly_3 = bigint_nondet_quot!(ctx, x1614, x6, 3);
    let x1616: BytePoly_1 = bigint_nondet_rem!(ctx, x1614, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1615, x6, 4), x1616, 4), x1614, 4),
        24387,
        2,
    )?;
    let x1617: BytePoly_2 = bigint_add!(bigint_mul!(x1616, x0, 2), x5, 2);
    let x1618: BytePoly_3 = bigint_nondet_quot!(ctx, x1617, x6, 3);
    let x1619: BytePoly_1 = bigint_nondet_rem!(ctx, x1617, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1618, x6, 4), x1619, 4), x1617, 4),
        24387,
        2,
    )?;
    let x1620: BytePoly_1 = bigint_add!(x1584, x1584, 1);
    let x1621: BytePoly_1 = bigint_nondet_quot!(ctx, x1620, x6, 1);
    let x1622: BytePoly_1 = bigint_nondet_rem!(ctx, x1620, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1621, x6, 2), x1622, 2), x1620, 2),
        8131,
        2,
    )?;
    let x1623: BytePoly_1 = bigint_nondet_inv!(ctx, x1622, x6, 1);
    let x1624: BytePoly_2 = bigint_mul!(x1622, x1623, 2);
    let x1625: BytePoly_3 = bigint_nondet_quot!(ctx, x1624, x6, 3);
    let x1626: BytePoly_1 = bigint_nondet_rem!(ctx, x1624, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1625, x6, 4), x1626, 4), x1624, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x1626, x3, 1), 34, 1)?;
    let x1627: BytePoly_2 = bigint_mul!(x1619, x1623, 2);
    let x1628: BytePoly_3 = bigint_nondet_quot!(ctx, x1627, x6, 3);
    let x1629: BytePoly_1 = bigint_nondet_rem!(ctx, x1627, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1628, x6, 4), x1629, 4), x1627, 4),
        24387,
        2,
    )?;
    let x1630: BytePoly_2 = bigint_mul!(x1629, x1578, 2);
    let x1631: BytePoly_3 = bigint_nondet_quot!(ctx, x1630, x6, 3);
    let x1632: BytePoly_1 = bigint_nondet_rem!(ctx, x1630, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1631, x6, 4), x1632, 4), x1630, 4),
        24387,
        2,
    )?;
    let x1633: BytePoly_1 = bigint_add!(bigint_sub!(x1584, x1632, 1), x6, 1);
    let x1634: BytePoly_1 = bigint_nondet_quot!(ctx, x1633, x6, 1);
    let x1635: BytePoly_1 = bigint_nondet_rem!(ctx, x1633, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1634, x6, 2), x1635, 2), x1633, 2),
        8131,
        2,
    )?;
    let x1636: BytePoly_2 = bigint_mul!(x1629, x1629, 2);
    let x1637: BytePoly_3 = bigint_nondet_quot!(ctx, x1636, x6, 3);
    let x1638: BytePoly_1 = bigint_nondet_rem!(ctx, x1636, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1637, x6, 4), x1638, 4), x1636, 4),
        24387,
        2,
    )?;
    let x1639: BytePoly_1 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1638, x1578, 1), x6, 1), x1578, 1),
        x6,
        1
    );
    let x1640: BytePoly_1 = bigint_nondet_quot!(ctx, x1639, x6, 1);
    let x1641: BytePoly_1 = bigint_nondet_rem!(ctx, x1639, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1640, x6, 2), x1641, 2), x1639, 2),
        8131,
        2,
    )?;
    let x1642: BytePoly_2 = bigint_mul!(x1629, x1641, 2);
    let x1643: BytePoly_3 = bigint_nondet_quot!(ctx, x1642, x6, 3);
    let x1644: BytePoly_1 = bigint_nondet_rem!(ctx, x1642, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1643, x6, 4), x1644, 4), x1642, 4),
        24387,
        2,
    )?;
    let x1645: BytePoly_1 = bigint_add!(bigint_sub!(x6, bigint_add!(x1644, x1635, 1), 1), x6, 1);
    let x1646: BytePoly_1 = bigint_nondet_quot!(ctx, x1645, x6, 1);
    let x1647: BytePoly_1 = bigint_nondet_rem!(ctx, x1645, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1646, x6, 2), x1647, 2), x1645, 2),
        8131,
        2,
    )?;
    let x1648: BytePoly_1 = bigint_nondet_rem!(ctx, x1586, x2, 1);
    let x1649: BytePoly_2 = bigint_nondet_quot!(ctx, x1586, x2, 2);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1649, x2, 3), x1648, 3), x1586, 3),
        16259,
        2,
    )?;
    let x1650: BytePoly_1 = bigint_sub!(x3, x1648, 1);
    eqz(ctx, &bigint_mul!(x1648, x1650, 2), 8131, 2)?;
    let x1651: BytePoly_1 = bigint_add!(bigint_sub!(x1641, x1611, 1), x6, 1);
    let x1652: BytePoly_1 = bigint_nondet_inv!(ctx, x1651, x6, 1);
    let x1653: BytePoly_2 = bigint_mul!(x1651, x1652, 2);
    let x1654: BytePoly_3 = bigint_nondet_quot!(ctx, x1653, x6, 3);
    let x1655: BytePoly_1 = bigint_nondet_rem!(ctx, x1653, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1654, x6, 4), x1655, 4), x1653, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x1655, x1, 1), 34, 1)?;
    let x1656: BytePoly_2 = bigint_mul!(bigint_add!(bigint_sub!(x1647, x1613, 1), x6, 1), x1652, 2);
    let x1657: BytePoly_3 = bigint_nondet_quot!(ctx, x1656, x6, 3);
    let x1658: BytePoly_1 = bigint_nondet_rem!(ctx, x1656, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1657, x6, 4), x1658, 4), x1656, 4),
        24387,
        2,
    )?;
    let x1659: BytePoly_2 = bigint_add!(bigint_sub!(x1613, bigint_mul!(x1658, x1611, 2), 2), x6, 2);
    let x1660: BytePoly_2 = bigint_nondet_quot!(ctx, x1659, x6, 2);
    let x1661: BytePoly_1 = bigint_nondet_rem!(ctx, x1659, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1660, x6, 3), x1661, 3), x1659, 3),
        16259,
        2,
    )?;
    let x1662: BytePoly_2 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x1658, x1658, 2), x1611, 2), x6, 2),
            x1641,
            2
        ),
        x6,
        2
    );
    let x1663: BytePoly_3 = bigint_nondet_quot!(ctx, x1662, x6, 3);
    let x1664: BytePoly_1 = bigint_nondet_rem!(ctx, x1662, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1663, x6, 4), x1664, 4), x1662, 4),
        24387,
        2,
    )?;
    let x1665: BytePoly_2 = bigint_mul!(x1658, x1664, 2);
    let x1666: BytePoly_3 = bigint_nondet_quot!(ctx, x1665, x6, 3);
    let x1667: BytePoly_1 = bigint_nondet_rem!(ctx, x1665, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1666, x6, 4), x1667, 4), x1665, 4),
        24387,
        2,
    )?;
    let x1668: BytePoly_1 = bigint_add!(bigint_sub!(x6, bigint_add!(x1667, x1661, 1), 1), x6, 1);
    let x1669: BytePoly_1 = bigint_nondet_quot!(ctx, x1668, x6, 1);
    let x1670: BytePoly_1 = bigint_nondet_rem!(ctx, x1668, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1669, x6, 2), x1670, 2), x1668, 2),
        8131,
        2,
    )?;
    let x1671: BytePoly_2 = bigint_add!(
        bigint_mul!(x1664, x1648, 2),
        bigint_mul!(x1611, x1650, 2),
        2
    );
    let x1672: BytePoly_2 = bigint_add!(
        bigint_mul!(x1670, x1648, 2),
        bigint_mul!(x1613, x1650, 2),
        2
    );
    let x1673: BytePoly_3 = bigint_nondet_quot!(ctx, x1671, x6, 3);
    let x1674: BytePoly_1 = bigint_nondet_rem!(ctx, x1671, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1673, x6, 4), x1674, 4), x1671, 4),
        24387,
        2,
    )?;
    let x1675: BytePoly_3 = bigint_nondet_quot!(ctx, x1672, x6, 3);
    let x1676: BytePoly_1 = bigint_nondet_rem!(ctx, x1672, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1675, x6, 4), x1676, 4), x1672, 4),
        24387,
        2,
    )?;
    let x1677: BytePoly_2 = bigint_mul!(x1641, x1641, 2);
    let x1678: BytePoly_3 = bigint_nondet_quot!(ctx, x1677, x6, 3);
    let x1679: BytePoly_1 = bigint_nondet_rem!(ctx, x1677, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1678, x6, 4), x1679, 4), x1677, 4),
        24387,
        2,
    )?;
    let x1680: BytePoly_2 = bigint_add!(bigint_mul!(x1679, x0, 2), x5, 2);
    let x1681: BytePoly_3 = bigint_nondet_quot!(ctx, x1680, x6, 3);
    let x1682: BytePoly_1 = bigint_nondet_rem!(ctx, x1680, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1681, x6, 4), x1682, 4), x1680, 4),
        24387,
        2,
    )?;
    let x1683: BytePoly_1 = bigint_add!(x1647, x1647, 1);
    let x1684: BytePoly_1 = bigint_nondet_quot!(ctx, x1683, x6, 1);
    let x1685: BytePoly_1 = bigint_nondet_rem!(ctx, x1683, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1684, x6, 2), x1685, 2), x1683, 2),
        8131,
        2,
    )?;
    let x1686: BytePoly_1 = bigint_nondet_inv!(ctx, x1685, x6, 1);
    let x1687: BytePoly_2 = bigint_mul!(x1685, x1686, 2);
    let x1688: BytePoly_3 = bigint_nondet_quot!(ctx, x1687, x6, 3);
    let x1689: BytePoly_1 = bigint_nondet_rem!(ctx, x1687, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1688, x6, 4), x1689, 4), x1687, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x1689, x3, 1), 34, 1)?;
    let x1690: BytePoly_2 = bigint_mul!(x1682, x1686, 2);
    let x1691: BytePoly_3 = bigint_nondet_quot!(ctx, x1690, x6, 3);
    let x1692: BytePoly_1 = bigint_nondet_rem!(ctx, x1690, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1691, x6, 4), x1692, 4), x1690, 4),
        24387,
        2,
    )?;
    let x1693: BytePoly_2 = bigint_mul!(x1692, x1641, 2);
    let x1694: BytePoly_3 = bigint_nondet_quot!(ctx, x1693, x6, 3);
    let x1695: BytePoly_1 = bigint_nondet_rem!(ctx, x1693, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1694, x6, 4), x1695, 4), x1693, 4),
        24387,
        2,
    )?;
    let x1696: BytePoly_1 = bigint_add!(bigint_sub!(x1647, x1695, 1), x6, 1);
    let x1697: BytePoly_1 = bigint_nondet_quot!(ctx, x1696, x6, 1);
    let x1698: BytePoly_1 = bigint_nondet_rem!(ctx, x1696, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1697, x6, 2), x1698, 2), x1696, 2),
        8131,
        2,
    )?;
    let x1699: BytePoly_2 = bigint_mul!(x1692, x1692, 2);
    let x1700: BytePoly_3 = bigint_nondet_quot!(ctx, x1699, x6, 3);
    let x1701: BytePoly_1 = bigint_nondet_rem!(ctx, x1699, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1700, x6, 4), x1701, 4), x1699, 4),
        24387,
        2,
    )?;
    let x1702: BytePoly_1 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1701, x1641, 1), x6, 1), x1641, 1),
        x6,
        1
    );
    let x1703: BytePoly_1 = bigint_nondet_quot!(ctx, x1702, x6, 1);
    let x1704: BytePoly_1 = bigint_nondet_rem!(ctx, x1702, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1703, x6, 2), x1704, 2), x1702, 2),
        8131,
        2,
    )?;
    let x1705: BytePoly_2 = bigint_mul!(x1692, x1704, 2);
    let x1706: BytePoly_3 = bigint_nondet_quot!(ctx, x1705, x6, 3);
    let x1707: BytePoly_1 = bigint_nondet_rem!(ctx, x1705, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1706, x6, 4), x1707, 4), x1705, 4),
        24387,
        2,
    )?;
    let x1708: BytePoly_1 = bigint_add!(bigint_sub!(x6, bigint_add!(x1707, x1698, 1), 1), x6, 1);
    let x1709: BytePoly_1 = bigint_nondet_quot!(ctx, x1708, x6, 1);
    let x1710: BytePoly_1 = bigint_nondet_rem!(ctx, x1708, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1709, x6, 2), x1710, 2), x1708, 2),
        8131,
        2,
    )?;
    let x1711: BytePoly_1 = bigint_nondet_rem!(ctx, x1649, x2, 1);
    let x1712: BytePoly_2 = bigint_nondet_quot!(ctx, x1649, x2, 2);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1712, x2, 3), x1711, 3), x1649, 3),
        16259,
        2,
    )?;
    let x1713: BytePoly_1 = bigint_sub!(x3, x1711, 1);
    eqz(ctx, &bigint_mul!(x1711, x1713, 2), 8131, 2)?;
    let x1714: BytePoly_1 = bigint_add!(bigint_sub!(x1704, x1674, 1), x6, 1);
    let x1715: BytePoly_1 = bigint_nondet_inv!(ctx, x1714, x6, 1);
    let x1716: BytePoly_2 = bigint_mul!(x1714, x1715, 2);
    let x1717: BytePoly_3 = bigint_nondet_quot!(ctx, x1716, x6, 3);
    let x1718: BytePoly_1 = bigint_nondet_rem!(ctx, x1716, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1717, x6, 4), x1718, 4), x1716, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x1718, x1, 1), 34, 1)?;
    let x1719: BytePoly_2 = bigint_mul!(bigint_add!(bigint_sub!(x1710, x1676, 1), x6, 1), x1715, 2);
    let x1720: BytePoly_3 = bigint_nondet_quot!(ctx, x1719, x6, 3);
    let x1721: BytePoly_1 = bigint_nondet_rem!(ctx, x1719, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1720, x6, 4), x1721, 4), x1719, 4),
        24387,
        2,
    )?;
    let x1722: BytePoly_2 = bigint_add!(bigint_sub!(x1676, bigint_mul!(x1721, x1674, 2), 2), x6, 2);
    let x1723: BytePoly_2 = bigint_nondet_quot!(ctx, x1722, x6, 2);
    let x1724: BytePoly_1 = bigint_nondet_rem!(ctx, x1722, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1723, x6, 3), x1724, 3), x1722, 3),
        16259,
        2,
    )?;
    let x1725: BytePoly_2 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x1721, x1721, 2), x1674, 2), x6, 2),
            x1704,
            2
        ),
        x6,
        2
    );
    let x1726: BytePoly_3 = bigint_nondet_quot!(ctx, x1725, x6, 3);
    let x1727: BytePoly_1 = bigint_nondet_rem!(ctx, x1725, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1726, x6, 4), x1727, 4), x1725, 4),
        24387,
        2,
    )?;
    let x1728: BytePoly_2 = bigint_mul!(x1721, x1727, 2);
    let x1729: BytePoly_3 = bigint_nondet_quot!(ctx, x1728, x6, 3);
    let x1730: BytePoly_1 = bigint_nondet_rem!(ctx, x1728, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1729, x6, 4), x1730, 4), x1728, 4),
        24387,
        2,
    )?;
    let x1731: BytePoly_1 = bigint_add!(bigint_sub!(x6, bigint_add!(x1730, x1724, 1), 1), x6, 1);
    let x1732: BytePoly_1 = bigint_nondet_quot!(ctx, x1731, x6, 1);
    let x1733: BytePoly_1 = bigint_nondet_rem!(ctx, x1731, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1732, x6, 2), x1733, 2), x1731, 2),
        8131,
        2,
    )?;
    let x1734: BytePoly_2 = bigint_add!(
        bigint_mul!(x1727, x1711, 2),
        bigint_mul!(x1674, x1713, 2),
        2
    );
    let x1735: BytePoly_2 = bigint_add!(
        bigint_mul!(x1733, x1711, 2),
        bigint_mul!(x1676, x1713, 2),
        2
    );
    let x1736: BytePoly_3 = bigint_nondet_quot!(ctx, x1734, x6, 3);
    let x1737: BytePoly_1 = bigint_nondet_rem!(ctx, x1734, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1736, x6, 4), x1737, 4), x1734, 4),
        24387,
        2,
    )?;
    let x1738: BytePoly_3 = bigint_nondet_quot!(ctx, x1735, x6, 3);
    let x1739: BytePoly_1 = bigint_nondet_rem!(ctx, x1735, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1738, x6, 4), x1739, 4), x1735, 4),
        24387,
        2,
    )?;
    let x1740: BytePoly_2 = bigint_mul!(x1704, x1704, 2);
    let x1741: BytePoly_3 = bigint_nondet_quot!(ctx, x1740, x6, 3);
    let x1742: BytePoly_1 = bigint_nondet_rem!(ctx, x1740, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1741, x6, 4), x1742, 4), x1740, 4),
        24387,
        2,
    )?;
    let x1743: BytePoly_2 = bigint_add!(bigint_mul!(x1742, x0, 2), x5, 2);
    let x1744: BytePoly_3 = bigint_nondet_quot!(ctx, x1743, x6, 3);
    let x1745: BytePoly_1 = bigint_nondet_rem!(ctx, x1743, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1744, x6, 4), x1745, 4), x1743, 4),
        24387,
        2,
    )?;
    let x1746: BytePoly_1 = bigint_add!(x1710, x1710, 1);
    let x1747: BytePoly_1 = bigint_nondet_quot!(ctx, x1746, x6, 1);
    let x1748: BytePoly_1 = bigint_nondet_rem!(ctx, x1746, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1747, x6, 2), x1748, 2), x1746, 2),
        8131,
        2,
    )?;
    let x1749: BytePoly_1 = bigint_nondet_inv!(ctx, x1748, x6, 1);
    let x1750: BytePoly_2 = bigint_mul!(x1748, x1749, 2);
    let x1751: BytePoly_3 = bigint_nondet_quot!(ctx, x1750, x6, 3);
    let x1752: BytePoly_1 = bigint_nondet_rem!(ctx, x1750, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1751, x6, 4), x1752, 4), x1750, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x1752, x3, 1), 34, 1)?;
    let x1753: BytePoly_2 = bigint_mul!(x1745, x1749, 2);
    let x1754: BytePoly_3 = bigint_nondet_quot!(ctx, x1753, x6, 3);
    let x1755: BytePoly_1 = bigint_nondet_rem!(ctx, x1753, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1754, x6, 4), x1755, 4), x1753, 4),
        24387,
        2,
    )?;
    let x1756: BytePoly_2 = bigint_mul!(x1755, x1704, 2);
    let x1757: BytePoly_3 = bigint_nondet_quot!(ctx, x1756, x6, 3);
    let x1758: BytePoly_1 = bigint_nondet_rem!(ctx, x1756, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1757, x6, 4), x1758, 4), x1756, 4),
        24387,
        2,
    )?;
    let x1759: BytePoly_1 = bigint_add!(bigint_sub!(x1710, x1758, 1), x6, 1);
    let x1760: BytePoly_1 = bigint_nondet_quot!(ctx, x1759, x6, 1);
    let x1761: BytePoly_1 = bigint_nondet_rem!(ctx, x1759, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1760, x6, 2), x1761, 2), x1759, 2),
        8131,
        2,
    )?;
    let x1762: BytePoly_2 = bigint_mul!(x1755, x1755, 2);
    let x1763: BytePoly_3 = bigint_nondet_quot!(ctx, x1762, x6, 3);
    let x1764: BytePoly_1 = bigint_nondet_rem!(ctx, x1762, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1763, x6, 4), x1764, 4), x1762, 4),
        24387,
        2,
    )?;
    let x1765: BytePoly_1 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1764, x1704, 1), x6, 1), x1704, 1),
        x6,
        1
    );
    let x1766: BytePoly_1 = bigint_nondet_quot!(ctx, x1765, x6, 1);
    let x1767: BytePoly_1 = bigint_nondet_rem!(ctx, x1765, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1766, x6, 2), x1767, 2), x1765, 2),
        8131,
        2,
    )?;
    let x1768: BytePoly_2 = bigint_mul!(x1755, x1767, 2);
    let x1769: BytePoly_3 = bigint_nondet_quot!(ctx, x1768, x6, 3);
    let x1770: BytePoly_1 = bigint_nondet_rem!(ctx, x1768, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1769, x6, 4), x1770, 4), x1768, 4),
        24387,
        2,
    )?;
    let x1771: BytePoly_1 = bigint_add!(bigint_sub!(x6, bigint_add!(x1770, x1761, 1), 1), x6, 1);
    let x1772: BytePoly_1 = bigint_nondet_quot!(ctx, x1771, x6, 1);
    let x1773: BytePoly_1 = bigint_nondet_rem!(ctx, x1771, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1772, x6, 2), x1773, 2), x1771, 2),
        8131,
        2,
    )?;
    let x1774: BytePoly_1 = bigint_nondet_rem!(ctx, x1712, x2, 1);
    let x1775: BytePoly_2 = bigint_nondet_quot!(ctx, x1712, x2, 2);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1775, x2, 3), x1774, 3), x1712, 3),
        16259,
        2,
    )?;
    let x1776: BytePoly_1 = bigint_sub!(x3, x1774, 1);
    eqz(ctx, &bigint_mul!(x1774, x1776, 2), 8131, 2)?;
    let x1777: BytePoly_1 = bigint_add!(bigint_sub!(x1767, x1737, 1), x6, 1);
    let x1778: BytePoly_1 = bigint_nondet_inv!(ctx, x1777, x6, 1);
    let x1779: BytePoly_2 = bigint_mul!(x1777, x1778, 2);
    let x1780: BytePoly_3 = bigint_nondet_quot!(ctx, x1779, x6, 3);
    let x1781: BytePoly_1 = bigint_nondet_rem!(ctx, x1779, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1780, x6, 4), x1781, 4), x1779, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x1781, x1, 1), 34, 1)?;
    let x1782: BytePoly_2 = bigint_mul!(bigint_add!(bigint_sub!(x1773, x1739, 1), x6, 1), x1778, 2);
    let x1783: BytePoly_3 = bigint_nondet_quot!(ctx, x1782, x6, 3);
    let x1784: BytePoly_1 = bigint_nondet_rem!(ctx, x1782, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1783, x6, 4), x1784, 4), x1782, 4),
        24387,
        2,
    )?;
    let x1785: BytePoly_2 = bigint_add!(bigint_sub!(x1739, bigint_mul!(x1784, x1737, 2), 2), x6, 2);
    let x1786: BytePoly_2 = bigint_nondet_quot!(ctx, x1785, x6, 2);
    let x1787: BytePoly_1 = bigint_nondet_rem!(ctx, x1785, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1786, x6, 3), x1787, 3), x1785, 3),
        16259,
        2,
    )?;
    let x1788: BytePoly_2 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x1784, x1784, 2), x1737, 2), x6, 2),
            x1767,
            2
        ),
        x6,
        2
    );
    let x1789: BytePoly_3 = bigint_nondet_quot!(ctx, x1788, x6, 3);
    let x1790: BytePoly_1 = bigint_nondet_rem!(ctx, x1788, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1789, x6, 4), x1790, 4), x1788, 4),
        24387,
        2,
    )?;
    let x1791: BytePoly_2 = bigint_mul!(x1784, x1790, 2);
    let x1792: BytePoly_3 = bigint_nondet_quot!(ctx, x1791, x6, 3);
    let x1793: BytePoly_1 = bigint_nondet_rem!(ctx, x1791, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1792, x6, 4), x1793, 4), x1791, 4),
        24387,
        2,
    )?;
    let x1794: BytePoly_1 = bigint_add!(bigint_sub!(x6, bigint_add!(x1793, x1787, 1), 1), x6, 1);
    let x1795: BytePoly_1 = bigint_nondet_quot!(ctx, x1794, x6, 1);
    let x1796: BytePoly_1 = bigint_nondet_rem!(ctx, x1794, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1795, x6, 2), x1796, 2), x1794, 2),
        8131,
        2,
    )?;
    let x1797: BytePoly_2 = bigint_add!(
        bigint_mul!(x1790, x1774, 2),
        bigint_mul!(x1737, x1776, 2),
        2
    );
    let x1798: BytePoly_2 = bigint_add!(
        bigint_mul!(x1796, x1774, 2),
        bigint_mul!(x1739, x1776, 2),
        2
    );
    let x1799: BytePoly_3 = bigint_nondet_quot!(ctx, x1797, x6, 3);
    let x1800: BytePoly_1 = bigint_nondet_rem!(ctx, x1797, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1799, x6, 4), x1800, 4), x1797, 4),
        24387,
        2,
    )?;
    let x1801: BytePoly_3 = bigint_nondet_quot!(ctx, x1798, x6, 3);
    let x1802: BytePoly_1 = bigint_nondet_rem!(ctx, x1798, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1801, x6, 4), x1802, 4), x1798, 4),
        24387,
        2,
    )?;
    let x1803: BytePoly_2 = bigint_mul!(x1767, x1767, 2);
    let x1804: BytePoly_3 = bigint_nondet_quot!(ctx, x1803, x6, 3);
    let x1805: BytePoly_1 = bigint_nondet_rem!(ctx, x1803, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1804, x6, 4), x1805, 4), x1803, 4),
        24387,
        2,
    )?;
    let x1806: BytePoly_2 = bigint_add!(bigint_mul!(x1805, x0, 2), x5, 2);
    let x1807: BytePoly_3 = bigint_nondet_quot!(ctx, x1806, x6, 3);
    let x1808: BytePoly_1 = bigint_nondet_rem!(ctx, x1806, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1807, x6, 4), x1808, 4), x1806, 4),
        24387,
        2,
    )?;
    let x1809: BytePoly_1 = bigint_add!(x1773, x1773, 1);
    let x1810: BytePoly_1 = bigint_nondet_quot!(ctx, x1809, x6, 1);
    let x1811: BytePoly_1 = bigint_nondet_rem!(ctx, x1809, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1810, x6, 2), x1811, 2), x1809, 2),
        8131,
        2,
    )?;
    let x1812: BytePoly_1 = bigint_nondet_inv!(ctx, x1811, x6, 1);
    let x1813: BytePoly_2 = bigint_mul!(x1811, x1812, 2);
    let x1814: BytePoly_3 = bigint_nondet_quot!(ctx, x1813, x6, 3);
    let x1815: BytePoly_1 = bigint_nondet_rem!(ctx, x1813, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1814, x6, 4), x1815, 4), x1813, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x1815, x3, 1), 34, 1)?;
    let x1816: BytePoly_2 = bigint_mul!(x1808, x1812, 2);
    let x1817: BytePoly_3 = bigint_nondet_quot!(ctx, x1816, x6, 3);
    let x1818: BytePoly_1 = bigint_nondet_rem!(ctx, x1816, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1817, x6, 4), x1818, 4), x1816, 4),
        24387,
        2,
    )?;
    let x1819: BytePoly_2 = bigint_mul!(x1818, x1767, 2);
    let x1820: BytePoly_3 = bigint_nondet_quot!(ctx, x1819, x6, 3);
    let x1821: BytePoly_1 = bigint_nondet_rem!(ctx, x1819, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1820, x6, 4), x1821, 4), x1819, 4),
        24387,
        2,
    )?;
    let x1822: BytePoly_1 = bigint_add!(bigint_sub!(x1773, x1821, 1), x6, 1);
    let x1823: BytePoly_1 = bigint_nondet_quot!(ctx, x1822, x6, 1);
    let x1824: BytePoly_1 = bigint_nondet_rem!(ctx, x1822, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1823, x6, 2), x1824, 2), x1822, 2),
        8131,
        2,
    )?;
    let x1825: BytePoly_2 = bigint_mul!(x1818, x1818, 2);
    let x1826: BytePoly_3 = bigint_nondet_quot!(ctx, x1825, x6, 3);
    let x1827: BytePoly_1 = bigint_nondet_rem!(ctx, x1825, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1826, x6, 4), x1827, 4), x1825, 4),
        24387,
        2,
    )?;
    let x1828: BytePoly_1 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1827, x1767, 1), x6, 1), x1767, 1),
        x6,
        1
    );
    let x1829: BytePoly_1 = bigint_nondet_quot!(ctx, x1828, x6, 1);
    let x1830: BytePoly_1 = bigint_nondet_rem!(ctx, x1828, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1829, x6, 2), x1830, 2), x1828, 2),
        8131,
        2,
    )?;
    let x1831: BytePoly_2 = bigint_mul!(x1818, x1830, 2);
    let x1832: BytePoly_3 = bigint_nondet_quot!(ctx, x1831, x6, 3);
    let x1833: BytePoly_1 = bigint_nondet_rem!(ctx, x1831, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1832, x6, 4), x1833, 4), x1831, 4),
        24387,
        2,
    )?;
    let x1834: BytePoly_1 = bigint_add!(bigint_sub!(x6, bigint_add!(x1833, x1824, 1), 1), x6, 1);
    let x1835: BytePoly_1 = bigint_nondet_quot!(ctx, x1834, x6, 1);
    let x1836: BytePoly_1 = bigint_nondet_rem!(ctx, x1834, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1835, x6, 2), x1836, 2), x1834, 2),
        8131,
        2,
    )?;
    let x1837: BytePoly_1 = bigint_nondet_rem!(ctx, x1775, x2, 1);
    let x1838: BytePoly_2 = bigint_nondet_quot!(ctx, x1775, x2, 2);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1838, x2, 3), x1837, 3), x1775, 3),
        16259,
        2,
    )?;
    let x1839: BytePoly_1 = bigint_sub!(x3, x1837, 1);
    eqz(ctx, &bigint_mul!(x1837, x1839, 2), 8131, 2)?;
    let x1840: BytePoly_1 = bigint_add!(bigint_sub!(x1830, x1800, 1), x6, 1);
    let x1841: BytePoly_1 = bigint_nondet_inv!(ctx, x1840, x6, 1);
    let x1842: BytePoly_2 = bigint_mul!(x1840, x1841, 2);
    let x1843: BytePoly_3 = bigint_nondet_quot!(ctx, x1842, x6, 3);
    let x1844: BytePoly_1 = bigint_nondet_rem!(ctx, x1842, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1843, x6, 4), x1844, 4), x1842, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x1844, x1, 1), 34, 1)?;
    let x1845: BytePoly_2 = bigint_mul!(bigint_add!(bigint_sub!(x1836, x1802, 1), x6, 1), x1841, 2);
    let x1846: BytePoly_3 = bigint_nondet_quot!(ctx, x1845, x6, 3);
    let x1847: BytePoly_1 = bigint_nondet_rem!(ctx, x1845, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1846, x6, 4), x1847, 4), x1845, 4),
        24387,
        2,
    )?;
    let x1848: BytePoly_2 = bigint_add!(bigint_sub!(x1802, bigint_mul!(x1847, x1800, 2), 2), x6, 2);
    let x1849: BytePoly_2 = bigint_nondet_quot!(ctx, x1848, x6, 2);
    let x1850: BytePoly_1 = bigint_nondet_rem!(ctx, x1848, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1849, x6, 3), x1850, 3), x1848, 3),
        16259,
        2,
    )?;
    let x1851: BytePoly_2 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x1847, x1847, 2), x1800, 2), x6, 2),
            x1830,
            2
        ),
        x6,
        2
    );
    let x1852: BytePoly_3 = bigint_nondet_quot!(ctx, x1851, x6, 3);
    let x1853: BytePoly_1 = bigint_nondet_rem!(ctx, x1851, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1852, x6, 4), x1853, 4), x1851, 4),
        24387,
        2,
    )?;
    let x1854: BytePoly_2 = bigint_mul!(x1847, x1853, 2);
    let x1855: BytePoly_3 = bigint_nondet_quot!(ctx, x1854, x6, 3);
    let x1856: BytePoly_1 = bigint_nondet_rem!(ctx, x1854, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1855, x6, 4), x1856, 4), x1854, 4),
        24387,
        2,
    )?;
    let x1857: BytePoly_1 = bigint_add!(bigint_sub!(x6, bigint_add!(x1856, x1850, 1), 1), x6, 1);
    let x1858: BytePoly_1 = bigint_nondet_quot!(ctx, x1857, x6, 1);
    let x1859: BytePoly_1 = bigint_nondet_rem!(ctx, x1857, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1858, x6, 2), x1859, 2), x1857, 2),
        8131,
        2,
    )?;
    let x1860: BytePoly_2 = bigint_add!(
        bigint_mul!(x1853, x1837, 2),
        bigint_mul!(x1800, x1839, 2),
        2
    );
    let x1861: BytePoly_2 = bigint_add!(
        bigint_mul!(x1859, x1837, 2),
        bigint_mul!(x1802, x1839, 2),
        2
    );
    let x1862: BytePoly_3 = bigint_nondet_quot!(ctx, x1860, x6, 3);
    let x1863: BytePoly_1 = bigint_nondet_rem!(ctx, x1860, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1862, x6, 4), x1863, 4), x1860, 4),
        24387,
        2,
    )?;
    let x1864: BytePoly_3 = bigint_nondet_quot!(ctx, x1861, x6, 3);
    let x1865: BytePoly_1 = bigint_nondet_rem!(ctx, x1861, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1864, x6, 4), x1865, 4), x1861, 4),
        24387,
        2,
    )?;
    let x1866: BytePoly_2 = bigint_mul!(x1830, x1830, 2);
    let x1867: BytePoly_3 = bigint_nondet_quot!(ctx, x1866, x6, 3);
    let x1868: BytePoly_1 = bigint_nondet_rem!(ctx, x1866, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1867, x6, 4), x1868, 4), x1866, 4),
        24387,
        2,
    )?;
    let x1869: BytePoly_2 = bigint_add!(bigint_mul!(x1868, x0, 2), x5, 2);
    let x1870: BytePoly_3 = bigint_nondet_quot!(ctx, x1869, x6, 3);
    let x1871: BytePoly_1 = bigint_nondet_rem!(ctx, x1869, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1870, x6, 4), x1871, 4), x1869, 4),
        24387,
        2,
    )?;
    let x1872: BytePoly_1 = bigint_add!(x1836, x1836, 1);
    let x1873: BytePoly_1 = bigint_nondet_quot!(ctx, x1872, x6, 1);
    let x1874: BytePoly_1 = bigint_nondet_rem!(ctx, x1872, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1873, x6, 2), x1874, 2), x1872, 2),
        8131,
        2,
    )?;
    let x1875: BytePoly_1 = bigint_nondet_inv!(ctx, x1874, x6, 1);
    let x1876: BytePoly_2 = bigint_mul!(x1874, x1875, 2);
    let x1877: BytePoly_3 = bigint_nondet_quot!(ctx, x1876, x6, 3);
    let x1878: BytePoly_1 = bigint_nondet_rem!(ctx, x1876, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1877, x6, 4), x1878, 4), x1876, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x1878, x3, 1), 34, 1)?;
    let x1879: BytePoly_2 = bigint_mul!(x1871, x1875, 2);
    let x1880: BytePoly_3 = bigint_nondet_quot!(ctx, x1879, x6, 3);
    let x1881: BytePoly_1 = bigint_nondet_rem!(ctx, x1879, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1880, x6, 4), x1881, 4), x1879, 4),
        24387,
        2,
    )?;
    let x1882: BytePoly_2 = bigint_mul!(x1881, x1830, 2);
    let x1883: BytePoly_3 = bigint_nondet_quot!(ctx, x1882, x6, 3);
    let x1884: BytePoly_1 = bigint_nondet_rem!(ctx, x1882, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1883, x6, 4), x1884, 4), x1882, 4),
        24387,
        2,
    )?;
    let x1885: BytePoly_1 = bigint_add!(bigint_sub!(x1836, x1884, 1), x6, 1);
    let x1886: BytePoly_1 = bigint_nondet_quot!(ctx, x1885, x6, 1);
    let x1887: BytePoly_1 = bigint_nondet_rem!(ctx, x1885, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1886, x6, 2), x1887, 2), x1885, 2),
        8131,
        2,
    )?;
    let x1888: BytePoly_2 = bigint_mul!(x1881, x1881, 2);
    let x1889: BytePoly_3 = bigint_nondet_quot!(ctx, x1888, x6, 3);
    let x1890: BytePoly_1 = bigint_nondet_rem!(ctx, x1888, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1889, x6, 4), x1890, 4), x1888, 4),
        24387,
        2,
    )?;
    let x1891: BytePoly_1 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1890, x1830, 1), x6, 1), x1830, 1),
        x6,
        1
    );
    let x1892: BytePoly_1 = bigint_nondet_quot!(ctx, x1891, x6, 1);
    let x1893: BytePoly_1 = bigint_nondet_rem!(ctx, x1891, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1892, x6, 2), x1893, 2), x1891, 2),
        8131,
        2,
    )?;
    let x1894: BytePoly_2 = bigint_mul!(x1881, x1893, 2);
    let x1895: BytePoly_3 = bigint_nondet_quot!(ctx, x1894, x6, 3);
    let x1896: BytePoly_1 = bigint_nondet_rem!(ctx, x1894, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1895, x6, 4), x1896, 4), x1894, 4),
        24387,
        2,
    )?;
    let x1897: BytePoly_1 = bigint_add!(bigint_sub!(x6, bigint_add!(x1896, x1887, 1), 1), x6, 1);
    let x1898: BytePoly_1 = bigint_nondet_quot!(ctx, x1897, x6, 1);
    let x1899: BytePoly_1 = bigint_nondet_rem!(ctx, x1897, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1898, x6, 2), x1899, 2), x1897, 2),
        8131,
        2,
    )?;
    let x1900: BytePoly_1 = bigint_nondet_rem!(ctx, x1838, x2, 1);
    let x1901: BytePoly_2 = bigint_nondet_quot!(ctx, x1838, x2, 2);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1901, x2, 3), x1900, 3), x1838, 3),
        16259,
        2,
    )?;
    let x1902: BytePoly_1 = bigint_sub!(x3, x1900, 1);
    eqz(ctx, &bigint_mul!(x1900, x1902, 2), 8131, 2)?;
    let x1903: BytePoly_1 = bigint_add!(bigint_sub!(x1893, x1863, 1), x6, 1);
    let x1904: BytePoly_1 = bigint_nondet_inv!(ctx, x1903, x6, 1);
    let x1905: BytePoly_2 = bigint_mul!(x1903, x1904, 2);
    let x1906: BytePoly_3 = bigint_nondet_quot!(ctx, x1905, x6, 3);
    let x1907: BytePoly_1 = bigint_nondet_rem!(ctx, x1905, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1906, x6, 4), x1907, 4), x1905, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x1907, x1, 1), 34, 1)?;
    let x1908: BytePoly_2 = bigint_mul!(bigint_add!(bigint_sub!(x1899, x1865, 1), x6, 1), x1904, 2);
    let x1909: BytePoly_3 = bigint_nondet_quot!(ctx, x1908, x6, 3);
    let x1910: BytePoly_1 = bigint_nondet_rem!(ctx, x1908, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1909, x6, 4), x1910, 4), x1908, 4),
        24387,
        2,
    )?;
    let x1911: BytePoly_2 = bigint_add!(bigint_sub!(x1865, bigint_mul!(x1910, x1863, 2), 2), x6, 2);
    let x1912: BytePoly_2 = bigint_nondet_quot!(ctx, x1911, x6, 2);
    let x1913: BytePoly_1 = bigint_nondet_rem!(ctx, x1911, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1912, x6, 3), x1913, 3), x1911, 3),
        16259,
        2,
    )?;
    let x1914: BytePoly_2 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x1910, x1910, 2), x1863, 2), x6, 2),
            x1893,
            2
        ),
        x6,
        2
    );
    let x1915: BytePoly_3 = bigint_nondet_quot!(ctx, x1914, x6, 3);
    let x1916: BytePoly_1 = bigint_nondet_rem!(ctx, x1914, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1915, x6, 4), x1916, 4), x1914, 4),
        24387,
        2,
    )?;
    let x1917: BytePoly_2 = bigint_mul!(x1910, x1916, 2);
    let x1918: BytePoly_3 = bigint_nondet_quot!(ctx, x1917, x6, 3);
    let x1919: BytePoly_1 = bigint_nondet_rem!(ctx, x1917, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1918, x6, 4), x1919, 4), x1917, 4),
        24387,
        2,
    )?;
    let x1920: BytePoly_1 = bigint_add!(bigint_sub!(x6, bigint_add!(x1919, x1913, 1), 1), x6, 1);
    let x1921: BytePoly_1 = bigint_nondet_quot!(ctx, x1920, x6, 1);
    let x1922: BytePoly_1 = bigint_nondet_rem!(ctx, x1920, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1921, x6, 2), x1922, 2), x1920, 2),
        8131,
        2,
    )?;
    let x1923: BytePoly_2 = bigint_add!(
        bigint_mul!(x1916, x1900, 2),
        bigint_mul!(x1863, x1902, 2),
        2
    );
    let x1924: BytePoly_2 = bigint_add!(
        bigint_mul!(x1922, x1900, 2),
        bigint_mul!(x1865, x1902, 2),
        2
    );
    let x1925: BytePoly_3 = bigint_nondet_quot!(ctx, x1923, x6, 3);
    let x1926: BytePoly_1 = bigint_nondet_rem!(ctx, x1923, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1925, x6, 4), x1926, 4), x1923, 4),
        24387,
        2,
    )?;
    let x1927: BytePoly_3 = bigint_nondet_quot!(ctx, x1924, x6, 3);
    let x1928: BytePoly_1 = bigint_nondet_rem!(ctx, x1924, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1927, x6, 4), x1928, 4), x1924, 4),
        24387,
        2,
    )?;
    let x1929: BytePoly_2 = bigint_mul!(x1893, x1893, 2);
    let x1930: BytePoly_3 = bigint_nondet_quot!(ctx, x1929, x6, 3);
    let x1931: BytePoly_1 = bigint_nondet_rem!(ctx, x1929, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1930, x6, 4), x1931, 4), x1929, 4),
        24387,
        2,
    )?;
    let x1932: BytePoly_2 = bigint_add!(bigint_mul!(x1931, x0, 2), x5, 2);
    let x1933: BytePoly_3 = bigint_nondet_quot!(ctx, x1932, x6, 3);
    let x1934: BytePoly_1 = bigint_nondet_rem!(ctx, x1932, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1933, x6, 4), x1934, 4), x1932, 4),
        24387,
        2,
    )?;
    let x1935: BytePoly_1 = bigint_add!(x1899, x1899, 1);
    let x1936: BytePoly_1 = bigint_nondet_quot!(ctx, x1935, x6, 1);
    let x1937: BytePoly_1 = bigint_nondet_rem!(ctx, x1935, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1936, x6, 2), x1937, 2), x1935, 2),
        8131,
        2,
    )?;
    let x1938: BytePoly_1 = bigint_nondet_inv!(ctx, x1937, x6, 1);
    let x1939: BytePoly_2 = bigint_mul!(x1937, x1938, 2);
    let x1940: BytePoly_3 = bigint_nondet_quot!(ctx, x1939, x6, 3);
    let x1941: BytePoly_1 = bigint_nondet_rem!(ctx, x1939, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1940, x6, 4), x1941, 4), x1939, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x1941, x3, 1), 34, 1)?;
    let x1942: BytePoly_2 = bigint_mul!(x1934, x1938, 2);
    let x1943: BytePoly_3 = bigint_nondet_quot!(ctx, x1942, x6, 3);
    let x1944: BytePoly_1 = bigint_nondet_rem!(ctx, x1942, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1943, x6, 4), x1944, 4), x1942, 4),
        24387,
        2,
    )?;
    let x1945: BytePoly_2 = bigint_mul!(x1944, x1893, 2);
    let x1946: BytePoly_3 = bigint_nondet_quot!(ctx, x1945, x6, 3);
    let x1947: BytePoly_1 = bigint_nondet_rem!(ctx, x1945, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1946, x6, 4), x1947, 4), x1945, 4),
        24387,
        2,
    )?;
    let x1948: BytePoly_1 = bigint_add!(bigint_sub!(x1899, x1947, 1), x6, 1);
    let x1949: BytePoly_1 = bigint_nondet_quot!(ctx, x1948, x6, 1);
    let x1950: BytePoly_1 = bigint_nondet_rem!(ctx, x1948, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1949, x6, 2), x1950, 2), x1948, 2),
        8131,
        2,
    )?;
    let x1951: BytePoly_2 = bigint_mul!(x1944, x1944, 2);
    let x1952: BytePoly_3 = bigint_nondet_quot!(ctx, x1951, x6, 3);
    let x1953: BytePoly_1 = bigint_nondet_rem!(ctx, x1951, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1952, x6, 4), x1953, 4), x1951, 4),
        24387,
        2,
    )?;
    let x1954: BytePoly_1 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1953, x1893, 1), x6, 1), x1893, 1),
        x6,
        1
    );
    let x1955: BytePoly_1 = bigint_nondet_quot!(ctx, x1954, x6, 1);
    let x1956: BytePoly_1 = bigint_nondet_rem!(ctx, x1954, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1955, x6, 2), x1956, 2), x1954, 2),
        8131,
        2,
    )?;
    let x1957: BytePoly_2 = bigint_mul!(x1944, x1956, 2);
    let x1958: BytePoly_3 = bigint_nondet_quot!(ctx, x1957, x6, 3);
    let x1959: BytePoly_1 = bigint_nondet_rem!(ctx, x1957, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1958, x6, 4), x1959, 4), x1957, 4),
        24387,
        2,
    )?;
    let x1960: BytePoly_1 = bigint_add!(bigint_sub!(x6, bigint_add!(x1959, x1950, 1), 1), x6, 1);
    let x1961: BytePoly_1 = bigint_nondet_quot!(ctx, x1960, x6, 1);
    let x1962: BytePoly_1 = bigint_nondet_rem!(ctx, x1960, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1961, x6, 2), x1962, 2), x1960, 2),
        8131,
        2,
    )?;
    let x1963: BytePoly_1 = bigint_nondet_rem!(ctx, x1901, x2, 1);
    let x1964: BytePoly_2 = bigint_nondet_quot!(ctx, x1901, x2, 2);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1964, x2, 3), x1963, 3), x1901, 3),
        16259,
        2,
    )?;
    let x1965: BytePoly_1 = bigint_sub!(x3, x1963, 1);
    eqz(ctx, &bigint_mul!(x1963, x1965, 2), 8131, 2)?;
    let x1966: BytePoly_1 = bigint_add!(bigint_sub!(x1956, x1926, 1), x6, 1);
    let x1967: BytePoly_1 = bigint_nondet_inv!(ctx, x1966, x6, 1);
    let x1968: BytePoly_2 = bigint_mul!(x1966, x1967, 2);
    let x1969: BytePoly_3 = bigint_nondet_quot!(ctx, x1968, x6, 3);
    let x1970: BytePoly_1 = bigint_nondet_rem!(ctx, x1968, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1969, x6, 4), x1970, 4), x1968, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x1970, x1, 1), 34, 1)?;
    let x1971: BytePoly_2 = bigint_mul!(bigint_add!(bigint_sub!(x1962, x1928, 1), x6, 1), x1967, 2);
    let x1972: BytePoly_3 = bigint_nondet_quot!(ctx, x1971, x6, 3);
    let x1973: BytePoly_1 = bigint_nondet_rem!(ctx, x1971, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1972, x6, 4), x1973, 4), x1971, 4),
        24387,
        2,
    )?;
    let x1974: BytePoly_2 = bigint_add!(bigint_sub!(x1928, bigint_mul!(x1973, x1926, 2), 2), x6, 2);
    let x1975: BytePoly_2 = bigint_nondet_quot!(ctx, x1974, x6, 2);
    let x1976: BytePoly_1 = bigint_nondet_rem!(ctx, x1974, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1975, x6, 3), x1976, 3), x1974, 3),
        16259,
        2,
    )?;
    let x1977: BytePoly_2 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x1973, x1973, 2), x1926, 2), x6, 2),
            x1956,
            2
        ),
        x6,
        2
    );
    let x1978: BytePoly_3 = bigint_nondet_quot!(ctx, x1977, x6, 3);
    let x1979: BytePoly_1 = bigint_nondet_rem!(ctx, x1977, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1978, x6, 4), x1979, 4), x1977, 4),
        24387,
        2,
    )?;
    let x1980: BytePoly_2 = bigint_mul!(x1973, x1979, 2);
    let x1981: BytePoly_3 = bigint_nondet_quot!(ctx, x1980, x6, 3);
    let x1982: BytePoly_1 = bigint_nondet_rem!(ctx, x1980, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1981, x6, 4), x1982, 4), x1980, 4),
        24387,
        2,
    )?;
    let x1983: BytePoly_1 = bigint_add!(bigint_sub!(x6, bigint_add!(x1982, x1976, 1), 1), x6, 1);
    let x1984: BytePoly_1 = bigint_nondet_quot!(ctx, x1983, x6, 1);
    let x1985: BytePoly_1 = bigint_nondet_rem!(ctx, x1983, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1984, x6, 2), x1985, 2), x1983, 2),
        8131,
        2,
    )?;
    let x1986: BytePoly_2 = bigint_add!(
        bigint_mul!(x1979, x1963, 2),
        bigint_mul!(x1926, x1965, 2),
        2
    );
    let x1987: BytePoly_2 = bigint_add!(
        bigint_mul!(x1985, x1963, 2),
        bigint_mul!(x1928, x1965, 2),
        2
    );
    let x1988: BytePoly_3 = bigint_nondet_quot!(ctx, x1986, x6, 3);
    let x1989: BytePoly_1 = bigint_nondet_rem!(ctx, x1986, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1988, x6, 4), x1989, 4), x1986, 4),
        24387,
        2,
    )?;
    let x1990: BytePoly_3 = bigint_nondet_quot!(ctx, x1987, x6, 3);
    let x1991: BytePoly_1 = bigint_nondet_rem!(ctx, x1987, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1990, x6, 4), x1991, 4), x1987, 4),
        24387,
        2,
    )?;
    let x1992: BytePoly_2 = bigint_mul!(x1956, x1956, 2);
    let x1993: BytePoly_3 = bigint_nondet_quot!(ctx, x1992, x6, 3);
    let x1994: BytePoly_1 = bigint_nondet_rem!(ctx, x1992, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1993, x6, 4), x1994, 4), x1992, 4),
        24387,
        2,
    )?;
    let x1995: BytePoly_2 = bigint_add!(bigint_mul!(x1994, x0, 2), x5, 2);
    let x1996: BytePoly_3 = bigint_nondet_quot!(ctx, x1995, x6, 3);
    let x1997: BytePoly_1 = bigint_nondet_rem!(ctx, x1995, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1996, x6, 4), x1997, 4), x1995, 4),
        24387,
        2,
    )?;
    let x1998: BytePoly_1 = bigint_add!(x1962, x1962, 1);
    let x1999: BytePoly_1 = bigint_nondet_quot!(ctx, x1998, x6, 1);
    let x2000: BytePoly_1 = bigint_nondet_rem!(ctx, x1998, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1999, x6, 2), x2000, 2), x1998, 2),
        8131,
        2,
    )?;
    let x2001: BytePoly_1 = bigint_nondet_inv!(ctx, x2000, x6, 1);
    let x2002: BytePoly_2 = bigint_mul!(x2000, x2001, 2);
    let x2003: BytePoly_3 = bigint_nondet_quot!(ctx, x2002, x6, 3);
    let x2004: BytePoly_1 = bigint_nondet_rem!(ctx, x2002, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2003, x6, 4), x2004, 4), x2002, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x2004, x3, 1), 34, 1)?;
    let x2005: BytePoly_2 = bigint_mul!(x1997, x2001, 2);
    let x2006: BytePoly_3 = bigint_nondet_quot!(ctx, x2005, x6, 3);
    let x2007: BytePoly_1 = bigint_nondet_rem!(ctx, x2005, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2006, x6, 4), x2007, 4), x2005, 4),
        24387,
        2,
    )?;
    let x2008: BytePoly_2 = bigint_mul!(x2007, x1956, 2);
    let x2009: BytePoly_3 = bigint_nondet_quot!(ctx, x2008, x6, 3);
    let x2010: BytePoly_1 = bigint_nondet_rem!(ctx, x2008, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2009, x6, 4), x2010, 4), x2008, 4),
        24387,
        2,
    )?;
    let x2011: BytePoly_1 = bigint_add!(bigint_sub!(x1962, x2010, 1), x6, 1);
    let x2012: BytePoly_1 = bigint_nondet_quot!(ctx, x2011, x6, 1);
    let x2013: BytePoly_1 = bigint_nondet_rem!(ctx, x2011, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2012, x6, 2), x2013, 2), x2011, 2),
        8131,
        2,
    )?;
    let x2014: BytePoly_2 = bigint_mul!(x2007, x2007, 2);
    let x2015: BytePoly_3 = bigint_nondet_quot!(ctx, x2014, x6, 3);
    let x2016: BytePoly_1 = bigint_nondet_rem!(ctx, x2014, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2015, x6, 4), x2016, 4), x2014, 4),
        24387,
        2,
    )?;
    let x2017: BytePoly_1 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2016, x1956, 1), x6, 1), x1956, 1),
        x6,
        1
    );
    let x2018: BytePoly_1 = bigint_nondet_quot!(ctx, x2017, x6, 1);
    let x2019: BytePoly_1 = bigint_nondet_rem!(ctx, x2017, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2018, x6, 2), x2019, 2), x2017, 2),
        8131,
        2,
    )?;
    let x2020: BytePoly_2 = bigint_mul!(x2007, x2019, 2);
    let x2021: BytePoly_3 = bigint_nondet_quot!(ctx, x2020, x6, 3);
    let x2022: BytePoly_1 = bigint_nondet_rem!(ctx, x2020, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2021, x6, 4), x2022, 4), x2020, 4),
        24387,
        2,
    )?;
    let x2023: BytePoly_1 = bigint_add!(bigint_sub!(x6, bigint_add!(x2022, x2013, 1), 1), x6, 1);
    let x2024: BytePoly_1 = bigint_nondet_quot!(ctx, x2023, x6, 1);
    let x2025: BytePoly_1 = bigint_nondet_rem!(ctx, x2023, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2024, x6, 2), x2025, 2), x2023, 2),
        8131,
        2,
    )?;
    let x2026: BytePoly_1 = bigint_nondet_rem!(ctx, x1964, x2, 1);
    let x2027: BytePoly_2 = bigint_nondet_quot!(ctx, x1964, x2, 2);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2027, x2, 3), x2026, 3), x1964, 3),
        16259,
        2,
    )?;
    let x2028: BytePoly_1 = bigint_sub!(x3, x2026, 1);
    eqz(ctx, &bigint_mul!(x2026, x2028, 2), 8131, 2)?;
    let x2029: BytePoly_1 = bigint_add!(bigint_sub!(x2019, x1989, 1), x6, 1);
    let x2030: BytePoly_1 = bigint_nondet_inv!(ctx, x2029, x6, 1);
    let x2031: BytePoly_2 = bigint_mul!(x2029, x2030, 2);
    let x2032: BytePoly_3 = bigint_nondet_quot!(ctx, x2031, x6, 3);
    let x2033: BytePoly_1 = bigint_nondet_rem!(ctx, x2031, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2032, x6, 4), x2033, 4), x2031, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x2033, x1, 1), 34, 1)?;
    let x2034: BytePoly_2 = bigint_mul!(bigint_add!(bigint_sub!(x2025, x1991, 1), x6, 1), x2030, 2);
    let x2035: BytePoly_3 = bigint_nondet_quot!(ctx, x2034, x6, 3);
    let x2036: BytePoly_1 = bigint_nondet_rem!(ctx, x2034, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2035, x6, 4), x2036, 4), x2034, 4),
        24387,
        2,
    )?;
    let x2037: BytePoly_2 = bigint_add!(bigint_sub!(x1991, bigint_mul!(x2036, x1989, 2), 2), x6, 2);
    let x2038: BytePoly_2 = bigint_nondet_quot!(ctx, x2037, x6, 2);
    let x2039: BytePoly_1 = bigint_nondet_rem!(ctx, x2037, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2038, x6, 3), x2039, 3), x2037, 3),
        16259,
        2,
    )?;
    let x2040: BytePoly_2 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x2036, x2036, 2), x1989, 2), x6, 2),
            x2019,
            2
        ),
        x6,
        2
    );
    let x2041: BytePoly_3 = bigint_nondet_quot!(ctx, x2040, x6, 3);
    let x2042: BytePoly_1 = bigint_nondet_rem!(ctx, x2040, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2041, x6, 4), x2042, 4), x2040, 4),
        24387,
        2,
    )?;
    let x2043: BytePoly_2 = bigint_mul!(x2036, x2042, 2);
    let x2044: BytePoly_3 = bigint_nondet_quot!(ctx, x2043, x6, 3);
    let x2045: BytePoly_1 = bigint_nondet_rem!(ctx, x2043, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2044, x6, 4), x2045, 4), x2043, 4),
        24387,
        2,
    )?;
    let x2046: BytePoly_1 = bigint_add!(bigint_sub!(x6, bigint_add!(x2045, x2039, 1), 1), x6, 1);
    let x2047: BytePoly_1 = bigint_nondet_quot!(ctx, x2046, x6, 1);
    let x2048: BytePoly_1 = bigint_nondet_rem!(ctx, x2046, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2047, x6, 2), x2048, 2), x2046, 2),
        8131,
        2,
    )?;
    let x2049: BytePoly_2 = bigint_add!(
        bigint_mul!(x2042, x2026, 2),
        bigint_mul!(x1989, x2028, 2),
        2
    );
    let x2050: BytePoly_2 = bigint_add!(
        bigint_mul!(x2048, x2026, 2),
        bigint_mul!(x1991, x2028, 2),
        2
    );
    let x2051: BytePoly_3 = bigint_nondet_quot!(ctx, x2049, x6, 3);
    let x2052: BytePoly_1 = bigint_nondet_rem!(ctx, x2049, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2051, x6, 4), x2052, 4), x2049, 4),
        24387,
        2,
    )?;
    let x2053: BytePoly_3 = bigint_nondet_quot!(ctx, x2050, x6, 3);
    let x2054: BytePoly_1 = bigint_nondet_rem!(ctx, x2050, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2053, x6, 4), x2054, 4), x2050, 4),
        24387,
        2,
    )?;
    let x2055: BytePoly_2 = bigint_mul!(x2019, x2019, 2);
    let x2056: BytePoly_3 = bigint_nondet_quot!(ctx, x2055, x6, 3);
    let x2057: BytePoly_1 = bigint_nondet_rem!(ctx, x2055, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2056, x6, 4), x2057, 4), x2055, 4),
        24387,
        2,
    )?;
    let x2058: BytePoly_2 = bigint_add!(bigint_mul!(x2057, x0, 2), x5, 2);
    let x2059: BytePoly_3 = bigint_nondet_quot!(ctx, x2058, x6, 3);
    let x2060: BytePoly_1 = bigint_nondet_rem!(ctx, x2058, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2059, x6, 4), x2060, 4), x2058, 4),
        24387,
        2,
    )?;
    let x2061: BytePoly_1 = bigint_add!(x2025, x2025, 1);
    let x2062: BytePoly_1 = bigint_nondet_quot!(ctx, x2061, x6, 1);
    let x2063: BytePoly_1 = bigint_nondet_rem!(ctx, x2061, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2062, x6, 2), x2063, 2), x2061, 2),
        8131,
        2,
    )?;
    let x2064: BytePoly_1 = bigint_nondet_inv!(ctx, x2063, x6, 1);
    let x2065: BytePoly_2 = bigint_mul!(x2063, x2064, 2);
    let x2066: BytePoly_3 = bigint_nondet_quot!(ctx, x2065, x6, 3);
    let x2067: BytePoly_1 = bigint_nondet_rem!(ctx, x2065, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2066, x6, 4), x2067, 4), x2065, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x2067, x3, 1), 34, 1)?;
    let x2068: BytePoly_2 = bigint_mul!(x2060, x2064, 2);
    let x2069: BytePoly_3 = bigint_nondet_quot!(ctx, x2068, x6, 3);
    let x2070: BytePoly_1 = bigint_nondet_rem!(ctx, x2068, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2069, x6, 4), x2070, 4), x2068, 4),
        24387,
        2,
    )?;
    let x2071: BytePoly_2 = bigint_mul!(x2070, x2019, 2);
    let x2072: BytePoly_3 = bigint_nondet_quot!(ctx, x2071, x6, 3);
    let x2073: BytePoly_1 = bigint_nondet_rem!(ctx, x2071, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2072, x6, 4), x2073, 4), x2071, 4),
        24387,
        2,
    )?;
    let x2074: BytePoly_1 = bigint_add!(bigint_sub!(x2025, x2073, 1), x6, 1);
    let x2075: BytePoly_1 = bigint_nondet_quot!(ctx, x2074, x6, 1);
    let x2076: BytePoly_1 = bigint_nondet_rem!(ctx, x2074, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2075, x6, 2), x2076, 2), x2074, 2),
        8131,
        2,
    )?;
    let x2077: BytePoly_2 = bigint_mul!(x2070, x2070, 2);
    let x2078: BytePoly_3 = bigint_nondet_quot!(ctx, x2077, x6, 3);
    let x2079: BytePoly_1 = bigint_nondet_rem!(ctx, x2077, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2078, x6, 4), x2079, 4), x2077, 4),
        24387,
        2,
    )?;
    let x2080: BytePoly_1 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2079, x2019, 1), x6, 1), x2019, 1),
        x6,
        1
    );
    let x2081: BytePoly_1 = bigint_nondet_quot!(ctx, x2080, x6, 1);
    let x2082: BytePoly_1 = bigint_nondet_rem!(ctx, x2080, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2081, x6, 2), x2082, 2), x2080, 2),
        8131,
        2,
    )?;
    let x2083: BytePoly_2 = bigint_mul!(x2070, x2082, 2);
    let x2084: BytePoly_3 = bigint_nondet_quot!(ctx, x2083, x6, 3);
    let x2085: BytePoly_1 = bigint_nondet_rem!(ctx, x2083, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2084, x6, 4), x2085, 4), x2083, 4),
        24387,
        2,
    )?;
    let x2086: BytePoly_1 = bigint_add!(bigint_sub!(x6, bigint_add!(x2085, x2076, 1), 1), x6, 1);
    let x2087: BytePoly_1 = bigint_nondet_quot!(ctx, x2086, x6, 1);
    let x2088: BytePoly_1 = bigint_nondet_rem!(ctx, x2086, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2087, x6, 2), x2088, 2), x2086, 2),
        8131,
        2,
    )?;
    let x2089: BytePoly_1 = bigint_add!(bigint_sub!(x15, x2052, 1), x6, 1);
    let x2090: BytePoly_1 = bigint_nondet_inv!(ctx, x2089, x6, 1);
    let x2091: BytePoly_2 = bigint_mul!(x2089, x2090, 2);
    let x2092: BytePoly_3 = bigint_nondet_quot!(ctx, x2091, x6, 3);
    let x2093: BytePoly_1 = bigint_nondet_rem!(ctx, x2091, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2092, x6, 4), x2093, 4), x2091, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x2093, x1, 1), 34, 1)?;
    let x2094: BytePoly_2 = bigint_mul!(bigint_add!(bigint_sub!(x1045, x2054, 1), x6, 1), x2090, 2);
    let x2095: BytePoly_3 = bigint_nondet_quot!(ctx, x2094, x6, 3);
    let x2096: BytePoly_1 = bigint_nondet_rem!(ctx, x2094, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2095, x6, 4), x2096, 4), x2094, 4),
        24387,
        2,
    )?;
    let x2097: BytePoly_2 = bigint_add!(bigint_sub!(x2054, bigint_mul!(x2096, x2052, 2), 2), x6, 2);
    let x2098: BytePoly_2 = bigint_nondet_quot!(ctx, x2097, x6, 2);
    let x2099: BytePoly_1 = bigint_nondet_rem!(ctx, x2097, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2098, x6, 3), x2099, 3), x2097, 3),
        16259,
        2,
    )?;
    let x2100: BytePoly_2 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x2096, x2096, 2), x2052, 2), x6, 2),
            x15,
            2
        ),
        x6,
        2
    );
    let x2101: BytePoly_3 = bigint_nondet_quot!(ctx, x2100, x6, 3);
    let x2102: BytePoly_1 = bigint_nondet_rem!(ctx, x2100, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2101, x6, 4), x2102, 4), x2100, 4),
        24387,
        2,
    )?;
    let x2103: BytePoly_2 = bigint_mul!(x2096, x2102, 2);
    let x2104: BytePoly_3 = bigint_nondet_quot!(ctx, x2103, x6, 3);
    let x2105: BytePoly_1 = bigint_nondet_rem!(ctx, x2103, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2104, x6, 4), x2105, 4), x2103, 4),
        24387,
        2,
    )?;
    let x2106: BytePoly_1 = bigint_add!(bigint_sub!(x6, bigint_add!(x2105, x2099, 1), 1), x6, 1);
    let x2107: BytePoly_1 = bigint_nondet_quot!(ctx, x2106, x6, 1);
    let x2108: BytePoly_1 = bigint_nondet_rem!(ctx, x2106, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2107, x6, 2), x2108, 2), x2106, 2),
        8131,
        2,
    )?;
    let x2109: BytePoly_3 = bigint_nondet_quot!(ctx, x24, x6, 3);
    let x2110: BytePoly_1 = bigint_nondet_rem!(ctx, x24, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2109, x6, 4), x2110, 4), x24, 4),
        24387,
        2,
    )?;
    let x2111: BytePoly_2 = bigint_sub!(
        x23,
        bigint_add!(bigint_add!(bigint_mul!(x15, x2110, 2), x27, 2), x4, 2),
        2
    );
    let x2112: BytePoly_3 = bigint_nondet_quot!(ctx, x2111, x6, 3);
    let x2113: BytePoly_1 = bigint_nondet_rem!(ctx, x2111, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2112, x6, 4), x2113, 4), x2111, 4),
        24387,
        2,
    )?;
    eqz(ctx, &x2113, 34, 1)?;
    let x2114: BytePoly_1 = bigint_nondet_rem!(ctx, x1075, x2, 1);
    let x2115: BytePoly_2 = bigint_nondet_quot!(ctx, x1075, x2, 2);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2115, x2, 3), x2114, 3), x1075, 3),
        16259,
        2,
    )?;
    let x2116: BytePoly_1 = bigint_sub!(x3, x2114, 1);
    eqz(ctx, &bigint_mul!(x2114, x2116, 2), 8131, 2)?;
    let x2117: BytePoly_1 = bigint_nondet_inv!(ctx, x41, x6, 1);
    let x2118: BytePoly_2 = bigint_mul!(x41, x2117, 2);
    let x2119: BytePoly_3 = bigint_nondet_quot!(ctx, x2118, x6, 3);
    let x2120: BytePoly_1 = bigint_nondet_rem!(ctx, x2118, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2119, x6, 4), x2120, 4), x2118, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x2120, x1, 1), 34, 1)?;
    let x2121: BytePoly_2 = bigint_mul!(x40, x2117, 2);
    let x2122: BytePoly_3 = bigint_nondet_quot!(ctx, x2121, x6, 3);
    let x2123: BytePoly_1 = bigint_nondet_rem!(ctx, x2121, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2122, x6, 4), x2123, 4), x2121, 4),
        24387,
        2,
    )?;
    let x2124: BytePoly_2 = bigint_add!(bigint_sub!(x16, bigint_mul!(x2123, x15, 2), 2), x6, 2);
    let x2125: BytePoly_2 = bigint_nondet_quot!(ctx, x2124, x6, 2);
    let x2126: BytePoly_1 = bigint_nondet_rem!(ctx, x2124, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2125, x6, 3), x2126, 3), x2124, 3),
        16259,
        2,
    )?;
    let x2127: BytePoly_2 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x2123, x2123, 2), x15, 2), x6, 2),
            x10,
            2
        ),
        x6,
        2
    );
    let x2128: BytePoly_3 = bigint_nondet_quot!(ctx, x2127, x6, 3);
    let x2129: BytePoly_1 = bigint_nondet_rem!(ctx, x2127, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2128, x6, 4), x2129, 4), x2127, 4),
        24387,
        2,
    )?;
    let x2130: BytePoly_2 = bigint_mul!(x2123, x2129, 2);
    let x2131: BytePoly_3 = bigint_nondet_quot!(ctx, x2130, x6, 3);
    let x2132: BytePoly_1 = bigint_nondet_rem!(ctx, x2130, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2131, x6, 4), x2132, 4), x2130, 4),
        24387,
        2,
    )?;
    let x2133: BytePoly_1 = bigint_add!(bigint_sub!(x6, bigint_add!(x2132, x2126, 1), 1), x6, 1);
    let x2134: BytePoly_1 = bigint_nondet_quot!(ctx, x2133, x6, 1);
    let x2135: BytePoly_1 = bigint_nondet_rem!(ctx, x2133, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2134, x6, 2), x2135, 2), x2133, 2),
        8131,
        2,
    )?;
    let x2136: BytePoly_2 =
        bigint_add!(bigint_mul!(x2129, x2114, 2), bigint_mul!(x15, x2116, 2), 2);
    let x2137: BytePoly_2 =
        bigint_add!(bigint_mul!(x2135, x2114, 2), bigint_mul!(x16, x2116, 2), 2);
    let x2138: BytePoly_3 = bigint_nondet_quot!(ctx, x2136, x6, 3);
    let x2139: BytePoly_1 = bigint_nondet_rem!(ctx, x2136, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2138, x6, 4), x2139, 4), x2136, 4),
        24387,
        2,
    )?;
    let x2140: BytePoly_3 = bigint_nondet_quot!(ctx, x2137, x6, 3);
    let x2141: BytePoly_1 = bigint_nondet_rem!(ctx, x2137, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2140, x6, 4), x2141, 4), x2137, 4),
        24387,
        2,
    )?;
    let x2142: BytePoly_3 = bigint_nondet_quot!(ctx, x17, x6, 3);
    let x2143: BytePoly_1 = bigint_nondet_rem!(ctx, x17, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2142, x6, 4), x2143, 4), x17, 4),
        24387,
        2,
    )?;
    let x2144: BytePoly_2 = bigint_add!(bigint_mul!(x2143, x0, 2), x5, 2);
    let x2145: BytePoly_3 = bigint_nondet_quot!(ctx, x2144, x6, 3);
    let x2146: BytePoly_1 = bigint_nondet_rem!(ctx, x2144, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2145, x6, 4), x2146, 4), x2144, 4),
        24387,
        2,
    )?;
    let x2147: BytePoly_1 = bigint_nondet_quot!(ctx, x72, x6, 1);
    let x2148: BytePoly_1 = bigint_nondet_rem!(ctx, x72, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2147, x6, 2), x2148, 2), x72, 2),
        8131,
        2,
    )?;
    let x2149: BytePoly_1 = bigint_nondet_inv!(ctx, x2148, x6, 1);
    let x2150: BytePoly_2 = bigint_mul!(x2148, x2149, 2);
    let x2151: BytePoly_3 = bigint_nondet_quot!(ctx, x2150, x6, 3);
    let x2152: BytePoly_1 = bigint_nondet_rem!(ctx, x2150, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2151, x6, 4), x2152, 4), x2150, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x2152, x3, 1), 34, 1)?;
    let x2153: BytePoly_2 = bigint_mul!(x2146, x2149, 2);
    let x2154: BytePoly_3 = bigint_nondet_quot!(ctx, x2153, x6, 3);
    let x2155: BytePoly_1 = bigint_nondet_rem!(ctx, x2153, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2154, x6, 4), x2155, 4), x2153, 4),
        24387,
        2,
    )?;
    let x2156: BytePoly_2 = bigint_mul!(x2155, x10, 2);
    let x2157: BytePoly_3 = bigint_nondet_quot!(ctx, x2156, x6, 3);
    let x2158: BytePoly_1 = bigint_nondet_rem!(ctx, x2156, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2157, x6, 4), x2158, 4), x2156, 4),
        24387,
        2,
    )?;
    let x2159: BytePoly_1 = bigint_add!(bigint_sub!(x11, x2158, 1), x6, 1);
    let x2160: BytePoly_1 = bigint_nondet_quot!(ctx, x2159, x6, 1);
    let x2161: BytePoly_1 = bigint_nondet_rem!(ctx, x2159, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2160, x6, 2), x2161, 2), x2159, 2),
        8131,
        2,
    )?;
    let x2162: BytePoly_2 = bigint_mul!(x2155, x2155, 2);
    let x2163: BytePoly_3 = bigint_nondet_quot!(ctx, x2162, x6, 3);
    let x2164: BytePoly_1 = bigint_nondet_rem!(ctx, x2162, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2163, x6, 4), x2164, 4), x2162, 4),
        24387,
        2,
    )?;
    let x2165: BytePoly_1 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2164, x10, 1), x6, 1), x10, 1),
        x6,
        1
    );
    let x2166: BytePoly_1 = bigint_nondet_quot!(ctx, x2165, x6, 1);
    let x2167: BytePoly_1 = bigint_nondet_rem!(ctx, x2165, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2166, x6, 2), x2167, 2), x2165, 2),
        8131,
        2,
    )?;
    let x2168: BytePoly_2 = bigint_mul!(x2155, x2167, 2);
    let x2169: BytePoly_3 = bigint_nondet_quot!(ctx, x2168, x6, 3);
    let x2170: BytePoly_1 = bigint_nondet_rem!(ctx, x2168, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2169, x6, 4), x2170, 4), x2168, 4),
        24387,
        2,
    )?;
    let x2171: BytePoly_1 = bigint_add!(bigint_sub!(x6, bigint_add!(x2170, x2161, 1), 1), x6, 1);
    let x2172: BytePoly_1 = bigint_nondet_quot!(ctx, x2171, x6, 1);
    let x2173: BytePoly_1 = bigint_nondet_rem!(ctx, x2171, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2172, x6, 2), x2173, 2), x2171, 2),
        8131,
        2,
    )?;
    let x2174: BytePoly_1 = bigint_nondet_rem!(ctx, x2115, x2, 1);
    let x2175: BytePoly_2 = bigint_nondet_quot!(ctx, x2115, x2, 2);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2175, x2, 3), x2174, 3), x2115, 3),
        16259,
        2,
    )?;
    let x2176: BytePoly_1 = bigint_sub!(x3, x2174, 1);
    eqz(ctx, &bigint_mul!(x2174, x2176, 2), 8131, 2)?;
    let x2177: BytePoly_1 = bigint_add!(bigint_sub!(x2167, x2139, 1), x6, 1);
    let x2178: BytePoly_1 = bigint_nondet_inv!(ctx, x2177, x6, 1);
    let x2179: BytePoly_2 = bigint_mul!(x2177, x2178, 2);
    let x2180: BytePoly_3 = bigint_nondet_quot!(ctx, x2179, x6, 3);
    let x2181: BytePoly_1 = bigint_nondet_rem!(ctx, x2179, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2180, x6, 4), x2181, 4), x2179, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x2181, x1, 1), 34, 1)?;
    let x2182: BytePoly_2 = bigint_mul!(bigint_add!(bigint_sub!(x2173, x2141, 1), x6, 1), x2178, 2);
    let x2183: BytePoly_3 = bigint_nondet_quot!(ctx, x2182, x6, 3);
    let x2184: BytePoly_1 = bigint_nondet_rem!(ctx, x2182, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2183, x6, 4), x2184, 4), x2182, 4),
        24387,
        2,
    )?;
    let x2185: BytePoly_2 = bigint_add!(bigint_sub!(x2141, bigint_mul!(x2184, x2139, 2), 2), x6, 2);
    let x2186: BytePoly_2 = bigint_nondet_quot!(ctx, x2185, x6, 2);
    let x2187: BytePoly_1 = bigint_nondet_rem!(ctx, x2185, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2186, x6, 3), x2187, 3), x2185, 3),
        16259,
        2,
    )?;
    let x2188: BytePoly_2 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x2184, x2184, 2), x2139, 2), x6, 2),
            x2167,
            2
        ),
        x6,
        2
    );
    let x2189: BytePoly_3 = bigint_nondet_quot!(ctx, x2188, x6, 3);
    let x2190: BytePoly_1 = bigint_nondet_rem!(ctx, x2188, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2189, x6, 4), x2190, 4), x2188, 4),
        24387,
        2,
    )?;
    let x2191: BytePoly_2 = bigint_mul!(x2184, x2190, 2);
    let x2192: BytePoly_3 = bigint_nondet_quot!(ctx, x2191, x6, 3);
    let x2193: BytePoly_1 = bigint_nondet_rem!(ctx, x2191, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2192, x6, 4), x2193, 4), x2191, 4),
        24387,
        2,
    )?;
    let x2194: BytePoly_1 = bigint_add!(bigint_sub!(x6, bigint_add!(x2193, x2187, 1), 1), x6, 1);
    let x2195: BytePoly_1 = bigint_nondet_quot!(ctx, x2194, x6, 1);
    let x2196: BytePoly_1 = bigint_nondet_rem!(ctx, x2194, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2195, x6, 2), x2196, 2), x2194, 2),
        8131,
        2,
    )?;
    let x2197: BytePoly_2 = bigint_add!(
        bigint_mul!(x2190, x2174, 2),
        bigint_mul!(x2139, x2176, 2),
        2
    );
    let x2198: BytePoly_2 = bigint_add!(
        bigint_mul!(x2196, x2174, 2),
        bigint_mul!(x2141, x2176, 2),
        2
    );
    let x2199: BytePoly_3 = bigint_nondet_quot!(ctx, x2197, x6, 3);
    let x2200: BytePoly_1 = bigint_nondet_rem!(ctx, x2197, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2199, x6, 4), x2200, 4), x2197, 4),
        24387,
        2,
    )?;
    let x2201: BytePoly_3 = bigint_nondet_quot!(ctx, x2198, x6, 3);
    let x2202: BytePoly_1 = bigint_nondet_rem!(ctx, x2198, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2201, x6, 4), x2202, 4), x2198, 4),
        24387,
        2,
    )?;
    let x2203: BytePoly_2 = bigint_mul!(x2167, x2167, 2);
    let x2204: BytePoly_3 = bigint_nondet_quot!(ctx, x2203, x6, 3);
    let x2205: BytePoly_1 = bigint_nondet_rem!(ctx, x2203, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2204, x6, 4), x2205, 4), x2203, 4),
        24387,
        2,
    )?;
    let x2206: BytePoly_2 = bigint_add!(bigint_mul!(x2205, x0, 2), x5, 2);
    let x2207: BytePoly_3 = bigint_nondet_quot!(ctx, x2206, x6, 3);
    let x2208: BytePoly_1 = bigint_nondet_rem!(ctx, x2206, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2207, x6, 4), x2208, 4), x2206, 4),
        24387,
        2,
    )?;
    let x2209: BytePoly_1 = bigint_add!(x2173, x2173, 1);
    let x2210: BytePoly_1 = bigint_nondet_quot!(ctx, x2209, x6, 1);
    let x2211: BytePoly_1 = bigint_nondet_rem!(ctx, x2209, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2210, x6, 2), x2211, 2), x2209, 2),
        8131,
        2,
    )?;
    let x2212: BytePoly_1 = bigint_nondet_inv!(ctx, x2211, x6, 1);
    let x2213: BytePoly_2 = bigint_mul!(x2211, x2212, 2);
    let x2214: BytePoly_3 = bigint_nondet_quot!(ctx, x2213, x6, 3);
    let x2215: BytePoly_1 = bigint_nondet_rem!(ctx, x2213, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2214, x6, 4), x2215, 4), x2213, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x2215, x3, 1), 34, 1)?;
    let x2216: BytePoly_2 = bigint_mul!(x2208, x2212, 2);
    let x2217: BytePoly_3 = bigint_nondet_quot!(ctx, x2216, x6, 3);
    let x2218: BytePoly_1 = bigint_nondet_rem!(ctx, x2216, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2217, x6, 4), x2218, 4), x2216, 4),
        24387,
        2,
    )?;
    let x2219: BytePoly_2 = bigint_mul!(x2218, x2167, 2);
    let x2220: BytePoly_3 = bigint_nondet_quot!(ctx, x2219, x6, 3);
    let x2221: BytePoly_1 = bigint_nondet_rem!(ctx, x2219, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2220, x6, 4), x2221, 4), x2219, 4),
        24387,
        2,
    )?;
    let x2222: BytePoly_1 = bigint_add!(bigint_sub!(x2173, x2221, 1), x6, 1);
    let x2223: BytePoly_1 = bigint_nondet_quot!(ctx, x2222, x6, 1);
    let x2224: BytePoly_1 = bigint_nondet_rem!(ctx, x2222, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2223, x6, 2), x2224, 2), x2222, 2),
        8131,
        2,
    )?;
    let x2225: BytePoly_2 = bigint_mul!(x2218, x2218, 2);
    let x2226: BytePoly_3 = bigint_nondet_quot!(ctx, x2225, x6, 3);
    let x2227: BytePoly_1 = bigint_nondet_rem!(ctx, x2225, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2226, x6, 4), x2227, 4), x2225, 4),
        24387,
        2,
    )?;
    let x2228: BytePoly_1 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2227, x2167, 1), x6, 1), x2167, 1),
        x6,
        1
    );
    let x2229: BytePoly_1 = bigint_nondet_quot!(ctx, x2228, x6, 1);
    let x2230: BytePoly_1 = bigint_nondet_rem!(ctx, x2228, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2229, x6, 2), x2230, 2), x2228, 2),
        8131,
        2,
    )?;
    let x2231: BytePoly_2 = bigint_mul!(x2218, x2230, 2);
    let x2232: BytePoly_3 = bigint_nondet_quot!(ctx, x2231, x6, 3);
    let x2233: BytePoly_1 = bigint_nondet_rem!(ctx, x2231, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2232, x6, 4), x2233, 4), x2231, 4),
        24387,
        2,
    )?;
    let x2234: BytePoly_1 = bigint_add!(bigint_sub!(x6, bigint_add!(x2233, x2224, 1), 1), x6, 1);
    let x2235: BytePoly_1 = bigint_nondet_quot!(ctx, x2234, x6, 1);
    let x2236: BytePoly_1 = bigint_nondet_rem!(ctx, x2234, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2235, x6, 2), x2236, 2), x2234, 2),
        8131,
        2,
    )?;
    let x2237: BytePoly_1 = bigint_nondet_rem!(ctx, x2175, x2, 1);
    let x2238: BytePoly_2 = bigint_nondet_quot!(ctx, x2175, x2, 2);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2238, x2, 3), x2237, 3), x2175, 3),
        16259,
        2,
    )?;
    let x2239: BytePoly_1 = bigint_sub!(x3, x2237, 1);
    eqz(ctx, &bigint_mul!(x2237, x2239, 2), 8131, 2)?;
    let x2240: BytePoly_1 = bigint_add!(bigint_sub!(x2230, x2200, 1), x6, 1);
    let x2241: BytePoly_1 = bigint_nondet_inv!(ctx, x2240, x6, 1);
    let x2242: BytePoly_2 = bigint_mul!(x2240, x2241, 2);
    let x2243: BytePoly_3 = bigint_nondet_quot!(ctx, x2242, x6, 3);
    let x2244: BytePoly_1 = bigint_nondet_rem!(ctx, x2242, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2243, x6, 4), x2244, 4), x2242, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x2244, x1, 1), 34, 1)?;
    let x2245: BytePoly_2 = bigint_mul!(bigint_add!(bigint_sub!(x2236, x2202, 1), x6, 1), x2241, 2);
    let x2246: BytePoly_3 = bigint_nondet_quot!(ctx, x2245, x6, 3);
    let x2247: BytePoly_1 = bigint_nondet_rem!(ctx, x2245, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2246, x6, 4), x2247, 4), x2245, 4),
        24387,
        2,
    )?;
    let x2248: BytePoly_2 = bigint_add!(bigint_sub!(x2202, bigint_mul!(x2247, x2200, 2), 2), x6, 2);
    let x2249: BytePoly_2 = bigint_nondet_quot!(ctx, x2248, x6, 2);
    let x2250: BytePoly_1 = bigint_nondet_rem!(ctx, x2248, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2249, x6, 3), x2250, 3), x2248, 3),
        16259,
        2,
    )?;
    let x2251: BytePoly_2 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x2247, x2247, 2), x2200, 2), x6, 2),
            x2230,
            2
        ),
        x6,
        2
    );
    let x2252: BytePoly_3 = bigint_nondet_quot!(ctx, x2251, x6, 3);
    let x2253: BytePoly_1 = bigint_nondet_rem!(ctx, x2251, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2252, x6, 4), x2253, 4), x2251, 4),
        24387,
        2,
    )?;
    let x2254: BytePoly_2 = bigint_mul!(x2247, x2253, 2);
    let x2255: BytePoly_3 = bigint_nondet_quot!(ctx, x2254, x6, 3);
    let x2256: BytePoly_1 = bigint_nondet_rem!(ctx, x2254, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2255, x6, 4), x2256, 4), x2254, 4),
        24387,
        2,
    )?;
    let x2257: BytePoly_1 = bigint_add!(bigint_sub!(x6, bigint_add!(x2256, x2250, 1), 1), x6, 1);
    let x2258: BytePoly_1 = bigint_nondet_quot!(ctx, x2257, x6, 1);
    let x2259: BytePoly_1 = bigint_nondet_rem!(ctx, x2257, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2258, x6, 2), x2259, 2), x2257, 2),
        8131,
        2,
    )?;
    let x2260: BytePoly_2 = bigint_add!(
        bigint_mul!(x2253, x2237, 2),
        bigint_mul!(x2200, x2239, 2),
        2
    );
    let x2261: BytePoly_2 = bigint_add!(
        bigint_mul!(x2259, x2237, 2),
        bigint_mul!(x2202, x2239, 2),
        2
    );
    let x2262: BytePoly_3 = bigint_nondet_quot!(ctx, x2260, x6, 3);
    let x2263: BytePoly_1 = bigint_nondet_rem!(ctx, x2260, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2262, x6, 4), x2263, 4), x2260, 4),
        24387,
        2,
    )?;
    let x2264: BytePoly_3 = bigint_nondet_quot!(ctx, x2261, x6, 3);
    let x2265: BytePoly_1 = bigint_nondet_rem!(ctx, x2261, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2264, x6, 4), x2265, 4), x2261, 4),
        24387,
        2,
    )?;
    let x2266: BytePoly_2 = bigint_mul!(x2230, x2230, 2);
    let x2267: BytePoly_3 = bigint_nondet_quot!(ctx, x2266, x6, 3);
    let x2268: BytePoly_1 = bigint_nondet_rem!(ctx, x2266, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2267, x6, 4), x2268, 4), x2266, 4),
        24387,
        2,
    )?;
    let x2269: BytePoly_2 = bigint_add!(bigint_mul!(x2268, x0, 2), x5, 2);
    let x2270: BytePoly_3 = bigint_nondet_quot!(ctx, x2269, x6, 3);
    let x2271: BytePoly_1 = bigint_nondet_rem!(ctx, x2269, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2270, x6, 4), x2271, 4), x2269, 4),
        24387,
        2,
    )?;
    let x2272: BytePoly_1 = bigint_add!(x2236, x2236, 1);
    let x2273: BytePoly_1 = bigint_nondet_quot!(ctx, x2272, x6, 1);
    let x2274: BytePoly_1 = bigint_nondet_rem!(ctx, x2272, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2273, x6, 2), x2274, 2), x2272, 2),
        8131,
        2,
    )?;
    let x2275: BytePoly_1 = bigint_nondet_inv!(ctx, x2274, x6, 1);
    let x2276: BytePoly_2 = bigint_mul!(x2274, x2275, 2);
    let x2277: BytePoly_3 = bigint_nondet_quot!(ctx, x2276, x6, 3);
    let x2278: BytePoly_1 = bigint_nondet_rem!(ctx, x2276, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2277, x6, 4), x2278, 4), x2276, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x2278, x3, 1), 34, 1)?;
    let x2279: BytePoly_2 = bigint_mul!(x2271, x2275, 2);
    let x2280: BytePoly_3 = bigint_nondet_quot!(ctx, x2279, x6, 3);
    let x2281: BytePoly_1 = bigint_nondet_rem!(ctx, x2279, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2280, x6, 4), x2281, 4), x2279, 4),
        24387,
        2,
    )?;
    let x2282: BytePoly_2 = bigint_mul!(x2281, x2230, 2);
    let x2283: BytePoly_3 = bigint_nondet_quot!(ctx, x2282, x6, 3);
    let x2284: BytePoly_1 = bigint_nondet_rem!(ctx, x2282, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2283, x6, 4), x2284, 4), x2282, 4),
        24387,
        2,
    )?;
    let x2285: BytePoly_1 = bigint_add!(bigint_sub!(x2236, x2284, 1), x6, 1);
    let x2286: BytePoly_1 = bigint_nondet_quot!(ctx, x2285, x6, 1);
    let x2287: BytePoly_1 = bigint_nondet_rem!(ctx, x2285, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2286, x6, 2), x2287, 2), x2285, 2),
        8131,
        2,
    )?;
    let x2288: BytePoly_2 = bigint_mul!(x2281, x2281, 2);
    let x2289: BytePoly_3 = bigint_nondet_quot!(ctx, x2288, x6, 3);
    let x2290: BytePoly_1 = bigint_nondet_rem!(ctx, x2288, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2289, x6, 4), x2290, 4), x2288, 4),
        24387,
        2,
    )?;
    let x2291: BytePoly_1 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2290, x2230, 1), x6, 1), x2230, 1),
        x6,
        1
    );
    let x2292: BytePoly_1 = bigint_nondet_quot!(ctx, x2291, x6, 1);
    let x2293: BytePoly_1 = bigint_nondet_rem!(ctx, x2291, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2292, x6, 2), x2293, 2), x2291, 2),
        8131,
        2,
    )?;
    let x2294: BytePoly_2 = bigint_mul!(x2281, x2293, 2);
    let x2295: BytePoly_3 = bigint_nondet_quot!(ctx, x2294, x6, 3);
    let x2296: BytePoly_1 = bigint_nondet_rem!(ctx, x2294, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2295, x6, 4), x2296, 4), x2294, 4),
        24387,
        2,
    )?;
    let x2297: BytePoly_1 = bigint_add!(bigint_sub!(x6, bigint_add!(x2296, x2287, 1), 1), x6, 1);
    let x2298: BytePoly_1 = bigint_nondet_quot!(ctx, x2297, x6, 1);
    let x2299: BytePoly_1 = bigint_nondet_rem!(ctx, x2297, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2298, x6, 2), x2299, 2), x2297, 2),
        8131,
        2,
    )?;
    let x2300: BytePoly_1 = bigint_nondet_rem!(ctx, x2238, x2, 1);
    let x2301: BytePoly_2 = bigint_nondet_quot!(ctx, x2238, x2, 2);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2301, x2, 3), x2300, 3), x2238, 3),
        16259,
        2,
    )?;
    let x2302: BytePoly_1 = bigint_sub!(x3, x2300, 1);
    eqz(ctx, &bigint_mul!(x2300, x2302, 2), 8131, 2)?;
    let x2303: BytePoly_1 = bigint_add!(bigint_sub!(x2293, x2263, 1), x6, 1);
    let x2304: BytePoly_1 = bigint_nondet_inv!(ctx, x2303, x6, 1);
    let x2305: BytePoly_2 = bigint_mul!(x2303, x2304, 2);
    let x2306: BytePoly_3 = bigint_nondet_quot!(ctx, x2305, x6, 3);
    let x2307: BytePoly_1 = bigint_nondet_rem!(ctx, x2305, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2306, x6, 4), x2307, 4), x2305, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x2307, x1, 1), 34, 1)?;
    let x2308: BytePoly_2 = bigint_mul!(bigint_add!(bigint_sub!(x2299, x2265, 1), x6, 1), x2304, 2);
    let x2309: BytePoly_3 = bigint_nondet_quot!(ctx, x2308, x6, 3);
    let x2310: BytePoly_1 = bigint_nondet_rem!(ctx, x2308, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2309, x6, 4), x2310, 4), x2308, 4),
        24387,
        2,
    )?;
    let x2311: BytePoly_2 = bigint_add!(bigint_sub!(x2265, bigint_mul!(x2310, x2263, 2), 2), x6, 2);
    let x2312: BytePoly_2 = bigint_nondet_quot!(ctx, x2311, x6, 2);
    let x2313: BytePoly_1 = bigint_nondet_rem!(ctx, x2311, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2312, x6, 3), x2313, 3), x2311, 3),
        16259,
        2,
    )?;
    let x2314: BytePoly_2 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x2310, x2310, 2), x2263, 2), x6, 2),
            x2293,
            2
        ),
        x6,
        2
    );
    let x2315: BytePoly_3 = bigint_nondet_quot!(ctx, x2314, x6, 3);
    let x2316: BytePoly_1 = bigint_nondet_rem!(ctx, x2314, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2315, x6, 4), x2316, 4), x2314, 4),
        24387,
        2,
    )?;
    let x2317: BytePoly_2 = bigint_mul!(x2310, x2316, 2);
    let x2318: BytePoly_3 = bigint_nondet_quot!(ctx, x2317, x6, 3);
    let x2319: BytePoly_1 = bigint_nondet_rem!(ctx, x2317, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2318, x6, 4), x2319, 4), x2317, 4),
        24387,
        2,
    )?;
    let x2320: BytePoly_1 = bigint_add!(bigint_sub!(x6, bigint_add!(x2319, x2313, 1), 1), x6, 1);
    let x2321: BytePoly_1 = bigint_nondet_quot!(ctx, x2320, x6, 1);
    let x2322: BytePoly_1 = bigint_nondet_rem!(ctx, x2320, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2321, x6, 2), x2322, 2), x2320, 2),
        8131,
        2,
    )?;
    let x2323: BytePoly_2 = bigint_add!(
        bigint_mul!(x2316, x2300, 2),
        bigint_mul!(x2263, x2302, 2),
        2
    );
    let x2324: BytePoly_2 = bigint_add!(
        bigint_mul!(x2322, x2300, 2),
        bigint_mul!(x2265, x2302, 2),
        2
    );
    let x2325: BytePoly_3 = bigint_nondet_quot!(ctx, x2323, x6, 3);
    let x2326: BytePoly_1 = bigint_nondet_rem!(ctx, x2323, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2325, x6, 4), x2326, 4), x2323, 4),
        24387,
        2,
    )?;
    let x2327: BytePoly_3 = bigint_nondet_quot!(ctx, x2324, x6, 3);
    let x2328: BytePoly_1 = bigint_nondet_rem!(ctx, x2324, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2327, x6, 4), x2328, 4), x2324, 4),
        24387,
        2,
    )?;
    let x2329: BytePoly_2 = bigint_mul!(x2293, x2293, 2);
    let x2330: BytePoly_3 = bigint_nondet_quot!(ctx, x2329, x6, 3);
    let x2331: BytePoly_1 = bigint_nondet_rem!(ctx, x2329, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2330, x6, 4), x2331, 4), x2329, 4),
        24387,
        2,
    )?;
    let x2332: BytePoly_2 = bigint_add!(bigint_mul!(x2331, x0, 2), x5, 2);
    let x2333: BytePoly_3 = bigint_nondet_quot!(ctx, x2332, x6, 3);
    let x2334: BytePoly_1 = bigint_nondet_rem!(ctx, x2332, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2333, x6, 4), x2334, 4), x2332, 4),
        24387,
        2,
    )?;
    let x2335: BytePoly_1 = bigint_add!(x2299, x2299, 1);
    let x2336: BytePoly_1 = bigint_nondet_quot!(ctx, x2335, x6, 1);
    let x2337: BytePoly_1 = bigint_nondet_rem!(ctx, x2335, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2336, x6, 2), x2337, 2), x2335, 2),
        8131,
        2,
    )?;
    let x2338: BytePoly_1 = bigint_nondet_inv!(ctx, x2337, x6, 1);
    let x2339: BytePoly_2 = bigint_mul!(x2337, x2338, 2);
    let x2340: BytePoly_3 = bigint_nondet_quot!(ctx, x2339, x6, 3);
    let x2341: BytePoly_1 = bigint_nondet_rem!(ctx, x2339, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2340, x6, 4), x2341, 4), x2339, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x2341, x3, 1), 34, 1)?;
    let x2342: BytePoly_2 = bigint_mul!(x2334, x2338, 2);
    let x2343: BytePoly_3 = bigint_nondet_quot!(ctx, x2342, x6, 3);
    let x2344: BytePoly_1 = bigint_nondet_rem!(ctx, x2342, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2343, x6, 4), x2344, 4), x2342, 4),
        24387,
        2,
    )?;
    let x2345: BytePoly_2 = bigint_mul!(x2344, x2293, 2);
    let x2346: BytePoly_3 = bigint_nondet_quot!(ctx, x2345, x6, 3);
    let x2347: BytePoly_1 = bigint_nondet_rem!(ctx, x2345, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2346, x6, 4), x2347, 4), x2345, 4),
        24387,
        2,
    )?;
    let x2348: BytePoly_1 = bigint_add!(bigint_sub!(x2299, x2347, 1), x6, 1);
    let x2349: BytePoly_1 = bigint_nondet_quot!(ctx, x2348, x6, 1);
    let x2350: BytePoly_1 = bigint_nondet_rem!(ctx, x2348, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2349, x6, 2), x2350, 2), x2348, 2),
        8131,
        2,
    )?;
    let x2351: BytePoly_2 = bigint_mul!(x2344, x2344, 2);
    let x2352: BytePoly_3 = bigint_nondet_quot!(ctx, x2351, x6, 3);
    let x2353: BytePoly_1 = bigint_nondet_rem!(ctx, x2351, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2352, x6, 4), x2353, 4), x2351, 4),
        24387,
        2,
    )?;
    let x2354: BytePoly_1 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2353, x2293, 1), x6, 1), x2293, 1),
        x6,
        1
    );
    let x2355: BytePoly_1 = bigint_nondet_quot!(ctx, x2354, x6, 1);
    let x2356: BytePoly_1 = bigint_nondet_rem!(ctx, x2354, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2355, x6, 2), x2356, 2), x2354, 2),
        8131,
        2,
    )?;
    let x2357: BytePoly_2 = bigint_mul!(x2344, x2356, 2);
    let x2358: BytePoly_3 = bigint_nondet_quot!(ctx, x2357, x6, 3);
    let x2359: BytePoly_1 = bigint_nondet_rem!(ctx, x2357, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2358, x6, 4), x2359, 4), x2357, 4),
        24387,
        2,
    )?;
    let x2360: BytePoly_1 = bigint_add!(bigint_sub!(x6, bigint_add!(x2359, x2350, 1), 1), x6, 1);
    let x2361: BytePoly_1 = bigint_nondet_quot!(ctx, x2360, x6, 1);
    let x2362: BytePoly_1 = bigint_nondet_rem!(ctx, x2360, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2361, x6, 2), x2362, 2), x2360, 2),
        8131,
        2,
    )?;
    let x2363: BytePoly_1 = bigint_nondet_rem!(ctx, x2301, x2, 1);
    let x2364: BytePoly_2 = bigint_nondet_quot!(ctx, x2301, x2, 2);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2364, x2, 3), x2363, 3), x2301, 3),
        16259,
        2,
    )?;
    let x2365: BytePoly_1 = bigint_sub!(x3, x2363, 1);
    eqz(ctx, &bigint_mul!(x2363, x2365, 2), 8131, 2)?;
    let x2366: BytePoly_1 = bigint_add!(bigint_sub!(x2356, x2326, 1), x6, 1);
    let x2367: BytePoly_1 = bigint_nondet_inv!(ctx, x2366, x6, 1);
    let x2368: BytePoly_2 = bigint_mul!(x2366, x2367, 2);
    let x2369: BytePoly_3 = bigint_nondet_quot!(ctx, x2368, x6, 3);
    let x2370: BytePoly_1 = bigint_nondet_rem!(ctx, x2368, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2369, x6, 4), x2370, 4), x2368, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x2370, x1, 1), 34, 1)?;
    let x2371: BytePoly_2 = bigint_mul!(bigint_add!(bigint_sub!(x2362, x2328, 1), x6, 1), x2367, 2);
    let x2372: BytePoly_3 = bigint_nondet_quot!(ctx, x2371, x6, 3);
    let x2373: BytePoly_1 = bigint_nondet_rem!(ctx, x2371, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2372, x6, 4), x2373, 4), x2371, 4),
        24387,
        2,
    )?;
    let x2374: BytePoly_2 = bigint_add!(bigint_sub!(x2328, bigint_mul!(x2373, x2326, 2), 2), x6, 2);
    let x2375: BytePoly_2 = bigint_nondet_quot!(ctx, x2374, x6, 2);
    let x2376: BytePoly_1 = bigint_nondet_rem!(ctx, x2374, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2375, x6, 3), x2376, 3), x2374, 3),
        16259,
        2,
    )?;
    let x2377: BytePoly_2 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x2373, x2373, 2), x2326, 2), x6, 2),
            x2356,
            2
        ),
        x6,
        2
    );
    let x2378: BytePoly_3 = bigint_nondet_quot!(ctx, x2377, x6, 3);
    let x2379: BytePoly_1 = bigint_nondet_rem!(ctx, x2377, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2378, x6, 4), x2379, 4), x2377, 4),
        24387,
        2,
    )?;
    let x2380: BytePoly_2 = bigint_mul!(x2373, x2379, 2);
    let x2381: BytePoly_3 = bigint_nondet_quot!(ctx, x2380, x6, 3);
    let x2382: BytePoly_1 = bigint_nondet_rem!(ctx, x2380, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2381, x6, 4), x2382, 4), x2380, 4),
        24387,
        2,
    )?;
    let x2383: BytePoly_1 = bigint_add!(bigint_sub!(x6, bigint_add!(x2382, x2376, 1), 1), x6, 1);
    let x2384: BytePoly_1 = bigint_nondet_quot!(ctx, x2383, x6, 1);
    let x2385: BytePoly_1 = bigint_nondet_rem!(ctx, x2383, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2384, x6, 2), x2385, 2), x2383, 2),
        8131,
        2,
    )?;
    let x2386: BytePoly_2 = bigint_add!(
        bigint_mul!(x2379, x2363, 2),
        bigint_mul!(x2326, x2365, 2),
        2
    );
    let x2387: BytePoly_2 = bigint_add!(
        bigint_mul!(x2385, x2363, 2),
        bigint_mul!(x2328, x2365, 2),
        2
    );
    let x2388: BytePoly_3 = bigint_nondet_quot!(ctx, x2386, x6, 3);
    let x2389: BytePoly_1 = bigint_nondet_rem!(ctx, x2386, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2388, x6, 4), x2389, 4), x2386, 4),
        24387,
        2,
    )?;
    let x2390: BytePoly_3 = bigint_nondet_quot!(ctx, x2387, x6, 3);
    let x2391: BytePoly_1 = bigint_nondet_rem!(ctx, x2387, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2390, x6, 4), x2391, 4), x2387, 4),
        24387,
        2,
    )?;
    let x2392: BytePoly_2 = bigint_mul!(x2356, x2356, 2);
    let x2393: BytePoly_3 = bigint_nondet_quot!(ctx, x2392, x6, 3);
    let x2394: BytePoly_1 = bigint_nondet_rem!(ctx, x2392, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2393, x6, 4), x2394, 4), x2392, 4),
        24387,
        2,
    )?;
    let x2395: BytePoly_2 = bigint_add!(bigint_mul!(x2394, x0, 2), x5, 2);
    let x2396: BytePoly_3 = bigint_nondet_quot!(ctx, x2395, x6, 3);
    let x2397: BytePoly_1 = bigint_nondet_rem!(ctx, x2395, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2396, x6, 4), x2397, 4), x2395, 4),
        24387,
        2,
    )?;
    let x2398: BytePoly_1 = bigint_add!(x2362, x2362, 1);
    let x2399: BytePoly_1 = bigint_nondet_quot!(ctx, x2398, x6, 1);
    let x2400: BytePoly_1 = bigint_nondet_rem!(ctx, x2398, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2399, x6, 2), x2400, 2), x2398, 2),
        8131,
        2,
    )?;
    let x2401: BytePoly_1 = bigint_nondet_inv!(ctx, x2400, x6, 1);
    let x2402: BytePoly_2 = bigint_mul!(x2400, x2401, 2);
    let x2403: BytePoly_3 = bigint_nondet_quot!(ctx, x2402, x6, 3);
    let x2404: BytePoly_1 = bigint_nondet_rem!(ctx, x2402, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2403, x6, 4), x2404, 4), x2402, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x2404, x3, 1), 34, 1)?;
    let x2405: BytePoly_2 = bigint_mul!(x2397, x2401, 2);
    let x2406: BytePoly_3 = bigint_nondet_quot!(ctx, x2405, x6, 3);
    let x2407: BytePoly_1 = bigint_nondet_rem!(ctx, x2405, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2406, x6, 4), x2407, 4), x2405, 4),
        24387,
        2,
    )?;
    let x2408: BytePoly_2 = bigint_mul!(x2407, x2356, 2);
    let x2409: BytePoly_3 = bigint_nondet_quot!(ctx, x2408, x6, 3);
    let x2410: BytePoly_1 = bigint_nondet_rem!(ctx, x2408, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2409, x6, 4), x2410, 4), x2408, 4),
        24387,
        2,
    )?;
    let x2411: BytePoly_1 = bigint_add!(bigint_sub!(x2362, x2410, 1), x6, 1);
    let x2412: BytePoly_1 = bigint_nondet_quot!(ctx, x2411, x6, 1);
    let x2413: BytePoly_1 = bigint_nondet_rem!(ctx, x2411, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2412, x6, 2), x2413, 2), x2411, 2),
        8131,
        2,
    )?;
    let x2414: BytePoly_2 = bigint_mul!(x2407, x2407, 2);
    let x2415: BytePoly_3 = bigint_nondet_quot!(ctx, x2414, x6, 3);
    let x2416: BytePoly_1 = bigint_nondet_rem!(ctx, x2414, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2415, x6, 4), x2416, 4), x2414, 4),
        24387,
        2,
    )?;
    let x2417: BytePoly_1 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2416, x2356, 1), x6, 1), x2356, 1),
        x6,
        1
    );
    let x2418: BytePoly_1 = bigint_nondet_quot!(ctx, x2417, x6, 1);
    let x2419: BytePoly_1 = bigint_nondet_rem!(ctx, x2417, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2418, x6, 2), x2419, 2), x2417, 2),
        8131,
        2,
    )?;
    let x2420: BytePoly_2 = bigint_mul!(x2407, x2419, 2);
    let x2421: BytePoly_3 = bigint_nondet_quot!(ctx, x2420, x6, 3);
    let x2422: BytePoly_1 = bigint_nondet_rem!(ctx, x2420, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2421, x6, 4), x2422, 4), x2420, 4),
        24387,
        2,
    )?;
    let x2423: BytePoly_1 = bigint_add!(bigint_sub!(x6, bigint_add!(x2422, x2413, 1), 1), x6, 1);
    let x2424: BytePoly_1 = bigint_nondet_quot!(ctx, x2423, x6, 1);
    let x2425: BytePoly_1 = bigint_nondet_rem!(ctx, x2423, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2424, x6, 2), x2425, 2), x2423, 2),
        8131,
        2,
    )?;
    let x2426: BytePoly_1 = bigint_nondet_rem!(ctx, x2364, x2, 1);
    let x2427: BytePoly_2 = bigint_nondet_quot!(ctx, x2364, x2, 2);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2427, x2, 3), x2426, 3), x2364, 3),
        16259,
        2,
    )?;
    let x2428: BytePoly_1 = bigint_sub!(x3, x2426, 1);
    eqz(ctx, &bigint_mul!(x2426, x2428, 2), 8131, 2)?;
    let x2429: BytePoly_1 = bigint_add!(bigint_sub!(x2419, x2389, 1), x6, 1);
    let x2430: BytePoly_1 = bigint_nondet_inv!(ctx, x2429, x6, 1);
    let x2431: BytePoly_2 = bigint_mul!(x2429, x2430, 2);
    let x2432: BytePoly_3 = bigint_nondet_quot!(ctx, x2431, x6, 3);
    let x2433: BytePoly_1 = bigint_nondet_rem!(ctx, x2431, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2432, x6, 4), x2433, 4), x2431, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x2433, x1, 1), 34, 1)?;
    let x2434: BytePoly_2 = bigint_mul!(bigint_add!(bigint_sub!(x2425, x2391, 1), x6, 1), x2430, 2);
    let x2435: BytePoly_3 = bigint_nondet_quot!(ctx, x2434, x6, 3);
    let x2436: BytePoly_1 = bigint_nondet_rem!(ctx, x2434, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2435, x6, 4), x2436, 4), x2434, 4),
        24387,
        2,
    )?;
    let x2437: BytePoly_2 = bigint_add!(bigint_sub!(x2391, bigint_mul!(x2436, x2389, 2), 2), x6, 2);
    let x2438: BytePoly_2 = bigint_nondet_quot!(ctx, x2437, x6, 2);
    let x2439: BytePoly_1 = bigint_nondet_rem!(ctx, x2437, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2438, x6, 3), x2439, 3), x2437, 3),
        16259,
        2,
    )?;
    let x2440: BytePoly_2 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x2436, x2436, 2), x2389, 2), x6, 2),
            x2419,
            2
        ),
        x6,
        2
    );
    let x2441: BytePoly_3 = bigint_nondet_quot!(ctx, x2440, x6, 3);
    let x2442: BytePoly_1 = bigint_nondet_rem!(ctx, x2440, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2441, x6, 4), x2442, 4), x2440, 4),
        24387,
        2,
    )?;
    let x2443: BytePoly_2 = bigint_mul!(x2436, x2442, 2);
    let x2444: BytePoly_3 = bigint_nondet_quot!(ctx, x2443, x6, 3);
    let x2445: BytePoly_1 = bigint_nondet_rem!(ctx, x2443, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2444, x6, 4), x2445, 4), x2443, 4),
        24387,
        2,
    )?;
    let x2446: BytePoly_1 = bigint_add!(bigint_sub!(x6, bigint_add!(x2445, x2439, 1), 1), x6, 1);
    let x2447: BytePoly_1 = bigint_nondet_quot!(ctx, x2446, x6, 1);
    let x2448: BytePoly_1 = bigint_nondet_rem!(ctx, x2446, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2447, x6, 2), x2448, 2), x2446, 2),
        8131,
        2,
    )?;
    let x2449: BytePoly_2 = bigint_add!(
        bigint_mul!(x2442, x2426, 2),
        bigint_mul!(x2389, x2428, 2),
        2
    );
    let x2450: BytePoly_2 = bigint_add!(
        bigint_mul!(x2448, x2426, 2),
        bigint_mul!(x2391, x2428, 2),
        2
    );
    let x2451: BytePoly_3 = bigint_nondet_quot!(ctx, x2449, x6, 3);
    let x2452: BytePoly_1 = bigint_nondet_rem!(ctx, x2449, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2451, x6, 4), x2452, 4), x2449, 4),
        24387,
        2,
    )?;
    let x2453: BytePoly_3 = bigint_nondet_quot!(ctx, x2450, x6, 3);
    let x2454: BytePoly_1 = bigint_nondet_rem!(ctx, x2450, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2453, x6, 4), x2454, 4), x2450, 4),
        24387,
        2,
    )?;
    let x2455: BytePoly_2 = bigint_mul!(x2419, x2419, 2);
    let x2456: BytePoly_3 = bigint_nondet_quot!(ctx, x2455, x6, 3);
    let x2457: BytePoly_1 = bigint_nondet_rem!(ctx, x2455, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2456, x6, 4), x2457, 4), x2455, 4),
        24387,
        2,
    )?;
    let x2458: BytePoly_2 = bigint_add!(bigint_mul!(x2457, x0, 2), x5, 2);
    let x2459: BytePoly_3 = bigint_nondet_quot!(ctx, x2458, x6, 3);
    let x2460: BytePoly_1 = bigint_nondet_rem!(ctx, x2458, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2459, x6, 4), x2460, 4), x2458, 4),
        24387,
        2,
    )?;
    let x2461: BytePoly_1 = bigint_add!(x2425, x2425, 1);
    let x2462: BytePoly_1 = bigint_nondet_quot!(ctx, x2461, x6, 1);
    let x2463: BytePoly_1 = bigint_nondet_rem!(ctx, x2461, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2462, x6, 2), x2463, 2), x2461, 2),
        8131,
        2,
    )?;
    let x2464: BytePoly_1 = bigint_nondet_inv!(ctx, x2463, x6, 1);
    let x2465: BytePoly_2 = bigint_mul!(x2463, x2464, 2);
    let x2466: BytePoly_3 = bigint_nondet_quot!(ctx, x2465, x6, 3);
    let x2467: BytePoly_1 = bigint_nondet_rem!(ctx, x2465, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2466, x6, 4), x2467, 4), x2465, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x2467, x3, 1), 34, 1)?;
    let x2468: BytePoly_2 = bigint_mul!(x2460, x2464, 2);
    let x2469: BytePoly_3 = bigint_nondet_quot!(ctx, x2468, x6, 3);
    let x2470: BytePoly_1 = bigint_nondet_rem!(ctx, x2468, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2469, x6, 4), x2470, 4), x2468, 4),
        24387,
        2,
    )?;
    let x2471: BytePoly_2 = bigint_mul!(x2470, x2419, 2);
    let x2472: BytePoly_3 = bigint_nondet_quot!(ctx, x2471, x6, 3);
    let x2473: BytePoly_1 = bigint_nondet_rem!(ctx, x2471, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2472, x6, 4), x2473, 4), x2471, 4),
        24387,
        2,
    )?;
    let x2474: BytePoly_1 = bigint_add!(bigint_sub!(x2425, x2473, 1), x6, 1);
    let x2475: BytePoly_1 = bigint_nondet_quot!(ctx, x2474, x6, 1);
    let x2476: BytePoly_1 = bigint_nondet_rem!(ctx, x2474, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2475, x6, 2), x2476, 2), x2474, 2),
        8131,
        2,
    )?;
    let x2477: BytePoly_2 = bigint_mul!(x2470, x2470, 2);
    let x2478: BytePoly_3 = bigint_nondet_quot!(ctx, x2477, x6, 3);
    let x2479: BytePoly_1 = bigint_nondet_rem!(ctx, x2477, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2478, x6, 4), x2479, 4), x2477, 4),
        24387,
        2,
    )?;
    let x2480: BytePoly_1 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2479, x2419, 1), x6, 1), x2419, 1),
        x6,
        1
    );
    let x2481: BytePoly_1 = bigint_nondet_quot!(ctx, x2480, x6, 1);
    let x2482: BytePoly_1 = bigint_nondet_rem!(ctx, x2480, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2481, x6, 2), x2482, 2), x2480, 2),
        8131,
        2,
    )?;
    let x2483: BytePoly_2 = bigint_mul!(x2470, x2482, 2);
    let x2484: BytePoly_3 = bigint_nondet_quot!(ctx, x2483, x6, 3);
    let x2485: BytePoly_1 = bigint_nondet_rem!(ctx, x2483, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2484, x6, 4), x2485, 4), x2483, 4),
        24387,
        2,
    )?;
    let x2486: BytePoly_1 = bigint_add!(bigint_sub!(x6, bigint_add!(x2485, x2476, 1), 1), x6, 1);
    let x2487: BytePoly_1 = bigint_nondet_quot!(ctx, x2486, x6, 1);
    let x2488: BytePoly_1 = bigint_nondet_rem!(ctx, x2486, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2487, x6, 2), x2488, 2), x2486, 2),
        8131,
        2,
    )?;
    let x2489: BytePoly_1 = bigint_nondet_rem!(ctx, x2427, x2, 1);
    let x2490: BytePoly_2 = bigint_nondet_quot!(ctx, x2427, x2, 2);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2490, x2, 3), x2489, 3), x2427, 3),
        16259,
        2,
    )?;
    let x2491: BytePoly_1 = bigint_sub!(x3, x2489, 1);
    eqz(ctx, &bigint_mul!(x2489, x2491, 2), 8131, 2)?;
    let x2492: BytePoly_1 = bigint_add!(bigint_sub!(x2482, x2452, 1), x6, 1);
    let x2493: BytePoly_1 = bigint_nondet_inv!(ctx, x2492, x6, 1);
    let x2494: BytePoly_2 = bigint_mul!(x2492, x2493, 2);
    let x2495: BytePoly_3 = bigint_nondet_quot!(ctx, x2494, x6, 3);
    let x2496: BytePoly_1 = bigint_nondet_rem!(ctx, x2494, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2495, x6, 4), x2496, 4), x2494, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x2496, x1, 1), 34, 1)?;
    let x2497: BytePoly_2 = bigint_mul!(bigint_add!(bigint_sub!(x2488, x2454, 1), x6, 1), x2493, 2);
    let x2498: BytePoly_3 = bigint_nondet_quot!(ctx, x2497, x6, 3);
    let x2499: BytePoly_1 = bigint_nondet_rem!(ctx, x2497, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2498, x6, 4), x2499, 4), x2497, 4),
        24387,
        2,
    )?;
    let x2500: BytePoly_2 = bigint_add!(bigint_sub!(x2454, bigint_mul!(x2499, x2452, 2), 2), x6, 2);
    let x2501: BytePoly_2 = bigint_nondet_quot!(ctx, x2500, x6, 2);
    let x2502: BytePoly_1 = bigint_nondet_rem!(ctx, x2500, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2501, x6, 3), x2502, 3), x2500, 3),
        16259,
        2,
    )?;
    let x2503: BytePoly_2 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x2499, x2499, 2), x2452, 2), x6, 2),
            x2482,
            2
        ),
        x6,
        2
    );
    let x2504: BytePoly_3 = bigint_nondet_quot!(ctx, x2503, x6, 3);
    let x2505: BytePoly_1 = bigint_nondet_rem!(ctx, x2503, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2504, x6, 4), x2505, 4), x2503, 4),
        24387,
        2,
    )?;
    let x2506: BytePoly_2 = bigint_mul!(x2499, x2505, 2);
    let x2507: BytePoly_3 = bigint_nondet_quot!(ctx, x2506, x6, 3);
    let x2508: BytePoly_1 = bigint_nondet_rem!(ctx, x2506, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2507, x6, 4), x2508, 4), x2506, 4),
        24387,
        2,
    )?;
    let x2509: BytePoly_1 = bigint_add!(bigint_sub!(x6, bigint_add!(x2508, x2502, 1), 1), x6, 1);
    let x2510: BytePoly_1 = bigint_nondet_quot!(ctx, x2509, x6, 1);
    let x2511: BytePoly_1 = bigint_nondet_rem!(ctx, x2509, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2510, x6, 2), x2511, 2), x2509, 2),
        8131,
        2,
    )?;
    let x2512: BytePoly_2 = bigint_add!(
        bigint_mul!(x2505, x2489, 2),
        bigint_mul!(x2452, x2491, 2),
        2
    );
    let x2513: BytePoly_2 = bigint_add!(
        bigint_mul!(x2511, x2489, 2),
        bigint_mul!(x2454, x2491, 2),
        2
    );
    let x2514: BytePoly_3 = bigint_nondet_quot!(ctx, x2512, x6, 3);
    let x2515: BytePoly_1 = bigint_nondet_rem!(ctx, x2512, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2514, x6, 4), x2515, 4), x2512, 4),
        24387,
        2,
    )?;
    let x2516: BytePoly_3 = bigint_nondet_quot!(ctx, x2513, x6, 3);
    let x2517: BytePoly_1 = bigint_nondet_rem!(ctx, x2513, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2516, x6, 4), x2517, 4), x2513, 4),
        24387,
        2,
    )?;
    let x2518: BytePoly_2 = bigint_mul!(x2482, x2482, 2);
    let x2519: BytePoly_3 = bigint_nondet_quot!(ctx, x2518, x6, 3);
    let x2520: BytePoly_1 = bigint_nondet_rem!(ctx, x2518, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2519, x6, 4), x2520, 4), x2518, 4),
        24387,
        2,
    )?;
    let x2521: BytePoly_2 = bigint_add!(bigint_mul!(x2520, x0, 2), x5, 2);
    let x2522: BytePoly_3 = bigint_nondet_quot!(ctx, x2521, x6, 3);
    let x2523: BytePoly_1 = bigint_nondet_rem!(ctx, x2521, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2522, x6, 4), x2523, 4), x2521, 4),
        24387,
        2,
    )?;
    let x2524: BytePoly_1 = bigint_add!(x2488, x2488, 1);
    let x2525: BytePoly_1 = bigint_nondet_quot!(ctx, x2524, x6, 1);
    let x2526: BytePoly_1 = bigint_nondet_rem!(ctx, x2524, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2525, x6, 2), x2526, 2), x2524, 2),
        8131,
        2,
    )?;
    let x2527: BytePoly_1 = bigint_nondet_inv!(ctx, x2526, x6, 1);
    let x2528: BytePoly_2 = bigint_mul!(x2526, x2527, 2);
    let x2529: BytePoly_3 = bigint_nondet_quot!(ctx, x2528, x6, 3);
    let x2530: BytePoly_1 = bigint_nondet_rem!(ctx, x2528, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2529, x6, 4), x2530, 4), x2528, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x2530, x3, 1), 34, 1)?;
    let x2531: BytePoly_2 = bigint_mul!(x2523, x2527, 2);
    let x2532: BytePoly_3 = bigint_nondet_quot!(ctx, x2531, x6, 3);
    let x2533: BytePoly_1 = bigint_nondet_rem!(ctx, x2531, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2532, x6, 4), x2533, 4), x2531, 4),
        24387,
        2,
    )?;
    let x2534: BytePoly_2 = bigint_mul!(x2533, x2482, 2);
    let x2535: BytePoly_3 = bigint_nondet_quot!(ctx, x2534, x6, 3);
    let x2536: BytePoly_1 = bigint_nondet_rem!(ctx, x2534, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2535, x6, 4), x2536, 4), x2534, 4),
        24387,
        2,
    )?;
    let x2537: BytePoly_1 = bigint_add!(bigint_sub!(x2488, x2536, 1), x6, 1);
    let x2538: BytePoly_1 = bigint_nondet_quot!(ctx, x2537, x6, 1);
    let x2539: BytePoly_1 = bigint_nondet_rem!(ctx, x2537, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2538, x6, 2), x2539, 2), x2537, 2),
        8131,
        2,
    )?;
    let x2540: BytePoly_2 = bigint_mul!(x2533, x2533, 2);
    let x2541: BytePoly_3 = bigint_nondet_quot!(ctx, x2540, x6, 3);
    let x2542: BytePoly_1 = bigint_nondet_rem!(ctx, x2540, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2541, x6, 4), x2542, 4), x2540, 4),
        24387,
        2,
    )?;
    let x2543: BytePoly_1 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2542, x2482, 1), x6, 1), x2482, 1),
        x6,
        1
    );
    let x2544: BytePoly_1 = bigint_nondet_quot!(ctx, x2543, x6, 1);
    let x2545: BytePoly_1 = bigint_nondet_rem!(ctx, x2543, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2544, x6, 2), x2545, 2), x2543, 2),
        8131,
        2,
    )?;
    let x2546: BytePoly_2 = bigint_mul!(x2533, x2545, 2);
    let x2547: BytePoly_3 = bigint_nondet_quot!(ctx, x2546, x6, 3);
    let x2548: BytePoly_1 = bigint_nondet_rem!(ctx, x2546, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2547, x6, 4), x2548, 4), x2546, 4),
        24387,
        2,
    )?;
    let x2549: BytePoly_1 = bigint_add!(bigint_sub!(x6, bigint_add!(x2548, x2539, 1), 1), x6, 1);
    let x2550: BytePoly_1 = bigint_nondet_quot!(ctx, x2549, x6, 1);
    let x2551: BytePoly_1 = bigint_nondet_rem!(ctx, x2549, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2550, x6, 2), x2551, 2), x2549, 2),
        8131,
        2,
    )?;
    let x2552: BytePoly_1 = bigint_nondet_rem!(ctx, x2490, x2, 1);
    let x2553: BytePoly_2 = bigint_nondet_quot!(ctx, x2490, x2, 2);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2553, x2, 3), x2552, 3), x2490, 3),
        16259,
        2,
    )?;
    let x2554: BytePoly_1 = bigint_sub!(x3, x2552, 1);
    eqz(ctx, &bigint_mul!(x2552, x2554, 2), 8131, 2)?;
    let x2555: BytePoly_1 = bigint_add!(bigint_sub!(x2545, x2515, 1), x6, 1);
    let x2556: BytePoly_1 = bigint_nondet_inv!(ctx, x2555, x6, 1);
    let x2557: BytePoly_2 = bigint_mul!(x2555, x2556, 2);
    let x2558: BytePoly_3 = bigint_nondet_quot!(ctx, x2557, x6, 3);
    let x2559: BytePoly_1 = bigint_nondet_rem!(ctx, x2557, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2558, x6, 4), x2559, 4), x2557, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x2559, x1, 1), 34, 1)?;
    let x2560: BytePoly_2 = bigint_mul!(bigint_add!(bigint_sub!(x2551, x2517, 1), x6, 1), x2556, 2);
    let x2561: BytePoly_3 = bigint_nondet_quot!(ctx, x2560, x6, 3);
    let x2562: BytePoly_1 = bigint_nondet_rem!(ctx, x2560, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2561, x6, 4), x2562, 4), x2560, 4),
        24387,
        2,
    )?;
    let x2563: BytePoly_2 = bigint_add!(bigint_sub!(x2517, bigint_mul!(x2562, x2515, 2), 2), x6, 2);
    let x2564: BytePoly_2 = bigint_nondet_quot!(ctx, x2563, x6, 2);
    let x2565: BytePoly_1 = bigint_nondet_rem!(ctx, x2563, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2564, x6, 3), x2565, 3), x2563, 3),
        16259,
        2,
    )?;
    let x2566: BytePoly_2 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x2562, x2562, 2), x2515, 2), x6, 2),
            x2545,
            2
        ),
        x6,
        2
    );
    let x2567: BytePoly_3 = bigint_nondet_quot!(ctx, x2566, x6, 3);
    let x2568: BytePoly_1 = bigint_nondet_rem!(ctx, x2566, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2567, x6, 4), x2568, 4), x2566, 4),
        24387,
        2,
    )?;
    let x2569: BytePoly_2 = bigint_mul!(x2562, x2568, 2);
    let x2570: BytePoly_3 = bigint_nondet_quot!(ctx, x2569, x6, 3);
    let x2571: BytePoly_1 = bigint_nondet_rem!(ctx, x2569, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2570, x6, 4), x2571, 4), x2569, 4),
        24387,
        2,
    )?;
    let x2572: BytePoly_1 = bigint_add!(bigint_sub!(x6, bigint_add!(x2571, x2565, 1), 1), x6, 1);
    let x2573: BytePoly_1 = bigint_nondet_quot!(ctx, x2572, x6, 1);
    let x2574: BytePoly_1 = bigint_nondet_rem!(ctx, x2572, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2573, x6, 2), x2574, 2), x2572, 2),
        8131,
        2,
    )?;
    let x2575: BytePoly_2 = bigint_add!(
        bigint_mul!(x2568, x2552, 2),
        bigint_mul!(x2515, x2554, 2),
        2
    );
    let x2576: BytePoly_2 = bigint_add!(
        bigint_mul!(x2574, x2552, 2),
        bigint_mul!(x2517, x2554, 2),
        2
    );
    let x2577: BytePoly_3 = bigint_nondet_quot!(ctx, x2575, x6, 3);
    let x2578: BytePoly_1 = bigint_nondet_rem!(ctx, x2575, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2577, x6, 4), x2578, 4), x2575, 4),
        24387,
        2,
    )?;
    let x2579: BytePoly_3 = bigint_nondet_quot!(ctx, x2576, x6, 3);
    let x2580: BytePoly_1 = bigint_nondet_rem!(ctx, x2576, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2579, x6, 4), x2580, 4), x2576, 4),
        24387,
        2,
    )?;
    let x2581: BytePoly_2 = bigint_mul!(x2545, x2545, 2);
    let x2582: BytePoly_3 = bigint_nondet_quot!(ctx, x2581, x6, 3);
    let x2583: BytePoly_1 = bigint_nondet_rem!(ctx, x2581, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2582, x6, 4), x2583, 4), x2581, 4),
        24387,
        2,
    )?;
    let x2584: BytePoly_2 = bigint_add!(bigint_mul!(x2583, x0, 2), x5, 2);
    let x2585: BytePoly_3 = bigint_nondet_quot!(ctx, x2584, x6, 3);
    let x2586: BytePoly_1 = bigint_nondet_rem!(ctx, x2584, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2585, x6, 4), x2586, 4), x2584, 4),
        24387,
        2,
    )?;
    let x2587: BytePoly_1 = bigint_add!(x2551, x2551, 1);
    let x2588: BytePoly_1 = bigint_nondet_quot!(ctx, x2587, x6, 1);
    let x2589: BytePoly_1 = bigint_nondet_rem!(ctx, x2587, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2588, x6, 2), x2589, 2), x2587, 2),
        8131,
        2,
    )?;
    let x2590: BytePoly_1 = bigint_nondet_inv!(ctx, x2589, x6, 1);
    let x2591: BytePoly_2 = bigint_mul!(x2589, x2590, 2);
    let x2592: BytePoly_3 = bigint_nondet_quot!(ctx, x2591, x6, 3);
    let x2593: BytePoly_1 = bigint_nondet_rem!(ctx, x2591, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2592, x6, 4), x2593, 4), x2591, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x2593, x3, 1), 34, 1)?;
    let x2594: BytePoly_2 = bigint_mul!(x2586, x2590, 2);
    let x2595: BytePoly_3 = bigint_nondet_quot!(ctx, x2594, x6, 3);
    let x2596: BytePoly_1 = bigint_nondet_rem!(ctx, x2594, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2595, x6, 4), x2596, 4), x2594, 4),
        24387,
        2,
    )?;
    let x2597: BytePoly_2 = bigint_mul!(x2596, x2545, 2);
    let x2598: BytePoly_3 = bigint_nondet_quot!(ctx, x2597, x6, 3);
    let x2599: BytePoly_1 = bigint_nondet_rem!(ctx, x2597, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2598, x6, 4), x2599, 4), x2597, 4),
        24387,
        2,
    )?;
    let x2600: BytePoly_1 = bigint_add!(bigint_sub!(x2551, x2599, 1), x6, 1);
    let x2601: BytePoly_1 = bigint_nondet_quot!(ctx, x2600, x6, 1);
    let x2602: BytePoly_1 = bigint_nondet_rem!(ctx, x2600, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2601, x6, 2), x2602, 2), x2600, 2),
        8131,
        2,
    )?;
    let x2603: BytePoly_2 = bigint_mul!(x2596, x2596, 2);
    let x2604: BytePoly_3 = bigint_nondet_quot!(ctx, x2603, x6, 3);
    let x2605: BytePoly_1 = bigint_nondet_rem!(ctx, x2603, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2604, x6, 4), x2605, 4), x2603, 4),
        24387,
        2,
    )?;
    let x2606: BytePoly_1 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2605, x2545, 1), x6, 1), x2545, 1),
        x6,
        1
    );
    let x2607: BytePoly_1 = bigint_nondet_quot!(ctx, x2606, x6, 1);
    let x2608: BytePoly_1 = bigint_nondet_rem!(ctx, x2606, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2607, x6, 2), x2608, 2), x2606, 2),
        8131,
        2,
    )?;
    let x2609: BytePoly_2 = bigint_mul!(x2596, x2608, 2);
    let x2610: BytePoly_3 = bigint_nondet_quot!(ctx, x2609, x6, 3);
    let x2611: BytePoly_1 = bigint_nondet_rem!(ctx, x2609, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2610, x6, 4), x2611, 4), x2609, 4),
        24387,
        2,
    )?;
    let x2612: BytePoly_1 = bigint_add!(bigint_sub!(x6, bigint_add!(x2611, x2602, 1), 1), x6, 1);
    let x2613: BytePoly_1 = bigint_nondet_quot!(ctx, x2612, x6, 1);
    let x2614: BytePoly_1 = bigint_nondet_rem!(ctx, x2612, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2613, x6, 2), x2614, 2), x2612, 2),
        8131,
        2,
    )?;
    let x2615: BytePoly_1 = bigint_nondet_rem!(ctx, x2553, x2, 1);
    let x2616: BytePoly_2 = bigint_nondet_quot!(ctx, x2553, x2, 2);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2616, x2, 3), x2615, 3), x2553, 3),
        16259,
        2,
    )?;
    let x2617: BytePoly_1 = bigint_sub!(x3, x2615, 1);
    eqz(ctx, &bigint_mul!(x2615, x2617, 2), 8131, 2)?;
    let x2618: BytePoly_1 = bigint_add!(bigint_sub!(x2608, x2578, 1), x6, 1);
    let x2619: BytePoly_1 = bigint_nondet_inv!(ctx, x2618, x6, 1);
    let x2620: BytePoly_2 = bigint_mul!(x2618, x2619, 2);
    let x2621: BytePoly_3 = bigint_nondet_quot!(ctx, x2620, x6, 3);
    let x2622: BytePoly_1 = bigint_nondet_rem!(ctx, x2620, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2621, x6, 4), x2622, 4), x2620, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x2622, x1, 1), 34, 1)?;
    let x2623: BytePoly_2 = bigint_mul!(bigint_add!(bigint_sub!(x2614, x2580, 1), x6, 1), x2619, 2);
    let x2624: BytePoly_3 = bigint_nondet_quot!(ctx, x2623, x6, 3);
    let x2625: BytePoly_1 = bigint_nondet_rem!(ctx, x2623, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2624, x6, 4), x2625, 4), x2623, 4),
        24387,
        2,
    )?;
    let x2626: BytePoly_2 = bigint_add!(bigint_sub!(x2580, bigint_mul!(x2625, x2578, 2), 2), x6, 2);
    let x2627: BytePoly_2 = bigint_nondet_quot!(ctx, x2626, x6, 2);
    let x2628: BytePoly_1 = bigint_nondet_rem!(ctx, x2626, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2627, x6, 3), x2628, 3), x2626, 3),
        16259,
        2,
    )?;
    let x2629: BytePoly_2 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x2625, x2625, 2), x2578, 2), x6, 2),
            x2608,
            2
        ),
        x6,
        2
    );
    let x2630: BytePoly_3 = bigint_nondet_quot!(ctx, x2629, x6, 3);
    let x2631: BytePoly_1 = bigint_nondet_rem!(ctx, x2629, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2630, x6, 4), x2631, 4), x2629, 4),
        24387,
        2,
    )?;
    let x2632: BytePoly_2 = bigint_mul!(x2625, x2631, 2);
    let x2633: BytePoly_3 = bigint_nondet_quot!(ctx, x2632, x6, 3);
    let x2634: BytePoly_1 = bigint_nondet_rem!(ctx, x2632, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2633, x6, 4), x2634, 4), x2632, 4),
        24387,
        2,
    )?;
    let x2635: BytePoly_1 = bigint_add!(bigint_sub!(x6, bigint_add!(x2634, x2628, 1), 1), x6, 1);
    let x2636: BytePoly_1 = bigint_nondet_quot!(ctx, x2635, x6, 1);
    let x2637: BytePoly_1 = bigint_nondet_rem!(ctx, x2635, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2636, x6, 2), x2637, 2), x2635, 2),
        8131,
        2,
    )?;
    let x2638: BytePoly_2 = bigint_add!(
        bigint_mul!(x2631, x2615, 2),
        bigint_mul!(x2578, x2617, 2),
        2
    );
    let x2639: BytePoly_2 = bigint_add!(
        bigint_mul!(x2637, x2615, 2),
        bigint_mul!(x2580, x2617, 2),
        2
    );
    let x2640: BytePoly_3 = bigint_nondet_quot!(ctx, x2638, x6, 3);
    let x2641: BytePoly_1 = bigint_nondet_rem!(ctx, x2638, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2640, x6, 4), x2641, 4), x2638, 4),
        24387,
        2,
    )?;
    let x2642: BytePoly_3 = bigint_nondet_quot!(ctx, x2639, x6, 3);
    let x2643: BytePoly_1 = bigint_nondet_rem!(ctx, x2639, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2642, x6, 4), x2643, 4), x2639, 4),
        24387,
        2,
    )?;
    let x2644: BytePoly_2 = bigint_mul!(x2608, x2608, 2);
    let x2645: BytePoly_3 = bigint_nondet_quot!(ctx, x2644, x6, 3);
    let x2646: BytePoly_1 = bigint_nondet_rem!(ctx, x2644, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2645, x6, 4), x2646, 4), x2644, 4),
        24387,
        2,
    )?;
    let x2647: BytePoly_2 = bigint_add!(bigint_mul!(x2646, x0, 2), x5, 2);
    let x2648: BytePoly_3 = bigint_nondet_quot!(ctx, x2647, x6, 3);
    let x2649: BytePoly_1 = bigint_nondet_rem!(ctx, x2647, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2648, x6, 4), x2649, 4), x2647, 4),
        24387,
        2,
    )?;
    let x2650: BytePoly_1 = bigint_add!(x2614, x2614, 1);
    let x2651: BytePoly_1 = bigint_nondet_quot!(ctx, x2650, x6, 1);
    let x2652: BytePoly_1 = bigint_nondet_rem!(ctx, x2650, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2651, x6, 2), x2652, 2), x2650, 2),
        8131,
        2,
    )?;
    let x2653: BytePoly_1 = bigint_nondet_inv!(ctx, x2652, x6, 1);
    let x2654: BytePoly_2 = bigint_mul!(x2652, x2653, 2);
    let x2655: BytePoly_3 = bigint_nondet_quot!(ctx, x2654, x6, 3);
    let x2656: BytePoly_1 = bigint_nondet_rem!(ctx, x2654, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2655, x6, 4), x2656, 4), x2654, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x2656, x3, 1), 34, 1)?;
    let x2657: BytePoly_2 = bigint_mul!(x2649, x2653, 2);
    let x2658: BytePoly_3 = bigint_nondet_quot!(ctx, x2657, x6, 3);
    let x2659: BytePoly_1 = bigint_nondet_rem!(ctx, x2657, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2658, x6, 4), x2659, 4), x2657, 4),
        24387,
        2,
    )?;
    let x2660: BytePoly_2 = bigint_mul!(x2659, x2608, 2);
    let x2661: BytePoly_3 = bigint_nondet_quot!(ctx, x2660, x6, 3);
    let x2662: BytePoly_1 = bigint_nondet_rem!(ctx, x2660, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2661, x6, 4), x2662, 4), x2660, 4),
        24387,
        2,
    )?;
    let x2663: BytePoly_1 = bigint_add!(bigint_sub!(x2614, x2662, 1), x6, 1);
    let x2664: BytePoly_1 = bigint_nondet_quot!(ctx, x2663, x6, 1);
    let x2665: BytePoly_1 = bigint_nondet_rem!(ctx, x2663, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2664, x6, 2), x2665, 2), x2663, 2),
        8131,
        2,
    )?;
    let x2666: BytePoly_2 = bigint_mul!(x2659, x2659, 2);
    let x2667: BytePoly_3 = bigint_nondet_quot!(ctx, x2666, x6, 3);
    let x2668: BytePoly_1 = bigint_nondet_rem!(ctx, x2666, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2667, x6, 4), x2668, 4), x2666, 4),
        24387,
        2,
    )?;
    let x2669: BytePoly_1 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2668, x2608, 1), x6, 1), x2608, 1),
        x6,
        1
    );
    let x2670: BytePoly_1 = bigint_nondet_quot!(ctx, x2669, x6, 1);
    let x2671: BytePoly_1 = bigint_nondet_rem!(ctx, x2669, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2670, x6, 2), x2671, 2), x2669, 2),
        8131,
        2,
    )?;
    let x2672: BytePoly_2 = bigint_mul!(x2659, x2671, 2);
    let x2673: BytePoly_3 = bigint_nondet_quot!(ctx, x2672, x6, 3);
    let x2674: BytePoly_1 = bigint_nondet_rem!(ctx, x2672, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2673, x6, 4), x2674, 4), x2672, 4),
        24387,
        2,
    )?;
    let x2675: BytePoly_1 = bigint_add!(bigint_sub!(x6, bigint_add!(x2674, x2665, 1), 1), x6, 1);
    let x2676: BytePoly_1 = bigint_nondet_quot!(ctx, x2675, x6, 1);
    let x2677: BytePoly_1 = bigint_nondet_rem!(ctx, x2675, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2676, x6, 2), x2677, 2), x2675, 2),
        8131,
        2,
    )?;
    let x2678: BytePoly_1 = bigint_nondet_rem!(ctx, x2616, x2, 1);
    let x2679: BytePoly_2 = bigint_nondet_quot!(ctx, x2616, x2, 2);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2679, x2, 3), x2678, 3), x2616, 3),
        16259,
        2,
    )?;
    let x2680: BytePoly_1 = bigint_sub!(x3, x2678, 1);
    eqz(ctx, &bigint_mul!(x2678, x2680, 2), 8131, 2)?;
    let x2681: BytePoly_1 = bigint_add!(bigint_sub!(x2671, x2641, 1), x6, 1);
    let x2682: BytePoly_1 = bigint_nondet_inv!(ctx, x2681, x6, 1);
    let x2683: BytePoly_2 = bigint_mul!(x2681, x2682, 2);
    let x2684: BytePoly_3 = bigint_nondet_quot!(ctx, x2683, x6, 3);
    let x2685: BytePoly_1 = bigint_nondet_rem!(ctx, x2683, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2684, x6, 4), x2685, 4), x2683, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x2685, x1, 1), 34, 1)?;
    let x2686: BytePoly_2 = bigint_mul!(bigint_add!(bigint_sub!(x2677, x2643, 1), x6, 1), x2682, 2);
    let x2687: BytePoly_3 = bigint_nondet_quot!(ctx, x2686, x6, 3);
    let x2688: BytePoly_1 = bigint_nondet_rem!(ctx, x2686, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2687, x6, 4), x2688, 4), x2686, 4),
        24387,
        2,
    )?;
    let x2689: BytePoly_2 = bigint_add!(bigint_sub!(x2643, bigint_mul!(x2688, x2641, 2), 2), x6, 2);
    let x2690: BytePoly_2 = bigint_nondet_quot!(ctx, x2689, x6, 2);
    let x2691: BytePoly_1 = bigint_nondet_rem!(ctx, x2689, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2690, x6, 3), x2691, 3), x2689, 3),
        16259,
        2,
    )?;
    let x2692: BytePoly_2 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x2688, x2688, 2), x2641, 2), x6, 2),
            x2671,
            2
        ),
        x6,
        2
    );
    let x2693: BytePoly_3 = bigint_nondet_quot!(ctx, x2692, x6, 3);
    let x2694: BytePoly_1 = bigint_nondet_rem!(ctx, x2692, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2693, x6, 4), x2694, 4), x2692, 4),
        24387,
        2,
    )?;
    let x2695: BytePoly_2 = bigint_mul!(x2688, x2694, 2);
    let x2696: BytePoly_3 = bigint_nondet_quot!(ctx, x2695, x6, 3);
    let x2697: BytePoly_1 = bigint_nondet_rem!(ctx, x2695, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2696, x6, 4), x2697, 4), x2695, 4),
        24387,
        2,
    )?;
    let x2698: BytePoly_1 = bigint_add!(bigint_sub!(x6, bigint_add!(x2697, x2691, 1), 1), x6, 1);
    let x2699: BytePoly_1 = bigint_nondet_quot!(ctx, x2698, x6, 1);
    let x2700: BytePoly_1 = bigint_nondet_rem!(ctx, x2698, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2699, x6, 2), x2700, 2), x2698, 2),
        8131,
        2,
    )?;
    let x2701: BytePoly_2 = bigint_add!(
        bigint_mul!(x2694, x2678, 2),
        bigint_mul!(x2641, x2680, 2),
        2
    );
    let x2702: BytePoly_2 = bigint_add!(
        bigint_mul!(x2700, x2678, 2),
        bigint_mul!(x2643, x2680, 2),
        2
    );
    let x2703: BytePoly_3 = bigint_nondet_quot!(ctx, x2701, x6, 3);
    let x2704: BytePoly_1 = bigint_nondet_rem!(ctx, x2701, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2703, x6, 4), x2704, 4), x2701, 4),
        24387,
        2,
    )?;
    let x2705: BytePoly_3 = bigint_nondet_quot!(ctx, x2702, x6, 3);
    let x2706: BytePoly_1 = bigint_nondet_rem!(ctx, x2702, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2705, x6, 4), x2706, 4), x2702, 4),
        24387,
        2,
    )?;
    let x2707: BytePoly_2 = bigint_mul!(x2671, x2671, 2);
    let x2708: BytePoly_3 = bigint_nondet_quot!(ctx, x2707, x6, 3);
    let x2709: BytePoly_1 = bigint_nondet_rem!(ctx, x2707, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2708, x6, 4), x2709, 4), x2707, 4),
        24387,
        2,
    )?;
    let x2710: BytePoly_2 = bigint_add!(bigint_mul!(x2709, x0, 2), x5, 2);
    let x2711: BytePoly_3 = bigint_nondet_quot!(ctx, x2710, x6, 3);
    let x2712: BytePoly_1 = bigint_nondet_rem!(ctx, x2710, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2711, x6, 4), x2712, 4), x2710, 4),
        24387,
        2,
    )?;
    let x2713: BytePoly_1 = bigint_add!(x2677, x2677, 1);
    let x2714: BytePoly_1 = bigint_nondet_quot!(ctx, x2713, x6, 1);
    let x2715: BytePoly_1 = bigint_nondet_rem!(ctx, x2713, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2714, x6, 2), x2715, 2), x2713, 2),
        8131,
        2,
    )?;
    let x2716: BytePoly_1 = bigint_nondet_inv!(ctx, x2715, x6, 1);
    let x2717: BytePoly_2 = bigint_mul!(x2715, x2716, 2);
    let x2718: BytePoly_3 = bigint_nondet_quot!(ctx, x2717, x6, 3);
    let x2719: BytePoly_1 = bigint_nondet_rem!(ctx, x2717, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2718, x6, 4), x2719, 4), x2717, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x2719, x3, 1), 34, 1)?;
    let x2720: BytePoly_2 = bigint_mul!(x2712, x2716, 2);
    let x2721: BytePoly_3 = bigint_nondet_quot!(ctx, x2720, x6, 3);
    let x2722: BytePoly_1 = bigint_nondet_rem!(ctx, x2720, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2721, x6, 4), x2722, 4), x2720, 4),
        24387,
        2,
    )?;
    let x2723: BytePoly_2 = bigint_mul!(x2722, x2671, 2);
    let x2724: BytePoly_3 = bigint_nondet_quot!(ctx, x2723, x6, 3);
    let x2725: BytePoly_1 = bigint_nondet_rem!(ctx, x2723, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2724, x6, 4), x2725, 4), x2723, 4),
        24387,
        2,
    )?;
    let x2726: BytePoly_1 = bigint_add!(bigint_sub!(x2677, x2725, 1), x6, 1);
    let x2727: BytePoly_1 = bigint_nondet_quot!(ctx, x2726, x6, 1);
    let x2728: BytePoly_1 = bigint_nondet_rem!(ctx, x2726, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2727, x6, 2), x2728, 2), x2726, 2),
        8131,
        2,
    )?;
    let x2729: BytePoly_2 = bigint_mul!(x2722, x2722, 2);
    let x2730: BytePoly_3 = bigint_nondet_quot!(ctx, x2729, x6, 3);
    let x2731: BytePoly_1 = bigint_nondet_rem!(ctx, x2729, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2730, x6, 4), x2731, 4), x2729, 4),
        24387,
        2,
    )?;
    let x2732: BytePoly_1 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2731, x2671, 1), x6, 1), x2671, 1),
        x6,
        1
    );
    let x2733: BytePoly_1 = bigint_nondet_quot!(ctx, x2732, x6, 1);
    let x2734: BytePoly_1 = bigint_nondet_rem!(ctx, x2732, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2733, x6, 2), x2734, 2), x2732, 2),
        8131,
        2,
    )?;
    let x2735: BytePoly_2 = bigint_mul!(x2722, x2734, 2);
    let x2736: BytePoly_3 = bigint_nondet_quot!(ctx, x2735, x6, 3);
    let x2737: BytePoly_1 = bigint_nondet_rem!(ctx, x2735, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2736, x6, 4), x2737, 4), x2735, 4),
        24387,
        2,
    )?;
    let x2738: BytePoly_1 = bigint_add!(bigint_sub!(x6, bigint_add!(x2737, x2728, 1), 1), x6, 1);
    let x2739: BytePoly_1 = bigint_nondet_quot!(ctx, x2738, x6, 1);
    let x2740: BytePoly_1 = bigint_nondet_rem!(ctx, x2738, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2739, x6, 2), x2740, 2), x2738, 2),
        8131,
        2,
    )?;
    let x2741: BytePoly_1 = bigint_nondet_rem!(ctx, x2679, x2, 1);
    let x2742: BytePoly_2 = bigint_nondet_quot!(ctx, x2679, x2, 2);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2742, x2, 3), x2741, 3), x2679, 3),
        16259,
        2,
    )?;
    let x2743: BytePoly_1 = bigint_sub!(x3, x2741, 1);
    eqz(ctx, &bigint_mul!(x2741, x2743, 2), 8131, 2)?;
    let x2744: BytePoly_1 = bigint_add!(bigint_sub!(x2734, x2704, 1), x6, 1);
    let x2745: BytePoly_1 = bigint_nondet_inv!(ctx, x2744, x6, 1);
    let x2746: BytePoly_2 = bigint_mul!(x2744, x2745, 2);
    let x2747: BytePoly_3 = bigint_nondet_quot!(ctx, x2746, x6, 3);
    let x2748: BytePoly_1 = bigint_nondet_rem!(ctx, x2746, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2747, x6, 4), x2748, 4), x2746, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x2748, x1, 1), 34, 1)?;
    let x2749: BytePoly_2 = bigint_mul!(bigint_add!(bigint_sub!(x2740, x2706, 1), x6, 1), x2745, 2);
    let x2750: BytePoly_3 = bigint_nondet_quot!(ctx, x2749, x6, 3);
    let x2751: BytePoly_1 = bigint_nondet_rem!(ctx, x2749, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2750, x6, 4), x2751, 4), x2749, 4),
        24387,
        2,
    )?;
    let x2752: BytePoly_2 = bigint_add!(bigint_sub!(x2706, bigint_mul!(x2751, x2704, 2), 2), x6, 2);
    let x2753: BytePoly_2 = bigint_nondet_quot!(ctx, x2752, x6, 2);
    let x2754: BytePoly_1 = bigint_nondet_rem!(ctx, x2752, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2753, x6, 3), x2754, 3), x2752, 3),
        16259,
        2,
    )?;
    let x2755: BytePoly_2 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x2751, x2751, 2), x2704, 2), x6, 2),
            x2734,
            2
        ),
        x6,
        2
    );
    let x2756: BytePoly_3 = bigint_nondet_quot!(ctx, x2755, x6, 3);
    let x2757: BytePoly_1 = bigint_nondet_rem!(ctx, x2755, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2756, x6, 4), x2757, 4), x2755, 4),
        24387,
        2,
    )?;
    let x2758: BytePoly_2 = bigint_mul!(x2751, x2757, 2);
    let x2759: BytePoly_3 = bigint_nondet_quot!(ctx, x2758, x6, 3);
    let x2760: BytePoly_1 = bigint_nondet_rem!(ctx, x2758, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2759, x6, 4), x2760, 4), x2758, 4),
        24387,
        2,
    )?;
    let x2761: BytePoly_1 = bigint_add!(bigint_sub!(x6, bigint_add!(x2760, x2754, 1), 1), x6, 1);
    let x2762: BytePoly_1 = bigint_nondet_quot!(ctx, x2761, x6, 1);
    let x2763: BytePoly_1 = bigint_nondet_rem!(ctx, x2761, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2762, x6, 2), x2763, 2), x2761, 2),
        8131,
        2,
    )?;
    let x2764: BytePoly_2 = bigint_add!(
        bigint_mul!(x2757, x2741, 2),
        bigint_mul!(x2704, x2743, 2),
        2
    );
    let x2765: BytePoly_2 = bigint_add!(
        bigint_mul!(x2763, x2741, 2),
        bigint_mul!(x2706, x2743, 2),
        2
    );
    let x2766: BytePoly_3 = bigint_nondet_quot!(ctx, x2764, x6, 3);
    let x2767: BytePoly_1 = bigint_nondet_rem!(ctx, x2764, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2766, x6, 4), x2767, 4), x2764, 4),
        24387,
        2,
    )?;
    let x2768: BytePoly_3 = bigint_nondet_quot!(ctx, x2765, x6, 3);
    let x2769: BytePoly_1 = bigint_nondet_rem!(ctx, x2765, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2768, x6, 4), x2769, 4), x2765, 4),
        24387,
        2,
    )?;
    let x2770: BytePoly_2 = bigint_mul!(x2734, x2734, 2);
    let x2771: BytePoly_3 = bigint_nondet_quot!(ctx, x2770, x6, 3);
    let x2772: BytePoly_1 = bigint_nondet_rem!(ctx, x2770, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2771, x6, 4), x2772, 4), x2770, 4),
        24387,
        2,
    )?;
    let x2773: BytePoly_2 = bigint_add!(bigint_mul!(x2772, x0, 2), x5, 2);
    let x2774: BytePoly_3 = bigint_nondet_quot!(ctx, x2773, x6, 3);
    let x2775: BytePoly_1 = bigint_nondet_rem!(ctx, x2773, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2774, x6, 4), x2775, 4), x2773, 4),
        24387,
        2,
    )?;
    let x2776: BytePoly_1 = bigint_add!(x2740, x2740, 1);
    let x2777: BytePoly_1 = bigint_nondet_quot!(ctx, x2776, x6, 1);
    let x2778: BytePoly_1 = bigint_nondet_rem!(ctx, x2776, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2777, x6, 2), x2778, 2), x2776, 2),
        8131,
        2,
    )?;
    let x2779: BytePoly_1 = bigint_nondet_inv!(ctx, x2778, x6, 1);
    let x2780: BytePoly_2 = bigint_mul!(x2778, x2779, 2);
    let x2781: BytePoly_3 = bigint_nondet_quot!(ctx, x2780, x6, 3);
    let x2782: BytePoly_1 = bigint_nondet_rem!(ctx, x2780, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2781, x6, 4), x2782, 4), x2780, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x2782, x3, 1), 34, 1)?;
    let x2783: BytePoly_2 = bigint_mul!(x2775, x2779, 2);
    let x2784: BytePoly_3 = bigint_nondet_quot!(ctx, x2783, x6, 3);
    let x2785: BytePoly_1 = bigint_nondet_rem!(ctx, x2783, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2784, x6, 4), x2785, 4), x2783, 4),
        24387,
        2,
    )?;
    let x2786: BytePoly_2 = bigint_mul!(x2785, x2734, 2);
    let x2787: BytePoly_3 = bigint_nondet_quot!(ctx, x2786, x6, 3);
    let x2788: BytePoly_1 = bigint_nondet_rem!(ctx, x2786, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2787, x6, 4), x2788, 4), x2786, 4),
        24387,
        2,
    )?;
    let x2789: BytePoly_1 = bigint_add!(bigint_sub!(x2740, x2788, 1), x6, 1);
    let x2790: BytePoly_1 = bigint_nondet_quot!(ctx, x2789, x6, 1);
    let x2791: BytePoly_1 = bigint_nondet_rem!(ctx, x2789, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2790, x6, 2), x2791, 2), x2789, 2),
        8131,
        2,
    )?;
    let x2792: BytePoly_2 = bigint_mul!(x2785, x2785, 2);
    let x2793: BytePoly_3 = bigint_nondet_quot!(ctx, x2792, x6, 3);
    let x2794: BytePoly_1 = bigint_nondet_rem!(ctx, x2792, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2793, x6, 4), x2794, 4), x2792, 4),
        24387,
        2,
    )?;
    let x2795: BytePoly_1 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2794, x2734, 1), x6, 1), x2734, 1),
        x6,
        1
    );
    let x2796: BytePoly_1 = bigint_nondet_quot!(ctx, x2795, x6, 1);
    let x2797: BytePoly_1 = bigint_nondet_rem!(ctx, x2795, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2796, x6, 2), x2797, 2), x2795, 2),
        8131,
        2,
    )?;
    let x2798: BytePoly_2 = bigint_mul!(x2785, x2797, 2);
    let x2799: BytePoly_3 = bigint_nondet_quot!(ctx, x2798, x6, 3);
    let x2800: BytePoly_1 = bigint_nondet_rem!(ctx, x2798, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2799, x6, 4), x2800, 4), x2798, 4),
        24387,
        2,
    )?;
    let x2801: BytePoly_1 = bigint_add!(bigint_sub!(x6, bigint_add!(x2800, x2791, 1), 1), x6, 1);
    let x2802: BytePoly_1 = bigint_nondet_quot!(ctx, x2801, x6, 1);
    let x2803: BytePoly_1 = bigint_nondet_rem!(ctx, x2801, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2802, x6, 2), x2803, 2), x2801, 2),
        8131,
        2,
    )?;
    let x2804: BytePoly_1 = bigint_nondet_rem!(ctx, x2742, x2, 1);
    let x2805: BytePoly_2 = bigint_nondet_quot!(ctx, x2742, x2, 2);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2805, x2, 3), x2804, 3), x2742, 3),
        16259,
        2,
    )?;
    let x2806: BytePoly_1 = bigint_sub!(x3, x2804, 1);
    eqz(ctx, &bigint_mul!(x2804, x2806, 2), 8131, 2)?;
    let x2807: BytePoly_1 = bigint_add!(bigint_sub!(x2797, x2767, 1), x6, 1);
    let x2808: BytePoly_1 = bigint_nondet_inv!(ctx, x2807, x6, 1);
    let x2809: BytePoly_2 = bigint_mul!(x2807, x2808, 2);
    let x2810: BytePoly_3 = bigint_nondet_quot!(ctx, x2809, x6, 3);
    let x2811: BytePoly_1 = bigint_nondet_rem!(ctx, x2809, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2810, x6, 4), x2811, 4), x2809, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x2811, x1, 1), 34, 1)?;
    let x2812: BytePoly_2 = bigint_mul!(bigint_add!(bigint_sub!(x2803, x2769, 1), x6, 1), x2808, 2);
    let x2813: BytePoly_3 = bigint_nondet_quot!(ctx, x2812, x6, 3);
    let x2814: BytePoly_1 = bigint_nondet_rem!(ctx, x2812, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2813, x6, 4), x2814, 4), x2812, 4),
        24387,
        2,
    )?;
    let x2815: BytePoly_2 = bigint_add!(bigint_sub!(x2769, bigint_mul!(x2814, x2767, 2), 2), x6, 2);
    let x2816: BytePoly_2 = bigint_nondet_quot!(ctx, x2815, x6, 2);
    let x2817: BytePoly_1 = bigint_nondet_rem!(ctx, x2815, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2816, x6, 3), x2817, 3), x2815, 3),
        16259,
        2,
    )?;
    let x2818: BytePoly_2 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x2814, x2814, 2), x2767, 2), x6, 2),
            x2797,
            2
        ),
        x6,
        2
    );
    let x2819: BytePoly_3 = bigint_nondet_quot!(ctx, x2818, x6, 3);
    let x2820: BytePoly_1 = bigint_nondet_rem!(ctx, x2818, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2819, x6, 4), x2820, 4), x2818, 4),
        24387,
        2,
    )?;
    let x2821: BytePoly_2 = bigint_mul!(x2814, x2820, 2);
    let x2822: BytePoly_3 = bigint_nondet_quot!(ctx, x2821, x6, 3);
    let x2823: BytePoly_1 = bigint_nondet_rem!(ctx, x2821, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2822, x6, 4), x2823, 4), x2821, 4),
        24387,
        2,
    )?;
    let x2824: BytePoly_1 = bigint_add!(bigint_sub!(x6, bigint_add!(x2823, x2817, 1), 1), x6, 1);
    let x2825: BytePoly_1 = bigint_nondet_quot!(ctx, x2824, x6, 1);
    let x2826: BytePoly_1 = bigint_nondet_rem!(ctx, x2824, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2825, x6, 2), x2826, 2), x2824, 2),
        8131,
        2,
    )?;
    let x2827: BytePoly_2 = bigint_add!(
        bigint_mul!(x2820, x2804, 2),
        bigint_mul!(x2767, x2806, 2),
        2
    );
    let x2828: BytePoly_2 = bigint_add!(
        bigint_mul!(x2826, x2804, 2),
        bigint_mul!(x2769, x2806, 2),
        2
    );
    let x2829: BytePoly_3 = bigint_nondet_quot!(ctx, x2827, x6, 3);
    let x2830: BytePoly_1 = bigint_nondet_rem!(ctx, x2827, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2829, x6, 4), x2830, 4), x2827, 4),
        24387,
        2,
    )?;
    let x2831: BytePoly_3 = bigint_nondet_quot!(ctx, x2828, x6, 3);
    let x2832: BytePoly_1 = bigint_nondet_rem!(ctx, x2828, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2831, x6, 4), x2832, 4), x2828, 4),
        24387,
        2,
    )?;
    let x2833: BytePoly_2 = bigint_mul!(x2797, x2797, 2);
    let x2834: BytePoly_3 = bigint_nondet_quot!(ctx, x2833, x6, 3);
    let x2835: BytePoly_1 = bigint_nondet_rem!(ctx, x2833, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2834, x6, 4), x2835, 4), x2833, 4),
        24387,
        2,
    )?;
    let x2836: BytePoly_2 = bigint_add!(bigint_mul!(x2835, x0, 2), x5, 2);
    let x2837: BytePoly_3 = bigint_nondet_quot!(ctx, x2836, x6, 3);
    let x2838: BytePoly_1 = bigint_nondet_rem!(ctx, x2836, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2837, x6, 4), x2838, 4), x2836, 4),
        24387,
        2,
    )?;
    let x2839: BytePoly_1 = bigint_add!(x2803, x2803, 1);
    let x2840: BytePoly_1 = bigint_nondet_quot!(ctx, x2839, x6, 1);
    let x2841: BytePoly_1 = bigint_nondet_rem!(ctx, x2839, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2840, x6, 2), x2841, 2), x2839, 2),
        8131,
        2,
    )?;
    let x2842: BytePoly_1 = bigint_nondet_inv!(ctx, x2841, x6, 1);
    let x2843: BytePoly_2 = bigint_mul!(x2841, x2842, 2);
    let x2844: BytePoly_3 = bigint_nondet_quot!(ctx, x2843, x6, 3);
    let x2845: BytePoly_1 = bigint_nondet_rem!(ctx, x2843, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2844, x6, 4), x2845, 4), x2843, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x2845, x3, 1), 34, 1)?;
    let x2846: BytePoly_2 = bigint_mul!(x2838, x2842, 2);
    let x2847: BytePoly_3 = bigint_nondet_quot!(ctx, x2846, x6, 3);
    let x2848: BytePoly_1 = bigint_nondet_rem!(ctx, x2846, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2847, x6, 4), x2848, 4), x2846, 4),
        24387,
        2,
    )?;
    let x2849: BytePoly_2 = bigint_mul!(x2848, x2797, 2);
    let x2850: BytePoly_3 = bigint_nondet_quot!(ctx, x2849, x6, 3);
    let x2851: BytePoly_1 = bigint_nondet_rem!(ctx, x2849, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2850, x6, 4), x2851, 4), x2849, 4),
        24387,
        2,
    )?;
    let x2852: BytePoly_1 = bigint_add!(bigint_sub!(x2803, x2851, 1), x6, 1);
    let x2853: BytePoly_1 = bigint_nondet_quot!(ctx, x2852, x6, 1);
    let x2854: BytePoly_1 = bigint_nondet_rem!(ctx, x2852, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2853, x6, 2), x2854, 2), x2852, 2),
        8131,
        2,
    )?;
    let x2855: BytePoly_2 = bigint_mul!(x2848, x2848, 2);
    let x2856: BytePoly_3 = bigint_nondet_quot!(ctx, x2855, x6, 3);
    let x2857: BytePoly_1 = bigint_nondet_rem!(ctx, x2855, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2856, x6, 4), x2857, 4), x2855, 4),
        24387,
        2,
    )?;
    let x2858: BytePoly_1 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2857, x2797, 1), x6, 1), x2797, 1),
        x6,
        1
    );
    let x2859: BytePoly_1 = bigint_nondet_quot!(ctx, x2858, x6, 1);
    let x2860: BytePoly_1 = bigint_nondet_rem!(ctx, x2858, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2859, x6, 2), x2860, 2), x2858, 2),
        8131,
        2,
    )?;
    let x2861: BytePoly_2 = bigint_mul!(x2848, x2860, 2);
    let x2862: BytePoly_3 = bigint_nondet_quot!(ctx, x2861, x6, 3);
    let x2863: BytePoly_1 = bigint_nondet_rem!(ctx, x2861, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2862, x6, 4), x2863, 4), x2861, 4),
        24387,
        2,
    )?;
    let x2864: BytePoly_1 = bigint_add!(bigint_sub!(x6, bigint_add!(x2863, x2854, 1), 1), x6, 1);
    let x2865: BytePoly_1 = bigint_nondet_quot!(ctx, x2864, x6, 1);
    let x2866: BytePoly_1 = bigint_nondet_rem!(ctx, x2864, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2865, x6, 2), x2866, 2), x2864, 2),
        8131,
        2,
    )?;
    let x2867: BytePoly_1 = bigint_nondet_rem!(ctx, x2805, x2, 1);
    let x2868: BytePoly_2 = bigint_nondet_quot!(ctx, x2805, x2, 2);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2868, x2, 3), x2867, 3), x2805, 3),
        16259,
        2,
    )?;
    let x2869: BytePoly_1 = bigint_sub!(x3, x2867, 1);
    eqz(ctx, &bigint_mul!(x2867, x2869, 2), 8131, 2)?;
    let x2870: BytePoly_1 = bigint_add!(bigint_sub!(x2860, x2830, 1), x6, 1);
    let x2871: BytePoly_1 = bigint_nondet_inv!(ctx, x2870, x6, 1);
    let x2872: BytePoly_2 = bigint_mul!(x2870, x2871, 2);
    let x2873: BytePoly_3 = bigint_nondet_quot!(ctx, x2872, x6, 3);
    let x2874: BytePoly_1 = bigint_nondet_rem!(ctx, x2872, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2873, x6, 4), x2874, 4), x2872, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x2874, x1, 1), 34, 1)?;
    let x2875: BytePoly_2 = bigint_mul!(bigint_add!(bigint_sub!(x2866, x2832, 1), x6, 1), x2871, 2);
    let x2876: BytePoly_3 = bigint_nondet_quot!(ctx, x2875, x6, 3);
    let x2877: BytePoly_1 = bigint_nondet_rem!(ctx, x2875, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2876, x6, 4), x2877, 4), x2875, 4),
        24387,
        2,
    )?;
    let x2878: BytePoly_2 = bigint_add!(bigint_sub!(x2832, bigint_mul!(x2877, x2830, 2), 2), x6, 2);
    let x2879: BytePoly_2 = bigint_nondet_quot!(ctx, x2878, x6, 2);
    let x2880: BytePoly_1 = bigint_nondet_rem!(ctx, x2878, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2879, x6, 3), x2880, 3), x2878, 3),
        16259,
        2,
    )?;
    let x2881: BytePoly_2 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x2877, x2877, 2), x2830, 2), x6, 2),
            x2860,
            2
        ),
        x6,
        2
    );
    let x2882: BytePoly_3 = bigint_nondet_quot!(ctx, x2881, x6, 3);
    let x2883: BytePoly_1 = bigint_nondet_rem!(ctx, x2881, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2882, x6, 4), x2883, 4), x2881, 4),
        24387,
        2,
    )?;
    let x2884: BytePoly_2 = bigint_mul!(x2877, x2883, 2);
    let x2885: BytePoly_3 = bigint_nondet_quot!(ctx, x2884, x6, 3);
    let x2886: BytePoly_1 = bigint_nondet_rem!(ctx, x2884, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2885, x6, 4), x2886, 4), x2884, 4),
        24387,
        2,
    )?;
    let x2887: BytePoly_1 = bigint_add!(bigint_sub!(x6, bigint_add!(x2886, x2880, 1), 1), x6, 1);
    let x2888: BytePoly_1 = bigint_nondet_quot!(ctx, x2887, x6, 1);
    let x2889: BytePoly_1 = bigint_nondet_rem!(ctx, x2887, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2888, x6, 2), x2889, 2), x2887, 2),
        8131,
        2,
    )?;
    let x2890: BytePoly_2 = bigint_add!(
        bigint_mul!(x2883, x2867, 2),
        bigint_mul!(x2830, x2869, 2),
        2
    );
    let x2891: BytePoly_2 = bigint_add!(
        bigint_mul!(x2889, x2867, 2),
        bigint_mul!(x2832, x2869, 2),
        2
    );
    let x2892: BytePoly_3 = bigint_nondet_quot!(ctx, x2890, x6, 3);
    let x2893: BytePoly_1 = bigint_nondet_rem!(ctx, x2890, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2892, x6, 4), x2893, 4), x2890, 4),
        24387,
        2,
    )?;
    let x2894: BytePoly_3 = bigint_nondet_quot!(ctx, x2891, x6, 3);
    let x2895: BytePoly_1 = bigint_nondet_rem!(ctx, x2891, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2894, x6, 4), x2895, 4), x2891, 4),
        24387,
        2,
    )?;
    let x2896: BytePoly_2 = bigint_mul!(x2860, x2860, 2);
    let x2897: BytePoly_3 = bigint_nondet_quot!(ctx, x2896, x6, 3);
    let x2898: BytePoly_1 = bigint_nondet_rem!(ctx, x2896, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2897, x6, 4), x2898, 4), x2896, 4),
        24387,
        2,
    )?;
    let x2899: BytePoly_2 = bigint_add!(bigint_mul!(x2898, x0, 2), x5, 2);
    let x2900: BytePoly_3 = bigint_nondet_quot!(ctx, x2899, x6, 3);
    let x2901: BytePoly_1 = bigint_nondet_rem!(ctx, x2899, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2900, x6, 4), x2901, 4), x2899, 4),
        24387,
        2,
    )?;
    let x2902: BytePoly_1 = bigint_add!(x2866, x2866, 1);
    let x2903: BytePoly_1 = bigint_nondet_quot!(ctx, x2902, x6, 1);
    let x2904: BytePoly_1 = bigint_nondet_rem!(ctx, x2902, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2903, x6, 2), x2904, 2), x2902, 2),
        8131,
        2,
    )?;
    let x2905: BytePoly_1 = bigint_nondet_inv!(ctx, x2904, x6, 1);
    let x2906: BytePoly_2 = bigint_mul!(x2904, x2905, 2);
    let x2907: BytePoly_3 = bigint_nondet_quot!(ctx, x2906, x6, 3);
    let x2908: BytePoly_1 = bigint_nondet_rem!(ctx, x2906, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2907, x6, 4), x2908, 4), x2906, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x2908, x3, 1), 34, 1)?;
    let x2909: BytePoly_2 = bigint_mul!(x2901, x2905, 2);
    let x2910: BytePoly_3 = bigint_nondet_quot!(ctx, x2909, x6, 3);
    let x2911: BytePoly_1 = bigint_nondet_rem!(ctx, x2909, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2910, x6, 4), x2911, 4), x2909, 4),
        24387,
        2,
    )?;
    let x2912: BytePoly_2 = bigint_mul!(x2911, x2860, 2);
    let x2913: BytePoly_3 = bigint_nondet_quot!(ctx, x2912, x6, 3);
    let x2914: BytePoly_1 = bigint_nondet_rem!(ctx, x2912, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2913, x6, 4), x2914, 4), x2912, 4),
        24387,
        2,
    )?;
    let x2915: BytePoly_1 = bigint_add!(bigint_sub!(x2866, x2914, 1), x6, 1);
    let x2916: BytePoly_1 = bigint_nondet_quot!(ctx, x2915, x6, 1);
    let x2917: BytePoly_1 = bigint_nondet_rem!(ctx, x2915, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2916, x6, 2), x2917, 2), x2915, 2),
        8131,
        2,
    )?;
    let x2918: BytePoly_2 = bigint_mul!(x2911, x2911, 2);
    let x2919: BytePoly_3 = bigint_nondet_quot!(ctx, x2918, x6, 3);
    let x2920: BytePoly_1 = bigint_nondet_rem!(ctx, x2918, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2919, x6, 4), x2920, 4), x2918, 4),
        24387,
        2,
    )?;
    let x2921: BytePoly_1 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2920, x2860, 1), x6, 1), x2860, 1),
        x6,
        1
    );
    let x2922: BytePoly_1 = bigint_nondet_quot!(ctx, x2921, x6, 1);
    let x2923: BytePoly_1 = bigint_nondet_rem!(ctx, x2921, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2922, x6, 2), x2923, 2), x2921, 2),
        8131,
        2,
    )?;
    let x2924: BytePoly_2 = bigint_mul!(x2911, x2923, 2);
    let x2925: BytePoly_3 = bigint_nondet_quot!(ctx, x2924, x6, 3);
    let x2926: BytePoly_1 = bigint_nondet_rem!(ctx, x2924, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2925, x6, 4), x2926, 4), x2924, 4),
        24387,
        2,
    )?;
    let x2927: BytePoly_1 = bigint_add!(bigint_sub!(x6, bigint_add!(x2926, x2917, 1), 1), x6, 1);
    let x2928: BytePoly_1 = bigint_nondet_quot!(ctx, x2927, x6, 1);
    let x2929: BytePoly_1 = bigint_nondet_rem!(ctx, x2927, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2928, x6, 2), x2929, 2), x2927, 2),
        8131,
        2,
    )?;
    let x2930: BytePoly_1 = bigint_nondet_rem!(ctx, x2868, x2, 1);
    let x2931: BytePoly_2 = bigint_nondet_quot!(ctx, x2868, x2, 2);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2931, x2, 3), x2930, 3), x2868, 3),
        16259,
        2,
    )?;
    let x2932: BytePoly_1 = bigint_sub!(x3, x2930, 1);
    eqz(ctx, &bigint_mul!(x2930, x2932, 2), 8131, 2)?;
    let x2933: BytePoly_1 = bigint_add!(bigint_sub!(x2923, x2893, 1), x6, 1);
    let x2934: BytePoly_1 = bigint_nondet_inv!(ctx, x2933, x6, 1);
    let x2935: BytePoly_2 = bigint_mul!(x2933, x2934, 2);
    let x2936: BytePoly_3 = bigint_nondet_quot!(ctx, x2935, x6, 3);
    let x2937: BytePoly_1 = bigint_nondet_rem!(ctx, x2935, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2936, x6, 4), x2937, 4), x2935, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x2937, x1, 1), 34, 1)?;
    let x2938: BytePoly_2 = bigint_mul!(bigint_add!(bigint_sub!(x2929, x2895, 1), x6, 1), x2934, 2);
    let x2939: BytePoly_3 = bigint_nondet_quot!(ctx, x2938, x6, 3);
    let x2940: BytePoly_1 = bigint_nondet_rem!(ctx, x2938, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2939, x6, 4), x2940, 4), x2938, 4),
        24387,
        2,
    )?;
    let x2941: BytePoly_2 = bigint_add!(bigint_sub!(x2895, bigint_mul!(x2940, x2893, 2), 2), x6, 2);
    let x2942: BytePoly_2 = bigint_nondet_quot!(ctx, x2941, x6, 2);
    let x2943: BytePoly_1 = bigint_nondet_rem!(ctx, x2941, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2942, x6, 3), x2943, 3), x2941, 3),
        16259,
        2,
    )?;
    let x2944: BytePoly_2 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x2940, x2940, 2), x2893, 2), x6, 2),
            x2923,
            2
        ),
        x6,
        2
    );
    let x2945: BytePoly_3 = bigint_nondet_quot!(ctx, x2944, x6, 3);
    let x2946: BytePoly_1 = bigint_nondet_rem!(ctx, x2944, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2945, x6, 4), x2946, 4), x2944, 4),
        24387,
        2,
    )?;
    let x2947: BytePoly_2 = bigint_mul!(x2940, x2946, 2);
    let x2948: BytePoly_3 = bigint_nondet_quot!(ctx, x2947, x6, 3);
    let x2949: BytePoly_1 = bigint_nondet_rem!(ctx, x2947, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2948, x6, 4), x2949, 4), x2947, 4),
        24387,
        2,
    )?;
    let x2950: BytePoly_1 = bigint_add!(bigint_sub!(x6, bigint_add!(x2949, x2943, 1), 1), x6, 1);
    let x2951: BytePoly_1 = bigint_nondet_quot!(ctx, x2950, x6, 1);
    let x2952: BytePoly_1 = bigint_nondet_rem!(ctx, x2950, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2951, x6, 2), x2952, 2), x2950, 2),
        8131,
        2,
    )?;
    let x2953: BytePoly_2 = bigint_add!(
        bigint_mul!(x2946, x2930, 2),
        bigint_mul!(x2893, x2932, 2),
        2
    );
    let x2954: BytePoly_2 = bigint_add!(
        bigint_mul!(x2952, x2930, 2),
        bigint_mul!(x2895, x2932, 2),
        2
    );
    let x2955: BytePoly_3 = bigint_nondet_quot!(ctx, x2953, x6, 3);
    let x2956: BytePoly_1 = bigint_nondet_rem!(ctx, x2953, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2955, x6, 4), x2956, 4), x2953, 4),
        24387,
        2,
    )?;
    let x2957: BytePoly_3 = bigint_nondet_quot!(ctx, x2954, x6, 3);
    let x2958: BytePoly_1 = bigint_nondet_rem!(ctx, x2954, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2957, x6, 4), x2958, 4), x2954, 4),
        24387,
        2,
    )?;
    let x2959: BytePoly_2 = bigint_mul!(x2923, x2923, 2);
    let x2960: BytePoly_3 = bigint_nondet_quot!(ctx, x2959, x6, 3);
    let x2961: BytePoly_1 = bigint_nondet_rem!(ctx, x2959, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2960, x6, 4), x2961, 4), x2959, 4),
        24387,
        2,
    )?;
    let x2962: BytePoly_2 = bigint_add!(bigint_mul!(x2961, x0, 2), x5, 2);
    let x2963: BytePoly_3 = bigint_nondet_quot!(ctx, x2962, x6, 3);
    let x2964: BytePoly_1 = bigint_nondet_rem!(ctx, x2962, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2963, x6, 4), x2964, 4), x2962, 4),
        24387,
        2,
    )?;
    let x2965: BytePoly_1 = bigint_add!(x2929, x2929, 1);
    let x2966: BytePoly_1 = bigint_nondet_quot!(ctx, x2965, x6, 1);
    let x2967: BytePoly_1 = bigint_nondet_rem!(ctx, x2965, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2966, x6, 2), x2967, 2), x2965, 2),
        8131,
        2,
    )?;
    let x2968: BytePoly_1 = bigint_nondet_inv!(ctx, x2967, x6, 1);
    let x2969: BytePoly_2 = bigint_mul!(x2967, x2968, 2);
    let x2970: BytePoly_3 = bigint_nondet_quot!(ctx, x2969, x6, 3);
    let x2971: BytePoly_1 = bigint_nondet_rem!(ctx, x2969, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2970, x6, 4), x2971, 4), x2969, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x2971, x3, 1), 34, 1)?;
    let x2972: BytePoly_2 = bigint_mul!(x2964, x2968, 2);
    let x2973: BytePoly_3 = bigint_nondet_quot!(ctx, x2972, x6, 3);
    let x2974: BytePoly_1 = bigint_nondet_rem!(ctx, x2972, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2973, x6, 4), x2974, 4), x2972, 4),
        24387,
        2,
    )?;
    let x2975: BytePoly_2 = bigint_mul!(x2974, x2923, 2);
    let x2976: BytePoly_3 = bigint_nondet_quot!(ctx, x2975, x6, 3);
    let x2977: BytePoly_1 = bigint_nondet_rem!(ctx, x2975, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2976, x6, 4), x2977, 4), x2975, 4),
        24387,
        2,
    )?;
    let x2978: BytePoly_1 = bigint_add!(bigint_sub!(x2929, x2977, 1), x6, 1);
    let x2979: BytePoly_1 = bigint_nondet_quot!(ctx, x2978, x6, 1);
    let x2980: BytePoly_1 = bigint_nondet_rem!(ctx, x2978, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2979, x6, 2), x2980, 2), x2978, 2),
        8131,
        2,
    )?;
    let x2981: BytePoly_2 = bigint_mul!(x2974, x2974, 2);
    let x2982: BytePoly_3 = bigint_nondet_quot!(ctx, x2981, x6, 3);
    let x2983: BytePoly_1 = bigint_nondet_rem!(ctx, x2981, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2982, x6, 4), x2983, 4), x2981, 4),
        24387,
        2,
    )?;
    let x2984: BytePoly_1 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2983, x2923, 1), x6, 1), x2923, 1),
        x6,
        1
    );
    let x2985: BytePoly_1 = bigint_nondet_quot!(ctx, x2984, x6, 1);
    let x2986: BytePoly_1 = bigint_nondet_rem!(ctx, x2984, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2985, x6, 2), x2986, 2), x2984, 2),
        8131,
        2,
    )?;
    let x2987: BytePoly_2 = bigint_mul!(x2974, x2986, 2);
    let x2988: BytePoly_3 = bigint_nondet_quot!(ctx, x2987, x6, 3);
    let x2989: BytePoly_1 = bigint_nondet_rem!(ctx, x2987, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2988, x6, 4), x2989, 4), x2987, 4),
        24387,
        2,
    )?;
    let x2990: BytePoly_1 = bigint_add!(bigint_sub!(x6, bigint_add!(x2989, x2980, 1), 1), x6, 1);
    let x2991: BytePoly_1 = bigint_nondet_quot!(ctx, x2990, x6, 1);
    let x2992: BytePoly_1 = bigint_nondet_rem!(ctx, x2990, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2991, x6, 2), x2992, 2), x2990, 2),
        8131,
        2,
    )?;
    let x2993: BytePoly_1 = bigint_nondet_rem!(ctx, x2931, x2, 1);
    let x2994: BytePoly_2 = bigint_nondet_quot!(ctx, x2931, x2, 2);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2994, x2, 3), x2993, 3), x2931, 3),
        16259,
        2,
    )?;
    let x2995: BytePoly_1 = bigint_sub!(x3, x2993, 1);
    eqz(ctx, &bigint_mul!(x2993, x2995, 2), 8131, 2)?;
    let x2996: BytePoly_1 = bigint_add!(bigint_sub!(x2986, x2956, 1), x6, 1);
    let x2997: BytePoly_1 = bigint_nondet_inv!(ctx, x2996, x6, 1);
    let x2998: BytePoly_2 = bigint_mul!(x2996, x2997, 2);
    let x2999: BytePoly_3 = bigint_nondet_quot!(ctx, x2998, x6, 3);
    let x3000: BytePoly_1 = bigint_nondet_rem!(ctx, x2998, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2999, x6, 4), x3000, 4), x2998, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x3000, x1, 1), 34, 1)?;
    let x3001: BytePoly_2 = bigint_mul!(bigint_add!(bigint_sub!(x2992, x2958, 1), x6, 1), x2997, 2);
    let x3002: BytePoly_3 = bigint_nondet_quot!(ctx, x3001, x6, 3);
    let x3003: BytePoly_1 = bigint_nondet_rem!(ctx, x3001, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3002, x6, 4), x3003, 4), x3001, 4),
        24387,
        2,
    )?;
    let x3004: BytePoly_2 = bigint_add!(bigint_sub!(x2958, bigint_mul!(x3003, x2956, 2), 2), x6, 2);
    let x3005: BytePoly_2 = bigint_nondet_quot!(ctx, x3004, x6, 2);
    let x3006: BytePoly_1 = bigint_nondet_rem!(ctx, x3004, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3005, x6, 3), x3006, 3), x3004, 3),
        16259,
        2,
    )?;
    let x3007: BytePoly_2 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x3003, x3003, 2), x2956, 2), x6, 2),
            x2986,
            2
        ),
        x6,
        2
    );
    let x3008: BytePoly_3 = bigint_nondet_quot!(ctx, x3007, x6, 3);
    let x3009: BytePoly_1 = bigint_nondet_rem!(ctx, x3007, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3008, x6, 4), x3009, 4), x3007, 4),
        24387,
        2,
    )?;
    let x3010: BytePoly_2 = bigint_mul!(x3003, x3009, 2);
    let x3011: BytePoly_3 = bigint_nondet_quot!(ctx, x3010, x6, 3);
    let x3012: BytePoly_1 = bigint_nondet_rem!(ctx, x3010, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3011, x6, 4), x3012, 4), x3010, 4),
        24387,
        2,
    )?;
    let x3013: BytePoly_1 = bigint_add!(bigint_sub!(x6, bigint_add!(x3012, x3006, 1), 1), x6, 1);
    let x3014: BytePoly_1 = bigint_nondet_quot!(ctx, x3013, x6, 1);
    let x3015: BytePoly_1 = bigint_nondet_rem!(ctx, x3013, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3014, x6, 2), x3015, 2), x3013, 2),
        8131,
        2,
    )?;
    let x3016: BytePoly_2 = bigint_add!(
        bigint_mul!(x3009, x2993, 2),
        bigint_mul!(x2956, x2995, 2),
        2
    );
    let x3017: BytePoly_2 = bigint_add!(
        bigint_mul!(x3015, x2993, 2),
        bigint_mul!(x2958, x2995, 2),
        2
    );
    let x3018: BytePoly_3 = bigint_nondet_quot!(ctx, x3016, x6, 3);
    let x3019: BytePoly_1 = bigint_nondet_rem!(ctx, x3016, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3018, x6, 4), x3019, 4), x3016, 4),
        24387,
        2,
    )?;
    let x3020: BytePoly_3 = bigint_nondet_quot!(ctx, x3017, x6, 3);
    let x3021: BytePoly_1 = bigint_nondet_rem!(ctx, x3017, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3020, x6, 4), x3021, 4), x3017, 4),
        24387,
        2,
    )?;
    let x3022: BytePoly_2 = bigint_mul!(x2986, x2986, 2);
    let x3023: BytePoly_3 = bigint_nondet_quot!(ctx, x3022, x6, 3);
    let x3024: BytePoly_1 = bigint_nondet_rem!(ctx, x3022, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3023, x6, 4), x3024, 4), x3022, 4),
        24387,
        2,
    )?;
    let x3025: BytePoly_2 = bigint_add!(bigint_mul!(x3024, x0, 2), x5, 2);
    let x3026: BytePoly_3 = bigint_nondet_quot!(ctx, x3025, x6, 3);
    let x3027: BytePoly_1 = bigint_nondet_rem!(ctx, x3025, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3026, x6, 4), x3027, 4), x3025, 4),
        24387,
        2,
    )?;
    let x3028: BytePoly_1 = bigint_add!(x2992, x2992, 1);
    let x3029: BytePoly_1 = bigint_nondet_quot!(ctx, x3028, x6, 1);
    let x3030: BytePoly_1 = bigint_nondet_rem!(ctx, x3028, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3029, x6, 2), x3030, 2), x3028, 2),
        8131,
        2,
    )?;
    let x3031: BytePoly_1 = bigint_nondet_inv!(ctx, x3030, x6, 1);
    let x3032: BytePoly_2 = bigint_mul!(x3030, x3031, 2);
    let x3033: BytePoly_3 = bigint_nondet_quot!(ctx, x3032, x6, 3);
    let x3034: BytePoly_1 = bigint_nondet_rem!(ctx, x3032, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3033, x6, 4), x3034, 4), x3032, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x3034, x3, 1), 34, 1)?;
    let x3035: BytePoly_2 = bigint_mul!(x3027, x3031, 2);
    let x3036: BytePoly_3 = bigint_nondet_quot!(ctx, x3035, x6, 3);
    let x3037: BytePoly_1 = bigint_nondet_rem!(ctx, x3035, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3036, x6, 4), x3037, 4), x3035, 4),
        24387,
        2,
    )?;
    let x3038: BytePoly_2 = bigint_mul!(x3037, x2986, 2);
    let x3039: BytePoly_3 = bigint_nondet_quot!(ctx, x3038, x6, 3);
    let x3040: BytePoly_1 = bigint_nondet_rem!(ctx, x3038, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3039, x6, 4), x3040, 4), x3038, 4),
        24387,
        2,
    )?;
    let x3041: BytePoly_1 = bigint_add!(bigint_sub!(x2992, x3040, 1), x6, 1);
    let x3042: BytePoly_1 = bigint_nondet_quot!(ctx, x3041, x6, 1);
    let x3043: BytePoly_1 = bigint_nondet_rem!(ctx, x3041, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3042, x6, 2), x3043, 2), x3041, 2),
        8131,
        2,
    )?;
    let x3044: BytePoly_2 = bigint_mul!(x3037, x3037, 2);
    let x3045: BytePoly_3 = bigint_nondet_quot!(ctx, x3044, x6, 3);
    let x3046: BytePoly_1 = bigint_nondet_rem!(ctx, x3044, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3045, x6, 4), x3046, 4), x3044, 4),
        24387,
        2,
    )?;
    let x3047: BytePoly_1 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3046, x2986, 1), x6, 1), x2986, 1),
        x6,
        1
    );
    let x3048: BytePoly_1 = bigint_nondet_quot!(ctx, x3047, x6, 1);
    let x3049: BytePoly_1 = bigint_nondet_rem!(ctx, x3047, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3048, x6, 2), x3049, 2), x3047, 2),
        8131,
        2,
    )?;
    let x3050: BytePoly_2 = bigint_mul!(x3037, x3049, 2);
    let x3051: BytePoly_3 = bigint_nondet_quot!(ctx, x3050, x6, 3);
    let x3052: BytePoly_1 = bigint_nondet_rem!(ctx, x3050, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3051, x6, 4), x3052, 4), x3050, 4),
        24387,
        2,
    )?;
    let x3053: BytePoly_1 = bigint_add!(bigint_sub!(x6, bigint_add!(x3052, x3043, 1), 1), x6, 1);
    let x3054: BytePoly_1 = bigint_nondet_quot!(ctx, x3053, x6, 1);
    let x3055: BytePoly_1 = bigint_nondet_rem!(ctx, x3053, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3054, x6, 2), x3055, 2), x3053, 2),
        8131,
        2,
    )?;
    let x3056: BytePoly_1 = bigint_nondet_rem!(ctx, x2994, x2, 1);
    let x3057: BytePoly_2 = bigint_nondet_quot!(ctx, x2994, x2, 2);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3057, x2, 3), x3056, 3), x2994, 3),
        16259,
        2,
    )?;
    let x3058: BytePoly_1 = bigint_sub!(x3, x3056, 1);
    eqz(ctx, &bigint_mul!(x3056, x3058, 2), 8131, 2)?;
    let x3059: BytePoly_1 = bigint_add!(bigint_sub!(x3049, x3019, 1), x6, 1);
    let x3060: BytePoly_1 = bigint_nondet_inv!(ctx, x3059, x6, 1);
    let x3061: BytePoly_2 = bigint_mul!(x3059, x3060, 2);
    let x3062: BytePoly_3 = bigint_nondet_quot!(ctx, x3061, x6, 3);
    let x3063: BytePoly_1 = bigint_nondet_rem!(ctx, x3061, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3062, x6, 4), x3063, 4), x3061, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x3063, x1, 1), 34, 1)?;
    let x3064: BytePoly_2 = bigint_mul!(bigint_add!(bigint_sub!(x3055, x3021, 1), x6, 1), x3060, 2);
    let x3065: BytePoly_3 = bigint_nondet_quot!(ctx, x3064, x6, 3);
    let x3066: BytePoly_1 = bigint_nondet_rem!(ctx, x3064, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3065, x6, 4), x3066, 4), x3064, 4),
        24387,
        2,
    )?;
    let x3067: BytePoly_2 = bigint_add!(bigint_sub!(x3021, bigint_mul!(x3066, x3019, 2), 2), x6, 2);
    let x3068: BytePoly_2 = bigint_nondet_quot!(ctx, x3067, x6, 2);
    let x3069: BytePoly_1 = bigint_nondet_rem!(ctx, x3067, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3068, x6, 3), x3069, 3), x3067, 3),
        16259,
        2,
    )?;
    let x3070: BytePoly_2 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x3066, x3066, 2), x3019, 2), x6, 2),
            x3049,
            2
        ),
        x6,
        2
    );
    let x3071: BytePoly_3 = bigint_nondet_quot!(ctx, x3070, x6, 3);
    let x3072: BytePoly_1 = bigint_nondet_rem!(ctx, x3070, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3071, x6, 4), x3072, 4), x3070, 4),
        24387,
        2,
    )?;
    let x3073: BytePoly_2 = bigint_mul!(x3066, x3072, 2);
    let x3074: BytePoly_3 = bigint_nondet_quot!(ctx, x3073, x6, 3);
    let x3075: BytePoly_1 = bigint_nondet_rem!(ctx, x3073, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3074, x6, 4), x3075, 4), x3073, 4),
        24387,
        2,
    )?;
    let x3076: BytePoly_1 = bigint_add!(bigint_sub!(x6, bigint_add!(x3075, x3069, 1), 1), x6, 1);
    let x3077: BytePoly_1 = bigint_nondet_quot!(ctx, x3076, x6, 1);
    let x3078: BytePoly_1 = bigint_nondet_rem!(ctx, x3076, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3077, x6, 2), x3078, 2), x3076, 2),
        8131,
        2,
    )?;
    let x3079: BytePoly_2 = bigint_add!(
        bigint_mul!(x3072, x3056, 2),
        bigint_mul!(x3019, x3058, 2),
        2
    );
    let x3080: BytePoly_2 = bigint_add!(
        bigint_mul!(x3078, x3056, 2),
        bigint_mul!(x3021, x3058, 2),
        2
    );
    let x3081: BytePoly_3 = bigint_nondet_quot!(ctx, x3079, x6, 3);
    let x3082: BytePoly_1 = bigint_nondet_rem!(ctx, x3079, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3081, x6, 4), x3082, 4), x3079, 4),
        24387,
        2,
    )?;
    let x3083: BytePoly_3 = bigint_nondet_quot!(ctx, x3080, x6, 3);
    let x3084: BytePoly_1 = bigint_nondet_rem!(ctx, x3080, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3083, x6, 4), x3084, 4), x3080, 4),
        24387,
        2,
    )?;
    let x3085: BytePoly_2 = bigint_mul!(x3049, x3049, 2);
    let x3086: BytePoly_3 = bigint_nondet_quot!(ctx, x3085, x6, 3);
    let x3087: BytePoly_1 = bigint_nondet_rem!(ctx, x3085, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3086, x6, 4), x3087, 4), x3085, 4),
        24387,
        2,
    )?;
    let x3088: BytePoly_2 = bigint_add!(bigint_mul!(x3087, x0, 2), x5, 2);
    let x3089: BytePoly_3 = bigint_nondet_quot!(ctx, x3088, x6, 3);
    let x3090: BytePoly_1 = bigint_nondet_rem!(ctx, x3088, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3089, x6, 4), x3090, 4), x3088, 4),
        24387,
        2,
    )?;
    let x3091: BytePoly_1 = bigint_add!(x3055, x3055, 1);
    let x3092: BytePoly_1 = bigint_nondet_quot!(ctx, x3091, x6, 1);
    let x3093: BytePoly_1 = bigint_nondet_rem!(ctx, x3091, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3092, x6, 2), x3093, 2), x3091, 2),
        8131,
        2,
    )?;
    let x3094: BytePoly_1 = bigint_nondet_inv!(ctx, x3093, x6, 1);
    let x3095: BytePoly_2 = bigint_mul!(x3093, x3094, 2);
    let x3096: BytePoly_3 = bigint_nondet_quot!(ctx, x3095, x6, 3);
    let x3097: BytePoly_1 = bigint_nondet_rem!(ctx, x3095, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3096, x6, 4), x3097, 4), x3095, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x3097, x3, 1), 34, 1)?;
    let x3098: BytePoly_2 = bigint_mul!(x3090, x3094, 2);
    let x3099: BytePoly_3 = bigint_nondet_quot!(ctx, x3098, x6, 3);
    let x3100: BytePoly_1 = bigint_nondet_rem!(ctx, x3098, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3099, x6, 4), x3100, 4), x3098, 4),
        24387,
        2,
    )?;
    let x3101: BytePoly_2 = bigint_mul!(x3100, x3049, 2);
    let x3102: BytePoly_3 = bigint_nondet_quot!(ctx, x3101, x6, 3);
    let x3103: BytePoly_1 = bigint_nondet_rem!(ctx, x3101, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3102, x6, 4), x3103, 4), x3101, 4),
        24387,
        2,
    )?;
    let x3104: BytePoly_1 = bigint_add!(bigint_sub!(x3055, x3103, 1), x6, 1);
    let x3105: BytePoly_1 = bigint_nondet_quot!(ctx, x3104, x6, 1);
    let x3106: BytePoly_1 = bigint_nondet_rem!(ctx, x3104, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3105, x6, 2), x3106, 2), x3104, 2),
        8131,
        2,
    )?;
    let x3107: BytePoly_2 = bigint_mul!(x3100, x3100, 2);
    let x3108: BytePoly_3 = bigint_nondet_quot!(ctx, x3107, x6, 3);
    let x3109: BytePoly_1 = bigint_nondet_rem!(ctx, x3107, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3108, x6, 4), x3109, 4), x3107, 4),
        24387,
        2,
    )?;
    let x3110: BytePoly_1 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3109, x3049, 1), x6, 1), x3049, 1),
        x6,
        1
    );
    let x3111: BytePoly_1 = bigint_nondet_quot!(ctx, x3110, x6, 1);
    let x3112: BytePoly_1 = bigint_nondet_rem!(ctx, x3110, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3111, x6, 2), x3112, 2), x3110, 2),
        8131,
        2,
    )?;
    let x3113: BytePoly_2 = bigint_mul!(x3100, x3112, 2);
    let x3114: BytePoly_3 = bigint_nondet_quot!(ctx, x3113, x6, 3);
    let x3115: BytePoly_1 = bigint_nondet_rem!(ctx, x3113, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3114, x6, 4), x3115, 4), x3113, 4),
        24387,
        2,
    )?;
    let x3116: BytePoly_1 = bigint_add!(bigint_sub!(x6, bigint_add!(x3115, x3106, 1), 1), x6, 1);
    let x3117: BytePoly_1 = bigint_nondet_quot!(ctx, x3116, x6, 1);
    let x3118: BytePoly_1 = bigint_nondet_rem!(ctx, x3116, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3117, x6, 2), x3118, 2), x3116, 2),
        8131,
        2,
    )?;
    let x3119: BytePoly_1 = bigint_add!(bigint_sub!(x15, x3082, 1), x6, 1);
    let x3120: BytePoly_1 = bigint_nondet_inv!(ctx, x3119, x6, 1);
    let x3121: BytePoly_2 = bigint_mul!(x3119, x3120, 2);
    let x3122: BytePoly_3 = bigint_nondet_quot!(ctx, x3121, x6, 3);
    let x3123: BytePoly_1 = bigint_nondet_rem!(ctx, x3121, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3122, x6, 4), x3123, 4), x3121, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x3123, x1, 1), 34, 1)?;
    let x3124: BytePoly_2 = bigint_mul!(bigint_add!(bigint_sub!(x1045, x3084, 1), x6, 1), x3120, 2);
    let x3125: BytePoly_3 = bigint_nondet_quot!(ctx, x3124, x6, 3);
    let x3126: BytePoly_1 = bigint_nondet_rem!(ctx, x3124, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3125, x6, 4), x3126, 4), x3124, 4),
        24387,
        2,
    )?;
    let x3127: BytePoly_2 = bigint_add!(bigint_sub!(x3084, bigint_mul!(x3126, x3082, 2), 2), x6, 2);
    let x3128: BytePoly_2 = bigint_nondet_quot!(ctx, x3127, x6, 2);
    let x3129: BytePoly_1 = bigint_nondet_rem!(ctx, x3127, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3128, x6, 3), x3129, 3), x3127, 3),
        16259,
        2,
    )?;
    let x3130: BytePoly_2 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x3126, x3126, 2), x3082, 2), x6, 2),
            x15,
            2
        ),
        x6,
        2
    );
    let x3131: BytePoly_3 = bigint_nondet_quot!(ctx, x3130, x6, 3);
    let x3132: BytePoly_1 = bigint_nondet_rem!(ctx, x3130, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3131, x6, 4), x3132, 4), x3130, 4),
        24387,
        2,
    )?;
    let x3133: BytePoly_2 = bigint_mul!(x3126, x3132, 2);
    let x3134: BytePoly_3 = bigint_nondet_quot!(ctx, x3133, x6, 3);
    let x3135: BytePoly_1 = bigint_nondet_rem!(ctx, x3133, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3134, x6, 4), x3135, 4), x3133, 4),
        24387,
        2,
    )?;
    let x3136: BytePoly_1 = bigint_add!(bigint_sub!(x6, bigint_add!(x3135, x3129, 1), 1), x6, 1);
    let x3137: BytePoly_1 = bigint_nondet_quot!(ctx, x3136, x6, 1);
    let x3138: BytePoly_1 = bigint_nondet_rem!(ctx, x3136, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3137, x6, 2), x3138, 2), x3136, 2),
        8131,
        2,
    )?;
    let x3139: BytePoly_1 = bigint_add!(bigint_sub!(x3132, x2102, 1), x6, 1);
    let x3140: BytePoly_1 = bigint_nondet_inv!(ctx, x3139, x6, 1);
    let x3141: BytePoly_2 = bigint_mul!(x3139, x3140, 2);
    let x3142: BytePoly_3 = bigint_nondet_quot!(ctx, x3141, x6, 3);
    let x3143: BytePoly_1 = bigint_nondet_rem!(ctx, x3141, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3142, x6, 4), x3143, 4), x3141, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x3143, x1, 1), 34, 1)?;
    let x3144: BytePoly_2 = bigint_mul!(bigint_add!(bigint_sub!(x3138, x2108, 1), x6, 1), x3140, 2);
    let x3145: BytePoly_3 = bigint_nondet_quot!(ctx, x3144, x6, 3);
    let x3146: BytePoly_1 = bigint_nondet_rem!(ctx, x3144, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3145, x6, 4), x3146, 4), x3144, 4),
        24387,
        2,
    )?;
    let x3147: BytePoly_2 = bigint_add!(bigint_sub!(x2108, bigint_mul!(x3146, x2102, 2), 2), x6, 2);
    let x3148: BytePoly_2 = bigint_nondet_quot!(ctx, x3147, x6, 2);
    let x3149: BytePoly_1 = bigint_nondet_rem!(ctx, x3147, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3148, x6, 3), x3149, 3), x3147, 3),
        16259,
        2,
    )?;
    let x3150: BytePoly_2 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x3146, x3146, 2), x2102, 2), x6, 2),
            x3132,
            2
        ),
        x6,
        2
    );
    let x3151: BytePoly_3 = bigint_nondet_quot!(ctx, x3150, x6, 3);
    let x3152: BytePoly_1 = bigint_nondet_rem!(ctx, x3150, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3151, x6, 4), x3152, 4), x3150, 4),
        24387,
        2,
    )?;
    let x3153: BytePoly_2 = bigint_mul!(x3146, x3152, 2);
    let x3154: BytePoly_3 = bigint_nondet_quot!(ctx, x3153, x6, 3);
    let x3155: BytePoly_1 = bigint_nondet_rem!(ctx, x3153, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3154, x6, 4), x3155, 4), x3153, 4),
        24387,
        2,
    )?;
    let x3156: BytePoly_1 = bigint_add!(bigint_sub!(x6, bigint_add!(x3155, x3149, 1), 1), x6, 1);
    let x3157: BytePoly_1 = bigint_nondet_quot!(ctx, x3156, x6, 1);
    let x3158: BytePoly_1 = bigint_nondet_rem!(ctx, x3156, x6, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3157, x6, 2), x3158, 2), x3156, 2),
        8131,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x13, x3152, 2), 34, 1)?;
    return Ok(());
}
pub fn ecdsa_verify_32(ctx: &mut BigIntContext) -> Result<()> {
    let x0: BytePoly_1 = bigint_const!(ctx, 3);
    let x1: BytePoly_1 = bigint_const!(ctx, 1);
    let x2: BytePoly_1 = bigint_const!(ctx, 2);
    let x3: BytePoly_1 = bigint_const!(ctx, 1);
    let x4: BytePoly_4 = bigint_const!(ctx, 3, 0, 0, 0);
    let x5: BytePoly_4 = bigint_const!(ctx, 0, 0, 0, 0);
    let x6: BytePoly_4 = bigint_const!(ctx, 31, 0, 0, 0);
    let x7: BytePoly_4 = bigint_def!(ctx, 4, 0, 1);
    let x8: BytePoly_4 = bigint_def!(ctx, 4, 1, 1);
    let x9: BytePoly_5 = bigint_def!(ctx, 5, 2, 1);
    let x10: BytePoly_4 = bigint_def!(ctx, 4, 3, 1);
    let x11: BytePoly_4 = bigint_def!(ctx, 4, 4, 1);
    let x12: BytePoly_5 = bigint_def!(ctx, 5, 5, 1);
    let x13: BytePoly_5 = bigint_def!(ctx, 5, 6, 1);
    let x14: BytePoly_5 = bigint_def!(ctx, 5, 7, 1);
    let x15: BytePoly_4 = bigint_def!(ctx, 4, 8, 1);
    let x16: BytePoly_4 = bigint_def!(ctx, 4, 9, 1);
    let x17: BytePoly_8 = bigint_mul!(x10, x10, 8);
    let x18: BytePoly_9 = bigint_nondet_quot!(ctx, x17, x6, 9);
    let x19: BytePoly_4 = bigint_nondet_rem!(ctx, x17, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x18, x6, 13), x19, 13), x17, 13),
        73156,
        4,
    )?;
    let x20: BytePoly_8 = bigint_sub!(
        bigint_mul!(x11, x11, 8),
        bigint_add!(
            bigint_add!(bigint_mul!(x10, x19, 8), bigint_mul!(x10, x5, 8), 8),
            x4,
            8
        ),
        8
    );
    let x21: BytePoly_9 = bigint_nondet_quot!(ctx, x20, x6, 9);
    let x22: BytePoly_4 = bigint_nondet_rem!(ctx, x20, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x21, x6, 13), x22, 13), x20, 13),
        73156,
        4,
    )?;
    eqz(ctx, &x22, 34, 1)?;
    let x23: BytePoly_8 = bigint_mul!(x16, x16, 8);
    let x24: BytePoly_8 = bigint_mul!(x15, x15, 8);
    let x25: BytePoly_9 = bigint_nondet_quot!(ctx, x24, x6, 9);
    let x26: BytePoly_4 = bigint_nondet_rem!(ctx, x24, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x25, x6, 13), x26, 13), x24, 13),
        73156,
        4,
    )?;
    let x27: BytePoly_8 = bigint_mul!(x15, x5, 8);
    let x28: BytePoly_8 = bigint_sub!(
        x23,
        bigint_add!(bigint_add!(bigint_mul!(x15, x26, 8), x27, 8), x4, 8),
        8
    );
    let x29: BytePoly_9 = bigint_nondet_quot!(ctx, x28, x6, 9);
    let x30: BytePoly_4 = bigint_nondet_rem!(ctx, x28, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x29, x6, 13), x30, 13), x28, 13),
        73156,
        4,
    )?;
    eqz(ctx, &x30, 34, 1)?;
    let x31: BytePoly_5 = bigint_sub!(x9, x3, 5);
    let x32: BytePoly_9 = bigint_nondet_quot!(ctx, x24, x6, 9);
    let x33: BytePoly_4 = bigint_nondet_rem!(ctx, x24, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x32, x6, 13), x33, 13), x24, 13),
        73156,
        4,
    )?;
    let x34: BytePoly_8 = bigint_sub!(
        x23,
        bigint_add!(bigint_add!(bigint_mul!(x15, x33, 8), x27, 8), x4, 8),
        8
    );
    let x35: BytePoly_9 = bigint_nondet_quot!(ctx, x34, x6, 9);
    let x36: BytePoly_4 = bigint_nondet_rem!(ctx, x34, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x35, x6, 13), x36, 13), x34, 13),
        73156,
        4,
    )?;
    eqz(ctx, &x36, 34, 1)?;
    let x37: BytePoly_1 = bigint_nondet_rem!(ctx, x31, x2, 1);
    let x38: BytePoly_5 = bigint_nondet_quot!(ctx, x31, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x38, x2, 6), x37, 6), x31, 6),
        40643,
        4,
    )?;
    let x39: BytePoly_1 = bigint_sub!(x3, x37, 1);
    eqz(ctx, &bigint_mul!(x37, x39, 2), 8131, 2)?;
    let x40: BytePoly_4 = bigint_add!(bigint_sub!(x11, x16, 4), x6, 4);
    let x41: BytePoly_4 = bigint_add!(bigint_sub!(x10, x15, 4), x6, 4);
    let x42: BytePoly_4 = bigint_nondet_inv!(ctx, x41, x6, 4);
    let x43: BytePoly_8 = bigint_mul!(x41, x42, 8);
    let x44: BytePoly_9 = bigint_nondet_quot!(ctx, x43, x6, 9);
    let x45: BytePoly_4 = bigint_nondet_rem!(ctx, x43, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x44, x6, 13), x45, 13), x43, 13),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x45, x1, 4), 34, 1)?;
    let x46: BytePoly_8 = bigint_mul!(x40, x42, 8);
    let x47: BytePoly_9 = bigint_nondet_quot!(ctx, x46, x6, 9);
    let x48: BytePoly_4 = bigint_nondet_rem!(ctx, x46, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x47, x6, 13), x48, 13), x46, 13),
        73156,
        4,
    )?;
    let x49: BytePoly_8 = bigint_add!(bigint_sub!(x16, bigint_mul!(x48, x15, 8), 8), x6, 8);
    let x50: BytePoly_8 = bigint_nondet_quot!(ctx, x49, x6, 8);
    let x51: BytePoly_4 = bigint_nondet_rem!(ctx, x49, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x50, x6, 12), x51, 12), x49, 12),
        65028,
        4,
    )?;
    let x52: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x48, x48, 8), x15, 8), x6, 8),
            x10,
            8
        ),
        x6,
        8
    );
    let x53: BytePoly_9 = bigint_nondet_quot!(ctx, x52, x6, 9);
    let x54: BytePoly_4 = bigint_nondet_rem!(ctx, x52, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x53, x6, 13), x54, 13), x52, 13),
        73156,
        4,
    )?;
    let x55: BytePoly_8 = bigint_mul!(x48, x54, 8);
    let x56: BytePoly_9 = bigint_nondet_quot!(ctx, x55, x6, 9);
    let x57: BytePoly_4 = bigint_nondet_rem!(ctx, x55, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x56, x6, 13), x57, 13), x55, 13),
        73156,
        4,
    )?;
    let x58: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x57, x51, 4), 4), x6, 4);
    let x59: BytePoly_4 = bigint_nondet_quot!(ctx, x58, x6, 4);
    let x60: BytePoly_4 = bigint_nondet_rem!(ctx, x58, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x59, x6, 8), x60, 8), x58, 8),
        32515,
        2,
    )?;
    let x61: BytePoly_5 = bigint_add!(bigint_mul!(x54, x37, 5), bigint_mul!(x15, x39, 5), 5);
    let x62: BytePoly_5 = bigint_add!(bigint_mul!(x60, x37, 5), bigint_mul!(x16, x39, 5), 5);
    let x63: BytePoly_6 = bigint_nondet_quot!(ctx, x61, x6, 6);
    let x64: BytePoly_4 = bigint_nondet_rem!(ctx, x61, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x63, x6, 10), x64, 10), x61, 10),
        48771,
        4,
    )?;
    let x65: BytePoly_6 = bigint_nondet_quot!(ctx, x62, x6, 6);
    let x66: BytePoly_4 = bigint_nondet_rem!(ctx, x62, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x65, x6, 10), x66, 10), x62, 10),
        48771,
        4,
    )?;
    let x67: BytePoly_9 = bigint_nondet_quot!(ctx, x17, x6, 9);
    let x68: BytePoly_4 = bigint_nondet_rem!(ctx, x17, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x67, x6, 13), x68, 13), x17, 13),
        73156,
        4,
    )?;
    let x69: BytePoly_5 = bigint_add!(bigint_mul!(x68, x0, 5), x5, 5);
    let x70: BytePoly_6 = bigint_nondet_quot!(ctx, x69, x6, 6);
    let x71: BytePoly_4 = bigint_nondet_rem!(ctx, x69, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x70, x6, 10), x71, 10), x69, 10),
        48771,
        4,
    )?;
    let x72: BytePoly_4 = bigint_add!(x11, x11, 4);
    let x73: BytePoly_4 = bigint_nondet_quot!(ctx, x72, x6, 4);
    let x74: BytePoly_4 = bigint_nondet_rem!(ctx, x72, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x73, x6, 8), x74, 8), x72, 8),
        32515,
        2,
    )?;
    let x75: BytePoly_4 = bigint_nondet_inv!(ctx, x74, x6, 4);
    let x76: BytePoly_8 = bigint_mul!(x74, x75, 8);
    let x77: BytePoly_9 = bigint_nondet_quot!(ctx, x76, x6, 9);
    let x78: BytePoly_4 = bigint_nondet_rem!(ctx, x76, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x77, x6, 13), x78, 13), x76, 13),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x78, x3, 4), 34, 1)?;
    let x79: BytePoly_8 = bigint_mul!(x71, x75, 8);
    let x80: BytePoly_9 = bigint_nondet_quot!(ctx, x79, x6, 9);
    let x81: BytePoly_4 = bigint_nondet_rem!(ctx, x79, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x80, x6, 13), x81, 13), x79, 13),
        73156,
        4,
    )?;
    let x82: BytePoly_8 = bigint_mul!(x81, x10, 8);
    let x83: BytePoly_9 = bigint_nondet_quot!(ctx, x82, x6, 9);
    let x84: BytePoly_4 = bigint_nondet_rem!(ctx, x82, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x83, x6, 13), x84, 13), x82, 13),
        73156,
        4,
    )?;
    let x85: BytePoly_4 = bigint_add!(bigint_sub!(x11, x84, 4), x6, 4);
    let x86: BytePoly_4 = bigint_nondet_quot!(ctx, x85, x6, 4);
    let x87: BytePoly_4 = bigint_nondet_rem!(ctx, x85, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x86, x6, 8), x87, 8), x85, 8),
        32515,
        2,
    )?;
    let x88: BytePoly_8 = bigint_mul!(x81, x81, 8);
    let x89: BytePoly_9 = bigint_nondet_quot!(ctx, x88, x6, 9);
    let x90: BytePoly_4 = bigint_nondet_rem!(ctx, x88, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x89, x6, 13), x90, 13), x88, 13),
        73156,
        4,
    )?;
    let x91: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x90, x10, 4), x6, 4), x10, 4),
        x6,
        4
    );
    let x92: BytePoly_4 = bigint_nondet_quot!(ctx, x91, x6, 4);
    let x93: BytePoly_4 = bigint_nondet_rem!(ctx, x91, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x92, x6, 8), x93, 8), x91, 8),
        32515,
        2,
    )?;
    let x94: BytePoly_8 = bigint_mul!(x81, x93, 8);
    let x95: BytePoly_9 = bigint_nondet_quot!(ctx, x94, x6, 9);
    let x96: BytePoly_4 = bigint_nondet_rem!(ctx, x94, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x95, x6, 13), x96, 13), x94, 13),
        73156,
        4,
    )?;
    let x97: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x96, x87, 4), 4), x6, 4);
    let x98: BytePoly_4 = bigint_nondet_quot!(ctx, x97, x6, 4);
    let x99: BytePoly_4 = bigint_nondet_rem!(ctx, x97, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x98, x6, 8), x99, 8), x97, 8),
        32515,
        2,
    )?;
    let x100: BytePoly_1 = bigint_nondet_rem!(ctx, x38, x2, 1);
    let x101: BytePoly_5 = bigint_nondet_quot!(ctx, x38, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x101, x2, 6), x100, 6), x38, 6),
        40643,
        4,
    )?;
    let x102: BytePoly_1 = bigint_sub!(x3, x100, 1);
    eqz(ctx, &bigint_mul!(x100, x102, 2), 8131, 2)?;
    let x103: BytePoly_4 = bigint_add!(bigint_sub!(x93, x64, 4), x6, 4);
    let x104: BytePoly_4 = bigint_nondet_inv!(ctx, x103, x6, 4);
    let x105: BytePoly_8 = bigint_mul!(x103, x104, 8);
    let x106: BytePoly_9 = bigint_nondet_quot!(ctx, x105, x6, 9);
    let x107: BytePoly_4 = bigint_nondet_rem!(ctx, x105, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x106, x6, 13), x107, 13), x105, 13),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x107, x1, 4), 34, 1)?;
    let x108: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x99, x66, 4), x6, 4), x104, 8);
    let x109: BytePoly_9 = bigint_nondet_quot!(ctx, x108, x6, 9);
    let x110: BytePoly_4 = bigint_nondet_rem!(ctx, x108, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x109, x6, 13), x110, 13), x108, 13),
        73156,
        4,
    )?;
    let x111: BytePoly_8 = bigint_add!(bigint_sub!(x66, bigint_mul!(x110, x64, 8), 8), x6, 8);
    let x112: BytePoly_8 = bigint_nondet_quot!(ctx, x111, x6, 8);
    let x113: BytePoly_4 = bigint_nondet_rem!(ctx, x111, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x112, x6, 12), x113, 12), x111, 12),
        65028,
        4,
    )?;
    let x114: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x110, x110, 8), x64, 8), x6, 8),
            x93,
            8
        ),
        x6,
        8
    );
    let x115: BytePoly_9 = bigint_nondet_quot!(ctx, x114, x6, 9);
    let x116: BytePoly_4 = bigint_nondet_rem!(ctx, x114, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x115, x6, 13), x116, 13), x114, 13),
        73156,
        4,
    )?;
    let x117: BytePoly_8 = bigint_mul!(x110, x116, 8);
    let x118: BytePoly_9 = bigint_nondet_quot!(ctx, x117, x6, 9);
    let x119: BytePoly_4 = bigint_nondet_rem!(ctx, x117, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x118, x6, 13), x119, 13), x117, 13),
        73156,
        4,
    )?;
    let x120: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x119, x113, 4), 4), x6, 4);
    let x121: BytePoly_4 = bigint_nondet_quot!(ctx, x120, x6, 4);
    let x122: BytePoly_4 = bigint_nondet_rem!(ctx, x120, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x121, x6, 8), x122, 8), x120, 8),
        32515,
        2,
    )?;
    let x123: BytePoly_5 = bigint_add!(bigint_mul!(x116, x100, 5), bigint_mul!(x64, x102, 5), 5);
    let x124: BytePoly_5 = bigint_add!(bigint_mul!(x122, x100, 5), bigint_mul!(x66, x102, 5), 5);
    let x125: BytePoly_6 = bigint_nondet_quot!(ctx, x123, x6, 6);
    let x126: BytePoly_4 = bigint_nondet_rem!(ctx, x123, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x125, x6, 10), x126, 10), x123, 10),
        48771,
        4,
    )?;
    let x127: BytePoly_6 = bigint_nondet_quot!(ctx, x124, x6, 6);
    let x128: BytePoly_4 = bigint_nondet_rem!(ctx, x124, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x127, x6, 10), x128, 10), x124, 10),
        48771,
        4,
    )?;
    let x129: BytePoly_8 = bigint_mul!(x93, x93, 8);
    let x130: BytePoly_9 = bigint_nondet_quot!(ctx, x129, x6, 9);
    let x131: BytePoly_4 = bigint_nondet_rem!(ctx, x129, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x130, x6, 13), x131, 13), x129, 13),
        73156,
        4,
    )?;
    let x132: BytePoly_5 = bigint_add!(bigint_mul!(x131, x0, 5), x5, 5);
    let x133: BytePoly_6 = bigint_nondet_quot!(ctx, x132, x6, 6);
    let x134: BytePoly_4 = bigint_nondet_rem!(ctx, x132, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x133, x6, 10), x134, 10), x132, 10),
        48771,
        4,
    )?;
    let x135: BytePoly_4 = bigint_add!(x99, x99, 4);
    let x136: BytePoly_4 = bigint_nondet_quot!(ctx, x135, x6, 4);
    let x137: BytePoly_4 = bigint_nondet_rem!(ctx, x135, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x136, x6, 8), x137, 8), x135, 8),
        32515,
        2,
    )?;
    let x138: BytePoly_4 = bigint_nondet_inv!(ctx, x137, x6, 4);
    let x139: BytePoly_8 = bigint_mul!(x137, x138, 8);
    let x140: BytePoly_9 = bigint_nondet_quot!(ctx, x139, x6, 9);
    let x141: BytePoly_4 = bigint_nondet_rem!(ctx, x139, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x140, x6, 13), x141, 13), x139, 13),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x141, x3, 4), 34, 1)?;
    let x142: BytePoly_8 = bigint_mul!(x134, x138, 8);
    let x143: BytePoly_9 = bigint_nondet_quot!(ctx, x142, x6, 9);
    let x144: BytePoly_4 = bigint_nondet_rem!(ctx, x142, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x143, x6, 13), x144, 13), x142, 13),
        73156,
        4,
    )?;
    let x145: BytePoly_8 = bigint_mul!(x144, x93, 8);
    let x146: BytePoly_9 = bigint_nondet_quot!(ctx, x145, x6, 9);
    let x147: BytePoly_4 = bigint_nondet_rem!(ctx, x145, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x146, x6, 13), x147, 13), x145, 13),
        73156,
        4,
    )?;
    let x148: BytePoly_4 = bigint_add!(bigint_sub!(x99, x147, 4), x6, 4);
    let x149: BytePoly_4 = bigint_nondet_quot!(ctx, x148, x6, 4);
    let x150: BytePoly_4 = bigint_nondet_rem!(ctx, x148, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x149, x6, 8), x150, 8), x148, 8),
        32515,
        2,
    )?;
    let x151: BytePoly_8 = bigint_mul!(x144, x144, 8);
    let x152: BytePoly_9 = bigint_nondet_quot!(ctx, x151, x6, 9);
    let x153: BytePoly_4 = bigint_nondet_rem!(ctx, x151, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x152, x6, 13), x153, 13), x151, 13),
        73156,
        4,
    )?;
    let x154: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x153, x93, 4), x6, 4), x93, 4),
        x6,
        4
    );
    let x155: BytePoly_4 = bigint_nondet_quot!(ctx, x154, x6, 4);
    let x156: BytePoly_4 = bigint_nondet_rem!(ctx, x154, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x155, x6, 8), x156, 8), x154, 8),
        32515,
        2,
    )?;
    let x157: BytePoly_8 = bigint_mul!(x144, x156, 8);
    let x158: BytePoly_9 = bigint_nondet_quot!(ctx, x157, x6, 9);
    let x159: BytePoly_4 = bigint_nondet_rem!(ctx, x157, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x158, x6, 13), x159, 13), x157, 13),
        73156,
        4,
    )?;
    let x160: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x159, x150, 4), 4), x6, 4);
    let x161: BytePoly_4 = bigint_nondet_quot!(ctx, x160, x6, 4);
    let x162: BytePoly_4 = bigint_nondet_rem!(ctx, x160, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x161, x6, 8), x162, 8), x160, 8),
        32515,
        2,
    )?;
    let x163: BytePoly_1 = bigint_nondet_rem!(ctx, x101, x2, 1);
    let x164: BytePoly_5 = bigint_nondet_quot!(ctx, x101, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x164, x2, 6), x163, 6), x101, 6),
        40643,
        4,
    )?;
    let x165: BytePoly_1 = bigint_sub!(x3, x163, 1);
    eqz(ctx, &bigint_mul!(x163, x165, 2), 8131, 2)?;
    let x166: BytePoly_4 = bigint_add!(bigint_sub!(x156, x126, 4), x6, 4);
    let x167: BytePoly_4 = bigint_nondet_inv!(ctx, x166, x6, 4);
    let x168: BytePoly_8 = bigint_mul!(x166, x167, 8);
    let x169: BytePoly_9 = bigint_nondet_quot!(ctx, x168, x6, 9);
    let x170: BytePoly_4 = bigint_nondet_rem!(ctx, x168, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x169, x6, 13), x170, 13), x168, 13),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x170, x1, 4), 34, 1)?;
    let x171: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x162, x128, 4), x6, 4), x167, 8);
    let x172: BytePoly_9 = bigint_nondet_quot!(ctx, x171, x6, 9);
    let x173: BytePoly_4 = bigint_nondet_rem!(ctx, x171, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x172, x6, 13), x173, 13), x171, 13),
        73156,
        4,
    )?;
    let x174: BytePoly_8 = bigint_add!(bigint_sub!(x128, bigint_mul!(x173, x126, 8), 8), x6, 8);
    let x175: BytePoly_8 = bigint_nondet_quot!(ctx, x174, x6, 8);
    let x176: BytePoly_4 = bigint_nondet_rem!(ctx, x174, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x175, x6, 12), x176, 12), x174, 12),
        65028,
        4,
    )?;
    let x177: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x173, x173, 8), x126, 8), x6, 8),
            x156,
            8
        ),
        x6,
        8
    );
    let x178: BytePoly_9 = bigint_nondet_quot!(ctx, x177, x6, 9);
    let x179: BytePoly_4 = bigint_nondet_rem!(ctx, x177, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x178, x6, 13), x179, 13), x177, 13),
        73156,
        4,
    )?;
    let x180: BytePoly_8 = bigint_mul!(x173, x179, 8);
    let x181: BytePoly_9 = bigint_nondet_quot!(ctx, x180, x6, 9);
    let x182: BytePoly_4 = bigint_nondet_rem!(ctx, x180, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x181, x6, 13), x182, 13), x180, 13),
        73156,
        4,
    )?;
    let x183: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x182, x176, 4), 4), x6, 4);
    let x184: BytePoly_4 = bigint_nondet_quot!(ctx, x183, x6, 4);
    let x185: BytePoly_4 = bigint_nondet_rem!(ctx, x183, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x184, x6, 8), x185, 8), x183, 8),
        32515,
        2,
    )?;
    let x186: BytePoly_5 = bigint_add!(bigint_mul!(x179, x163, 5), bigint_mul!(x126, x165, 5), 5);
    let x187: BytePoly_5 = bigint_add!(bigint_mul!(x185, x163, 5), bigint_mul!(x128, x165, 5), 5);
    let x188: BytePoly_6 = bigint_nondet_quot!(ctx, x186, x6, 6);
    let x189: BytePoly_4 = bigint_nondet_rem!(ctx, x186, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x188, x6, 10), x189, 10), x186, 10),
        48771,
        4,
    )?;
    let x190: BytePoly_6 = bigint_nondet_quot!(ctx, x187, x6, 6);
    let x191: BytePoly_4 = bigint_nondet_rem!(ctx, x187, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x190, x6, 10), x191, 10), x187, 10),
        48771,
        4,
    )?;
    let x192: BytePoly_8 = bigint_mul!(x156, x156, 8);
    let x193: BytePoly_9 = bigint_nondet_quot!(ctx, x192, x6, 9);
    let x194: BytePoly_4 = bigint_nondet_rem!(ctx, x192, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x193, x6, 13), x194, 13), x192, 13),
        73156,
        4,
    )?;
    let x195: BytePoly_5 = bigint_add!(bigint_mul!(x194, x0, 5), x5, 5);
    let x196: BytePoly_6 = bigint_nondet_quot!(ctx, x195, x6, 6);
    let x197: BytePoly_4 = bigint_nondet_rem!(ctx, x195, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x196, x6, 10), x197, 10), x195, 10),
        48771,
        4,
    )?;
    let x198: BytePoly_4 = bigint_add!(x162, x162, 4);
    let x199: BytePoly_4 = bigint_nondet_quot!(ctx, x198, x6, 4);
    let x200: BytePoly_4 = bigint_nondet_rem!(ctx, x198, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x199, x6, 8), x200, 8), x198, 8),
        32515,
        2,
    )?;
    let x201: BytePoly_4 = bigint_nondet_inv!(ctx, x200, x6, 4);
    let x202: BytePoly_8 = bigint_mul!(x200, x201, 8);
    let x203: BytePoly_9 = bigint_nondet_quot!(ctx, x202, x6, 9);
    let x204: BytePoly_4 = bigint_nondet_rem!(ctx, x202, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x203, x6, 13), x204, 13), x202, 13),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x204, x3, 4), 34, 1)?;
    let x205: BytePoly_8 = bigint_mul!(x197, x201, 8);
    let x206: BytePoly_9 = bigint_nondet_quot!(ctx, x205, x6, 9);
    let x207: BytePoly_4 = bigint_nondet_rem!(ctx, x205, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x206, x6, 13), x207, 13), x205, 13),
        73156,
        4,
    )?;
    let x208: BytePoly_8 = bigint_mul!(x207, x156, 8);
    let x209: BytePoly_9 = bigint_nondet_quot!(ctx, x208, x6, 9);
    let x210: BytePoly_4 = bigint_nondet_rem!(ctx, x208, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x209, x6, 13), x210, 13), x208, 13),
        73156,
        4,
    )?;
    let x211: BytePoly_4 = bigint_add!(bigint_sub!(x162, x210, 4), x6, 4);
    let x212: BytePoly_4 = bigint_nondet_quot!(ctx, x211, x6, 4);
    let x213: BytePoly_4 = bigint_nondet_rem!(ctx, x211, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x212, x6, 8), x213, 8), x211, 8),
        32515,
        2,
    )?;
    let x214: BytePoly_8 = bigint_mul!(x207, x207, 8);
    let x215: BytePoly_9 = bigint_nondet_quot!(ctx, x214, x6, 9);
    let x216: BytePoly_4 = bigint_nondet_rem!(ctx, x214, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x215, x6, 13), x216, 13), x214, 13),
        73156,
        4,
    )?;
    let x217: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x216, x156, 4), x6, 4), x156, 4),
        x6,
        4
    );
    let x218: BytePoly_4 = bigint_nondet_quot!(ctx, x217, x6, 4);
    let x219: BytePoly_4 = bigint_nondet_rem!(ctx, x217, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x218, x6, 8), x219, 8), x217, 8),
        32515,
        2,
    )?;
    let x220: BytePoly_8 = bigint_mul!(x207, x219, 8);
    let x221: BytePoly_9 = bigint_nondet_quot!(ctx, x220, x6, 9);
    let x222: BytePoly_4 = bigint_nondet_rem!(ctx, x220, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x221, x6, 13), x222, 13), x220, 13),
        73156,
        4,
    )?;
    let x223: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x222, x213, 4), 4), x6, 4);
    let x224: BytePoly_4 = bigint_nondet_quot!(ctx, x223, x6, 4);
    let x225: BytePoly_4 = bigint_nondet_rem!(ctx, x223, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x224, x6, 8), x225, 8), x223, 8),
        32515,
        2,
    )?;
    let x226: BytePoly_1 = bigint_nondet_rem!(ctx, x164, x2, 1);
    let x227: BytePoly_5 = bigint_nondet_quot!(ctx, x164, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x227, x2, 6), x226, 6), x164, 6),
        40643,
        4,
    )?;
    let x228: BytePoly_1 = bigint_sub!(x3, x226, 1);
    eqz(ctx, &bigint_mul!(x226, x228, 2), 8131, 2)?;
    let x229: BytePoly_4 = bigint_add!(bigint_sub!(x219, x189, 4), x6, 4);
    let x230: BytePoly_4 = bigint_nondet_inv!(ctx, x229, x6, 4);
    let x231: BytePoly_8 = bigint_mul!(x229, x230, 8);
    let x232: BytePoly_9 = bigint_nondet_quot!(ctx, x231, x6, 9);
    let x233: BytePoly_4 = bigint_nondet_rem!(ctx, x231, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x232, x6, 13), x233, 13), x231, 13),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x233, x1, 4), 34, 1)?;
    let x234: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x225, x191, 4), x6, 4), x230, 8);
    let x235: BytePoly_9 = bigint_nondet_quot!(ctx, x234, x6, 9);
    let x236: BytePoly_4 = bigint_nondet_rem!(ctx, x234, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x235, x6, 13), x236, 13), x234, 13),
        73156,
        4,
    )?;
    let x237: BytePoly_8 = bigint_add!(bigint_sub!(x191, bigint_mul!(x236, x189, 8), 8), x6, 8);
    let x238: BytePoly_8 = bigint_nondet_quot!(ctx, x237, x6, 8);
    let x239: BytePoly_4 = bigint_nondet_rem!(ctx, x237, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x238, x6, 12), x239, 12), x237, 12),
        65028,
        4,
    )?;
    let x240: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x236, x236, 8), x189, 8), x6, 8),
            x219,
            8
        ),
        x6,
        8
    );
    let x241: BytePoly_9 = bigint_nondet_quot!(ctx, x240, x6, 9);
    let x242: BytePoly_4 = bigint_nondet_rem!(ctx, x240, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x241, x6, 13), x242, 13), x240, 13),
        73156,
        4,
    )?;
    let x243: BytePoly_8 = bigint_mul!(x236, x242, 8);
    let x244: BytePoly_9 = bigint_nondet_quot!(ctx, x243, x6, 9);
    let x245: BytePoly_4 = bigint_nondet_rem!(ctx, x243, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x244, x6, 13), x245, 13), x243, 13),
        73156,
        4,
    )?;
    let x246: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x245, x239, 4), 4), x6, 4);
    let x247: BytePoly_4 = bigint_nondet_quot!(ctx, x246, x6, 4);
    let x248: BytePoly_4 = bigint_nondet_rem!(ctx, x246, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x247, x6, 8), x248, 8), x246, 8),
        32515,
        2,
    )?;
    let x249: BytePoly_5 = bigint_add!(bigint_mul!(x242, x226, 5), bigint_mul!(x189, x228, 5), 5);
    let x250: BytePoly_5 = bigint_add!(bigint_mul!(x248, x226, 5), bigint_mul!(x191, x228, 5), 5);
    let x251: BytePoly_6 = bigint_nondet_quot!(ctx, x249, x6, 6);
    let x252: BytePoly_4 = bigint_nondet_rem!(ctx, x249, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x251, x6, 10), x252, 10), x249, 10),
        48771,
        4,
    )?;
    let x253: BytePoly_6 = bigint_nondet_quot!(ctx, x250, x6, 6);
    let x254: BytePoly_4 = bigint_nondet_rem!(ctx, x250, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x253, x6, 10), x254, 10), x250, 10),
        48771,
        4,
    )?;
    let x255: BytePoly_8 = bigint_mul!(x219, x219, 8);
    let x256: BytePoly_9 = bigint_nondet_quot!(ctx, x255, x6, 9);
    let x257: BytePoly_4 = bigint_nondet_rem!(ctx, x255, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x256, x6, 13), x257, 13), x255, 13),
        73156,
        4,
    )?;
    let x258: BytePoly_5 = bigint_add!(bigint_mul!(x257, x0, 5), x5, 5);
    let x259: BytePoly_6 = bigint_nondet_quot!(ctx, x258, x6, 6);
    let x260: BytePoly_4 = bigint_nondet_rem!(ctx, x258, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x259, x6, 10), x260, 10), x258, 10),
        48771,
        4,
    )?;
    let x261: BytePoly_4 = bigint_add!(x225, x225, 4);
    let x262: BytePoly_4 = bigint_nondet_quot!(ctx, x261, x6, 4);
    let x263: BytePoly_4 = bigint_nondet_rem!(ctx, x261, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x262, x6, 8), x263, 8), x261, 8),
        32515,
        2,
    )?;
    let x264: BytePoly_4 = bigint_nondet_inv!(ctx, x263, x6, 4);
    let x265: BytePoly_8 = bigint_mul!(x263, x264, 8);
    let x266: BytePoly_9 = bigint_nondet_quot!(ctx, x265, x6, 9);
    let x267: BytePoly_4 = bigint_nondet_rem!(ctx, x265, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x266, x6, 13), x267, 13), x265, 13),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x267, x3, 4), 34, 1)?;
    let x268: BytePoly_8 = bigint_mul!(x260, x264, 8);
    let x269: BytePoly_9 = bigint_nondet_quot!(ctx, x268, x6, 9);
    let x270: BytePoly_4 = bigint_nondet_rem!(ctx, x268, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x269, x6, 13), x270, 13), x268, 13),
        73156,
        4,
    )?;
    let x271: BytePoly_8 = bigint_mul!(x270, x219, 8);
    let x272: BytePoly_9 = bigint_nondet_quot!(ctx, x271, x6, 9);
    let x273: BytePoly_4 = bigint_nondet_rem!(ctx, x271, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x272, x6, 13), x273, 13), x271, 13),
        73156,
        4,
    )?;
    let x274: BytePoly_4 = bigint_add!(bigint_sub!(x225, x273, 4), x6, 4);
    let x275: BytePoly_4 = bigint_nondet_quot!(ctx, x274, x6, 4);
    let x276: BytePoly_4 = bigint_nondet_rem!(ctx, x274, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x275, x6, 8), x276, 8), x274, 8),
        32515,
        2,
    )?;
    let x277: BytePoly_8 = bigint_mul!(x270, x270, 8);
    let x278: BytePoly_9 = bigint_nondet_quot!(ctx, x277, x6, 9);
    let x279: BytePoly_4 = bigint_nondet_rem!(ctx, x277, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x278, x6, 13), x279, 13), x277, 13),
        73156,
        4,
    )?;
    let x280: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x279, x219, 4), x6, 4), x219, 4),
        x6,
        4
    );
    let x281: BytePoly_4 = bigint_nondet_quot!(ctx, x280, x6, 4);
    let x282: BytePoly_4 = bigint_nondet_rem!(ctx, x280, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x281, x6, 8), x282, 8), x280, 8),
        32515,
        2,
    )?;
    let x283: BytePoly_8 = bigint_mul!(x270, x282, 8);
    let x284: BytePoly_9 = bigint_nondet_quot!(ctx, x283, x6, 9);
    let x285: BytePoly_4 = bigint_nondet_rem!(ctx, x283, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x284, x6, 13), x285, 13), x283, 13),
        73156,
        4,
    )?;
    let x286: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x285, x276, 4), 4), x6, 4);
    let x287: BytePoly_4 = bigint_nondet_quot!(ctx, x286, x6, 4);
    let x288: BytePoly_4 = bigint_nondet_rem!(ctx, x286, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x287, x6, 8), x288, 8), x286, 8),
        32515,
        2,
    )?;
    let x289: BytePoly_1 = bigint_nondet_rem!(ctx, x227, x2, 1);
    let x290: BytePoly_5 = bigint_nondet_quot!(ctx, x227, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x290, x2, 6), x289, 6), x227, 6),
        40643,
        4,
    )?;
    let x291: BytePoly_1 = bigint_sub!(x3, x289, 1);
    eqz(ctx, &bigint_mul!(x289, x291, 2), 8131, 2)?;
    let x292: BytePoly_4 = bigint_add!(bigint_sub!(x282, x252, 4), x6, 4);
    let x293: BytePoly_4 = bigint_nondet_inv!(ctx, x292, x6, 4);
    let x294: BytePoly_8 = bigint_mul!(x292, x293, 8);
    let x295: BytePoly_9 = bigint_nondet_quot!(ctx, x294, x6, 9);
    let x296: BytePoly_4 = bigint_nondet_rem!(ctx, x294, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x295, x6, 13), x296, 13), x294, 13),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x296, x1, 4), 34, 1)?;
    let x297: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x288, x254, 4), x6, 4), x293, 8);
    let x298: BytePoly_9 = bigint_nondet_quot!(ctx, x297, x6, 9);
    let x299: BytePoly_4 = bigint_nondet_rem!(ctx, x297, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x298, x6, 13), x299, 13), x297, 13),
        73156,
        4,
    )?;
    let x300: BytePoly_8 = bigint_add!(bigint_sub!(x254, bigint_mul!(x299, x252, 8), 8), x6, 8);
    let x301: BytePoly_8 = bigint_nondet_quot!(ctx, x300, x6, 8);
    let x302: BytePoly_4 = bigint_nondet_rem!(ctx, x300, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x301, x6, 12), x302, 12), x300, 12),
        65028,
        4,
    )?;
    let x303: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x299, x299, 8), x252, 8), x6, 8),
            x282,
            8
        ),
        x6,
        8
    );
    let x304: BytePoly_9 = bigint_nondet_quot!(ctx, x303, x6, 9);
    let x305: BytePoly_4 = bigint_nondet_rem!(ctx, x303, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x304, x6, 13), x305, 13), x303, 13),
        73156,
        4,
    )?;
    let x306: BytePoly_8 = bigint_mul!(x299, x305, 8);
    let x307: BytePoly_9 = bigint_nondet_quot!(ctx, x306, x6, 9);
    let x308: BytePoly_4 = bigint_nondet_rem!(ctx, x306, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x307, x6, 13), x308, 13), x306, 13),
        73156,
        4,
    )?;
    let x309: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x308, x302, 4), 4), x6, 4);
    let x310: BytePoly_4 = bigint_nondet_quot!(ctx, x309, x6, 4);
    let x311: BytePoly_4 = bigint_nondet_rem!(ctx, x309, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x310, x6, 8), x311, 8), x309, 8),
        32515,
        2,
    )?;
    let x312: BytePoly_5 = bigint_add!(bigint_mul!(x305, x289, 5), bigint_mul!(x252, x291, 5), 5);
    let x313: BytePoly_5 = bigint_add!(bigint_mul!(x311, x289, 5), bigint_mul!(x254, x291, 5), 5);
    let x314: BytePoly_6 = bigint_nondet_quot!(ctx, x312, x6, 6);
    let x315: BytePoly_4 = bigint_nondet_rem!(ctx, x312, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x314, x6, 10), x315, 10), x312, 10),
        48771,
        4,
    )?;
    let x316: BytePoly_6 = bigint_nondet_quot!(ctx, x313, x6, 6);
    let x317: BytePoly_4 = bigint_nondet_rem!(ctx, x313, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x316, x6, 10), x317, 10), x313, 10),
        48771,
        4,
    )?;
    let x318: BytePoly_8 = bigint_mul!(x282, x282, 8);
    let x319: BytePoly_9 = bigint_nondet_quot!(ctx, x318, x6, 9);
    let x320: BytePoly_4 = bigint_nondet_rem!(ctx, x318, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x319, x6, 13), x320, 13), x318, 13),
        73156,
        4,
    )?;
    let x321: BytePoly_5 = bigint_add!(bigint_mul!(x320, x0, 5), x5, 5);
    let x322: BytePoly_6 = bigint_nondet_quot!(ctx, x321, x6, 6);
    let x323: BytePoly_4 = bigint_nondet_rem!(ctx, x321, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x322, x6, 10), x323, 10), x321, 10),
        48771,
        4,
    )?;
    let x324: BytePoly_4 = bigint_add!(x288, x288, 4);
    let x325: BytePoly_4 = bigint_nondet_quot!(ctx, x324, x6, 4);
    let x326: BytePoly_4 = bigint_nondet_rem!(ctx, x324, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x325, x6, 8), x326, 8), x324, 8),
        32515,
        2,
    )?;
    let x327: BytePoly_4 = bigint_nondet_inv!(ctx, x326, x6, 4);
    let x328: BytePoly_8 = bigint_mul!(x326, x327, 8);
    let x329: BytePoly_9 = bigint_nondet_quot!(ctx, x328, x6, 9);
    let x330: BytePoly_4 = bigint_nondet_rem!(ctx, x328, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x329, x6, 13), x330, 13), x328, 13),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x330, x3, 4), 34, 1)?;
    let x331: BytePoly_8 = bigint_mul!(x323, x327, 8);
    let x332: BytePoly_9 = bigint_nondet_quot!(ctx, x331, x6, 9);
    let x333: BytePoly_4 = bigint_nondet_rem!(ctx, x331, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x332, x6, 13), x333, 13), x331, 13),
        73156,
        4,
    )?;
    let x334: BytePoly_8 = bigint_mul!(x333, x282, 8);
    let x335: BytePoly_9 = bigint_nondet_quot!(ctx, x334, x6, 9);
    let x336: BytePoly_4 = bigint_nondet_rem!(ctx, x334, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x335, x6, 13), x336, 13), x334, 13),
        73156,
        4,
    )?;
    let x337: BytePoly_4 = bigint_add!(bigint_sub!(x288, x336, 4), x6, 4);
    let x338: BytePoly_4 = bigint_nondet_quot!(ctx, x337, x6, 4);
    let x339: BytePoly_4 = bigint_nondet_rem!(ctx, x337, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x338, x6, 8), x339, 8), x337, 8),
        32515,
        2,
    )?;
    let x340: BytePoly_8 = bigint_mul!(x333, x333, 8);
    let x341: BytePoly_9 = bigint_nondet_quot!(ctx, x340, x6, 9);
    let x342: BytePoly_4 = bigint_nondet_rem!(ctx, x340, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x341, x6, 13), x342, 13), x340, 13),
        73156,
        4,
    )?;
    let x343: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x342, x282, 4), x6, 4), x282, 4),
        x6,
        4
    );
    let x344: BytePoly_4 = bigint_nondet_quot!(ctx, x343, x6, 4);
    let x345: BytePoly_4 = bigint_nondet_rem!(ctx, x343, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x344, x6, 8), x345, 8), x343, 8),
        32515,
        2,
    )?;
    let x346: BytePoly_8 = bigint_mul!(x333, x345, 8);
    let x347: BytePoly_9 = bigint_nondet_quot!(ctx, x346, x6, 9);
    let x348: BytePoly_4 = bigint_nondet_rem!(ctx, x346, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x347, x6, 13), x348, 13), x346, 13),
        73156,
        4,
    )?;
    let x349: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x348, x339, 4), 4), x6, 4);
    let x350: BytePoly_4 = bigint_nondet_quot!(ctx, x349, x6, 4);
    let x351: BytePoly_4 = bigint_nondet_rem!(ctx, x349, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x350, x6, 8), x351, 8), x349, 8),
        32515,
        2,
    )?;
    let x352: BytePoly_1 = bigint_nondet_rem!(ctx, x290, x2, 1);
    let x353: BytePoly_5 = bigint_nondet_quot!(ctx, x290, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x353, x2, 6), x352, 6), x290, 6),
        40643,
        4,
    )?;
    let x354: BytePoly_1 = bigint_sub!(x3, x352, 1);
    eqz(ctx, &bigint_mul!(x352, x354, 2), 8131, 2)?;
    let x355: BytePoly_4 = bigint_add!(bigint_sub!(x345, x315, 4), x6, 4);
    let x356: BytePoly_4 = bigint_nondet_inv!(ctx, x355, x6, 4);
    let x357: BytePoly_8 = bigint_mul!(x355, x356, 8);
    let x358: BytePoly_9 = bigint_nondet_quot!(ctx, x357, x6, 9);
    let x359: BytePoly_4 = bigint_nondet_rem!(ctx, x357, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x358, x6, 13), x359, 13), x357, 13),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x359, x1, 4), 34, 1)?;
    let x360: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x351, x317, 4), x6, 4), x356, 8);
    let x361: BytePoly_9 = bigint_nondet_quot!(ctx, x360, x6, 9);
    let x362: BytePoly_4 = bigint_nondet_rem!(ctx, x360, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x361, x6, 13), x362, 13), x360, 13),
        73156,
        4,
    )?;
    let x363: BytePoly_8 = bigint_add!(bigint_sub!(x317, bigint_mul!(x362, x315, 8), 8), x6, 8);
    let x364: BytePoly_8 = bigint_nondet_quot!(ctx, x363, x6, 8);
    let x365: BytePoly_4 = bigint_nondet_rem!(ctx, x363, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x364, x6, 12), x365, 12), x363, 12),
        65028,
        4,
    )?;
    let x366: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x362, x362, 8), x315, 8), x6, 8),
            x345,
            8
        ),
        x6,
        8
    );
    let x367: BytePoly_9 = bigint_nondet_quot!(ctx, x366, x6, 9);
    let x368: BytePoly_4 = bigint_nondet_rem!(ctx, x366, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x367, x6, 13), x368, 13), x366, 13),
        73156,
        4,
    )?;
    let x369: BytePoly_8 = bigint_mul!(x362, x368, 8);
    let x370: BytePoly_9 = bigint_nondet_quot!(ctx, x369, x6, 9);
    let x371: BytePoly_4 = bigint_nondet_rem!(ctx, x369, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x370, x6, 13), x371, 13), x369, 13),
        73156,
        4,
    )?;
    let x372: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x371, x365, 4), 4), x6, 4);
    let x373: BytePoly_4 = bigint_nondet_quot!(ctx, x372, x6, 4);
    let x374: BytePoly_4 = bigint_nondet_rem!(ctx, x372, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x373, x6, 8), x374, 8), x372, 8),
        32515,
        2,
    )?;
    let x375: BytePoly_5 = bigint_add!(bigint_mul!(x368, x352, 5), bigint_mul!(x315, x354, 5), 5);
    let x376: BytePoly_5 = bigint_add!(bigint_mul!(x374, x352, 5), bigint_mul!(x317, x354, 5), 5);
    let x377: BytePoly_6 = bigint_nondet_quot!(ctx, x375, x6, 6);
    let x378: BytePoly_4 = bigint_nondet_rem!(ctx, x375, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x377, x6, 10), x378, 10), x375, 10),
        48771,
        4,
    )?;
    let x379: BytePoly_6 = bigint_nondet_quot!(ctx, x376, x6, 6);
    let x380: BytePoly_4 = bigint_nondet_rem!(ctx, x376, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x379, x6, 10), x380, 10), x376, 10),
        48771,
        4,
    )?;
    let x381: BytePoly_8 = bigint_mul!(x345, x345, 8);
    let x382: BytePoly_9 = bigint_nondet_quot!(ctx, x381, x6, 9);
    let x383: BytePoly_4 = bigint_nondet_rem!(ctx, x381, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x382, x6, 13), x383, 13), x381, 13),
        73156,
        4,
    )?;
    let x384: BytePoly_5 = bigint_add!(bigint_mul!(x383, x0, 5), x5, 5);
    let x385: BytePoly_6 = bigint_nondet_quot!(ctx, x384, x6, 6);
    let x386: BytePoly_4 = bigint_nondet_rem!(ctx, x384, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x385, x6, 10), x386, 10), x384, 10),
        48771,
        4,
    )?;
    let x387: BytePoly_4 = bigint_add!(x351, x351, 4);
    let x388: BytePoly_4 = bigint_nondet_quot!(ctx, x387, x6, 4);
    let x389: BytePoly_4 = bigint_nondet_rem!(ctx, x387, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x388, x6, 8), x389, 8), x387, 8),
        32515,
        2,
    )?;
    let x390: BytePoly_4 = bigint_nondet_inv!(ctx, x389, x6, 4);
    let x391: BytePoly_8 = bigint_mul!(x389, x390, 8);
    let x392: BytePoly_9 = bigint_nondet_quot!(ctx, x391, x6, 9);
    let x393: BytePoly_4 = bigint_nondet_rem!(ctx, x391, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x392, x6, 13), x393, 13), x391, 13),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x393, x3, 4), 34, 1)?;
    let x394: BytePoly_8 = bigint_mul!(x386, x390, 8);
    let x395: BytePoly_9 = bigint_nondet_quot!(ctx, x394, x6, 9);
    let x396: BytePoly_4 = bigint_nondet_rem!(ctx, x394, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x395, x6, 13), x396, 13), x394, 13),
        73156,
        4,
    )?;
    let x397: BytePoly_8 = bigint_mul!(x396, x345, 8);
    let x398: BytePoly_9 = bigint_nondet_quot!(ctx, x397, x6, 9);
    let x399: BytePoly_4 = bigint_nondet_rem!(ctx, x397, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x398, x6, 13), x399, 13), x397, 13),
        73156,
        4,
    )?;
    let x400: BytePoly_4 = bigint_add!(bigint_sub!(x351, x399, 4), x6, 4);
    let x401: BytePoly_4 = bigint_nondet_quot!(ctx, x400, x6, 4);
    let x402: BytePoly_4 = bigint_nondet_rem!(ctx, x400, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x401, x6, 8), x402, 8), x400, 8),
        32515,
        2,
    )?;
    let x403: BytePoly_8 = bigint_mul!(x396, x396, 8);
    let x404: BytePoly_9 = bigint_nondet_quot!(ctx, x403, x6, 9);
    let x405: BytePoly_4 = bigint_nondet_rem!(ctx, x403, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x404, x6, 13), x405, 13), x403, 13),
        73156,
        4,
    )?;
    let x406: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x405, x345, 4), x6, 4), x345, 4),
        x6,
        4
    );
    let x407: BytePoly_4 = bigint_nondet_quot!(ctx, x406, x6, 4);
    let x408: BytePoly_4 = bigint_nondet_rem!(ctx, x406, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x407, x6, 8), x408, 8), x406, 8),
        32515,
        2,
    )?;
    let x409: BytePoly_8 = bigint_mul!(x396, x408, 8);
    let x410: BytePoly_9 = bigint_nondet_quot!(ctx, x409, x6, 9);
    let x411: BytePoly_4 = bigint_nondet_rem!(ctx, x409, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x410, x6, 13), x411, 13), x409, 13),
        73156,
        4,
    )?;
    let x412: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x411, x402, 4), 4), x6, 4);
    let x413: BytePoly_4 = bigint_nondet_quot!(ctx, x412, x6, 4);
    let x414: BytePoly_4 = bigint_nondet_rem!(ctx, x412, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x413, x6, 8), x414, 8), x412, 8),
        32515,
        2,
    )?;
    let x415: BytePoly_1 = bigint_nondet_rem!(ctx, x353, x2, 1);
    let x416: BytePoly_5 = bigint_nondet_quot!(ctx, x353, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x416, x2, 6), x415, 6), x353, 6),
        40643,
        4,
    )?;
    let x417: BytePoly_1 = bigint_sub!(x3, x415, 1);
    eqz(ctx, &bigint_mul!(x415, x417, 2), 8131, 2)?;
    let x418: BytePoly_4 = bigint_add!(bigint_sub!(x408, x378, 4), x6, 4);
    let x419: BytePoly_4 = bigint_nondet_inv!(ctx, x418, x6, 4);
    let x420: BytePoly_8 = bigint_mul!(x418, x419, 8);
    let x421: BytePoly_9 = bigint_nondet_quot!(ctx, x420, x6, 9);
    let x422: BytePoly_4 = bigint_nondet_rem!(ctx, x420, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x421, x6, 13), x422, 13), x420, 13),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x422, x1, 4), 34, 1)?;
    let x423: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x414, x380, 4), x6, 4), x419, 8);
    let x424: BytePoly_9 = bigint_nondet_quot!(ctx, x423, x6, 9);
    let x425: BytePoly_4 = bigint_nondet_rem!(ctx, x423, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x424, x6, 13), x425, 13), x423, 13),
        73156,
        4,
    )?;
    let x426: BytePoly_8 = bigint_add!(bigint_sub!(x380, bigint_mul!(x425, x378, 8), 8), x6, 8);
    let x427: BytePoly_8 = bigint_nondet_quot!(ctx, x426, x6, 8);
    let x428: BytePoly_4 = bigint_nondet_rem!(ctx, x426, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x427, x6, 12), x428, 12), x426, 12),
        65028,
        4,
    )?;
    let x429: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x425, x425, 8), x378, 8), x6, 8),
            x408,
            8
        ),
        x6,
        8
    );
    let x430: BytePoly_9 = bigint_nondet_quot!(ctx, x429, x6, 9);
    let x431: BytePoly_4 = bigint_nondet_rem!(ctx, x429, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x430, x6, 13), x431, 13), x429, 13),
        73156,
        4,
    )?;
    let x432: BytePoly_8 = bigint_mul!(x425, x431, 8);
    let x433: BytePoly_9 = bigint_nondet_quot!(ctx, x432, x6, 9);
    let x434: BytePoly_4 = bigint_nondet_rem!(ctx, x432, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x433, x6, 13), x434, 13), x432, 13),
        73156,
        4,
    )?;
    let x435: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x434, x428, 4), 4), x6, 4);
    let x436: BytePoly_4 = bigint_nondet_quot!(ctx, x435, x6, 4);
    let x437: BytePoly_4 = bigint_nondet_rem!(ctx, x435, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x436, x6, 8), x437, 8), x435, 8),
        32515,
        2,
    )?;
    let x438: BytePoly_5 = bigint_add!(bigint_mul!(x431, x415, 5), bigint_mul!(x378, x417, 5), 5);
    let x439: BytePoly_5 = bigint_add!(bigint_mul!(x437, x415, 5), bigint_mul!(x380, x417, 5), 5);
    let x440: BytePoly_6 = bigint_nondet_quot!(ctx, x438, x6, 6);
    let x441: BytePoly_4 = bigint_nondet_rem!(ctx, x438, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x440, x6, 10), x441, 10), x438, 10),
        48771,
        4,
    )?;
    let x442: BytePoly_6 = bigint_nondet_quot!(ctx, x439, x6, 6);
    let x443: BytePoly_4 = bigint_nondet_rem!(ctx, x439, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x442, x6, 10), x443, 10), x439, 10),
        48771,
        4,
    )?;
    let x444: BytePoly_8 = bigint_mul!(x408, x408, 8);
    let x445: BytePoly_9 = bigint_nondet_quot!(ctx, x444, x6, 9);
    let x446: BytePoly_4 = bigint_nondet_rem!(ctx, x444, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x445, x6, 13), x446, 13), x444, 13),
        73156,
        4,
    )?;
    let x447: BytePoly_5 = bigint_add!(bigint_mul!(x446, x0, 5), x5, 5);
    let x448: BytePoly_6 = bigint_nondet_quot!(ctx, x447, x6, 6);
    let x449: BytePoly_4 = bigint_nondet_rem!(ctx, x447, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x448, x6, 10), x449, 10), x447, 10),
        48771,
        4,
    )?;
    let x450: BytePoly_4 = bigint_add!(x414, x414, 4);
    let x451: BytePoly_4 = bigint_nondet_quot!(ctx, x450, x6, 4);
    let x452: BytePoly_4 = bigint_nondet_rem!(ctx, x450, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x451, x6, 8), x452, 8), x450, 8),
        32515,
        2,
    )?;
    let x453: BytePoly_4 = bigint_nondet_inv!(ctx, x452, x6, 4);
    let x454: BytePoly_8 = bigint_mul!(x452, x453, 8);
    let x455: BytePoly_9 = bigint_nondet_quot!(ctx, x454, x6, 9);
    let x456: BytePoly_4 = bigint_nondet_rem!(ctx, x454, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x455, x6, 13), x456, 13), x454, 13),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x456, x3, 4), 34, 1)?;
    let x457: BytePoly_8 = bigint_mul!(x449, x453, 8);
    let x458: BytePoly_9 = bigint_nondet_quot!(ctx, x457, x6, 9);
    let x459: BytePoly_4 = bigint_nondet_rem!(ctx, x457, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x458, x6, 13), x459, 13), x457, 13),
        73156,
        4,
    )?;
    let x460: BytePoly_8 = bigint_mul!(x459, x408, 8);
    let x461: BytePoly_9 = bigint_nondet_quot!(ctx, x460, x6, 9);
    let x462: BytePoly_4 = bigint_nondet_rem!(ctx, x460, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x461, x6, 13), x462, 13), x460, 13),
        73156,
        4,
    )?;
    let x463: BytePoly_4 = bigint_add!(bigint_sub!(x414, x462, 4), x6, 4);
    let x464: BytePoly_4 = bigint_nondet_quot!(ctx, x463, x6, 4);
    let x465: BytePoly_4 = bigint_nondet_rem!(ctx, x463, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x464, x6, 8), x465, 8), x463, 8),
        32515,
        2,
    )?;
    let x466: BytePoly_8 = bigint_mul!(x459, x459, 8);
    let x467: BytePoly_9 = bigint_nondet_quot!(ctx, x466, x6, 9);
    let x468: BytePoly_4 = bigint_nondet_rem!(ctx, x466, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x467, x6, 13), x468, 13), x466, 13),
        73156,
        4,
    )?;
    let x469: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x468, x408, 4), x6, 4), x408, 4),
        x6,
        4
    );
    let x470: BytePoly_4 = bigint_nondet_quot!(ctx, x469, x6, 4);
    let x471: BytePoly_4 = bigint_nondet_rem!(ctx, x469, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x470, x6, 8), x471, 8), x469, 8),
        32515,
        2,
    )?;
    let x472: BytePoly_8 = bigint_mul!(x459, x471, 8);
    let x473: BytePoly_9 = bigint_nondet_quot!(ctx, x472, x6, 9);
    let x474: BytePoly_4 = bigint_nondet_rem!(ctx, x472, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x473, x6, 13), x474, 13), x472, 13),
        73156,
        4,
    )?;
    let x475: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x474, x465, 4), 4), x6, 4);
    let x476: BytePoly_4 = bigint_nondet_quot!(ctx, x475, x6, 4);
    let x477: BytePoly_4 = bigint_nondet_rem!(ctx, x475, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x476, x6, 8), x477, 8), x475, 8),
        32515,
        2,
    )?;
    let x478: BytePoly_1 = bigint_nondet_rem!(ctx, x416, x2, 1);
    let x479: BytePoly_5 = bigint_nondet_quot!(ctx, x416, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x479, x2, 6), x478, 6), x416, 6),
        40643,
        4,
    )?;
    let x480: BytePoly_1 = bigint_sub!(x3, x478, 1);
    eqz(ctx, &bigint_mul!(x478, x480, 2), 8131, 2)?;
    let x481: BytePoly_4 = bigint_add!(bigint_sub!(x471, x441, 4), x6, 4);
    let x482: BytePoly_4 = bigint_nondet_inv!(ctx, x481, x6, 4);
    let x483: BytePoly_8 = bigint_mul!(x481, x482, 8);
    let x484: BytePoly_9 = bigint_nondet_quot!(ctx, x483, x6, 9);
    let x485: BytePoly_4 = bigint_nondet_rem!(ctx, x483, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x484, x6, 13), x485, 13), x483, 13),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x485, x1, 4), 34, 1)?;
    let x486: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x477, x443, 4), x6, 4), x482, 8);
    let x487: BytePoly_9 = bigint_nondet_quot!(ctx, x486, x6, 9);
    let x488: BytePoly_4 = bigint_nondet_rem!(ctx, x486, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x487, x6, 13), x488, 13), x486, 13),
        73156,
        4,
    )?;
    let x489: BytePoly_8 = bigint_add!(bigint_sub!(x443, bigint_mul!(x488, x441, 8), 8), x6, 8);
    let x490: BytePoly_8 = bigint_nondet_quot!(ctx, x489, x6, 8);
    let x491: BytePoly_4 = bigint_nondet_rem!(ctx, x489, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x490, x6, 12), x491, 12), x489, 12),
        65028,
        4,
    )?;
    let x492: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x488, x488, 8), x441, 8), x6, 8),
            x471,
            8
        ),
        x6,
        8
    );
    let x493: BytePoly_9 = bigint_nondet_quot!(ctx, x492, x6, 9);
    let x494: BytePoly_4 = bigint_nondet_rem!(ctx, x492, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x493, x6, 13), x494, 13), x492, 13),
        73156,
        4,
    )?;
    let x495: BytePoly_8 = bigint_mul!(x488, x494, 8);
    let x496: BytePoly_9 = bigint_nondet_quot!(ctx, x495, x6, 9);
    let x497: BytePoly_4 = bigint_nondet_rem!(ctx, x495, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x496, x6, 13), x497, 13), x495, 13),
        73156,
        4,
    )?;
    let x498: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x497, x491, 4), 4), x6, 4);
    let x499: BytePoly_4 = bigint_nondet_quot!(ctx, x498, x6, 4);
    let x500: BytePoly_4 = bigint_nondet_rem!(ctx, x498, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x499, x6, 8), x500, 8), x498, 8),
        32515,
        2,
    )?;
    let x501: BytePoly_5 = bigint_add!(bigint_mul!(x494, x478, 5), bigint_mul!(x441, x480, 5), 5);
    let x502: BytePoly_5 = bigint_add!(bigint_mul!(x500, x478, 5), bigint_mul!(x443, x480, 5), 5);
    let x503: BytePoly_6 = bigint_nondet_quot!(ctx, x501, x6, 6);
    let x504: BytePoly_4 = bigint_nondet_rem!(ctx, x501, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x503, x6, 10), x504, 10), x501, 10),
        48771,
        4,
    )?;
    let x505: BytePoly_6 = bigint_nondet_quot!(ctx, x502, x6, 6);
    let x506: BytePoly_4 = bigint_nondet_rem!(ctx, x502, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x505, x6, 10), x506, 10), x502, 10),
        48771,
        4,
    )?;
    let x507: BytePoly_8 = bigint_mul!(x471, x471, 8);
    let x508: BytePoly_9 = bigint_nondet_quot!(ctx, x507, x6, 9);
    let x509: BytePoly_4 = bigint_nondet_rem!(ctx, x507, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x508, x6, 13), x509, 13), x507, 13),
        73156,
        4,
    )?;
    let x510: BytePoly_5 = bigint_add!(bigint_mul!(x509, x0, 5), x5, 5);
    let x511: BytePoly_6 = bigint_nondet_quot!(ctx, x510, x6, 6);
    let x512: BytePoly_4 = bigint_nondet_rem!(ctx, x510, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x511, x6, 10), x512, 10), x510, 10),
        48771,
        4,
    )?;
    let x513: BytePoly_4 = bigint_add!(x477, x477, 4);
    let x514: BytePoly_4 = bigint_nondet_quot!(ctx, x513, x6, 4);
    let x515: BytePoly_4 = bigint_nondet_rem!(ctx, x513, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x514, x6, 8), x515, 8), x513, 8),
        32515,
        2,
    )?;
    let x516: BytePoly_4 = bigint_nondet_inv!(ctx, x515, x6, 4);
    let x517: BytePoly_8 = bigint_mul!(x515, x516, 8);
    let x518: BytePoly_9 = bigint_nondet_quot!(ctx, x517, x6, 9);
    let x519: BytePoly_4 = bigint_nondet_rem!(ctx, x517, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x518, x6, 13), x519, 13), x517, 13),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x519, x3, 4), 34, 1)?;
    let x520: BytePoly_8 = bigint_mul!(x512, x516, 8);
    let x521: BytePoly_9 = bigint_nondet_quot!(ctx, x520, x6, 9);
    let x522: BytePoly_4 = bigint_nondet_rem!(ctx, x520, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x521, x6, 13), x522, 13), x520, 13),
        73156,
        4,
    )?;
    let x523: BytePoly_8 = bigint_mul!(x522, x471, 8);
    let x524: BytePoly_9 = bigint_nondet_quot!(ctx, x523, x6, 9);
    let x525: BytePoly_4 = bigint_nondet_rem!(ctx, x523, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x524, x6, 13), x525, 13), x523, 13),
        73156,
        4,
    )?;
    let x526: BytePoly_4 = bigint_add!(bigint_sub!(x477, x525, 4), x6, 4);
    let x527: BytePoly_4 = bigint_nondet_quot!(ctx, x526, x6, 4);
    let x528: BytePoly_4 = bigint_nondet_rem!(ctx, x526, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x527, x6, 8), x528, 8), x526, 8),
        32515,
        2,
    )?;
    let x529: BytePoly_8 = bigint_mul!(x522, x522, 8);
    let x530: BytePoly_9 = bigint_nondet_quot!(ctx, x529, x6, 9);
    let x531: BytePoly_4 = bigint_nondet_rem!(ctx, x529, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x530, x6, 13), x531, 13), x529, 13),
        73156,
        4,
    )?;
    let x532: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x531, x471, 4), x6, 4), x471, 4),
        x6,
        4
    );
    let x533: BytePoly_4 = bigint_nondet_quot!(ctx, x532, x6, 4);
    let x534: BytePoly_4 = bigint_nondet_rem!(ctx, x532, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x533, x6, 8), x534, 8), x532, 8),
        32515,
        2,
    )?;
    let x535: BytePoly_8 = bigint_mul!(x522, x534, 8);
    let x536: BytePoly_9 = bigint_nondet_quot!(ctx, x535, x6, 9);
    let x537: BytePoly_4 = bigint_nondet_rem!(ctx, x535, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x536, x6, 13), x537, 13), x535, 13),
        73156,
        4,
    )?;
    let x538: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x537, x528, 4), 4), x6, 4);
    let x539: BytePoly_4 = bigint_nondet_quot!(ctx, x538, x6, 4);
    let x540: BytePoly_4 = bigint_nondet_rem!(ctx, x538, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x539, x6, 8), x540, 8), x538, 8),
        32515,
        2,
    )?;
    let x541: BytePoly_1 = bigint_nondet_rem!(ctx, x479, x2, 1);
    let x542: BytePoly_5 = bigint_nondet_quot!(ctx, x479, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x542, x2, 6), x541, 6), x479, 6),
        40643,
        4,
    )?;
    let x543: BytePoly_1 = bigint_sub!(x3, x541, 1);
    eqz(ctx, &bigint_mul!(x541, x543, 2), 8131, 2)?;
    let x544: BytePoly_4 = bigint_add!(bigint_sub!(x534, x504, 4), x6, 4);
    let x545: BytePoly_4 = bigint_nondet_inv!(ctx, x544, x6, 4);
    let x546: BytePoly_8 = bigint_mul!(x544, x545, 8);
    let x547: BytePoly_9 = bigint_nondet_quot!(ctx, x546, x6, 9);
    let x548: BytePoly_4 = bigint_nondet_rem!(ctx, x546, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x547, x6, 13), x548, 13), x546, 13),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x548, x1, 4), 34, 1)?;
    let x549: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x540, x506, 4), x6, 4), x545, 8);
    let x550: BytePoly_9 = bigint_nondet_quot!(ctx, x549, x6, 9);
    let x551: BytePoly_4 = bigint_nondet_rem!(ctx, x549, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x550, x6, 13), x551, 13), x549, 13),
        73156,
        4,
    )?;
    let x552: BytePoly_8 = bigint_add!(bigint_sub!(x506, bigint_mul!(x551, x504, 8), 8), x6, 8);
    let x553: BytePoly_8 = bigint_nondet_quot!(ctx, x552, x6, 8);
    let x554: BytePoly_4 = bigint_nondet_rem!(ctx, x552, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x553, x6, 12), x554, 12), x552, 12),
        65028,
        4,
    )?;
    let x555: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x551, x551, 8), x504, 8), x6, 8),
            x534,
            8
        ),
        x6,
        8
    );
    let x556: BytePoly_9 = bigint_nondet_quot!(ctx, x555, x6, 9);
    let x557: BytePoly_4 = bigint_nondet_rem!(ctx, x555, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x556, x6, 13), x557, 13), x555, 13),
        73156,
        4,
    )?;
    let x558: BytePoly_8 = bigint_mul!(x551, x557, 8);
    let x559: BytePoly_9 = bigint_nondet_quot!(ctx, x558, x6, 9);
    let x560: BytePoly_4 = bigint_nondet_rem!(ctx, x558, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x559, x6, 13), x560, 13), x558, 13),
        73156,
        4,
    )?;
    let x561: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x560, x554, 4), 4), x6, 4);
    let x562: BytePoly_4 = bigint_nondet_quot!(ctx, x561, x6, 4);
    let x563: BytePoly_4 = bigint_nondet_rem!(ctx, x561, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x562, x6, 8), x563, 8), x561, 8),
        32515,
        2,
    )?;
    let x564: BytePoly_5 = bigint_add!(bigint_mul!(x557, x541, 5), bigint_mul!(x504, x543, 5), 5);
    let x565: BytePoly_5 = bigint_add!(bigint_mul!(x563, x541, 5), bigint_mul!(x506, x543, 5), 5);
    let x566: BytePoly_6 = bigint_nondet_quot!(ctx, x564, x6, 6);
    let x567: BytePoly_4 = bigint_nondet_rem!(ctx, x564, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x566, x6, 10), x567, 10), x564, 10),
        48771,
        4,
    )?;
    let x568: BytePoly_6 = bigint_nondet_quot!(ctx, x565, x6, 6);
    let x569: BytePoly_4 = bigint_nondet_rem!(ctx, x565, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x568, x6, 10), x569, 10), x565, 10),
        48771,
        4,
    )?;
    let x570: BytePoly_8 = bigint_mul!(x534, x534, 8);
    let x571: BytePoly_9 = bigint_nondet_quot!(ctx, x570, x6, 9);
    let x572: BytePoly_4 = bigint_nondet_rem!(ctx, x570, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x571, x6, 13), x572, 13), x570, 13),
        73156,
        4,
    )?;
    let x573: BytePoly_5 = bigint_add!(bigint_mul!(x572, x0, 5), x5, 5);
    let x574: BytePoly_6 = bigint_nondet_quot!(ctx, x573, x6, 6);
    let x575: BytePoly_4 = bigint_nondet_rem!(ctx, x573, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x574, x6, 10), x575, 10), x573, 10),
        48771,
        4,
    )?;
    let x576: BytePoly_4 = bigint_add!(x540, x540, 4);
    let x577: BytePoly_4 = bigint_nondet_quot!(ctx, x576, x6, 4);
    let x578: BytePoly_4 = bigint_nondet_rem!(ctx, x576, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x577, x6, 8), x578, 8), x576, 8),
        32515,
        2,
    )?;
    let x579: BytePoly_4 = bigint_nondet_inv!(ctx, x578, x6, 4);
    let x580: BytePoly_8 = bigint_mul!(x578, x579, 8);
    let x581: BytePoly_9 = bigint_nondet_quot!(ctx, x580, x6, 9);
    let x582: BytePoly_4 = bigint_nondet_rem!(ctx, x580, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x581, x6, 13), x582, 13), x580, 13),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x582, x3, 4), 34, 1)?;
    let x583: BytePoly_8 = bigint_mul!(x575, x579, 8);
    let x584: BytePoly_9 = bigint_nondet_quot!(ctx, x583, x6, 9);
    let x585: BytePoly_4 = bigint_nondet_rem!(ctx, x583, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x584, x6, 13), x585, 13), x583, 13),
        73156,
        4,
    )?;
    let x586: BytePoly_8 = bigint_mul!(x585, x534, 8);
    let x587: BytePoly_9 = bigint_nondet_quot!(ctx, x586, x6, 9);
    let x588: BytePoly_4 = bigint_nondet_rem!(ctx, x586, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x587, x6, 13), x588, 13), x586, 13),
        73156,
        4,
    )?;
    let x589: BytePoly_4 = bigint_add!(bigint_sub!(x540, x588, 4), x6, 4);
    let x590: BytePoly_4 = bigint_nondet_quot!(ctx, x589, x6, 4);
    let x591: BytePoly_4 = bigint_nondet_rem!(ctx, x589, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x590, x6, 8), x591, 8), x589, 8),
        32515,
        2,
    )?;
    let x592: BytePoly_8 = bigint_mul!(x585, x585, 8);
    let x593: BytePoly_9 = bigint_nondet_quot!(ctx, x592, x6, 9);
    let x594: BytePoly_4 = bigint_nondet_rem!(ctx, x592, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x593, x6, 13), x594, 13), x592, 13),
        73156,
        4,
    )?;
    let x595: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x594, x534, 4), x6, 4), x534, 4),
        x6,
        4
    );
    let x596: BytePoly_4 = bigint_nondet_quot!(ctx, x595, x6, 4);
    let x597: BytePoly_4 = bigint_nondet_rem!(ctx, x595, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x596, x6, 8), x597, 8), x595, 8),
        32515,
        2,
    )?;
    let x598: BytePoly_8 = bigint_mul!(x585, x597, 8);
    let x599: BytePoly_9 = bigint_nondet_quot!(ctx, x598, x6, 9);
    let x600: BytePoly_4 = bigint_nondet_rem!(ctx, x598, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x599, x6, 13), x600, 13), x598, 13),
        73156,
        4,
    )?;
    let x601: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x600, x591, 4), 4), x6, 4);
    let x602: BytePoly_4 = bigint_nondet_quot!(ctx, x601, x6, 4);
    let x603: BytePoly_4 = bigint_nondet_rem!(ctx, x601, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x602, x6, 8), x603, 8), x601, 8),
        32515,
        2,
    )?;
    let x604: BytePoly_1 = bigint_nondet_rem!(ctx, x542, x2, 1);
    let x605: BytePoly_5 = bigint_nondet_quot!(ctx, x542, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x605, x2, 6), x604, 6), x542, 6),
        40643,
        4,
    )?;
    let x606: BytePoly_1 = bigint_sub!(x3, x604, 1);
    eqz(ctx, &bigint_mul!(x604, x606, 2), 8131, 2)?;
    let x607: BytePoly_4 = bigint_add!(bigint_sub!(x597, x567, 4), x6, 4);
    let x608: BytePoly_4 = bigint_nondet_inv!(ctx, x607, x6, 4);
    let x609: BytePoly_8 = bigint_mul!(x607, x608, 8);
    let x610: BytePoly_9 = bigint_nondet_quot!(ctx, x609, x6, 9);
    let x611: BytePoly_4 = bigint_nondet_rem!(ctx, x609, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x610, x6, 13), x611, 13), x609, 13),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x611, x1, 4), 34, 1)?;
    let x612: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x603, x569, 4), x6, 4), x608, 8);
    let x613: BytePoly_9 = bigint_nondet_quot!(ctx, x612, x6, 9);
    let x614: BytePoly_4 = bigint_nondet_rem!(ctx, x612, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x613, x6, 13), x614, 13), x612, 13),
        73156,
        4,
    )?;
    let x615: BytePoly_8 = bigint_add!(bigint_sub!(x569, bigint_mul!(x614, x567, 8), 8), x6, 8);
    let x616: BytePoly_8 = bigint_nondet_quot!(ctx, x615, x6, 8);
    let x617: BytePoly_4 = bigint_nondet_rem!(ctx, x615, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x616, x6, 12), x617, 12), x615, 12),
        65028,
        4,
    )?;
    let x618: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x614, x614, 8), x567, 8), x6, 8),
            x597,
            8
        ),
        x6,
        8
    );
    let x619: BytePoly_9 = bigint_nondet_quot!(ctx, x618, x6, 9);
    let x620: BytePoly_4 = bigint_nondet_rem!(ctx, x618, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x619, x6, 13), x620, 13), x618, 13),
        73156,
        4,
    )?;
    let x621: BytePoly_8 = bigint_mul!(x614, x620, 8);
    let x622: BytePoly_9 = bigint_nondet_quot!(ctx, x621, x6, 9);
    let x623: BytePoly_4 = bigint_nondet_rem!(ctx, x621, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x622, x6, 13), x623, 13), x621, 13),
        73156,
        4,
    )?;
    let x624: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x623, x617, 4), 4), x6, 4);
    let x625: BytePoly_4 = bigint_nondet_quot!(ctx, x624, x6, 4);
    let x626: BytePoly_4 = bigint_nondet_rem!(ctx, x624, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x625, x6, 8), x626, 8), x624, 8),
        32515,
        2,
    )?;
    let x627: BytePoly_5 = bigint_add!(bigint_mul!(x620, x604, 5), bigint_mul!(x567, x606, 5), 5);
    let x628: BytePoly_5 = bigint_add!(bigint_mul!(x626, x604, 5), bigint_mul!(x569, x606, 5), 5);
    let x629: BytePoly_6 = bigint_nondet_quot!(ctx, x627, x6, 6);
    let x630: BytePoly_4 = bigint_nondet_rem!(ctx, x627, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x629, x6, 10), x630, 10), x627, 10),
        48771,
        4,
    )?;
    let x631: BytePoly_6 = bigint_nondet_quot!(ctx, x628, x6, 6);
    let x632: BytePoly_4 = bigint_nondet_rem!(ctx, x628, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x631, x6, 10), x632, 10), x628, 10),
        48771,
        4,
    )?;
    let x633: BytePoly_8 = bigint_mul!(x597, x597, 8);
    let x634: BytePoly_9 = bigint_nondet_quot!(ctx, x633, x6, 9);
    let x635: BytePoly_4 = bigint_nondet_rem!(ctx, x633, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x634, x6, 13), x635, 13), x633, 13),
        73156,
        4,
    )?;
    let x636: BytePoly_5 = bigint_add!(bigint_mul!(x635, x0, 5), x5, 5);
    let x637: BytePoly_6 = bigint_nondet_quot!(ctx, x636, x6, 6);
    let x638: BytePoly_4 = bigint_nondet_rem!(ctx, x636, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x637, x6, 10), x638, 10), x636, 10),
        48771,
        4,
    )?;
    let x639: BytePoly_4 = bigint_add!(x603, x603, 4);
    let x640: BytePoly_4 = bigint_nondet_quot!(ctx, x639, x6, 4);
    let x641: BytePoly_4 = bigint_nondet_rem!(ctx, x639, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x640, x6, 8), x641, 8), x639, 8),
        32515,
        2,
    )?;
    let x642: BytePoly_4 = bigint_nondet_inv!(ctx, x641, x6, 4);
    let x643: BytePoly_8 = bigint_mul!(x641, x642, 8);
    let x644: BytePoly_9 = bigint_nondet_quot!(ctx, x643, x6, 9);
    let x645: BytePoly_4 = bigint_nondet_rem!(ctx, x643, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x644, x6, 13), x645, 13), x643, 13),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x645, x3, 4), 34, 1)?;
    let x646: BytePoly_8 = bigint_mul!(x638, x642, 8);
    let x647: BytePoly_9 = bigint_nondet_quot!(ctx, x646, x6, 9);
    let x648: BytePoly_4 = bigint_nondet_rem!(ctx, x646, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x647, x6, 13), x648, 13), x646, 13),
        73156,
        4,
    )?;
    let x649: BytePoly_8 = bigint_mul!(x648, x597, 8);
    let x650: BytePoly_9 = bigint_nondet_quot!(ctx, x649, x6, 9);
    let x651: BytePoly_4 = bigint_nondet_rem!(ctx, x649, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x650, x6, 13), x651, 13), x649, 13),
        73156,
        4,
    )?;
    let x652: BytePoly_4 = bigint_add!(bigint_sub!(x603, x651, 4), x6, 4);
    let x653: BytePoly_4 = bigint_nondet_quot!(ctx, x652, x6, 4);
    let x654: BytePoly_4 = bigint_nondet_rem!(ctx, x652, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x653, x6, 8), x654, 8), x652, 8),
        32515,
        2,
    )?;
    let x655: BytePoly_8 = bigint_mul!(x648, x648, 8);
    let x656: BytePoly_9 = bigint_nondet_quot!(ctx, x655, x6, 9);
    let x657: BytePoly_4 = bigint_nondet_rem!(ctx, x655, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x656, x6, 13), x657, 13), x655, 13),
        73156,
        4,
    )?;
    let x658: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x657, x597, 4), x6, 4), x597, 4),
        x6,
        4
    );
    let x659: BytePoly_4 = bigint_nondet_quot!(ctx, x658, x6, 4);
    let x660: BytePoly_4 = bigint_nondet_rem!(ctx, x658, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x659, x6, 8), x660, 8), x658, 8),
        32515,
        2,
    )?;
    let x661: BytePoly_8 = bigint_mul!(x648, x660, 8);
    let x662: BytePoly_9 = bigint_nondet_quot!(ctx, x661, x6, 9);
    let x663: BytePoly_4 = bigint_nondet_rem!(ctx, x661, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x662, x6, 13), x663, 13), x661, 13),
        73156,
        4,
    )?;
    let x664: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x663, x654, 4), 4), x6, 4);
    let x665: BytePoly_4 = bigint_nondet_quot!(ctx, x664, x6, 4);
    let x666: BytePoly_4 = bigint_nondet_rem!(ctx, x664, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x665, x6, 8), x666, 8), x664, 8),
        32515,
        2,
    )?;
    let x667: BytePoly_1 = bigint_nondet_rem!(ctx, x605, x2, 1);
    let x668: BytePoly_5 = bigint_nondet_quot!(ctx, x605, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x668, x2, 6), x667, 6), x605, 6),
        40643,
        4,
    )?;
    let x669: BytePoly_1 = bigint_sub!(x3, x667, 1);
    eqz(ctx, &bigint_mul!(x667, x669, 2), 8131, 2)?;
    let x670: BytePoly_4 = bigint_add!(bigint_sub!(x660, x630, 4), x6, 4);
    let x671: BytePoly_4 = bigint_nondet_inv!(ctx, x670, x6, 4);
    let x672: BytePoly_8 = bigint_mul!(x670, x671, 8);
    let x673: BytePoly_9 = bigint_nondet_quot!(ctx, x672, x6, 9);
    let x674: BytePoly_4 = bigint_nondet_rem!(ctx, x672, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x673, x6, 13), x674, 13), x672, 13),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x674, x1, 4), 34, 1)?;
    let x675: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x666, x632, 4), x6, 4), x671, 8);
    let x676: BytePoly_9 = bigint_nondet_quot!(ctx, x675, x6, 9);
    let x677: BytePoly_4 = bigint_nondet_rem!(ctx, x675, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x676, x6, 13), x677, 13), x675, 13),
        73156,
        4,
    )?;
    let x678: BytePoly_8 = bigint_add!(bigint_sub!(x632, bigint_mul!(x677, x630, 8), 8), x6, 8);
    let x679: BytePoly_8 = bigint_nondet_quot!(ctx, x678, x6, 8);
    let x680: BytePoly_4 = bigint_nondet_rem!(ctx, x678, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x679, x6, 12), x680, 12), x678, 12),
        65028,
        4,
    )?;
    let x681: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x677, x677, 8), x630, 8), x6, 8),
            x660,
            8
        ),
        x6,
        8
    );
    let x682: BytePoly_9 = bigint_nondet_quot!(ctx, x681, x6, 9);
    let x683: BytePoly_4 = bigint_nondet_rem!(ctx, x681, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x682, x6, 13), x683, 13), x681, 13),
        73156,
        4,
    )?;
    let x684: BytePoly_8 = bigint_mul!(x677, x683, 8);
    let x685: BytePoly_9 = bigint_nondet_quot!(ctx, x684, x6, 9);
    let x686: BytePoly_4 = bigint_nondet_rem!(ctx, x684, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x685, x6, 13), x686, 13), x684, 13),
        73156,
        4,
    )?;
    let x687: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x686, x680, 4), 4), x6, 4);
    let x688: BytePoly_4 = bigint_nondet_quot!(ctx, x687, x6, 4);
    let x689: BytePoly_4 = bigint_nondet_rem!(ctx, x687, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x688, x6, 8), x689, 8), x687, 8),
        32515,
        2,
    )?;
    let x690: BytePoly_5 = bigint_add!(bigint_mul!(x683, x667, 5), bigint_mul!(x630, x669, 5), 5);
    let x691: BytePoly_5 = bigint_add!(bigint_mul!(x689, x667, 5), bigint_mul!(x632, x669, 5), 5);
    let x692: BytePoly_6 = bigint_nondet_quot!(ctx, x690, x6, 6);
    let x693: BytePoly_4 = bigint_nondet_rem!(ctx, x690, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x692, x6, 10), x693, 10), x690, 10),
        48771,
        4,
    )?;
    let x694: BytePoly_6 = bigint_nondet_quot!(ctx, x691, x6, 6);
    let x695: BytePoly_4 = bigint_nondet_rem!(ctx, x691, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x694, x6, 10), x695, 10), x691, 10),
        48771,
        4,
    )?;
    let x696: BytePoly_8 = bigint_mul!(x660, x660, 8);
    let x697: BytePoly_9 = bigint_nondet_quot!(ctx, x696, x6, 9);
    let x698: BytePoly_4 = bigint_nondet_rem!(ctx, x696, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x697, x6, 13), x698, 13), x696, 13),
        73156,
        4,
    )?;
    let x699: BytePoly_5 = bigint_add!(bigint_mul!(x698, x0, 5), x5, 5);
    let x700: BytePoly_6 = bigint_nondet_quot!(ctx, x699, x6, 6);
    let x701: BytePoly_4 = bigint_nondet_rem!(ctx, x699, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x700, x6, 10), x701, 10), x699, 10),
        48771,
        4,
    )?;
    let x702: BytePoly_4 = bigint_add!(x666, x666, 4);
    let x703: BytePoly_4 = bigint_nondet_quot!(ctx, x702, x6, 4);
    let x704: BytePoly_4 = bigint_nondet_rem!(ctx, x702, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x703, x6, 8), x704, 8), x702, 8),
        32515,
        2,
    )?;
    let x705: BytePoly_4 = bigint_nondet_inv!(ctx, x704, x6, 4);
    let x706: BytePoly_8 = bigint_mul!(x704, x705, 8);
    let x707: BytePoly_9 = bigint_nondet_quot!(ctx, x706, x6, 9);
    let x708: BytePoly_4 = bigint_nondet_rem!(ctx, x706, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x707, x6, 13), x708, 13), x706, 13),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x708, x3, 4), 34, 1)?;
    let x709: BytePoly_8 = bigint_mul!(x701, x705, 8);
    let x710: BytePoly_9 = bigint_nondet_quot!(ctx, x709, x6, 9);
    let x711: BytePoly_4 = bigint_nondet_rem!(ctx, x709, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x710, x6, 13), x711, 13), x709, 13),
        73156,
        4,
    )?;
    let x712: BytePoly_8 = bigint_mul!(x711, x660, 8);
    let x713: BytePoly_9 = bigint_nondet_quot!(ctx, x712, x6, 9);
    let x714: BytePoly_4 = bigint_nondet_rem!(ctx, x712, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x713, x6, 13), x714, 13), x712, 13),
        73156,
        4,
    )?;
    let x715: BytePoly_4 = bigint_add!(bigint_sub!(x666, x714, 4), x6, 4);
    let x716: BytePoly_4 = bigint_nondet_quot!(ctx, x715, x6, 4);
    let x717: BytePoly_4 = bigint_nondet_rem!(ctx, x715, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x716, x6, 8), x717, 8), x715, 8),
        32515,
        2,
    )?;
    let x718: BytePoly_8 = bigint_mul!(x711, x711, 8);
    let x719: BytePoly_9 = bigint_nondet_quot!(ctx, x718, x6, 9);
    let x720: BytePoly_4 = bigint_nondet_rem!(ctx, x718, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x719, x6, 13), x720, 13), x718, 13),
        73156,
        4,
    )?;
    let x721: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x720, x660, 4), x6, 4), x660, 4),
        x6,
        4
    );
    let x722: BytePoly_4 = bigint_nondet_quot!(ctx, x721, x6, 4);
    let x723: BytePoly_4 = bigint_nondet_rem!(ctx, x721, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x722, x6, 8), x723, 8), x721, 8),
        32515,
        2,
    )?;
    let x724: BytePoly_8 = bigint_mul!(x711, x723, 8);
    let x725: BytePoly_9 = bigint_nondet_quot!(ctx, x724, x6, 9);
    let x726: BytePoly_4 = bigint_nondet_rem!(ctx, x724, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x725, x6, 13), x726, 13), x724, 13),
        73156,
        4,
    )?;
    let x727: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x726, x717, 4), 4), x6, 4);
    let x728: BytePoly_4 = bigint_nondet_quot!(ctx, x727, x6, 4);
    let x729: BytePoly_4 = bigint_nondet_rem!(ctx, x727, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x728, x6, 8), x729, 8), x727, 8),
        32515,
        2,
    )?;
    let x730: BytePoly_1 = bigint_nondet_rem!(ctx, x668, x2, 1);
    let x731: BytePoly_5 = bigint_nondet_quot!(ctx, x668, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x731, x2, 6), x730, 6), x668, 6),
        40643,
        4,
    )?;
    let x732: BytePoly_1 = bigint_sub!(x3, x730, 1);
    eqz(ctx, &bigint_mul!(x730, x732, 2), 8131, 2)?;
    let x733: BytePoly_4 = bigint_add!(bigint_sub!(x723, x693, 4), x6, 4);
    let x734: BytePoly_4 = bigint_nondet_inv!(ctx, x733, x6, 4);
    let x735: BytePoly_8 = bigint_mul!(x733, x734, 8);
    let x736: BytePoly_9 = bigint_nondet_quot!(ctx, x735, x6, 9);
    let x737: BytePoly_4 = bigint_nondet_rem!(ctx, x735, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x736, x6, 13), x737, 13), x735, 13),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x737, x1, 4), 34, 1)?;
    let x738: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x729, x695, 4), x6, 4), x734, 8);
    let x739: BytePoly_9 = bigint_nondet_quot!(ctx, x738, x6, 9);
    let x740: BytePoly_4 = bigint_nondet_rem!(ctx, x738, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x739, x6, 13), x740, 13), x738, 13),
        73156,
        4,
    )?;
    let x741: BytePoly_8 = bigint_add!(bigint_sub!(x695, bigint_mul!(x740, x693, 8), 8), x6, 8);
    let x742: BytePoly_8 = bigint_nondet_quot!(ctx, x741, x6, 8);
    let x743: BytePoly_4 = bigint_nondet_rem!(ctx, x741, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x742, x6, 12), x743, 12), x741, 12),
        65028,
        4,
    )?;
    let x744: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x740, x740, 8), x693, 8), x6, 8),
            x723,
            8
        ),
        x6,
        8
    );
    let x745: BytePoly_9 = bigint_nondet_quot!(ctx, x744, x6, 9);
    let x746: BytePoly_4 = bigint_nondet_rem!(ctx, x744, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x745, x6, 13), x746, 13), x744, 13),
        73156,
        4,
    )?;
    let x747: BytePoly_8 = bigint_mul!(x740, x746, 8);
    let x748: BytePoly_9 = bigint_nondet_quot!(ctx, x747, x6, 9);
    let x749: BytePoly_4 = bigint_nondet_rem!(ctx, x747, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x748, x6, 13), x749, 13), x747, 13),
        73156,
        4,
    )?;
    let x750: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x749, x743, 4), 4), x6, 4);
    let x751: BytePoly_4 = bigint_nondet_quot!(ctx, x750, x6, 4);
    let x752: BytePoly_4 = bigint_nondet_rem!(ctx, x750, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x751, x6, 8), x752, 8), x750, 8),
        32515,
        2,
    )?;
    let x753: BytePoly_5 = bigint_add!(bigint_mul!(x746, x730, 5), bigint_mul!(x693, x732, 5), 5);
    let x754: BytePoly_5 = bigint_add!(bigint_mul!(x752, x730, 5), bigint_mul!(x695, x732, 5), 5);
    let x755: BytePoly_6 = bigint_nondet_quot!(ctx, x753, x6, 6);
    let x756: BytePoly_4 = bigint_nondet_rem!(ctx, x753, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x755, x6, 10), x756, 10), x753, 10),
        48771,
        4,
    )?;
    let x757: BytePoly_6 = bigint_nondet_quot!(ctx, x754, x6, 6);
    let x758: BytePoly_4 = bigint_nondet_rem!(ctx, x754, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x757, x6, 10), x758, 10), x754, 10),
        48771,
        4,
    )?;
    let x759: BytePoly_8 = bigint_mul!(x723, x723, 8);
    let x760: BytePoly_9 = bigint_nondet_quot!(ctx, x759, x6, 9);
    let x761: BytePoly_4 = bigint_nondet_rem!(ctx, x759, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x760, x6, 13), x761, 13), x759, 13),
        73156,
        4,
    )?;
    let x762: BytePoly_5 = bigint_add!(bigint_mul!(x761, x0, 5), x5, 5);
    let x763: BytePoly_6 = bigint_nondet_quot!(ctx, x762, x6, 6);
    let x764: BytePoly_4 = bigint_nondet_rem!(ctx, x762, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x763, x6, 10), x764, 10), x762, 10),
        48771,
        4,
    )?;
    let x765: BytePoly_4 = bigint_add!(x729, x729, 4);
    let x766: BytePoly_4 = bigint_nondet_quot!(ctx, x765, x6, 4);
    let x767: BytePoly_4 = bigint_nondet_rem!(ctx, x765, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x766, x6, 8), x767, 8), x765, 8),
        32515,
        2,
    )?;
    let x768: BytePoly_4 = bigint_nondet_inv!(ctx, x767, x6, 4);
    let x769: BytePoly_8 = bigint_mul!(x767, x768, 8);
    let x770: BytePoly_9 = bigint_nondet_quot!(ctx, x769, x6, 9);
    let x771: BytePoly_4 = bigint_nondet_rem!(ctx, x769, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x770, x6, 13), x771, 13), x769, 13),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x771, x3, 4), 34, 1)?;
    let x772: BytePoly_8 = bigint_mul!(x764, x768, 8);
    let x773: BytePoly_9 = bigint_nondet_quot!(ctx, x772, x6, 9);
    let x774: BytePoly_4 = bigint_nondet_rem!(ctx, x772, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x773, x6, 13), x774, 13), x772, 13),
        73156,
        4,
    )?;
    let x775: BytePoly_8 = bigint_mul!(x774, x723, 8);
    let x776: BytePoly_9 = bigint_nondet_quot!(ctx, x775, x6, 9);
    let x777: BytePoly_4 = bigint_nondet_rem!(ctx, x775, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x776, x6, 13), x777, 13), x775, 13),
        73156,
        4,
    )?;
    let x778: BytePoly_4 = bigint_add!(bigint_sub!(x729, x777, 4), x6, 4);
    let x779: BytePoly_4 = bigint_nondet_quot!(ctx, x778, x6, 4);
    let x780: BytePoly_4 = bigint_nondet_rem!(ctx, x778, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x779, x6, 8), x780, 8), x778, 8),
        32515,
        2,
    )?;
    let x781: BytePoly_8 = bigint_mul!(x774, x774, 8);
    let x782: BytePoly_9 = bigint_nondet_quot!(ctx, x781, x6, 9);
    let x783: BytePoly_4 = bigint_nondet_rem!(ctx, x781, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x782, x6, 13), x783, 13), x781, 13),
        73156,
        4,
    )?;
    let x784: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x783, x723, 4), x6, 4), x723, 4),
        x6,
        4
    );
    let x785: BytePoly_4 = bigint_nondet_quot!(ctx, x784, x6, 4);
    let x786: BytePoly_4 = bigint_nondet_rem!(ctx, x784, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x785, x6, 8), x786, 8), x784, 8),
        32515,
        2,
    )?;
    let x787: BytePoly_8 = bigint_mul!(x774, x786, 8);
    let x788: BytePoly_9 = bigint_nondet_quot!(ctx, x787, x6, 9);
    let x789: BytePoly_4 = bigint_nondet_rem!(ctx, x787, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x788, x6, 13), x789, 13), x787, 13),
        73156,
        4,
    )?;
    let x790: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x789, x780, 4), 4), x6, 4);
    let x791: BytePoly_4 = bigint_nondet_quot!(ctx, x790, x6, 4);
    let x792: BytePoly_4 = bigint_nondet_rem!(ctx, x790, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x791, x6, 8), x792, 8), x790, 8),
        32515,
        2,
    )?;
    let x793: BytePoly_1 = bigint_nondet_rem!(ctx, x731, x2, 1);
    let x794: BytePoly_5 = bigint_nondet_quot!(ctx, x731, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x794, x2, 6), x793, 6), x731, 6),
        40643,
        4,
    )?;
    let x795: BytePoly_1 = bigint_sub!(x3, x793, 1);
    eqz(ctx, &bigint_mul!(x793, x795, 2), 8131, 2)?;
    let x796: BytePoly_4 = bigint_add!(bigint_sub!(x786, x756, 4), x6, 4);
    let x797: BytePoly_4 = bigint_nondet_inv!(ctx, x796, x6, 4);
    let x798: BytePoly_8 = bigint_mul!(x796, x797, 8);
    let x799: BytePoly_9 = bigint_nondet_quot!(ctx, x798, x6, 9);
    let x800: BytePoly_4 = bigint_nondet_rem!(ctx, x798, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x799, x6, 13), x800, 13), x798, 13),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x800, x1, 4), 34, 1)?;
    let x801: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x792, x758, 4), x6, 4), x797, 8);
    let x802: BytePoly_9 = bigint_nondet_quot!(ctx, x801, x6, 9);
    let x803: BytePoly_4 = bigint_nondet_rem!(ctx, x801, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x802, x6, 13), x803, 13), x801, 13),
        73156,
        4,
    )?;
    let x804: BytePoly_8 = bigint_add!(bigint_sub!(x758, bigint_mul!(x803, x756, 8), 8), x6, 8);
    let x805: BytePoly_8 = bigint_nondet_quot!(ctx, x804, x6, 8);
    let x806: BytePoly_4 = bigint_nondet_rem!(ctx, x804, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x805, x6, 12), x806, 12), x804, 12),
        65028,
        4,
    )?;
    let x807: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x803, x803, 8), x756, 8), x6, 8),
            x786,
            8
        ),
        x6,
        8
    );
    let x808: BytePoly_9 = bigint_nondet_quot!(ctx, x807, x6, 9);
    let x809: BytePoly_4 = bigint_nondet_rem!(ctx, x807, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x808, x6, 13), x809, 13), x807, 13),
        73156,
        4,
    )?;
    let x810: BytePoly_8 = bigint_mul!(x803, x809, 8);
    let x811: BytePoly_9 = bigint_nondet_quot!(ctx, x810, x6, 9);
    let x812: BytePoly_4 = bigint_nondet_rem!(ctx, x810, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x811, x6, 13), x812, 13), x810, 13),
        73156,
        4,
    )?;
    let x813: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x812, x806, 4), 4), x6, 4);
    let x814: BytePoly_4 = bigint_nondet_quot!(ctx, x813, x6, 4);
    let x815: BytePoly_4 = bigint_nondet_rem!(ctx, x813, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x814, x6, 8), x815, 8), x813, 8),
        32515,
        2,
    )?;
    let x816: BytePoly_5 = bigint_add!(bigint_mul!(x809, x793, 5), bigint_mul!(x756, x795, 5), 5);
    let x817: BytePoly_5 = bigint_add!(bigint_mul!(x815, x793, 5), bigint_mul!(x758, x795, 5), 5);
    let x818: BytePoly_6 = bigint_nondet_quot!(ctx, x816, x6, 6);
    let x819: BytePoly_4 = bigint_nondet_rem!(ctx, x816, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x818, x6, 10), x819, 10), x816, 10),
        48771,
        4,
    )?;
    let x820: BytePoly_6 = bigint_nondet_quot!(ctx, x817, x6, 6);
    let x821: BytePoly_4 = bigint_nondet_rem!(ctx, x817, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x820, x6, 10), x821, 10), x817, 10),
        48771,
        4,
    )?;
    let x822: BytePoly_8 = bigint_mul!(x786, x786, 8);
    let x823: BytePoly_9 = bigint_nondet_quot!(ctx, x822, x6, 9);
    let x824: BytePoly_4 = bigint_nondet_rem!(ctx, x822, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x823, x6, 13), x824, 13), x822, 13),
        73156,
        4,
    )?;
    let x825: BytePoly_5 = bigint_add!(bigint_mul!(x824, x0, 5), x5, 5);
    let x826: BytePoly_6 = bigint_nondet_quot!(ctx, x825, x6, 6);
    let x827: BytePoly_4 = bigint_nondet_rem!(ctx, x825, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x826, x6, 10), x827, 10), x825, 10),
        48771,
        4,
    )?;
    let x828: BytePoly_4 = bigint_add!(x792, x792, 4);
    let x829: BytePoly_4 = bigint_nondet_quot!(ctx, x828, x6, 4);
    let x830: BytePoly_4 = bigint_nondet_rem!(ctx, x828, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x829, x6, 8), x830, 8), x828, 8),
        32515,
        2,
    )?;
    let x831: BytePoly_4 = bigint_nondet_inv!(ctx, x830, x6, 4);
    let x832: BytePoly_8 = bigint_mul!(x830, x831, 8);
    let x833: BytePoly_9 = bigint_nondet_quot!(ctx, x832, x6, 9);
    let x834: BytePoly_4 = bigint_nondet_rem!(ctx, x832, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x833, x6, 13), x834, 13), x832, 13),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x834, x3, 4), 34, 1)?;
    let x835: BytePoly_8 = bigint_mul!(x827, x831, 8);
    let x836: BytePoly_9 = bigint_nondet_quot!(ctx, x835, x6, 9);
    let x837: BytePoly_4 = bigint_nondet_rem!(ctx, x835, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x836, x6, 13), x837, 13), x835, 13),
        73156,
        4,
    )?;
    let x838: BytePoly_8 = bigint_mul!(x837, x786, 8);
    let x839: BytePoly_9 = bigint_nondet_quot!(ctx, x838, x6, 9);
    let x840: BytePoly_4 = bigint_nondet_rem!(ctx, x838, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x839, x6, 13), x840, 13), x838, 13),
        73156,
        4,
    )?;
    let x841: BytePoly_4 = bigint_add!(bigint_sub!(x792, x840, 4), x6, 4);
    let x842: BytePoly_4 = bigint_nondet_quot!(ctx, x841, x6, 4);
    let x843: BytePoly_4 = bigint_nondet_rem!(ctx, x841, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x842, x6, 8), x843, 8), x841, 8),
        32515,
        2,
    )?;
    let x844: BytePoly_8 = bigint_mul!(x837, x837, 8);
    let x845: BytePoly_9 = bigint_nondet_quot!(ctx, x844, x6, 9);
    let x846: BytePoly_4 = bigint_nondet_rem!(ctx, x844, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x845, x6, 13), x846, 13), x844, 13),
        73156,
        4,
    )?;
    let x847: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x846, x786, 4), x6, 4), x786, 4),
        x6,
        4
    );
    let x848: BytePoly_4 = bigint_nondet_quot!(ctx, x847, x6, 4);
    let x849: BytePoly_4 = bigint_nondet_rem!(ctx, x847, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x848, x6, 8), x849, 8), x847, 8),
        32515,
        2,
    )?;
    let x850: BytePoly_8 = bigint_mul!(x837, x849, 8);
    let x851: BytePoly_9 = bigint_nondet_quot!(ctx, x850, x6, 9);
    let x852: BytePoly_4 = bigint_nondet_rem!(ctx, x850, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x851, x6, 13), x852, 13), x850, 13),
        73156,
        4,
    )?;
    let x853: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x852, x843, 4), 4), x6, 4);
    let x854: BytePoly_4 = bigint_nondet_quot!(ctx, x853, x6, 4);
    let x855: BytePoly_4 = bigint_nondet_rem!(ctx, x853, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x854, x6, 8), x855, 8), x853, 8),
        32515,
        2,
    )?;
    let x856: BytePoly_1 = bigint_nondet_rem!(ctx, x794, x2, 1);
    let x857: BytePoly_5 = bigint_nondet_quot!(ctx, x794, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x857, x2, 6), x856, 6), x794, 6),
        40643,
        4,
    )?;
    let x858: BytePoly_1 = bigint_sub!(x3, x856, 1);
    eqz(ctx, &bigint_mul!(x856, x858, 2), 8131, 2)?;
    let x859: BytePoly_4 = bigint_add!(bigint_sub!(x849, x819, 4), x6, 4);
    let x860: BytePoly_4 = bigint_nondet_inv!(ctx, x859, x6, 4);
    let x861: BytePoly_8 = bigint_mul!(x859, x860, 8);
    let x862: BytePoly_9 = bigint_nondet_quot!(ctx, x861, x6, 9);
    let x863: BytePoly_4 = bigint_nondet_rem!(ctx, x861, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x862, x6, 13), x863, 13), x861, 13),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x863, x1, 4), 34, 1)?;
    let x864: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x855, x821, 4), x6, 4), x860, 8);
    let x865: BytePoly_9 = bigint_nondet_quot!(ctx, x864, x6, 9);
    let x866: BytePoly_4 = bigint_nondet_rem!(ctx, x864, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x865, x6, 13), x866, 13), x864, 13),
        73156,
        4,
    )?;
    let x867: BytePoly_8 = bigint_add!(bigint_sub!(x821, bigint_mul!(x866, x819, 8), 8), x6, 8);
    let x868: BytePoly_8 = bigint_nondet_quot!(ctx, x867, x6, 8);
    let x869: BytePoly_4 = bigint_nondet_rem!(ctx, x867, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x868, x6, 12), x869, 12), x867, 12),
        65028,
        4,
    )?;
    let x870: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x866, x866, 8), x819, 8), x6, 8),
            x849,
            8
        ),
        x6,
        8
    );
    let x871: BytePoly_9 = bigint_nondet_quot!(ctx, x870, x6, 9);
    let x872: BytePoly_4 = bigint_nondet_rem!(ctx, x870, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x871, x6, 13), x872, 13), x870, 13),
        73156,
        4,
    )?;
    let x873: BytePoly_8 = bigint_mul!(x866, x872, 8);
    let x874: BytePoly_9 = bigint_nondet_quot!(ctx, x873, x6, 9);
    let x875: BytePoly_4 = bigint_nondet_rem!(ctx, x873, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x874, x6, 13), x875, 13), x873, 13),
        73156,
        4,
    )?;
    let x876: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x875, x869, 4), 4), x6, 4);
    let x877: BytePoly_4 = bigint_nondet_quot!(ctx, x876, x6, 4);
    let x878: BytePoly_4 = bigint_nondet_rem!(ctx, x876, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x877, x6, 8), x878, 8), x876, 8),
        32515,
        2,
    )?;
    let x879: BytePoly_5 = bigint_add!(bigint_mul!(x872, x856, 5), bigint_mul!(x819, x858, 5), 5);
    let x880: BytePoly_5 = bigint_add!(bigint_mul!(x878, x856, 5), bigint_mul!(x821, x858, 5), 5);
    let x881: BytePoly_6 = bigint_nondet_quot!(ctx, x879, x6, 6);
    let x882: BytePoly_4 = bigint_nondet_rem!(ctx, x879, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x881, x6, 10), x882, 10), x879, 10),
        48771,
        4,
    )?;
    let x883: BytePoly_6 = bigint_nondet_quot!(ctx, x880, x6, 6);
    let x884: BytePoly_4 = bigint_nondet_rem!(ctx, x880, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x883, x6, 10), x884, 10), x880, 10),
        48771,
        4,
    )?;
    let x885: BytePoly_8 = bigint_mul!(x849, x849, 8);
    let x886: BytePoly_9 = bigint_nondet_quot!(ctx, x885, x6, 9);
    let x887: BytePoly_4 = bigint_nondet_rem!(ctx, x885, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x886, x6, 13), x887, 13), x885, 13),
        73156,
        4,
    )?;
    let x888: BytePoly_5 = bigint_add!(bigint_mul!(x887, x0, 5), x5, 5);
    let x889: BytePoly_6 = bigint_nondet_quot!(ctx, x888, x6, 6);
    let x890: BytePoly_4 = bigint_nondet_rem!(ctx, x888, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x889, x6, 10), x890, 10), x888, 10),
        48771,
        4,
    )?;
    let x891: BytePoly_4 = bigint_add!(x855, x855, 4);
    let x892: BytePoly_4 = bigint_nondet_quot!(ctx, x891, x6, 4);
    let x893: BytePoly_4 = bigint_nondet_rem!(ctx, x891, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x892, x6, 8), x893, 8), x891, 8),
        32515,
        2,
    )?;
    let x894: BytePoly_4 = bigint_nondet_inv!(ctx, x893, x6, 4);
    let x895: BytePoly_8 = bigint_mul!(x893, x894, 8);
    let x896: BytePoly_9 = bigint_nondet_quot!(ctx, x895, x6, 9);
    let x897: BytePoly_4 = bigint_nondet_rem!(ctx, x895, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x896, x6, 13), x897, 13), x895, 13),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x897, x3, 4), 34, 1)?;
    let x898: BytePoly_8 = bigint_mul!(x890, x894, 8);
    let x899: BytePoly_9 = bigint_nondet_quot!(ctx, x898, x6, 9);
    let x900: BytePoly_4 = bigint_nondet_rem!(ctx, x898, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x899, x6, 13), x900, 13), x898, 13),
        73156,
        4,
    )?;
    let x901: BytePoly_8 = bigint_mul!(x900, x849, 8);
    let x902: BytePoly_9 = bigint_nondet_quot!(ctx, x901, x6, 9);
    let x903: BytePoly_4 = bigint_nondet_rem!(ctx, x901, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x902, x6, 13), x903, 13), x901, 13),
        73156,
        4,
    )?;
    let x904: BytePoly_4 = bigint_add!(bigint_sub!(x855, x903, 4), x6, 4);
    let x905: BytePoly_4 = bigint_nondet_quot!(ctx, x904, x6, 4);
    let x906: BytePoly_4 = bigint_nondet_rem!(ctx, x904, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x905, x6, 8), x906, 8), x904, 8),
        32515,
        2,
    )?;
    let x907: BytePoly_8 = bigint_mul!(x900, x900, 8);
    let x908: BytePoly_9 = bigint_nondet_quot!(ctx, x907, x6, 9);
    let x909: BytePoly_4 = bigint_nondet_rem!(ctx, x907, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x908, x6, 13), x909, 13), x907, 13),
        73156,
        4,
    )?;
    let x910: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x909, x849, 4), x6, 4), x849, 4),
        x6,
        4
    );
    let x911: BytePoly_4 = bigint_nondet_quot!(ctx, x910, x6, 4);
    let x912: BytePoly_4 = bigint_nondet_rem!(ctx, x910, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x911, x6, 8), x912, 8), x910, 8),
        32515,
        2,
    )?;
    let x913: BytePoly_8 = bigint_mul!(x900, x912, 8);
    let x914: BytePoly_9 = bigint_nondet_quot!(ctx, x913, x6, 9);
    let x915: BytePoly_4 = bigint_nondet_rem!(ctx, x913, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x914, x6, 13), x915, 13), x913, 13),
        73156,
        4,
    )?;
    let x916: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x915, x906, 4), 4), x6, 4);
    let x917: BytePoly_4 = bigint_nondet_quot!(ctx, x916, x6, 4);
    let x918: BytePoly_4 = bigint_nondet_rem!(ctx, x916, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x917, x6, 8), x918, 8), x916, 8),
        32515,
        2,
    )?;
    let x919: BytePoly_1 = bigint_nondet_rem!(ctx, x857, x2, 1);
    let x920: BytePoly_5 = bigint_nondet_quot!(ctx, x857, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x920, x2, 6), x919, 6), x857, 6),
        40643,
        4,
    )?;
    let x921: BytePoly_1 = bigint_sub!(x3, x919, 1);
    eqz(ctx, &bigint_mul!(x919, x921, 2), 8131, 2)?;
    let x922: BytePoly_4 = bigint_add!(bigint_sub!(x912, x882, 4), x6, 4);
    let x923: BytePoly_4 = bigint_nondet_inv!(ctx, x922, x6, 4);
    let x924: BytePoly_8 = bigint_mul!(x922, x923, 8);
    let x925: BytePoly_9 = bigint_nondet_quot!(ctx, x924, x6, 9);
    let x926: BytePoly_4 = bigint_nondet_rem!(ctx, x924, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x925, x6, 13), x926, 13), x924, 13),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x926, x1, 4), 34, 1)?;
    let x927: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x918, x884, 4), x6, 4), x923, 8);
    let x928: BytePoly_9 = bigint_nondet_quot!(ctx, x927, x6, 9);
    let x929: BytePoly_4 = bigint_nondet_rem!(ctx, x927, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x928, x6, 13), x929, 13), x927, 13),
        73156,
        4,
    )?;
    let x930: BytePoly_8 = bigint_add!(bigint_sub!(x884, bigint_mul!(x929, x882, 8), 8), x6, 8);
    let x931: BytePoly_8 = bigint_nondet_quot!(ctx, x930, x6, 8);
    let x932: BytePoly_4 = bigint_nondet_rem!(ctx, x930, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x931, x6, 12), x932, 12), x930, 12),
        65028,
        4,
    )?;
    let x933: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x929, x929, 8), x882, 8), x6, 8),
            x912,
            8
        ),
        x6,
        8
    );
    let x934: BytePoly_9 = bigint_nondet_quot!(ctx, x933, x6, 9);
    let x935: BytePoly_4 = bigint_nondet_rem!(ctx, x933, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x934, x6, 13), x935, 13), x933, 13),
        73156,
        4,
    )?;
    let x936: BytePoly_8 = bigint_mul!(x929, x935, 8);
    let x937: BytePoly_9 = bigint_nondet_quot!(ctx, x936, x6, 9);
    let x938: BytePoly_4 = bigint_nondet_rem!(ctx, x936, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x937, x6, 13), x938, 13), x936, 13),
        73156,
        4,
    )?;
    let x939: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x938, x932, 4), 4), x6, 4);
    let x940: BytePoly_4 = bigint_nondet_quot!(ctx, x939, x6, 4);
    let x941: BytePoly_4 = bigint_nondet_rem!(ctx, x939, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x940, x6, 8), x941, 8), x939, 8),
        32515,
        2,
    )?;
    let x942: BytePoly_5 = bigint_add!(bigint_mul!(x935, x919, 5), bigint_mul!(x882, x921, 5), 5);
    let x943: BytePoly_5 = bigint_add!(bigint_mul!(x941, x919, 5), bigint_mul!(x884, x921, 5), 5);
    let x944: BytePoly_6 = bigint_nondet_quot!(ctx, x942, x6, 6);
    let x945: BytePoly_4 = bigint_nondet_rem!(ctx, x942, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x944, x6, 10), x945, 10), x942, 10),
        48771,
        4,
    )?;
    let x946: BytePoly_6 = bigint_nondet_quot!(ctx, x943, x6, 6);
    let x947: BytePoly_4 = bigint_nondet_rem!(ctx, x943, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x946, x6, 10), x947, 10), x943, 10),
        48771,
        4,
    )?;
    let x948: BytePoly_8 = bigint_mul!(x912, x912, 8);
    let x949: BytePoly_9 = bigint_nondet_quot!(ctx, x948, x6, 9);
    let x950: BytePoly_4 = bigint_nondet_rem!(ctx, x948, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x949, x6, 13), x950, 13), x948, 13),
        73156,
        4,
    )?;
    let x951: BytePoly_5 = bigint_add!(bigint_mul!(x950, x0, 5), x5, 5);
    let x952: BytePoly_6 = bigint_nondet_quot!(ctx, x951, x6, 6);
    let x953: BytePoly_4 = bigint_nondet_rem!(ctx, x951, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x952, x6, 10), x953, 10), x951, 10),
        48771,
        4,
    )?;
    let x954: BytePoly_4 = bigint_add!(x918, x918, 4);
    let x955: BytePoly_4 = bigint_nondet_quot!(ctx, x954, x6, 4);
    let x956: BytePoly_4 = bigint_nondet_rem!(ctx, x954, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x955, x6, 8), x956, 8), x954, 8),
        32515,
        2,
    )?;
    let x957: BytePoly_4 = bigint_nondet_inv!(ctx, x956, x6, 4);
    let x958: BytePoly_8 = bigint_mul!(x956, x957, 8);
    let x959: BytePoly_9 = bigint_nondet_quot!(ctx, x958, x6, 9);
    let x960: BytePoly_4 = bigint_nondet_rem!(ctx, x958, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x959, x6, 13), x960, 13), x958, 13),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x960, x3, 4), 34, 1)?;
    let x961: BytePoly_8 = bigint_mul!(x953, x957, 8);
    let x962: BytePoly_9 = bigint_nondet_quot!(ctx, x961, x6, 9);
    let x963: BytePoly_4 = bigint_nondet_rem!(ctx, x961, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x962, x6, 13), x963, 13), x961, 13),
        73156,
        4,
    )?;
    let x964: BytePoly_8 = bigint_mul!(x963, x912, 8);
    let x965: BytePoly_9 = bigint_nondet_quot!(ctx, x964, x6, 9);
    let x966: BytePoly_4 = bigint_nondet_rem!(ctx, x964, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x965, x6, 13), x966, 13), x964, 13),
        73156,
        4,
    )?;
    let x967: BytePoly_4 = bigint_add!(bigint_sub!(x918, x966, 4), x6, 4);
    let x968: BytePoly_4 = bigint_nondet_quot!(ctx, x967, x6, 4);
    let x969: BytePoly_4 = bigint_nondet_rem!(ctx, x967, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x968, x6, 8), x969, 8), x967, 8),
        32515,
        2,
    )?;
    let x970: BytePoly_8 = bigint_mul!(x963, x963, 8);
    let x971: BytePoly_9 = bigint_nondet_quot!(ctx, x970, x6, 9);
    let x972: BytePoly_4 = bigint_nondet_rem!(ctx, x970, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x971, x6, 13), x972, 13), x970, 13),
        73156,
        4,
    )?;
    let x973: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x972, x912, 4), x6, 4), x912, 4),
        x6,
        4
    );
    let x974: BytePoly_4 = bigint_nondet_quot!(ctx, x973, x6, 4);
    let x975: BytePoly_4 = bigint_nondet_rem!(ctx, x973, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x974, x6, 8), x975, 8), x973, 8),
        32515,
        2,
    )?;
    let x976: BytePoly_8 = bigint_mul!(x963, x975, 8);
    let x977: BytePoly_9 = bigint_nondet_quot!(ctx, x976, x6, 9);
    let x978: BytePoly_4 = bigint_nondet_rem!(ctx, x976, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x977, x6, 13), x978, 13), x976, 13),
        73156,
        4,
    )?;
    let x979: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x978, x969, 4), 4), x6, 4);
    let x980: BytePoly_4 = bigint_nondet_quot!(ctx, x979, x6, 4);
    let x981: BytePoly_4 = bigint_nondet_rem!(ctx, x979, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x980, x6, 8), x981, 8), x979, 8),
        32515,
        2,
    )?;
    let x982: BytePoly_1 = bigint_nondet_rem!(ctx, x920, x2, 1);
    let x983: BytePoly_5 = bigint_nondet_quot!(ctx, x920, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x983, x2, 6), x982, 6), x920, 6),
        40643,
        4,
    )?;
    let x984: BytePoly_1 = bigint_sub!(x3, x982, 1);
    eqz(ctx, &bigint_mul!(x982, x984, 2), 8131, 2)?;
    let x985: BytePoly_4 = bigint_add!(bigint_sub!(x975, x945, 4), x6, 4);
    let x986: BytePoly_4 = bigint_nondet_inv!(ctx, x985, x6, 4);
    let x987: BytePoly_8 = bigint_mul!(x985, x986, 8);
    let x988: BytePoly_9 = bigint_nondet_quot!(ctx, x987, x6, 9);
    let x989: BytePoly_4 = bigint_nondet_rem!(ctx, x987, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x988, x6, 13), x989, 13), x987, 13),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x989, x1, 4), 34, 1)?;
    let x990: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x981, x947, 4), x6, 4), x986, 8);
    let x991: BytePoly_9 = bigint_nondet_quot!(ctx, x990, x6, 9);
    let x992: BytePoly_4 = bigint_nondet_rem!(ctx, x990, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x991, x6, 13), x992, 13), x990, 13),
        73156,
        4,
    )?;
    let x993: BytePoly_8 = bigint_add!(bigint_sub!(x947, bigint_mul!(x992, x945, 8), 8), x6, 8);
    let x994: BytePoly_8 = bigint_nondet_quot!(ctx, x993, x6, 8);
    let x995: BytePoly_4 = bigint_nondet_rem!(ctx, x993, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x994, x6, 12), x995, 12), x993, 12),
        65028,
        4,
    )?;
    let x996: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x992, x992, 8), x945, 8), x6, 8),
            x975,
            8
        ),
        x6,
        8
    );
    let x997: BytePoly_9 = bigint_nondet_quot!(ctx, x996, x6, 9);
    let x998: BytePoly_4 = bigint_nondet_rem!(ctx, x996, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x997, x6, 13), x998, 13), x996, 13),
        73156,
        4,
    )?;
    let x999: BytePoly_8 = bigint_mul!(x992, x998, 8);
    let x1000: BytePoly_9 = bigint_nondet_quot!(ctx, x999, x6, 9);
    let x1001: BytePoly_4 = bigint_nondet_rem!(ctx, x999, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1000, x6, 13), x1001, 13), x999, 13),
        73156,
        4,
    )?;
    let x1002: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x1001, x995, 4), 4), x6, 4);
    let x1003: BytePoly_4 = bigint_nondet_quot!(ctx, x1002, x6, 4);
    let x1004: BytePoly_4 = bigint_nondet_rem!(ctx, x1002, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1003, x6, 8), x1004, 8), x1002, 8),
        32515,
        2,
    )?;
    let x1005: BytePoly_5 = bigint_add!(bigint_mul!(x998, x982, 5), bigint_mul!(x945, x984, 5), 5);
    let x1006: BytePoly_5 = bigint_add!(bigint_mul!(x1004, x982, 5), bigint_mul!(x947, x984, 5), 5);
    let x1007: BytePoly_6 = bigint_nondet_quot!(ctx, x1005, x6, 6);
    let x1008: BytePoly_4 = bigint_nondet_rem!(ctx, x1005, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1007, x6, 10), x1008, 10),
            x1005,
            10
        ),
        48771,
        4,
    )?;
    let x1009: BytePoly_6 = bigint_nondet_quot!(ctx, x1006, x6, 6);
    let x1010: BytePoly_4 = bigint_nondet_rem!(ctx, x1006, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1009, x6, 10), x1010, 10),
            x1006,
            10
        ),
        48771,
        4,
    )?;
    let x1011: BytePoly_8 = bigint_mul!(x975, x975, 8);
    let x1012: BytePoly_9 = bigint_nondet_quot!(ctx, x1011, x6, 9);
    let x1013: BytePoly_4 = bigint_nondet_rem!(ctx, x1011, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1012, x6, 13), x1013, 13),
            x1011,
            13
        ),
        73156,
        4,
    )?;
    let x1014: BytePoly_5 = bigint_add!(bigint_mul!(x1013, x0, 5), x5, 5);
    let x1015: BytePoly_6 = bigint_nondet_quot!(ctx, x1014, x6, 6);
    let x1016: BytePoly_4 = bigint_nondet_rem!(ctx, x1014, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1015, x6, 10), x1016, 10),
            x1014,
            10
        ),
        48771,
        4,
    )?;
    let x1017: BytePoly_4 = bigint_add!(x981, x981, 4);
    let x1018: BytePoly_4 = bigint_nondet_quot!(ctx, x1017, x6, 4);
    let x1019: BytePoly_4 = bigint_nondet_rem!(ctx, x1017, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1018, x6, 8), x1019, 8), x1017, 8),
        32515,
        2,
    )?;
    let x1020: BytePoly_4 = bigint_nondet_inv!(ctx, x1019, x6, 4);
    let x1021: BytePoly_8 = bigint_mul!(x1019, x1020, 8);
    let x1022: BytePoly_9 = bigint_nondet_quot!(ctx, x1021, x6, 9);
    let x1023: BytePoly_4 = bigint_nondet_rem!(ctx, x1021, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1022, x6, 13), x1023, 13),
            x1021,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1023, x3, 4), 34, 1)?;
    let x1024: BytePoly_8 = bigint_mul!(x1016, x1020, 8);
    let x1025: BytePoly_9 = bigint_nondet_quot!(ctx, x1024, x6, 9);
    let x1026: BytePoly_4 = bigint_nondet_rem!(ctx, x1024, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1025, x6, 13), x1026, 13),
            x1024,
            13
        ),
        73156,
        4,
    )?;
    let x1027: BytePoly_8 = bigint_mul!(x1026, x975, 8);
    let x1028: BytePoly_9 = bigint_nondet_quot!(ctx, x1027, x6, 9);
    let x1029: BytePoly_4 = bigint_nondet_rem!(ctx, x1027, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1028, x6, 13), x1029, 13),
            x1027,
            13
        ),
        73156,
        4,
    )?;
    let x1030: BytePoly_4 = bigint_add!(bigint_sub!(x981, x1029, 4), x6, 4);
    let x1031: BytePoly_4 = bigint_nondet_quot!(ctx, x1030, x6, 4);
    let x1032: BytePoly_4 = bigint_nondet_rem!(ctx, x1030, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1031, x6, 8), x1032, 8), x1030, 8),
        32515,
        2,
    )?;
    let x1033: BytePoly_8 = bigint_mul!(x1026, x1026, 8);
    let x1034: BytePoly_9 = bigint_nondet_quot!(ctx, x1033, x6, 9);
    let x1035: BytePoly_4 = bigint_nondet_rem!(ctx, x1033, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1034, x6, 13), x1035, 13),
            x1033,
            13
        ),
        73156,
        4,
    )?;
    let x1036: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1035, x975, 4), x6, 4), x975, 4),
        x6,
        4
    );
    let x1037: BytePoly_4 = bigint_nondet_quot!(ctx, x1036, x6, 4);
    let x1038: BytePoly_4 = bigint_nondet_rem!(ctx, x1036, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1037, x6, 8), x1038, 8), x1036, 8),
        32515,
        2,
    )?;
    let x1039: BytePoly_8 = bigint_mul!(x1026, x1038, 8);
    let x1040: BytePoly_9 = bigint_nondet_quot!(ctx, x1039, x6, 9);
    let x1041: BytePoly_4 = bigint_nondet_rem!(ctx, x1039, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1040, x6, 13), x1041, 13),
            x1039,
            13
        ),
        73156,
        4,
    )?;
    let x1042: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x1041, x1032, 4), 4), x6, 4);
    let x1043: BytePoly_4 = bigint_nondet_quot!(ctx, x1042, x6, 4);
    let x1044: BytePoly_4 = bigint_nondet_rem!(ctx, x1042, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1043, x6, 8), x1044, 8), x1042, 8),
        32515,
        2,
    )?;
    let x1045: BytePoly_1 = bigint_nondet_rem!(ctx, x983, x2, 1);
    let x1046: BytePoly_5 = bigint_nondet_quot!(ctx, x983, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1046, x2, 6), x1045, 6), x983, 6),
        40643,
        4,
    )?;
    let x1047: BytePoly_1 = bigint_sub!(x3, x1045, 1);
    eqz(ctx, &bigint_mul!(x1045, x1047, 2), 8131, 2)?;
    let x1048: BytePoly_4 = bigint_add!(bigint_sub!(x1038, x1008, 4), x6, 4);
    let x1049: BytePoly_4 = bigint_nondet_inv!(ctx, x1048, x6, 4);
    let x1050: BytePoly_8 = bigint_mul!(x1048, x1049, 8);
    let x1051: BytePoly_9 = bigint_nondet_quot!(ctx, x1050, x6, 9);
    let x1052: BytePoly_4 = bigint_nondet_rem!(ctx, x1050, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1051, x6, 13), x1052, 13),
            x1050,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1052, x1, 4), 34, 1)?;
    let x1053: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x1044, x1010, 4), x6, 4), x1049, 8);
    let x1054: BytePoly_9 = bigint_nondet_quot!(ctx, x1053, x6, 9);
    let x1055: BytePoly_4 = bigint_nondet_rem!(ctx, x1053, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1054, x6, 13), x1055, 13),
            x1053,
            13
        ),
        73156,
        4,
    )?;
    let x1056: BytePoly_8 = bigint_add!(bigint_sub!(x1010, bigint_mul!(x1055, x1008, 8), 8), x6, 8);
    let x1057: BytePoly_8 = bigint_nondet_quot!(ctx, x1056, x6, 8);
    let x1058: BytePoly_4 = bigint_nondet_rem!(ctx, x1056, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1057, x6, 12), x1058, 12),
            x1056,
            12
        ),
        65028,
        4,
    )?;
    let x1059: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x1055, x1055, 8), x1008, 8), x6, 8),
            x1038,
            8
        ),
        x6,
        8
    );
    let x1060: BytePoly_9 = bigint_nondet_quot!(ctx, x1059, x6, 9);
    let x1061: BytePoly_4 = bigint_nondet_rem!(ctx, x1059, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1060, x6, 13), x1061, 13),
            x1059,
            13
        ),
        73156,
        4,
    )?;
    let x1062: BytePoly_8 = bigint_mul!(x1055, x1061, 8);
    let x1063: BytePoly_9 = bigint_nondet_quot!(ctx, x1062, x6, 9);
    let x1064: BytePoly_4 = bigint_nondet_rem!(ctx, x1062, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1063, x6, 13), x1064, 13),
            x1062,
            13
        ),
        73156,
        4,
    )?;
    let x1065: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x1064, x1058, 4), 4), x6, 4);
    let x1066: BytePoly_4 = bigint_nondet_quot!(ctx, x1065, x6, 4);
    let x1067: BytePoly_4 = bigint_nondet_rem!(ctx, x1065, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1066, x6, 8), x1067, 8), x1065, 8),
        32515,
        2,
    )?;
    let x1068: BytePoly_5 = bigint_add!(
        bigint_mul!(x1061, x1045, 5),
        bigint_mul!(x1008, x1047, 5),
        5
    );
    let x1069: BytePoly_5 = bigint_add!(
        bigint_mul!(x1067, x1045, 5),
        bigint_mul!(x1010, x1047, 5),
        5
    );
    let x1070: BytePoly_6 = bigint_nondet_quot!(ctx, x1068, x6, 6);
    let x1071: BytePoly_4 = bigint_nondet_rem!(ctx, x1068, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1070, x6, 10), x1071, 10),
            x1068,
            10
        ),
        48771,
        4,
    )?;
    let x1072: BytePoly_6 = bigint_nondet_quot!(ctx, x1069, x6, 6);
    let x1073: BytePoly_4 = bigint_nondet_rem!(ctx, x1069, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1072, x6, 10), x1073, 10),
            x1069,
            10
        ),
        48771,
        4,
    )?;
    let x1074: BytePoly_8 = bigint_mul!(x1038, x1038, 8);
    let x1075: BytePoly_9 = bigint_nondet_quot!(ctx, x1074, x6, 9);
    let x1076: BytePoly_4 = bigint_nondet_rem!(ctx, x1074, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1075, x6, 13), x1076, 13),
            x1074,
            13
        ),
        73156,
        4,
    )?;
    let x1077: BytePoly_5 = bigint_add!(bigint_mul!(x1076, x0, 5), x5, 5);
    let x1078: BytePoly_6 = bigint_nondet_quot!(ctx, x1077, x6, 6);
    let x1079: BytePoly_4 = bigint_nondet_rem!(ctx, x1077, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1078, x6, 10), x1079, 10),
            x1077,
            10
        ),
        48771,
        4,
    )?;
    let x1080: BytePoly_4 = bigint_add!(x1044, x1044, 4);
    let x1081: BytePoly_4 = bigint_nondet_quot!(ctx, x1080, x6, 4);
    let x1082: BytePoly_4 = bigint_nondet_rem!(ctx, x1080, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1081, x6, 8), x1082, 8), x1080, 8),
        32515,
        2,
    )?;
    let x1083: BytePoly_4 = bigint_nondet_inv!(ctx, x1082, x6, 4);
    let x1084: BytePoly_8 = bigint_mul!(x1082, x1083, 8);
    let x1085: BytePoly_9 = bigint_nondet_quot!(ctx, x1084, x6, 9);
    let x1086: BytePoly_4 = bigint_nondet_rem!(ctx, x1084, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1085, x6, 13), x1086, 13),
            x1084,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1086, x3, 4), 34, 1)?;
    let x1087: BytePoly_8 = bigint_mul!(x1079, x1083, 8);
    let x1088: BytePoly_9 = bigint_nondet_quot!(ctx, x1087, x6, 9);
    let x1089: BytePoly_4 = bigint_nondet_rem!(ctx, x1087, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1088, x6, 13), x1089, 13),
            x1087,
            13
        ),
        73156,
        4,
    )?;
    let x1090: BytePoly_8 = bigint_mul!(x1089, x1038, 8);
    let x1091: BytePoly_9 = bigint_nondet_quot!(ctx, x1090, x6, 9);
    let x1092: BytePoly_4 = bigint_nondet_rem!(ctx, x1090, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1091, x6, 13), x1092, 13),
            x1090,
            13
        ),
        73156,
        4,
    )?;
    let x1093: BytePoly_4 = bigint_add!(bigint_sub!(x1044, x1092, 4), x6, 4);
    let x1094: BytePoly_4 = bigint_nondet_quot!(ctx, x1093, x6, 4);
    let x1095: BytePoly_4 = bigint_nondet_rem!(ctx, x1093, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1094, x6, 8), x1095, 8), x1093, 8),
        32515,
        2,
    )?;
    let x1096: BytePoly_8 = bigint_mul!(x1089, x1089, 8);
    let x1097: BytePoly_9 = bigint_nondet_quot!(ctx, x1096, x6, 9);
    let x1098: BytePoly_4 = bigint_nondet_rem!(ctx, x1096, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1097, x6, 13), x1098, 13),
            x1096,
            13
        ),
        73156,
        4,
    )?;
    let x1099: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1098, x1038, 4), x6, 4), x1038, 4),
        x6,
        4
    );
    let x1100: BytePoly_4 = bigint_nondet_quot!(ctx, x1099, x6, 4);
    let x1101: BytePoly_4 = bigint_nondet_rem!(ctx, x1099, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1100, x6, 8), x1101, 8), x1099, 8),
        32515,
        2,
    )?;
    let x1102: BytePoly_8 = bigint_mul!(x1089, x1101, 8);
    let x1103: BytePoly_9 = bigint_nondet_quot!(ctx, x1102, x6, 9);
    let x1104: BytePoly_4 = bigint_nondet_rem!(ctx, x1102, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1103, x6, 13), x1104, 13),
            x1102,
            13
        ),
        73156,
        4,
    )?;
    let x1105: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x1104, x1095, 4), 4), x6, 4);
    let x1106: BytePoly_4 = bigint_nondet_quot!(ctx, x1105, x6, 4);
    let x1107: BytePoly_4 = bigint_nondet_rem!(ctx, x1105, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1106, x6, 8), x1107, 8), x1105, 8),
        32515,
        2,
    )?;
    let x1108: BytePoly_1 = bigint_nondet_rem!(ctx, x1046, x2, 1);
    let x1109: BytePoly_5 = bigint_nondet_quot!(ctx, x1046, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1109, x2, 6), x1108, 6), x1046, 6),
        40643,
        4,
    )?;
    let x1110: BytePoly_1 = bigint_sub!(x3, x1108, 1);
    eqz(ctx, &bigint_mul!(x1108, x1110, 2), 8131, 2)?;
    let x1111: BytePoly_4 = bigint_add!(bigint_sub!(x1101, x1071, 4), x6, 4);
    let x1112: BytePoly_4 = bigint_nondet_inv!(ctx, x1111, x6, 4);
    let x1113: BytePoly_8 = bigint_mul!(x1111, x1112, 8);
    let x1114: BytePoly_9 = bigint_nondet_quot!(ctx, x1113, x6, 9);
    let x1115: BytePoly_4 = bigint_nondet_rem!(ctx, x1113, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1114, x6, 13), x1115, 13),
            x1113,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1115, x1, 4), 34, 1)?;
    let x1116: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x1107, x1073, 4), x6, 4), x1112, 8);
    let x1117: BytePoly_9 = bigint_nondet_quot!(ctx, x1116, x6, 9);
    let x1118: BytePoly_4 = bigint_nondet_rem!(ctx, x1116, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1117, x6, 13), x1118, 13),
            x1116,
            13
        ),
        73156,
        4,
    )?;
    let x1119: BytePoly_8 = bigint_add!(bigint_sub!(x1073, bigint_mul!(x1118, x1071, 8), 8), x6, 8);
    let x1120: BytePoly_8 = bigint_nondet_quot!(ctx, x1119, x6, 8);
    let x1121: BytePoly_4 = bigint_nondet_rem!(ctx, x1119, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1120, x6, 12), x1121, 12),
            x1119,
            12
        ),
        65028,
        4,
    )?;
    let x1122: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x1118, x1118, 8), x1071, 8), x6, 8),
            x1101,
            8
        ),
        x6,
        8
    );
    let x1123: BytePoly_9 = bigint_nondet_quot!(ctx, x1122, x6, 9);
    let x1124: BytePoly_4 = bigint_nondet_rem!(ctx, x1122, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1123, x6, 13), x1124, 13),
            x1122,
            13
        ),
        73156,
        4,
    )?;
    let x1125: BytePoly_8 = bigint_mul!(x1118, x1124, 8);
    let x1126: BytePoly_9 = bigint_nondet_quot!(ctx, x1125, x6, 9);
    let x1127: BytePoly_4 = bigint_nondet_rem!(ctx, x1125, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1126, x6, 13), x1127, 13),
            x1125,
            13
        ),
        73156,
        4,
    )?;
    let x1128: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x1127, x1121, 4), 4), x6, 4);
    let x1129: BytePoly_4 = bigint_nondet_quot!(ctx, x1128, x6, 4);
    let x1130: BytePoly_4 = bigint_nondet_rem!(ctx, x1128, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1129, x6, 8), x1130, 8), x1128, 8),
        32515,
        2,
    )?;
    let x1131: BytePoly_5 = bigint_add!(
        bigint_mul!(x1124, x1108, 5),
        bigint_mul!(x1071, x1110, 5),
        5
    );
    let x1132: BytePoly_5 = bigint_add!(
        bigint_mul!(x1130, x1108, 5),
        bigint_mul!(x1073, x1110, 5),
        5
    );
    let x1133: BytePoly_6 = bigint_nondet_quot!(ctx, x1131, x6, 6);
    let x1134: BytePoly_4 = bigint_nondet_rem!(ctx, x1131, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1133, x6, 10), x1134, 10),
            x1131,
            10
        ),
        48771,
        4,
    )?;
    let x1135: BytePoly_6 = bigint_nondet_quot!(ctx, x1132, x6, 6);
    let x1136: BytePoly_4 = bigint_nondet_rem!(ctx, x1132, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1135, x6, 10), x1136, 10),
            x1132,
            10
        ),
        48771,
        4,
    )?;
    let x1137: BytePoly_8 = bigint_mul!(x1101, x1101, 8);
    let x1138: BytePoly_9 = bigint_nondet_quot!(ctx, x1137, x6, 9);
    let x1139: BytePoly_4 = bigint_nondet_rem!(ctx, x1137, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1138, x6, 13), x1139, 13),
            x1137,
            13
        ),
        73156,
        4,
    )?;
    let x1140: BytePoly_5 = bigint_add!(bigint_mul!(x1139, x0, 5), x5, 5);
    let x1141: BytePoly_6 = bigint_nondet_quot!(ctx, x1140, x6, 6);
    let x1142: BytePoly_4 = bigint_nondet_rem!(ctx, x1140, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1141, x6, 10), x1142, 10),
            x1140,
            10
        ),
        48771,
        4,
    )?;
    let x1143: BytePoly_4 = bigint_add!(x1107, x1107, 4);
    let x1144: BytePoly_4 = bigint_nondet_quot!(ctx, x1143, x6, 4);
    let x1145: BytePoly_4 = bigint_nondet_rem!(ctx, x1143, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1144, x6, 8), x1145, 8), x1143, 8),
        32515,
        2,
    )?;
    let x1146: BytePoly_4 = bigint_nondet_inv!(ctx, x1145, x6, 4);
    let x1147: BytePoly_8 = bigint_mul!(x1145, x1146, 8);
    let x1148: BytePoly_9 = bigint_nondet_quot!(ctx, x1147, x6, 9);
    let x1149: BytePoly_4 = bigint_nondet_rem!(ctx, x1147, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1148, x6, 13), x1149, 13),
            x1147,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1149, x3, 4), 34, 1)?;
    let x1150: BytePoly_8 = bigint_mul!(x1142, x1146, 8);
    let x1151: BytePoly_9 = bigint_nondet_quot!(ctx, x1150, x6, 9);
    let x1152: BytePoly_4 = bigint_nondet_rem!(ctx, x1150, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1151, x6, 13), x1152, 13),
            x1150,
            13
        ),
        73156,
        4,
    )?;
    let x1153: BytePoly_8 = bigint_mul!(x1152, x1101, 8);
    let x1154: BytePoly_9 = bigint_nondet_quot!(ctx, x1153, x6, 9);
    let x1155: BytePoly_4 = bigint_nondet_rem!(ctx, x1153, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1154, x6, 13), x1155, 13),
            x1153,
            13
        ),
        73156,
        4,
    )?;
    let x1156: BytePoly_4 = bigint_add!(bigint_sub!(x1107, x1155, 4), x6, 4);
    let x1157: BytePoly_4 = bigint_nondet_quot!(ctx, x1156, x6, 4);
    let x1158: BytePoly_4 = bigint_nondet_rem!(ctx, x1156, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1157, x6, 8), x1158, 8), x1156, 8),
        32515,
        2,
    )?;
    let x1159: BytePoly_8 = bigint_mul!(x1152, x1152, 8);
    let x1160: BytePoly_9 = bigint_nondet_quot!(ctx, x1159, x6, 9);
    let x1161: BytePoly_4 = bigint_nondet_rem!(ctx, x1159, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1160, x6, 13), x1161, 13),
            x1159,
            13
        ),
        73156,
        4,
    )?;
    let x1162: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1161, x1101, 4), x6, 4), x1101, 4),
        x6,
        4
    );
    let x1163: BytePoly_4 = bigint_nondet_quot!(ctx, x1162, x6, 4);
    let x1164: BytePoly_4 = bigint_nondet_rem!(ctx, x1162, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1163, x6, 8), x1164, 8), x1162, 8),
        32515,
        2,
    )?;
    let x1165: BytePoly_8 = bigint_mul!(x1152, x1164, 8);
    let x1166: BytePoly_9 = bigint_nondet_quot!(ctx, x1165, x6, 9);
    let x1167: BytePoly_4 = bigint_nondet_rem!(ctx, x1165, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1166, x6, 13), x1167, 13),
            x1165,
            13
        ),
        73156,
        4,
    )?;
    let x1168: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x1167, x1158, 4), 4), x6, 4);
    let x1169: BytePoly_4 = bigint_nondet_quot!(ctx, x1168, x6, 4);
    let x1170: BytePoly_4 = bigint_nondet_rem!(ctx, x1168, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1169, x6, 8), x1170, 8), x1168, 8),
        32515,
        2,
    )?;
    let x1171: BytePoly_1 = bigint_nondet_rem!(ctx, x1109, x2, 1);
    let x1172: BytePoly_5 = bigint_nondet_quot!(ctx, x1109, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1172, x2, 6), x1171, 6), x1109, 6),
        40643,
        4,
    )?;
    let x1173: BytePoly_1 = bigint_sub!(x3, x1171, 1);
    eqz(ctx, &bigint_mul!(x1171, x1173, 2), 8131, 2)?;
    let x1174: BytePoly_4 = bigint_add!(bigint_sub!(x1164, x1134, 4), x6, 4);
    let x1175: BytePoly_4 = bigint_nondet_inv!(ctx, x1174, x6, 4);
    let x1176: BytePoly_8 = bigint_mul!(x1174, x1175, 8);
    let x1177: BytePoly_9 = bigint_nondet_quot!(ctx, x1176, x6, 9);
    let x1178: BytePoly_4 = bigint_nondet_rem!(ctx, x1176, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1177, x6, 13), x1178, 13),
            x1176,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1178, x1, 4), 34, 1)?;
    let x1179: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x1170, x1136, 4), x6, 4), x1175, 8);
    let x1180: BytePoly_9 = bigint_nondet_quot!(ctx, x1179, x6, 9);
    let x1181: BytePoly_4 = bigint_nondet_rem!(ctx, x1179, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1180, x6, 13), x1181, 13),
            x1179,
            13
        ),
        73156,
        4,
    )?;
    let x1182: BytePoly_8 = bigint_add!(bigint_sub!(x1136, bigint_mul!(x1181, x1134, 8), 8), x6, 8);
    let x1183: BytePoly_8 = bigint_nondet_quot!(ctx, x1182, x6, 8);
    let x1184: BytePoly_4 = bigint_nondet_rem!(ctx, x1182, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1183, x6, 12), x1184, 12),
            x1182,
            12
        ),
        65028,
        4,
    )?;
    let x1185: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x1181, x1181, 8), x1134, 8), x6, 8),
            x1164,
            8
        ),
        x6,
        8
    );
    let x1186: BytePoly_9 = bigint_nondet_quot!(ctx, x1185, x6, 9);
    let x1187: BytePoly_4 = bigint_nondet_rem!(ctx, x1185, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1186, x6, 13), x1187, 13),
            x1185,
            13
        ),
        73156,
        4,
    )?;
    let x1188: BytePoly_8 = bigint_mul!(x1181, x1187, 8);
    let x1189: BytePoly_9 = bigint_nondet_quot!(ctx, x1188, x6, 9);
    let x1190: BytePoly_4 = bigint_nondet_rem!(ctx, x1188, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1189, x6, 13), x1190, 13),
            x1188,
            13
        ),
        73156,
        4,
    )?;
    let x1191: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x1190, x1184, 4), 4), x6, 4);
    let x1192: BytePoly_4 = bigint_nondet_quot!(ctx, x1191, x6, 4);
    let x1193: BytePoly_4 = bigint_nondet_rem!(ctx, x1191, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1192, x6, 8), x1193, 8), x1191, 8),
        32515,
        2,
    )?;
    let x1194: BytePoly_5 = bigint_add!(
        bigint_mul!(x1187, x1171, 5),
        bigint_mul!(x1134, x1173, 5),
        5
    );
    let x1195: BytePoly_5 = bigint_add!(
        bigint_mul!(x1193, x1171, 5),
        bigint_mul!(x1136, x1173, 5),
        5
    );
    let x1196: BytePoly_6 = bigint_nondet_quot!(ctx, x1194, x6, 6);
    let x1197: BytePoly_4 = bigint_nondet_rem!(ctx, x1194, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1196, x6, 10), x1197, 10),
            x1194,
            10
        ),
        48771,
        4,
    )?;
    let x1198: BytePoly_6 = bigint_nondet_quot!(ctx, x1195, x6, 6);
    let x1199: BytePoly_4 = bigint_nondet_rem!(ctx, x1195, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1198, x6, 10), x1199, 10),
            x1195,
            10
        ),
        48771,
        4,
    )?;
    let x1200: BytePoly_8 = bigint_mul!(x1164, x1164, 8);
    let x1201: BytePoly_9 = bigint_nondet_quot!(ctx, x1200, x6, 9);
    let x1202: BytePoly_4 = bigint_nondet_rem!(ctx, x1200, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1201, x6, 13), x1202, 13),
            x1200,
            13
        ),
        73156,
        4,
    )?;
    let x1203: BytePoly_5 = bigint_add!(bigint_mul!(x1202, x0, 5), x5, 5);
    let x1204: BytePoly_6 = bigint_nondet_quot!(ctx, x1203, x6, 6);
    let x1205: BytePoly_4 = bigint_nondet_rem!(ctx, x1203, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1204, x6, 10), x1205, 10),
            x1203,
            10
        ),
        48771,
        4,
    )?;
    let x1206: BytePoly_4 = bigint_add!(x1170, x1170, 4);
    let x1207: BytePoly_4 = bigint_nondet_quot!(ctx, x1206, x6, 4);
    let x1208: BytePoly_4 = bigint_nondet_rem!(ctx, x1206, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1207, x6, 8), x1208, 8), x1206, 8),
        32515,
        2,
    )?;
    let x1209: BytePoly_4 = bigint_nondet_inv!(ctx, x1208, x6, 4);
    let x1210: BytePoly_8 = bigint_mul!(x1208, x1209, 8);
    let x1211: BytePoly_9 = bigint_nondet_quot!(ctx, x1210, x6, 9);
    let x1212: BytePoly_4 = bigint_nondet_rem!(ctx, x1210, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1211, x6, 13), x1212, 13),
            x1210,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1212, x3, 4), 34, 1)?;
    let x1213: BytePoly_8 = bigint_mul!(x1205, x1209, 8);
    let x1214: BytePoly_9 = bigint_nondet_quot!(ctx, x1213, x6, 9);
    let x1215: BytePoly_4 = bigint_nondet_rem!(ctx, x1213, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1214, x6, 13), x1215, 13),
            x1213,
            13
        ),
        73156,
        4,
    )?;
    let x1216: BytePoly_8 = bigint_mul!(x1215, x1164, 8);
    let x1217: BytePoly_9 = bigint_nondet_quot!(ctx, x1216, x6, 9);
    let x1218: BytePoly_4 = bigint_nondet_rem!(ctx, x1216, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1217, x6, 13), x1218, 13),
            x1216,
            13
        ),
        73156,
        4,
    )?;
    let x1219: BytePoly_4 = bigint_add!(bigint_sub!(x1170, x1218, 4), x6, 4);
    let x1220: BytePoly_4 = bigint_nondet_quot!(ctx, x1219, x6, 4);
    let x1221: BytePoly_4 = bigint_nondet_rem!(ctx, x1219, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1220, x6, 8), x1221, 8), x1219, 8),
        32515,
        2,
    )?;
    let x1222: BytePoly_8 = bigint_mul!(x1215, x1215, 8);
    let x1223: BytePoly_9 = bigint_nondet_quot!(ctx, x1222, x6, 9);
    let x1224: BytePoly_4 = bigint_nondet_rem!(ctx, x1222, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1223, x6, 13), x1224, 13),
            x1222,
            13
        ),
        73156,
        4,
    )?;
    let x1225: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1224, x1164, 4), x6, 4), x1164, 4),
        x6,
        4
    );
    let x1226: BytePoly_4 = bigint_nondet_quot!(ctx, x1225, x6, 4);
    let x1227: BytePoly_4 = bigint_nondet_rem!(ctx, x1225, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1226, x6, 8), x1227, 8), x1225, 8),
        32515,
        2,
    )?;
    let x1228: BytePoly_8 = bigint_mul!(x1215, x1227, 8);
    let x1229: BytePoly_9 = bigint_nondet_quot!(ctx, x1228, x6, 9);
    let x1230: BytePoly_4 = bigint_nondet_rem!(ctx, x1228, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1229, x6, 13), x1230, 13),
            x1228,
            13
        ),
        73156,
        4,
    )?;
    let x1231: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x1230, x1221, 4), 4), x6, 4);
    let x1232: BytePoly_4 = bigint_nondet_quot!(ctx, x1231, x6, 4);
    let x1233: BytePoly_4 = bigint_nondet_rem!(ctx, x1231, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1232, x6, 8), x1233, 8), x1231, 8),
        32515,
        2,
    )?;
    let x1234: BytePoly_1 = bigint_nondet_rem!(ctx, x1172, x2, 1);
    let x1235: BytePoly_5 = bigint_nondet_quot!(ctx, x1172, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1235, x2, 6), x1234, 6), x1172, 6),
        40643,
        4,
    )?;
    let x1236: BytePoly_1 = bigint_sub!(x3, x1234, 1);
    eqz(ctx, &bigint_mul!(x1234, x1236, 2), 8131, 2)?;
    let x1237: BytePoly_4 = bigint_add!(bigint_sub!(x1227, x1197, 4), x6, 4);
    let x1238: BytePoly_4 = bigint_nondet_inv!(ctx, x1237, x6, 4);
    let x1239: BytePoly_8 = bigint_mul!(x1237, x1238, 8);
    let x1240: BytePoly_9 = bigint_nondet_quot!(ctx, x1239, x6, 9);
    let x1241: BytePoly_4 = bigint_nondet_rem!(ctx, x1239, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1240, x6, 13), x1241, 13),
            x1239,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1241, x1, 4), 34, 1)?;
    let x1242: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x1233, x1199, 4), x6, 4), x1238, 8);
    let x1243: BytePoly_9 = bigint_nondet_quot!(ctx, x1242, x6, 9);
    let x1244: BytePoly_4 = bigint_nondet_rem!(ctx, x1242, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1243, x6, 13), x1244, 13),
            x1242,
            13
        ),
        73156,
        4,
    )?;
    let x1245: BytePoly_8 = bigint_add!(bigint_sub!(x1199, bigint_mul!(x1244, x1197, 8), 8), x6, 8);
    let x1246: BytePoly_8 = bigint_nondet_quot!(ctx, x1245, x6, 8);
    let x1247: BytePoly_4 = bigint_nondet_rem!(ctx, x1245, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1246, x6, 12), x1247, 12),
            x1245,
            12
        ),
        65028,
        4,
    )?;
    let x1248: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x1244, x1244, 8), x1197, 8), x6, 8),
            x1227,
            8
        ),
        x6,
        8
    );
    let x1249: BytePoly_9 = bigint_nondet_quot!(ctx, x1248, x6, 9);
    let x1250: BytePoly_4 = bigint_nondet_rem!(ctx, x1248, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1249, x6, 13), x1250, 13),
            x1248,
            13
        ),
        73156,
        4,
    )?;
    let x1251: BytePoly_8 = bigint_mul!(x1244, x1250, 8);
    let x1252: BytePoly_9 = bigint_nondet_quot!(ctx, x1251, x6, 9);
    let x1253: BytePoly_4 = bigint_nondet_rem!(ctx, x1251, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1252, x6, 13), x1253, 13),
            x1251,
            13
        ),
        73156,
        4,
    )?;
    let x1254: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x1253, x1247, 4), 4), x6, 4);
    let x1255: BytePoly_4 = bigint_nondet_quot!(ctx, x1254, x6, 4);
    let x1256: BytePoly_4 = bigint_nondet_rem!(ctx, x1254, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1255, x6, 8), x1256, 8), x1254, 8),
        32515,
        2,
    )?;
    let x1257: BytePoly_5 = bigint_add!(
        bigint_mul!(x1250, x1234, 5),
        bigint_mul!(x1197, x1236, 5),
        5
    );
    let x1258: BytePoly_5 = bigint_add!(
        bigint_mul!(x1256, x1234, 5),
        bigint_mul!(x1199, x1236, 5),
        5
    );
    let x1259: BytePoly_6 = bigint_nondet_quot!(ctx, x1257, x6, 6);
    let x1260: BytePoly_4 = bigint_nondet_rem!(ctx, x1257, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1259, x6, 10), x1260, 10),
            x1257,
            10
        ),
        48771,
        4,
    )?;
    let x1261: BytePoly_6 = bigint_nondet_quot!(ctx, x1258, x6, 6);
    let x1262: BytePoly_4 = bigint_nondet_rem!(ctx, x1258, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1261, x6, 10), x1262, 10),
            x1258,
            10
        ),
        48771,
        4,
    )?;
    let x1263: BytePoly_8 = bigint_mul!(x1227, x1227, 8);
    let x1264: BytePoly_9 = bigint_nondet_quot!(ctx, x1263, x6, 9);
    let x1265: BytePoly_4 = bigint_nondet_rem!(ctx, x1263, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1264, x6, 13), x1265, 13),
            x1263,
            13
        ),
        73156,
        4,
    )?;
    let x1266: BytePoly_5 = bigint_add!(bigint_mul!(x1265, x0, 5), x5, 5);
    let x1267: BytePoly_6 = bigint_nondet_quot!(ctx, x1266, x6, 6);
    let x1268: BytePoly_4 = bigint_nondet_rem!(ctx, x1266, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1267, x6, 10), x1268, 10),
            x1266,
            10
        ),
        48771,
        4,
    )?;
    let x1269: BytePoly_4 = bigint_add!(x1233, x1233, 4);
    let x1270: BytePoly_4 = bigint_nondet_quot!(ctx, x1269, x6, 4);
    let x1271: BytePoly_4 = bigint_nondet_rem!(ctx, x1269, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1270, x6, 8), x1271, 8), x1269, 8),
        32515,
        2,
    )?;
    let x1272: BytePoly_4 = bigint_nondet_inv!(ctx, x1271, x6, 4);
    let x1273: BytePoly_8 = bigint_mul!(x1271, x1272, 8);
    let x1274: BytePoly_9 = bigint_nondet_quot!(ctx, x1273, x6, 9);
    let x1275: BytePoly_4 = bigint_nondet_rem!(ctx, x1273, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1274, x6, 13), x1275, 13),
            x1273,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1275, x3, 4), 34, 1)?;
    let x1276: BytePoly_8 = bigint_mul!(x1268, x1272, 8);
    let x1277: BytePoly_9 = bigint_nondet_quot!(ctx, x1276, x6, 9);
    let x1278: BytePoly_4 = bigint_nondet_rem!(ctx, x1276, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1277, x6, 13), x1278, 13),
            x1276,
            13
        ),
        73156,
        4,
    )?;
    let x1279: BytePoly_8 = bigint_mul!(x1278, x1227, 8);
    let x1280: BytePoly_9 = bigint_nondet_quot!(ctx, x1279, x6, 9);
    let x1281: BytePoly_4 = bigint_nondet_rem!(ctx, x1279, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1280, x6, 13), x1281, 13),
            x1279,
            13
        ),
        73156,
        4,
    )?;
    let x1282: BytePoly_4 = bigint_add!(bigint_sub!(x1233, x1281, 4), x6, 4);
    let x1283: BytePoly_4 = bigint_nondet_quot!(ctx, x1282, x6, 4);
    let x1284: BytePoly_4 = bigint_nondet_rem!(ctx, x1282, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1283, x6, 8), x1284, 8), x1282, 8),
        32515,
        2,
    )?;
    let x1285: BytePoly_8 = bigint_mul!(x1278, x1278, 8);
    let x1286: BytePoly_9 = bigint_nondet_quot!(ctx, x1285, x6, 9);
    let x1287: BytePoly_4 = bigint_nondet_rem!(ctx, x1285, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1286, x6, 13), x1287, 13),
            x1285,
            13
        ),
        73156,
        4,
    )?;
    let x1288: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1287, x1227, 4), x6, 4), x1227, 4),
        x6,
        4
    );
    let x1289: BytePoly_4 = bigint_nondet_quot!(ctx, x1288, x6, 4);
    let x1290: BytePoly_4 = bigint_nondet_rem!(ctx, x1288, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1289, x6, 8), x1290, 8), x1288, 8),
        32515,
        2,
    )?;
    let x1291: BytePoly_8 = bigint_mul!(x1278, x1290, 8);
    let x1292: BytePoly_9 = bigint_nondet_quot!(ctx, x1291, x6, 9);
    let x1293: BytePoly_4 = bigint_nondet_rem!(ctx, x1291, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1292, x6, 13), x1293, 13),
            x1291,
            13
        ),
        73156,
        4,
    )?;
    let x1294: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x1293, x1284, 4), 4), x6, 4);
    let x1295: BytePoly_4 = bigint_nondet_quot!(ctx, x1294, x6, 4);
    let x1296: BytePoly_4 = bigint_nondet_rem!(ctx, x1294, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1295, x6, 8), x1296, 8), x1294, 8),
        32515,
        2,
    )?;
    let x1297: BytePoly_1 = bigint_nondet_rem!(ctx, x1235, x2, 1);
    let x1298: BytePoly_5 = bigint_nondet_quot!(ctx, x1235, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1298, x2, 6), x1297, 6), x1235, 6),
        40643,
        4,
    )?;
    let x1299: BytePoly_1 = bigint_sub!(x3, x1297, 1);
    eqz(ctx, &bigint_mul!(x1297, x1299, 2), 8131, 2)?;
    let x1300: BytePoly_4 = bigint_add!(bigint_sub!(x1290, x1260, 4), x6, 4);
    let x1301: BytePoly_4 = bigint_nondet_inv!(ctx, x1300, x6, 4);
    let x1302: BytePoly_8 = bigint_mul!(x1300, x1301, 8);
    let x1303: BytePoly_9 = bigint_nondet_quot!(ctx, x1302, x6, 9);
    let x1304: BytePoly_4 = bigint_nondet_rem!(ctx, x1302, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1303, x6, 13), x1304, 13),
            x1302,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1304, x1, 4), 34, 1)?;
    let x1305: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x1296, x1262, 4), x6, 4), x1301, 8);
    let x1306: BytePoly_9 = bigint_nondet_quot!(ctx, x1305, x6, 9);
    let x1307: BytePoly_4 = bigint_nondet_rem!(ctx, x1305, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1306, x6, 13), x1307, 13),
            x1305,
            13
        ),
        73156,
        4,
    )?;
    let x1308: BytePoly_8 = bigint_add!(bigint_sub!(x1262, bigint_mul!(x1307, x1260, 8), 8), x6, 8);
    let x1309: BytePoly_8 = bigint_nondet_quot!(ctx, x1308, x6, 8);
    let x1310: BytePoly_4 = bigint_nondet_rem!(ctx, x1308, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1309, x6, 12), x1310, 12),
            x1308,
            12
        ),
        65028,
        4,
    )?;
    let x1311: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x1307, x1307, 8), x1260, 8), x6, 8),
            x1290,
            8
        ),
        x6,
        8
    );
    let x1312: BytePoly_9 = bigint_nondet_quot!(ctx, x1311, x6, 9);
    let x1313: BytePoly_4 = bigint_nondet_rem!(ctx, x1311, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1312, x6, 13), x1313, 13),
            x1311,
            13
        ),
        73156,
        4,
    )?;
    let x1314: BytePoly_8 = bigint_mul!(x1307, x1313, 8);
    let x1315: BytePoly_9 = bigint_nondet_quot!(ctx, x1314, x6, 9);
    let x1316: BytePoly_4 = bigint_nondet_rem!(ctx, x1314, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1315, x6, 13), x1316, 13),
            x1314,
            13
        ),
        73156,
        4,
    )?;
    let x1317: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x1316, x1310, 4), 4), x6, 4);
    let x1318: BytePoly_4 = bigint_nondet_quot!(ctx, x1317, x6, 4);
    let x1319: BytePoly_4 = bigint_nondet_rem!(ctx, x1317, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1318, x6, 8), x1319, 8), x1317, 8),
        32515,
        2,
    )?;
    let x1320: BytePoly_5 = bigint_add!(
        bigint_mul!(x1313, x1297, 5),
        bigint_mul!(x1260, x1299, 5),
        5
    );
    let x1321: BytePoly_5 = bigint_add!(
        bigint_mul!(x1319, x1297, 5),
        bigint_mul!(x1262, x1299, 5),
        5
    );
    let x1322: BytePoly_6 = bigint_nondet_quot!(ctx, x1320, x6, 6);
    let x1323: BytePoly_4 = bigint_nondet_rem!(ctx, x1320, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1322, x6, 10), x1323, 10),
            x1320,
            10
        ),
        48771,
        4,
    )?;
    let x1324: BytePoly_6 = bigint_nondet_quot!(ctx, x1321, x6, 6);
    let x1325: BytePoly_4 = bigint_nondet_rem!(ctx, x1321, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1324, x6, 10), x1325, 10),
            x1321,
            10
        ),
        48771,
        4,
    )?;
    let x1326: BytePoly_8 = bigint_mul!(x1290, x1290, 8);
    let x1327: BytePoly_9 = bigint_nondet_quot!(ctx, x1326, x6, 9);
    let x1328: BytePoly_4 = bigint_nondet_rem!(ctx, x1326, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1327, x6, 13), x1328, 13),
            x1326,
            13
        ),
        73156,
        4,
    )?;
    let x1329: BytePoly_5 = bigint_add!(bigint_mul!(x1328, x0, 5), x5, 5);
    let x1330: BytePoly_6 = bigint_nondet_quot!(ctx, x1329, x6, 6);
    let x1331: BytePoly_4 = bigint_nondet_rem!(ctx, x1329, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1330, x6, 10), x1331, 10),
            x1329,
            10
        ),
        48771,
        4,
    )?;
    let x1332: BytePoly_4 = bigint_add!(x1296, x1296, 4);
    let x1333: BytePoly_4 = bigint_nondet_quot!(ctx, x1332, x6, 4);
    let x1334: BytePoly_4 = bigint_nondet_rem!(ctx, x1332, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1333, x6, 8), x1334, 8), x1332, 8),
        32515,
        2,
    )?;
    let x1335: BytePoly_4 = bigint_nondet_inv!(ctx, x1334, x6, 4);
    let x1336: BytePoly_8 = bigint_mul!(x1334, x1335, 8);
    let x1337: BytePoly_9 = bigint_nondet_quot!(ctx, x1336, x6, 9);
    let x1338: BytePoly_4 = bigint_nondet_rem!(ctx, x1336, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1337, x6, 13), x1338, 13),
            x1336,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1338, x3, 4), 34, 1)?;
    let x1339: BytePoly_8 = bigint_mul!(x1331, x1335, 8);
    let x1340: BytePoly_9 = bigint_nondet_quot!(ctx, x1339, x6, 9);
    let x1341: BytePoly_4 = bigint_nondet_rem!(ctx, x1339, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1340, x6, 13), x1341, 13),
            x1339,
            13
        ),
        73156,
        4,
    )?;
    let x1342: BytePoly_8 = bigint_mul!(x1341, x1290, 8);
    let x1343: BytePoly_9 = bigint_nondet_quot!(ctx, x1342, x6, 9);
    let x1344: BytePoly_4 = bigint_nondet_rem!(ctx, x1342, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1343, x6, 13), x1344, 13),
            x1342,
            13
        ),
        73156,
        4,
    )?;
    let x1345: BytePoly_4 = bigint_add!(bigint_sub!(x1296, x1344, 4), x6, 4);
    let x1346: BytePoly_4 = bigint_nondet_quot!(ctx, x1345, x6, 4);
    let x1347: BytePoly_4 = bigint_nondet_rem!(ctx, x1345, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1346, x6, 8), x1347, 8), x1345, 8),
        32515,
        2,
    )?;
    let x1348: BytePoly_8 = bigint_mul!(x1341, x1341, 8);
    let x1349: BytePoly_9 = bigint_nondet_quot!(ctx, x1348, x6, 9);
    let x1350: BytePoly_4 = bigint_nondet_rem!(ctx, x1348, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1349, x6, 13), x1350, 13),
            x1348,
            13
        ),
        73156,
        4,
    )?;
    let x1351: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1350, x1290, 4), x6, 4), x1290, 4),
        x6,
        4
    );
    let x1352: BytePoly_4 = bigint_nondet_quot!(ctx, x1351, x6, 4);
    let x1353: BytePoly_4 = bigint_nondet_rem!(ctx, x1351, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1352, x6, 8), x1353, 8), x1351, 8),
        32515,
        2,
    )?;
    let x1354: BytePoly_8 = bigint_mul!(x1341, x1353, 8);
    let x1355: BytePoly_9 = bigint_nondet_quot!(ctx, x1354, x6, 9);
    let x1356: BytePoly_4 = bigint_nondet_rem!(ctx, x1354, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1355, x6, 13), x1356, 13),
            x1354,
            13
        ),
        73156,
        4,
    )?;
    let x1357: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x1356, x1347, 4), 4), x6, 4);
    let x1358: BytePoly_4 = bigint_nondet_quot!(ctx, x1357, x6, 4);
    let x1359: BytePoly_4 = bigint_nondet_rem!(ctx, x1357, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1358, x6, 8), x1359, 8), x1357, 8),
        32515,
        2,
    )?;
    let x1360: BytePoly_1 = bigint_nondet_rem!(ctx, x1298, x2, 1);
    let x1361: BytePoly_5 = bigint_nondet_quot!(ctx, x1298, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1361, x2, 6), x1360, 6), x1298, 6),
        40643,
        4,
    )?;
    let x1362: BytePoly_1 = bigint_sub!(x3, x1360, 1);
    eqz(ctx, &bigint_mul!(x1360, x1362, 2), 8131, 2)?;
    let x1363: BytePoly_4 = bigint_add!(bigint_sub!(x1353, x1323, 4), x6, 4);
    let x1364: BytePoly_4 = bigint_nondet_inv!(ctx, x1363, x6, 4);
    let x1365: BytePoly_8 = bigint_mul!(x1363, x1364, 8);
    let x1366: BytePoly_9 = bigint_nondet_quot!(ctx, x1365, x6, 9);
    let x1367: BytePoly_4 = bigint_nondet_rem!(ctx, x1365, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1366, x6, 13), x1367, 13),
            x1365,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1367, x1, 4), 34, 1)?;
    let x1368: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x1359, x1325, 4), x6, 4), x1364, 8);
    let x1369: BytePoly_9 = bigint_nondet_quot!(ctx, x1368, x6, 9);
    let x1370: BytePoly_4 = bigint_nondet_rem!(ctx, x1368, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1369, x6, 13), x1370, 13),
            x1368,
            13
        ),
        73156,
        4,
    )?;
    let x1371: BytePoly_8 = bigint_add!(bigint_sub!(x1325, bigint_mul!(x1370, x1323, 8), 8), x6, 8);
    let x1372: BytePoly_8 = bigint_nondet_quot!(ctx, x1371, x6, 8);
    let x1373: BytePoly_4 = bigint_nondet_rem!(ctx, x1371, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1372, x6, 12), x1373, 12),
            x1371,
            12
        ),
        65028,
        4,
    )?;
    let x1374: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x1370, x1370, 8), x1323, 8), x6, 8),
            x1353,
            8
        ),
        x6,
        8
    );
    let x1375: BytePoly_9 = bigint_nondet_quot!(ctx, x1374, x6, 9);
    let x1376: BytePoly_4 = bigint_nondet_rem!(ctx, x1374, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1375, x6, 13), x1376, 13),
            x1374,
            13
        ),
        73156,
        4,
    )?;
    let x1377: BytePoly_8 = bigint_mul!(x1370, x1376, 8);
    let x1378: BytePoly_9 = bigint_nondet_quot!(ctx, x1377, x6, 9);
    let x1379: BytePoly_4 = bigint_nondet_rem!(ctx, x1377, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1378, x6, 13), x1379, 13),
            x1377,
            13
        ),
        73156,
        4,
    )?;
    let x1380: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x1379, x1373, 4), 4), x6, 4);
    let x1381: BytePoly_4 = bigint_nondet_quot!(ctx, x1380, x6, 4);
    let x1382: BytePoly_4 = bigint_nondet_rem!(ctx, x1380, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1381, x6, 8), x1382, 8), x1380, 8),
        32515,
        2,
    )?;
    let x1383: BytePoly_5 = bigint_add!(
        bigint_mul!(x1376, x1360, 5),
        bigint_mul!(x1323, x1362, 5),
        5
    );
    let x1384: BytePoly_5 = bigint_add!(
        bigint_mul!(x1382, x1360, 5),
        bigint_mul!(x1325, x1362, 5),
        5
    );
    let x1385: BytePoly_6 = bigint_nondet_quot!(ctx, x1383, x6, 6);
    let x1386: BytePoly_4 = bigint_nondet_rem!(ctx, x1383, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1385, x6, 10), x1386, 10),
            x1383,
            10
        ),
        48771,
        4,
    )?;
    let x1387: BytePoly_6 = bigint_nondet_quot!(ctx, x1384, x6, 6);
    let x1388: BytePoly_4 = bigint_nondet_rem!(ctx, x1384, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1387, x6, 10), x1388, 10),
            x1384,
            10
        ),
        48771,
        4,
    )?;
    let x1389: BytePoly_8 = bigint_mul!(x1353, x1353, 8);
    let x1390: BytePoly_9 = bigint_nondet_quot!(ctx, x1389, x6, 9);
    let x1391: BytePoly_4 = bigint_nondet_rem!(ctx, x1389, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1390, x6, 13), x1391, 13),
            x1389,
            13
        ),
        73156,
        4,
    )?;
    let x1392: BytePoly_5 = bigint_add!(bigint_mul!(x1391, x0, 5), x5, 5);
    let x1393: BytePoly_6 = bigint_nondet_quot!(ctx, x1392, x6, 6);
    let x1394: BytePoly_4 = bigint_nondet_rem!(ctx, x1392, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1393, x6, 10), x1394, 10),
            x1392,
            10
        ),
        48771,
        4,
    )?;
    let x1395: BytePoly_4 = bigint_add!(x1359, x1359, 4);
    let x1396: BytePoly_4 = bigint_nondet_quot!(ctx, x1395, x6, 4);
    let x1397: BytePoly_4 = bigint_nondet_rem!(ctx, x1395, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1396, x6, 8), x1397, 8), x1395, 8),
        32515,
        2,
    )?;
    let x1398: BytePoly_4 = bigint_nondet_inv!(ctx, x1397, x6, 4);
    let x1399: BytePoly_8 = bigint_mul!(x1397, x1398, 8);
    let x1400: BytePoly_9 = bigint_nondet_quot!(ctx, x1399, x6, 9);
    let x1401: BytePoly_4 = bigint_nondet_rem!(ctx, x1399, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1400, x6, 13), x1401, 13),
            x1399,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1401, x3, 4), 34, 1)?;
    let x1402: BytePoly_8 = bigint_mul!(x1394, x1398, 8);
    let x1403: BytePoly_9 = bigint_nondet_quot!(ctx, x1402, x6, 9);
    let x1404: BytePoly_4 = bigint_nondet_rem!(ctx, x1402, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1403, x6, 13), x1404, 13),
            x1402,
            13
        ),
        73156,
        4,
    )?;
    let x1405: BytePoly_8 = bigint_mul!(x1404, x1353, 8);
    let x1406: BytePoly_9 = bigint_nondet_quot!(ctx, x1405, x6, 9);
    let x1407: BytePoly_4 = bigint_nondet_rem!(ctx, x1405, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1406, x6, 13), x1407, 13),
            x1405,
            13
        ),
        73156,
        4,
    )?;
    let x1408: BytePoly_4 = bigint_add!(bigint_sub!(x1359, x1407, 4), x6, 4);
    let x1409: BytePoly_4 = bigint_nondet_quot!(ctx, x1408, x6, 4);
    let x1410: BytePoly_4 = bigint_nondet_rem!(ctx, x1408, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1409, x6, 8), x1410, 8), x1408, 8),
        32515,
        2,
    )?;
    let x1411: BytePoly_8 = bigint_mul!(x1404, x1404, 8);
    let x1412: BytePoly_9 = bigint_nondet_quot!(ctx, x1411, x6, 9);
    let x1413: BytePoly_4 = bigint_nondet_rem!(ctx, x1411, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1412, x6, 13), x1413, 13),
            x1411,
            13
        ),
        73156,
        4,
    )?;
    let x1414: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1413, x1353, 4), x6, 4), x1353, 4),
        x6,
        4
    );
    let x1415: BytePoly_4 = bigint_nondet_quot!(ctx, x1414, x6, 4);
    let x1416: BytePoly_4 = bigint_nondet_rem!(ctx, x1414, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1415, x6, 8), x1416, 8), x1414, 8),
        32515,
        2,
    )?;
    let x1417: BytePoly_8 = bigint_mul!(x1404, x1416, 8);
    let x1418: BytePoly_9 = bigint_nondet_quot!(ctx, x1417, x6, 9);
    let x1419: BytePoly_4 = bigint_nondet_rem!(ctx, x1417, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1418, x6, 13), x1419, 13),
            x1417,
            13
        ),
        73156,
        4,
    )?;
    let x1420: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x1419, x1410, 4), 4), x6, 4);
    let x1421: BytePoly_4 = bigint_nondet_quot!(ctx, x1420, x6, 4);
    let x1422: BytePoly_4 = bigint_nondet_rem!(ctx, x1420, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1421, x6, 8), x1422, 8), x1420, 8),
        32515,
        2,
    )?;
    let x1423: BytePoly_1 = bigint_nondet_rem!(ctx, x1361, x2, 1);
    let x1424: BytePoly_5 = bigint_nondet_quot!(ctx, x1361, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1424, x2, 6), x1423, 6), x1361, 6),
        40643,
        4,
    )?;
    let x1425: BytePoly_1 = bigint_sub!(x3, x1423, 1);
    eqz(ctx, &bigint_mul!(x1423, x1425, 2), 8131, 2)?;
    let x1426: BytePoly_4 = bigint_add!(bigint_sub!(x1416, x1386, 4), x6, 4);
    let x1427: BytePoly_4 = bigint_nondet_inv!(ctx, x1426, x6, 4);
    let x1428: BytePoly_8 = bigint_mul!(x1426, x1427, 8);
    let x1429: BytePoly_9 = bigint_nondet_quot!(ctx, x1428, x6, 9);
    let x1430: BytePoly_4 = bigint_nondet_rem!(ctx, x1428, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1429, x6, 13), x1430, 13),
            x1428,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1430, x1, 4), 34, 1)?;
    let x1431: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x1422, x1388, 4), x6, 4), x1427, 8);
    let x1432: BytePoly_9 = bigint_nondet_quot!(ctx, x1431, x6, 9);
    let x1433: BytePoly_4 = bigint_nondet_rem!(ctx, x1431, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1432, x6, 13), x1433, 13),
            x1431,
            13
        ),
        73156,
        4,
    )?;
    let x1434: BytePoly_8 = bigint_add!(bigint_sub!(x1388, bigint_mul!(x1433, x1386, 8), 8), x6, 8);
    let x1435: BytePoly_8 = bigint_nondet_quot!(ctx, x1434, x6, 8);
    let x1436: BytePoly_4 = bigint_nondet_rem!(ctx, x1434, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1435, x6, 12), x1436, 12),
            x1434,
            12
        ),
        65028,
        4,
    )?;
    let x1437: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x1433, x1433, 8), x1386, 8), x6, 8),
            x1416,
            8
        ),
        x6,
        8
    );
    let x1438: BytePoly_9 = bigint_nondet_quot!(ctx, x1437, x6, 9);
    let x1439: BytePoly_4 = bigint_nondet_rem!(ctx, x1437, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1438, x6, 13), x1439, 13),
            x1437,
            13
        ),
        73156,
        4,
    )?;
    let x1440: BytePoly_8 = bigint_mul!(x1433, x1439, 8);
    let x1441: BytePoly_9 = bigint_nondet_quot!(ctx, x1440, x6, 9);
    let x1442: BytePoly_4 = bigint_nondet_rem!(ctx, x1440, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1441, x6, 13), x1442, 13),
            x1440,
            13
        ),
        73156,
        4,
    )?;
    let x1443: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x1442, x1436, 4), 4), x6, 4);
    let x1444: BytePoly_4 = bigint_nondet_quot!(ctx, x1443, x6, 4);
    let x1445: BytePoly_4 = bigint_nondet_rem!(ctx, x1443, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1444, x6, 8), x1445, 8), x1443, 8),
        32515,
        2,
    )?;
    let x1446: BytePoly_5 = bigint_add!(
        bigint_mul!(x1439, x1423, 5),
        bigint_mul!(x1386, x1425, 5),
        5
    );
    let x1447: BytePoly_5 = bigint_add!(
        bigint_mul!(x1445, x1423, 5),
        bigint_mul!(x1388, x1425, 5),
        5
    );
    let x1448: BytePoly_6 = bigint_nondet_quot!(ctx, x1446, x6, 6);
    let x1449: BytePoly_4 = bigint_nondet_rem!(ctx, x1446, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1448, x6, 10), x1449, 10),
            x1446,
            10
        ),
        48771,
        4,
    )?;
    let x1450: BytePoly_6 = bigint_nondet_quot!(ctx, x1447, x6, 6);
    let x1451: BytePoly_4 = bigint_nondet_rem!(ctx, x1447, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1450, x6, 10), x1451, 10),
            x1447,
            10
        ),
        48771,
        4,
    )?;
    let x1452: BytePoly_8 = bigint_mul!(x1416, x1416, 8);
    let x1453: BytePoly_9 = bigint_nondet_quot!(ctx, x1452, x6, 9);
    let x1454: BytePoly_4 = bigint_nondet_rem!(ctx, x1452, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1453, x6, 13), x1454, 13),
            x1452,
            13
        ),
        73156,
        4,
    )?;
    let x1455: BytePoly_5 = bigint_add!(bigint_mul!(x1454, x0, 5), x5, 5);
    let x1456: BytePoly_6 = bigint_nondet_quot!(ctx, x1455, x6, 6);
    let x1457: BytePoly_4 = bigint_nondet_rem!(ctx, x1455, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1456, x6, 10), x1457, 10),
            x1455,
            10
        ),
        48771,
        4,
    )?;
    let x1458: BytePoly_4 = bigint_add!(x1422, x1422, 4);
    let x1459: BytePoly_4 = bigint_nondet_quot!(ctx, x1458, x6, 4);
    let x1460: BytePoly_4 = bigint_nondet_rem!(ctx, x1458, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1459, x6, 8), x1460, 8), x1458, 8),
        32515,
        2,
    )?;
    let x1461: BytePoly_4 = bigint_nondet_inv!(ctx, x1460, x6, 4);
    let x1462: BytePoly_8 = bigint_mul!(x1460, x1461, 8);
    let x1463: BytePoly_9 = bigint_nondet_quot!(ctx, x1462, x6, 9);
    let x1464: BytePoly_4 = bigint_nondet_rem!(ctx, x1462, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1463, x6, 13), x1464, 13),
            x1462,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1464, x3, 4), 34, 1)?;
    let x1465: BytePoly_8 = bigint_mul!(x1457, x1461, 8);
    let x1466: BytePoly_9 = bigint_nondet_quot!(ctx, x1465, x6, 9);
    let x1467: BytePoly_4 = bigint_nondet_rem!(ctx, x1465, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1466, x6, 13), x1467, 13),
            x1465,
            13
        ),
        73156,
        4,
    )?;
    let x1468: BytePoly_8 = bigint_mul!(x1467, x1416, 8);
    let x1469: BytePoly_9 = bigint_nondet_quot!(ctx, x1468, x6, 9);
    let x1470: BytePoly_4 = bigint_nondet_rem!(ctx, x1468, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1469, x6, 13), x1470, 13),
            x1468,
            13
        ),
        73156,
        4,
    )?;
    let x1471: BytePoly_4 = bigint_add!(bigint_sub!(x1422, x1470, 4), x6, 4);
    let x1472: BytePoly_4 = bigint_nondet_quot!(ctx, x1471, x6, 4);
    let x1473: BytePoly_4 = bigint_nondet_rem!(ctx, x1471, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1472, x6, 8), x1473, 8), x1471, 8),
        32515,
        2,
    )?;
    let x1474: BytePoly_8 = bigint_mul!(x1467, x1467, 8);
    let x1475: BytePoly_9 = bigint_nondet_quot!(ctx, x1474, x6, 9);
    let x1476: BytePoly_4 = bigint_nondet_rem!(ctx, x1474, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1475, x6, 13), x1476, 13),
            x1474,
            13
        ),
        73156,
        4,
    )?;
    let x1477: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1476, x1416, 4), x6, 4), x1416, 4),
        x6,
        4
    );
    let x1478: BytePoly_4 = bigint_nondet_quot!(ctx, x1477, x6, 4);
    let x1479: BytePoly_4 = bigint_nondet_rem!(ctx, x1477, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1478, x6, 8), x1479, 8), x1477, 8),
        32515,
        2,
    )?;
    let x1480: BytePoly_8 = bigint_mul!(x1467, x1479, 8);
    let x1481: BytePoly_9 = bigint_nondet_quot!(ctx, x1480, x6, 9);
    let x1482: BytePoly_4 = bigint_nondet_rem!(ctx, x1480, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1481, x6, 13), x1482, 13),
            x1480,
            13
        ),
        73156,
        4,
    )?;
    let x1483: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x1482, x1473, 4), 4), x6, 4);
    let x1484: BytePoly_4 = bigint_nondet_quot!(ctx, x1483, x6, 4);
    let x1485: BytePoly_4 = bigint_nondet_rem!(ctx, x1483, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1484, x6, 8), x1485, 8), x1483, 8),
        32515,
        2,
    )?;
    let x1486: BytePoly_1 = bigint_nondet_rem!(ctx, x1424, x2, 1);
    let x1487: BytePoly_5 = bigint_nondet_quot!(ctx, x1424, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1487, x2, 6), x1486, 6), x1424, 6),
        40643,
        4,
    )?;
    let x1488: BytePoly_1 = bigint_sub!(x3, x1486, 1);
    eqz(ctx, &bigint_mul!(x1486, x1488, 2), 8131, 2)?;
    let x1489: BytePoly_4 = bigint_add!(bigint_sub!(x1479, x1449, 4), x6, 4);
    let x1490: BytePoly_4 = bigint_nondet_inv!(ctx, x1489, x6, 4);
    let x1491: BytePoly_8 = bigint_mul!(x1489, x1490, 8);
    let x1492: BytePoly_9 = bigint_nondet_quot!(ctx, x1491, x6, 9);
    let x1493: BytePoly_4 = bigint_nondet_rem!(ctx, x1491, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1492, x6, 13), x1493, 13),
            x1491,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1493, x1, 4), 34, 1)?;
    let x1494: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x1485, x1451, 4), x6, 4), x1490, 8);
    let x1495: BytePoly_9 = bigint_nondet_quot!(ctx, x1494, x6, 9);
    let x1496: BytePoly_4 = bigint_nondet_rem!(ctx, x1494, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1495, x6, 13), x1496, 13),
            x1494,
            13
        ),
        73156,
        4,
    )?;
    let x1497: BytePoly_8 = bigint_add!(bigint_sub!(x1451, bigint_mul!(x1496, x1449, 8), 8), x6, 8);
    let x1498: BytePoly_8 = bigint_nondet_quot!(ctx, x1497, x6, 8);
    let x1499: BytePoly_4 = bigint_nondet_rem!(ctx, x1497, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1498, x6, 12), x1499, 12),
            x1497,
            12
        ),
        65028,
        4,
    )?;
    let x1500: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x1496, x1496, 8), x1449, 8), x6, 8),
            x1479,
            8
        ),
        x6,
        8
    );
    let x1501: BytePoly_9 = bigint_nondet_quot!(ctx, x1500, x6, 9);
    let x1502: BytePoly_4 = bigint_nondet_rem!(ctx, x1500, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1501, x6, 13), x1502, 13),
            x1500,
            13
        ),
        73156,
        4,
    )?;
    let x1503: BytePoly_8 = bigint_mul!(x1496, x1502, 8);
    let x1504: BytePoly_9 = bigint_nondet_quot!(ctx, x1503, x6, 9);
    let x1505: BytePoly_4 = bigint_nondet_rem!(ctx, x1503, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1504, x6, 13), x1505, 13),
            x1503,
            13
        ),
        73156,
        4,
    )?;
    let x1506: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x1505, x1499, 4), 4), x6, 4);
    let x1507: BytePoly_4 = bigint_nondet_quot!(ctx, x1506, x6, 4);
    let x1508: BytePoly_4 = bigint_nondet_rem!(ctx, x1506, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1507, x6, 8), x1508, 8), x1506, 8),
        32515,
        2,
    )?;
    let x1509: BytePoly_5 = bigint_add!(
        bigint_mul!(x1502, x1486, 5),
        bigint_mul!(x1449, x1488, 5),
        5
    );
    let x1510: BytePoly_5 = bigint_add!(
        bigint_mul!(x1508, x1486, 5),
        bigint_mul!(x1451, x1488, 5),
        5
    );
    let x1511: BytePoly_6 = bigint_nondet_quot!(ctx, x1509, x6, 6);
    let x1512: BytePoly_4 = bigint_nondet_rem!(ctx, x1509, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1511, x6, 10), x1512, 10),
            x1509,
            10
        ),
        48771,
        4,
    )?;
    let x1513: BytePoly_6 = bigint_nondet_quot!(ctx, x1510, x6, 6);
    let x1514: BytePoly_4 = bigint_nondet_rem!(ctx, x1510, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1513, x6, 10), x1514, 10),
            x1510,
            10
        ),
        48771,
        4,
    )?;
    let x1515: BytePoly_8 = bigint_mul!(x1479, x1479, 8);
    let x1516: BytePoly_9 = bigint_nondet_quot!(ctx, x1515, x6, 9);
    let x1517: BytePoly_4 = bigint_nondet_rem!(ctx, x1515, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1516, x6, 13), x1517, 13),
            x1515,
            13
        ),
        73156,
        4,
    )?;
    let x1518: BytePoly_5 = bigint_add!(bigint_mul!(x1517, x0, 5), x5, 5);
    let x1519: BytePoly_6 = bigint_nondet_quot!(ctx, x1518, x6, 6);
    let x1520: BytePoly_4 = bigint_nondet_rem!(ctx, x1518, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1519, x6, 10), x1520, 10),
            x1518,
            10
        ),
        48771,
        4,
    )?;
    let x1521: BytePoly_4 = bigint_add!(x1485, x1485, 4);
    let x1522: BytePoly_4 = bigint_nondet_quot!(ctx, x1521, x6, 4);
    let x1523: BytePoly_4 = bigint_nondet_rem!(ctx, x1521, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1522, x6, 8), x1523, 8), x1521, 8),
        32515,
        2,
    )?;
    let x1524: BytePoly_4 = bigint_nondet_inv!(ctx, x1523, x6, 4);
    let x1525: BytePoly_8 = bigint_mul!(x1523, x1524, 8);
    let x1526: BytePoly_9 = bigint_nondet_quot!(ctx, x1525, x6, 9);
    let x1527: BytePoly_4 = bigint_nondet_rem!(ctx, x1525, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1526, x6, 13), x1527, 13),
            x1525,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1527, x3, 4), 34, 1)?;
    let x1528: BytePoly_8 = bigint_mul!(x1520, x1524, 8);
    let x1529: BytePoly_9 = bigint_nondet_quot!(ctx, x1528, x6, 9);
    let x1530: BytePoly_4 = bigint_nondet_rem!(ctx, x1528, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1529, x6, 13), x1530, 13),
            x1528,
            13
        ),
        73156,
        4,
    )?;
    let x1531: BytePoly_8 = bigint_mul!(x1530, x1479, 8);
    let x1532: BytePoly_9 = bigint_nondet_quot!(ctx, x1531, x6, 9);
    let x1533: BytePoly_4 = bigint_nondet_rem!(ctx, x1531, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1532, x6, 13), x1533, 13),
            x1531,
            13
        ),
        73156,
        4,
    )?;
    let x1534: BytePoly_4 = bigint_add!(bigint_sub!(x1485, x1533, 4), x6, 4);
    let x1535: BytePoly_4 = bigint_nondet_quot!(ctx, x1534, x6, 4);
    let x1536: BytePoly_4 = bigint_nondet_rem!(ctx, x1534, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1535, x6, 8), x1536, 8), x1534, 8),
        32515,
        2,
    )?;
    let x1537: BytePoly_8 = bigint_mul!(x1530, x1530, 8);
    let x1538: BytePoly_9 = bigint_nondet_quot!(ctx, x1537, x6, 9);
    let x1539: BytePoly_4 = bigint_nondet_rem!(ctx, x1537, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1538, x6, 13), x1539, 13),
            x1537,
            13
        ),
        73156,
        4,
    )?;
    let x1540: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1539, x1479, 4), x6, 4), x1479, 4),
        x6,
        4
    );
    let x1541: BytePoly_4 = bigint_nondet_quot!(ctx, x1540, x6, 4);
    let x1542: BytePoly_4 = bigint_nondet_rem!(ctx, x1540, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1541, x6, 8), x1542, 8), x1540, 8),
        32515,
        2,
    )?;
    let x1543: BytePoly_8 = bigint_mul!(x1530, x1542, 8);
    let x1544: BytePoly_9 = bigint_nondet_quot!(ctx, x1543, x6, 9);
    let x1545: BytePoly_4 = bigint_nondet_rem!(ctx, x1543, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1544, x6, 13), x1545, 13),
            x1543,
            13
        ),
        73156,
        4,
    )?;
    let x1546: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x1545, x1536, 4), 4), x6, 4);
    let x1547: BytePoly_4 = bigint_nondet_quot!(ctx, x1546, x6, 4);
    let x1548: BytePoly_4 = bigint_nondet_rem!(ctx, x1546, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1547, x6, 8), x1548, 8), x1546, 8),
        32515,
        2,
    )?;
    let x1549: BytePoly_1 = bigint_nondet_rem!(ctx, x1487, x2, 1);
    let x1550: BytePoly_5 = bigint_nondet_quot!(ctx, x1487, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1550, x2, 6), x1549, 6), x1487, 6),
        40643,
        4,
    )?;
    let x1551: BytePoly_1 = bigint_sub!(x3, x1549, 1);
    eqz(ctx, &bigint_mul!(x1549, x1551, 2), 8131, 2)?;
    let x1552: BytePoly_4 = bigint_add!(bigint_sub!(x1542, x1512, 4), x6, 4);
    let x1553: BytePoly_4 = bigint_nondet_inv!(ctx, x1552, x6, 4);
    let x1554: BytePoly_8 = bigint_mul!(x1552, x1553, 8);
    let x1555: BytePoly_9 = bigint_nondet_quot!(ctx, x1554, x6, 9);
    let x1556: BytePoly_4 = bigint_nondet_rem!(ctx, x1554, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1555, x6, 13), x1556, 13),
            x1554,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1556, x1, 4), 34, 1)?;
    let x1557: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x1548, x1514, 4), x6, 4), x1553, 8);
    let x1558: BytePoly_9 = bigint_nondet_quot!(ctx, x1557, x6, 9);
    let x1559: BytePoly_4 = bigint_nondet_rem!(ctx, x1557, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1558, x6, 13), x1559, 13),
            x1557,
            13
        ),
        73156,
        4,
    )?;
    let x1560: BytePoly_8 = bigint_add!(bigint_sub!(x1514, bigint_mul!(x1559, x1512, 8), 8), x6, 8);
    let x1561: BytePoly_8 = bigint_nondet_quot!(ctx, x1560, x6, 8);
    let x1562: BytePoly_4 = bigint_nondet_rem!(ctx, x1560, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1561, x6, 12), x1562, 12),
            x1560,
            12
        ),
        65028,
        4,
    )?;
    let x1563: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x1559, x1559, 8), x1512, 8), x6, 8),
            x1542,
            8
        ),
        x6,
        8
    );
    let x1564: BytePoly_9 = bigint_nondet_quot!(ctx, x1563, x6, 9);
    let x1565: BytePoly_4 = bigint_nondet_rem!(ctx, x1563, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1564, x6, 13), x1565, 13),
            x1563,
            13
        ),
        73156,
        4,
    )?;
    let x1566: BytePoly_8 = bigint_mul!(x1559, x1565, 8);
    let x1567: BytePoly_9 = bigint_nondet_quot!(ctx, x1566, x6, 9);
    let x1568: BytePoly_4 = bigint_nondet_rem!(ctx, x1566, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1567, x6, 13), x1568, 13),
            x1566,
            13
        ),
        73156,
        4,
    )?;
    let x1569: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x1568, x1562, 4), 4), x6, 4);
    let x1570: BytePoly_4 = bigint_nondet_quot!(ctx, x1569, x6, 4);
    let x1571: BytePoly_4 = bigint_nondet_rem!(ctx, x1569, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1570, x6, 8), x1571, 8), x1569, 8),
        32515,
        2,
    )?;
    let x1572: BytePoly_5 = bigint_add!(
        bigint_mul!(x1565, x1549, 5),
        bigint_mul!(x1512, x1551, 5),
        5
    );
    let x1573: BytePoly_5 = bigint_add!(
        bigint_mul!(x1571, x1549, 5),
        bigint_mul!(x1514, x1551, 5),
        5
    );
    let x1574: BytePoly_6 = bigint_nondet_quot!(ctx, x1572, x6, 6);
    let x1575: BytePoly_4 = bigint_nondet_rem!(ctx, x1572, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1574, x6, 10), x1575, 10),
            x1572,
            10
        ),
        48771,
        4,
    )?;
    let x1576: BytePoly_6 = bigint_nondet_quot!(ctx, x1573, x6, 6);
    let x1577: BytePoly_4 = bigint_nondet_rem!(ctx, x1573, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1576, x6, 10), x1577, 10),
            x1573,
            10
        ),
        48771,
        4,
    )?;
    let x1578: BytePoly_8 = bigint_mul!(x1542, x1542, 8);
    let x1579: BytePoly_9 = bigint_nondet_quot!(ctx, x1578, x6, 9);
    let x1580: BytePoly_4 = bigint_nondet_rem!(ctx, x1578, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1579, x6, 13), x1580, 13),
            x1578,
            13
        ),
        73156,
        4,
    )?;
    let x1581: BytePoly_5 = bigint_add!(bigint_mul!(x1580, x0, 5), x5, 5);
    let x1582: BytePoly_6 = bigint_nondet_quot!(ctx, x1581, x6, 6);
    let x1583: BytePoly_4 = bigint_nondet_rem!(ctx, x1581, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1582, x6, 10), x1583, 10),
            x1581,
            10
        ),
        48771,
        4,
    )?;
    let x1584: BytePoly_4 = bigint_add!(x1548, x1548, 4);
    let x1585: BytePoly_4 = bigint_nondet_quot!(ctx, x1584, x6, 4);
    let x1586: BytePoly_4 = bigint_nondet_rem!(ctx, x1584, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1585, x6, 8), x1586, 8), x1584, 8),
        32515,
        2,
    )?;
    let x1587: BytePoly_4 = bigint_nondet_inv!(ctx, x1586, x6, 4);
    let x1588: BytePoly_8 = bigint_mul!(x1586, x1587, 8);
    let x1589: BytePoly_9 = bigint_nondet_quot!(ctx, x1588, x6, 9);
    let x1590: BytePoly_4 = bigint_nondet_rem!(ctx, x1588, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1589, x6, 13), x1590, 13),
            x1588,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1590, x3, 4), 34, 1)?;
    let x1591: BytePoly_8 = bigint_mul!(x1583, x1587, 8);
    let x1592: BytePoly_9 = bigint_nondet_quot!(ctx, x1591, x6, 9);
    let x1593: BytePoly_4 = bigint_nondet_rem!(ctx, x1591, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1592, x6, 13), x1593, 13),
            x1591,
            13
        ),
        73156,
        4,
    )?;
    let x1594: BytePoly_8 = bigint_mul!(x1593, x1542, 8);
    let x1595: BytePoly_9 = bigint_nondet_quot!(ctx, x1594, x6, 9);
    let x1596: BytePoly_4 = bigint_nondet_rem!(ctx, x1594, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1595, x6, 13), x1596, 13),
            x1594,
            13
        ),
        73156,
        4,
    )?;
    let x1597: BytePoly_4 = bigint_add!(bigint_sub!(x1548, x1596, 4), x6, 4);
    let x1598: BytePoly_4 = bigint_nondet_quot!(ctx, x1597, x6, 4);
    let x1599: BytePoly_4 = bigint_nondet_rem!(ctx, x1597, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1598, x6, 8), x1599, 8), x1597, 8),
        32515,
        2,
    )?;
    let x1600: BytePoly_8 = bigint_mul!(x1593, x1593, 8);
    let x1601: BytePoly_9 = bigint_nondet_quot!(ctx, x1600, x6, 9);
    let x1602: BytePoly_4 = bigint_nondet_rem!(ctx, x1600, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1601, x6, 13), x1602, 13),
            x1600,
            13
        ),
        73156,
        4,
    )?;
    let x1603: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1602, x1542, 4), x6, 4), x1542, 4),
        x6,
        4
    );
    let x1604: BytePoly_4 = bigint_nondet_quot!(ctx, x1603, x6, 4);
    let x1605: BytePoly_4 = bigint_nondet_rem!(ctx, x1603, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1604, x6, 8), x1605, 8), x1603, 8),
        32515,
        2,
    )?;
    let x1606: BytePoly_8 = bigint_mul!(x1593, x1605, 8);
    let x1607: BytePoly_9 = bigint_nondet_quot!(ctx, x1606, x6, 9);
    let x1608: BytePoly_4 = bigint_nondet_rem!(ctx, x1606, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1607, x6, 13), x1608, 13),
            x1606,
            13
        ),
        73156,
        4,
    )?;
    let x1609: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x1608, x1599, 4), 4), x6, 4);
    let x1610: BytePoly_4 = bigint_nondet_quot!(ctx, x1609, x6, 4);
    let x1611: BytePoly_4 = bigint_nondet_rem!(ctx, x1609, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1610, x6, 8), x1611, 8), x1609, 8),
        32515,
        2,
    )?;
    let x1612: BytePoly_1 = bigint_nondet_rem!(ctx, x1550, x2, 1);
    let x1613: BytePoly_5 = bigint_nondet_quot!(ctx, x1550, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1613, x2, 6), x1612, 6), x1550, 6),
        40643,
        4,
    )?;
    let x1614: BytePoly_1 = bigint_sub!(x3, x1612, 1);
    eqz(ctx, &bigint_mul!(x1612, x1614, 2), 8131, 2)?;
    let x1615: BytePoly_4 = bigint_add!(bigint_sub!(x1605, x1575, 4), x6, 4);
    let x1616: BytePoly_4 = bigint_nondet_inv!(ctx, x1615, x6, 4);
    let x1617: BytePoly_8 = bigint_mul!(x1615, x1616, 8);
    let x1618: BytePoly_9 = bigint_nondet_quot!(ctx, x1617, x6, 9);
    let x1619: BytePoly_4 = bigint_nondet_rem!(ctx, x1617, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1618, x6, 13), x1619, 13),
            x1617,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1619, x1, 4), 34, 1)?;
    let x1620: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x1611, x1577, 4), x6, 4), x1616, 8);
    let x1621: BytePoly_9 = bigint_nondet_quot!(ctx, x1620, x6, 9);
    let x1622: BytePoly_4 = bigint_nondet_rem!(ctx, x1620, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1621, x6, 13), x1622, 13),
            x1620,
            13
        ),
        73156,
        4,
    )?;
    let x1623: BytePoly_8 = bigint_add!(bigint_sub!(x1577, bigint_mul!(x1622, x1575, 8), 8), x6, 8);
    let x1624: BytePoly_8 = bigint_nondet_quot!(ctx, x1623, x6, 8);
    let x1625: BytePoly_4 = bigint_nondet_rem!(ctx, x1623, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1624, x6, 12), x1625, 12),
            x1623,
            12
        ),
        65028,
        4,
    )?;
    let x1626: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x1622, x1622, 8), x1575, 8), x6, 8),
            x1605,
            8
        ),
        x6,
        8
    );
    let x1627: BytePoly_9 = bigint_nondet_quot!(ctx, x1626, x6, 9);
    let x1628: BytePoly_4 = bigint_nondet_rem!(ctx, x1626, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1627, x6, 13), x1628, 13),
            x1626,
            13
        ),
        73156,
        4,
    )?;
    let x1629: BytePoly_8 = bigint_mul!(x1622, x1628, 8);
    let x1630: BytePoly_9 = bigint_nondet_quot!(ctx, x1629, x6, 9);
    let x1631: BytePoly_4 = bigint_nondet_rem!(ctx, x1629, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1630, x6, 13), x1631, 13),
            x1629,
            13
        ),
        73156,
        4,
    )?;
    let x1632: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x1631, x1625, 4), 4), x6, 4);
    let x1633: BytePoly_4 = bigint_nondet_quot!(ctx, x1632, x6, 4);
    let x1634: BytePoly_4 = bigint_nondet_rem!(ctx, x1632, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1633, x6, 8), x1634, 8), x1632, 8),
        32515,
        2,
    )?;
    let x1635: BytePoly_5 = bigint_add!(
        bigint_mul!(x1628, x1612, 5),
        bigint_mul!(x1575, x1614, 5),
        5
    );
    let x1636: BytePoly_5 = bigint_add!(
        bigint_mul!(x1634, x1612, 5),
        bigint_mul!(x1577, x1614, 5),
        5
    );
    let x1637: BytePoly_6 = bigint_nondet_quot!(ctx, x1635, x6, 6);
    let x1638: BytePoly_4 = bigint_nondet_rem!(ctx, x1635, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1637, x6, 10), x1638, 10),
            x1635,
            10
        ),
        48771,
        4,
    )?;
    let x1639: BytePoly_6 = bigint_nondet_quot!(ctx, x1636, x6, 6);
    let x1640: BytePoly_4 = bigint_nondet_rem!(ctx, x1636, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1639, x6, 10), x1640, 10),
            x1636,
            10
        ),
        48771,
        4,
    )?;
    let x1641: BytePoly_8 = bigint_mul!(x1605, x1605, 8);
    let x1642: BytePoly_9 = bigint_nondet_quot!(ctx, x1641, x6, 9);
    let x1643: BytePoly_4 = bigint_nondet_rem!(ctx, x1641, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1642, x6, 13), x1643, 13),
            x1641,
            13
        ),
        73156,
        4,
    )?;
    let x1644: BytePoly_5 = bigint_add!(bigint_mul!(x1643, x0, 5), x5, 5);
    let x1645: BytePoly_6 = bigint_nondet_quot!(ctx, x1644, x6, 6);
    let x1646: BytePoly_4 = bigint_nondet_rem!(ctx, x1644, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1645, x6, 10), x1646, 10),
            x1644,
            10
        ),
        48771,
        4,
    )?;
    let x1647: BytePoly_4 = bigint_add!(x1611, x1611, 4);
    let x1648: BytePoly_4 = bigint_nondet_quot!(ctx, x1647, x6, 4);
    let x1649: BytePoly_4 = bigint_nondet_rem!(ctx, x1647, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1648, x6, 8), x1649, 8), x1647, 8),
        32515,
        2,
    )?;
    let x1650: BytePoly_4 = bigint_nondet_inv!(ctx, x1649, x6, 4);
    let x1651: BytePoly_8 = bigint_mul!(x1649, x1650, 8);
    let x1652: BytePoly_9 = bigint_nondet_quot!(ctx, x1651, x6, 9);
    let x1653: BytePoly_4 = bigint_nondet_rem!(ctx, x1651, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1652, x6, 13), x1653, 13),
            x1651,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1653, x3, 4), 34, 1)?;
    let x1654: BytePoly_8 = bigint_mul!(x1646, x1650, 8);
    let x1655: BytePoly_9 = bigint_nondet_quot!(ctx, x1654, x6, 9);
    let x1656: BytePoly_4 = bigint_nondet_rem!(ctx, x1654, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1655, x6, 13), x1656, 13),
            x1654,
            13
        ),
        73156,
        4,
    )?;
    let x1657: BytePoly_8 = bigint_mul!(x1656, x1605, 8);
    let x1658: BytePoly_9 = bigint_nondet_quot!(ctx, x1657, x6, 9);
    let x1659: BytePoly_4 = bigint_nondet_rem!(ctx, x1657, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1658, x6, 13), x1659, 13),
            x1657,
            13
        ),
        73156,
        4,
    )?;
    let x1660: BytePoly_4 = bigint_add!(bigint_sub!(x1611, x1659, 4), x6, 4);
    let x1661: BytePoly_4 = bigint_nondet_quot!(ctx, x1660, x6, 4);
    let x1662: BytePoly_4 = bigint_nondet_rem!(ctx, x1660, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1661, x6, 8), x1662, 8), x1660, 8),
        32515,
        2,
    )?;
    let x1663: BytePoly_8 = bigint_mul!(x1656, x1656, 8);
    let x1664: BytePoly_9 = bigint_nondet_quot!(ctx, x1663, x6, 9);
    let x1665: BytePoly_4 = bigint_nondet_rem!(ctx, x1663, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1664, x6, 13), x1665, 13),
            x1663,
            13
        ),
        73156,
        4,
    )?;
    let x1666: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1665, x1605, 4), x6, 4), x1605, 4),
        x6,
        4
    );
    let x1667: BytePoly_4 = bigint_nondet_quot!(ctx, x1666, x6, 4);
    let x1668: BytePoly_4 = bigint_nondet_rem!(ctx, x1666, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1667, x6, 8), x1668, 8), x1666, 8),
        32515,
        2,
    )?;
    let x1669: BytePoly_8 = bigint_mul!(x1656, x1668, 8);
    let x1670: BytePoly_9 = bigint_nondet_quot!(ctx, x1669, x6, 9);
    let x1671: BytePoly_4 = bigint_nondet_rem!(ctx, x1669, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1670, x6, 13), x1671, 13),
            x1669,
            13
        ),
        73156,
        4,
    )?;
    let x1672: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x1671, x1662, 4), 4), x6, 4);
    let x1673: BytePoly_4 = bigint_nondet_quot!(ctx, x1672, x6, 4);
    let x1674: BytePoly_4 = bigint_nondet_rem!(ctx, x1672, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1673, x6, 8), x1674, 8), x1672, 8),
        32515,
        2,
    )?;
    let x1675: BytePoly_1 = bigint_nondet_rem!(ctx, x1613, x2, 1);
    let x1676: BytePoly_5 = bigint_nondet_quot!(ctx, x1613, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1676, x2, 6), x1675, 6), x1613, 6),
        40643,
        4,
    )?;
    let x1677: BytePoly_1 = bigint_sub!(x3, x1675, 1);
    eqz(ctx, &bigint_mul!(x1675, x1677, 2), 8131, 2)?;
    let x1678: BytePoly_4 = bigint_add!(bigint_sub!(x1668, x1638, 4), x6, 4);
    let x1679: BytePoly_4 = bigint_nondet_inv!(ctx, x1678, x6, 4);
    let x1680: BytePoly_8 = bigint_mul!(x1678, x1679, 8);
    let x1681: BytePoly_9 = bigint_nondet_quot!(ctx, x1680, x6, 9);
    let x1682: BytePoly_4 = bigint_nondet_rem!(ctx, x1680, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1681, x6, 13), x1682, 13),
            x1680,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1682, x1, 4), 34, 1)?;
    let x1683: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x1674, x1640, 4), x6, 4), x1679, 8);
    let x1684: BytePoly_9 = bigint_nondet_quot!(ctx, x1683, x6, 9);
    let x1685: BytePoly_4 = bigint_nondet_rem!(ctx, x1683, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1684, x6, 13), x1685, 13),
            x1683,
            13
        ),
        73156,
        4,
    )?;
    let x1686: BytePoly_8 = bigint_add!(bigint_sub!(x1640, bigint_mul!(x1685, x1638, 8), 8), x6, 8);
    let x1687: BytePoly_8 = bigint_nondet_quot!(ctx, x1686, x6, 8);
    let x1688: BytePoly_4 = bigint_nondet_rem!(ctx, x1686, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1687, x6, 12), x1688, 12),
            x1686,
            12
        ),
        65028,
        4,
    )?;
    let x1689: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x1685, x1685, 8), x1638, 8), x6, 8),
            x1668,
            8
        ),
        x6,
        8
    );
    let x1690: BytePoly_9 = bigint_nondet_quot!(ctx, x1689, x6, 9);
    let x1691: BytePoly_4 = bigint_nondet_rem!(ctx, x1689, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1690, x6, 13), x1691, 13),
            x1689,
            13
        ),
        73156,
        4,
    )?;
    let x1692: BytePoly_8 = bigint_mul!(x1685, x1691, 8);
    let x1693: BytePoly_9 = bigint_nondet_quot!(ctx, x1692, x6, 9);
    let x1694: BytePoly_4 = bigint_nondet_rem!(ctx, x1692, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1693, x6, 13), x1694, 13),
            x1692,
            13
        ),
        73156,
        4,
    )?;
    let x1695: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x1694, x1688, 4), 4), x6, 4);
    let x1696: BytePoly_4 = bigint_nondet_quot!(ctx, x1695, x6, 4);
    let x1697: BytePoly_4 = bigint_nondet_rem!(ctx, x1695, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1696, x6, 8), x1697, 8), x1695, 8),
        32515,
        2,
    )?;
    let x1698: BytePoly_5 = bigint_add!(
        bigint_mul!(x1691, x1675, 5),
        bigint_mul!(x1638, x1677, 5),
        5
    );
    let x1699: BytePoly_5 = bigint_add!(
        bigint_mul!(x1697, x1675, 5),
        bigint_mul!(x1640, x1677, 5),
        5
    );
    let x1700: BytePoly_6 = bigint_nondet_quot!(ctx, x1698, x6, 6);
    let x1701: BytePoly_4 = bigint_nondet_rem!(ctx, x1698, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1700, x6, 10), x1701, 10),
            x1698,
            10
        ),
        48771,
        4,
    )?;
    let x1702: BytePoly_6 = bigint_nondet_quot!(ctx, x1699, x6, 6);
    let x1703: BytePoly_4 = bigint_nondet_rem!(ctx, x1699, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1702, x6, 10), x1703, 10),
            x1699,
            10
        ),
        48771,
        4,
    )?;
    let x1704: BytePoly_8 = bigint_mul!(x1668, x1668, 8);
    let x1705: BytePoly_9 = bigint_nondet_quot!(ctx, x1704, x6, 9);
    let x1706: BytePoly_4 = bigint_nondet_rem!(ctx, x1704, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1705, x6, 13), x1706, 13),
            x1704,
            13
        ),
        73156,
        4,
    )?;
    let x1707: BytePoly_5 = bigint_add!(bigint_mul!(x1706, x0, 5), x5, 5);
    let x1708: BytePoly_6 = bigint_nondet_quot!(ctx, x1707, x6, 6);
    let x1709: BytePoly_4 = bigint_nondet_rem!(ctx, x1707, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1708, x6, 10), x1709, 10),
            x1707,
            10
        ),
        48771,
        4,
    )?;
    let x1710: BytePoly_4 = bigint_add!(x1674, x1674, 4);
    let x1711: BytePoly_4 = bigint_nondet_quot!(ctx, x1710, x6, 4);
    let x1712: BytePoly_4 = bigint_nondet_rem!(ctx, x1710, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1711, x6, 8), x1712, 8), x1710, 8),
        32515,
        2,
    )?;
    let x1713: BytePoly_4 = bigint_nondet_inv!(ctx, x1712, x6, 4);
    let x1714: BytePoly_8 = bigint_mul!(x1712, x1713, 8);
    let x1715: BytePoly_9 = bigint_nondet_quot!(ctx, x1714, x6, 9);
    let x1716: BytePoly_4 = bigint_nondet_rem!(ctx, x1714, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1715, x6, 13), x1716, 13),
            x1714,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1716, x3, 4), 34, 1)?;
    let x1717: BytePoly_8 = bigint_mul!(x1709, x1713, 8);
    let x1718: BytePoly_9 = bigint_nondet_quot!(ctx, x1717, x6, 9);
    let x1719: BytePoly_4 = bigint_nondet_rem!(ctx, x1717, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1718, x6, 13), x1719, 13),
            x1717,
            13
        ),
        73156,
        4,
    )?;
    let x1720: BytePoly_8 = bigint_mul!(x1719, x1668, 8);
    let x1721: BytePoly_9 = bigint_nondet_quot!(ctx, x1720, x6, 9);
    let x1722: BytePoly_4 = bigint_nondet_rem!(ctx, x1720, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1721, x6, 13), x1722, 13),
            x1720,
            13
        ),
        73156,
        4,
    )?;
    let x1723: BytePoly_4 = bigint_add!(bigint_sub!(x1674, x1722, 4), x6, 4);
    let x1724: BytePoly_4 = bigint_nondet_quot!(ctx, x1723, x6, 4);
    let x1725: BytePoly_4 = bigint_nondet_rem!(ctx, x1723, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1724, x6, 8), x1725, 8), x1723, 8),
        32515,
        2,
    )?;
    let x1726: BytePoly_8 = bigint_mul!(x1719, x1719, 8);
    let x1727: BytePoly_9 = bigint_nondet_quot!(ctx, x1726, x6, 9);
    let x1728: BytePoly_4 = bigint_nondet_rem!(ctx, x1726, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1727, x6, 13), x1728, 13),
            x1726,
            13
        ),
        73156,
        4,
    )?;
    let x1729: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1728, x1668, 4), x6, 4), x1668, 4),
        x6,
        4
    );
    let x1730: BytePoly_4 = bigint_nondet_quot!(ctx, x1729, x6, 4);
    let x1731: BytePoly_4 = bigint_nondet_rem!(ctx, x1729, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1730, x6, 8), x1731, 8), x1729, 8),
        32515,
        2,
    )?;
    let x1732: BytePoly_8 = bigint_mul!(x1719, x1731, 8);
    let x1733: BytePoly_9 = bigint_nondet_quot!(ctx, x1732, x6, 9);
    let x1734: BytePoly_4 = bigint_nondet_rem!(ctx, x1732, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1733, x6, 13), x1734, 13),
            x1732,
            13
        ),
        73156,
        4,
    )?;
    let x1735: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x1734, x1725, 4), 4), x6, 4);
    let x1736: BytePoly_4 = bigint_nondet_quot!(ctx, x1735, x6, 4);
    let x1737: BytePoly_4 = bigint_nondet_rem!(ctx, x1735, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1736, x6, 8), x1737, 8), x1735, 8),
        32515,
        2,
    )?;
    let x1738: BytePoly_1 = bigint_nondet_rem!(ctx, x1676, x2, 1);
    let x1739: BytePoly_5 = bigint_nondet_quot!(ctx, x1676, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1739, x2, 6), x1738, 6), x1676, 6),
        40643,
        4,
    )?;
    let x1740: BytePoly_1 = bigint_sub!(x3, x1738, 1);
    eqz(ctx, &bigint_mul!(x1738, x1740, 2), 8131, 2)?;
    let x1741: BytePoly_4 = bigint_add!(bigint_sub!(x1731, x1701, 4), x6, 4);
    let x1742: BytePoly_4 = bigint_nondet_inv!(ctx, x1741, x6, 4);
    let x1743: BytePoly_8 = bigint_mul!(x1741, x1742, 8);
    let x1744: BytePoly_9 = bigint_nondet_quot!(ctx, x1743, x6, 9);
    let x1745: BytePoly_4 = bigint_nondet_rem!(ctx, x1743, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1744, x6, 13), x1745, 13),
            x1743,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1745, x1, 4), 34, 1)?;
    let x1746: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x1737, x1703, 4), x6, 4), x1742, 8);
    let x1747: BytePoly_9 = bigint_nondet_quot!(ctx, x1746, x6, 9);
    let x1748: BytePoly_4 = bigint_nondet_rem!(ctx, x1746, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1747, x6, 13), x1748, 13),
            x1746,
            13
        ),
        73156,
        4,
    )?;
    let x1749: BytePoly_8 = bigint_add!(bigint_sub!(x1703, bigint_mul!(x1748, x1701, 8), 8), x6, 8);
    let x1750: BytePoly_8 = bigint_nondet_quot!(ctx, x1749, x6, 8);
    let x1751: BytePoly_4 = bigint_nondet_rem!(ctx, x1749, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1750, x6, 12), x1751, 12),
            x1749,
            12
        ),
        65028,
        4,
    )?;
    let x1752: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x1748, x1748, 8), x1701, 8), x6, 8),
            x1731,
            8
        ),
        x6,
        8
    );
    let x1753: BytePoly_9 = bigint_nondet_quot!(ctx, x1752, x6, 9);
    let x1754: BytePoly_4 = bigint_nondet_rem!(ctx, x1752, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1753, x6, 13), x1754, 13),
            x1752,
            13
        ),
        73156,
        4,
    )?;
    let x1755: BytePoly_8 = bigint_mul!(x1748, x1754, 8);
    let x1756: BytePoly_9 = bigint_nondet_quot!(ctx, x1755, x6, 9);
    let x1757: BytePoly_4 = bigint_nondet_rem!(ctx, x1755, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1756, x6, 13), x1757, 13),
            x1755,
            13
        ),
        73156,
        4,
    )?;
    let x1758: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x1757, x1751, 4), 4), x6, 4);
    let x1759: BytePoly_4 = bigint_nondet_quot!(ctx, x1758, x6, 4);
    let x1760: BytePoly_4 = bigint_nondet_rem!(ctx, x1758, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1759, x6, 8), x1760, 8), x1758, 8),
        32515,
        2,
    )?;
    let x1761: BytePoly_5 = bigint_add!(
        bigint_mul!(x1754, x1738, 5),
        bigint_mul!(x1701, x1740, 5),
        5
    );
    let x1762: BytePoly_5 = bigint_add!(
        bigint_mul!(x1760, x1738, 5),
        bigint_mul!(x1703, x1740, 5),
        5
    );
    let x1763: BytePoly_6 = bigint_nondet_quot!(ctx, x1761, x6, 6);
    let x1764: BytePoly_4 = bigint_nondet_rem!(ctx, x1761, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1763, x6, 10), x1764, 10),
            x1761,
            10
        ),
        48771,
        4,
    )?;
    let x1765: BytePoly_6 = bigint_nondet_quot!(ctx, x1762, x6, 6);
    let x1766: BytePoly_4 = bigint_nondet_rem!(ctx, x1762, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1765, x6, 10), x1766, 10),
            x1762,
            10
        ),
        48771,
        4,
    )?;
    let x1767: BytePoly_8 = bigint_mul!(x1731, x1731, 8);
    let x1768: BytePoly_9 = bigint_nondet_quot!(ctx, x1767, x6, 9);
    let x1769: BytePoly_4 = bigint_nondet_rem!(ctx, x1767, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1768, x6, 13), x1769, 13),
            x1767,
            13
        ),
        73156,
        4,
    )?;
    let x1770: BytePoly_5 = bigint_add!(bigint_mul!(x1769, x0, 5), x5, 5);
    let x1771: BytePoly_6 = bigint_nondet_quot!(ctx, x1770, x6, 6);
    let x1772: BytePoly_4 = bigint_nondet_rem!(ctx, x1770, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1771, x6, 10), x1772, 10),
            x1770,
            10
        ),
        48771,
        4,
    )?;
    let x1773: BytePoly_4 = bigint_add!(x1737, x1737, 4);
    let x1774: BytePoly_4 = bigint_nondet_quot!(ctx, x1773, x6, 4);
    let x1775: BytePoly_4 = bigint_nondet_rem!(ctx, x1773, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1774, x6, 8), x1775, 8), x1773, 8),
        32515,
        2,
    )?;
    let x1776: BytePoly_4 = bigint_nondet_inv!(ctx, x1775, x6, 4);
    let x1777: BytePoly_8 = bigint_mul!(x1775, x1776, 8);
    let x1778: BytePoly_9 = bigint_nondet_quot!(ctx, x1777, x6, 9);
    let x1779: BytePoly_4 = bigint_nondet_rem!(ctx, x1777, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1778, x6, 13), x1779, 13),
            x1777,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1779, x3, 4), 34, 1)?;
    let x1780: BytePoly_8 = bigint_mul!(x1772, x1776, 8);
    let x1781: BytePoly_9 = bigint_nondet_quot!(ctx, x1780, x6, 9);
    let x1782: BytePoly_4 = bigint_nondet_rem!(ctx, x1780, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1781, x6, 13), x1782, 13),
            x1780,
            13
        ),
        73156,
        4,
    )?;
    let x1783: BytePoly_8 = bigint_mul!(x1782, x1731, 8);
    let x1784: BytePoly_9 = bigint_nondet_quot!(ctx, x1783, x6, 9);
    let x1785: BytePoly_4 = bigint_nondet_rem!(ctx, x1783, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1784, x6, 13), x1785, 13),
            x1783,
            13
        ),
        73156,
        4,
    )?;
    let x1786: BytePoly_4 = bigint_add!(bigint_sub!(x1737, x1785, 4), x6, 4);
    let x1787: BytePoly_4 = bigint_nondet_quot!(ctx, x1786, x6, 4);
    let x1788: BytePoly_4 = bigint_nondet_rem!(ctx, x1786, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1787, x6, 8), x1788, 8), x1786, 8),
        32515,
        2,
    )?;
    let x1789: BytePoly_8 = bigint_mul!(x1782, x1782, 8);
    let x1790: BytePoly_9 = bigint_nondet_quot!(ctx, x1789, x6, 9);
    let x1791: BytePoly_4 = bigint_nondet_rem!(ctx, x1789, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1790, x6, 13), x1791, 13),
            x1789,
            13
        ),
        73156,
        4,
    )?;
    let x1792: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1791, x1731, 4), x6, 4), x1731, 4),
        x6,
        4
    );
    let x1793: BytePoly_4 = bigint_nondet_quot!(ctx, x1792, x6, 4);
    let x1794: BytePoly_4 = bigint_nondet_rem!(ctx, x1792, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1793, x6, 8), x1794, 8), x1792, 8),
        32515,
        2,
    )?;
    let x1795: BytePoly_8 = bigint_mul!(x1782, x1794, 8);
    let x1796: BytePoly_9 = bigint_nondet_quot!(ctx, x1795, x6, 9);
    let x1797: BytePoly_4 = bigint_nondet_rem!(ctx, x1795, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1796, x6, 13), x1797, 13),
            x1795,
            13
        ),
        73156,
        4,
    )?;
    let x1798: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x1797, x1788, 4), 4), x6, 4);
    let x1799: BytePoly_4 = bigint_nondet_quot!(ctx, x1798, x6, 4);
    let x1800: BytePoly_4 = bigint_nondet_rem!(ctx, x1798, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1799, x6, 8), x1800, 8), x1798, 8),
        32515,
        2,
    )?;
    let x1801: BytePoly_1 = bigint_nondet_rem!(ctx, x1739, x2, 1);
    let x1802: BytePoly_5 = bigint_nondet_quot!(ctx, x1739, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1802, x2, 6), x1801, 6), x1739, 6),
        40643,
        4,
    )?;
    let x1803: BytePoly_1 = bigint_sub!(x3, x1801, 1);
    eqz(ctx, &bigint_mul!(x1801, x1803, 2), 8131, 2)?;
    let x1804: BytePoly_4 = bigint_add!(bigint_sub!(x1794, x1764, 4), x6, 4);
    let x1805: BytePoly_4 = bigint_nondet_inv!(ctx, x1804, x6, 4);
    let x1806: BytePoly_8 = bigint_mul!(x1804, x1805, 8);
    let x1807: BytePoly_9 = bigint_nondet_quot!(ctx, x1806, x6, 9);
    let x1808: BytePoly_4 = bigint_nondet_rem!(ctx, x1806, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1807, x6, 13), x1808, 13),
            x1806,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1808, x1, 4), 34, 1)?;
    let x1809: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x1800, x1766, 4), x6, 4), x1805, 8);
    let x1810: BytePoly_9 = bigint_nondet_quot!(ctx, x1809, x6, 9);
    let x1811: BytePoly_4 = bigint_nondet_rem!(ctx, x1809, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1810, x6, 13), x1811, 13),
            x1809,
            13
        ),
        73156,
        4,
    )?;
    let x1812: BytePoly_8 = bigint_add!(bigint_sub!(x1766, bigint_mul!(x1811, x1764, 8), 8), x6, 8);
    let x1813: BytePoly_8 = bigint_nondet_quot!(ctx, x1812, x6, 8);
    let x1814: BytePoly_4 = bigint_nondet_rem!(ctx, x1812, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1813, x6, 12), x1814, 12),
            x1812,
            12
        ),
        65028,
        4,
    )?;
    let x1815: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x1811, x1811, 8), x1764, 8), x6, 8),
            x1794,
            8
        ),
        x6,
        8
    );
    let x1816: BytePoly_9 = bigint_nondet_quot!(ctx, x1815, x6, 9);
    let x1817: BytePoly_4 = bigint_nondet_rem!(ctx, x1815, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1816, x6, 13), x1817, 13),
            x1815,
            13
        ),
        73156,
        4,
    )?;
    let x1818: BytePoly_8 = bigint_mul!(x1811, x1817, 8);
    let x1819: BytePoly_9 = bigint_nondet_quot!(ctx, x1818, x6, 9);
    let x1820: BytePoly_4 = bigint_nondet_rem!(ctx, x1818, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1819, x6, 13), x1820, 13),
            x1818,
            13
        ),
        73156,
        4,
    )?;
    let x1821: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x1820, x1814, 4), 4), x6, 4);
    let x1822: BytePoly_4 = bigint_nondet_quot!(ctx, x1821, x6, 4);
    let x1823: BytePoly_4 = bigint_nondet_rem!(ctx, x1821, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1822, x6, 8), x1823, 8), x1821, 8),
        32515,
        2,
    )?;
    let x1824: BytePoly_5 = bigint_add!(
        bigint_mul!(x1817, x1801, 5),
        bigint_mul!(x1764, x1803, 5),
        5
    );
    let x1825: BytePoly_5 = bigint_add!(
        bigint_mul!(x1823, x1801, 5),
        bigint_mul!(x1766, x1803, 5),
        5
    );
    let x1826: BytePoly_6 = bigint_nondet_quot!(ctx, x1824, x6, 6);
    let x1827: BytePoly_4 = bigint_nondet_rem!(ctx, x1824, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1826, x6, 10), x1827, 10),
            x1824,
            10
        ),
        48771,
        4,
    )?;
    let x1828: BytePoly_6 = bigint_nondet_quot!(ctx, x1825, x6, 6);
    let x1829: BytePoly_4 = bigint_nondet_rem!(ctx, x1825, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1828, x6, 10), x1829, 10),
            x1825,
            10
        ),
        48771,
        4,
    )?;
    let x1830: BytePoly_8 = bigint_mul!(x1794, x1794, 8);
    let x1831: BytePoly_9 = bigint_nondet_quot!(ctx, x1830, x6, 9);
    let x1832: BytePoly_4 = bigint_nondet_rem!(ctx, x1830, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1831, x6, 13), x1832, 13),
            x1830,
            13
        ),
        73156,
        4,
    )?;
    let x1833: BytePoly_5 = bigint_add!(bigint_mul!(x1832, x0, 5), x5, 5);
    let x1834: BytePoly_6 = bigint_nondet_quot!(ctx, x1833, x6, 6);
    let x1835: BytePoly_4 = bigint_nondet_rem!(ctx, x1833, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1834, x6, 10), x1835, 10),
            x1833,
            10
        ),
        48771,
        4,
    )?;
    let x1836: BytePoly_4 = bigint_add!(x1800, x1800, 4);
    let x1837: BytePoly_4 = bigint_nondet_quot!(ctx, x1836, x6, 4);
    let x1838: BytePoly_4 = bigint_nondet_rem!(ctx, x1836, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1837, x6, 8), x1838, 8), x1836, 8),
        32515,
        2,
    )?;
    let x1839: BytePoly_4 = bigint_nondet_inv!(ctx, x1838, x6, 4);
    let x1840: BytePoly_8 = bigint_mul!(x1838, x1839, 8);
    let x1841: BytePoly_9 = bigint_nondet_quot!(ctx, x1840, x6, 9);
    let x1842: BytePoly_4 = bigint_nondet_rem!(ctx, x1840, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1841, x6, 13), x1842, 13),
            x1840,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1842, x3, 4), 34, 1)?;
    let x1843: BytePoly_8 = bigint_mul!(x1835, x1839, 8);
    let x1844: BytePoly_9 = bigint_nondet_quot!(ctx, x1843, x6, 9);
    let x1845: BytePoly_4 = bigint_nondet_rem!(ctx, x1843, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1844, x6, 13), x1845, 13),
            x1843,
            13
        ),
        73156,
        4,
    )?;
    let x1846: BytePoly_8 = bigint_mul!(x1845, x1794, 8);
    let x1847: BytePoly_9 = bigint_nondet_quot!(ctx, x1846, x6, 9);
    let x1848: BytePoly_4 = bigint_nondet_rem!(ctx, x1846, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1847, x6, 13), x1848, 13),
            x1846,
            13
        ),
        73156,
        4,
    )?;
    let x1849: BytePoly_4 = bigint_add!(bigint_sub!(x1800, x1848, 4), x6, 4);
    let x1850: BytePoly_4 = bigint_nondet_quot!(ctx, x1849, x6, 4);
    let x1851: BytePoly_4 = bigint_nondet_rem!(ctx, x1849, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1850, x6, 8), x1851, 8), x1849, 8),
        32515,
        2,
    )?;
    let x1852: BytePoly_8 = bigint_mul!(x1845, x1845, 8);
    let x1853: BytePoly_9 = bigint_nondet_quot!(ctx, x1852, x6, 9);
    let x1854: BytePoly_4 = bigint_nondet_rem!(ctx, x1852, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1853, x6, 13), x1854, 13),
            x1852,
            13
        ),
        73156,
        4,
    )?;
    let x1855: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1854, x1794, 4), x6, 4), x1794, 4),
        x6,
        4
    );
    let x1856: BytePoly_4 = bigint_nondet_quot!(ctx, x1855, x6, 4);
    let x1857: BytePoly_4 = bigint_nondet_rem!(ctx, x1855, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1856, x6, 8), x1857, 8), x1855, 8),
        32515,
        2,
    )?;
    let x1858: BytePoly_8 = bigint_mul!(x1845, x1857, 8);
    let x1859: BytePoly_9 = bigint_nondet_quot!(ctx, x1858, x6, 9);
    let x1860: BytePoly_4 = bigint_nondet_rem!(ctx, x1858, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1859, x6, 13), x1860, 13),
            x1858,
            13
        ),
        73156,
        4,
    )?;
    let x1861: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x1860, x1851, 4), 4), x6, 4);
    let x1862: BytePoly_4 = bigint_nondet_quot!(ctx, x1861, x6, 4);
    let x1863: BytePoly_4 = bigint_nondet_rem!(ctx, x1861, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1862, x6, 8), x1863, 8), x1861, 8),
        32515,
        2,
    )?;
    let x1864: BytePoly_1 = bigint_nondet_rem!(ctx, x1802, x2, 1);
    let x1865: BytePoly_5 = bigint_nondet_quot!(ctx, x1802, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1865, x2, 6), x1864, 6), x1802, 6),
        40643,
        4,
    )?;
    let x1866: BytePoly_1 = bigint_sub!(x3, x1864, 1);
    eqz(ctx, &bigint_mul!(x1864, x1866, 2), 8131, 2)?;
    let x1867: BytePoly_4 = bigint_add!(bigint_sub!(x1857, x1827, 4), x6, 4);
    let x1868: BytePoly_4 = bigint_nondet_inv!(ctx, x1867, x6, 4);
    let x1869: BytePoly_8 = bigint_mul!(x1867, x1868, 8);
    let x1870: BytePoly_9 = bigint_nondet_quot!(ctx, x1869, x6, 9);
    let x1871: BytePoly_4 = bigint_nondet_rem!(ctx, x1869, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1870, x6, 13), x1871, 13),
            x1869,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1871, x1, 4), 34, 1)?;
    let x1872: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x1863, x1829, 4), x6, 4), x1868, 8);
    let x1873: BytePoly_9 = bigint_nondet_quot!(ctx, x1872, x6, 9);
    let x1874: BytePoly_4 = bigint_nondet_rem!(ctx, x1872, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1873, x6, 13), x1874, 13),
            x1872,
            13
        ),
        73156,
        4,
    )?;
    let x1875: BytePoly_8 = bigint_add!(bigint_sub!(x1829, bigint_mul!(x1874, x1827, 8), 8), x6, 8);
    let x1876: BytePoly_8 = bigint_nondet_quot!(ctx, x1875, x6, 8);
    let x1877: BytePoly_4 = bigint_nondet_rem!(ctx, x1875, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1876, x6, 12), x1877, 12),
            x1875,
            12
        ),
        65028,
        4,
    )?;
    let x1878: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x1874, x1874, 8), x1827, 8), x6, 8),
            x1857,
            8
        ),
        x6,
        8
    );
    let x1879: BytePoly_9 = bigint_nondet_quot!(ctx, x1878, x6, 9);
    let x1880: BytePoly_4 = bigint_nondet_rem!(ctx, x1878, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1879, x6, 13), x1880, 13),
            x1878,
            13
        ),
        73156,
        4,
    )?;
    let x1881: BytePoly_8 = bigint_mul!(x1874, x1880, 8);
    let x1882: BytePoly_9 = bigint_nondet_quot!(ctx, x1881, x6, 9);
    let x1883: BytePoly_4 = bigint_nondet_rem!(ctx, x1881, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1882, x6, 13), x1883, 13),
            x1881,
            13
        ),
        73156,
        4,
    )?;
    let x1884: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x1883, x1877, 4), 4), x6, 4);
    let x1885: BytePoly_4 = bigint_nondet_quot!(ctx, x1884, x6, 4);
    let x1886: BytePoly_4 = bigint_nondet_rem!(ctx, x1884, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1885, x6, 8), x1886, 8), x1884, 8),
        32515,
        2,
    )?;
    let x1887: BytePoly_5 = bigint_add!(
        bigint_mul!(x1880, x1864, 5),
        bigint_mul!(x1827, x1866, 5),
        5
    );
    let x1888: BytePoly_5 = bigint_add!(
        bigint_mul!(x1886, x1864, 5),
        bigint_mul!(x1829, x1866, 5),
        5
    );
    let x1889: BytePoly_6 = bigint_nondet_quot!(ctx, x1887, x6, 6);
    let x1890: BytePoly_4 = bigint_nondet_rem!(ctx, x1887, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1889, x6, 10), x1890, 10),
            x1887,
            10
        ),
        48771,
        4,
    )?;
    let x1891: BytePoly_6 = bigint_nondet_quot!(ctx, x1888, x6, 6);
    let x1892: BytePoly_4 = bigint_nondet_rem!(ctx, x1888, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1891, x6, 10), x1892, 10),
            x1888,
            10
        ),
        48771,
        4,
    )?;
    let x1893: BytePoly_8 = bigint_mul!(x1857, x1857, 8);
    let x1894: BytePoly_9 = bigint_nondet_quot!(ctx, x1893, x6, 9);
    let x1895: BytePoly_4 = bigint_nondet_rem!(ctx, x1893, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1894, x6, 13), x1895, 13),
            x1893,
            13
        ),
        73156,
        4,
    )?;
    let x1896: BytePoly_5 = bigint_add!(bigint_mul!(x1895, x0, 5), x5, 5);
    let x1897: BytePoly_6 = bigint_nondet_quot!(ctx, x1896, x6, 6);
    let x1898: BytePoly_4 = bigint_nondet_rem!(ctx, x1896, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1897, x6, 10), x1898, 10),
            x1896,
            10
        ),
        48771,
        4,
    )?;
    let x1899: BytePoly_4 = bigint_add!(x1863, x1863, 4);
    let x1900: BytePoly_4 = bigint_nondet_quot!(ctx, x1899, x6, 4);
    let x1901: BytePoly_4 = bigint_nondet_rem!(ctx, x1899, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1900, x6, 8), x1901, 8), x1899, 8),
        32515,
        2,
    )?;
    let x1902: BytePoly_4 = bigint_nondet_inv!(ctx, x1901, x6, 4);
    let x1903: BytePoly_8 = bigint_mul!(x1901, x1902, 8);
    let x1904: BytePoly_9 = bigint_nondet_quot!(ctx, x1903, x6, 9);
    let x1905: BytePoly_4 = bigint_nondet_rem!(ctx, x1903, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1904, x6, 13), x1905, 13),
            x1903,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1905, x3, 4), 34, 1)?;
    let x1906: BytePoly_8 = bigint_mul!(x1898, x1902, 8);
    let x1907: BytePoly_9 = bigint_nondet_quot!(ctx, x1906, x6, 9);
    let x1908: BytePoly_4 = bigint_nondet_rem!(ctx, x1906, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1907, x6, 13), x1908, 13),
            x1906,
            13
        ),
        73156,
        4,
    )?;
    let x1909: BytePoly_8 = bigint_mul!(x1908, x1857, 8);
    let x1910: BytePoly_9 = bigint_nondet_quot!(ctx, x1909, x6, 9);
    let x1911: BytePoly_4 = bigint_nondet_rem!(ctx, x1909, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1910, x6, 13), x1911, 13),
            x1909,
            13
        ),
        73156,
        4,
    )?;
    let x1912: BytePoly_4 = bigint_add!(bigint_sub!(x1863, x1911, 4), x6, 4);
    let x1913: BytePoly_4 = bigint_nondet_quot!(ctx, x1912, x6, 4);
    let x1914: BytePoly_4 = bigint_nondet_rem!(ctx, x1912, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1913, x6, 8), x1914, 8), x1912, 8),
        32515,
        2,
    )?;
    let x1915: BytePoly_8 = bigint_mul!(x1908, x1908, 8);
    let x1916: BytePoly_9 = bigint_nondet_quot!(ctx, x1915, x6, 9);
    let x1917: BytePoly_4 = bigint_nondet_rem!(ctx, x1915, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1916, x6, 13), x1917, 13),
            x1915,
            13
        ),
        73156,
        4,
    )?;
    let x1918: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1917, x1857, 4), x6, 4), x1857, 4),
        x6,
        4
    );
    let x1919: BytePoly_4 = bigint_nondet_quot!(ctx, x1918, x6, 4);
    let x1920: BytePoly_4 = bigint_nondet_rem!(ctx, x1918, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1919, x6, 8), x1920, 8), x1918, 8),
        32515,
        2,
    )?;
    let x1921: BytePoly_8 = bigint_mul!(x1908, x1920, 8);
    let x1922: BytePoly_9 = bigint_nondet_quot!(ctx, x1921, x6, 9);
    let x1923: BytePoly_4 = bigint_nondet_rem!(ctx, x1921, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1922, x6, 13), x1923, 13),
            x1921,
            13
        ),
        73156,
        4,
    )?;
    let x1924: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x1923, x1914, 4), 4), x6, 4);
    let x1925: BytePoly_4 = bigint_nondet_quot!(ctx, x1924, x6, 4);
    let x1926: BytePoly_4 = bigint_nondet_rem!(ctx, x1924, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1925, x6, 8), x1926, 8), x1924, 8),
        32515,
        2,
    )?;
    let x1927: BytePoly_1 = bigint_nondet_rem!(ctx, x1865, x2, 1);
    let x1928: BytePoly_5 = bigint_nondet_quot!(ctx, x1865, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1928, x2, 6), x1927, 6), x1865, 6),
        40643,
        4,
    )?;
    let x1929: BytePoly_1 = bigint_sub!(x3, x1927, 1);
    eqz(ctx, &bigint_mul!(x1927, x1929, 2), 8131, 2)?;
    let x1930: BytePoly_4 = bigint_add!(bigint_sub!(x1920, x1890, 4), x6, 4);
    let x1931: BytePoly_4 = bigint_nondet_inv!(ctx, x1930, x6, 4);
    let x1932: BytePoly_8 = bigint_mul!(x1930, x1931, 8);
    let x1933: BytePoly_9 = bigint_nondet_quot!(ctx, x1932, x6, 9);
    let x1934: BytePoly_4 = bigint_nondet_rem!(ctx, x1932, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1933, x6, 13), x1934, 13),
            x1932,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1934, x1, 4), 34, 1)?;
    let x1935: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x1926, x1892, 4), x6, 4), x1931, 8);
    let x1936: BytePoly_9 = bigint_nondet_quot!(ctx, x1935, x6, 9);
    let x1937: BytePoly_4 = bigint_nondet_rem!(ctx, x1935, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1936, x6, 13), x1937, 13),
            x1935,
            13
        ),
        73156,
        4,
    )?;
    let x1938: BytePoly_8 = bigint_add!(bigint_sub!(x1892, bigint_mul!(x1937, x1890, 8), 8), x6, 8);
    let x1939: BytePoly_8 = bigint_nondet_quot!(ctx, x1938, x6, 8);
    let x1940: BytePoly_4 = bigint_nondet_rem!(ctx, x1938, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1939, x6, 12), x1940, 12),
            x1938,
            12
        ),
        65028,
        4,
    )?;
    let x1941: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x1937, x1937, 8), x1890, 8), x6, 8),
            x1920,
            8
        ),
        x6,
        8
    );
    let x1942: BytePoly_9 = bigint_nondet_quot!(ctx, x1941, x6, 9);
    let x1943: BytePoly_4 = bigint_nondet_rem!(ctx, x1941, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1942, x6, 13), x1943, 13),
            x1941,
            13
        ),
        73156,
        4,
    )?;
    let x1944: BytePoly_8 = bigint_mul!(x1937, x1943, 8);
    let x1945: BytePoly_9 = bigint_nondet_quot!(ctx, x1944, x6, 9);
    let x1946: BytePoly_4 = bigint_nondet_rem!(ctx, x1944, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1945, x6, 13), x1946, 13),
            x1944,
            13
        ),
        73156,
        4,
    )?;
    let x1947: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x1946, x1940, 4), 4), x6, 4);
    let x1948: BytePoly_4 = bigint_nondet_quot!(ctx, x1947, x6, 4);
    let x1949: BytePoly_4 = bigint_nondet_rem!(ctx, x1947, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1948, x6, 8), x1949, 8), x1947, 8),
        32515,
        2,
    )?;
    let x1950: BytePoly_5 = bigint_add!(
        bigint_mul!(x1943, x1927, 5),
        bigint_mul!(x1890, x1929, 5),
        5
    );
    let x1951: BytePoly_5 = bigint_add!(
        bigint_mul!(x1949, x1927, 5),
        bigint_mul!(x1892, x1929, 5),
        5
    );
    let x1952: BytePoly_6 = bigint_nondet_quot!(ctx, x1950, x6, 6);
    let x1953: BytePoly_4 = bigint_nondet_rem!(ctx, x1950, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1952, x6, 10), x1953, 10),
            x1950,
            10
        ),
        48771,
        4,
    )?;
    let x1954: BytePoly_6 = bigint_nondet_quot!(ctx, x1951, x6, 6);
    let x1955: BytePoly_4 = bigint_nondet_rem!(ctx, x1951, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1954, x6, 10), x1955, 10),
            x1951,
            10
        ),
        48771,
        4,
    )?;
    let x1956: BytePoly_8 = bigint_mul!(x1920, x1920, 8);
    let x1957: BytePoly_9 = bigint_nondet_quot!(ctx, x1956, x6, 9);
    let x1958: BytePoly_4 = bigint_nondet_rem!(ctx, x1956, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1957, x6, 13), x1958, 13),
            x1956,
            13
        ),
        73156,
        4,
    )?;
    let x1959: BytePoly_5 = bigint_add!(bigint_mul!(x1958, x0, 5), x5, 5);
    let x1960: BytePoly_6 = bigint_nondet_quot!(ctx, x1959, x6, 6);
    let x1961: BytePoly_4 = bigint_nondet_rem!(ctx, x1959, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1960, x6, 10), x1961, 10),
            x1959,
            10
        ),
        48771,
        4,
    )?;
    let x1962: BytePoly_4 = bigint_add!(x1926, x1926, 4);
    let x1963: BytePoly_4 = bigint_nondet_quot!(ctx, x1962, x6, 4);
    let x1964: BytePoly_4 = bigint_nondet_rem!(ctx, x1962, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1963, x6, 8), x1964, 8), x1962, 8),
        32515,
        2,
    )?;
    let x1965: BytePoly_4 = bigint_nondet_inv!(ctx, x1964, x6, 4);
    let x1966: BytePoly_8 = bigint_mul!(x1964, x1965, 8);
    let x1967: BytePoly_9 = bigint_nondet_quot!(ctx, x1966, x6, 9);
    let x1968: BytePoly_4 = bigint_nondet_rem!(ctx, x1966, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1967, x6, 13), x1968, 13),
            x1966,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1968, x3, 4), 34, 1)?;
    let x1969: BytePoly_8 = bigint_mul!(x1961, x1965, 8);
    let x1970: BytePoly_9 = bigint_nondet_quot!(ctx, x1969, x6, 9);
    let x1971: BytePoly_4 = bigint_nondet_rem!(ctx, x1969, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1970, x6, 13), x1971, 13),
            x1969,
            13
        ),
        73156,
        4,
    )?;
    let x1972: BytePoly_8 = bigint_mul!(x1971, x1920, 8);
    let x1973: BytePoly_9 = bigint_nondet_quot!(ctx, x1972, x6, 9);
    let x1974: BytePoly_4 = bigint_nondet_rem!(ctx, x1972, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1973, x6, 13), x1974, 13),
            x1972,
            13
        ),
        73156,
        4,
    )?;
    let x1975: BytePoly_4 = bigint_add!(bigint_sub!(x1926, x1974, 4), x6, 4);
    let x1976: BytePoly_4 = bigint_nondet_quot!(ctx, x1975, x6, 4);
    let x1977: BytePoly_4 = bigint_nondet_rem!(ctx, x1975, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1976, x6, 8), x1977, 8), x1975, 8),
        32515,
        2,
    )?;
    let x1978: BytePoly_8 = bigint_mul!(x1971, x1971, 8);
    let x1979: BytePoly_9 = bigint_nondet_quot!(ctx, x1978, x6, 9);
    let x1980: BytePoly_4 = bigint_nondet_rem!(ctx, x1978, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1979, x6, 13), x1980, 13),
            x1978,
            13
        ),
        73156,
        4,
    )?;
    let x1981: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1980, x1920, 4), x6, 4), x1920, 4),
        x6,
        4
    );
    let x1982: BytePoly_4 = bigint_nondet_quot!(ctx, x1981, x6, 4);
    let x1983: BytePoly_4 = bigint_nondet_rem!(ctx, x1981, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1982, x6, 8), x1983, 8), x1981, 8),
        32515,
        2,
    )?;
    let x1984: BytePoly_8 = bigint_mul!(x1971, x1983, 8);
    let x1985: BytePoly_9 = bigint_nondet_quot!(ctx, x1984, x6, 9);
    let x1986: BytePoly_4 = bigint_nondet_rem!(ctx, x1984, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1985, x6, 13), x1986, 13),
            x1984,
            13
        ),
        73156,
        4,
    )?;
    let x1987: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x1986, x1977, 4), 4), x6, 4);
    let x1988: BytePoly_4 = bigint_nondet_quot!(ctx, x1987, x6, 4);
    let x1989: BytePoly_4 = bigint_nondet_rem!(ctx, x1987, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1988, x6, 8), x1989, 8), x1987, 8),
        32515,
        2,
    )?;
    let x1990: BytePoly_1 = bigint_nondet_rem!(ctx, x1928, x2, 1);
    let x1991: BytePoly_5 = bigint_nondet_quot!(ctx, x1928, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1991, x2, 6), x1990, 6), x1928, 6),
        40643,
        4,
    )?;
    let x1992: BytePoly_1 = bigint_sub!(x3, x1990, 1);
    eqz(ctx, &bigint_mul!(x1990, x1992, 2), 8131, 2)?;
    let x1993: BytePoly_4 = bigint_add!(bigint_sub!(x1983, x1953, 4), x6, 4);
    let x1994: BytePoly_4 = bigint_nondet_inv!(ctx, x1993, x6, 4);
    let x1995: BytePoly_8 = bigint_mul!(x1993, x1994, 8);
    let x1996: BytePoly_9 = bigint_nondet_quot!(ctx, x1995, x6, 9);
    let x1997: BytePoly_4 = bigint_nondet_rem!(ctx, x1995, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1996, x6, 13), x1997, 13),
            x1995,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1997, x1, 4), 34, 1)?;
    let x1998: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x1989, x1955, 4), x6, 4), x1994, 8);
    let x1999: BytePoly_9 = bigint_nondet_quot!(ctx, x1998, x6, 9);
    let x2000: BytePoly_4 = bigint_nondet_rem!(ctx, x1998, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1999, x6, 13), x2000, 13),
            x1998,
            13
        ),
        73156,
        4,
    )?;
    let x2001: BytePoly_8 = bigint_add!(bigint_sub!(x1955, bigint_mul!(x2000, x1953, 8), 8), x6, 8);
    let x2002: BytePoly_8 = bigint_nondet_quot!(ctx, x2001, x6, 8);
    let x2003: BytePoly_4 = bigint_nondet_rem!(ctx, x2001, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2002, x6, 12), x2003, 12),
            x2001,
            12
        ),
        65028,
        4,
    )?;
    let x2004: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x2000, x2000, 8), x1953, 8), x6, 8),
            x1983,
            8
        ),
        x6,
        8
    );
    let x2005: BytePoly_9 = bigint_nondet_quot!(ctx, x2004, x6, 9);
    let x2006: BytePoly_4 = bigint_nondet_rem!(ctx, x2004, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2005, x6, 13), x2006, 13),
            x2004,
            13
        ),
        73156,
        4,
    )?;
    let x2007: BytePoly_8 = bigint_mul!(x2000, x2006, 8);
    let x2008: BytePoly_9 = bigint_nondet_quot!(ctx, x2007, x6, 9);
    let x2009: BytePoly_4 = bigint_nondet_rem!(ctx, x2007, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2008, x6, 13), x2009, 13),
            x2007,
            13
        ),
        73156,
        4,
    )?;
    let x2010: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x2009, x2003, 4), 4), x6, 4);
    let x2011: BytePoly_4 = bigint_nondet_quot!(ctx, x2010, x6, 4);
    let x2012: BytePoly_4 = bigint_nondet_rem!(ctx, x2010, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2011, x6, 8), x2012, 8), x2010, 8),
        32515,
        2,
    )?;
    let x2013: BytePoly_5 = bigint_add!(
        bigint_mul!(x2006, x1990, 5),
        bigint_mul!(x1953, x1992, 5),
        5
    );
    let x2014: BytePoly_5 = bigint_add!(
        bigint_mul!(x2012, x1990, 5),
        bigint_mul!(x1955, x1992, 5),
        5
    );
    let x2015: BytePoly_6 = bigint_nondet_quot!(ctx, x2013, x6, 6);
    let x2016: BytePoly_4 = bigint_nondet_rem!(ctx, x2013, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2015, x6, 10), x2016, 10),
            x2013,
            10
        ),
        48771,
        4,
    )?;
    let x2017: BytePoly_6 = bigint_nondet_quot!(ctx, x2014, x6, 6);
    let x2018: BytePoly_4 = bigint_nondet_rem!(ctx, x2014, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2017, x6, 10), x2018, 10),
            x2014,
            10
        ),
        48771,
        4,
    )?;
    let x2019: BytePoly_8 = bigint_mul!(x1983, x1983, 8);
    let x2020: BytePoly_9 = bigint_nondet_quot!(ctx, x2019, x6, 9);
    let x2021: BytePoly_4 = bigint_nondet_rem!(ctx, x2019, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2020, x6, 13), x2021, 13),
            x2019,
            13
        ),
        73156,
        4,
    )?;
    let x2022: BytePoly_5 = bigint_add!(bigint_mul!(x2021, x0, 5), x5, 5);
    let x2023: BytePoly_6 = bigint_nondet_quot!(ctx, x2022, x6, 6);
    let x2024: BytePoly_4 = bigint_nondet_rem!(ctx, x2022, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2023, x6, 10), x2024, 10),
            x2022,
            10
        ),
        48771,
        4,
    )?;
    let x2025: BytePoly_4 = bigint_add!(x1989, x1989, 4);
    let x2026: BytePoly_4 = bigint_nondet_quot!(ctx, x2025, x6, 4);
    let x2027: BytePoly_4 = bigint_nondet_rem!(ctx, x2025, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2026, x6, 8), x2027, 8), x2025, 8),
        32515,
        2,
    )?;
    let x2028: BytePoly_4 = bigint_nondet_inv!(ctx, x2027, x6, 4);
    let x2029: BytePoly_8 = bigint_mul!(x2027, x2028, 8);
    let x2030: BytePoly_9 = bigint_nondet_quot!(ctx, x2029, x6, 9);
    let x2031: BytePoly_4 = bigint_nondet_rem!(ctx, x2029, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2030, x6, 13), x2031, 13),
            x2029,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x2031, x3, 4), 34, 1)?;
    let x2032: BytePoly_8 = bigint_mul!(x2024, x2028, 8);
    let x2033: BytePoly_9 = bigint_nondet_quot!(ctx, x2032, x6, 9);
    let x2034: BytePoly_4 = bigint_nondet_rem!(ctx, x2032, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2033, x6, 13), x2034, 13),
            x2032,
            13
        ),
        73156,
        4,
    )?;
    let x2035: BytePoly_8 = bigint_mul!(x2034, x1983, 8);
    let x2036: BytePoly_9 = bigint_nondet_quot!(ctx, x2035, x6, 9);
    let x2037: BytePoly_4 = bigint_nondet_rem!(ctx, x2035, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2036, x6, 13), x2037, 13),
            x2035,
            13
        ),
        73156,
        4,
    )?;
    let x2038: BytePoly_4 = bigint_add!(bigint_sub!(x1989, x2037, 4), x6, 4);
    let x2039: BytePoly_4 = bigint_nondet_quot!(ctx, x2038, x6, 4);
    let x2040: BytePoly_4 = bigint_nondet_rem!(ctx, x2038, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2039, x6, 8), x2040, 8), x2038, 8),
        32515,
        2,
    )?;
    let x2041: BytePoly_8 = bigint_mul!(x2034, x2034, 8);
    let x2042: BytePoly_9 = bigint_nondet_quot!(ctx, x2041, x6, 9);
    let x2043: BytePoly_4 = bigint_nondet_rem!(ctx, x2041, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2042, x6, 13), x2043, 13),
            x2041,
            13
        ),
        73156,
        4,
    )?;
    let x2044: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2043, x1983, 4), x6, 4), x1983, 4),
        x6,
        4
    );
    let x2045: BytePoly_4 = bigint_nondet_quot!(ctx, x2044, x6, 4);
    let x2046: BytePoly_4 = bigint_nondet_rem!(ctx, x2044, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2045, x6, 8), x2046, 8), x2044, 8),
        32515,
        2,
    )?;
    let x2047: BytePoly_8 = bigint_mul!(x2034, x2046, 8);
    let x2048: BytePoly_9 = bigint_nondet_quot!(ctx, x2047, x6, 9);
    let x2049: BytePoly_4 = bigint_nondet_rem!(ctx, x2047, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2048, x6, 13), x2049, 13),
            x2047,
            13
        ),
        73156,
        4,
    )?;
    let x2050: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x2049, x2040, 4), 4), x6, 4);
    let x2051: BytePoly_4 = bigint_nondet_quot!(ctx, x2050, x6, 4);
    let x2052: BytePoly_4 = bigint_nondet_rem!(ctx, x2050, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2051, x6, 8), x2052, 8), x2050, 8),
        32515,
        2,
    )?;
    let x2053: BytePoly_1 = bigint_nondet_rem!(ctx, x1991, x2, 1);
    let x2054: BytePoly_5 = bigint_nondet_quot!(ctx, x1991, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2054, x2, 6), x2053, 6), x1991, 6),
        40643,
        4,
    )?;
    let x2055: BytePoly_1 = bigint_sub!(x3, x2053, 1);
    eqz(ctx, &bigint_mul!(x2053, x2055, 2), 8131, 2)?;
    let x2056: BytePoly_4 = bigint_add!(bigint_sub!(x2046, x2016, 4), x6, 4);
    let x2057: BytePoly_4 = bigint_nondet_inv!(ctx, x2056, x6, 4);
    let x2058: BytePoly_8 = bigint_mul!(x2056, x2057, 8);
    let x2059: BytePoly_9 = bigint_nondet_quot!(ctx, x2058, x6, 9);
    let x2060: BytePoly_4 = bigint_nondet_rem!(ctx, x2058, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2059, x6, 13), x2060, 13),
            x2058,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x2060, x1, 4), 34, 1)?;
    let x2061: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x2052, x2018, 4), x6, 4), x2057, 8);
    let x2062: BytePoly_9 = bigint_nondet_quot!(ctx, x2061, x6, 9);
    let x2063: BytePoly_4 = bigint_nondet_rem!(ctx, x2061, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2062, x6, 13), x2063, 13),
            x2061,
            13
        ),
        73156,
        4,
    )?;
    let x2064: BytePoly_8 = bigint_add!(bigint_sub!(x2018, bigint_mul!(x2063, x2016, 8), 8), x6, 8);
    let x2065: BytePoly_8 = bigint_nondet_quot!(ctx, x2064, x6, 8);
    let x2066: BytePoly_4 = bigint_nondet_rem!(ctx, x2064, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2065, x6, 12), x2066, 12),
            x2064,
            12
        ),
        65028,
        4,
    )?;
    let x2067: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x2063, x2063, 8), x2016, 8), x6, 8),
            x2046,
            8
        ),
        x6,
        8
    );
    let x2068: BytePoly_9 = bigint_nondet_quot!(ctx, x2067, x6, 9);
    let x2069: BytePoly_4 = bigint_nondet_rem!(ctx, x2067, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2068, x6, 13), x2069, 13),
            x2067,
            13
        ),
        73156,
        4,
    )?;
    let x2070: BytePoly_8 = bigint_mul!(x2063, x2069, 8);
    let x2071: BytePoly_9 = bigint_nondet_quot!(ctx, x2070, x6, 9);
    let x2072: BytePoly_4 = bigint_nondet_rem!(ctx, x2070, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2071, x6, 13), x2072, 13),
            x2070,
            13
        ),
        73156,
        4,
    )?;
    let x2073: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x2072, x2066, 4), 4), x6, 4);
    let x2074: BytePoly_4 = bigint_nondet_quot!(ctx, x2073, x6, 4);
    let x2075: BytePoly_4 = bigint_nondet_rem!(ctx, x2073, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2074, x6, 8), x2075, 8), x2073, 8),
        32515,
        2,
    )?;
    let x2076: BytePoly_5 = bigint_add!(
        bigint_mul!(x2069, x2053, 5),
        bigint_mul!(x2016, x2055, 5),
        5
    );
    let x2077: BytePoly_5 = bigint_add!(
        bigint_mul!(x2075, x2053, 5),
        bigint_mul!(x2018, x2055, 5),
        5
    );
    let x2078: BytePoly_6 = bigint_nondet_quot!(ctx, x2076, x6, 6);
    let x2079: BytePoly_4 = bigint_nondet_rem!(ctx, x2076, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2078, x6, 10), x2079, 10),
            x2076,
            10
        ),
        48771,
        4,
    )?;
    let x2080: BytePoly_6 = bigint_nondet_quot!(ctx, x2077, x6, 6);
    let x2081: BytePoly_4 = bigint_nondet_rem!(ctx, x2077, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2080, x6, 10), x2081, 10),
            x2077,
            10
        ),
        48771,
        4,
    )?;
    let x2082: BytePoly_8 = bigint_mul!(x2046, x2046, 8);
    let x2083: BytePoly_9 = bigint_nondet_quot!(ctx, x2082, x6, 9);
    let x2084: BytePoly_4 = bigint_nondet_rem!(ctx, x2082, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2083, x6, 13), x2084, 13),
            x2082,
            13
        ),
        73156,
        4,
    )?;
    let x2085: BytePoly_5 = bigint_add!(bigint_mul!(x2084, x0, 5), x5, 5);
    let x2086: BytePoly_6 = bigint_nondet_quot!(ctx, x2085, x6, 6);
    let x2087: BytePoly_4 = bigint_nondet_rem!(ctx, x2085, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2086, x6, 10), x2087, 10),
            x2085,
            10
        ),
        48771,
        4,
    )?;
    let x2088: BytePoly_4 = bigint_add!(x2052, x2052, 4);
    let x2089: BytePoly_4 = bigint_nondet_quot!(ctx, x2088, x6, 4);
    let x2090: BytePoly_4 = bigint_nondet_rem!(ctx, x2088, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2089, x6, 8), x2090, 8), x2088, 8),
        32515,
        2,
    )?;
    let x2091: BytePoly_4 = bigint_nondet_inv!(ctx, x2090, x6, 4);
    let x2092: BytePoly_8 = bigint_mul!(x2090, x2091, 8);
    let x2093: BytePoly_9 = bigint_nondet_quot!(ctx, x2092, x6, 9);
    let x2094: BytePoly_4 = bigint_nondet_rem!(ctx, x2092, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2093, x6, 13), x2094, 13),
            x2092,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x2094, x3, 4), 34, 1)?;
    let x2095: BytePoly_8 = bigint_mul!(x2087, x2091, 8);
    let x2096: BytePoly_9 = bigint_nondet_quot!(ctx, x2095, x6, 9);
    let x2097: BytePoly_4 = bigint_nondet_rem!(ctx, x2095, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2096, x6, 13), x2097, 13),
            x2095,
            13
        ),
        73156,
        4,
    )?;
    let x2098: BytePoly_8 = bigint_mul!(x2097, x2046, 8);
    let x2099: BytePoly_9 = bigint_nondet_quot!(ctx, x2098, x6, 9);
    let x2100: BytePoly_4 = bigint_nondet_rem!(ctx, x2098, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2099, x6, 13), x2100, 13),
            x2098,
            13
        ),
        73156,
        4,
    )?;
    let x2101: BytePoly_4 = bigint_add!(bigint_sub!(x2052, x2100, 4), x6, 4);
    let x2102: BytePoly_4 = bigint_nondet_quot!(ctx, x2101, x6, 4);
    let x2103: BytePoly_4 = bigint_nondet_rem!(ctx, x2101, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2102, x6, 8), x2103, 8), x2101, 8),
        32515,
        2,
    )?;
    let x2104: BytePoly_8 = bigint_mul!(x2097, x2097, 8);
    let x2105: BytePoly_9 = bigint_nondet_quot!(ctx, x2104, x6, 9);
    let x2106: BytePoly_4 = bigint_nondet_rem!(ctx, x2104, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2105, x6, 13), x2106, 13),
            x2104,
            13
        ),
        73156,
        4,
    )?;
    let x2107: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2106, x2046, 4), x6, 4), x2046, 4),
        x6,
        4
    );
    let x2108: BytePoly_4 = bigint_nondet_quot!(ctx, x2107, x6, 4);
    let x2109: BytePoly_4 = bigint_nondet_rem!(ctx, x2107, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2108, x6, 8), x2109, 8), x2107, 8),
        32515,
        2,
    )?;
    let x2110: BytePoly_8 = bigint_mul!(x2097, x2109, 8);
    let x2111: BytePoly_9 = bigint_nondet_quot!(ctx, x2110, x6, 9);
    let x2112: BytePoly_4 = bigint_nondet_rem!(ctx, x2110, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2111, x6, 13), x2112, 13),
            x2110,
            13
        ),
        73156,
        4,
    )?;
    let x2113: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x2112, x2103, 4), 4), x6, 4);
    let x2114: BytePoly_4 = bigint_nondet_quot!(ctx, x2113, x6, 4);
    let x2115: BytePoly_4 = bigint_nondet_rem!(ctx, x2113, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2114, x6, 8), x2115, 8), x2113, 8),
        32515,
        2,
    )?;
    let x2116: BytePoly_1 = bigint_nondet_rem!(ctx, x2054, x2, 1);
    let x2117: BytePoly_5 = bigint_nondet_quot!(ctx, x2054, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2117, x2, 6), x2116, 6), x2054, 6),
        40643,
        4,
    )?;
    let x2118: BytePoly_1 = bigint_sub!(x3, x2116, 1);
    eqz(ctx, &bigint_mul!(x2116, x2118, 2), 8131, 2)?;
    let x2119: BytePoly_4 = bigint_add!(bigint_sub!(x2109, x2079, 4), x6, 4);
    let x2120: BytePoly_4 = bigint_nondet_inv!(ctx, x2119, x6, 4);
    let x2121: BytePoly_8 = bigint_mul!(x2119, x2120, 8);
    let x2122: BytePoly_9 = bigint_nondet_quot!(ctx, x2121, x6, 9);
    let x2123: BytePoly_4 = bigint_nondet_rem!(ctx, x2121, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2122, x6, 13), x2123, 13),
            x2121,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x2123, x1, 4), 34, 1)?;
    let x2124: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x2115, x2081, 4), x6, 4), x2120, 8);
    let x2125: BytePoly_9 = bigint_nondet_quot!(ctx, x2124, x6, 9);
    let x2126: BytePoly_4 = bigint_nondet_rem!(ctx, x2124, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2125, x6, 13), x2126, 13),
            x2124,
            13
        ),
        73156,
        4,
    )?;
    let x2127: BytePoly_8 = bigint_add!(bigint_sub!(x2081, bigint_mul!(x2126, x2079, 8), 8), x6, 8);
    let x2128: BytePoly_8 = bigint_nondet_quot!(ctx, x2127, x6, 8);
    let x2129: BytePoly_4 = bigint_nondet_rem!(ctx, x2127, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2128, x6, 12), x2129, 12),
            x2127,
            12
        ),
        65028,
        4,
    )?;
    let x2130: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x2126, x2126, 8), x2079, 8), x6, 8),
            x2109,
            8
        ),
        x6,
        8
    );
    let x2131: BytePoly_9 = bigint_nondet_quot!(ctx, x2130, x6, 9);
    let x2132: BytePoly_4 = bigint_nondet_rem!(ctx, x2130, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2131, x6, 13), x2132, 13),
            x2130,
            13
        ),
        73156,
        4,
    )?;
    let x2133: BytePoly_8 = bigint_mul!(x2126, x2132, 8);
    let x2134: BytePoly_9 = bigint_nondet_quot!(ctx, x2133, x6, 9);
    let x2135: BytePoly_4 = bigint_nondet_rem!(ctx, x2133, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2134, x6, 13), x2135, 13),
            x2133,
            13
        ),
        73156,
        4,
    )?;
    let x2136: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x2135, x2129, 4), 4), x6, 4);
    let x2137: BytePoly_4 = bigint_nondet_quot!(ctx, x2136, x6, 4);
    let x2138: BytePoly_4 = bigint_nondet_rem!(ctx, x2136, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2137, x6, 8), x2138, 8), x2136, 8),
        32515,
        2,
    )?;
    let x2139: BytePoly_5 = bigint_add!(
        bigint_mul!(x2132, x2116, 5),
        bigint_mul!(x2079, x2118, 5),
        5
    );
    let x2140: BytePoly_5 = bigint_add!(
        bigint_mul!(x2138, x2116, 5),
        bigint_mul!(x2081, x2118, 5),
        5
    );
    let x2141: BytePoly_6 = bigint_nondet_quot!(ctx, x2139, x6, 6);
    let x2142: BytePoly_4 = bigint_nondet_rem!(ctx, x2139, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2141, x6, 10), x2142, 10),
            x2139,
            10
        ),
        48771,
        4,
    )?;
    let x2143: BytePoly_6 = bigint_nondet_quot!(ctx, x2140, x6, 6);
    let x2144: BytePoly_4 = bigint_nondet_rem!(ctx, x2140, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2143, x6, 10), x2144, 10),
            x2140,
            10
        ),
        48771,
        4,
    )?;
    let x2145: BytePoly_8 = bigint_mul!(x2109, x2109, 8);
    let x2146: BytePoly_9 = bigint_nondet_quot!(ctx, x2145, x6, 9);
    let x2147: BytePoly_4 = bigint_nondet_rem!(ctx, x2145, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2146, x6, 13), x2147, 13),
            x2145,
            13
        ),
        73156,
        4,
    )?;
    let x2148: BytePoly_5 = bigint_add!(bigint_mul!(x2147, x0, 5), x5, 5);
    let x2149: BytePoly_6 = bigint_nondet_quot!(ctx, x2148, x6, 6);
    let x2150: BytePoly_4 = bigint_nondet_rem!(ctx, x2148, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2149, x6, 10), x2150, 10),
            x2148,
            10
        ),
        48771,
        4,
    )?;
    let x2151: BytePoly_4 = bigint_add!(x2115, x2115, 4);
    let x2152: BytePoly_4 = bigint_nondet_quot!(ctx, x2151, x6, 4);
    let x2153: BytePoly_4 = bigint_nondet_rem!(ctx, x2151, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2152, x6, 8), x2153, 8), x2151, 8),
        32515,
        2,
    )?;
    let x2154: BytePoly_4 = bigint_nondet_inv!(ctx, x2153, x6, 4);
    let x2155: BytePoly_8 = bigint_mul!(x2153, x2154, 8);
    let x2156: BytePoly_9 = bigint_nondet_quot!(ctx, x2155, x6, 9);
    let x2157: BytePoly_4 = bigint_nondet_rem!(ctx, x2155, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2156, x6, 13), x2157, 13),
            x2155,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x2157, x3, 4), 34, 1)?;
    let x2158: BytePoly_8 = bigint_mul!(x2150, x2154, 8);
    let x2159: BytePoly_9 = bigint_nondet_quot!(ctx, x2158, x6, 9);
    let x2160: BytePoly_4 = bigint_nondet_rem!(ctx, x2158, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2159, x6, 13), x2160, 13),
            x2158,
            13
        ),
        73156,
        4,
    )?;
    let x2161: BytePoly_8 = bigint_mul!(x2160, x2109, 8);
    let x2162: BytePoly_9 = bigint_nondet_quot!(ctx, x2161, x6, 9);
    let x2163: BytePoly_4 = bigint_nondet_rem!(ctx, x2161, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2162, x6, 13), x2163, 13),
            x2161,
            13
        ),
        73156,
        4,
    )?;
    let x2164: BytePoly_4 = bigint_add!(bigint_sub!(x2115, x2163, 4), x6, 4);
    let x2165: BytePoly_4 = bigint_nondet_quot!(ctx, x2164, x6, 4);
    let x2166: BytePoly_4 = bigint_nondet_rem!(ctx, x2164, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2165, x6, 8), x2166, 8), x2164, 8),
        32515,
        2,
    )?;
    let x2167: BytePoly_8 = bigint_mul!(x2160, x2160, 8);
    let x2168: BytePoly_9 = bigint_nondet_quot!(ctx, x2167, x6, 9);
    let x2169: BytePoly_4 = bigint_nondet_rem!(ctx, x2167, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2168, x6, 13), x2169, 13),
            x2167,
            13
        ),
        73156,
        4,
    )?;
    let x2170: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2169, x2109, 4), x6, 4), x2109, 4),
        x6,
        4
    );
    let x2171: BytePoly_4 = bigint_nondet_quot!(ctx, x2170, x6, 4);
    let x2172: BytePoly_4 = bigint_nondet_rem!(ctx, x2170, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2171, x6, 8), x2172, 8), x2170, 8),
        32515,
        2,
    )?;
    let x2173: BytePoly_8 = bigint_mul!(x2160, x2172, 8);
    let x2174: BytePoly_9 = bigint_nondet_quot!(ctx, x2173, x6, 9);
    let x2175: BytePoly_4 = bigint_nondet_rem!(ctx, x2173, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2174, x6, 13), x2175, 13),
            x2173,
            13
        ),
        73156,
        4,
    )?;
    let x2176: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x2175, x2166, 4), 4), x6, 4);
    let x2177: BytePoly_4 = bigint_nondet_quot!(ctx, x2176, x6, 4);
    let x2178: BytePoly_4 = bigint_nondet_rem!(ctx, x2176, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2177, x6, 8), x2178, 8), x2176, 8),
        32515,
        2,
    )?;
    let x2179: BytePoly_1 = bigint_nondet_rem!(ctx, x2117, x2, 1);
    let x2180: BytePoly_5 = bigint_nondet_quot!(ctx, x2117, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2180, x2, 6), x2179, 6), x2117, 6),
        40643,
        4,
    )?;
    let x2181: BytePoly_1 = bigint_sub!(x3, x2179, 1);
    eqz(ctx, &bigint_mul!(x2179, x2181, 2), 8131, 2)?;
    let x2182: BytePoly_4 = bigint_add!(bigint_sub!(x2172, x2142, 4), x6, 4);
    let x2183: BytePoly_4 = bigint_nondet_inv!(ctx, x2182, x6, 4);
    let x2184: BytePoly_8 = bigint_mul!(x2182, x2183, 8);
    let x2185: BytePoly_9 = bigint_nondet_quot!(ctx, x2184, x6, 9);
    let x2186: BytePoly_4 = bigint_nondet_rem!(ctx, x2184, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2185, x6, 13), x2186, 13),
            x2184,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x2186, x1, 4), 34, 1)?;
    let x2187: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x2178, x2144, 4), x6, 4), x2183, 8);
    let x2188: BytePoly_9 = bigint_nondet_quot!(ctx, x2187, x6, 9);
    let x2189: BytePoly_4 = bigint_nondet_rem!(ctx, x2187, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2188, x6, 13), x2189, 13),
            x2187,
            13
        ),
        73156,
        4,
    )?;
    let x2190: BytePoly_8 = bigint_add!(bigint_sub!(x2144, bigint_mul!(x2189, x2142, 8), 8), x6, 8);
    let x2191: BytePoly_8 = bigint_nondet_quot!(ctx, x2190, x6, 8);
    let x2192: BytePoly_4 = bigint_nondet_rem!(ctx, x2190, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2191, x6, 12), x2192, 12),
            x2190,
            12
        ),
        65028,
        4,
    )?;
    let x2193: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x2189, x2189, 8), x2142, 8), x6, 8),
            x2172,
            8
        ),
        x6,
        8
    );
    let x2194: BytePoly_9 = bigint_nondet_quot!(ctx, x2193, x6, 9);
    let x2195: BytePoly_4 = bigint_nondet_rem!(ctx, x2193, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2194, x6, 13), x2195, 13),
            x2193,
            13
        ),
        73156,
        4,
    )?;
    let x2196: BytePoly_8 = bigint_mul!(x2189, x2195, 8);
    let x2197: BytePoly_9 = bigint_nondet_quot!(ctx, x2196, x6, 9);
    let x2198: BytePoly_4 = bigint_nondet_rem!(ctx, x2196, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2197, x6, 13), x2198, 13),
            x2196,
            13
        ),
        73156,
        4,
    )?;
    let x2199: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x2198, x2192, 4), 4), x6, 4);
    let x2200: BytePoly_4 = bigint_nondet_quot!(ctx, x2199, x6, 4);
    let x2201: BytePoly_4 = bigint_nondet_rem!(ctx, x2199, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2200, x6, 8), x2201, 8), x2199, 8),
        32515,
        2,
    )?;
    let x2202: BytePoly_5 = bigint_add!(
        bigint_mul!(x2195, x2179, 5),
        bigint_mul!(x2142, x2181, 5),
        5
    );
    let x2203: BytePoly_5 = bigint_add!(
        bigint_mul!(x2201, x2179, 5),
        bigint_mul!(x2144, x2181, 5),
        5
    );
    let x2204: BytePoly_6 = bigint_nondet_quot!(ctx, x2202, x6, 6);
    let x2205: BytePoly_4 = bigint_nondet_rem!(ctx, x2202, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2204, x6, 10), x2205, 10),
            x2202,
            10
        ),
        48771,
        4,
    )?;
    let x2206: BytePoly_6 = bigint_nondet_quot!(ctx, x2203, x6, 6);
    let x2207: BytePoly_4 = bigint_nondet_rem!(ctx, x2203, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2206, x6, 10), x2207, 10),
            x2203,
            10
        ),
        48771,
        4,
    )?;
    let x2208: BytePoly_8 = bigint_mul!(x2172, x2172, 8);
    let x2209: BytePoly_9 = bigint_nondet_quot!(ctx, x2208, x6, 9);
    let x2210: BytePoly_4 = bigint_nondet_rem!(ctx, x2208, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2209, x6, 13), x2210, 13),
            x2208,
            13
        ),
        73156,
        4,
    )?;
    let x2211: BytePoly_5 = bigint_add!(bigint_mul!(x2210, x0, 5), x5, 5);
    let x2212: BytePoly_6 = bigint_nondet_quot!(ctx, x2211, x6, 6);
    let x2213: BytePoly_4 = bigint_nondet_rem!(ctx, x2211, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2212, x6, 10), x2213, 10),
            x2211,
            10
        ),
        48771,
        4,
    )?;
    let x2214: BytePoly_4 = bigint_add!(x2178, x2178, 4);
    let x2215: BytePoly_4 = bigint_nondet_quot!(ctx, x2214, x6, 4);
    let x2216: BytePoly_4 = bigint_nondet_rem!(ctx, x2214, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2215, x6, 8), x2216, 8), x2214, 8),
        32515,
        2,
    )?;
    let x2217: BytePoly_4 = bigint_nondet_inv!(ctx, x2216, x6, 4);
    let x2218: BytePoly_8 = bigint_mul!(x2216, x2217, 8);
    let x2219: BytePoly_9 = bigint_nondet_quot!(ctx, x2218, x6, 9);
    let x2220: BytePoly_4 = bigint_nondet_rem!(ctx, x2218, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2219, x6, 13), x2220, 13),
            x2218,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x2220, x3, 4), 34, 1)?;
    let x2221: BytePoly_8 = bigint_mul!(x2213, x2217, 8);
    let x2222: BytePoly_9 = bigint_nondet_quot!(ctx, x2221, x6, 9);
    let x2223: BytePoly_4 = bigint_nondet_rem!(ctx, x2221, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2222, x6, 13), x2223, 13),
            x2221,
            13
        ),
        73156,
        4,
    )?;
    let x2224: BytePoly_8 = bigint_mul!(x2223, x2172, 8);
    let x2225: BytePoly_9 = bigint_nondet_quot!(ctx, x2224, x6, 9);
    let x2226: BytePoly_4 = bigint_nondet_rem!(ctx, x2224, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2225, x6, 13), x2226, 13),
            x2224,
            13
        ),
        73156,
        4,
    )?;
    let x2227: BytePoly_4 = bigint_add!(bigint_sub!(x2178, x2226, 4), x6, 4);
    let x2228: BytePoly_4 = bigint_nondet_quot!(ctx, x2227, x6, 4);
    let x2229: BytePoly_4 = bigint_nondet_rem!(ctx, x2227, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2228, x6, 8), x2229, 8), x2227, 8),
        32515,
        2,
    )?;
    let x2230: BytePoly_8 = bigint_mul!(x2223, x2223, 8);
    let x2231: BytePoly_9 = bigint_nondet_quot!(ctx, x2230, x6, 9);
    let x2232: BytePoly_4 = bigint_nondet_rem!(ctx, x2230, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2231, x6, 13), x2232, 13),
            x2230,
            13
        ),
        73156,
        4,
    )?;
    let x2233: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2232, x2172, 4), x6, 4), x2172, 4),
        x6,
        4
    );
    let x2234: BytePoly_4 = bigint_nondet_quot!(ctx, x2233, x6, 4);
    let x2235: BytePoly_4 = bigint_nondet_rem!(ctx, x2233, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2234, x6, 8), x2235, 8), x2233, 8),
        32515,
        2,
    )?;
    let x2236: BytePoly_8 = bigint_mul!(x2223, x2235, 8);
    let x2237: BytePoly_9 = bigint_nondet_quot!(ctx, x2236, x6, 9);
    let x2238: BytePoly_4 = bigint_nondet_rem!(ctx, x2236, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2237, x6, 13), x2238, 13),
            x2236,
            13
        ),
        73156,
        4,
    )?;
    let x2239: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x2238, x2229, 4), 4), x6, 4);
    let x2240: BytePoly_4 = bigint_nondet_quot!(ctx, x2239, x6, 4);
    let x2241: BytePoly_4 = bigint_nondet_rem!(ctx, x2239, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2240, x6, 8), x2241, 8), x2239, 8),
        32515,
        2,
    )?;
    let x2242: BytePoly_1 = bigint_nondet_rem!(ctx, x2180, x2, 1);
    let x2243: BytePoly_5 = bigint_nondet_quot!(ctx, x2180, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2243, x2, 6), x2242, 6), x2180, 6),
        40643,
        4,
    )?;
    let x2244: BytePoly_1 = bigint_sub!(x3, x2242, 1);
    eqz(ctx, &bigint_mul!(x2242, x2244, 2), 8131, 2)?;
    let x2245: BytePoly_4 = bigint_add!(bigint_sub!(x2235, x2205, 4), x6, 4);
    let x2246: BytePoly_4 = bigint_nondet_inv!(ctx, x2245, x6, 4);
    let x2247: BytePoly_8 = bigint_mul!(x2245, x2246, 8);
    let x2248: BytePoly_9 = bigint_nondet_quot!(ctx, x2247, x6, 9);
    let x2249: BytePoly_4 = bigint_nondet_rem!(ctx, x2247, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2248, x6, 13), x2249, 13),
            x2247,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x2249, x1, 4), 34, 1)?;
    let x2250: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x2241, x2207, 4), x6, 4), x2246, 8);
    let x2251: BytePoly_9 = bigint_nondet_quot!(ctx, x2250, x6, 9);
    let x2252: BytePoly_4 = bigint_nondet_rem!(ctx, x2250, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2251, x6, 13), x2252, 13),
            x2250,
            13
        ),
        73156,
        4,
    )?;
    let x2253: BytePoly_8 = bigint_add!(bigint_sub!(x2207, bigint_mul!(x2252, x2205, 8), 8), x6, 8);
    let x2254: BytePoly_8 = bigint_nondet_quot!(ctx, x2253, x6, 8);
    let x2255: BytePoly_4 = bigint_nondet_rem!(ctx, x2253, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2254, x6, 12), x2255, 12),
            x2253,
            12
        ),
        65028,
        4,
    )?;
    let x2256: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x2252, x2252, 8), x2205, 8), x6, 8),
            x2235,
            8
        ),
        x6,
        8
    );
    let x2257: BytePoly_9 = bigint_nondet_quot!(ctx, x2256, x6, 9);
    let x2258: BytePoly_4 = bigint_nondet_rem!(ctx, x2256, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2257, x6, 13), x2258, 13),
            x2256,
            13
        ),
        73156,
        4,
    )?;
    let x2259: BytePoly_8 = bigint_mul!(x2252, x2258, 8);
    let x2260: BytePoly_9 = bigint_nondet_quot!(ctx, x2259, x6, 9);
    let x2261: BytePoly_4 = bigint_nondet_rem!(ctx, x2259, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2260, x6, 13), x2261, 13),
            x2259,
            13
        ),
        73156,
        4,
    )?;
    let x2262: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x2261, x2255, 4), 4), x6, 4);
    let x2263: BytePoly_4 = bigint_nondet_quot!(ctx, x2262, x6, 4);
    let x2264: BytePoly_4 = bigint_nondet_rem!(ctx, x2262, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2263, x6, 8), x2264, 8), x2262, 8),
        32515,
        2,
    )?;
    let x2265: BytePoly_5 = bigint_add!(
        bigint_mul!(x2258, x2242, 5),
        bigint_mul!(x2205, x2244, 5),
        5
    );
    let x2266: BytePoly_5 = bigint_add!(
        bigint_mul!(x2264, x2242, 5),
        bigint_mul!(x2207, x2244, 5),
        5
    );
    let x2267: BytePoly_6 = bigint_nondet_quot!(ctx, x2265, x6, 6);
    let x2268: BytePoly_4 = bigint_nondet_rem!(ctx, x2265, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2267, x6, 10), x2268, 10),
            x2265,
            10
        ),
        48771,
        4,
    )?;
    let x2269: BytePoly_6 = bigint_nondet_quot!(ctx, x2266, x6, 6);
    let x2270: BytePoly_4 = bigint_nondet_rem!(ctx, x2266, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2269, x6, 10), x2270, 10),
            x2266,
            10
        ),
        48771,
        4,
    )?;
    let x2271: BytePoly_8 = bigint_mul!(x2235, x2235, 8);
    let x2272: BytePoly_9 = bigint_nondet_quot!(ctx, x2271, x6, 9);
    let x2273: BytePoly_4 = bigint_nondet_rem!(ctx, x2271, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2272, x6, 13), x2273, 13),
            x2271,
            13
        ),
        73156,
        4,
    )?;
    let x2274: BytePoly_5 = bigint_add!(bigint_mul!(x2273, x0, 5), x5, 5);
    let x2275: BytePoly_6 = bigint_nondet_quot!(ctx, x2274, x6, 6);
    let x2276: BytePoly_4 = bigint_nondet_rem!(ctx, x2274, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2275, x6, 10), x2276, 10),
            x2274,
            10
        ),
        48771,
        4,
    )?;
    let x2277: BytePoly_4 = bigint_add!(x2241, x2241, 4);
    let x2278: BytePoly_4 = bigint_nondet_quot!(ctx, x2277, x6, 4);
    let x2279: BytePoly_4 = bigint_nondet_rem!(ctx, x2277, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2278, x6, 8), x2279, 8), x2277, 8),
        32515,
        2,
    )?;
    let x2280: BytePoly_4 = bigint_nondet_inv!(ctx, x2279, x6, 4);
    let x2281: BytePoly_8 = bigint_mul!(x2279, x2280, 8);
    let x2282: BytePoly_9 = bigint_nondet_quot!(ctx, x2281, x6, 9);
    let x2283: BytePoly_4 = bigint_nondet_rem!(ctx, x2281, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2282, x6, 13), x2283, 13),
            x2281,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x2283, x3, 4), 34, 1)?;
    let x2284: BytePoly_8 = bigint_mul!(x2276, x2280, 8);
    let x2285: BytePoly_9 = bigint_nondet_quot!(ctx, x2284, x6, 9);
    let x2286: BytePoly_4 = bigint_nondet_rem!(ctx, x2284, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2285, x6, 13), x2286, 13),
            x2284,
            13
        ),
        73156,
        4,
    )?;
    let x2287: BytePoly_8 = bigint_mul!(x2286, x2235, 8);
    let x2288: BytePoly_9 = bigint_nondet_quot!(ctx, x2287, x6, 9);
    let x2289: BytePoly_4 = bigint_nondet_rem!(ctx, x2287, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2288, x6, 13), x2289, 13),
            x2287,
            13
        ),
        73156,
        4,
    )?;
    let x2290: BytePoly_4 = bigint_add!(bigint_sub!(x2241, x2289, 4), x6, 4);
    let x2291: BytePoly_4 = bigint_nondet_quot!(ctx, x2290, x6, 4);
    let x2292: BytePoly_4 = bigint_nondet_rem!(ctx, x2290, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2291, x6, 8), x2292, 8), x2290, 8),
        32515,
        2,
    )?;
    let x2293: BytePoly_8 = bigint_mul!(x2286, x2286, 8);
    let x2294: BytePoly_9 = bigint_nondet_quot!(ctx, x2293, x6, 9);
    let x2295: BytePoly_4 = bigint_nondet_rem!(ctx, x2293, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2294, x6, 13), x2295, 13),
            x2293,
            13
        ),
        73156,
        4,
    )?;
    let x2296: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2295, x2235, 4), x6, 4), x2235, 4),
        x6,
        4
    );
    let x2297: BytePoly_4 = bigint_nondet_quot!(ctx, x2296, x6, 4);
    let x2298: BytePoly_4 = bigint_nondet_rem!(ctx, x2296, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2297, x6, 8), x2298, 8), x2296, 8),
        32515,
        2,
    )?;
    let x2299: BytePoly_8 = bigint_mul!(x2286, x2298, 8);
    let x2300: BytePoly_9 = bigint_nondet_quot!(ctx, x2299, x6, 9);
    let x2301: BytePoly_4 = bigint_nondet_rem!(ctx, x2299, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2300, x6, 13), x2301, 13),
            x2299,
            13
        ),
        73156,
        4,
    )?;
    let x2302: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x2301, x2292, 4), 4), x6, 4);
    let x2303: BytePoly_4 = bigint_nondet_quot!(ctx, x2302, x6, 4);
    let x2304: BytePoly_4 = bigint_nondet_rem!(ctx, x2302, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2303, x6, 8), x2304, 8), x2302, 8),
        32515,
        2,
    )?;
    let x2305: BytePoly_1 = bigint_nondet_rem!(ctx, x2243, x2, 1);
    let x2306: BytePoly_5 = bigint_nondet_quot!(ctx, x2243, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2306, x2, 6), x2305, 6), x2243, 6),
        40643,
        4,
    )?;
    let x2307: BytePoly_1 = bigint_sub!(x3, x2305, 1);
    eqz(ctx, &bigint_mul!(x2305, x2307, 2), 8131, 2)?;
    let x2308: BytePoly_4 = bigint_add!(bigint_sub!(x2298, x2268, 4), x6, 4);
    let x2309: BytePoly_4 = bigint_nondet_inv!(ctx, x2308, x6, 4);
    let x2310: BytePoly_8 = bigint_mul!(x2308, x2309, 8);
    let x2311: BytePoly_9 = bigint_nondet_quot!(ctx, x2310, x6, 9);
    let x2312: BytePoly_4 = bigint_nondet_rem!(ctx, x2310, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2311, x6, 13), x2312, 13),
            x2310,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x2312, x1, 4), 34, 1)?;
    let x2313: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x2304, x2270, 4), x6, 4), x2309, 8);
    let x2314: BytePoly_9 = bigint_nondet_quot!(ctx, x2313, x6, 9);
    let x2315: BytePoly_4 = bigint_nondet_rem!(ctx, x2313, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2314, x6, 13), x2315, 13),
            x2313,
            13
        ),
        73156,
        4,
    )?;
    let x2316: BytePoly_8 = bigint_add!(bigint_sub!(x2270, bigint_mul!(x2315, x2268, 8), 8), x6, 8);
    let x2317: BytePoly_8 = bigint_nondet_quot!(ctx, x2316, x6, 8);
    let x2318: BytePoly_4 = bigint_nondet_rem!(ctx, x2316, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2317, x6, 12), x2318, 12),
            x2316,
            12
        ),
        65028,
        4,
    )?;
    let x2319: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x2315, x2315, 8), x2268, 8), x6, 8),
            x2298,
            8
        ),
        x6,
        8
    );
    let x2320: BytePoly_9 = bigint_nondet_quot!(ctx, x2319, x6, 9);
    let x2321: BytePoly_4 = bigint_nondet_rem!(ctx, x2319, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2320, x6, 13), x2321, 13),
            x2319,
            13
        ),
        73156,
        4,
    )?;
    let x2322: BytePoly_8 = bigint_mul!(x2315, x2321, 8);
    let x2323: BytePoly_9 = bigint_nondet_quot!(ctx, x2322, x6, 9);
    let x2324: BytePoly_4 = bigint_nondet_rem!(ctx, x2322, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2323, x6, 13), x2324, 13),
            x2322,
            13
        ),
        73156,
        4,
    )?;
    let x2325: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x2324, x2318, 4), 4), x6, 4);
    let x2326: BytePoly_4 = bigint_nondet_quot!(ctx, x2325, x6, 4);
    let x2327: BytePoly_4 = bigint_nondet_rem!(ctx, x2325, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2326, x6, 8), x2327, 8), x2325, 8),
        32515,
        2,
    )?;
    let x2328: BytePoly_5 = bigint_add!(
        bigint_mul!(x2321, x2305, 5),
        bigint_mul!(x2268, x2307, 5),
        5
    );
    let x2329: BytePoly_5 = bigint_add!(
        bigint_mul!(x2327, x2305, 5),
        bigint_mul!(x2270, x2307, 5),
        5
    );
    let x2330: BytePoly_6 = bigint_nondet_quot!(ctx, x2328, x6, 6);
    let x2331: BytePoly_4 = bigint_nondet_rem!(ctx, x2328, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2330, x6, 10), x2331, 10),
            x2328,
            10
        ),
        48771,
        4,
    )?;
    let x2332: BytePoly_6 = bigint_nondet_quot!(ctx, x2329, x6, 6);
    let x2333: BytePoly_4 = bigint_nondet_rem!(ctx, x2329, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2332, x6, 10), x2333, 10),
            x2329,
            10
        ),
        48771,
        4,
    )?;
    let x2334: BytePoly_8 = bigint_mul!(x2298, x2298, 8);
    let x2335: BytePoly_9 = bigint_nondet_quot!(ctx, x2334, x6, 9);
    let x2336: BytePoly_4 = bigint_nondet_rem!(ctx, x2334, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2335, x6, 13), x2336, 13),
            x2334,
            13
        ),
        73156,
        4,
    )?;
    let x2337: BytePoly_5 = bigint_add!(bigint_mul!(x2336, x0, 5), x5, 5);
    let x2338: BytePoly_6 = bigint_nondet_quot!(ctx, x2337, x6, 6);
    let x2339: BytePoly_4 = bigint_nondet_rem!(ctx, x2337, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2338, x6, 10), x2339, 10),
            x2337,
            10
        ),
        48771,
        4,
    )?;
    let x2340: BytePoly_4 = bigint_add!(x2304, x2304, 4);
    let x2341: BytePoly_4 = bigint_nondet_quot!(ctx, x2340, x6, 4);
    let x2342: BytePoly_4 = bigint_nondet_rem!(ctx, x2340, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2341, x6, 8), x2342, 8), x2340, 8),
        32515,
        2,
    )?;
    let x2343: BytePoly_4 = bigint_nondet_inv!(ctx, x2342, x6, 4);
    let x2344: BytePoly_8 = bigint_mul!(x2342, x2343, 8);
    let x2345: BytePoly_9 = bigint_nondet_quot!(ctx, x2344, x6, 9);
    let x2346: BytePoly_4 = bigint_nondet_rem!(ctx, x2344, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2345, x6, 13), x2346, 13),
            x2344,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x2346, x3, 4), 34, 1)?;
    let x2347: BytePoly_8 = bigint_mul!(x2339, x2343, 8);
    let x2348: BytePoly_9 = bigint_nondet_quot!(ctx, x2347, x6, 9);
    let x2349: BytePoly_4 = bigint_nondet_rem!(ctx, x2347, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2348, x6, 13), x2349, 13),
            x2347,
            13
        ),
        73156,
        4,
    )?;
    let x2350: BytePoly_8 = bigint_mul!(x2349, x2298, 8);
    let x2351: BytePoly_9 = bigint_nondet_quot!(ctx, x2350, x6, 9);
    let x2352: BytePoly_4 = bigint_nondet_rem!(ctx, x2350, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2351, x6, 13), x2352, 13),
            x2350,
            13
        ),
        73156,
        4,
    )?;
    let x2353: BytePoly_4 = bigint_add!(bigint_sub!(x2304, x2352, 4), x6, 4);
    let x2354: BytePoly_4 = bigint_nondet_quot!(ctx, x2353, x6, 4);
    let x2355: BytePoly_4 = bigint_nondet_rem!(ctx, x2353, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2354, x6, 8), x2355, 8), x2353, 8),
        32515,
        2,
    )?;
    let x2356: BytePoly_8 = bigint_mul!(x2349, x2349, 8);
    let x2357: BytePoly_9 = bigint_nondet_quot!(ctx, x2356, x6, 9);
    let x2358: BytePoly_4 = bigint_nondet_rem!(ctx, x2356, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2357, x6, 13), x2358, 13),
            x2356,
            13
        ),
        73156,
        4,
    )?;
    let x2359: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2358, x2298, 4), x6, 4), x2298, 4),
        x6,
        4
    );
    let x2360: BytePoly_4 = bigint_nondet_quot!(ctx, x2359, x6, 4);
    let x2361: BytePoly_4 = bigint_nondet_rem!(ctx, x2359, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2360, x6, 8), x2361, 8), x2359, 8),
        32515,
        2,
    )?;
    let x2362: BytePoly_8 = bigint_mul!(x2349, x2361, 8);
    let x2363: BytePoly_9 = bigint_nondet_quot!(ctx, x2362, x6, 9);
    let x2364: BytePoly_4 = bigint_nondet_rem!(ctx, x2362, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2363, x6, 13), x2364, 13),
            x2362,
            13
        ),
        73156,
        4,
    )?;
    let x2365: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x2364, x2355, 4), 4), x6, 4);
    let x2366: BytePoly_4 = bigint_nondet_quot!(ctx, x2365, x6, 4);
    let x2367: BytePoly_4 = bigint_nondet_rem!(ctx, x2365, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2366, x6, 8), x2367, 8), x2365, 8),
        32515,
        2,
    )?;
    let x2368: BytePoly_1 = bigint_nondet_rem!(ctx, x2306, x2, 1);
    let x2369: BytePoly_5 = bigint_nondet_quot!(ctx, x2306, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2369, x2, 6), x2368, 6), x2306, 6),
        40643,
        4,
    )?;
    let x2370: BytePoly_1 = bigint_sub!(x3, x2368, 1);
    eqz(ctx, &bigint_mul!(x2368, x2370, 2), 8131, 2)?;
    let x2371: BytePoly_4 = bigint_add!(bigint_sub!(x2361, x2331, 4), x6, 4);
    let x2372: BytePoly_4 = bigint_nondet_inv!(ctx, x2371, x6, 4);
    let x2373: BytePoly_8 = bigint_mul!(x2371, x2372, 8);
    let x2374: BytePoly_9 = bigint_nondet_quot!(ctx, x2373, x6, 9);
    let x2375: BytePoly_4 = bigint_nondet_rem!(ctx, x2373, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2374, x6, 13), x2375, 13),
            x2373,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x2375, x1, 4), 34, 1)?;
    let x2376: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x2367, x2333, 4), x6, 4), x2372, 8);
    let x2377: BytePoly_9 = bigint_nondet_quot!(ctx, x2376, x6, 9);
    let x2378: BytePoly_4 = bigint_nondet_rem!(ctx, x2376, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2377, x6, 13), x2378, 13),
            x2376,
            13
        ),
        73156,
        4,
    )?;
    let x2379: BytePoly_8 = bigint_add!(bigint_sub!(x2333, bigint_mul!(x2378, x2331, 8), 8), x6, 8);
    let x2380: BytePoly_8 = bigint_nondet_quot!(ctx, x2379, x6, 8);
    let x2381: BytePoly_4 = bigint_nondet_rem!(ctx, x2379, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2380, x6, 12), x2381, 12),
            x2379,
            12
        ),
        65028,
        4,
    )?;
    let x2382: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x2378, x2378, 8), x2331, 8), x6, 8),
            x2361,
            8
        ),
        x6,
        8
    );
    let x2383: BytePoly_9 = bigint_nondet_quot!(ctx, x2382, x6, 9);
    let x2384: BytePoly_4 = bigint_nondet_rem!(ctx, x2382, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2383, x6, 13), x2384, 13),
            x2382,
            13
        ),
        73156,
        4,
    )?;
    let x2385: BytePoly_8 = bigint_mul!(x2378, x2384, 8);
    let x2386: BytePoly_9 = bigint_nondet_quot!(ctx, x2385, x6, 9);
    let x2387: BytePoly_4 = bigint_nondet_rem!(ctx, x2385, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2386, x6, 13), x2387, 13),
            x2385,
            13
        ),
        73156,
        4,
    )?;
    let x2388: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x2387, x2381, 4), 4), x6, 4);
    let x2389: BytePoly_4 = bigint_nondet_quot!(ctx, x2388, x6, 4);
    let x2390: BytePoly_4 = bigint_nondet_rem!(ctx, x2388, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2389, x6, 8), x2390, 8), x2388, 8),
        32515,
        2,
    )?;
    let x2391: BytePoly_5 = bigint_add!(
        bigint_mul!(x2384, x2368, 5),
        bigint_mul!(x2331, x2370, 5),
        5
    );
    let x2392: BytePoly_5 = bigint_add!(
        bigint_mul!(x2390, x2368, 5),
        bigint_mul!(x2333, x2370, 5),
        5
    );
    let x2393: BytePoly_6 = bigint_nondet_quot!(ctx, x2391, x6, 6);
    let x2394: BytePoly_4 = bigint_nondet_rem!(ctx, x2391, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2393, x6, 10), x2394, 10),
            x2391,
            10
        ),
        48771,
        4,
    )?;
    let x2395: BytePoly_6 = bigint_nondet_quot!(ctx, x2392, x6, 6);
    let x2396: BytePoly_4 = bigint_nondet_rem!(ctx, x2392, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2395, x6, 10), x2396, 10),
            x2392,
            10
        ),
        48771,
        4,
    )?;
    let x2397: BytePoly_8 = bigint_mul!(x2361, x2361, 8);
    let x2398: BytePoly_9 = bigint_nondet_quot!(ctx, x2397, x6, 9);
    let x2399: BytePoly_4 = bigint_nondet_rem!(ctx, x2397, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2398, x6, 13), x2399, 13),
            x2397,
            13
        ),
        73156,
        4,
    )?;
    let x2400: BytePoly_5 = bigint_add!(bigint_mul!(x2399, x0, 5), x5, 5);
    let x2401: BytePoly_6 = bigint_nondet_quot!(ctx, x2400, x6, 6);
    let x2402: BytePoly_4 = bigint_nondet_rem!(ctx, x2400, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2401, x6, 10), x2402, 10),
            x2400,
            10
        ),
        48771,
        4,
    )?;
    let x2403: BytePoly_4 = bigint_add!(x2367, x2367, 4);
    let x2404: BytePoly_4 = bigint_nondet_quot!(ctx, x2403, x6, 4);
    let x2405: BytePoly_4 = bigint_nondet_rem!(ctx, x2403, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2404, x6, 8), x2405, 8), x2403, 8),
        32515,
        2,
    )?;
    let x2406: BytePoly_4 = bigint_nondet_inv!(ctx, x2405, x6, 4);
    let x2407: BytePoly_8 = bigint_mul!(x2405, x2406, 8);
    let x2408: BytePoly_9 = bigint_nondet_quot!(ctx, x2407, x6, 9);
    let x2409: BytePoly_4 = bigint_nondet_rem!(ctx, x2407, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2408, x6, 13), x2409, 13),
            x2407,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x2409, x3, 4), 34, 1)?;
    let x2410: BytePoly_8 = bigint_mul!(x2402, x2406, 8);
    let x2411: BytePoly_9 = bigint_nondet_quot!(ctx, x2410, x6, 9);
    let x2412: BytePoly_4 = bigint_nondet_rem!(ctx, x2410, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2411, x6, 13), x2412, 13),
            x2410,
            13
        ),
        73156,
        4,
    )?;
    let x2413: BytePoly_8 = bigint_mul!(x2412, x2361, 8);
    let x2414: BytePoly_9 = bigint_nondet_quot!(ctx, x2413, x6, 9);
    let x2415: BytePoly_4 = bigint_nondet_rem!(ctx, x2413, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2414, x6, 13), x2415, 13),
            x2413,
            13
        ),
        73156,
        4,
    )?;
    let x2416: BytePoly_4 = bigint_add!(bigint_sub!(x2367, x2415, 4), x6, 4);
    let x2417: BytePoly_4 = bigint_nondet_quot!(ctx, x2416, x6, 4);
    let x2418: BytePoly_4 = bigint_nondet_rem!(ctx, x2416, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2417, x6, 8), x2418, 8), x2416, 8),
        32515,
        2,
    )?;
    let x2419: BytePoly_8 = bigint_mul!(x2412, x2412, 8);
    let x2420: BytePoly_9 = bigint_nondet_quot!(ctx, x2419, x6, 9);
    let x2421: BytePoly_4 = bigint_nondet_rem!(ctx, x2419, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2420, x6, 13), x2421, 13),
            x2419,
            13
        ),
        73156,
        4,
    )?;
    let x2422: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2421, x2361, 4), x6, 4), x2361, 4),
        x6,
        4
    );
    let x2423: BytePoly_4 = bigint_nondet_quot!(ctx, x2422, x6, 4);
    let x2424: BytePoly_4 = bigint_nondet_rem!(ctx, x2422, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2423, x6, 8), x2424, 8), x2422, 8),
        32515,
        2,
    )?;
    let x2425: BytePoly_8 = bigint_mul!(x2412, x2424, 8);
    let x2426: BytePoly_9 = bigint_nondet_quot!(ctx, x2425, x6, 9);
    let x2427: BytePoly_4 = bigint_nondet_rem!(ctx, x2425, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2426, x6, 13), x2427, 13),
            x2425,
            13
        ),
        73156,
        4,
    )?;
    let x2428: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x2427, x2418, 4), 4), x6, 4);
    let x2429: BytePoly_4 = bigint_nondet_quot!(ctx, x2428, x6, 4);
    let x2430: BytePoly_4 = bigint_nondet_rem!(ctx, x2428, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2429, x6, 8), x2430, 8), x2428, 8),
        32515,
        2,
    )?;
    let x2431: BytePoly_1 = bigint_nondet_rem!(ctx, x2369, x2, 1);
    let x2432: BytePoly_5 = bigint_nondet_quot!(ctx, x2369, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2432, x2, 6), x2431, 6), x2369, 6),
        40643,
        4,
    )?;
    let x2433: BytePoly_1 = bigint_sub!(x3, x2431, 1);
    eqz(ctx, &bigint_mul!(x2431, x2433, 2), 8131, 2)?;
    let x2434: BytePoly_4 = bigint_add!(bigint_sub!(x2424, x2394, 4), x6, 4);
    let x2435: BytePoly_4 = bigint_nondet_inv!(ctx, x2434, x6, 4);
    let x2436: BytePoly_8 = bigint_mul!(x2434, x2435, 8);
    let x2437: BytePoly_9 = bigint_nondet_quot!(ctx, x2436, x6, 9);
    let x2438: BytePoly_4 = bigint_nondet_rem!(ctx, x2436, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2437, x6, 13), x2438, 13),
            x2436,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x2438, x1, 4), 34, 1)?;
    let x2439: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x2430, x2396, 4), x6, 4), x2435, 8);
    let x2440: BytePoly_9 = bigint_nondet_quot!(ctx, x2439, x6, 9);
    let x2441: BytePoly_4 = bigint_nondet_rem!(ctx, x2439, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2440, x6, 13), x2441, 13),
            x2439,
            13
        ),
        73156,
        4,
    )?;
    let x2442: BytePoly_8 = bigint_add!(bigint_sub!(x2396, bigint_mul!(x2441, x2394, 8), 8), x6, 8);
    let x2443: BytePoly_8 = bigint_nondet_quot!(ctx, x2442, x6, 8);
    let x2444: BytePoly_4 = bigint_nondet_rem!(ctx, x2442, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2443, x6, 12), x2444, 12),
            x2442,
            12
        ),
        65028,
        4,
    )?;
    let x2445: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x2441, x2441, 8), x2394, 8), x6, 8),
            x2424,
            8
        ),
        x6,
        8
    );
    let x2446: BytePoly_9 = bigint_nondet_quot!(ctx, x2445, x6, 9);
    let x2447: BytePoly_4 = bigint_nondet_rem!(ctx, x2445, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2446, x6, 13), x2447, 13),
            x2445,
            13
        ),
        73156,
        4,
    )?;
    let x2448: BytePoly_8 = bigint_mul!(x2441, x2447, 8);
    let x2449: BytePoly_9 = bigint_nondet_quot!(ctx, x2448, x6, 9);
    let x2450: BytePoly_4 = bigint_nondet_rem!(ctx, x2448, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2449, x6, 13), x2450, 13),
            x2448,
            13
        ),
        73156,
        4,
    )?;
    let x2451: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x2450, x2444, 4), 4), x6, 4);
    let x2452: BytePoly_4 = bigint_nondet_quot!(ctx, x2451, x6, 4);
    let x2453: BytePoly_4 = bigint_nondet_rem!(ctx, x2451, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2452, x6, 8), x2453, 8), x2451, 8),
        32515,
        2,
    )?;
    let x2454: BytePoly_5 = bigint_add!(
        bigint_mul!(x2447, x2431, 5),
        bigint_mul!(x2394, x2433, 5),
        5
    );
    let x2455: BytePoly_5 = bigint_add!(
        bigint_mul!(x2453, x2431, 5),
        bigint_mul!(x2396, x2433, 5),
        5
    );
    let x2456: BytePoly_6 = bigint_nondet_quot!(ctx, x2454, x6, 6);
    let x2457: BytePoly_4 = bigint_nondet_rem!(ctx, x2454, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2456, x6, 10), x2457, 10),
            x2454,
            10
        ),
        48771,
        4,
    )?;
    let x2458: BytePoly_6 = bigint_nondet_quot!(ctx, x2455, x6, 6);
    let x2459: BytePoly_4 = bigint_nondet_rem!(ctx, x2455, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2458, x6, 10), x2459, 10),
            x2455,
            10
        ),
        48771,
        4,
    )?;
    let x2460: BytePoly_8 = bigint_mul!(x2424, x2424, 8);
    let x2461: BytePoly_9 = bigint_nondet_quot!(ctx, x2460, x6, 9);
    let x2462: BytePoly_4 = bigint_nondet_rem!(ctx, x2460, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2461, x6, 13), x2462, 13),
            x2460,
            13
        ),
        73156,
        4,
    )?;
    let x2463: BytePoly_5 = bigint_add!(bigint_mul!(x2462, x0, 5), x5, 5);
    let x2464: BytePoly_6 = bigint_nondet_quot!(ctx, x2463, x6, 6);
    let x2465: BytePoly_4 = bigint_nondet_rem!(ctx, x2463, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2464, x6, 10), x2465, 10),
            x2463,
            10
        ),
        48771,
        4,
    )?;
    let x2466: BytePoly_4 = bigint_add!(x2430, x2430, 4);
    let x2467: BytePoly_4 = bigint_nondet_quot!(ctx, x2466, x6, 4);
    let x2468: BytePoly_4 = bigint_nondet_rem!(ctx, x2466, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2467, x6, 8), x2468, 8), x2466, 8),
        32515,
        2,
    )?;
    let x2469: BytePoly_4 = bigint_nondet_inv!(ctx, x2468, x6, 4);
    let x2470: BytePoly_8 = bigint_mul!(x2468, x2469, 8);
    let x2471: BytePoly_9 = bigint_nondet_quot!(ctx, x2470, x6, 9);
    let x2472: BytePoly_4 = bigint_nondet_rem!(ctx, x2470, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2471, x6, 13), x2472, 13),
            x2470,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x2472, x3, 4), 34, 1)?;
    let x2473: BytePoly_8 = bigint_mul!(x2465, x2469, 8);
    let x2474: BytePoly_9 = bigint_nondet_quot!(ctx, x2473, x6, 9);
    let x2475: BytePoly_4 = bigint_nondet_rem!(ctx, x2473, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2474, x6, 13), x2475, 13),
            x2473,
            13
        ),
        73156,
        4,
    )?;
    let x2476: BytePoly_8 = bigint_mul!(x2475, x2424, 8);
    let x2477: BytePoly_9 = bigint_nondet_quot!(ctx, x2476, x6, 9);
    let x2478: BytePoly_4 = bigint_nondet_rem!(ctx, x2476, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2477, x6, 13), x2478, 13),
            x2476,
            13
        ),
        73156,
        4,
    )?;
    let x2479: BytePoly_4 = bigint_add!(bigint_sub!(x2430, x2478, 4), x6, 4);
    let x2480: BytePoly_4 = bigint_nondet_quot!(ctx, x2479, x6, 4);
    let x2481: BytePoly_4 = bigint_nondet_rem!(ctx, x2479, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2480, x6, 8), x2481, 8), x2479, 8),
        32515,
        2,
    )?;
    let x2482: BytePoly_8 = bigint_mul!(x2475, x2475, 8);
    let x2483: BytePoly_9 = bigint_nondet_quot!(ctx, x2482, x6, 9);
    let x2484: BytePoly_4 = bigint_nondet_rem!(ctx, x2482, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2483, x6, 13), x2484, 13),
            x2482,
            13
        ),
        73156,
        4,
    )?;
    let x2485: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2484, x2424, 4), x6, 4), x2424, 4),
        x6,
        4
    );
    let x2486: BytePoly_4 = bigint_nondet_quot!(ctx, x2485, x6, 4);
    let x2487: BytePoly_4 = bigint_nondet_rem!(ctx, x2485, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2486, x6, 8), x2487, 8), x2485, 8),
        32515,
        2,
    )?;
    let x2488: BytePoly_8 = bigint_mul!(x2475, x2487, 8);
    let x2489: BytePoly_9 = bigint_nondet_quot!(ctx, x2488, x6, 9);
    let x2490: BytePoly_4 = bigint_nondet_rem!(ctx, x2488, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2489, x6, 13), x2490, 13),
            x2488,
            13
        ),
        73156,
        4,
    )?;
    let x2491: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x2490, x2481, 4), 4), x6, 4);
    let x2492: BytePoly_4 = bigint_nondet_quot!(ctx, x2491, x6, 4);
    let x2493: BytePoly_4 = bigint_nondet_rem!(ctx, x2491, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2492, x6, 8), x2493, 8), x2491, 8),
        32515,
        2,
    )?;
    let x2494: BytePoly_1 = bigint_nondet_rem!(ctx, x2432, x2, 1);
    let x2495: BytePoly_5 = bigint_nondet_quot!(ctx, x2432, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2495, x2, 6), x2494, 6), x2432, 6),
        40643,
        4,
    )?;
    let x2496: BytePoly_1 = bigint_sub!(x3, x2494, 1);
    eqz(ctx, &bigint_mul!(x2494, x2496, 2), 8131, 2)?;
    let x2497: BytePoly_4 = bigint_add!(bigint_sub!(x2487, x2457, 4), x6, 4);
    let x2498: BytePoly_4 = bigint_nondet_inv!(ctx, x2497, x6, 4);
    let x2499: BytePoly_8 = bigint_mul!(x2497, x2498, 8);
    let x2500: BytePoly_9 = bigint_nondet_quot!(ctx, x2499, x6, 9);
    let x2501: BytePoly_4 = bigint_nondet_rem!(ctx, x2499, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2500, x6, 13), x2501, 13),
            x2499,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x2501, x1, 4), 34, 1)?;
    let x2502: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x2493, x2459, 4), x6, 4), x2498, 8);
    let x2503: BytePoly_9 = bigint_nondet_quot!(ctx, x2502, x6, 9);
    let x2504: BytePoly_4 = bigint_nondet_rem!(ctx, x2502, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2503, x6, 13), x2504, 13),
            x2502,
            13
        ),
        73156,
        4,
    )?;
    let x2505: BytePoly_8 = bigint_add!(bigint_sub!(x2459, bigint_mul!(x2504, x2457, 8), 8), x6, 8);
    let x2506: BytePoly_8 = bigint_nondet_quot!(ctx, x2505, x6, 8);
    let x2507: BytePoly_4 = bigint_nondet_rem!(ctx, x2505, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2506, x6, 12), x2507, 12),
            x2505,
            12
        ),
        65028,
        4,
    )?;
    let x2508: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x2504, x2504, 8), x2457, 8), x6, 8),
            x2487,
            8
        ),
        x6,
        8
    );
    let x2509: BytePoly_9 = bigint_nondet_quot!(ctx, x2508, x6, 9);
    let x2510: BytePoly_4 = bigint_nondet_rem!(ctx, x2508, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2509, x6, 13), x2510, 13),
            x2508,
            13
        ),
        73156,
        4,
    )?;
    let x2511: BytePoly_8 = bigint_mul!(x2504, x2510, 8);
    let x2512: BytePoly_9 = bigint_nondet_quot!(ctx, x2511, x6, 9);
    let x2513: BytePoly_4 = bigint_nondet_rem!(ctx, x2511, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2512, x6, 13), x2513, 13),
            x2511,
            13
        ),
        73156,
        4,
    )?;
    let x2514: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x2513, x2507, 4), 4), x6, 4);
    let x2515: BytePoly_4 = bigint_nondet_quot!(ctx, x2514, x6, 4);
    let x2516: BytePoly_4 = bigint_nondet_rem!(ctx, x2514, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2515, x6, 8), x2516, 8), x2514, 8),
        32515,
        2,
    )?;
    let x2517: BytePoly_5 = bigint_add!(
        bigint_mul!(x2510, x2494, 5),
        bigint_mul!(x2457, x2496, 5),
        5
    );
    let x2518: BytePoly_5 = bigint_add!(
        bigint_mul!(x2516, x2494, 5),
        bigint_mul!(x2459, x2496, 5),
        5
    );
    let x2519: BytePoly_6 = bigint_nondet_quot!(ctx, x2517, x6, 6);
    let x2520: BytePoly_4 = bigint_nondet_rem!(ctx, x2517, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2519, x6, 10), x2520, 10),
            x2517,
            10
        ),
        48771,
        4,
    )?;
    let x2521: BytePoly_6 = bigint_nondet_quot!(ctx, x2518, x6, 6);
    let x2522: BytePoly_4 = bigint_nondet_rem!(ctx, x2518, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2521, x6, 10), x2522, 10),
            x2518,
            10
        ),
        48771,
        4,
    )?;
    let x2523: BytePoly_8 = bigint_mul!(x2487, x2487, 8);
    let x2524: BytePoly_9 = bigint_nondet_quot!(ctx, x2523, x6, 9);
    let x2525: BytePoly_4 = bigint_nondet_rem!(ctx, x2523, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2524, x6, 13), x2525, 13),
            x2523,
            13
        ),
        73156,
        4,
    )?;
    let x2526: BytePoly_5 = bigint_add!(bigint_mul!(x2525, x0, 5), x5, 5);
    let x2527: BytePoly_6 = bigint_nondet_quot!(ctx, x2526, x6, 6);
    let x2528: BytePoly_4 = bigint_nondet_rem!(ctx, x2526, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2527, x6, 10), x2528, 10),
            x2526,
            10
        ),
        48771,
        4,
    )?;
    let x2529: BytePoly_4 = bigint_add!(x2493, x2493, 4);
    let x2530: BytePoly_4 = bigint_nondet_quot!(ctx, x2529, x6, 4);
    let x2531: BytePoly_4 = bigint_nondet_rem!(ctx, x2529, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2530, x6, 8), x2531, 8), x2529, 8),
        32515,
        2,
    )?;
    let x2532: BytePoly_4 = bigint_nondet_inv!(ctx, x2531, x6, 4);
    let x2533: BytePoly_8 = bigint_mul!(x2531, x2532, 8);
    let x2534: BytePoly_9 = bigint_nondet_quot!(ctx, x2533, x6, 9);
    let x2535: BytePoly_4 = bigint_nondet_rem!(ctx, x2533, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2534, x6, 13), x2535, 13),
            x2533,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x2535, x3, 4), 34, 1)?;
    let x2536: BytePoly_8 = bigint_mul!(x2528, x2532, 8);
    let x2537: BytePoly_9 = bigint_nondet_quot!(ctx, x2536, x6, 9);
    let x2538: BytePoly_4 = bigint_nondet_rem!(ctx, x2536, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2537, x6, 13), x2538, 13),
            x2536,
            13
        ),
        73156,
        4,
    )?;
    let x2539: BytePoly_8 = bigint_mul!(x2538, x2487, 8);
    let x2540: BytePoly_9 = bigint_nondet_quot!(ctx, x2539, x6, 9);
    let x2541: BytePoly_4 = bigint_nondet_rem!(ctx, x2539, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2540, x6, 13), x2541, 13),
            x2539,
            13
        ),
        73156,
        4,
    )?;
    let x2542: BytePoly_4 = bigint_add!(bigint_sub!(x2493, x2541, 4), x6, 4);
    let x2543: BytePoly_4 = bigint_nondet_quot!(ctx, x2542, x6, 4);
    let x2544: BytePoly_4 = bigint_nondet_rem!(ctx, x2542, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2543, x6, 8), x2544, 8), x2542, 8),
        32515,
        2,
    )?;
    let x2545: BytePoly_8 = bigint_mul!(x2538, x2538, 8);
    let x2546: BytePoly_9 = bigint_nondet_quot!(ctx, x2545, x6, 9);
    let x2547: BytePoly_4 = bigint_nondet_rem!(ctx, x2545, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2546, x6, 13), x2547, 13),
            x2545,
            13
        ),
        73156,
        4,
    )?;
    let x2548: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2547, x2487, 4), x6, 4), x2487, 4),
        x6,
        4
    );
    let x2549: BytePoly_4 = bigint_nondet_quot!(ctx, x2548, x6, 4);
    let x2550: BytePoly_4 = bigint_nondet_rem!(ctx, x2548, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2549, x6, 8), x2550, 8), x2548, 8),
        32515,
        2,
    )?;
    let x2551: BytePoly_8 = bigint_mul!(x2538, x2550, 8);
    let x2552: BytePoly_9 = bigint_nondet_quot!(ctx, x2551, x6, 9);
    let x2553: BytePoly_4 = bigint_nondet_rem!(ctx, x2551, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2552, x6, 13), x2553, 13),
            x2551,
            13
        ),
        73156,
        4,
    )?;
    let x2554: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x2553, x2544, 4), 4), x6, 4);
    let x2555: BytePoly_4 = bigint_nondet_quot!(ctx, x2554, x6, 4);
    let x2556: BytePoly_4 = bigint_nondet_rem!(ctx, x2554, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2555, x6, 8), x2556, 8), x2554, 8),
        32515,
        2,
    )?;
    let x2557: BytePoly_4 = bigint_sub!(x6, x16, 4);
    let x2558: BytePoly_4 = bigint_add!(bigint_sub!(x15, x2520, 4), x6, 4);
    let x2559: BytePoly_4 = bigint_nondet_inv!(ctx, x2558, x6, 4);
    let x2560: BytePoly_8 = bigint_mul!(x2558, x2559, 8);
    let x2561: BytePoly_9 = bigint_nondet_quot!(ctx, x2560, x6, 9);
    let x2562: BytePoly_4 = bigint_nondet_rem!(ctx, x2560, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2561, x6, 13), x2562, 13),
            x2560,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x2562, x1, 4), 34, 1)?;
    let x2563: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x2557, x2522, 4), x6, 4), x2559, 8);
    let x2564: BytePoly_9 = bigint_nondet_quot!(ctx, x2563, x6, 9);
    let x2565: BytePoly_4 = bigint_nondet_rem!(ctx, x2563, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2564, x6, 13), x2565, 13),
            x2563,
            13
        ),
        73156,
        4,
    )?;
    let x2566: BytePoly_8 = bigint_add!(bigint_sub!(x2522, bigint_mul!(x2565, x2520, 8), 8), x6, 8);
    let x2567: BytePoly_8 = bigint_nondet_quot!(ctx, x2566, x6, 8);
    let x2568: BytePoly_4 = bigint_nondet_rem!(ctx, x2566, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2567, x6, 12), x2568, 12),
            x2566,
            12
        ),
        65028,
        4,
    )?;
    let x2569: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x2565, x2565, 8), x2520, 8), x6, 8),
            x15,
            8
        ),
        x6,
        8
    );
    let x2570: BytePoly_9 = bigint_nondet_quot!(ctx, x2569, x6, 9);
    let x2571: BytePoly_4 = bigint_nondet_rem!(ctx, x2569, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2570, x6, 13), x2571, 13),
            x2569,
            13
        ),
        73156,
        4,
    )?;
    let x2572: BytePoly_8 = bigint_mul!(x2565, x2571, 8);
    let x2573: BytePoly_9 = bigint_nondet_quot!(ctx, x2572, x6, 9);
    let x2574: BytePoly_4 = bigint_nondet_rem!(ctx, x2572, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2573, x6, 13), x2574, 13),
            x2572,
            13
        ),
        73156,
        4,
    )?;
    let x2575: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x2574, x2568, 4), 4), x6, 4);
    let x2576: BytePoly_4 = bigint_nondet_quot!(ctx, x2575, x6, 4);
    let x2577: BytePoly_4 = bigint_nondet_rem!(ctx, x2575, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2576, x6, 8), x2577, 8), x2575, 8),
        32515,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x2571, x10, 4), 34, 1)?;
    eqz(ctx, &bigint_sub!(x2577, bigint_sub!(x6, x11, 4), 4), 34, 1)?;
    let x2578: BytePoly_5 = bigint_nondet_inv!(ctx, x14, x9, 5);
    let x2579: BytePoly_10 = bigint_mul!(x14, x2578, 10);
    let x2580: BytePoly_12 = bigint_nondet_quot!(ctx, x2579, x9, 12);
    let x2581: BytePoly_5 = bigint_nondet_rem!(ctx, x2579, x9, 5);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2580, x9, 17), x2581, 17),
            x2579,
            17
        ),
        97540,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x2581, x3, 5), 34, 1)?;
    let x2582: BytePoly_10 = bigint_mul!(x12, x2578, 10);
    let x2583: BytePoly_12 = bigint_nondet_quot!(ctx, x2582, x9, 12);
    let x2584: BytePoly_5 = bigint_nondet_rem!(ctx, x2582, x9, 5);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2583, x9, 17), x2584, 17),
            x2582,
            17
        ),
        97540,
        4,
    )?;
    let x2585: BytePoly_10 = bigint_mul!(x13, x2578, 10);
    let x2586: BytePoly_12 = bigint_nondet_quot!(ctx, x2585, x9, 12);
    let x2587: BytePoly_5 = bigint_nondet_rem!(ctx, x2585, x9, 5);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2586, x9, 17), x2587, 17),
            x2585,
            17
        ),
        97540,
        4,
    )?;
    let x2588: BytePoly_9 = bigint_nondet_quot!(ctx, x24, x6, 9);
    let x2589: BytePoly_4 = bigint_nondet_rem!(ctx, x24, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2588, x6, 13), x2589, 13), x24, 13),
        73156,
        4,
    )?;
    let x2590: BytePoly_8 = bigint_sub!(
        x23,
        bigint_add!(bigint_add!(bigint_mul!(x15, x2589, 8), x27, 8), x4, 8),
        8
    );
    let x2591: BytePoly_9 = bigint_nondet_quot!(ctx, x2590, x6, 9);
    let x2592: BytePoly_4 = bigint_nondet_rem!(ctx, x2590, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2591, x6, 13), x2592, 13),
            x2590,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &x2592, 34, 1)?;
    let x2593: BytePoly_1 = bigint_nondet_rem!(ctx, x2584, x2, 1);
    let x2594: BytePoly_5 = bigint_nondet_quot!(ctx, x2584, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2594, x2, 6), x2593, 6), x2584, 6),
        40643,
        4,
    )?;
    let x2595: BytePoly_1 = bigint_sub!(x3, x2593, 1);
    eqz(ctx, &bigint_mul!(x2593, x2595, 2), 8131, 2)?;
    let x2596: BytePoly_4 = bigint_add!(bigint_sub!(x7, x15, 4), x6, 4);
    let x2597: BytePoly_4 = bigint_nondet_inv!(ctx, x2596, x6, 4);
    let x2598: BytePoly_8 = bigint_mul!(x2596, x2597, 8);
    let x2599: BytePoly_9 = bigint_nondet_quot!(ctx, x2598, x6, 9);
    let x2600: BytePoly_4 = bigint_nondet_rem!(ctx, x2598, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2599, x6, 13), x2600, 13),
            x2598,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x2600, x1, 4), 34, 1)?;
    let x2601: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x8, x16, 4), x6, 4), x2597, 8);
    let x2602: BytePoly_9 = bigint_nondet_quot!(ctx, x2601, x6, 9);
    let x2603: BytePoly_4 = bigint_nondet_rem!(ctx, x2601, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2602, x6, 13), x2603, 13),
            x2601,
            13
        ),
        73156,
        4,
    )?;
    let x2604: BytePoly_8 = bigint_add!(bigint_sub!(x16, bigint_mul!(x2603, x15, 8), 8), x6, 8);
    let x2605: BytePoly_8 = bigint_nondet_quot!(ctx, x2604, x6, 8);
    let x2606: BytePoly_4 = bigint_nondet_rem!(ctx, x2604, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2605, x6, 12), x2606, 12),
            x2604,
            12
        ),
        65028,
        4,
    )?;
    let x2607: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x2603, x2603, 8), x15, 8), x6, 8),
            x7,
            8
        ),
        x6,
        8
    );
    let x2608: BytePoly_9 = bigint_nondet_quot!(ctx, x2607, x6, 9);
    let x2609: BytePoly_4 = bigint_nondet_rem!(ctx, x2607, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2608, x6, 13), x2609, 13),
            x2607,
            13
        ),
        73156,
        4,
    )?;
    let x2610: BytePoly_8 = bigint_mul!(x2603, x2609, 8);
    let x2611: BytePoly_9 = bigint_nondet_quot!(ctx, x2610, x6, 9);
    let x2612: BytePoly_4 = bigint_nondet_rem!(ctx, x2610, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2611, x6, 13), x2612, 13),
            x2610,
            13
        ),
        73156,
        4,
    )?;
    let x2613: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x2612, x2606, 4), 4), x6, 4);
    let x2614: BytePoly_4 = bigint_nondet_quot!(ctx, x2613, x6, 4);
    let x2615: BytePoly_4 = bigint_nondet_rem!(ctx, x2613, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2614, x6, 8), x2615, 8), x2613, 8),
        32515,
        2,
    )?;
    let x2616: BytePoly_5 =
        bigint_add!(bigint_mul!(x2609, x2593, 5), bigint_mul!(x15, x2595, 5), 5);
    let x2617: BytePoly_5 =
        bigint_add!(bigint_mul!(x2615, x2593, 5), bigint_mul!(x16, x2595, 5), 5);
    let x2618: BytePoly_6 = bigint_nondet_quot!(ctx, x2616, x6, 6);
    let x2619: BytePoly_4 = bigint_nondet_rem!(ctx, x2616, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2618, x6, 10), x2619, 10),
            x2616,
            10
        ),
        48771,
        4,
    )?;
    let x2620: BytePoly_6 = bigint_nondet_quot!(ctx, x2617, x6, 6);
    let x2621: BytePoly_4 = bigint_nondet_rem!(ctx, x2617, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2620, x6, 10), x2621, 10),
            x2617,
            10
        ),
        48771,
        4,
    )?;
    let x2622: BytePoly_8 = bigint_mul!(x7, x7, 8);
    let x2623: BytePoly_9 = bigint_nondet_quot!(ctx, x2622, x6, 9);
    let x2624: BytePoly_4 = bigint_nondet_rem!(ctx, x2622, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2623, x6, 13), x2624, 13),
            x2622,
            13
        ),
        73156,
        4,
    )?;
    let x2625: BytePoly_5 = bigint_add!(bigint_mul!(x2624, x0, 5), x5, 5);
    let x2626: BytePoly_6 = bigint_nondet_quot!(ctx, x2625, x6, 6);
    let x2627: BytePoly_4 = bigint_nondet_rem!(ctx, x2625, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2626, x6, 10), x2627, 10),
            x2625,
            10
        ),
        48771,
        4,
    )?;
    let x2628: BytePoly_4 = bigint_add!(x8, x8, 4);
    let x2629: BytePoly_4 = bigint_nondet_quot!(ctx, x2628, x6, 4);
    let x2630: BytePoly_4 = bigint_nondet_rem!(ctx, x2628, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2629, x6, 8), x2630, 8), x2628, 8),
        32515,
        2,
    )?;
    let x2631: BytePoly_4 = bigint_nondet_inv!(ctx, x2630, x6, 4);
    let x2632: BytePoly_8 = bigint_mul!(x2630, x2631, 8);
    let x2633: BytePoly_9 = bigint_nondet_quot!(ctx, x2632, x6, 9);
    let x2634: BytePoly_4 = bigint_nondet_rem!(ctx, x2632, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2633, x6, 13), x2634, 13),
            x2632,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x2634, x3, 4), 34, 1)?;
    let x2635: BytePoly_8 = bigint_mul!(x2627, x2631, 8);
    let x2636: BytePoly_9 = bigint_nondet_quot!(ctx, x2635, x6, 9);
    let x2637: BytePoly_4 = bigint_nondet_rem!(ctx, x2635, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2636, x6, 13), x2637, 13),
            x2635,
            13
        ),
        73156,
        4,
    )?;
    let x2638: BytePoly_8 = bigint_mul!(x2637, x7, 8);
    let x2639: BytePoly_9 = bigint_nondet_quot!(ctx, x2638, x6, 9);
    let x2640: BytePoly_4 = bigint_nondet_rem!(ctx, x2638, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2639, x6, 13), x2640, 13),
            x2638,
            13
        ),
        73156,
        4,
    )?;
    let x2641: BytePoly_4 = bigint_add!(bigint_sub!(x8, x2640, 4), x6, 4);
    let x2642: BytePoly_4 = bigint_nondet_quot!(ctx, x2641, x6, 4);
    let x2643: BytePoly_4 = bigint_nondet_rem!(ctx, x2641, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2642, x6, 8), x2643, 8), x2641, 8),
        32515,
        2,
    )?;
    let x2644: BytePoly_8 = bigint_mul!(x2637, x2637, 8);
    let x2645: BytePoly_9 = bigint_nondet_quot!(ctx, x2644, x6, 9);
    let x2646: BytePoly_4 = bigint_nondet_rem!(ctx, x2644, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2645, x6, 13), x2646, 13),
            x2644,
            13
        ),
        73156,
        4,
    )?;
    let x2647: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2646, x7, 4), x6, 4), x7, 4),
        x6,
        4
    );
    let x2648: BytePoly_4 = bigint_nondet_quot!(ctx, x2647, x6, 4);
    let x2649: BytePoly_4 = bigint_nondet_rem!(ctx, x2647, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2648, x6, 8), x2649, 8), x2647, 8),
        32515,
        2,
    )?;
    let x2650: BytePoly_8 = bigint_mul!(x2637, x2649, 8);
    let x2651: BytePoly_9 = bigint_nondet_quot!(ctx, x2650, x6, 9);
    let x2652: BytePoly_4 = bigint_nondet_rem!(ctx, x2650, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2651, x6, 13), x2652, 13),
            x2650,
            13
        ),
        73156,
        4,
    )?;
    let x2653: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x2652, x2643, 4), 4), x6, 4);
    let x2654: BytePoly_4 = bigint_nondet_quot!(ctx, x2653, x6, 4);
    let x2655: BytePoly_4 = bigint_nondet_rem!(ctx, x2653, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2654, x6, 8), x2655, 8), x2653, 8),
        32515,
        2,
    )?;
    let x2656: BytePoly_1 = bigint_nondet_rem!(ctx, x2594, x2, 1);
    let x2657: BytePoly_5 = bigint_nondet_quot!(ctx, x2594, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2657, x2, 6), x2656, 6), x2594, 6),
        40643,
        4,
    )?;
    let x2658: BytePoly_1 = bigint_sub!(x3, x2656, 1);
    eqz(ctx, &bigint_mul!(x2656, x2658, 2), 8131, 2)?;
    let x2659: BytePoly_4 = bigint_add!(bigint_sub!(x2649, x2619, 4), x6, 4);
    let x2660: BytePoly_4 = bigint_nondet_inv!(ctx, x2659, x6, 4);
    let x2661: BytePoly_8 = bigint_mul!(x2659, x2660, 8);
    let x2662: BytePoly_9 = bigint_nondet_quot!(ctx, x2661, x6, 9);
    let x2663: BytePoly_4 = bigint_nondet_rem!(ctx, x2661, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2662, x6, 13), x2663, 13),
            x2661,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x2663, x1, 4), 34, 1)?;
    let x2664: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x2655, x2621, 4), x6, 4), x2660, 8);
    let x2665: BytePoly_9 = bigint_nondet_quot!(ctx, x2664, x6, 9);
    let x2666: BytePoly_4 = bigint_nondet_rem!(ctx, x2664, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2665, x6, 13), x2666, 13),
            x2664,
            13
        ),
        73156,
        4,
    )?;
    let x2667: BytePoly_8 = bigint_add!(bigint_sub!(x2621, bigint_mul!(x2666, x2619, 8), 8), x6, 8);
    let x2668: BytePoly_8 = bigint_nondet_quot!(ctx, x2667, x6, 8);
    let x2669: BytePoly_4 = bigint_nondet_rem!(ctx, x2667, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2668, x6, 12), x2669, 12),
            x2667,
            12
        ),
        65028,
        4,
    )?;
    let x2670: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x2666, x2666, 8), x2619, 8), x6, 8),
            x2649,
            8
        ),
        x6,
        8
    );
    let x2671: BytePoly_9 = bigint_nondet_quot!(ctx, x2670, x6, 9);
    let x2672: BytePoly_4 = bigint_nondet_rem!(ctx, x2670, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2671, x6, 13), x2672, 13),
            x2670,
            13
        ),
        73156,
        4,
    )?;
    let x2673: BytePoly_8 = bigint_mul!(x2666, x2672, 8);
    let x2674: BytePoly_9 = bigint_nondet_quot!(ctx, x2673, x6, 9);
    let x2675: BytePoly_4 = bigint_nondet_rem!(ctx, x2673, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2674, x6, 13), x2675, 13),
            x2673,
            13
        ),
        73156,
        4,
    )?;
    let x2676: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x2675, x2669, 4), 4), x6, 4);
    let x2677: BytePoly_4 = bigint_nondet_quot!(ctx, x2676, x6, 4);
    let x2678: BytePoly_4 = bigint_nondet_rem!(ctx, x2676, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2677, x6, 8), x2678, 8), x2676, 8),
        32515,
        2,
    )?;
    let x2679: BytePoly_5 = bigint_add!(
        bigint_mul!(x2672, x2656, 5),
        bigint_mul!(x2619, x2658, 5),
        5
    );
    let x2680: BytePoly_5 = bigint_add!(
        bigint_mul!(x2678, x2656, 5),
        bigint_mul!(x2621, x2658, 5),
        5
    );
    let x2681: BytePoly_6 = bigint_nondet_quot!(ctx, x2679, x6, 6);
    let x2682: BytePoly_4 = bigint_nondet_rem!(ctx, x2679, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2681, x6, 10), x2682, 10),
            x2679,
            10
        ),
        48771,
        4,
    )?;
    let x2683: BytePoly_6 = bigint_nondet_quot!(ctx, x2680, x6, 6);
    let x2684: BytePoly_4 = bigint_nondet_rem!(ctx, x2680, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2683, x6, 10), x2684, 10),
            x2680,
            10
        ),
        48771,
        4,
    )?;
    let x2685: BytePoly_8 = bigint_mul!(x2649, x2649, 8);
    let x2686: BytePoly_9 = bigint_nondet_quot!(ctx, x2685, x6, 9);
    let x2687: BytePoly_4 = bigint_nondet_rem!(ctx, x2685, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2686, x6, 13), x2687, 13),
            x2685,
            13
        ),
        73156,
        4,
    )?;
    let x2688: BytePoly_5 = bigint_add!(bigint_mul!(x2687, x0, 5), x5, 5);
    let x2689: BytePoly_6 = bigint_nondet_quot!(ctx, x2688, x6, 6);
    let x2690: BytePoly_4 = bigint_nondet_rem!(ctx, x2688, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2689, x6, 10), x2690, 10),
            x2688,
            10
        ),
        48771,
        4,
    )?;
    let x2691: BytePoly_4 = bigint_add!(x2655, x2655, 4);
    let x2692: BytePoly_4 = bigint_nondet_quot!(ctx, x2691, x6, 4);
    let x2693: BytePoly_4 = bigint_nondet_rem!(ctx, x2691, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2692, x6, 8), x2693, 8), x2691, 8),
        32515,
        2,
    )?;
    let x2694: BytePoly_4 = bigint_nondet_inv!(ctx, x2693, x6, 4);
    let x2695: BytePoly_8 = bigint_mul!(x2693, x2694, 8);
    let x2696: BytePoly_9 = bigint_nondet_quot!(ctx, x2695, x6, 9);
    let x2697: BytePoly_4 = bigint_nondet_rem!(ctx, x2695, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2696, x6, 13), x2697, 13),
            x2695,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x2697, x3, 4), 34, 1)?;
    let x2698: BytePoly_8 = bigint_mul!(x2690, x2694, 8);
    let x2699: BytePoly_9 = bigint_nondet_quot!(ctx, x2698, x6, 9);
    let x2700: BytePoly_4 = bigint_nondet_rem!(ctx, x2698, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2699, x6, 13), x2700, 13),
            x2698,
            13
        ),
        73156,
        4,
    )?;
    let x2701: BytePoly_8 = bigint_mul!(x2700, x2649, 8);
    let x2702: BytePoly_9 = bigint_nondet_quot!(ctx, x2701, x6, 9);
    let x2703: BytePoly_4 = bigint_nondet_rem!(ctx, x2701, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2702, x6, 13), x2703, 13),
            x2701,
            13
        ),
        73156,
        4,
    )?;
    let x2704: BytePoly_4 = bigint_add!(bigint_sub!(x2655, x2703, 4), x6, 4);
    let x2705: BytePoly_4 = bigint_nondet_quot!(ctx, x2704, x6, 4);
    let x2706: BytePoly_4 = bigint_nondet_rem!(ctx, x2704, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2705, x6, 8), x2706, 8), x2704, 8),
        32515,
        2,
    )?;
    let x2707: BytePoly_8 = bigint_mul!(x2700, x2700, 8);
    let x2708: BytePoly_9 = bigint_nondet_quot!(ctx, x2707, x6, 9);
    let x2709: BytePoly_4 = bigint_nondet_rem!(ctx, x2707, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2708, x6, 13), x2709, 13),
            x2707,
            13
        ),
        73156,
        4,
    )?;
    let x2710: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2709, x2649, 4), x6, 4), x2649, 4),
        x6,
        4
    );
    let x2711: BytePoly_4 = bigint_nondet_quot!(ctx, x2710, x6, 4);
    let x2712: BytePoly_4 = bigint_nondet_rem!(ctx, x2710, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2711, x6, 8), x2712, 8), x2710, 8),
        32515,
        2,
    )?;
    let x2713: BytePoly_8 = bigint_mul!(x2700, x2712, 8);
    let x2714: BytePoly_9 = bigint_nondet_quot!(ctx, x2713, x6, 9);
    let x2715: BytePoly_4 = bigint_nondet_rem!(ctx, x2713, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2714, x6, 13), x2715, 13),
            x2713,
            13
        ),
        73156,
        4,
    )?;
    let x2716: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x2715, x2706, 4), 4), x6, 4);
    let x2717: BytePoly_4 = bigint_nondet_quot!(ctx, x2716, x6, 4);
    let x2718: BytePoly_4 = bigint_nondet_rem!(ctx, x2716, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2717, x6, 8), x2718, 8), x2716, 8),
        32515,
        2,
    )?;
    let x2719: BytePoly_1 = bigint_nondet_rem!(ctx, x2657, x2, 1);
    let x2720: BytePoly_5 = bigint_nondet_quot!(ctx, x2657, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2720, x2, 6), x2719, 6), x2657, 6),
        40643,
        4,
    )?;
    let x2721: BytePoly_1 = bigint_sub!(x3, x2719, 1);
    eqz(ctx, &bigint_mul!(x2719, x2721, 2), 8131, 2)?;
    let x2722: BytePoly_4 = bigint_add!(bigint_sub!(x2712, x2682, 4), x6, 4);
    let x2723: BytePoly_4 = bigint_nondet_inv!(ctx, x2722, x6, 4);
    let x2724: BytePoly_8 = bigint_mul!(x2722, x2723, 8);
    let x2725: BytePoly_9 = bigint_nondet_quot!(ctx, x2724, x6, 9);
    let x2726: BytePoly_4 = bigint_nondet_rem!(ctx, x2724, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2725, x6, 13), x2726, 13),
            x2724,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x2726, x1, 4), 34, 1)?;
    let x2727: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x2718, x2684, 4), x6, 4), x2723, 8);
    let x2728: BytePoly_9 = bigint_nondet_quot!(ctx, x2727, x6, 9);
    let x2729: BytePoly_4 = bigint_nondet_rem!(ctx, x2727, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2728, x6, 13), x2729, 13),
            x2727,
            13
        ),
        73156,
        4,
    )?;
    let x2730: BytePoly_8 = bigint_add!(bigint_sub!(x2684, bigint_mul!(x2729, x2682, 8), 8), x6, 8);
    let x2731: BytePoly_8 = bigint_nondet_quot!(ctx, x2730, x6, 8);
    let x2732: BytePoly_4 = bigint_nondet_rem!(ctx, x2730, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2731, x6, 12), x2732, 12),
            x2730,
            12
        ),
        65028,
        4,
    )?;
    let x2733: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x2729, x2729, 8), x2682, 8), x6, 8),
            x2712,
            8
        ),
        x6,
        8
    );
    let x2734: BytePoly_9 = bigint_nondet_quot!(ctx, x2733, x6, 9);
    let x2735: BytePoly_4 = bigint_nondet_rem!(ctx, x2733, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2734, x6, 13), x2735, 13),
            x2733,
            13
        ),
        73156,
        4,
    )?;
    let x2736: BytePoly_8 = bigint_mul!(x2729, x2735, 8);
    let x2737: BytePoly_9 = bigint_nondet_quot!(ctx, x2736, x6, 9);
    let x2738: BytePoly_4 = bigint_nondet_rem!(ctx, x2736, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2737, x6, 13), x2738, 13),
            x2736,
            13
        ),
        73156,
        4,
    )?;
    let x2739: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x2738, x2732, 4), 4), x6, 4);
    let x2740: BytePoly_4 = bigint_nondet_quot!(ctx, x2739, x6, 4);
    let x2741: BytePoly_4 = bigint_nondet_rem!(ctx, x2739, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2740, x6, 8), x2741, 8), x2739, 8),
        32515,
        2,
    )?;
    let x2742: BytePoly_5 = bigint_add!(
        bigint_mul!(x2735, x2719, 5),
        bigint_mul!(x2682, x2721, 5),
        5
    );
    let x2743: BytePoly_5 = bigint_add!(
        bigint_mul!(x2741, x2719, 5),
        bigint_mul!(x2684, x2721, 5),
        5
    );
    let x2744: BytePoly_6 = bigint_nondet_quot!(ctx, x2742, x6, 6);
    let x2745: BytePoly_4 = bigint_nondet_rem!(ctx, x2742, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2744, x6, 10), x2745, 10),
            x2742,
            10
        ),
        48771,
        4,
    )?;
    let x2746: BytePoly_6 = bigint_nondet_quot!(ctx, x2743, x6, 6);
    let x2747: BytePoly_4 = bigint_nondet_rem!(ctx, x2743, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2746, x6, 10), x2747, 10),
            x2743,
            10
        ),
        48771,
        4,
    )?;
    let x2748: BytePoly_8 = bigint_mul!(x2712, x2712, 8);
    let x2749: BytePoly_9 = bigint_nondet_quot!(ctx, x2748, x6, 9);
    let x2750: BytePoly_4 = bigint_nondet_rem!(ctx, x2748, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2749, x6, 13), x2750, 13),
            x2748,
            13
        ),
        73156,
        4,
    )?;
    let x2751: BytePoly_5 = bigint_add!(bigint_mul!(x2750, x0, 5), x5, 5);
    let x2752: BytePoly_6 = bigint_nondet_quot!(ctx, x2751, x6, 6);
    let x2753: BytePoly_4 = bigint_nondet_rem!(ctx, x2751, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2752, x6, 10), x2753, 10),
            x2751,
            10
        ),
        48771,
        4,
    )?;
    let x2754: BytePoly_4 = bigint_add!(x2718, x2718, 4);
    let x2755: BytePoly_4 = bigint_nondet_quot!(ctx, x2754, x6, 4);
    let x2756: BytePoly_4 = bigint_nondet_rem!(ctx, x2754, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2755, x6, 8), x2756, 8), x2754, 8),
        32515,
        2,
    )?;
    let x2757: BytePoly_4 = bigint_nondet_inv!(ctx, x2756, x6, 4);
    let x2758: BytePoly_8 = bigint_mul!(x2756, x2757, 8);
    let x2759: BytePoly_9 = bigint_nondet_quot!(ctx, x2758, x6, 9);
    let x2760: BytePoly_4 = bigint_nondet_rem!(ctx, x2758, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2759, x6, 13), x2760, 13),
            x2758,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x2760, x3, 4), 34, 1)?;
    let x2761: BytePoly_8 = bigint_mul!(x2753, x2757, 8);
    let x2762: BytePoly_9 = bigint_nondet_quot!(ctx, x2761, x6, 9);
    let x2763: BytePoly_4 = bigint_nondet_rem!(ctx, x2761, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2762, x6, 13), x2763, 13),
            x2761,
            13
        ),
        73156,
        4,
    )?;
    let x2764: BytePoly_8 = bigint_mul!(x2763, x2712, 8);
    let x2765: BytePoly_9 = bigint_nondet_quot!(ctx, x2764, x6, 9);
    let x2766: BytePoly_4 = bigint_nondet_rem!(ctx, x2764, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2765, x6, 13), x2766, 13),
            x2764,
            13
        ),
        73156,
        4,
    )?;
    let x2767: BytePoly_4 = bigint_add!(bigint_sub!(x2718, x2766, 4), x6, 4);
    let x2768: BytePoly_4 = bigint_nondet_quot!(ctx, x2767, x6, 4);
    let x2769: BytePoly_4 = bigint_nondet_rem!(ctx, x2767, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2768, x6, 8), x2769, 8), x2767, 8),
        32515,
        2,
    )?;
    let x2770: BytePoly_8 = bigint_mul!(x2763, x2763, 8);
    let x2771: BytePoly_9 = bigint_nondet_quot!(ctx, x2770, x6, 9);
    let x2772: BytePoly_4 = bigint_nondet_rem!(ctx, x2770, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2771, x6, 13), x2772, 13),
            x2770,
            13
        ),
        73156,
        4,
    )?;
    let x2773: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2772, x2712, 4), x6, 4), x2712, 4),
        x6,
        4
    );
    let x2774: BytePoly_4 = bigint_nondet_quot!(ctx, x2773, x6, 4);
    let x2775: BytePoly_4 = bigint_nondet_rem!(ctx, x2773, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2774, x6, 8), x2775, 8), x2773, 8),
        32515,
        2,
    )?;
    let x2776: BytePoly_8 = bigint_mul!(x2763, x2775, 8);
    let x2777: BytePoly_9 = bigint_nondet_quot!(ctx, x2776, x6, 9);
    let x2778: BytePoly_4 = bigint_nondet_rem!(ctx, x2776, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2777, x6, 13), x2778, 13),
            x2776,
            13
        ),
        73156,
        4,
    )?;
    let x2779: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x2778, x2769, 4), 4), x6, 4);
    let x2780: BytePoly_4 = bigint_nondet_quot!(ctx, x2779, x6, 4);
    let x2781: BytePoly_4 = bigint_nondet_rem!(ctx, x2779, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2780, x6, 8), x2781, 8), x2779, 8),
        32515,
        2,
    )?;
    let x2782: BytePoly_1 = bigint_nondet_rem!(ctx, x2720, x2, 1);
    let x2783: BytePoly_5 = bigint_nondet_quot!(ctx, x2720, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2783, x2, 6), x2782, 6), x2720, 6),
        40643,
        4,
    )?;
    let x2784: BytePoly_1 = bigint_sub!(x3, x2782, 1);
    eqz(ctx, &bigint_mul!(x2782, x2784, 2), 8131, 2)?;
    let x2785: BytePoly_4 = bigint_add!(bigint_sub!(x2775, x2745, 4), x6, 4);
    let x2786: BytePoly_4 = bigint_nondet_inv!(ctx, x2785, x6, 4);
    let x2787: BytePoly_8 = bigint_mul!(x2785, x2786, 8);
    let x2788: BytePoly_9 = bigint_nondet_quot!(ctx, x2787, x6, 9);
    let x2789: BytePoly_4 = bigint_nondet_rem!(ctx, x2787, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2788, x6, 13), x2789, 13),
            x2787,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x2789, x1, 4), 34, 1)?;
    let x2790: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x2781, x2747, 4), x6, 4), x2786, 8);
    let x2791: BytePoly_9 = bigint_nondet_quot!(ctx, x2790, x6, 9);
    let x2792: BytePoly_4 = bigint_nondet_rem!(ctx, x2790, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2791, x6, 13), x2792, 13),
            x2790,
            13
        ),
        73156,
        4,
    )?;
    let x2793: BytePoly_8 = bigint_add!(bigint_sub!(x2747, bigint_mul!(x2792, x2745, 8), 8), x6, 8);
    let x2794: BytePoly_8 = bigint_nondet_quot!(ctx, x2793, x6, 8);
    let x2795: BytePoly_4 = bigint_nondet_rem!(ctx, x2793, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2794, x6, 12), x2795, 12),
            x2793,
            12
        ),
        65028,
        4,
    )?;
    let x2796: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x2792, x2792, 8), x2745, 8), x6, 8),
            x2775,
            8
        ),
        x6,
        8
    );
    let x2797: BytePoly_9 = bigint_nondet_quot!(ctx, x2796, x6, 9);
    let x2798: BytePoly_4 = bigint_nondet_rem!(ctx, x2796, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2797, x6, 13), x2798, 13),
            x2796,
            13
        ),
        73156,
        4,
    )?;
    let x2799: BytePoly_8 = bigint_mul!(x2792, x2798, 8);
    let x2800: BytePoly_9 = bigint_nondet_quot!(ctx, x2799, x6, 9);
    let x2801: BytePoly_4 = bigint_nondet_rem!(ctx, x2799, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2800, x6, 13), x2801, 13),
            x2799,
            13
        ),
        73156,
        4,
    )?;
    let x2802: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x2801, x2795, 4), 4), x6, 4);
    let x2803: BytePoly_4 = bigint_nondet_quot!(ctx, x2802, x6, 4);
    let x2804: BytePoly_4 = bigint_nondet_rem!(ctx, x2802, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2803, x6, 8), x2804, 8), x2802, 8),
        32515,
        2,
    )?;
    let x2805: BytePoly_5 = bigint_add!(
        bigint_mul!(x2798, x2782, 5),
        bigint_mul!(x2745, x2784, 5),
        5
    );
    let x2806: BytePoly_5 = bigint_add!(
        bigint_mul!(x2804, x2782, 5),
        bigint_mul!(x2747, x2784, 5),
        5
    );
    let x2807: BytePoly_6 = bigint_nondet_quot!(ctx, x2805, x6, 6);
    let x2808: BytePoly_4 = bigint_nondet_rem!(ctx, x2805, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2807, x6, 10), x2808, 10),
            x2805,
            10
        ),
        48771,
        4,
    )?;
    let x2809: BytePoly_6 = bigint_nondet_quot!(ctx, x2806, x6, 6);
    let x2810: BytePoly_4 = bigint_nondet_rem!(ctx, x2806, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2809, x6, 10), x2810, 10),
            x2806,
            10
        ),
        48771,
        4,
    )?;
    let x2811: BytePoly_8 = bigint_mul!(x2775, x2775, 8);
    let x2812: BytePoly_9 = bigint_nondet_quot!(ctx, x2811, x6, 9);
    let x2813: BytePoly_4 = bigint_nondet_rem!(ctx, x2811, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2812, x6, 13), x2813, 13),
            x2811,
            13
        ),
        73156,
        4,
    )?;
    let x2814: BytePoly_5 = bigint_add!(bigint_mul!(x2813, x0, 5), x5, 5);
    let x2815: BytePoly_6 = bigint_nondet_quot!(ctx, x2814, x6, 6);
    let x2816: BytePoly_4 = bigint_nondet_rem!(ctx, x2814, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2815, x6, 10), x2816, 10),
            x2814,
            10
        ),
        48771,
        4,
    )?;
    let x2817: BytePoly_4 = bigint_add!(x2781, x2781, 4);
    let x2818: BytePoly_4 = bigint_nondet_quot!(ctx, x2817, x6, 4);
    let x2819: BytePoly_4 = bigint_nondet_rem!(ctx, x2817, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2818, x6, 8), x2819, 8), x2817, 8),
        32515,
        2,
    )?;
    let x2820: BytePoly_4 = bigint_nondet_inv!(ctx, x2819, x6, 4);
    let x2821: BytePoly_8 = bigint_mul!(x2819, x2820, 8);
    let x2822: BytePoly_9 = bigint_nondet_quot!(ctx, x2821, x6, 9);
    let x2823: BytePoly_4 = bigint_nondet_rem!(ctx, x2821, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2822, x6, 13), x2823, 13),
            x2821,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x2823, x3, 4), 34, 1)?;
    let x2824: BytePoly_8 = bigint_mul!(x2816, x2820, 8);
    let x2825: BytePoly_9 = bigint_nondet_quot!(ctx, x2824, x6, 9);
    let x2826: BytePoly_4 = bigint_nondet_rem!(ctx, x2824, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2825, x6, 13), x2826, 13),
            x2824,
            13
        ),
        73156,
        4,
    )?;
    let x2827: BytePoly_8 = bigint_mul!(x2826, x2775, 8);
    let x2828: BytePoly_9 = bigint_nondet_quot!(ctx, x2827, x6, 9);
    let x2829: BytePoly_4 = bigint_nondet_rem!(ctx, x2827, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2828, x6, 13), x2829, 13),
            x2827,
            13
        ),
        73156,
        4,
    )?;
    let x2830: BytePoly_4 = bigint_add!(bigint_sub!(x2781, x2829, 4), x6, 4);
    let x2831: BytePoly_4 = bigint_nondet_quot!(ctx, x2830, x6, 4);
    let x2832: BytePoly_4 = bigint_nondet_rem!(ctx, x2830, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2831, x6, 8), x2832, 8), x2830, 8),
        32515,
        2,
    )?;
    let x2833: BytePoly_8 = bigint_mul!(x2826, x2826, 8);
    let x2834: BytePoly_9 = bigint_nondet_quot!(ctx, x2833, x6, 9);
    let x2835: BytePoly_4 = bigint_nondet_rem!(ctx, x2833, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2834, x6, 13), x2835, 13),
            x2833,
            13
        ),
        73156,
        4,
    )?;
    let x2836: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2835, x2775, 4), x6, 4), x2775, 4),
        x6,
        4
    );
    let x2837: BytePoly_4 = bigint_nondet_quot!(ctx, x2836, x6, 4);
    let x2838: BytePoly_4 = bigint_nondet_rem!(ctx, x2836, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2837, x6, 8), x2838, 8), x2836, 8),
        32515,
        2,
    )?;
    let x2839: BytePoly_8 = bigint_mul!(x2826, x2838, 8);
    let x2840: BytePoly_9 = bigint_nondet_quot!(ctx, x2839, x6, 9);
    let x2841: BytePoly_4 = bigint_nondet_rem!(ctx, x2839, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2840, x6, 13), x2841, 13),
            x2839,
            13
        ),
        73156,
        4,
    )?;
    let x2842: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x2841, x2832, 4), 4), x6, 4);
    let x2843: BytePoly_4 = bigint_nondet_quot!(ctx, x2842, x6, 4);
    let x2844: BytePoly_4 = bigint_nondet_rem!(ctx, x2842, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2843, x6, 8), x2844, 8), x2842, 8),
        32515,
        2,
    )?;
    let x2845: BytePoly_1 = bigint_nondet_rem!(ctx, x2783, x2, 1);
    let x2846: BytePoly_5 = bigint_nondet_quot!(ctx, x2783, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2846, x2, 6), x2845, 6), x2783, 6),
        40643,
        4,
    )?;
    let x2847: BytePoly_1 = bigint_sub!(x3, x2845, 1);
    eqz(ctx, &bigint_mul!(x2845, x2847, 2), 8131, 2)?;
    let x2848: BytePoly_4 = bigint_add!(bigint_sub!(x2838, x2808, 4), x6, 4);
    let x2849: BytePoly_4 = bigint_nondet_inv!(ctx, x2848, x6, 4);
    let x2850: BytePoly_8 = bigint_mul!(x2848, x2849, 8);
    let x2851: BytePoly_9 = bigint_nondet_quot!(ctx, x2850, x6, 9);
    let x2852: BytePoly_4 = bigint_nondet_rem!(ctx, x2850, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2851, x6, 13), x2852, 13),
            x2850,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x2852, x1, 4), 34, 1)?;
    let x2853: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x2844, x2810, 4), x6, 4), x2849, 8);
    let x2854: BytePoly_9 = bigint_nondet_quot!(ctx, x2853, x6, 9);
    let x2855: BytePoly_4 = bigint_nondet_rem!(ctx, x2853, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2854, x6, 13), x2855, 13),
            x2853,
            13
        ),
        73156,
        4,
    )?;
    let x2856: BytePoly_8 = bigint_add!(bigint_sub!(x2810, bigint_mul!(x2855, x2808, 8), 8), x6, 8);
    let x2857: BytePoly_8 = bigint_nondet_quot!(ctx, x2856, x6, 8);
    let x2858: BytePoly_4 = bigint_nondet_rem!(ctx, x2856, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2857, x6, 12), x2858, 12),
            x2856,
            12
        ),
        65028,
        4,
    )?;
    let x2859: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x2855, x2855, 8), x2808, 8), x6, 8),
            x2838,
            8
        ),
        x6,
        8
    );
    let x2860: BytePoly_9 = bigint_nondet_quot!(ctx, x2859, x6, 9);
    let x2861: BytePoly_4 = bigint_nondet_rem!(ctx, x2859, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2860, x6, 13), x2861, 13),
            x2859,
            13
        ),
        73156,
        4,
    )?;
    let x2862: BytePoly_8 = bigint_mul!(x2855, x2861, 8);
    let x2863: BytePoly_9 = bigint_nondet_quot!(ctx, x2862, x6, 9);
    let x2864: BytePoly_4 = bigint_nondet_rem!(ctx, x2862, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2863, x6, 13), x2864, 13),
            x2862,
            13
        ),
        73156,
        4,
    )?;
    let x2865: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x2864, x2858, 4), 4), x6, 4);
    let x2866: BytePoly_4 = bigint_nondet_quot!(ctx, x2865, x6, 4);
    let x2867: BytePoly_4 = bigint_nondet_rem!(ctx, x2865, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2866, x6, 8), x2867, 8), x2865, 8),
        32515,
        2,
    )?;
    let x2868: BytePoly_5 = bigint_add!(
        bigint_mul!(x2861, x2845, 5),
        bigint_mul!(x2808, x2847, 5),
        5
    );
    let x2869: BytePoly_5 = bigint_add!(
        bigint_mul!(x2867, x2845, 5),
        bigint_mul!(x2810, x2847, 5),
        5
    );
    let x2870: BytePoly_6 = bigint_nondet_quot!(ctx, x2868, x6, 6);
    let x2871: BytePoly_4 = bigint_nondet_rem!(ctx, x2868, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2870, x6, 10), x2871, 10),
            x2868,
            10
        ),
        48771,
        4,
    )?;
    let x2872: BytePoly_6 = bigint_nondet_quot!(ctx, x2869, x6, 6);
    let x2873: BytePoly_4 = bigint_nondet_rem!(ctx, x2869, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2872, x6, 10), x2873, 10),
            x2869,
            10
        ),
        48771,
        4,
    )?;
    let x2874: BytePoly_8 = bigint_mul!(x2838, x2838, 8);
    let x2875: BytePoly_9 = bigint_nondet_quot!(ctx, x2874, x6, 9);
    let x2876: BytePoly_4 = bigint_nondet_rem!(ctx, x2874, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2875, x6, 13), x2876, 13),
            x2874,
            13
        ),
        73156,
        4,
    )?;
    let x2877: BytePoly_5 = bigint_add!(bigint_mul!(x2876, x0, 5), x5, 5);
    let x2878: BytePoly_6 = bigint_nondet_quot!(ctx, x2877, x6, 6);
    let x2879: BytePoly_4 = bigint_nondet_rem!(ctx, x2877, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2878, x6, 10), x2879, 10),
            x2877,
            10
        ),
        48771,
        4,
    )?;
    let x2880: BytePoly_4 = bigint_add!(x2844, x2844, 4);
    let x2881: BytePoly_4 = bigint_nondet_quot!(ctx, x2880, x6, 4);
    let x2882: BytePoly_4 = bigint_nondet_rem!(ctx, x2880, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2881, x6, 8), x2882, 8), x2880, 8),
        32515,
        2,
    )?;
    let x2883: BytePoly_4 = bigint_nondet_inv!(ctx, x2882, x6, 4);
    let x2884: BytePoly_8 = bigint_mul!(x2882, x2883, 8);
    let x2885: BytePoly_9 = bigint_nondet_quot!(ctx, x2884, x6, 9);
    let x2886: BytePoly_4 = bigint_nondet_rem!(ctx, x2884, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2885, x6, 13), x2886, 13),
            x2884,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x2886, x3, 4), 34, 1)?;
    let x2887: BytePoly_8 = bigint_mul!(x2879, x2883, 8);
    let x2888: BytePoly_9 = bigint_nondet_quot!(ctx, x2887, x6, 9);
    let x2889: BytePoly_4 = bigint_nondet_rem!(ctx, x2887, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2888, x6, 13), x2889, 13),
            x2887,
            13
        ),
        73156,
        4,
    )?;
    let x2890: BytePoly_8 = bigint_mul!(x2889, x2838, 8);
    let x2891: BytePoly_9 = bigint_nondet_quot!(ctx, x2890, x6, 9);
    let x2892: BytePoly_4 = bigint_nondet_rem!(ctx, x2890, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2891, x6, 13), x2892, 13),
            x2890,
            13
        ),
        73156,
        4,
    )?;
    let x2893: BytePoly_4 = bigint_add!(bigint_sub!(x2844, x2892, 4), x6, 4);
    let x2894: BytePoly_4 = bigint_nondet_quot!(ctx, x2893, x6, 4);
    let x2895: BytePoly_4 = bigint_nondet_rem!(ctx, x2893, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2894, x6, 8), x2895, 8), x2893, 8),
        32515,
        2,
    )?;
    let x2896: BytePoly_8 = bigint_mul!(x2889, x2889, 8);
    let x2897: BytePoly_9 = bigint_nondet_quot!(ctx, x2896, x6, 9);
    let x2898: BytePoly_4 = bigint_nondet_rem!(ctx, x2896, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2897, x6, 13), x2898, 13),
            x2896,
            13
        ),
        73156,
        4,
    )?;
    let x2899: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2898, x2838, 4), x6, 4), x2838, 4),
        x6,
        4
    );
    let x2900: BytePoly_4 = bigint_nondet_quot!(ctx, x2899, x6, 4);
    let x2901: BytePoly_4 = bigint_nondet_rem!(ctx, x2899, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2900, x6, 8), x2901, 8), x2899, 8),
        32515,
        2,
    )?;
    let x2902: BytePoly_8 = bigint_mul!(x2889, x2901, 8);
    let x2903: BytePoly_9 = bigint_nondet_quot!(ctx, x2902, x6, 9);
    let x2904: BytePoly_4 = bigint_nondet_rem!(ctx, x2902, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2903, x6, 13), x2904, 13),
            x2902,
            13
        ),
        73156,
        4,
    )?;
    let x2905: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x2904, x2895, 4), 4), x6, 4);
    let x2906: BytePoly_4 = bigint_nondet_quot!(ctx, x2905, x6, 4);
    let x2907: BytePoly_4 = bigint_nondet_rem!(ctx, x2905, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2906, x6, 8), x2907, 8), x2905, 8),
        32515,
        2,
    )?;
    let x2908: BytePoly_1 = bigint_nondet_rem!(ctx, x2846, x2, 1);
    let x2909: BytePoly_5 = bigint_nondet_quot!(ctx, x2846, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2909, x2, 6), x2908, 6), x2846, 6),
        40643,
        4,
    )?;
    let x2910: BytePoly_1 = bigint_sub!(x3, x2908, 1);
    eqz(ctx, &bigint_mul!(x2908, x2910, 2), 8131, 2)?;
    let x2911: BytePoly_4 = bigint_add!(bigint_sub!(x2901, x2871, 4), x6, 4);
    let x2912: BytePoly_4 = bigint_nondet_inv!(ctx, x2911, x6, 4);
    let x2913: BytePoly_8 = bigint_mul!(x2911, x2912, 8);
    let x2914: BytePoly_9 = bigint_nondet_quot!(ctx, x2913, x6, 9);
    let x2915: BytePoly_4 = bigint_nondet_rem!(ctx, x2913, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2914, x6, 13), x2915, 13),
            x2913,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x2915, x1, 4), 34, 1)?;
    let x2916: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x2907, x2873, 4), x6, 4), x2912, 8);
    let x2917: BytePoly_9 = bigint_nondet_quot!(ctx, x2916, x6, 9);
    let x2918: BytePoly_4 = bigint_nondet_rem!(ctx, x2916, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2917, x6, 13), x2918, 13),
            x2916,
            13
        ),
        73156,
        4,
    )?;
    let x2919: BytePoly_8 = bigint_add!(bigint_sub!(x2873, bigint_mul!(x2918, x2871, 8), 8), x6, 8);
    let x2920: BytePoly_8 = bigint_nondet_quot!(ctx, x2919, x6, 8);
    let x2921: BytePoly_4 = bigint_nondet_rem!(ctx, x2919, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2920, x6, 12), x2921, 12),
            x2919,
            12
        ),
        65028,
        4,
    )?;
    let x2922: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x2918, x2918, 8), x2871, 8), x6, 8),
            x2901,
            8
        ),
        x6,
        8
    );
    let x2923: BytePoly_9 = bigint_nondet_quot!(ctx, x2922, x6, 9);
    let x2924: BytePoly_4 = bigint_nondet_rem!(ctx, x2922, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2923, x6, 13), x2924, 13),
            x2922,
            13
        ),
        73156,
        4,
    )?;
    let x2925: BytePoly_8 = bigint_mul!(x2918, x2924, 8);
    let x2926: BytePoly_9 = bigint_nondet_quot!(ctx, x2925, x6, 9);
    let x2927: BytePoly_4 = bigint_nondet_rem!(ctx, x2925, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2926, x6, 13), x2927, 13),
            x2925,
            13
        ),
        73156,
        4,
    )?;
    let x2928: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x2927, x2921, 4), 4), x6, 4);
    let x2929: BytePoly_4 = bigint_nondet_quot!(ctx, x2928, x6, 4);
    let x2930: BytePoly_4 = bigint_nondet_rem!(ctx, x2928, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2929, x6, 8), x2930, 8), x2928, 8),
        32515,
        2,
    )?;
    let x2931: BytePoly_5 = bigint_add!(
        bigint_mul!(x2924, x2908, 5),
        bigint_mul!(x2871, x2910, 5),
        5
    );
    let x2932: BytePoly_5 = bigint_add!(
        bigint_mul!(x2930, x2908, 5),
        bigint_mul!(x2873, x2910, 5),
        5
    );
    let x2933: BytePoly_6 = bigint_nondet_quot!(ctx, x2931, x6, 6);
    let x2934: BytePoly_4 = bigint_nondet_rem!(ctx, x2931, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2933, x6, 10), x2934, 10),
            x2931,
            10
        ),
        48771,
        4,
    )?;
    let x2935: BytePoly_6 = bigint_nondet_quot!(ctx, x2932, x6, 6);
    let x2936: BytePoly_4 = bigint_nondet_rem!(ctx, x2932, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2935, x6, 10), x2936, 10),
            x2932,
            10
        ),
        48771,
        4,
    )?;
    let x2937: BytePoly_8 = bigint_mul!(x2901, x2901, 8);
    let x2938: BytePoly_9 = bigint_nondet_quot!(ctx, x2937, x6, 9);
    let x2939: BytePoly_4 = bigint_nondet_rem!(ctx, x2937, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2938, x6, 13), x2939, 13),
            x2937,
            13
        ),
        73156,
        4,
    )?;
    let x2940: BytePoly_5 = bigint_add!(bigint_mul!(x2939, x0, 5), x5, 5);
    let x2941: BytePoly_6 = bigint_nondet_quot!(ctx, x2940, x6, 6);
    let x2942: BytePoly_4 = bigint_nondet_rem!(ctx, x2940, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2941, x6, 10), x2942, 10),
            x2940,
            10
        ),
        48771,
        4,
    )?;
    let x2943: BytePoly_4 = bigint_add!(x2907, x2907, 4);
    let x2944: BytePoly_4 = bigint_nondet_quot!(ctx, x2943, x6, 4);
    let x2945: BytePoly_4 = bigint_nondet_rem!(ctx, x2943, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2944, x6, 8), x2945, 8), x2943, 8),
        32515,
        2,
    )?;
    let x2946: BytePoly_4 = bigint_nondet_inv!(ctx, x2945, x6, 4);
    let x2947: BytePoly_8 = bigint_mul!(x2945, x2946, 8);
    let x2948: BytePoly_9 = bigint_nondet_quot!(ctx, x2947, x6, 9);
    let x2949: BytePoly_4 = bigint_nondet_rem!(ctx, x2947, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2948, x6, 13), x2949, 13),
            x2947,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x2949, x3, 4), 34, 1)?;
    let x2950: BytePoly_8 = bigint_mul!(x2942, x2946, 8);
    let x2951: BytePoly_9 = bigint_nondet_quot!(ctx, x2950, x6, 9);
    let x2952: BytePoly_4 = bigint_nondet_rem!(ctx, x2950, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2951, x6, 13), x2952, 13),
            x2950,
            13
        ),
        73156,
        4,
    )?;
    let x2953: BytePoly_8 = bigint_mul!(x2952, x2901, 8);
    let x2954: BytePoly_9 = bigint_nondet_quot!(ctx, x2953, x6, 9);
    let x2955: BytePoly_4 = bigint_nondet_rem!(ctx, x2953, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2954, x6, 13), x2955, 13),
            x2953,
            13
        ),
        73156,
        4,
    )?;
    let x2956: BytePoly_4 = bigint_add!(bigint_sub!(x2907, x2955, 4), x6, 4);
    let x2957: BytePoly_4 = bigint_nondet_quot!(ctx, x2956, x6, 4);
    let x2958: BytePoly_4 = bigint_nondet_rem!(ctx, x2956, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2957, x6, 8), x2958, 8), x2956, 8),
        32515,
        2,
    )?;
    let x2959: BytePoly_8 = bigint_mul!(x2952, x2952, 8);
    let x2960: BytePoly_9 = bigint_nondet_quot!(ctx, x2959, x6, 9);
    let x2961: BytePoly_4 = bigint_nondet_rem!(ctx, x2959, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2960, x6, 13), x2961, 13),
            x2959,
            13
        ),
        73156,
        4,
    )?;
    let x2962: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2961, x2901, 4), x6, 4), x2901, 4),
        x6,
        4
    );
    let x2963: BytePoly_4 = bigint_nondet_quot!(ctx, x2962, x6, 4);
    let x2964: BytePoly_4 = bigint_nondet_rem!(ctx, x2962, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2963, x6, 8), x2964, 8), x2962, 8),
        32515,
        2,
    )?;
    let x2965: BytePoly_8 = bigint_mul!(x2952, x2964, 8);
    let x2966: BytePoly_9 = bigint_nondet_quot!(ctx, x2965, x6, 9);
    let x2967: BytePoly_4 = bigint_nondet_rem!(ctx, x2965, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2966, x6, 13), x2967, 13),
            x2965,
            13
        ),
        73156,
        4,
    )?;
    let x2968: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x2967, x2958, 4), 4), x6, 4);
    let x2969: BytePoly_4 = bigint_nondet_quot!(ctx, x2968, x6, 4);
    let x2970: BytePoly_4 = bigint_nondet_rem!(ctx, x2968, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2969, x6, 8), x2970, 8), x2968, 8),
        32515,
        2,
    )?;
    let x2971: BytePoly_1 = bigint_nondet_rem!(ctx, x2909, x2, 1);
    let x2972: BytePoly_5 = bigint_nondet_quot!(ctx, x2909, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2972, x2, 6), x2971, 6), x2909, 6),
        40643,
        4,
    )?;
    let x2973: BytePoly_1 = bigint_sub!(x3, x2971, 1);
    eqz(ctx, &bigint_mul!(x2971, x2973, 2), 8131, 2)?;
    let x2974: BytePoly_4 = bigint_add!(bigint_sub!(x2964, x2934, 4), x6, 4);
    let x2975: BytePoly_4 = bigint_nondet_inv!(ctx, x2974, x6, 4);
    let x2976: BytePoly_8 = bigint_mul!(x2974, x2975, 8);
    let x2977: BytePoly_9 = bigint_nondet_quot!(ctx, x2976, x6, 9);
    let x2978: BytePoly_4 = bigint_nondet_rem!(ctx, x2976, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2977, x6, 13), x2978, 13),
            x2976,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x2978, x1, 4), 34, 1)?;
    let x2979: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x2970, x2936, 4), x6, 4), x2975, 8);
    let x2980: BytePoly_9 = bigint_nondet_quot!(ctx, x2979, x6, 9);
    let x2981: BytePoly_4 = bigint_nondet_rem!(ctx, x2979, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2980, x6, 13), x2981, 13),
            x2979,
            13
        ),
        73156,
        4,
    )?;
    let x2982: BytePoly_8 = bigint_add!(bigint_sub!(x2936, bigint_mul!(x2981, x2934, 8), 8), x6, 8);
    let x2983: BytePoly_8 = bigint_nondet_quot!(ctx, x2982, x6, 8);
    let x2984: BytePoly_4 = bigint_nondet_rem!(ctx, x2982, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2983, x6, 12), x2984, 12),
            x2982,
            12
        ),
        65028,
        4,
    )?;
    let x2985: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x2981, x2981, 8), x2934, 8), x6, 8),
            x2964,
            8
        ),
        x6,
        8
    );
    let x2986: BytePoly_9 = bigint_nondet_quot!(ctx, x2985, x6, 9);
    let x2987: BytePoly_4 = bigint_nondet_rem!(ctx, x2985, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2986, x6, 13), x2987, 13),
            x2985,
            13
        ),
        73156,
        4,
    )?;
    let x2988: BytePoly_8 = bigint_mul!(x2981, x2987, 8);
    let x2989: BytePoly_9 = bigint_nondet_quot!(ctx, x2988, x6, 9);
    let x2990: BytePoly_4 = bigint_nondet_rem!(ctx, x2988, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2989, x6, 13), x2990, 13),
            x2988,
            13
        ),
        73156,
        4,
    )?;
    let x2991: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x2990, x2984, 4), 4), x6, 4);
    let x2992: BytePoly_4 = bigint_nondet_quot!(ctx, x2991, x6, 4);
    let x2993: BytePoly_4 = bigint_nondet_rem!(ctx, x2991, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2992, x6, 8), x2993, 8), x2991, 8),
        32515,
        2,
    )?;
    let x2994: BytePoly_5 = bigint_add!(
        bigint_mul!(x2987, x2971, 5),
        bigint_mul!(x2934, x2973, 5),
        5
    );
    let x2995: BytePoly_5 = bigint_add!(
        bigint_mul!(x2993, x2971, 5),
        bigint_mul!(x2936, x2973, 5),
        5
    );
    let x2996: BytePoly_6 = bigint_nondet_quot!(ctx, x2994, x6, 6);
    let x2997: BytePoly_4 = bigint_nondet_rem!(ctx, x2994, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2996, x6, 10), x2997, 10),
            x2994,
            10
        ),
        48771,
        4,
    )?;
    let x2998: BytePoly_6 = bigint_nondet_quot!(ctx, x2995, x6, 6);
    let x2999: BytePoly_4 = bigint_nondet_rem!(ctx, x2995, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2998, x6, 10), x2999, 10),
            x2995,
            10
        ),
        48771,
        4,
    )?;
    let x3000: BytePoly_8 = bigint_mul!(x2964, x2964, 8);
    let x3001: BytePoly_9 = bigint_nondet_quot!(ctx, x3000, x6, 9);
    let x3002: BytePoly_4 = bigint_nondet_rem!(ctx, x3000, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3001, x6, 13), x3002, 13),
            x3000,
            13
        ),
        73156,
        4,
    )?;
    let x3003: BytePoly_5 = bigint_add!(bigint_mul!(x3002, x0, 5), x5, 5);
    let x3004: BytePoly_6 = bigint_nondet_quot!(ctx, x3003, x6, 6);
    let x3005: BytePoly_4 = bigint_nondet_rem!(ctx, x3003, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3004, x6, 10), x3005, 10),
            x3003,
            10
        ),
        48771,
        4,
    )?;
    let x3006: BytePoly_4 = bigint_add!(x2970, x2970, 4);
    let x3007: BytePoly_4 = bigint_nondet_quot!(ctx, x3006, x6, 4);
    let x3008: BytePoly_4 = bigint_nondet_rem!(ctx, x3006, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3007, x6, 8), x3008, 8), x3006, 8),
        32515,
        2,
    )?;
    let x3009: BytePoly_4 = bigint_nondet_inv!(ctx, x3008, x6, 4);
    let x3010: BytePoly_8 = bigint_mul!(x3008, x3009, 8);
    let x3011: BytePoly_9 = bigint_nondet_quot!(ctx, x3010, x6, 9);
    let x3012: BytePoly_4 = bigint_nondet_rem!(ctx, x3010, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3011, x6, 13), x3012, 13),
            x3010,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x3012, x3, 4), 34, 1)?;
    let x3013: BytePoly_8 = bigint_mul!(x3005, x3009, 8);
    let x3014: BytePoly_9 = bigint_nondet_quot!(ctx, x3013, x6, 9);
    let x3015: BytePoly_4 = bigint_nondet_rem!(ctx, x3013, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3014, x6, 13), x3015, 13),
            x3013,
            13
        ),
        73156,
        4,
    )?;
    let x3016: BytePoly_8 = bigint_mul!(x3015, x2964, 8);
    let x3017: BytePoly_9 = bigint_nondet_quot!(ctx, x3016, x6, 9);
    let x3018: BytePoly_4 = bigint_nondet_rem!(ctx, x3016, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3017, x6, 13), x3018, 13),
            x3016,
            13
        ),
        73156,
        4,
    )?;
    let x3019: BytePoly_4 = bigint_add!(bigint_sub!(x2970, x3018, 4), x6, 4);
    let x3020: BytePoly_4 = bigint_nondet_quot!(ctx, x3019, x6, 4);
    let x3021: BytePoly_4 = bigint_nondet_rem!(ctx, x3019, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3020, x6, 8), x3021, 8), x3019, 8),
        32515,
        2,
    )?;
    let x3022: BytePoly_8 = bigint_mul!(x3015, x3015, 8);
    let x3023: BytePoly_9 = bigint_nondet_quot!(ctx, x3022, x6, 9);
    let x3024: BytePoly_4 = bigint_nondet_rem!(ctx, x3022, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3023, x6, 13), x3024, 13),
            x3022,
            13
        ),
        73156,
        4,
    )?;
    let x3025: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3024, x2964, 4), x6, 4), x2964, 4),
        x6,
        4
    );
    let x3026: BytePoly_4 = bigint_nondet_quot!(ctx, x3025, x6, 4);
    let x3027: BytePoly_4 = bigint_nondet_rem!(ctx, x3025, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3026, x6, 8), x3027, 8), x3025, 8),
        32515,
        2,
    )?;
    let x3028: BytePoly_8 = bigint_mul!(x3015, x3027, 8);
    let x3029: BytePoly_9 = bigint_nondet_quot!(ctx, x3028, x6, 9);
    let x3030: BytePoly_4 = bigint_nondet_rem!(ctx, x3028, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3029, x6, 13), x3030, 13),
            x3028,
            13
        ),
        73156,
        4,
    )?;
    let x3031: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x3030, x3021, 4), 4), x6, 4);
    let x3032: BytePoly_4 = bigint_nondet_quot!(ctx, x3031, x6, 4);
    let x3033: BytePoly_4 = bigint_nondet_rem!(ctx, x3031, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3032, x6, 8), x3033, 8), x3031, 8),
        32515,
        2,
    )?;
    let x3034: BytePoly_1 = bigint_nondet_rem!(ctx, x2972, x2, 1);
    let x3035: BytePoly_5 = bigint_nondet_quot!(ctx, x2972, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3035, x2, 6), x3034, 6), x2972, 6),
        40643,
        4,
    )?;
    let x3036: BytePoly_1 = bigint_sub!(x3, x3034, 1);
    eqz(ctx, &bigint_mul!(x3034, x3036, 2), 8131, 2)?;
    let x3037: BytePoly_4 = bigint_add!(bigint_sub!(x3027, x2997, 4), x6, 4);
    let x3038: BytePoly_4 = bigint_nondet_inv!(ctx, x3037, x6, 4);
    let x3039: BytePoly_8 = bigint_mul!(x3037, x3038, 8);
    let x3040: BytePoly_9 = bigint_nondet_quot!(ctx, x3039, x6, 9);
    let x3041: BytePoly_4 = bigint_nondet_rem!(ctx, x3039, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3040, x6, 13), x3041, 13),
            x3039,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x3041, x1, 4), 34, 1)?;
    let x3042: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x3033, x2999, 4), x6, 4), x3038, 8);
    let x3043: BytePoly_9 = bigint_nondet_quot!(ctx, x3042, x6, 9);
    let x3044: BytePoly_4 = bigint_nondet_rem!(ctx, x3042, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3043, x6, 13), x3044, 13),
            x3042,
            13
        ),
        73156,
        4,
    )?;
    let x3045: BytePoly_8 = bigint_add!(bigint_sub!(x2999, bigint_mul!(x3044, x2997, 8), 8), x6, 8);
    let x3046: BytePoly_8 = bigint_nondet_quot!(ctx, x3045, x6, 8);
    let x3047: BytePoly_4 = bigint_nondet_rem!(ctx, x3045, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3046, x6, 12), x3047, 12),
            x3045,
            12
        ),
        65028,
        4,
    )?;
    let x3048: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x3044, x3044, 8), x2997, 8), x6, 8),
            x3027,
            8
        ),
        x6,
        8
    );
    let x3049: BytePoly_9 = bigint_nondet_quot!(ctx, x3048, x6, 9);
    let x3050: BytePoly_4 = bigint_nondet_rem!(ctx, x3048, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3049, x6, 13), x3050, 13),
            x3048,
            13
        ),
        73156,
        4,
    )?;
    let x3051: BytePoly_8 = bigint_mul!(x3044, x3050, 8);
    let x3052: BytePoly_9 = bigint_nondet_quot!(ctx, x3051, x6, 9);
    let x3053: BytePoly_4 = bigint_nondet_rem!(ctx, x3051, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3052, x6, 13), x3053, 13),
            x3051,
            13
        ),
        73156,
        4,
    )?;
    let x3054: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x3053, x3047, 4), 4), x6, 4);
    let x3055: BytePoly_4 = bigint_nondet_quot!(ctx, x3054, x6, 4);
    let x3056: BytePoly_4 = bigint_nondet_rem!(ctx, x3054, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3055, x6, 8), x3056, 8), x3054, 8),
        32515,
        2,
    )?;
    let x3057: BytePoly_5 = bigint_add!(
        bigint_mul!(x3050, x3034, 5),
        bigint_mul!(x2997, x3036, 5),
        5
    );
    let x3058: BytePoly_5 = bigint_add!(
        bigint_mul!(x3056, x3034, 5),
        bigint_mul!(x2999, x3036, 5),
        5
    );
    let x3059: BytePoly_6 = bigint_nondet_quot!(ctx, x3057, x6, 6);
    let x3060: BytePoly_4 = bigint_nondet_rem!(ctx, x3057, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3059, x6, 10), x3060, 10),
            x3057,
            10
        ),
        48771,
        4,
    )?;
    let x3061: BytePoly_6 = bigint_nondet_quot!(ctx, x3058, x6, 6);
    let x3062: BytePoly_4 = bigint_nondet_rem!(ctx, x3058, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3061, x6, 10), x3062, 10),
            x3058,
            10
        ),
        48771,
        4,
    )?;
    let x3063: BytePoly_8 = bigint_mul!(x3027, x3027, 8);
    let x3064: BytePoly_9 = bigint_nondet_quot!(ctx, x3063, x6, 9);
    let x3065: BytePoly_4 = bigint_nondet_rem!(ctx, x3063, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3064, x6, 13), x3065, 13),
            x3063,
            13
        ),
        73156,
        4,
    )?;
    let x3066: BytePoly_5 = bigint_add!(bigint_mul!(x3065, x0, 5), x5, 5);
    let x3067: BytePoly_6 = bigint_nondet_quot!(ctx, x3066, x6, 6);
    let x3068: BytePoly_4 = bigint_nondet_rem!(ctx, x3066, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3067, x6, 10), x3068, 10),
            x3066,
            10
        ),
        48771,
        4,
    )?;
    let x3069: BytePoly_4 = bigint_add!(x3033, x3033, 4);
    let x3070: BytePoly_4 = bigint_nondet_quot!(ctx, x3069, x6, 4);
    let x3071: BytePoly_4 = bigint_nondet_rem!(ctx, x3069, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3070, x6, 8), x3071, 8), x3069, 8),
        32515,
        2,
    )?;
    let x3072: BytePoly_4 = bigint_nondet_inv!(ctx, x3071, x6, 4);
    let x3073: BytePoly_8 = bigint_mul!(x3071, x3072, 8);
    let x3074: BytePoly_9 = bigint_nondet_quot!(ctx, x3073, x6, 9);
    let x3075: BytePoly_4 = bigint_nondet_rem!(ctx, x3073, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3074, x6, 13), x3075, 13),
            x3073,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x3075, x3, 4), 34, 1)?;
    let x3076: BytePoly_8 = bigint_mul!(x3068, x3072, 8);
    let x3077: BytePoly_9 = bigint_nondet_quot!(ctx, x3076, x6, 9);
    let x3078: BytePoly_4 = bigint_nondet_rem!(ctx, x3076, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3077, x6, 13), x3078, 13),
            x3076,
            13
        ),
        73156,
        4,
    )?;
    let x3079: BytePoly_8 = bigint_mul!(x3078, x3027, 8);
    let x3080: BytePoly_9 = bigint_nondet_quot!(ctx, x3079, x6, 9);
    let x3081: BytePoly_4 = bigint_nondet_rem!(ctx, x3079, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3080, x6, 13), x3081, 13),
            x3079,
            13
        ),
        73156,
        4,
    )?;
    let x3082: BytePoly_4 = bigint_add!(bigint_sub!(x3033, x3081, 4), x6, 4);
    let x3083: BytePoly_4 = bigint_nondet_quot!(ctx, x3082, x6, 4);
    let x3084: BytePoly_4 = bigint_nondet_rem!(ctx, x3082, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3083, x6, 8), x3084, 8), x3082, 8),
        32515,
        2,
    )?;
    let x3085: BytePoly_8 = bigint_mul!(x3078, x3078, 8);
    let x3086: BytePoly_9 = bigint_nondet_quot!(ctx, x3085, x6, 9);
    let x3087: BytePoly_4 = bigint_nondet_rem!(ctx, x3085, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3086, x6, 13), x3087, 13),
            x3085,
            13
        ),
        73156,
        4,
    )?;
    let x3088: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3087, x3027, 4), x6, 4), x3027, 4),
        x6,
        4
    );
    let x3089: BytePoly_4 = bigint_nondet_quot!(ctx, x3088, x6, 4);
    let x3090: BytePoly_4 = bigint_nondet_rem!(ctx, x3088, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3089, x6, 8), x3090, 8), x3088, 8),
        32515,
        2,
    )?;
    let x3091: BytePoly_8 = bigint_mul!(x3078, x3090, 8);
    let x3092: BytePoly_9 = bigint_nondet_quot!(ctx, x3091, x6, 9);
    let x3093: BytePoly_4 = bigint_nondet_rem!(ctx, x3091, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3092, x6, 13), x3093, 13),
            x3091,
            13
        ),
        73156,
        4,
    )?;
    let x3094: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x3093, x3084, 4), 4), x6, 4);
    let x3095: BytePoly_4 = bigint_nondet_quot!(ctx, x3094, x6, 4);
    let x3096: BytePoly_4 = bigint_nondet_rem!(ctx, x3094, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3095, x6, 8), x3096, 8), x3094, 8),
        32515,
        2,
    )?;
    let x3097: BytePoly_1 = bigint_nondet_rem!(ctx, x3035, x2, 1);
    let x3098: BytePoly_5 = bigint_nondet_quot!(ctx, x3035, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3098, x2, 6), x3097, 6), x3035, 6),
        40643,
        4,
    )?;
    let x3099: BytePoly_1 = bigint_sub!(x3, x3097, 1);
    eqz(ctx, &bigint_mul!(x3097, x3099, 2), 8131, 2)?;
    let x3100: BytePoly_4 = bigint_add!(bigint_sub!(x3090, x3060, 4), x6, 4);
    let x3101: BytePoly_4 = bigint_nondet_inv!(ctx, x3100, x6, 4);
    let x3102: BytePoly_8 = bigint_mul!(x3100, x3101, 8);
    let x3103: BytePoly_9 = bigint_nondet_quot!(ctx, x3102, x6, 9);
    let x3104: BytePoly_4 = bigint_nondet_rem!(ctx, x3102, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3103, x6, 13), x3104, 13),
            x3102,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x3104, x1, 4), 34, 1)?;
    let x3105: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x3096, x3062, 4), x6, 4), x3101, 8);
    let x3106: BytePoly_9 = bigint_nondet_quot!(ctx, x3105, x6, 9);
    let x3107: BytePoly_4 = bigint_nondet_rem!(ctx, x3105, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3106, x6, 13), x3107, 13),
            x3105,
            13
        ),
        73156,
        4,
    )?;
    let x3108: BytePoly_8 = bigint_add!(bigint_sub!(x3062, bigint_mul!(x3107, x3060, 8), 8), x6, 8);
    let x3109: BytePoly_8 = bigint_nondet_quot!(ctx, x3108, x6, 8);
    let x3110: BytePoly_4 = bigint_nondet_rem!(ctx, x3108, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3109, x6, 12), x3110, 12),
            x3108,
            12
        ),
        65028,
        4,
    )?;
    let x3111: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x3107, x3107, 8), x3060, 8), x6, 8),
            x3090,
            8
        ),
        x6,
        8
    );
    let x3112: BytePoly_9 = bigint_nondet_quot!(ctx, x3111, x6, 9);
    let x3113: BytePoly_4 = bigint_nondet_rem!(ctx, x3111, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3112, x6, 13), x3113, 13),
            x3111,
            13
        ),
        73156,
        4,
    )?;
    let x3114: BytePoly_8 = bigint_mul!(x3107, x3113, 8);
    let x3115: BytePoly_9 = bigint_nondet_quot!(ctx, x3114, x6, 9);
    let x3116: BytePoly_4 = bigint_nondet_rem!(ctx, x3114, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3115, x6, 13), x3116, 13),
            x3114,
            13
        ),
        73156,
        4,
    )?;
    let x3117: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x3116, x3110, 4), 4), x6, 4);
    let x3118: BytePoly_4 = bigint_nondet_quot!(ctx, x3117, x6, 4);
    let x3119: BytePoly_4 = bigint_nondet_rem!(ctx, x3117, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3118, x6, 8), x3119, 8), x3117, 8),
        32515,
        2,
    )?;
    let x3120: BytePoly_5 = bigint_add!(
        bigint_mul!(x3113, x3097, 5),
        bigint_mul!(x3060, x3099, 5),
        5
    );
    let x3121: BytePoly_5 = bigint_add!(
        bigint_mul!(x3119, x3097, 5),
        bigint_mul!(x3062, x3099, 5),
        5
    );
    let x3122: BytePoly_6 = bigint_nondet_quot!(ctx, x3120, x6, 6);
    let x3123: BytePoly_4 = bigint_nondet_rem!(ctx, x3120, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3122, x6, 10), x3123, 10),
            x3120,
            10
        ),
        48771,
        4,
    )?;
    let x3124: BytePoly_6 = bigint_nondet_quot!(ctx, x3121, x6, 6);
    let x3125: BytePoly_4 = bigint_nondet_rem!(ctx, x3121, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3124, x6, 10), x3125, 10),
            x3121,
            10
        ),
        48771,
        4,
    )?;
    let x3126: BytePoly_8 = bigint_mul!(x3090, x3090, 8);
    let x3127: BytePoly_9 = bigint_nondet_quot!(ctx, x3126, x6, 9);
    let x3128: BytePoly_4 = bigint_nondet_rem!(ctx, x3126, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3127, x6, 13), x3128, 13),
            x3126,
            13
        ),
        73156,
        4,
    )?;
    let x3129: BytePoly_5 = bigint_add!(bigint_mul!(x3128, x0, 5), x5, 5);
    let x3130: BytePoly_6 = bigint_nondet_quot!(ctx, x3129, x6, 6);
    let x3131: BytePoly_4 = bigint_nondet_rem!(ctx, x3129, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3130, x6, 10), x3131, 10),
            x3129,
            10
        ),
        48771,
        4,
    )?;
    let x3132: BytePoly_4 = bigint_add!(x3096, x3096, 4);
    let x3133: BytePoly_4 = bigint_nondet_quot!(ctx, x3132, x6, 4);
    let x3134: BytePoly_4 = bigint_nondet_rem!(ctx, x3132, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3133, x6, 8), x3134, 8), x3132, 8),
        32515,
        2,
    )?;
    let x3135: BytePoly_4 = bigint_nondet_inv!(ctx, x3134, x6, 4);
    let x3136: BytePoly_8 = bigint_mul!(x3134, x3135, 8);
    let x3137: BytePoly_9 = bigint_nondet_quot!(ctx, x3136, x6, 9);
    let x3138: BytePoly_4 = bigint_nondet_rem!(ctx, x3136, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3137, x6, 13), x3138, 13),
            x3136,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x3138, x3, 4), 34, 1)?;
    let x3139: BytePoly_8 = bigint_mul!(x3131, x3135, 8);
    let x3140: BytePoly_9 = bigint_nondet_quot!(ctx, x3139, x6, 9);
    let x3141: BytePoly_4 = bigint_nondet_rem!(ctx, x3139, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3140, x6, 13), x3141, 13),
            x3139,
            13
        ),
        73156,
        4,
    )?;
    let x3142: BytePoly_8 = bigint_mul!(x3141, x3090, 8);
    let x3143: BytePoly_9 = bigint_nondet_quot!(ctx, x3142, x6, 9);
    let x3144: BytePoly_4 = bigint_nondet_rem!(ctx, x3142, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3143, x6, 13), x3144, 13),
            x3142,
            13
        ),
        73156,
        4,
    )?;
    let x3145: BytePoly_4 = bigint_add!(bigint_sub!(x3096, x3144, 4), x6, 4);
    let x3146: BytePoly_4 = bigint_nondet_quot!(ctx, x3145, x6, 4);
    let x3147: BytePoly_4 = bigint_nondet_rem!(ctx, x3145, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3146, x6, 8), x3147, 8), x3145, 8),
        32515,
        2,
    )?;
    let x3148: BytePoly_8 = bigint_mul!(x3141, x3141, 8);
    let x3149: BytePoly_9 = bigint_nondet_quot!(ctx, x3148, x6, 9);
    let x3150: BytePoly_4 = bigint_nondet_rem!(ctx, x3148, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3149, x6, 13), x3150, 13),
            x3148,
            13
        ),
        73156,
        4,
    )?;
    let x3151: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3150, x3090, 4), x6, 4), x3090, 4),
        x6,
        4
    );
    let x3152: BytePoly_4 = bigint_nondet_quot!(ctx, x3151, x6, 4);
    let x3153: BytePoly_4 = bigint_nondet_rem!(ctx, x3151, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3152, x6, 8), x3153, 8), x3151, 8),
        32515,
        2,
    )?;
    let x3154: BytePoly_8 = bigint_mul!(x3141, x3153, 8);
    let x3155: BytePoly_9 = bigint_nondet_quot!(ctx, x3154, x6, 9);
    let x3156: BytePoly_4 = bigint_nondet_rem!(ctx, x3154, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3155, x6, 13), x3156, 13),
            x3154,
            13
        ),
        73156,
        4,
    )?;
    let x3157: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x3156, x3147, 4), 4), x6, 4);
    let x3158: BytePoly_4 = bigint_nondet_quot!(ctx, x3157, x6, 4);
    let x3159: BytePoly_4 = bigint_nondet_rem!(ctx, x3157, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3158, x6, 8), x3159, 8), x3157, 8),
        32515,
        2,
    )?;
    let x3160: BytePoly_1 = bigint_nondet_rem!(ctx, x3098, x2, 1);
    let x3161: BytePoly_5 = bigint_nondet_quot!(ctx, x3098, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3161, x2, 6), x3160, 6), x3098, 6),
        40643,
        4,
    )?;
    let x3162: BytePoly_1 = bigint_sub!(x3, x3160, 1);
    eqz(ctx, &bigint_mul!(x3160, x3162, 2), 8131, 2)?;
    let x3163: BytePoly_4 = bigint_add!(bigint_sub!(x3153, x3123, 4), x6, 4);
    let x3164: BytePoly_4 = bigint_nondet_inv!(ctx, x3163, x6, 4);
    let x3165: BytePoly_8 = bigint_mul!(x3163, x3164, 8);
    let x3166: BytePoly_9 = bigint_nondet_quot!(ctx, x3165, x6, 9);
    let x3167: BytePoly_4 = bigint_nondet_rem!(ctx, x3165, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3166, x6, 13), x3167, 13),
            x3165,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x3167, x1, 4), 34, 1)?;
    let x3168: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x3159, x3125, 4), x6, 4), x3164, 8);
    let x3169: BytePoly_9 = bigint_nondet_quot!(ctx, x3168, x6, 9);
    let x3170: BytePoly_4 = bigint_nondet_rem!(ctx, x3168, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3169, x6, 13), x3170, 13),
            x3168,
            13
        ),
        73156,
        4,
    )?;
    let x3171: BytePoly_8 = bigint_add!(bigint_sub!(x3125, bigint_mul!(x3170, x3123, 8), 8), x6, 8);
    let x3172: BytePoly_8 = bigint_nondet_quot!(ctx, x3171, x6, 8);
    let x3173: BytePoly_4 = bigint_nondet_rem!(ctx, x3171, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3172, x6, 12), x3173, 12),
            x3171,
            12
        ),
        65028,
        4,
    )?;
    let x3174: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x3170, x3170, 8), x3123, 8), x6, 8),
            x3153,
            8
        ),
        x6,
        8
    );
    let x3175: BytePoly_9 = bigint_nondet_quot!(ctx, x3174, x6, 9);
    let x3176: BytePoly_4 = bigint_nondet_rem!(ctx, x3174, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3175, x6, 13), x3176, 13),
            x3174,
            13
        ),
        73156,
        4,
    )?;
    let x3177: BytePoly_8 = bigint_mul!(x3170, x3176, 8);
    let x3178: BytePoly_9 = bigint_nondet_quot!(ctx, x3177, x6, 9);
    let x3179: BytePoly_4 = bigint_nondet_rem!(ctx, x3177, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3178, x6, 13), x3179, 13),
            x3177,
            13
        ),
        73156,
        4,
    )?;
    let x3180: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x3179, x3173, 4), 4), x6, 4);
    let x3181: BytePoly_4 = bigint_nondet_quot!(ctx, x3180, x6, 4);
    let x3182: BytePoly_4 = bigint_nondet_rem!(ctx, x3180, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3181, x6, 8), x3182, 8), x3180, 8),
        32515,
        2,
    )?;
    let x3183: BytePoly_5 = bigint_add!(
        bigint_mul!(x3176, x3160, 5),
        bigint_mul!(x3123, x3162, 5),
        5
    );
    let x3184: BytePoly_5 = bigint_add!(
        bigint_mul!(x3182, x3160, 5),
        bigint_mul!(x3125, x3162, 5),
        5
    );
    let x3185: BytePoly_6 = bigint_nondet_quot!(ctx, x3183, x6, 6);
    let x3186: BytePoly_4 = bigint_nondet_rem!(ctx, x3183, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3185, x6, 10), x3186, 10),
            x3183,
            10
        ),
        48771,
        4,
    )?;
    let x3187: BytePoly_6 = bigint_nondet_quot!(ctx, x3184, x6, 6);
    let x3188: BytePoly_4 = bigint_nondet_rem!(ctx, x3184, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3187, x6, 10), x3188, 10),
            x3184,
            10
        ),
        48771,
        4,
    )?;
    let x3189: BytePoly_8 = bigint_mul!(x3153, x3153, 8);
    let x3190: BytePoly_9 = bigint_nondet_quot!(ctx, x3189, x6, 9);
    let x3191: BytePoly_4 = bigint_nondet_rem!(ctx, x3189, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3190, x6, 13), x3191, 13),
            x3189,
            13
        ),
        73156,
        4,
    )?;
    let x3192: BytePoly_5 = bigint_add!(bigint_mul!(x3191, x0, 5), x5, 5);
    let x3193: BytePoly_6 = bigint_nondet_quot!(ctx, x3192, x6, 6);
    let x3194: BytePoly_4 = bigint_nondet_rem!(ctx, x3192, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3193, x6, 10), x3194, 10),
            x3192,
            10
        ),
        48771,
        4,
    )?;
    let x3195: BytePoly_4 = bigint_add!(x3159, x3159, 4);
    let x3196: BytePoly_4 = bigint_nondet_quot!(ctx, x3195, x6, 4);
    let x3197: BytePoly_4 = bigint_nondet_rem!(ctx, x3195, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3196, x6, 8), x3197, 8), x3195, 8),
        32515,
        2,
    )?;
    let x3198: BytePoly_4 = bigint_nondet_inv!(ctx, x3197, x6, 4);
    let x3199: BytePoly_8 = bigint_mul!(x3197, x3198, 8);
    let x3200: BytePoly_9 = bigint_nondet_quot!(ctx, x3199, x6, 9);
    let x3201: BytePoly_4 = bigint_nondet_rem!(ctx, x3199, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3200, x6, 13), x3201, 13),
            x3199,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x3201, x3, 4), 34, 1)?;
    let x3202: BytePoly_8 = bigint_mul!(x3194, x3198, 8);
    let x3203: BytePoly_9 = bigint_nondet_quot!(ctx, x3202, x6, 9);
    let x3204: BytePoly_4 = bigint_nondet_rem!(ctx, x3202, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3203, x6, 13), x3204, 13),
            x3202,
            13
        ),
        73156,
        4,
    )?;
    let x3205: BytePoly_8 = bigint_mul!(x3204, x3153, 8);
    let x3206: BytePoly_9 = bigint_nondet_quot!(ctx, x3205, x6, 9);
    let x3207: BytePoly_4 = bigint_nondet_rem!(ctx, x3205, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3206, x6, 13), x3207, 13),
            x3205,
            13
        ),
        73156,
        4,
    )?;
    let x3208: BytePoly_4 = bigint_add!(bigint_sub!(x3159, x3207, 4), x6, 4);
    let x3209: BytePoly_4 = bigint_nondet_quot!(ctx, x3208, x6, 4);
    let x3210: BytePoly_4 = bigint_nondet_rem!(ctx, x3208, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3209, x6, 8), x3210, 8), x3208, 8),
        32515,
        2,
    )?;
    let x3211: BytePoly_8 = bigint_mul!(x3204, x3204, 8);
    let x3212: BytePoly_9 = bigint_nondet_quot!(ctx, x3211, x6, 9);
    let x3213: BytePoly_4 = bigint_nondet_rem!(ctx, x3211, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3212, x6, 13), x3213, 13),
            x3211,
            13
        ),
        73156,
        4,
    )?;
    let x3214: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3213, x3153, 4), x6, 4), x3153, 4),
        x6,
        4
    );
    let x3215: BytePoly_4 = bigint_nondet_quot!(ctx, x3214, x6, 4);
    let x3216: BytePoly_4 = bigint_nondet_rem!(ctx, x3214, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3215, x6, 8), x3216, 8), x3214, 8),
        32515,
        2,
    )?;
    let x3217: BytePoly_8 = bigint_mul!(x3204, x3216, 8);
    let x3218: BytePoly_9 = bigint_nondet_quot!(ctx, x3217, x6, 9);
    let x3219: BytePoly_4 = bigint_nondet_rem!(ctx, x3217, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3218, x6, 13), x3219, 13),
            x3217,
            13
        ),
        73156,
        4,
    )?;
    let x3220: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x3219, x3210, 4), 4), x6, 4);
    let x3221: BytePoly_4 = bigint_nondet_quot!(ctx, x3220, x6, 4);
    let x3222: BytePoly_4 = bigint_nondet_rem!(ctx, x3220, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3221, x6, 8), x3222, 8), x3220, 8),
        32515,
        2,
    )?;
    let x3223: BytePoly_1 = bigint_nondet_rem!(ctx, x3161, x2, 1);
    let x3224: BytePoly_5 = bigint_nondet_quot!(ctx, x3161, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3224, x2, 6), x3223, 6), x3161, 6),
        40643,
        4,
    )?;
    let x3225: BytePoly_1 = bigint_sub!(x3, x3223, 1);
    eqz(ctx, &bigint_mul!(x3223, x3225, 2), 8131, 2)?;
    let x3226: BytePoly_4 = bigint_add!(bigint_sub!(x3216, x3186, 4), x6, 4);
    let x3227: BytePoly_4 = bigint_nondet_inv!(ctx, x3226, x6, 4);
    let x3228: BytePoly_8 = bigint_mul!(x3226, x3227, 8);
    let x3229: BytePoly_9 = bigint_nondet_quot!(ctx, x3228, x6, 9);
    let x3230: BytePoly_4 = bigint_nondet_rem!(ctx, x3228, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3229, x6, 13), x3230, 13),
            x3228,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x3230, x1, 4), 34, 1)?;
    let x3231: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x3222, x3188, 4), x6, 4), x3227, 8);
    let x3232: BytePoly_9 = bigint_nondet_quot!(ctx, x3231, x6, 9);
    let x3233: BytePoly_4 = bigint_nondet_rem!(ctx, x3231, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3232, x6, 13), x3233, 13),
            x3231,
            13
        ),
        73156,
        4,
    )?;
    let x3234: BytePoly_8 = bigint_add!(bigint_sub!(x3188, bigint_mul!(x3233, x3186, 8), 8), x6, 8);
    let x3235: BytePoly_8 = bigint_nondet_quot!(ctx, x3234, x6, 8);
    let x3236: BytePoly_4 = bigint_nondet_rem!(ctx, x3234, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3235, x6, 12), x3236, 12),
            x3234,
            12
        ),
        65028,
        4,
    )?;
    let x3237: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x3233, x3233, 8), x3186, 8), x6, 8),
            x3216,
            8
        ),
        x6,
        8
    );
    let x3238: BytePoly_9 = bigint_nondet_quot!(ctx, x3237, x6, 9);
    let x3239: BytePoly_4 = bigint_nondet_rem!(ctx, x3237, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3238, x6, 13), x3239, 13),
            x3237,
            13
        ),
        73156,
        4,
    )?;
    let x3240: BytePoly_8 = bigint_mul!(x3233, x3239, 8);
    let x3241: BytePoly_9 = bigint_nondet_quot!(ctx, x3240, x6, 9);
    let x3242: BytePoly_4 = bigint_nondet_rem!(ctx, x3240, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3241, x6, 13), x3242, 13),
            x3240,
            13
        ),
        73156,
        4,
    )?;
    let x3243: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x3242, x3236, 4), 4), x6, 4);
    let x3244: BytePoly_4 = bigint_nondet_quot!(ctx, x3243, x6, 4);
    let x3245: BytePoly_4 = bigint_nondet_rem!(ctx, x3243, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3244, x6, 8), x3245, 8), x3243, 8),
        32515,
        2,
    )?;
    let x3246: BytePoly_5 = bigint_add!(
        bigint_mul!(x3239, x3223, 5),
        bigint_mul!(x3186, x3225, 5),
        5
    );
    let x3247: BytePoly_5 = bigint_add!(
        bigint_mul!(x3245, x3223, 5),
        bigint_mul!(x3188, x3225, 5),
        5
    );
    let x3248: BytePoly_6 = bigint_nondet_quot!(ctx, x3246, x6, 6);
    let x3249: BytePoly_4 = bigint_nondet_rem!(ctx, x3246, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3248, x6, 10), x3249, 10),
            x3246,
            10
        ),
        48771,
        4,
    )?;
    let x3250: BytePoly_6 = bigint_nondet_quot!(ctx, x3247, x6, 6);
    let x3251: BytePoly_4 = bigint_nondet_rem!(ctx, x3247, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3250, x6, 10), x3251, 10),
            x3247,
            10
        ),
        48771,
        4,
    )?;
    let x3252: BytePoly_8 = bigint_mul!(x3216, x3216, 8);
    let x3253: BytePoly_9 = bigint_nondet_quot!(ctx, x3252, x6, 9);
    let x3254: BytePoly_4 = bigint_nondet_rem!(ctx, x3252, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3253, x6, 13), x3254, 13),
            x3252,
            13
        ),
        73156,
        4,
    )?;
    let x3255: BytePoly_5 = bigint_add!(bigint_mul!(x3254, x0, 5), x5, 5);
    let x3256: BytePoly_6 = bigint_nondet_quot!(ctx, x3255, x6, 6);
    let x3257: BytePoly_4 = bigint_nondet_rem!(ctx, x3255, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3256, x6, 10), x3257, 10),
            x3255,
            10
        ),
        48771,
        4,
    )?;
    let x3258: BytePoly_4 = bigint_add!(x3222, x3222, 4);
    let x3259: BytePoly_4 = bigint_nondet_quot!(ctx, x3258, x6, 4);
    let x3260: BytePoly_4 = bigint_nondet_rem!(ctx, x3258, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3259, x6, 8), x3260, 8), x3258, 8),
        32515,
        2,
    )?;
    let x3261: BytePoly_4 = bigint_nondet_inv!(ctx, x3260, x6, 4);
    let x3262: BytePoly_8 = bigint_mul!(x3260, x3261, 8);
    let x3263: BytePoly_9 = bigint_nondet_quot!(ctx, x3262, x6, 9);
    let x3264: BytePoly_4 = bigint_nondet_rem!(ctx, x3262, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3263, x6, 13), x3264, 13),
            x3262,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x3264, x3, 4), 34, 1)?;
    let x3265: BytePoly_8 = bigint_mul!(x3257, x3261, 8);
    let x3266: BytePoly_9 = bigint_nondet_quot!(ctx, x3265, x6, 9);
    let x3267: BytePoly_4 = bigint_nondet_rem!(ctx, x3265, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3266, x6, 13), x3267, 13),
            x3265,
            13
        ),
        73156,
        4,
    )?;
    let x3268: BytePoly_8 = bigint_mul!(x3267, x3216, 8);
    let x3269: BytePoly_9 = bigint_nondet_quot!(ctx, x3268, x6, 9);
    let x3270: BytePoly_4 = bigint_nondet_rem!(ctx, x3268, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3269, x6, 13), x3270, 13),
            x3268,
            13
        ),
        73156,
        4,
    )?;
    let x3271: BytePoly_4 = bigint_add!(bigint_sub!(x3222, x3270, 4), x6, 4);
    let x3272: BytePoly_4 = bigint_nondet_quot!(ctx, x3271, x6, 4);
    let x3273: BytePoly_4 = bigint_nondet_rem!(ctx, x3271, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3272, x6, 8), x3273, 8), x3271, 8),
        32515,
        2,
    )?;
    let x3274: BytePoly_8 = bigint_mul!(x3267, x3267, 8);
    let x3275: BytePoly_9 = bigint_nondet_quot!(ctx, x3274, x6, 9);
    let x3276: BytePoly_4 = bigint_nondet_rem!(ctx, x3274, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3275, x6, 13), x3276, 13),
            x3274,
            13
        ),
        73156,
        4,
    )?;
    let x3277: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3276, x3216, 4), x6, 4), x3216, 4),
        x6,
        4
    );
    let x3278: BytePoly_4 = bigint_nondet_quot!(ctx, x3277, x6, 4);
    let x3279: BytePoly_4 = bigint_nondet_rem!(ctx, x3277, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3278, x6, 8), x3279, 8), x3277, 8),
        32515,
        2,
    )?;
    let x3280: BytePoly_8 = bigint_mul!(x3267, x3279, 8);
    let x3281: BytePoly_9 = bigint_nondet_quot!(ctx, x3280, x6, 9);
    let x3282: BytePoly_4 = bigint_nondet_rem!(ctx, x3280, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3281, x6, 13), x3282, 13),
            x3280,
            13
        ),
        73156,
        4,
    )?;
    let x3283: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x3282, x3273, 4), 4), x6, 4);
    let x3284: BytePoly_4 = bigint_nondet_quot!(ctx, x3283, x6, 4);
    let x3285: BytePoly_4 = bigint_nondet_rem!(ctx, x3283, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3284, x6, 8), x3285, 8), x3283, 8),
        32515,
        2,
    )?;
    let x3286: BytePoly_1 = bigint_nondet_rem!(ctx, x3224, x2, 1);
    let x3287: BytePoly_5 = bigint_nondet_quot!(ctx, x3224, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3287, x2, 6), x3286, 6), x3224, 6),
        40643,
        4,
    )?;
    let x3288: BytePoly_1 = bigint_sub!(x3, x3286, 1);
    eqz(ctx, &bigint_mul!(x3286, x3288, 2), 8131, 2)?;
    let x3289: BytePoly_4 = bigint_add!(bigint_sub!(x3279, x3249, 4), x6, 4);
    let x3290: BytePoly_4 = bigint_nondet_inv!(ctx, x3289, x6, 4);
    let x3291: BytePoly_8 = bigint_mul!(x3289, x3290, 8);
    let x3292: BytePoly_9 = bigint_nondet_quot!(ctx, x3291, x6, 9);
    let x3293: BytePoly_4 = bigint_nondet_rem!(ctx, x3291, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3292, x6, 13), x3293, 13),
            x3291,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x3293, x1, 4), 34, 1)?;
    let x3294: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x3285, x3251, 4), x6, 4), x3290, 8);
    let x3295: BytePoly_9 = bigint_nondet_quot!(ctx, x3294, x6, 9);
    let x3296: BytePoly_4 = bigint_nondet_rem!(ctx, x3294, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3295, x6, 13), x3296, 13),
            x3294,
            13
        ),
        73156,
        4,
    )?;
    let x3297: BytePoly_8 = bigint_add!(bigint_sub!(x3251, bigint_mul!(x3296, x3249, 8), 8), x6, 8);
    let x3298: BytePoly_8 = bigint_nondet_quot!(ctx, x3297, x6, 8);
    let x3299: BytePoly_4 = bigint_nondet_rem!(ctx, x3297, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3298, x6, 12), x3299, 12),
            x3297,
            12
        ),
        65028,
        4,
    )?;
    let x3300: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x3296, x3296, 8), x3249, 8), x6, 8),
            x3279,
            8
        ),
        x6,
        8
    );
    let x3301: BytePoly_9 = bigint_nondet_quot!(ctx, x3300, x6, 9);
    let x3302: BytePoly_4 = bigint_nondet_rem!(ctx, x3300, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3301, x6, 13), x3302, 13),
            x3300,
            13
        ),
        73156,
        4,
    )?;
    let x3303: BytePoly_8 = bigint_mul!(x3296, x3302, 8);
    let x3304: BytePoly_9 = bigint_nondet_quot!(ctx, x3303, x6, 9);
    let x3305: BytePoly_4 = bigint_nondet_rem!(ctx, x3303, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3304, x6, 13), x3305, 13),
            x3303,
            13
        ),
        73156,
        4,
    )?;
    let x3306: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x3305, x3299, 4), 4), x6, 4);
    let x3307: BytePoly_4 = bigint_nondet_quot!(ctx, x3306, x6, 4);
    let x3308: BytePoly_4 = bigint_nondet_rem!(ctx, x3306, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3307, x6, 8), x3308, 8), x3306, 8),
        32515,
        2,
    )?;
    let x3309: BytePoly_5 = bigint_add!(
        bigint_mul!(x3302, x3286, 5),
        bigint_mul!(x3249, x3288, 5),
        5
    );
    let x3310: BytePoly_5 = bigint_add!(
        bigint_mul!(x3308, x3286, 5),
        bigint_mul!(x3251, x3288, 5),
        5
    );
    let x3311: BytePoly_6 = bigint_nondet_quot!(ctx, x3309, x6, 6);
    let x3312: BytePoly_4 = bigint_nondet_rem!(ctx, x3309, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3311, x6, 10), x3312, 10),
            x3309,
            10
        ),
        48771,
        4,
    )?;
    let x3313: BytePoly_6 = bigint_nondet_quot!(ctx, x3310, x6, 6);
    let x3314: BytePoly_4 = bigint_nondet_rem!(ctx, x3310, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3313, x6, 10), x3314, 10),
            x3310,
            10
        ),
        48771,
        4,
    )?;
    let x3315: BytePoly_8 = bigint_mul!(x3279, x3279, 8);
    let x3316: BytePoly_9 = bigint_nondet_quot!(ctx, x3315, x6, 9);
    let x3317: BytePoly_4 = bigint_nondet_rem!(ctx, x3315, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3316, x6, 13), x3317, 13),
            x3315,
            13
        ),
        73156,
        4,
    )?;
    let x3318: BytePoly_5 = bigint_add!(bigint_mul!(x3317, x0, 5), x5, 5);
    let x3319: BytePoly_6 = bigint_nondet_quot!(ctx, x3318, x6, 6);
    let x3320: BytePoly_4 = bigint_nondet_rem!(ctx, x3318, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3319, x6, 10), x3320, 10),
            x3318,
            10
        ),
        48771,
        4,
    )?;
    let x3321: BytePoly_4 = bigint_add!(x3285, x3285, 4);
    let x3322: BytePoly_4 = bigint_nondet_quot!(ctx, x3321, x6, 4);
    let x3323: BytePoly_4 = bigint_nondet_rem!(ctx, x3321, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3322, x6, 8), x3323, 8), x3321, 8),
        32515,
        2,
    )?;
    let x3324: BytePoly_4 = bigint_nondet_inv!(ctx, x3323, x6, 4);
    let x3325: BytePoly_8 = bigint_mul!(x3323, x3324, 8);
    let x3326: BytePoly_9 = bigint_nondet_quot!(ctx, x3325, x6, 9);
    let x3327: BytePoly_4 = bigint_nondet_rem!(ctx, x3325, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3326, x6, 13), x3327, 13),
            x3325,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x3327, x3, 4), 34, 1)?;
    let x3328: BytePoly_8 = bigint_mul!(x3320, x3324, 8);
    let x3329: BytePoly_9 = bigint_nondet_quot!(ctx, x3328, x6, 9);
    let x3330: BytePoly_4 = bigint_nondet_rem!(ctx, x3328, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3329, x6, 13), x3330, 13),
            x3328,
            13
        ),
        73156,
        4,
    )?;
    let x3331: BytePoly_8 = bigint_mul!(x3330, x3279, 8);
    let x3332: BytePoly_9 = bigint_nondet_quot!(ctx, x3331, x6, 9);
    let x3333: BytePoly_4 = bigint_nondet_rem!(ctx, x3331, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3332, x6, 13), x3333, 13),
            x3331,
            13
        ),
        73156,
        4,
    )?;
    let x3334: BytePoly_4 = bigint_add!(bigint_sub!(x3285, x3333, 4), x6, 4);
    let x3335: BytePoly_4 = bigint_nondet_quot!(ctx, x3334, x6, 4);
    let x3336: BytePoly_4 = bigint_nondet_rem!(ctx, x3334, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3335, x6, 8), x3336, 8), x3334, 8),
        32515,
        2,
    )?;
    let x3337: BytePoly_8 = bigint_mul!(x3330, x3330, 8);
    let x3338: BytePoly_9 = bigint_nondet_quot!(ctx, x3337, x6, 9);
    let x3339: BytePoly_4 = bigint_nondet_rem!(ctx, x3337, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3338, x6, 13), x3339, 13),
            x3337,
            13
        ),
        73156,
        4,
    )?;
    let x3340: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3339, x3279, 4), x6, 4), x3279, 4),
        x6,
        4
    );
    let x3341: BytePoly_4 = bigint_nondet_quot!(ctx, x3340, x6, 4);
    let x3342: BytePoly_4 = bigint_nondet_rem!(ctx, x3340, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3341, x6, 8), x3342, 8), x3340, 8),
        32515,
        2,
    )?;
    let x3343: BytePoly_8 = bigint_mul!(x3330, x3342, 8);
    let x3344: BytePoly_9 = bigint_nondet_quot!(ctx, x3343, x6, 9);
    let x3345: BytePoly_4 = bigint_nondet_rem!(ctx, x3343, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3344, x6, 13), x3345, 13),
            x3343,
            13
        ),
        73156,
        4,
    )?;
    let x3346: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x3345, x3336, 4), 4), x6, 4);
    let x3347: BytePoly_4 = bigint_nondet_quot!(ctx, x3346, x6, 4);
    let x3348: BytePoly_4 = bigint_nondet_rem!(ctx, x3346, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3347, x6, 8), x3348, 8), x3346, 8),
        32515,
        2,
    )?;
    let x3349: BytePoly_1 = bigint_nondet_rem!(ctx, x3287, x2, 1);
    let x3350: BytePoly_5 = bigint_nondet_quot!(ctx, x3287, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3350, x2, 6), x3349, 6), x3287, 6),
        40643,
        4,
    )?;
    let x3351: BytePoly_1 = bigint_sub!(x3, x3349, 1);
    eqz(ctx, &bigint_mul!(x3349, x3351, 2), 8131, 2)?;
    let x3352: BytePoly_4 = bigint_add!(bigint_sub!(x3342, x3312, 4), x6, 4);
    let x3353: BytePoly_4 = bigint_nondet_inv!(ctx, x3352, x6, 4);
    let x3354: BytePoly_8 = bigint_mul!(x3352, x3353, 8);
    let x3355: BytePoly_9 = bigint_nondet_quot!(ctx, x3354, x6, 9);
    let x3356: BytePoly_4 = bigint_nondet_rem!(ctx, x3354, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3355, x6, 13), x3356, 13),
            x3354,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x3356, x1, 4), 34, 1)?;
    let x3357: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x3348, x3314, 4), x6, 4), x3353, 8);
    let x3358: BytePoly_9 = bigint_nondet_quot!(ctx, x3357, x6, 9);
    let x3359: BytePoly_4 = bigint_nondet_rem!(ctx, x3357, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3358, x6, 13), x3359, 13),
            x3357,
            13
        ),
        73156,
        4,
    )?;
    let x3360: BytePoly_8 = bigint_add!(bigint_sub!(x3314, bigint_mul!(x3359, x3312, 8), 8), x6, 8);
    let x3361: BytePoly_8 = bigint_nondet_quot!(ctx, x3360, x6, 8);
    let x3362: BytePoly_4 = bigint_nondet_rem!(ctx, x3360, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3361, x6, 12), x3362, 12),
            x3360,
            12
        ),
        65028,
        4,
    )?;
    let x3363: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x3359, x3359, 8), x3312, 8), x6, 8),
            x3342,
            8
        ),
        x6,
        8
    );
    let x3364: BytePoly_9 = bigint_nondet_quot!(ctx, x3363, x6, 9);
    let x3365: BytePoly_4 = bigint_nondet_rem!(ctx, x3363, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3364, x6, 13), x3365, 13),
            x3363,
            13
        ),
        73156,
        4,
    )?;
    let x3366: BytePoly_8 = bigint_mul!(x3359, x3365, 8);
    let x3367: BytePoly_9 = bigint_nondet_quot!(ctx, x3366, x6, 9);
    let x3368: BytePoly_4 = bigint_nondet_rem!(ctx, x3366, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3367, x6, 13), x3368, 13),
            x3366,
            13
        ),
        73156,
        4,
    )?;
    let x3369: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x3368, x3362, 4), 4), x6, 4);
    let x3370: BytePoly_4 = bigint_nondet_quot!(ctx, x3369, x6, 4);
    let x3371: BytePoly_4 = bigint_nondet_rem!(ctx, x3369, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3370, x6, 8), x3371, 8), x3369, 8),
        32515,
        2,
    )?;
    let x3372: BytePoly_5 = bigint_add!(
        bigint_mul!(x3365, x3349, 5),
        bigint_mul!(x3312, x3351, 5),
        5
    );
    let x3373: BytePoly_5 = bigint_add!(
        bigint_mul!(x3371, x3349, 5),
        bigint_mul!(x3314, x3351, 5),
        5
    );
    let x3374: BytePoly_6 = bigint_nondet_quot!(ctx, x3372, x6, 6);
    let x3375: BytePoly_4 = bigint_nondet_rem!(ctx, x3372, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3374, x6, 10), x3375, 10),
            x3372,
            10
        ),
        48771,
        4,
    )?;
    let x3376: BytePoly_6 = bigint_nondet_quot!(ctx, x3373, x6, 6);
    let x3377: BytePoly_4 = bigint_nondet_rem!(ctx, x3373, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3376, x6, 10), x3377, 10),
            x3373,
            10
        ),
        48771,
        4,
    )?;
    let x3378: BytePoly_8 = bigint_mul!(x3342, x3342, 8);
    let x3379: BytePoly_9 = bigint_nondet_quot!(ctx, x3378, x6, 9);
    let x3380: BytePoly_4 = bigint_nondet_rem!(ctx, x3378, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3379, x6, 13), x3380, 13),
            x3378,
            13
        ),
        73156,
        4,
    )?;
    let x3381: BytePoly_5 = bigint_add!(bigint_mul!(x3380, x0, 5), x5, 5);
    let x3382: BytePoly_6 = bigint_nondet_quot!(ctx, x3381, x6, 6);
    let x3383: BytePoly_4 = bigint_nondet_rem!(ctx, x3381, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3382, x6, 10), x3383, 10),
            x3381,
            10
        ),
        48771,
        4,
    )?;
    let x3384: BytePoly_4 = bigint_add!(x3348, x3348, 4);
    let x3385: BytePoly_4 = bigint_nondet_quot!(ctx, x3384, x6, 4);
    let x3386: BytePoly_4 = bigint_nondet_rem!(ctx, x3384, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3385, x6, 8), x3386, 8), x3384, 8),
        32515,
        2,
    )?;
    let x3387: BytePoly_4 = bigint_nondet_inv!(ctx, x3386, x6, 4);
    let x3388: BytePoly_8 = bigint_mul!(x3386, x3387, 8);
    let x3389: BytePoly_9 = bigint_nondet_quot!(ctx, x3388, x6, 9);
    let x3390: BytePoly_4 = bigint_nondet_rem!(ctx, x3388, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3389, x6, 13), x3390, 13),
            x3388,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x3390, x3, 4), 34, 1)?;
    let x3391: BytePoly_8 = bigint_mul!(x3383, x3387, 8);
    let x3392: BytePoly_9 = bigint_nondet_quot!(ctx, x3391, x6, 9);
    let x3393: BytePoly_4 = bigint_nondet_rem!(ctx, x3391, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3392, x6, 13), x3393, 13),
            x3391,
            13
        ),
        73156,
        4,
    )?;
    let x3394: BytePoly_8 = bigint_mul!(x3393, x3342, 8);
    let x3395: BytePoly_9 = bigint_nondet_quot!(ctx, x3394, x6, 9);
    let x3396: BytePoly_4 = bigint_nondet_rem!(ctx, x3394, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3395, x6, 13), x3396, 13),
            x3394,
            13
        ),
        73156,
        4,
    )?;
    let x3397: BytePoly_4 = bigint_add!(bigint_sub!(x3348, x3396, 4), x6, 4);
    let x3398: BytePoly_4 = bigint_nondet_quot!(ctx, x3397, x6, 4);
    let x3399: BytePoly_4 = bigint_nondet_rem!(ctx, x3397, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3398, x6, 8), x3399, 8), x3397, 8),
        32515,
        2,
    )?;
    let x3400: BytePoly_8 = bigint_mul!(x3393, x3393, 8);
    let x3401: BytePoly_9 = bigint_nondet_quot!(ctx, x3400, x6, 9);
    let x3402: BytePoly_4 = bigint_nondet_rem!(ctx, x3400, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3401, x6, 13), x3402, 13),
            x3400,
            13
        ),
        73156,
        4,
    )?;
    let x3403: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3402, x3342, 4), x6, 4), x3342, 4),
        x6,
        4
    );
    let x3404: BytePoly_4 = bigint_nondet_quot!(ctx, x3403, x6, 4);
    let x3405: BytePoly_4 = bigint_nondet_rem!(ctx, x3403, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3404, x6, 8), x3405, 8), x3403, 8),
        32515,
        2,
    )?;
    let x3406: BytePoly_8 = bigint_mul!(x3393, x3405, 8);
    let x3407: BytePoly_9 = bigint_nondet_quot!(ctx, x3406, x6, 9);
    let x3408: BytePoly_4 = bigint_nondet_rem!(ctx, x3406, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3407, x6, 13), x3408, 13),
            x3406,
            13
        ),
        73156,
        4,
    )?;
    let x3409: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x3408, x3399, 4), 4), x6, 4);
    let x3410: BytePoly_4 = bigint_nondet_quot!(ctx, x3409, x6, 4);
    let x3411: BytePoly_4 = bigint_nondet_rem!(ctx, x3409, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3410, x6, 8), x3411, 8), x3409, 8),
        32515,
        2,
    )?;
    let x3412: BytePoly_1 = bigint_nondet_rem!(ctx, x3350, x2, 1);
    let x3413: BytePoly_5 = bigint_nondet_quot!(ctx, x3350, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3413, x2, 6), x3412, 6), x3350, 6),
        40643,
        4,
    )?;
    let x3414: BytePoly_1 = bigint_sub!(x3, x3412, 1);
    eqz(ctx, &bigint_mul!(x3412, x3414, 2), 8131, 2)?;
    let x3415: BytePoly_4 = bigint_add!(bigint_sub!(x3405, x3375, 4), x6, 4);
    let x3416: BytePoly_4 = bigint_nondet_inv!(ctx, x3415, x6, 4);
    let x3417: BytePoly_8 = bigint_mul!(x3415, x3416, 8);
    let x3418: BytePoly_9 = bigint_nondet_quot!(ctx, x3417, x6, 9);
    let x3419: BytePoly_4 = bigint_nondet_rem!(ctx, x3417, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3418, x6, 13), x3419, 13),
            x3417,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x3419, x1, 4), 34, 1)?;
    let x3420: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x3411, x3377, 4), x6, 4), x3416, 8);
    let x3421: BytePoly_9 = bigint_nondet_quot!(ctx, x3420, x6, 9);
    let x3422: BytePoly_4 = bigint_nondet_rem!(ctx, x3420, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3421, x6, 13), x3422, 13),
            x3420,
            13
        ),
        73156,
        4,
    )?;
    let x3423: BytePoly_8 = bigint_add!(bigint_sub!(x3377, bigint_mul!(x3422, x3375, 8), 8), x6, 8);
    let x3424: BytePoly_8 = bigint_nondet_quot!(ctx, x3423, x6, 8);
    let x3425: BytePoly_4 = bigint_nondet_rem!(ctx, x3423, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3424, x6, 12), x3425, 12),
            x3423,
            12
        ),
        65028,
        4,
    )?;
    let x3426: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x3422, x3422, 8), x3375, 8), x6, 8),
            x3405,
            8
        ),
        x6,
        8
    );
    let x3427: BytePoly_9 = bigint_nondet_quot!(ctx, x3426, x6, 9);
    let x3428: BytePoly_4 = bigint_nondet_rem!(ctx, x3426, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3427, x6, 13), x3428, 13),
            x3426,
            13
        ),
        73156,
        4,
    )?;
    let x3429: BytePoly_8 = bigint_mul!(x3422, x3428, 8);
    let x3430: BytePoly_9 = bigint_nondet_quot!(ctx, x3429, x6, 9);
    let x3431: BytePoly_4 = bigint_nondet_rem!(ctx, x3429, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3430, x6, 13), x3431, 13),
            x3429,
            13
        ),
        73156,
        4,
    )?;
    let x3432: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x3431, x3425, 4), 4), x6, 4);
    let x3433: BytePoly_4 = bigint_nondet_quot!(ctx, x3432, x6, 4);
    let x3434: BytePoly_4 = bigint_nondet_rem!(ctx, x3432, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3433, x6, 8), x3434, 8), x3432, 8),
        32515,
        2,
    )?;
    let x3435: BytePoly_5 = bigint_add!(
        bigint_mul!(x3428, x3412, 5),
        bigint_mul!(x3375, x3414, 5),
        5
    );
    let x3436: BytePoly_5 = bigint_add!(
        bigint_mul!(x3434, x3412, 5),
        bigint_mul!(x3377, x3414, 5),
        5
    );
    let x3437: BytePoly_6 = bigint_nondet_quot!(ctx, x3435, x6, 6);
    let x3438: BytePoly_4 = bigint_nondet_rem!(ctx, x3435, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3437, x6, 10), x3438, 10),
            x3435,
            10
        ),
        48771,
        4,
    )?;
    let x3439: BytePoly_6 = bigint_nondet_quot!(ctx, x3436, x6, 6);
    let x3440: BytePoly_4 = bigint_nondet_rem!(ctx, x3436, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3439, x6, 10), x3440, 10),
            x3436,
            10
        ),
        48771,
        4,
    )?;
    let x3441: BytePoly_8 = bigint_mul!(x3405, x3405, 8);
    let x3442: BytePoly_9 = bigint_nondet_quot!(ctx, x3441, x6, 9);
    let x3443: BytePoly_4 = bigint_nondet_rem!(ctx, x3441, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3442, x6, 13), x3443, 13),
            x3441,
            13
        ),
        73156,
        4,
    )?;
    let x3444: BytePoly_5 = bigint_add!(bigint_mul!(x3443, x0, 5), x5, 5);
    let x3445: BytePoly_6 = bigint_nondet_quot!(ctx, x3444, x6, 6);
    let x3446: BytePoly_4 = bigint_nondet_rem!(ctx, x3444, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3445, x6, 10), x3446, 10),
            x3444,
            10
        ),
        48771,
        4,
    )?;
    let x3447: BytePoly_4 = bigint_add!(x3411, x3411, 4);
    let x3448: BytePoly_4 = bigint_nondet_quot!(ctx, x3447, x6, 4);
    let x3449: BytePoly_4 = bigint_nondet_rem!(ctx, x3447, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3448, x6, 8), x3449, 8), x3447, 8),
        32515,
        2,
    )?;
    let x3450: BytePoly_4 = bigint_nondet_inv!(ctx, x3449, x6, 4);
    let x3451: BytePoly_8 = bigint_mul!(x3449, x3450, 8);
    let x3452: BytePoly_9 = bigint_nondet_quot!(ctx, x3451, x6, 9);
    let x3453: BytePoly_4 = bigint_nondet_rem!(ctx, x3451, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3452, x6, 13), x3453, 13),
            x3451,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x3453, x3, 4), 34, 1)?;
    let x3454: BytePoly_8 = bigint_mul!(x3446, x3450, 8);
    let x3455: BytePoly_9 = bigint_nondet_quot!(ctx, x3454, x6, 9);
    let x3456: BytePoly_4 = bigint_nondet_rem!(ctx, x3454, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3455, x6, 13), x3456, 13),
            x3454,
            13
        ),
        73156,
        4,
    )?;
    let x3457: BytePoly_8 = bigint_mul!(x3456, x3405, 8);
    let x3458: BytePoly_9 = bigint_nondet_quot!(ctx, x3457, x6, 9);
    let x3459: BytePoly_4 = bigint_nondet_rem!(ctx, x3457, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3458, x6, 13), x3459, 13),
            x3457,
            13
        ),
        73156,
        4,
    )?;
    let x3460: BytePoly_4 = bigint_add!(bigint_sub!(x3411, x3459, 4), x6, 4);
    let x3461: BytePoly_4 = bigint_nondet_quot!(ctx, x3460, x6, 4);
    let x3462: BytePoly_4 = bigint_nondet_rem!(ctx, x3460, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3461, x6, 8), x3462, 8), x3460, 8),
        32515,
        2,
    )?;
    let x3463: BytePoly_8 = bigint_mul!(x3456, x3456, 8);
    let x3464: BytePoly_9 = bigint_nondet_quot!(ctx, x3463, x6, 9);
    let x3465: BytePoly_4 = bigint_nondet_rem!(ctx, x3463, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3464, x6, 13), x3465, 13),
            x3463,
            13
        ),
        73156,
        4,
    )?;
    let x3466: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3465, x3405, 4), x6, 4), x3405, 4),
        x6,
        4
    );
    let x3467: BytePoly_4 = bigint_nondet_quot!(ctx, x3466, x6, 4);
    let x3468: BytePoly_4 = bigint_nondet_rem!(ctx, x3466, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3467, x6, 8), x3468, 8), x3466, 8),
        32515,
        2,
    )?;
    let x3469: BytePoly_8 = bigint_mul!(x3456, x3468, 8);
    let x3470: BytePoly_9 = bigint_nondet_quot!(ctx, x3469, x6, 9);
    let x3471: BytePoly_4 = bigint_nondet_rem!(ctx, x3469, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3470, x6, 13), x3471, 13),
            x3469,
            13
        ),
        73156,
        4,
    )?;
    let x3472: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x3471, x3462, 4), 4), x6, 4);
    let x3473: BytePoly_4 = bigint_nondet_quot!(ctx, x3472, x6, 4);
    let x3474: BytePoly_4 = bigint_nondet_rem!(ctx, x3472, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3473, x6, 8), x3474, 8), x3472, 8),
        32515,
        2,
    )?;
    let x3475: BytePoly_1 = bigint_nondet_rem!(ctx, x3413, x2, 1);
    let x3476: BytePoly_5 = bigint_nondet_quot!(ctx, x3413, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3476, x2, 6), x3475, 6), x3413, 6),
        40643,
        4,
    )?;
    let x3477: BytePoly_1 = bigint_sub!(x3, x3475, 1);
    eqz(ctx, &bigint_mul!(x3475, x3477, 2), 8131, 2)?;
    let x3478: BytePoly_4 = bigint_add!(bigint_sub!(x3468, x3438, 4), x6, 4);
    let x3479: BytePoly_4 = bigint_nondet_inv!(ctx, x3478, x6, 4);
    let x3480: BytePoly_8 = bigint_mul!(x3478, x3479, 8);
    let x3481: BytePoly_9 = bigint_nondet_quot!(ctx, x3480, x6, 9);
    let x3482: BytePoly_4 = bigint_nondet_rem!(ctx, x3480, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3481, x6, 13), x3482, 13),
            x3480,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x3482, x1, 4), 34, 1)?;
    let x3483: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x3474, x3440, 4), x6, 4), x3479, 8);
    let x3484: BytePoly_9 = bigint_nondet_quot!(ctx, x3483, x6, 9);
    let x3485: BytePoly_4 = bigint_nondet_rem!(ctx, x3483, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3484, x6, 13), x3485, 13),
            x3483,
            13
        ),
        73156,
        4,
    )?;
    let x3486: BytePoly_8 = bigint_add!(bigint_sub!(x3440, bigint_mul!(x3485, x3438, 8), 8), x6, 8);
    let x3487: BytePoly_8 = bigint_nondet_quot!(ctx, x3486, x6, 8);
    let x3488: BytePoly_4 = bigint_nondet_rem!(ctx, x3486, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3487, x6, 12), x3488, 12),
            x3486,
            12
        ),
        65028,
        4,
    )?;
    let x3489: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x3485, x3485, 8), x3438, 8), x6, 8),
            x3468,
            8
        ),
        x6,
        8
    );
    let x3490: BytePoly_9 = bigint_nondet_quot!(ctx, x3489, x6, 9);
    let x3491: BytePoly_4 = bigint_nondet_rem!(ctx, x3489, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3490, x6, 13), x3491, 13),
            x3489,
            13
        ),
        73156,
        4,
    )?;
    let x3492: BytePoly_8 = bigint_mul!(x3485, x3491, 8);
    let x3493: BytePoly_9 = bigint_nondet_quot!(ctx, x3492, x6, 9);
    let x3494: BytePoly_4 = bigint_nondet_rem!(ctx, x3492, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3493, x6, 13), x3494, 13),
            x3492,
            13
        ),
        73156,
        4,
    )?;
    let x3495: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x3494, x3488, 4), 4), x6, 4);
    let x3496: BytePoly_4 = bigint_nondet_quot!(ctx, x3495, x6, 4);
    let x3497: BytePoly_4 = bigint_nondet_rem!(ctx, x3495, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3496, x6, 8), x3497, 8), x3495, 8),
        32515,
        2,
    )?;
    let x3498: BytePoly_5 = bigint_add!(
        bigint_mul!(x3491, x3475, 5),
        bigint_mul!(x3438, x3477, 5),
        5
    );
    let x3499: BytePoly_5 = bigint_add!(
        bigint_mul!(x3497, x3475, 5),
        bigint_mul!(x3440, x3477, 5),
        5
    );
    let x3500: BytePoly_6 = bigint_nondet_quot!(ctx, x3498, x6, 6);
    let x3501: BytePoly_4 = bigint_nondet_rem!(ctx, x3498, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3500, x6, 10), x3501, 10),
            x3498,
            10
        ),
        48771,
        4,
    )?;
    let x3502: BytePoly_6 = bigint_nondet_quot!(ctx, x3499, x6, 6);
    let x3503: BytePoly_4 = bigint_nondet_rem!(ctx, x3499, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3502, x6, 10), x3503, 10),
            x3499,
            10
        ),
        48771,
        4,
    )?;
    let x3504: BytePoly_8 = bigint_mul!(x3468, x3468, 8);
    let x3505: BytePoly_9 = bigint_nondet_quot!(ctx, x3504, x6, 9);
    let x3506: BytePoly_4 = bigint_nondet_rem!(ctx, x3504, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3505, x6, 13), x3506, 13),
            x3504,
            13
        ),
        73156,
        4,
    )?;
    let x3507: BytePoly_5 = bigint_add!(bigint_mul!(x3506, x0, 5), x5, 5);
    let x3508: BytePoly_6 = bigint_nondet_quot!(ctx, x3507, x6, 6);
    let x3509: BytePoly_4 = bigint_nondet_rem!(ctx, x3507, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3508, x6, 10), x3509, 10),
            x3507,
            10
        ),
        48771,
        4,
    )?;
    let x3510: BytePoly_4 = bigint_add!(x3474, x3474, 4);
    let x3511: BytePoly_4 = bigint_nondet_quot!(ctx, x3510, x6, 4);
    let x3512: BytePoly_4 = bigint_nondet_rem!(ctx, x3510, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3511, x6, 8), x3512, 8), x3510, 8),
        32515,
        2,
    )?;
    let x3513: BytePoly_4 = bigint_nondet_inv!(ctx, x3512, x6, 4);
    let x3514: BytePoly_8 = bigint_mul!(x3512, x3513, 8);
    let x3515: BytePoly_9 = bigint_nondet_quot!(ctx, x3514, x6, 9);
    let x3516: BytePoly_4 = bigint_nondet_rem!(ctx, x3514, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3515, x6, 13), x3516, 13),
            x3514,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x3516, x3, 4), 34, 1)?;
    let x3517: BytePoly_8 = bigint_mul!(x3509, x3513, 8);
    let x3518: BytePoly_9 = bigint_nondet_quot!(ctx, x3517, x6, 9);
    let x3519: BytePoly_4 = bigint_nondet_rem!(ctx, x3517, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3518, x6, 13), x3519, 13),
            x3517,
            13
        ),
        73156,
        4,
    )?;
    let x3520: BytePoly_8 = bigint_mul!(x3519, x3468, 8);
    let x3521: BytePoly_9 = bigint_nondet_quot!(ctx, x3520, x6, 9);
    let x3522: BytePoly_4 = bigint_nondet_rem!(ctx, x3520, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3521, x6, 13), x3522, 13),
            x3520,
            13
        ),
        73156,
        4,
    )?;
    let x3523: BytePoly_4 = bigint_add!(bigint_sub!(x3474, x3522, 4), x6, 4);
    let x3524: BytePoly_4 = bigint_nondet_quot!(ctx, x3523, x6, 4);
    let x3525: BytePoly_4 = bigint_nondet_rem!(ctx, x3523, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3524, x6, 8), x3525, 8), x3523, 8),
        32515,
        2,
    )?;
    let x3526: BytePoly_8 = bigint_mul!(x3519, x3519, 8);
    let x3527: BytePoly_9 = bigint_nondet_quot!(ctx, x3526, x6, 9);
    let x3528: BytePoly_4 = bigint_nondet_rem!(ctx, x3526, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3527, x6, 13), x3528, 13),
            x3526,
            13
        ),
        73156,
        4,
    )?;
    let x3529: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3528, x3468, 4), x6, 4), x3468, 4),
        x6,
        4
    );
    let x3530: BytePoly_4 = bigint_nondet_quot!(ctx, x3529, x6, 4);
    let x3531: BytePoly_4 = bigint_nondet_rem!(ctx, x3529, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3530, x6, 8), x3531, 8), x3529, 8),
        32515,
        2,
    )?;
    let x3532: BytePoly_8 = bigint_mul!(x3519, x3531, 8);
    let x3533: BytePoly_9 = bigint_nondet_quot!(ctx, x3532, x6, 9);
    let x3534: BytePoly_4 = bigint_nondet_rem!(ctx, x3532, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3533, x6, 13), x3534, 13),
            x3532,
            13
        ),
        73156,
        4,
    )?;
    let x3535: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x3534, x3525, 4), 4), x6, 4);
    let x3536: BytePoly_4 = bigint_nondet_quot!(ctx, x3535, x6, 4);
    let x3537: BytePoly_4 = bigint_nondet_rem!(ctx, x3535, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3536, x6, 8), x3537, 8), x3535, 8),
        32515,
        2,
    )?;
    let x3538: BytePoly_1 = bigint_nondet_rem!(ctx, x3476, x2, 1);
    let x3539: BytePoly_5 = bigint_nondet_quot!(ctx, x3476, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3539, x2, 6), x3538, 6), x3476, 6),
        40643,
        4,
    )?;
    let x3540: BytePoly_1 = bigint_sub!(x3, x3538, 1);
    eqz(ctx, &bigint_mul!(x3538, x3540, 2), 8131, 2)?;
    let x3541: BytePoly_4 = bigint_add!(bigint_sub!(x3531, x3501, 4), x6, 4);
    let x3542: BytePoly_4 = bigint_nondet_inv!(ctx, x3541, x6, 4);
    let x3543: BytePoly_8 = bigint_mul!(x3541, x3542, 8);
    let x3544: BytePoly_9 = bigint_nondet_quot!(ctx, x3543, x6, 9);
    let x3545: BytePoly_4 = bigint_nondet_rem!(ctx, x3543, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3544, x6, 13), x3545, 13),
            x3543,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x3545, x1, 4), 34, 1)?;
    let x3546: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x3537, x3503, 4), x6, 4), x3542, 8);
    let x3547: BytePoly_9 = bigint_nondet_quot!(ctx, x3546, x6, 9);
    let x3548: BytePoly_4 = bigint_nondet_rem!(ctx, x3546, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3547, x6, 13), x3548, 13),
            x3546,
            13
        ),
        73156,
        4,
    )?;
    let x3549: BytePoly_8 = bigint_add!(bigint_sub!(x3503, bigint_mul!(x3548, x3501, 8), 8), x6, 8);
    let x3550: BytePoly_8 = bigint_nondet_quot!(ctx, x3549, x6, 8);
    let x3551: BytePoly_4 = bigint_nondet_rem!(ctx, x3549, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3550, x6, 12), x3551, 12),
            x3549,
            12
        ),
        65028,
        4,
    )?;
    let x3552: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x3548, x3548, 8), x3501, 8), x6, 8),
            x3531,
            8
        ),
        x6,
        8
    );
    let x3553: BytePoly_9 = bigint_nondet_quot!(ctx, x3552, x6, 9);
    let x3554: BytePoly_4 = bigint_nondet_rem!(ctx, x3552, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3553, x6, 13), x3554, 13),
            x3552,
            13
        ),
        73156,
        4,
    )?;
    let x3555: BytePoly_8 = bigint_mul!(x3548, x3554, 8);
    let x3556: BytePoly_9 = bigint_nondet_quot!(ctx, x3555, x6, 9);
    let x3557: BytePoly_4 = bigint_nondet_rem!(ctx, x3555, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3556, x6, 13), x3557, 13),
            x3555,
            13
        ),
        73156,
        4,
    )?;
    let x3558: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x3557, x3551, 4), 4), x6, 4);
    let x3559: BytePoly_4 = bigint_nondet_quot!(ctx, x3558, x6, 4);
    let x3560: BytePoly_4 = bigint_nondet_rem!(ctx, x3558, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3559, x6, 8), x3560, 8), x3558, 8),
        32515,
        2,
    )?;
    let x3561: BytePoly_5 = bigint_add!(
        bigint_mul!(x3554, x3538, 5),
        bigint_mul!(x3501, x3540, 5),
        5
    );
    let x3562: BytePoly_5 = bigint_add!(
        bigint_mul!(x3560, x3538, 5),
        bigint_mul!(x3503, x3540, 5),
        5
    );
    let x3563: BytePoly_6 = bigint_nondet_quot!(ctx, x3561, x6, 6);
    let x3564: BytePoly_4 = bigint_nondet_rem!(ctx, x3561, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3563, x6, 10), x3564, 10),
            x3561,
            10
        ),
        48771,
        4,
    )?;
    let x3565: BytePoly_6 = bigint_nondet_quot!(ctx, x3562, x6, 6);
    let x3566: BytePoly_4 = bigint_nondet_rem!(ctx, x3562, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3565, x6, 10), x3566, 10),
            x3562,
            10
        ),
        48771,
        4,
    )?;
    let x3567: BytePoly_8 = bigint_mul!(x3531, x3531, 8);
    let x3568: BytePoly_9 = bigint_nondet_quot!(ctx, x3567, x6, 9);
    let x3569: BytePoly_4 = bigint_nondet_rem!(ctx, x3567, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3568, x6, 13), x3569, 13),
            x3567,
            13
        ),
        73156,
        4,
    )?;
    let x3570: BytePoly_5 = bigint_add!(bigint_mul!(x3569, x0, 5), x5, 5);
    let x3571: BytePoly_6 = bigint_nondet_quot!(ctx, x3570, x6, 6);
    let x3572: BytePoly_4 = bigint_nondet_rem!(ctx, x3570, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3571, x6, 10), x3572, 10),
            x3570,
            10
        ),
        48771,
        4,
    )?;
    let x3573: BytePoly_4 = bigint_add!(x3537, x3537, 4);
    let x3574: BytePoly_4 = bigint_nondet_quot!(ctx, x3573, x6, 4);
    let x3575: BytePoly_4 = bigint_nondet_rem!(ctx, x3573, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3574, x6, 8), x3575, 8), x3573, 8),
        32515,
        2,
    )?;
    let x3576: BytePoly_4 = bigint_nondet_inv!(ctx, x3575, x6, 4);
    let x3577: BytePoly_8 = bigint_mul!(x3575, x3576, 8);
    let x3578: BytePoly_9 = bigint_nondet_quot!(ctx, x3577, x6, 9);
    let x3579: BytePoly_4 = bigint_nondet_rem!(ctx, x3577, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3578, x6, 13), x3579, 13),
            x3577,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x3579, x3, 4), 34, 1)?;
    let x3580: BytePoly_8 = bigint_mul!(x3572, x3576, 8);
    let x3581: BytePoly_9 = bigint_nondet_quot!(ctx, x3580, x6, 9);
    let x3582: BytePoly_4 = bigint_nondet_rem!(ctx, x3580, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3581, x6, 13), x3582, 13),
            x3580,
            13
        ),
        73156,
        4,
    )?;
    let x3583: BytePoly_8 = bigint_mul!(x3582, x3531, 8);
    let x3584: BytePoly_9 = bigint_nondet_quot!(ctx, x3583, x6, 9);
    let x3585: BytePoly_4 = bigint_nondet_rem!(ctx, x3583, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3584, x6, 13), x3585, 13),
            x3583,
            13
        ),
        73156,
        4,
    )?;
    let x3586: BytePoly_4 = bigint_add!(bigint_sub!(x3537, x3585, 4), x6, 4);
    let x3587: BytePoly_4 = bigint_nondet_quot!(ctx, x3586, x6, 4);
    let x3588: BytePoly_4 = bigint_nondet_rem!(ctx, x3586, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3587, x6, 8), x3588, 8), x3586, 8),
        32515,
        2,
    )?;
    let x3589: BytePoly_8 = bigint_mul!(x3582, x3582, 8);
    let x3590: BytePoly_9 = bigint_nondet_quot!(ctx, x3589, x6, 9);
    let x3591: BytePoly_4 = bigint_nondet_rem!(ctx, x3589, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3590, x6, 13), x3591, 13),
            x3589,
            13
        ),
        73156,
        4,
    )?;
    let x3592: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3591, x3531, 4), x6, 4), x3531, 4),
        x6,
        4
    );
    let x3593: BytePoly_4 = bigint_nondet_quot!(ctx, x3592, x6, 4);
    let x3594: BytePoly_4 = bigint_nondet_rem!(ctx, x3592, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3593, x6, 8), x3594, 8), x3592, 8),
        32515,
        2,
    )?;
    let x3595: BytePoly_8 = bigint_mul!(x3582, x3594, 8);
    let x3596: BytePoly_9 = bigint_nondet_quot!(ctx, x3595, x6, 9);
    let x3597: BytePoly_4 = bigint_nondet_rem!(ctx, x3595, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3596, x6, 13), x3597, 13),
            x3595,
            13
        ),
        73156,
        4,
    )?;
    let x3598: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x3597, x3588, 4), 4), x6, 4);
    let x3599: BytePoly_4 = bigint_nondet_quot!(ctx, x3598, x6, 4);
    let x3600: BytePoly_4 = bigint_nondet_rem!(ctx, x3598, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3599, x6, 8), x3600, 8), x3598, 8),
        32515,
        2,
    )?;
    let x3601: BytePoly_1 = bigint_nondet_rem!(ctx, x3539, x2, 1);
    let x3602: BytePoly_5 = bigint_nondet_quot!(ctx, x3539, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3602, x2, 6), x3601, 6), x3539, 6),
        40643,
        4,
    )?;
    let x3603: BytePoly_1 = bigint_sub!(x3, x3601, 1);
    eqz(ctx, &bigint_mul!(x3601, x3603, 2), 8131, 2)?;
    let x3604: BytePoly_4 = bigint_add!(bigint_sub!(x3594, x3564, 4), x6, 4);
    let x3605: BytePoly_4 = bigint_nondet_inv!(ctx, x3604, x6, 4);
    let x3606: BytePoly_8 = bigint_mul!(x3604, x3605, 8);
    let x3607: BytePoly_9 = bigint_nondet_quot!(ctx, x3606, x6, 9);
    let x3608: BytePoly_4 = bigint_nondet_rem!(ctx, x3606, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3607, x6, 13), x3608, 13),
            x3606,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x3608, x1, 4), 34, 1)?;
    let x3609: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x3600, x3566, 4), x6, 4), x3605, 8);
    let x3610: BytePoly_9 = bigint_nondet_quot!(ctx, x3609, x6, 9);
    let x3611: BytePoly_4 = bigint_nondet_rem!(ctx, x3609, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3610, x6, 13), x3611, 13),
            x3609,
            13
        ),
        73156,
        4,
    )?;
    let x3612: BytePoly_8 = bigint_add!(bigint_sub!(x3566, bigint_mul!(x3611, x3564, 8), 8), x6, 8);
    let x3613: BytePoly_8 = bigint_nondet_quot!(ctx, x3612, x6, 8);
    let x3614: BytePoly_4 = bigint_nondet_rem!(ctx, x3612, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3613, x6, 12), x3614, 12),
            x3612,
            12
        ),
        65028,
        4,
    )?;
    let x3615: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x3611, x3611, 8), x3564, 8), x6, 8),
            x3594,
            8
        ),
        x6,
        8
    );
    let x3616: BytePoly_9 = bigint_nondet_quot!(ctx, x3615, x6, 9);
    let x3617: BytePoly_4 = bigint_nondet_rem!(ctx, x3615, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3616, x6, 13), x3617, 13),
            x3615,
            13
        ),
        73156,
        4,
    )?;
    let x3618: BytePoly_8 = bigint_mul!(x3611, x3617, 8);
    let x3619: BytePoly_9 = bigint_nondet_quot!(ctx, x3618, x6, 9);
    let x3620: BytePoly_4 = bigint_nondet_rem!(ctx, x3618, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3619, x6, 13), x3620, 13),
            x3618,
            13
        ),
        73156,
        4,
    )?;
    let x3621: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x3620, x3614, 4), 4), x6, 4);
    let x3622: BytePoly_4 = bigint_nondet_quot!(ctx, x3621, x6, 4);
    let x3623: BytePoly_4 = bigint_nondet_rem!(ctx, x3621, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3622, x6, 8), x3623, 8), x3621, 8),
        32515,
        2,
    )?;
    let x3624: BytePoly_5 = bigint_add!(
        bigint_mul!(x3617, x3601, 5),
        bigint_mul!(x3564, x3603, 5),
        5
    );
    let x3625: BytePoly_5 = bigint_add!(
        bigint_mul!(x3623, x3601, 5),
        bigint_mul!(x3566, x3603, 5),
        5
    );
    let x3626: BytePoly_6 = bigint_nondet_quot!(ctx, x3624, x6, 6);
    let x3627: BytePoly_4 = bigint_nondet_rem!(ctx, x3624, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3626, x6, 10), x3627, 10),
            x3624,
            10
        ),
        48771,
        4,
    )?;
    let x3628: BytePoly_6 = bigint_nondet_quot!(ctx, x3625, x6, 6);
    let x3629: BytePoly_4 = bigint_nondet_rem!(ctx, x3625, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3628, x6, 10), x3629, 10),
            x3625,
            10
        ),
        48771,
        4,
    )?;
    let x3630: BytePoly_8 = bigint_mul!(x3594, x3594, 8);
    let x3631: BytePoly_9 = bigint_nondet_quot!(ctx, x3630, x6, 9);
    let x3632: BytePoly_4 = bigint_nondet_rem!(ctx, x3630, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3631, x6, 13), x3632, 13),
            x3630,
            13
        ),
        73156,
        4,
    )?;
    let x3633: BytePoly_5 = bigint_add!(bigint_mul!(x3632, x0, 5), x5, 5);
    let x3634: BytePoly_6 = bigint_nondet_quot!(ctx, x3633, x6, 6);
    let x3635: BytePoly_4 = bigint_nondet_rem!(ctx, x3633, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3634, x6, 10), x3635, 10),
            x3633,
            10
        ),
        48771,
        4,
    )?;
    let x3636: BytePoly_4 = bigint_add!(x3600, x3600, 4);
    let x3637: BytePoly_4 = bigint_nondet_quot!(ctx, x3636, x6, 4);
    let x3638: BytePoly_4 = bigint_nondet_rem!(ctx, x3636, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3637, x6, 8), x3638, 8), x3636, 8),
        32515,
        2,
    )?;
    let x3639: BytePoly_4 = bigint_nondet_inv!(ctx, x3638, x6, 4);
    let x3640: BytePoly_8 = bigint_mul!(x3638, x3639, 8);
    let x3641: BytePoly_9 = bigint_nondet_quot!(ctx, x3640, x6, 9);
    let x3642: BytePoly_4 = bigint_nondet_rem!(ctx, x3640, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3641, x6, 13), x3642, 13),
            x3640,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x3642, x3, 4), 34, 1)?;
    let x3643: BytePoly_8 = bigint_mul!(x3635, x3639, 8);
    let x3644: BytePoly_9 = bigint_nondet_quot!(ctx, x3643, x6, 9);
    let x3645: BytePoly_4 = bigint_nondet_rem!(ctx, x3643, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3644, x6, 13), x3645, 13),
            x3643,
            13
        ),
        73156,
        4,
    )?;
    let x3646: BytePoly_8 = bigint_mul!(x3645, x3594, 8);
    let x3647: BytePoly_9 = bigint_nondet_quot!(ctx, x3646, x6, 9);
    let x3648: BytePoly_4 = bigint_nondet_rem!(ctx, x3646, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3647, x6, 13), x3648, 13),
            x3646,
            13
        ),
        73156,
        4,
    )?;
    let x3649: BytePoly_4 = bigint_add!(bigint_sub!(x3600, x3648, 4), x6, 4);
    let x3650: BytePoly_4 = bigint_nondet_quot!(ctx, x3649, x6, 4);
    let x3651: BytePoly_4 = bigint_nondet_rem!(ctx, x3649, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3650, x6, 8), x3651, 8), x3649, 8),
        32515,
        2,
    )?;
    let x3652: BytePoly_8 = bigint_mul!(x3645, x3645, 8);
    let x3653: BytePoly_9 = bigint_nondet_quot!(ctx, x3652, x6, 9);
    let x3654: BytePoly_4 = bigint_nondet_rem!(ctx, x3652, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3653, x6, 13), x3654, 13),
            x3652,
            13
        ),
        73156,
        4,
    )?;
    let x3655: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3654, x3594, 4), x6, 4), x3594, 4),
        x6,
        4
    );
    let x3656: BytePoly_4 = bigint_nondet_quot!(ctx, x3655, x6, 4);
    let x3657: BytePoly_4 = bigint_nondet_rem!(ctx, x3655, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3656, x6, 8), x3657, 8), x3655, 8),
        32515,
        2,
    )?;
    let x3658: BytePoly_8 = bigint_mul!(x3645, x3657, 8);
    let x3659: BytePoly_9 = bigint_nondet_quot!(ctx, x3658, x6, 9);
    let x3660: BytePoly_4 = bigint_nondet_rem!(ctx, x3658, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3659, x6, 13), x3660, 13),
            x3658,
            13
        ),
        73156,
        4,
    )?;
    let x3661: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x3660, x3651, 4), 4), x6, 4);
    let x3662: BytePoly_4 = bigint_nondet_quot!(ctx, x3661, x6, 4);
    let x3663: BytePoly_4 = bigint_nondet_rem!(ctx, x3661, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3662, x6, 8), x3663, 8), x3661, 8),
        32515,
        2,
    )?;
    let x3664: BytePoly_1 = bigint_nondet_rem!(ctx, x3602, x2, 1);
    let x3665: BytePoly_5 = bigint_nondet_quot!(ctx, x3602, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3665, x2, 6), x3664, 6), x3602, 6),
        40643,
        4,
    )?;
    let x3666: BytePoly_1 = bigint_sub!(x3, x3664, 1);
    eqz(ctx, &bigint_mul!(x3664, x3666, 2), 8131, 2)?;
    let x3667: BytePoly_4 = bigint_add!(bigint_sub!(x3657, x3627, 4), x6, 4);
    let x3668: BytePoly_4 = bigint_nondet_inv!(ctx, x3667, x6, 4);
    let x3669: BytePoly_8 = bigint_mul!(x3667, x3668, 8);
    let x3670: BytePoly_9 = bigint_nondet_quot!(ctx, x3669, x6, 9);
    let x3671: BytePoly_4 = bigint_nondet_rem!(ctx, x3669, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3670, x6, 13), x3671, 13),
            x3669,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x3671, x1, 4), 34, 1)?;
    let x3672: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x3663, x3629, 4), x6, 4), x3668, 8);
    let x3673: BytePoly_9 = bigint_nondet_quot!(ctx, x3672, x6, 9);
    let x3674: BytePoly_4 = bigint_nondet_rem!(ctx, x3672, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3673, x6, 13), x3674, 13),
            x3672,
            13
        ),
        73156,
        4,
    )?;
    let x3675: BytePoly_8 = bigint_add!(bigint_sub!(x3629, bigint_mul!(x3674, x3627, 8), 8), x6, 8);
    let x3676: BytePoly_8 = bigint_nondet_quot!(ctx, x3675, x6, 8);
    let x3677: BytePoly_4 = bigint_nondet_rem!(ctx, x3675, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3676, x6, 12), x3677, 12),
            x3675,
            12
        ),
        65028,
        4,
    )?;
    let x3678: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x3674, x3674, 8), x3627, 8), x6, 8),
            x3657,
            8
        ),
        x6,
        8
    );
    let x3679: BytePoly_9 = bigint_nondet_quot!(ctx, x3678, x6, 9);
    let x3680: BytePoly_4 = bigint_nondet_rem!(ctx, x3678, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3679, x6, 13), x3680, 13),
            x3678,
            13
        ),
        73156,
        4,
    )?;
    let x3681: BytePoly_8 = bigint_mul!(x3674, x3680, 8);
    let x3682: BytePoly_9 = bigint_nondet_quot!(ctx, x3681, x6, 9);
    let x3683: BytePoly_4 = bigint_nondet_rem!(ctx, x3681, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3682, x6, 13), x3683, 13),
            x3681,
            13
        ),
        73156,
        4,
    )?;
    let x3684: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x3683, x3677, 4), 4), x6, 4);
    let x3685: BytePoly_4 = bigint_nondet_quot!(ctx, x3684, x6, 4);
    let x3686: BytePoly_4 = bigint_nondet_rem!(ctx, x3684, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3685, x6, 8), x3686, 8), x3684, 8),
        32515,
        2,
    )?;
    let x3687: BytePoly_5 = bigint_add!(
        bigint_mul!(x3680, x3664, 5),
        bigint_mul!(x3627, x3666, 5),
        5
    );
    let x3688: BytePoly_5 = bigint_add!(
        bigint_mul!(x3686, x3664, 5),
        bigint_mul!(x3629, x3666, 5),
        5
    );
    let x3689: BytePoly_6 = bigint_nondet_quot!(ctx, x3687, x6, 6);
    let x3690: BytePoly_4 = bigint_nondet_rem!(ctx, x3687, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3689, x6, 10), x3690, 10),
            x3687,
            10
        ),
        48771,
        4,
    )?;
    let x3691: BytePoly_6 = bigint_nondet_quot!(ctx, x3688, x6, 6);
    let x3692: BytePoly_4 = bigint_nondet_rem!(ctx, x3688, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3691, x6, 10), x3692, 10),
            x3688,
            10
        ),
        48771,
        4,
    )?;
    let x3693: BytePoly_8 = bigint_mul!(x3657, x3657, 8);
    let x3694: BytePoly_9 = bigint_nondet_quot!(ctx, x3693, x6, 9);
    let x3695: BytePoly_4 = bigint_nondet_rem!(ctx, x3693, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3694, x6, 13), x3695, 13),
            x3693,
            13
        ),
        73156,
        4,
    )?;
    let x3696: BytePoly_5 = bigint_add!(bigint_mul!(x3695, x0, 5), x5, 5);
    let x3697: BytePoly_6 = bigint_nondet_quot!(ctx, x3696, x6, 6);
    let x3698: BytePoly_4 = bigint_nondet_rem!(ctx, x3696, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3697, x6, 10), x3698, 10),
            x3696,
            10
        ),
        48771,
        4,
    )?;
    let x3699: BytePoly_4 = bigint_add!(x3663, x3663, 4);
    let x3700: BytePoly_4 = bigint_nondet_quot!(ctx, x3699, x6, 4);
    let x3701: BytePoly_4 = bigint_nondet_rem!(ctx, x3699, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3700, x6, 8), x3701, 8), x3699, 8),
        32515,
        2,
    )?;
    let x3702: BytePoly_4 = bigint_nondet_inv!(ctx, x3701, x6, 4);
    let x3703: BytePoly_8 = bigint_mul!(x3701, x3702, 8);
    let x3704: BytePoly_9 = bigint_nondet_quot!(ctx, x3703, x6, 9);
    let x3705: BytePoly_4 = bigint_nondet_rem!(ctx, x3703, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3704, x6, 13), x3705, 13),
            x3703,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x3705, x3, 4), 34, 1)?;
    let x3706: BytePoly_8 = bigint_mul!(x3698, x3702, 8);
    let x3707: BytePoly_9 = bigint_nondet_quot!(ctx, x3706, x6, 9);
    let x3708: BytePoly_4 = bigint_nondet_rem!(ctx, x3706, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3707, x6, 13), x3708, 13),
            x3706,
            13
        ),
        73156,
        4,
    )?;
    let x3709: BytePoly_8 = bigint_mul!(x3708, x3657, 8);
    let x3710: BytePoly_9 = bigint_nondet_quot!(ctx, x3709, x6, 9);
    let x3711: BytePoly_4 = bigint_nondet_rem!(ctx, x3709, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3710, x6, 13), x3711, 13),
            x3709,
            13
        ),
        73156,
        4,
    )?;
    let x3712: BytePoly_4 = bigint_add!(bigint_sub!(x3663, x3711, 4), x6, 4);
    let x3713: BytePoly_4 = bigint_nondet_quot!(ctx, x3712, x6, 4);
    let x3714: BytePoly_4 = bigint_nondet_rem!(ctx, x3712, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3713, x6, 8), x3714, 8), x3712, 8),
        32515,
        2,
    )?;
    let x3715: BytePoly_8 = bigint_mul!(x3708, x3708, 8);
    let x3716: BytePoly_9 = bigint_nondet_quot!(ctx, x3715, x6, 9);
    let x3717: BytePoly_4 = bigint_nondet_rem!(ctx, x3715, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3716, x6, 13), x3717, 13),
            x3715,
            13
        ),
        73156,
        4,
    )?;
    let x3718: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3717, x3657, 4), x6, 4), x3657, 4),
        x6,
        4
    );
    let x3719: BytePoly_4 = bigint_nondet_quot!(ctx, x3718, x6, 4);
    let x3720: BytePoly_4 = bigint_nondet_rem!(ctx, x3718, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3719, x6, 8), x3720, 8), x3718, 8),
        32515,
        2,
    )?;
    let x3721: BytePoly_8 = bigint_mul!(x3708, x3720, 8);
    let x3722: BytePoly_9 = bigint_nondet_quot!(ctx, x3721, x6, 9);
    let x3723: BytePoly_4 = bigint_nondet_rem!(ctx, x3721, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3722, x6, 13), x3723, 13),
            x3721,
            13
        ),
        73156,
        4,
    )?;
    let x3724: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x3723, x3714, 4), 4), x6, 4);
    let x3725: BytePoly_4 = bigint_nondet_quot!(ctx, x3724, x6, 4);
    let x3726: BytePoly_4 = bigint_nondet_rem!(ctx, x3724, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3725, x6, 8), x3726, 8), x3724, 8),
        32515,
        2,
    )?;
    let x3727: BytePoly_1 = bigint_nondet_rem!(ctx, x3665, x2, 1);
    let x3728: BytePoly_5 = bigint_nondet_quot!(ctx, x3665, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3728, x2, 6), x3727, 6), x3665, 6),
        40643,
        4,
    )?;
    let x3729: BytePoly_1 = bigint_sub!(x3, x3727, 1);
    eqz(ctx, &bigint_mul!(x3727, x3729, 2), 8131, 2)?;
    let x3730: BytePoly_4 = bigint_add!(bigint_sub!(x3720, x3690, 4), x6, 4);
    let x3731: BytePoly_4 = bigint_nondet_inv!(ctx, x3730, x6, 4);
    let x3732: BytePoly_8 = bigint_mul!(x3730, x3731, 8);
    let x3733: BytePoly_9 = bigint_nondet_quot!(ctx, x3732, x6, 9);
    let x3734: BytePoly_4 = bigint_nondet_rem!(ctx, x3732, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3733, x6, 13), x3734, 13),
            x3732,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x3734, x1, 4), 34, 1)?;
    let x3735: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x3726, x3692, 4), x6, 4), x3731, 8);
    let x3736: BytePoly_9 = bigint_nondet_quot!(ctx, x3735, x6, 9);
    let x3737: BytePoly_4 = bigint_nondet_rem!(ctx, x3735, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3736, x6, 13), x3737, 13),
            x3735,
            13
        ),
        73156,
        4,
    )?;
    let x3738: BytePoly_8 = bigint_add!(bigint_sub!(x3692, bigint_mul!(x3737, x3690, 8), 8), x6, 8);
    let x3739: BytePoly_8 = bigint_nondet_quot!(ctx, x3738, x6, 8);
    let x3740: BytePoly_4 = bigint_nondet_rem!(ctx, x3738, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3739, x6, 12), x3740, 12),
            x3738,
            12
        ),
        65028,
        4,
    )?;
    let x3741: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x3737, x3737, 8), x3690, 8), x6, 8),
            x3720,
            8
        ),
        x6,
        8
    );
    let x3742: BytePoly_9 = bigint_nondet_quot!(ctx, x3741, x6, 9);
    let x3743: BytePoly_4 = bigint_nondet_rem!(ctx, x3741, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3742, x6, 13), x3743, 13),
            x3741,
            13
        ),
        73156,
        4,
    )?;
    let x3744: BytePoly_8 = bigint_mul!(x3737, x3743, 8);
    let x3745: BytePoly_9 = bigint_nondet_quot!(ctx, x3744, x6, 9);
    let x3746: BytePoly_4 = bigint_nondet_rem!(ctx, x3744, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3745, x6, 13), x3746, 13),
            x3744,
            13
        ),
        73156,
        4,
    )?;
    let x3747: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x3746, x3740, 4), 4), x6, 4);
    let x3748: BytePoly_4 = bigint_nondet_quot!(ctx, x3747, x6, 4);
    let x3749: BytePoly_4 = bigint_nondet_rem!(ctx, x3747, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3748, x6, 8), x3749, 8), x3747, 8),
        32515,
        2,
    )?;
    let x3750: BytePoly_5 = bigint_add!(
        bigint_mul!(x3743, x3727, 5),
        bigint_mul!(x3690, x3729, 5),
        5
    );
    let x3751: BytePoly_5 = bigint_add!(
        bigint_mul!(x3749, x3727, 5),
        bigint_mul!(x3692, x3729, 5),
        5
    );
    let x3752: BytePoly_6 = bigint_nondet_quot!(ctx, x3750, x6, 6);
    let x3753: BytePoly_4 = bigint_nondet_rem!(ctx, x3750, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3752, x6, 10), x3753, 10),
            x3750,
            10
        ),
        48771,
        4,
    )?;
    let x3754: BytePoly_6 = bigint_nondet_quot!(ctx, x3751, x6, 6);
    let x3755: BytePoly_4 = bigint_nondet_rem!(ctx, x3751, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3754, x6, 10), x3755, 10),
            x3751,
            10
        ),
        48771,
        4,
    )?;
    let x3756: BytePoly_8 = bigint_mul!(x3720, x3720, 8);
    let x3757: BytePoly_9 = bigint_nondet_quot!(ctx, x3756, x6, 9);
    let x3758: BytePoly_4 = bigint_nondet_rem!(ctx, x3756, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3757, x6, 13), x3758, 13),
            x3756,
            13
        ),
        73156,
        4,
    )?;
    let x3759: BytePoly_5 = bigint_add!(bigint_mul!(x3758, x0, 5), x5, 5);
    let x3760: BytePoly_6 = bigint_nondet_quot!(ctx, x3759, x6, 6);
    let x3761: BytePoly_4 = bigint_nondet_rem!(ctx, x3759, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3760, x6, 10), x3761, 10),
            x3759,
            10
        ),
        48771,
        4,
    )?;
    let x3762: BytePoly_4 = bigint_add!(x3726, x3726, 4);
    let x3763: BytePoly_4 = bigint_nondet_quot!(ctx, x3762, x6, 4);
    let x3764: BytePoly_4 = bigint_nondet_rem!(ctx, x3762, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3763, x6, 8), x3764, 8), x3762, 8),
        32515,
        2,
    )?;
    let x3765: BytePoly_4 = bigint_nondet_inv!(ctx, x3764, x6, 4);
    let x3766: BytePoly_8 = bigint_mul!(x3764, x3765, 8);
    let x3767: BytePoly_9 = bigint_nondet_quot!(ctx, x3766, x6, 9);
    let x3768: BytePoly_4 = bigint_nondet_rem!(ctx, x3766, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3767, x6, 13), x3768, 13),
            x3766,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x3768, x3, 4), 34, 1)?;
    let x3769: BytePoly_8 = bigint_mul!(x3761, x3765, 8);
    let x3770: BytePoly_9 = bigint_nondet_quot!(ctx, x3769, x6, 9);
    let x3771: BytePoly_4 = bigint_nondet_rem!(ctx, x3769, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3770, x6, 13), x3771, 13),
            x3769,
            13
        ),
        73156,
        4,
    )?;
    let x3772: BytePoly_8 = bigint_mul!(x3771, x3720, 8);
    let x3773: BytePoly_9 = bigint_nondet_quot!(ctx, x3772, x6, 9);
    let x3774: BytePoly_4 = bigint_nondet_rem!(ctx, x3772, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3773, x6, 13), x3774, 13),
            x3772,
            13
        ),
        73156,
        4,
    )?;
    let x3775: BytePoly_4 = bigint_add!(bigint_sub!(x3726, x3774, 4), x6, 4);
    let x3776: BytePoly_4 = bigint_nondet_quot!(ctx, x3775, x6, 4);
    let x3777: BytePoly_4 = bigint_nondet_rem!(ctx, x3775, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3776, x6, 8), x3777, 8), x3775, 8),
        32515,
        2,
    )?;
    let x3778: BytePoly_8 = bigint_mul!(x3771, x3771, 8);
    let x3779: BytePoly_9 = bigint_nondet_quot!(ctx, x3778, x6, 9);
    let x3780: BytePoly_4 = bigint_nondet_rem!(ctx, x3778, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3779, x6, 13), x3780, 13),
            x3778,
            13
        ),
        73156,
        4,
    )?;
    let x3781: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3780, x3720, 4), x6, 4), x3720, 4),
        x6,
        4
    );
    let x3782: BytePoly_4 = bigint_nondet_quot!(ctx, x3781, x6, 4);
    let x3783: BytePoly_4 = bigint_nondet_rem!(ctx, x3781, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3782, x6, 8), x3783, 8), x3781, 8),
        32515,
        2,
    )?;
    let x3784: BytePoly_8 = bigint_mul!(x3771, x3783, 8);
    let x3785: BytePoly_9 = bigint_nondet_quot!(ctx, x3784, x6, 9);
    let x3786: BytePoly_4 = bigint_nondet_rem!(ctx, x3784, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3785, x6, 13), x3786, 13),
            x3784,
            13
        ),
        73156,
        4,
    )?;
    let x3787: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x3786, x3777, 4), 4), x6, 4);
    let x3788: BytePoly_4 = bigint_nondet_quot!(ctx, x3787, x6, 4);
    let x3789: BytePoly_4 = bigint_nondet_rem!(ctx, x3787, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3788, x6, 8), x3789, 8), x3787, 8),
        32515,
        2,
    )?;
    let x3790: BytePoly_1 = bigint_nondet_rem!(ctx, x3728, x2, 1);
    let x3791: BytePoly_5 = bigint_nondet_quot!(ctx, x3728, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3791, x2, 6), x3790, 6), x3728, 6),
        40643,
        4,
    )?;
    let x3792: BytePoly_1 = bigint_sub!(x3, x3790, 1);
    eqz(ctx, &bigint_mul!(x3790, x3792, 2), 8131, 2)?;
    let x3793: BytePoly_4 = bigint_add!(bigint_sub!(x3783, x3753, 4), x6, 4);
    let x3794: BytePoly_4 = bigint_nondet_inv!(ctx, x3793, x6, 4);
    let x3795: BytePoly_8 = bigint_mul!(x3793, x3794, 8);
    let x3796: BytePoly_9 = bigint_nondet_quot!(ctx, x3795, x6, 9);
    let x3797: BytePoly_4 = bigint_nondet_rem!(ctx, x3795, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3796, x6, 13), x3797, 13),
            x3795,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x3797, x1, 4), 34, 1)?;
    let x3798: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x3789, x3755, 4), x6, 4), x3794, 8);
    let x3799: BytePoly_9 = bigint_nondet_quot!(ctx, x3798, x6, 9);
    let x3800: BytePoly_4 = bigint_nondet_rem!(ctx, x3798, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3799, x6, 13), x3800, 13),
            x3798,
            13
        ),
        73156,
        4,
    )?;
    let x3801: BytePoly_8 = bigint_add!(bigint_sub!(x3755, bigint_mul!(x3800, x3753, 8), 8), x6, 8);
    let x3802: BytePoly_8 = bigint_nondet_quot!(ctx, x3801, x6, 8);
    let x3803: BytePoly_4 = bigint_nondet_rem!(ctx, x3801, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3802, x6, 12), x3803, 12),
            x3801,
            12
        ),
        65028,
        4,
    )?;
    let x3804: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x3800, x3800, 8), x3753, 8), x6, 8),
            x3783,
            8
        ),
        x6,
        8
    );
    let x3805: BytePoly_9 = bigint_nondet_quot!(ctx, x3804, x6, 9);
    let x3806: BytePoly_4 = bigint_nondet_rem!(ctx, x3804, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3805, x6, 13), x3806, 13),
            x3804,
            13
        ),
        73156,
        4,
    )?;
    let x3807: BytePoly_8 = bigint_mul!(x3800, x3806, 8);
    let x3808: BytePoly_9 = bigint_nondet_quot!(ctx, x3807, x6, 9);
    let x3809: BytePoly_4 = bigint_nondet_rem!(ctx, x3807, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3808, x6, 13), x3809, 13),
            x3807,
            13
        ),
        73156,
        4,
    )?;
    let x3810: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x3809, x3803, 4), 4), x6, 4);
    let x3811: BytePoly_4 = bigint_nondet_quot!(ctx, x3810, x6, 4);
    let x3812: BytePoly_4 = bigint_nondet_rem!(ctx, x3810, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3811, x6, 8), x3812, 8), x3810, 8),
        32515,
        2,
    )?;
    let x3813: BytePoly_5 = bigint_add!(
        bigint_mul!(x3806, x3790, 5),
        bigint_mul!(x3753, x3792, 5),
        5
    );
    let x3814: BytePoly_5 = bigint_add!(
        bigint_mul!(x3812, x3790, 5),
        bigint_mul!(x3755, x3792, 5),
        5
    );
    let x3815: BytePoly_6 = bigint_nondet_quot!(ctx, x3813, x6, 6);
    let x3816: BytePoly_4 = bigint_nondet_rem!(ctx, x3813, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3815, x6, 10), x3816, 10),
            x3813,
            10
        ),
        48771,
        4,
    )?;
    let x3817: BytePoly_6 = bigint_nondet_quot!(ctx, x3814, x6, 6);
    let x3818: BytePoly_4 = bigint_nondet_rem!(ctx, x3814, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3817, x6, 10), x3818, 10),
            x3814,
            10
        ),
        48771,
        4,
    )?;
    let x3819: BytePoly_8 = bigint_mul!(x3783, x3783, 8);
    let x3820: BytePoly_9 = bigint_nondet_quot!(ctx, x3819, x6, 9);
    let x3821: BytePoly_4 = bigint_nondet_rem!(ctx, x3819, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3820, x6, 13), x3821, 13),
            x3819,
            13
        ),
        73156,
        4,
    )?;
    let x3822: BytePoly_5 = bigint_add!(bigint_mul!(x3821, x0, 5), x5, 5);
    let x3823: BytePoly_6 = bigint_nondet_quot!(ctx, x3822, x6, 6);
    let x3824: BytePoly_4 = bigint_nondet_rem!(ctx, x3822, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3823, x6, 10), x3824, 10),
            x3822,
            10
        ),
        48771,
        4,
    )?;
    let x3825: BytePoly_4 = bigint_add!(x3789, x3789, 4);
    let x3826: BytePoly_4 = bigint_nondet_quot!(ctx, x3825, x6, 4);
    let x3827: BytePoly_4 = bigint_nondet_rem!(ctx, x3825, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3826, x6, 8), x3827, 8), x3825, 8),
        32515,
        2,
    )?;
    let x3828: BytePoly_4 = bigint_nondet_inv!(ctx, x3827, x6, 4);
    let x3829: BytePoly_8 = bigint_mul!(x3827, x3828, 8);
    let x3830: BytePoly_9 = bigint_nondet_quot!(ctx, x3829, x6, 9);
    let x3831: BytePoly_4 = bigint_nondet_rem!(ctx, x3829, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3830, x6, 13), x3831, 13),
            x3829,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x3831, x3, 4), 34, 1)?;
    let x3832: BytePoly_8 = bigint_mul!(x3824, x3828, 8);
    let x3833: BytePoly_9 = bigint_nondet_quot!(ctx, x3832, x6, 9);
    let x3834: BytePoly_4 = bigint_nondet_rem!(ctx, x3832, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3833, x6, 13), x3834, 13),
            x3832,
            13
        ),
        73156,
        4,
    )?;
    let x3835: BytePoly_8 = bigint_mul!(x3834, x3783, 8);
    let x3836: BytePoly_9 = bigint_nondet_quot!(ctx, x3835, x6, 9);
    let x3837: BytePoly_4 = bigint_nondet_rem!(ctx, x3835, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3836, x6, 13), x3837, 13),
            x3835,
            13
        ),
        73156,
        4,
    )?;
    let x3838: BytePoly_4 = bigint_add!(bigint_sub!(x3789, x3837, 4), x6, 4);
    let x3839: BytePoly_4 = bigint_nondet_quot!(ctx, x3838, x6, 4);
    let x3840: BytePoly_4 = bigint_nondet_rem!(ctx, x3838, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3839, x6, 8), x3840, 8), x3838, 8),
        32515,
        2,
    )?;
    let x3841: BytePoly_8 = bigint_mul!(x3834, x3834, 8);
    let x3842: BytePoly_9 = bigint_nondet_quot!(ctx, x3841, x6, 9);
    let x3843: BytePoly_4 = bigint_nondet_rem!(ctx, x3841, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3842, x6, 13), x3843, 13),
            x3841,
            13
        ),
        73156,
        4,
    )?;
    let x3844: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3843, x3783, 4), x6, 4), x3783, 4),
        x6,
        4
    );
    let x3845: BytePoly_4 = bigint_nondet_quot!(ctx, x3844, x6, 4);
    let x3846: BytePoly_4 = bigint_nondet_rem!(ctx, x3844, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3845, x6, 8), x3846, 8), x3844, 8),
        32515,
        2,
    )?;
    let x3847: BytePoly_8 = bigint_mul!(x3834, x3846, 8);
    let x3848: BytePoly_9 = bigint_nondet_quot!(ctx, x3847, x6, 9);
    let x3849: BytePoly_4 = bigint_nondet_rem!(ctx, x3847, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3848, x6, 13), x3849, 13),
            x3847,
            13
        ),
        73156,
        4,
    )?;
    let x3850: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x3849, x3840, 4), 4), x6, 4);
    let x3851: BytePoly_4 = bigint_nondet_quot!(ctx, x3850, x6, 4);
    let x3852: BytePoly_4 = bigint_nondet_rem!(ctx, x3850, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3851, x6, 8), x3852, 8), x3850, 8),
        32515,
        2,
    )?;
    let x3853: BytePoly_1 = bigint_nondet_rem!(ctx, x3791, x2, 1);
    let x3854: BytePoly_5 = bigint_nondet_quot!(ctx, x3791, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3854, x2, 6), x3853, 6), x3791, 6),
        40643,
        4,
    )?;
    let x3855: BytePoly_1 = bigint_sub!(x3, x3853, 1);
    eqz(ctx, &bigint_mul!(x3853, x3855, 2), 8131, 2)?;
    let x3856: BytePoly_4 = bigint_add!(bigint_sub!(x3846, x3816, 4), x6, 4);
    let x3857: BytePoly_4 = bigint_nondet_inv!(ctx, x3856, x6, 4);
    let x3858: BytePoly_8 = bigint_mul!(x3856, x3857, 8);
    let x3859: BytePoly_9 = bigint_nondet_quot!(ctx, x3858, x6, 9);
    let x3860: BytePoly_4 = bigint_nondet_rem!(ctx, x3858, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3859, x6, 13), x3860, 13),
            x3858,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x3860, x1, 4), 34, 1)?;
    let x3861: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x3852, x3818, 4), x6, 4), x3857, 8);
    let x3862: BytePoly_9 = bigint_nondet_quot!(ctx, x3861, x6, 9);
    let x3863: BytePoly_4 = bigint_nondet_rem!(ctx, x3861, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3862, x6, 13), x3863, 13),
            x3861,
            13
        ),
        73156,
        4,
    )?;
    let x3864: BytePoly_8 = bigint_add!(bigint_sub!(x3818, bigint_mul!(x3863, x3816, 8), 8), x6, 8);
    let x3865: BytePoly_8 = bigint_nondet_quot!(ctx, x3864, x6, 8);
    let x3866: BytePoly_4 = bigint_nondet_rem!(ctx, x3864, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3865, x6, 12), x3866, 12),
            x3864,
            12
        ),
        65028,
        4,
    )?;
    let x3867: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x3863, x3863, 8), x3816, 8), x6, 8),
            x3846,
            8
        ),
        x6,
        8
    );
    let x3868: BytePoly_9 = bigint_nondet_quot!(ctx, x3867, x6, 9);
    let x3869: BytePoly_4 = bigint_nondet_rem!(ctx, x3867, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3868, x6, 13), x3869, 13),
            x3867,
            13
        ),
        73156,
        4,
    )?;
    let x3870: BytePoly_8 = bigint_mul!(x3863, x3869, 8);
    let x3871: BytePoly_9 = bigint_nondet_quot!(ctx, x3870, x6, 9);
    let x3872: BytePoly_4 = bigint_nondet_rem!(ctx, x3870, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3871, x6, 13), x3872, 13),
            x3870,
            13
        ),
        73156,
        4,
    )?;
    let x3873: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x3872, x3866, 4), 4), x6, 4);
    let x3874: BytePoly_4 = bigint_nondet_quot!(ctx, x3873, x6, 4);
    let x3875: BytePoly_4 = bigint_nondet_rem!(ctx, x3873, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3874, x6, 8), x3875, 8), x3873, 8),
        32515,
        2,
    )?;
    let x3876: BytePoly_5 = bigint_add!(
        bigint_mul!(x3869, x3853, 5),
        bigint_mul!(x3816, x3855, 5),
        5
    );
    let x3877: BytePoly_5 = bigint_add!(
        bigint_mul!(x3875, x3853, 5),
        bigint_mul!(x3818, x3855, 5),
        5
    );
    let x3878: BytePoly_6 = bigint_nondet_quot!(ctx, x3876, x6, 6);
    let x3879: BytePoly_4 = bigint_nondet_rem!(ctx, x3876, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3878, x6, 10), x3879, 10),
            x3876,
            10
        ),
        48771,
        4,
    )?;
    let x3880: BytePoly_6 = bigint_nondet_quot!(ctx, x3877, x6, 6);
    let x3881: BytePoly_4 = bigint_nondet_rem!(ctx, x3877, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3880, x6, 10), x3881, 10),
            x3877,
            10
        ),
        48771,
        4,
    )?;
    let x3882: BytePoly_8 = bigint_mul!(x3846, x3846, 8);
    let x3883: BytePoly_9 = bigint_nondet_quot!(ctx, x3882, x6, 9);
    let x3884: BytePoly_4 = bigint_nondet_rem!(ctx, x3882, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3883, x6, 13), x3884, 13),
            x3882,
            13
        ),
        73156,
        4,
    )?;
    let x3885: BytePoly_5 = bigint_add!(bigint_mul!(x3884, x0, 5), x5, 5);
    let x3886: BytePoly_6 = bigint_nondet_quot!(ctx, x3885, x6, 6);
    let x3887: BytePoly_4 = bigint_nondet_rem!(ctx, x3885, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3886, x6, 10), x3887, 10),
            x3885,
            10
        ),
        48771,
        4,
    )?;
    let x3888: BytePoly_4 = bigint_add!(x3852, x3852, 4);
    let x3889: BytePoly_4 = bigint_nondet_quot!(ctx, x3888, x6, 4);
    let x3890: BytePoly_4 = bigint_nondet_rem!(ctx, x3888, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3889, x6, 8), x3890, 8), x3888, 8),
        32515,
        2,
    )?;
    let x3891: BytePoly_4 = bigint_nondet_inv!(ctx, x3890, x6, 4);
    let x3892: BytePoly_8 = bigint_mul!(x3890, x3891, 8);
    let x3893: BytePoly_9 = bigint_nondet_quot!(ctx, x3892, x6, 9);
    let x3894: BytePoly_4 = bigint_nondet_rem!(ctx, x3892, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3893, x6, 13), x3894, 13),
            x3892,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x3894, x3, 4), 34, 1)?;
    let x3895: BytePoly_8 = bigint_mul!(x3887, x3891, 8);
    let x3896: BytePoly_9 = bigint_nondet_quot!(ctx, x3895, x6, 9);
    let x3897: BytePoly_4 = bigint_nondet_rem!(ctx, x3895, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3896, x6, 13), x3897, 13),
            x3895,
            13
        ),
        73156,
        4,
    )?;
    let x3898: BytePoly_8 = bigint_mul!(x3897, x3846, 8);
    let x3899: BytePoly_9 = bigint_nondet_quot!(ctx, x3898, x6, 9);
    let x3900: BytePoly_4 = bigint_nondet_rem!(ctx, x3898, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3899, x6, 13), x3900, 13),
            x3898,
            13
        ),
        73156,
        4,
    )?;
    let x3901: BytePoly_4 = bigint_add!(bigint_sub!(x3852, x3900, 4), x6, 4);
    let x3902: BytePoly_4 = bigint_nondet_quot!(ctx, x3901, x6, 4);
    let x3903: BytePoly_4 = bigint_nondet_rem!(ctx, x3901, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3902, x6, 8), x3903, 8), x3901, 8),
        32515,
        2,
    )?;
    let x3904: BytePoly_8 = bigint_mul!(x3897, x3897, 8);
    let x3905: BytePoly_9 = bigint_nondet_quot!(ctx, x3904, x6, 9);
    let x3906: BytePoly_4 = bigint_nondet_rem!(ctx, x3904, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3905, x6, 13), x3906, 13),
            x3904,
            13
        ),
        73156,
        4,
    )?;
    let x3907: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3906, x3846, 4), x6, 4), x3846, 4),
        x6,
        4
    );
    let x3908: BytePoly_4 = bigint_nondet_quot!(ctx, x3907, x6, 4);
    let x3909: BytePoly_4 = bigint_nondet_rem!(ctx, x3907, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3908, x6, 8), x3909, 8), x3907, 8),
        32515,
        2,
    )?;
    let x3910: BytePoly_8 = bigint_mul!(x3897, x3909, 8);
    let x3911: BytePoly_9 = bigint_nondet_quot!(ctx, x3910, x6, 9);
    let x3912: BytePoly_4 = bigint_nondet_rem!(ctx, x3910, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3911, x6, 13), x3912, 13),
            x3910,
            13
        ),
        73156,
        4,
    )?;
    let x3913: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x3912, x3903, 4), 4), x6, 4);
    let x3914: BytePoly_4 = bigint_nondet_quot!(ctx, x3913, x6, 4);
    let x3915: BytePoly_4 = bigint_nondet_rem!(ctx, x3913, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3914, x6, 8), x3915, 8), x3913, 8),
        32515,
        2,
    )?;
    let x3916: BytePoly_1 = bigint_nondet_rem!(ctx, x3854, x2, 1);
    let x3917: BytePoly_5 = bigint_nondet_quot!(ctx, x3854, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3917, x2, 6), x3916, 6), x3854, 6),
        40643,
        4,
    )?;
    let x3918: BytePoly_1 = bigint_sub!(x3, x3916, 1);
    eqz(ctx, &bigint_mul!(x3916, x3918, 2), 8131, 2)?;
    let x3919: BytePoly_4 = bigint_add!(bigint_sub!(x3909, x3879, 4), x6, 4);
    let x3920: BytePoly_4 = bigint_nondet_inv!(ctx, x3919, x6, 4);
    let x3921: BytePoly_8 = bigint_mul!(x3919, x3920, 8);
    let x3922: BytePoly_9 = bigint_nondet_quot!(ctx, x3921, x6, 9);
    let x3923: BytePoly_4 = bigint_nondet_rem!(ctx, x3921, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3922, x6, 13), x3923, 13),
            x3921,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x3923, x1, 4), 34, 1)?;
    let x3924: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x3915, x3881, 4), x6, 4), x3920, 8);
    let x3925: BytePoly_9 = bigint_nondet_quot!(ctx, x3924, x6, 9);
    let x3926: BytePoly_4 = bigint_nondet_rem!(ctx, x3924, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3925, x6, 13), x3926, 13),
            x3924,
            13
        ),
        73156,
        4,
    )?;
    let x3927: BytePoly_8 = bigint_add!(bigint_sub!(x3881, bigint_mul!(x3926, x3879, 8), 8), x6, 8);
    let x3928: BytePoly_8 = bigint_nondet_quot!(ctx, x3927, x6, 8);
    let x3929: BytePoly_4 = bigint_nondet_rem!(ctx, x3927, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3928, x6, 12), x3929, 12),
            x3927,
            12
        ),
        65028,
        4,
    )?;
    let x3930: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x3926, x3926, 8), x3879, 8), x6, 8),
            x3909,
            8
        ),
        x6,
        8
    );
    let x3931: BytePoly_9 = bigint_nondet_quot!(ctx, x3930, x6, 9);
    let x3932: BytePoly_4 = bigint_nondet_rem!(ctx, x3930, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3931, x6, 13), x3932, 13),
            x3930,
            13
        ),
        73156,
        4,
    )?;
    let x3933: BytePoly_8 = bigint_mul!(x3926, x3932, 8);
    let x3934: BytePoly_9 = bigint_nondet_quot!(ctx, x3933, x6, 9);
    let x3935: BytePoly_4 = bigint_nondet_rem!(ctx, x3933, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3934, x6, 13), x3935, 13),
            x3933,
            13
        ),
        73156,
        4,
    )?;
    let x3936: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x3935, x3929, 4), 4), x6, 4);
    let x3937: BytePoly_4 = bigint_nondet_quot!(ctx, x3936, x6, 4);
    let x3938: BytePoly_4 = bigint_nondet_rem!(ctx, x3936, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3937, x6, 8), x3938, 8), x3936, 8),
        32515,
        2,
    )?;
    let x3939: BytePoly_5 = bigint_add!(
        bigint_mul!(x3932, x3916, 5),
        bigint_mul!(x3879, x3918, 5),
        5
    );
    let x3940: BytePoly_5 = bigint_add!(
        bigint_mul!(x3938, x3916, 5),
        bigint_mul!(x3881, x3918, 5),
        5
    );
    let x3941: BytePoly_6 = bigint_nondet_quot!(ctx, x3939, x6, 6);
    let x3942: BytePoly_4 = bigint_nondet_rem!(ctx, x3939, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3941, x6, 10), x3942, 10),
            x3939,
            10
        ),
        48771,
        4,
    )?;
    let x3943: BytePoly_6 = bigint_nondet_quot!(ctx, x3940, x6, 6);
    let x3944: BytePoly_4 = bigint_nondet_rem!(ctx, x3940, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3943, x6, 10), x3944, 10),
            x3940,
            10
        ),
        48771,
        4,
    )?;
    let x3945: BytePoly_8 = bigint_mul!(x3909, x3909, 8);
    let x3946: BytePoly_9 = bigint_nondet_quot!(ctx, x3945, x6, 9);
    let x3947: BytePoly_4 = bigint_nondet_rem!(ctx, x3945, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3946, x6, 13), x3947, 13),
            x3945,
            13
        ),
        73156,
        4,
    )?;
    let x3948: BytePoly_5 = bigint_add!(bigint_mul!(x3947, x0, 5), x5, 5);
    let x3949: BytePoly_6 = bigint_nondet_quot!(ctx, x3948, x6, 6);
    let x3950: BytePoly_4 = bigint_nondet_rem!(ctx, x3948, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3949, x6, 10), x3950, 10),
            x3948,
            10
        ),
        48771,
        4,
    )?;
    let x3951: BytePoly_4 = bigint_add!(x3915, x3915, 4);
    let x3952: BytePoly_4 = bigint_nondet_quot!(ctx, x3951, x6, 4);
    let x3953: BytePoly_4 = bigint_nondet_rem!(ctx, x3951, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3952, x6, 8), x3953, 8), x3951, 8),
        32515,
        2,
    )?;
    let x3954: BytePoly_4 = bigint_nondet_inv!(ctx, x3953, x6, 4);
    let x3955: BytePoly_8 = bigint_mul!(x3953, x3954, 8);
    let x3956: BytePoly_9 = bigint_nondet_quot!(ctx, x3955, x6, 9);
    let x3957: BytePoly_4 = bigint_nondet_rem!(ctx, x3955, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3956, x6, 13), x3957, 13),
            x3955,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x3957, x3, 4), 34, 1)?;
    let x3958: BytePoly_8 = bigint_mul!(x3950, x3954, 8);
    let x3959: BytePoly_9 = bigint_nondet_quot!(ctx, x3958, x6, 9);
    let x3960: BytePoly_4 = bigint_nondet_rem!(ctx, x3958, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3959, x6, 13), x3960, 13),
            x3958,
            13
        ),
        73156,
        4,
    )?;
    let x3961: BytePoly_8 = bigint_mul!(x3960, x3909, 8);
    let x3962: BytePoly_9 = bigint_nondet_quot!(ctx, x3961, x6, 9);
    let x3963: BytePoly_4 = bigint_nondet_rem!(ctx, x3961, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3962, x6, 13), x3963, 13),
            x3961,
            13
        ),
        73156,
        4,
    )?;
    let x3964: BytePoly_4 = bigint_add!(bigint_sub!(x3915, x3963, 4), x6, 4);
    let x3965: BytePoly_4 = bigint_nondet_quot!(ctx, x3964, x6, 4);
    let x3966: BytePoly_4 = bigint_nondet_rem!(ctx, x3964, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3965, x6, 8), x3966, 8), x3964, 8),
        32515,
        2,
    )?;
    let x3967: BytePoly_8 = bigint_mul!(x3960, x3960, 8);
    let x3968: BytePoly_9 = bigint_nondet_quot!(ctx, x3967, x6, 9);
    let x3969: BytePoly_4 = bigint_nondet_rem!(ctx, x3967, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3968, x6, 13), x3969, 13),
            x3967,
            13
        ),
        73156,
        4,
    )?;
    let x3970: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x3969, x3909, 4), x6, 4), x3909, 4),
        x6,
        4
    );
    let x3971: BytePoly_4 = bigint_nondet_quot!(ctx, x3970, x6, 4);
    let x3972: BytePoly_4 = bigint_nondet_rem!(ctx, x3970, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3971, x6, 8), x3972, 8), x3970, 8),
        32515,
        2,
    )?;
    let x3973: BytePoly_8 = bigint_mul!(x3960, x3972, 8);
    let x3974: BytePoly_9 = bigint_nondet_quot!(ctx, x3973, x6, 9);
    let x3975: BytePoly_4 = bigint_nondet_rem!(ctx, x3973, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3974, x6, 13), x3975, 13),
            x3973,
            13
        ),
        73156,
        4,
    )?;
    let x3976: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x3975, x3966, 4), 4), x6, 4);
    let x3977: BytePoly_4 = bigint_nondet_quot!(ctx, x3976, x6, 4);
    let x3978: BytePoly_4 = bigint_nondet_rem!(ctx, x3976, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3977, x6, 8), x3978, 8), x3976, 8),
        32515,
        2,
    )?;
    let x3979: BytePoly_1 = bigint_nondet_rem!(ctx, x3917, x2, 1);
    let x3980: BytePoly_5 = bigint_nondet_quot!(ctx, x3917, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x3980, x2, 6), x3979, 6), x3917, 6),
        40643,
        4,
    )?;
    let x3981: BytePoly_1 = bigint_sub!(x3, x3979, 1);
    eqz(ctx, &bigint_mul!(x3979, x3981, 2), 8131, 2)?;
    let x3982: BytePoly_4 = bigint_add!(bigint_sub!(x3972, x3942, 4), x6, 4);
    let x3983: BytePoly_4 = bigint_nondet_inv!(ctx, x3982, x6, 4);
    let x3984: BytePoly_8 = bigint_mul!(x3982, x3983, 8);
    let x3985: BytePoly_9 = bigint_nondet_quot!(ctx, x3984, x6, 9);
    let x3986: BytePoly_4 = bigint_nondet_rem!(ctx, x3984, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3985, x6, 13), x3986, 13),
            x3984,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x3986, x1, 4), 34, 1)?;
    let x3987: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x3978, x3944, 4), x6, 4), x3983, 8);
    let x3988: BytePoly_9 = bigint_nondet_quot!(ctx, x3987, x6, 9);
    let x3989: BytePoly_4 = bigint_nondet_rem!(ctx, x3987, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3988, x6, 13), x3989, 13),
            x3987,
            13
        ),
        73156,
        4,
    )?;
    let x3990: BytePoly_8 = bigint_add!(bigint_sub!(x3944, bigint_mul!(x3989, x3942, 8), 8), x6, 8);
    let x3991: BytePoly_8 = bigint_nondet_quot!(ctx, x3990, x6, 8);
    let x3992: BytePoly_4 = bigint_nondet_rem!(ctx, x3990, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3991, x6, 12), x3992, 12),
            x3990,
            12
        ),
        65028,
        4,
    )?;
    let x3993: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x3989, x3989, 8), x3942, 8), x6, 8),
            x3972,
            8
        ),
        x6,
        8
    );
    let x3994: BytePoly_9 = bigint_nondet_quot!(ctx, x3993, x6, 9);
    let x3995: BytePoly_4 = bigint_nondet_rem!(ctx, x3993, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3994, x6, 13), x3995, 13),
            x3993,
            13
        ),
        73156,
        4,
    )?;
    let x3996: BytePoly_8 = bigint_mul!(x3989, x3995, 8);
    let x3997: BytePoly_9 = bigint_nondet_quot!(ctx, x3996, x6, 9);
    let x3998: BytePoly_4 = bigint_nondet_rem!(ctx, x3996, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3997, x6, 13), x3998, 13),
            x3996,
            13
        ),
        73156,
        4,
    )?;
    let x3999: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x3998, x3992, 4), 4), x6, 4);
    let x4000: BytePoly_4 = bigint_nondet_quot!(ctx, x3999, x6, 4);
    let x4001: BytePoly_4 = bigint_nondet_rem!(ctx, x3999, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x4000, x6, 8), x4001, 8), x3999, 8),
        32515,
        2,
    )?;
    let x4002: BytePoly_5 = bigint_add!(
        bigint_mul!(x3995, x3979, 5),
        bigint_mul!(x3942, x3981, 5),
        5
    );
    let x4003: BytePoly_5 = bigint_add!(
        bigint_mul!(x4001, x3979, 5),
        bigint_mul!(x3944, x3981, 5),
        5
    );
    let x4004: BytePoly_6 = bigint_nondet_quot!(ctx, x4002, x6, 6);
    let x4005: BytePoly_4 = bigint_nondet_rem!(ctx, x4002, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4004, x6, 10), x4005, 10),
            x4002,
            10
        ),
        48771,
        4,
    )?;
    let x4006: BytePoly_6 = bigint_nondet_quot!(ctx, x4003, x6, 6);
    let x4007: BytePoly_4 = bigint_nondet_rem!(ctx, x4003, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4006, x6, 10), x4007, 10),
            x4003,
            10
        ),
        48771,
        4,
    )?;
    let x4008: BytePoly_8 = bigint_mul!(x3972, x3972, 8);
    let x4009: BytePoly_9 = bigint_nondet_quot!(ctx, x4008, x6, 9);
    let x4010: BytePoly_4 = bigint_nondet_rem!(ctx, x4008, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4009, x6, 13), x4010, 13),
            x4008,
            13
        ),
        73156,
        4,
    )?;
    let x4011: BytePoly_5 = bigint_add!(bigint_mul!(x4010, x0, 5), x5, 5);
    let x4012: BytePoly_6 = bigint_nondet_quot!(ctx, x4011, x6, 6);
    let x4013: BytePoly_4 = bigint_nondet_rem!(ctx, x4011, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4012, x6, 10), x4013, 10),
            x4011,
            10
        ),
        48771,
        4,
    )?;
    let x4014: BytePoly_4 = bigint_add!(x3978, x3978, 4);
    let x4015: BytePoly_4 = bigint_nondet_quot!(ctx, x4014, x6, 4);
    let x4016: BytePoly_4 = bigint_nondet_rem!(ctx, x4014, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x4015, x6, 8), x4016, 8), x4014, 8),
        32515,
        2,
    )?;
    let x4017: BytePoly_4 = bigint_nondet_inv!(ctx, x4016, x6, 4);
    let x4018: BytePoly_8 = bigint_mul!(x4016, x4017, 8);
    let x4019: BytePoly_9 = bigint_nondet_quot!(ctx, x4018, x6, 9);
    let x4020: BytePoly_4 = bigint_nondet_rem!(ctx, x4018, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4019, x6, 13), x4020, 13),
            x4018,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x4020, x3, 4), 34, 1)?;
    let x4021: BytePoly_8 = bigint_mul!(x4013, x4017, 8);
    let x4022: BytePoly_9 = bigint_nondet_quot!(ctx, x4021, x6, 9);
    let x4023: BytePoly_4 = bigint_nondet_rem!(ctx, x4021, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4022, x6, 13), x4023, 13),
            x4021,
            13
        ),
        73156,
        4,
    )?;
    let x4024: BytePoly_8 = bigint_mul!(x4023, x3972, 8);
    let x4025: BytePoly_9 = bigint_nondet_quot!(ctx, x4024, x6, 9);
    let x4026: BytePoly_4 = bigint_nondet_rem!(ctx, x4024, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4025, x6, 13), x4026, 13),
            x4024,
            13
        ),
        73156,
        4,
    )?;
    let x4027: BytePoly_4 = bigint_add!(bigint_sub!(x3978, x4026, 4), x6, 4);
    let x4028: BytePoly_4 = bigint_nondet_quot!(ctx, x4027, x6, 4);
    let x4029: BytePoly_4 = bigint_nondet_rem!(ctx, x4027, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x4028, x6, 8), x4029, 8), x4027, 8),
        32515,
        2,
    )?;
    let x4030: BytePoly_8 = bigint_mul!(x4023, x4023, 8);
    let x4031: BytePoly_9 = bigint_nondet_quot!(ctx, x4030, x6, 9);
    let x4032: BytePoly_4 = bigint_nondet_rem!(ctx, x4030, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4031, x6, 13), x4032, 13),
            x4030,
            13
        ),
        73156,
        4,
    )?;
    let x4033: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x4032, x3972, 4), x6, 4), x3972, 4),
        x6,
        4
    );
    let x4034: BytePoly_4 = bigint_nondet_quot!(ctx, x4033, x6, 4);
    let x4035: BytePoly_4 = bigint_nondet_rem!(ctx, x4033, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x4034, x6, 8), x4035, 8), x4033, 8),
        32515,
        2,
    )?;
    let x4036: BytePoly_8 = bigint_mul!(x4023, x4035, 8);
    let x4037: BytePoly_9 = bigint_nondet_quot!(ctx, x4036, x6, 9);
    let x4038: BytePoly_4 = bigint_nondet_rem!(ctx, x4036, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4037, x6, 13), x4038, 13),
            x4036,
            13
        ),
        73156,
        4,
    )?;
    let x4039: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x4038, x4029, 4), 4), x6, 4);
    let x4040: BytePoly_4 = bigint_nondet_quot!(ctx, x4039, x6, 4);
    let x4041: BytePoly_4 = bigint_nondet_rem!(ctx, x4039, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x4040, x6, 8), x4041, 8), x4039, 8),
        32515,
        2,
    )?;
    let x4042: BytePoly_1 = bigint_nondet_rem!(ctx, x3980, x2, 1);
    let x4043: BytePoly_5 = bigint_nondet_quot!(ctx, x3980, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x4043, x2, 6), x4042, 6), x3980, 6),
        40643,
        4,
    )?;
    let x4044: BytePoly_1 = bigint_sub!(x3, x4042, 1);
    eqz(ctx, &bigint_mul!(x4042, x4044, 2), 8131, 2)?;
    let x4045: BytePoly_4 = bigint_add!(bigint_sub!(x4035, x4005, 4), x6, 4);
    let x4046: BytePoly_4 = bigint_nondet_inv!(ctx, x4045, x6, 4);
    let x4047: BytePoly_8 = bigint_mul!(x4045, x4046, 8);
    let x4048: BytePoly_9 = bigint_nondet_quot!(ctx, x4047, x6, 9);
    let x4049: BytePoly_4 = bigint_nondet_rem!(ctx, x4047, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4048, x6, 13), x4049, 13),
            x4047,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x4049, x1, 4), 34, 1)?;
    let x4050: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x4041, x4007, 4), x6, 4), x4046, 8);
    let x4051: BytePoly_9 = bigint_nondet_quot!(ctx, x4050, x6, 9);
    let x4052: BytePoly_4 = bigint_nondet_rem!(ctx, x4050, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4051, x6, 13), x4052, 13),
            x4050,
            13
        ),
        73156,
        4,
    )?;
    let x4053: BytePoly_8 = bigint_add!(bigint_sub!(x4007, bigint_mul!(x4052, x4005, 8), 8), x6, 8);
    let x4054: BytePoly_8 = bigint_nondet_quot!(ctx, x4053, x6, 8);
    let x4055: BytePoly_4 = bigint_nondet_rem!(ctx, x4053, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4054, x6, 12), x4055, 12),
            x4053,
            12
        ),
        65028,
        4,
    )?;
    let x4056: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x4052, x4052, 8), x4005, 8), x6, 8),
            x4035,
            8
        ),
        x6,
        8
    );
    let x4057: BytePoly_9 = bigint_nondet_quot!(ctx, x4056, x6, 9);
    let x4058: BytePoly_4 = bigint_nondet_rem!(ctx, x4056, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4057, x6, 13), x4058, 13),
            x4056,
            13
        ),
        73156,
        4,
    )?;
    let x4059: BytePoly_8 = bigint_mul!(x4052, x4058, 8);
    let x4060: BytePoly_9 = bigint_nondet_quot!(ctx, x4059, x6, 9);
    let x4061: BytePoly_4 = bigint_nondet_rem!(ctx, x4059, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4060, x6, 13), x4061, 13),
            x4059,
            13
        ),
        73156,
        4,
    )?;
    let x4062: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x4061, x4055, 4), 4), x6, 4);
    let x4063: BytePoly_4 = bigint_nondet_quot!(ctx, x4062, x6, 4);
    let x4064: BytePoly_4 = bigint_nondet_rem!(ctx, x4062, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x4063, x6, 8), x4064, 8), x4062, 8),
        32515,
        2,
    )?;
    let x4065: BytePoly_5 = bigint_add!(
        bigint_mul!(x4058, x4042, 5),
        bigint_mul!(x4005, x4044, 5),
        5
    );
    let x4066: BytePoly_5 = bigint_add!(
        bigint_mul!(x4064, x4042, 5),
        bigint_mul!(x4007, x4044, 5),
        5
    );
    let x4067: BytePoly_6 = bigint_nondet_quot!(ctx, x4065, x6, 6);
    let x4068: BytePoly_4 = bigint_nondet_rem!(ctx, x4065, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4067, x6, 10), x4068, 10),
            x4065,
            10
        ),
        48771,
        4,
    )?;
    let x4069: BytePoly_6 = bigint_nondet_quot!(ctx, x4066, x6, 6);
    let x4070: BytePoly_4 = bigint_nondet_rem!(ctx, x4066, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4069, x6, 10), x4070, 10),
            x4066,
            10
        ),
        48771,
        4,
    )?;
    let x4071: BytePoly_8 = bigint_mul!(x4035, x4035, 8);
    let x4072: BytePoly_9 = bigint_nondet_quot!(ctx, x4071, x6, 9);
    let x4073: BytePoly_4 = bigint_nondet_rem!(ctx, x4071, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4072, x6, 13), x4073, 13),
            x4071,
            13
        ),
        73156,
        4,
    )?;
    let x4074: BytePoly_5 = bigint_add!(bigint_mul!(x4073, x0, 5), x5, 5);
    let x4075: BytePoly_6 = bigint_nondet_quot!(ctx, x4074, x6, 6);
    let x4076: BytePoly_4 = bigint_nondet_rem!(ctx, x4074, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4075, x6, 10), x4076, 10),
            x4074,
            10
        ),
        48771,
        4,
    )?;
    let x4077: BytePoly_4 = bigint_add!(x4041, x4041, 4);
    let x4078: BytePoly_4 = bigint_nondet_quot!(ctx, x4077, x6, 4);
    let x4079: BytePoly_4 = bigint_nondet_rem!(ctx, x4077, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x4078, x6, 8), x4079, 8), x4077, 8),
        32515,
        2,
    )?;
    let x4080: BytePoly_4 = bigint_nondet_inv!(ctx, x4079, x6, 4);
    let x4081: BytePoly_8 = bigint_mul!(x4079, x4080, 8);
    let x4082: BytePoly_9 = bigint_nondet_quot!(ctx, x4081, x6, 9);
    let x4083: BytePoly_4 = bigint_nondet_rem!(ctx, x4081, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4082, x6, 13), x4083, 13),
            x4081,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x4083, x3, 4), 34, 1)?;
    let x4084: BytePoly_8 = bigint_mul!(x4076, x4080, 8);
    let x4085: BytePoly_9 = bigint_nondet_quot!(ctx, x4084, x6, 9);
    let x4086: BytePoly_4 = bigint_nondet_rem!(ctx, x4084, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4085, x6, 13), x4086, 13),
            x4084,
            13
        ),
        73156,
        4,
    )?;
    let x4087: BytePoly_8 = bigint_mul!(x4086, x4035, 8);
    let x4088: BytePoly_9 = bigint_nondet_quot!(ctx, x4087, x6, 9);
    let x4089: BytePoly_4 = bigint_nondet_rem!(ctx, x4087, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4088, x6, 13), x4089, 13),
            x4087,
            13
        ),
        73156,
        4,
    )?;
    let x4090: BytePoly_4 = bigint_add!(bigint_sub!(x4041, x4089, 4), x6, 4);
    let x4091: BytePoly_4 = bigint_nondet_quot!(ctx, x4090, x6, 4);
    let x4092: BytePoly_4 = bigint_nondet_rem!(ctx, x4090, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x4091, x6, 8), x4092, 8), x4090, 8),
        32515,
        2,
    )?;
    let x4093: BytePoly_8 = bigint_mul!(x4086, x4086, 8);
    let x4094: BytePoly_9 = bigint_nondet_quot!(ctx, x4093, x6, 9);
    let x4095: BytePoly_4 = bigint_nondet_rem!(ctx, x4093, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4094, x6, 13), x4095, 13),
            x4093,
            13
        ),
        73156,
        4,
    )?;
    let x4096: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x4095, x4035, 4), x6, 4), x4035, 4),
        x6,
        4
    );
    let x4097: BytePoly_4 = bigint_nondet_quot!(ctx, x4096, x6, 4);
    let x4098: BytePoly_4 = bigint_nondet_rem!(ctx, x4096, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x4097, x6, 8), x4098, 8), x4096, 8),
        32515,
        2,
    )?;
    let x4099: BytePoly_8 = bigint_mul!(x4086, x4098, 8);
    let x4100: BytePoly_9 = bigint_nondet_quot!(ctx, x4099, x6, 9);
    let x4101: BytePoly_4 = bigint_nondet_rem!(ctx, x4099, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4100, x6, 13), x4101, 13),
            x4099,
            13
        ),
        73156,
        4,
    )?;
    let x4102: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x4101, x4092, 4), 4), x6, 4);
    let x4103: BytePoly_4 = bigint_nondet_quot!(ctx, x4102, x6, 4);
    let x4104: BytePoly_4 = bigint_nondet_rem!(ctx, x4102, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x4103, x6, 8), x4104, 8), x4102, 8),
        32515,
        2,
    )?;
    let x4105: BytePoly_1 = bigint_nondet_rem!(ctx, x4043, x2, 1);
    let x4106: BytePoly_5 = bigint_nondet_quot!(ctx, x4043, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x4106, x2, 6), x4105, 6), x4043, 6),
        40643,
        4,
    )?;
    let x4107: BytePoly_1 = bigint_sub!(x3, x4105, 1);
    eqz(ctx, &bigint_mul!(x4105, x4107, 2), 8131, 2)?;
    let x4108: BytePoly_4 = bigint_add!(bigint_sub!(x4098, x4068, 4), x6, 4);
    let x4109: BytePoly_4 = bigint_nondet_inv!(ctx, x4108, x6, 4);
    let x4110: BytePoly_8 = bigint_mul!(x4108, x4109, 8);
    let x4111: BytePoly_9 = bigint_nondet_quot!(ctx, x4110, x6, 9);
    let x4112: BytePoly_4 = bigint_nondet_rem!(ctx, x4110, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4111, x6, 13), x4112, 13),
            x4110,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x4112, x1, 4), 34, 1)?;
    let x4113: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x4104, x4070, 4), x6, 4), x4109, 8);
    let x4114: BytePoly_9 = bigint_nondet_quot!(ctx, x4113, x6, 9);
    let x4115: BytePoly_4 = bigint_nondet_rem!(ctx, x4113, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4114, x6, 13), x4115, 13),
            x4113,
            13
        ),
        73156,
        4,
    )?;
    let x4116: BytePoly_8 = bigint_add!(bigint_sub!(x4070, bigint_mul!(x4115, x4068, 8), 8), x6, 8);
    let x4117: BytePoly_8 = bigint_nondet_quot!(ctx, x4116, x6, 8);
    let x4118: BytePoly_4 = bigint_nondet_rem!(ctx, x4116, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4117, x6, 12), x4118, 12),
            x4116,
            12
        ),
        65028,
        4,
    )?;
    let x4119: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x4115, x4115, 8), x4068, 8), x6, 8),
            x4098,
            8
        ),
        x6,
        8
    );
    let x4120: BytePoly_9 = bigint_nondet_quot!(ctx, x4119, x6, 9);
    let x4121: BytePoly_4 = bigint_nondet_rem!(ctx, x4119, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4120, x6, 13), x4121, 13),
            x4119,
            13
        ),
        73156,
        4,
    )?;
    let x4122: BytePoly_8 = bigint_mul!(x4115, x4121, 8);
    let x4123: BytePoly_9 = bigint_nondet_quot!(ctx, x4122, x6, 9);
    let x4124: BytePoly_4 = bigint_nondet_rem!(ctx, x4122, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4123, x6, 13), x4124, 13),
            x4122,
            13
        ),
        73156,
        4,
    )?;
    let x4125: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x4124, x4118, 4), 4), x6, 4);
    let x4126: BytePoly_4 = bigint_nondet_quot!(ctx, x4125, x6, 4);
    let x4127: BytePoly_4 = bigint_nondet_rem!(ctx, x4125, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x4126, x6, 8), x4127, 8), x4125, 8),
        32515,
        2,
    )?;
    let x4128: BytePoly_5 = bigint_add!(
        bigint_mul!(x4121, x4105, 5),
        bigint_mul!(x4068, x4107, 5),
        5
    );
    let x4129: BytePoly_5 = bigint_add!(
        bigint_mul!(x4127, x4105, 5),
        bigint_mul!(x4070, x4107, 5),
        5
    );
    let x4130: BytePoly_6 = bigint_nondet_quot!(ctx, x4128, x6, 6);
    let x4131: BytePoly_4 = bigint_nondet_rem!(ctx, x4128, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4130, x6, 10), x4131, 10),
            x4128,
            10
        ),
        48771,
        4,
    )?;
    let x4132: BytePoly_6 = bigint_nondet_quot!(ctx, x4129, x6, 6);
    let x4133: BytePoly_4 = bigint_nondet_rem!(ctx, x4129, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4132, x6, 10), x4133, 10),
            x4129,
            10
        ),
        48771,
        4,
    )?;
    let x4134: BytePoly_8 = bigint_mul!(x4098, x4098, 8);
    let x4135: BytePoly_9 = bigint_nondet_quot!(ctx, x4134, x6, 9);
    let x4136: BytePoly_4 = bigint_nondet_rem!(ctx, x4134, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4135, x6, 13), x4136, 13),
            x4134,
            13
        ),
        73156,
        4,
    )?;
    let x4137: BytePoly_5 = bigint_add!(bigint_mul!(x4136, x0, 5), x5, 5);
    let x4138: BytePoly_6 = bigint_nondet_quot!(ctx, x4137, x6, 6);
    let x4139: BytePoly_4 = bigint_nondet_rem!(ctx, x4137, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4138, x6, 10), x4139, 10),
            x4137,
            10
        ),
        48771,
        4,
    )?;
    let x4140: BytePoly_4 = bigint_add!(x4104, x4104, 4);
    let x4141: BytePoly_4 = bigint_nondet_quot!(ctx, x4140, x6, 4);
    let x4142: BytePoly_4 = bigint_nondet_rem!(ctx, x4140, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x4141, x6, 8), x4142, 8), x4140, 8),
        32515,
        2,
    )?;
    let x4143: BytePoly_4 = bigint_nondet_inv!(ctx, x4142, x6, 4);
    let x4144: BytePoly_8 = bigint_mul!(x4142, x4143, 8);
    let x4145: BytePoly_9 = bigint_nondet_quot!(ctx, x4144, x6, 9);
    let x4146: BytePoly_4 = bigint_nondet_rem!(ctx, x4144, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4145, x6, 13), x4146, 13),
            x4144,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x4146, x3, 4), 34, 1)?;
    let x4147: BytePoly_8 = bigint_mul!(x4139, x4143, 8);
    let x4148: BytePoly_9 = bigint_nondet_quot!(ctx, x4147, x6, 9);
    let x4149: BytePoly_4 = bigint_nondet_rem!(ctx, x4147, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4148, x6, 13), x4149, 13),
            x4147,
            13
        ),
        73156,
        4,
    )?;
    let x4150: BytePoly_8 = bigint_mul!(x4149, x4098, 8);
    let x4151: BytePoly_9 = bigint_nondet_quot!(ctx, x4150, x6, 9);
    let x4152: BytePoly_4 = bigint_nondet_rem!(ctx, x4150, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4151, x6, 13), x4152, 13),
            x4150,
            13
        ),
        73156,
        4,
    )?;
    let x4153: BytePoly_4 = bigint_add!(bigint_sub!(x4104, x4152, 4), x6, 4);
    let x4154: BytePoly_4 = bigint_nondet_quot!(ctx, x4153, x6, 4);
    let x4155: BytePoly_4 = bigint_nondet_rem!(ctx, x4153, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x4154, x6, 8), x4155, 8), x4153, 8),
        32515,
        2,
    )?;
    let x4156: BytePoly_8 = bigint_mul!(x4149, x4149, 8);
    let x4157: BytePoly_9 = bigint_nondet_quot!(ctx, x4156, x6, 9);
    let x4158: BytePoly_4 = bigint_nondet_rem!(ctx, x4156, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4157, x6, 13), x4158, 13),
            x4156,
            13
        ),
        73156,
        4,
    )?;
    let x4159: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x4158, x4098, 4), x6, 4), x4098, 4),
        x6,
        4
    );
    let x4160: BytePoly_4 = bigint_nondet_quot!(ctx, x4159, x6, 4);
    let x4161: BytePoly_4 = bigint_nondet_rem!(ctx, x4159, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x4160, x6, 8), x4161, 8), x4159, 8),
        32515,
        2,
    )?;
    let x4162: BytePoly_8 = bigint_mul!(x4149, x4161, 8);
    let x4163: BytePoly_9 = bigint_nondet_quot!(ctx, x4162, x6, 9);
    let x4164: BytePoly_4 = bigint_nondet_rem!(ctx, x4162, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4163, x6, 13), x4164, 13),
            x4162,
            13
        ),
        73156,
        4,
    )?;
    let x4165: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x4164, x4155, 4), 4), x6, 4);
    let x4166: BytePoly_4 = bigint_nondet_quot!(ctx, x4165, x6, 4);
    let x4167: BytePoly_4 = bigint_nondet_rem!(ctx, x4165, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x4166, x6, 8), x4167, 8), x4165, 8),
        32515,
        2,
    )?;
    let x4168: BytePoly_1 = bigint_nondet_rem!(ctx, x4106, x2, 1);
    let x4169: BytePoly_5 = bigint_nondet_quot!(ctx, x4106, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x4169, x2, 6), x4168, 6), x4106, 6),
        40643,
        4,
    )?;
    let x4170: BytePoly_1 = bigint_sub!(x3, x4168, 1);
    eqz(ctx, &bigint_mul!(x4168, x4170, 2), 8131, 2)?;
    let x4171: BytePoly_4 = bigint_add!(bigint_sub!(x4161, x4131, 4), x6, 4);
    let x4172: BytePoly_4 = bigint_nondet_inv!(ctx, x4171, x6, 4);
    let x4173: BytePoly_8 = bigint_mul!(x4171, x4172, 8);
    let x4174: BytePoly_9 = bigint_nondet_quot!(ctx, x4173, x6, 9);
    let x4175: BytePoly_4 = bigint_nondet_rem!(ctx, x4173, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4174, x6, 13), x4175, 13),
            x4173,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x4175, x1, 4), 34, 1)?;
    let x4176: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x4167, x4133, 4), x6, 4), x4172, 8);
    let x4177: BytePoly_9 = bigint_nondet_quot!(ctx, x4176, x6, 9);
    let x4178: BytePoly_4 = bigint_nondet_rem!(ctx, x4176, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4177, x6, 13), x4178, 13),
            x4176,
            13
        ),
        73156,
        4,
    )?;
    let x4179: BytePoly_8 = bigint_add!(bigint_sub!(x4133, bigint_mul!(x4178, x4131, 8), 8), x6, 8);
    let x4180: BytePoly_8 = bigint_nondet_quot!(ctx, x4179, x6, 8);
    let x4181: BytePoly_4 = bigint_nondet_rem!(ctx, x4179, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4180, x6, 12), x4181, 12),
            x4179,
            12
        ),
        65028,
        4,
    )?;
    let x4182: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x4178, x4178, 8), x4131, 8), x6, 8),
            x4161,
            8
        ),
        x6,
        8
    );
    let x4183: BytePoly_9 = bigint_nondet_quot!(ctx, x4182, x6, 9);
    let x4184: BytePoly_4 = bigint_nondet_rem!(ctx, x4182, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4183, x6, 13), x4184, 13),
            x4182,
            13
        ),
        73156,
        4,
    )?;
    let x4185: BytePoly_8 = bigint_mul!(x4178, x4184, 8);
    let x4186: BytePoly_9 = bigint_nondet_quot!(ctx, x4185, x6, 9);
    let x4187: BytePoly_4 = bigint_nondet_rem!(ctx, x4185, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4186, x6, 13), x4187, 13),
            x4185,
            13
        ),
        73156,
        4,
    )?;
    let x4188: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x4187, x4181, 4), 4), x6, 4);
    let x4189: BytePoly_4 = bigint_nondet_quot!(ctx, x4188, x6, 4);
    let x4190: BytePoly_4 = bigint_nondet_rem!(ctx, x4188, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x4189, x6, 8), x4190, 8), x4188, 8),
        32515,
        2,
    )?;
    let x4191: BytePoly_5 = bigint_add!(
        bigint_mul!(x4184, x4168, 5),
        bigint_mul!(x4131, x4170, 5),
        5
    );
    let x4192: BytePoly_5 = bigint_add!(
        bigint_mul!(x4190, x4168, 5),
        bigint_mul!(x4133, x4170, 5),
        5
    );
    let x4193: BytePoly_6 = bigint_nondet_quot!(ctx, x4191, x6, 6);
    let x4194: BytePoly_4 = bigint_nondet_rem!(ctx, x4191, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4193, x6, 10), x4194, 10),
            x4191,
            10
        ),
        48771,
        4,
    )?;
    let x4195: BytePoly_6 = bigint_nondet_quot!(ctx, x4192, x6, 6);
    let x4196: BytePoly_4 = bigint_nondet_rem!(ctx, x4192, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4195, x6, 10), x4196, 10),
            x4192,
            10
        ),
        48771,
        4,
    )?;
    let x4197: BytePoly_8 = bigint_mul!(x4161, x4161, 8);
    let x4198: BytePoly_9 = bigint_nondet_quot!(ctx, x4197, x6, 9);
    let x4199: BytePoly_4 = bigint_nondet_rem!(ctx, x4197, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4198, x6, 13), x4199, 13),
            x4197,
            13
        ),
        73156,
        4,
    )?;
    let x4200: BytePoly_5 = bigint_add!(bigint_mul!(x4199, x0, 5), x5, 5);
    let x4201: BytePoly_6 = bigint_nondet_quot!(ctx, x4200, x6, 6);
    let x4202: BytePoly_4 = bigint_nondet_rem!(ctx, x4200, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4201, x6, 10), x4202, 10),
            x4200,
            10
        ),
        48771,
        4,
    )?;
    let x4203: BytePoly_4 = bigint_add!(x4167, x4167, 4);
    let x4204: BytePoly_4 = bigint_nondet_quot!(ctx, x4203, x6, 4);
    let x4205: BytePoly_4 = bigint_nondet_rem!(ctx, x4203, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x4204, x6, 8), x4205, 8), x4203, 8),
        32515,
        2,
    )?;
    let x4206: BytePoly_4 = bigint_nondet_inv!(ctx, x4205, x6, 4);
    let x4207: BytePoly_8 = bigint_mul!(x4205, x4206, 8);
    let x4208: BytePoly_9 = bigint_nondet_quot!(ctx, x4207, x6, 9);
    let x4209: BytePoly_4 = bigint_nondet_rem!(ctx, x4207, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4208, x6, 13), x4209, 13),
            x4207,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x4209, x3, 4), 34, 1)?;
    let x4210: BytePoly_8 = bigint_mul!(x4202, x4206, 8);
    let x4211: BytePoly_9 = bigint_nondet_quot!(ctx, x4210, x6, 9);
    let x4212: BytePoly_4 = bigint_nondet_rem!(ctx, x4210, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4211, x6, 13), x4212, 13),
            x4210,
            13
        ),
        73156,
        4,
    )?;
    let x4213: BytePoly_8 = bigint_mul!(x4212, x4161, 8);
    let x4214: BytePoly_9 = bigint_nondet_quot!(ctx, x4213, x6, 9);
    let x4215: BytePoly_4 = bigint_nondet_rem!(ctx, x4213, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4214, x6, 13), x4215, 13),
            x4213,
            13
        ),
        73156,
        4,
    )?;
    let x4216: BytePoly_4 = bigint_add!(bigint_sub!(x4167, x4215, 4), x6, 4);
    let x4217: BytePoly_4 = bigint_nondet_quot!(ctx, x4216, x6, 4);
    let x4218: BytePoly_4 = bigint_nondet_rem!(ctx, x4216, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x4217, x6, 8), x4218, 8), x4216, 8),
        32515,
        2,
    )?;
    let x4219: BytePoly_8 = bigint_mul!(x4212, x4212, 8);
    let x4220: BytePoly_9 = bigint_nondet_quot!(ctx, x4219, x6, 9);
    let x4221: BytePoly_4 = bigint_nondet_rem!(ctx, x4219, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4220, x6, 13), x4221, 13),
            x4219,
            13
        ),
        73156,
        4,
    )?;
    let x4222: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x4221, x4161, 4), x6, 4), x4161, 4),
        x6,
        4
    );
    let x4223: BytePoly_4 = bigint_nondet_quot!(ctx, x4222, x6, 4);
    let x4224: BytePoly_4 = bigint_nondet_rem!(ctx, x4222, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x4223, x6, 8), x4224, 8), x4222, 8),
        32515,
        2,
    )?;
    let x4225: BytePoly_8 = bigint_mul!(x4212, x4224, 8);
    let x4226: BytePoly_9 = bigint_nondet_quot!(ctx, x4225, x6, 9);
    let x4227: BytePoly_4 = bigint_nondet_rem!(ctx, x4225, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4226, x6, 13), x4227, 13),
            x4225,
            13
        ),
        73156,
        4,
    )?;
    let x4228: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x4227, x4218, 4), 4), x6, 4);
    let x4229: BytePoly_4 = bigint_nondet_quot!(ctx, x4228, x6, 4);
    let x4230: BytePoly_4 = bigint_nondet_rem!(ctx, x4228, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x4229, x6, 8), x4230, 8), x4228, 8),
        32515,
        2,
    )?;
    let x4231: BytePoly_1 = bigint_nondet_rem!(ctx, x4169, x2, 1);
    let x4232: BytePoly_5 = bigint_nondet_quot!(ctx, x4169, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x4232, x2, 6), x4231, 6), x4169, 6),
        40643,
        4,
    )?;
    let x4233: BytePoly_1 = bigint_sub!(x3, x4231, 1);
    eqz(ctx, &bigint_mul!(x4231, x4233, 2), 8131, 2)?;
    let x4234: BytePoly_4 = bigint_add!(bigint_sub!(x4224, x4194, 4), x6, 4);
    let x4235: BytePoly_4 = bigint_nondet_inv!(ctx, x4234, x6, 4);
    let x4236: BytePoly_8 = bigint_mul!(x4234, x4235, 8);
    let x4237: BytePoly_9 = bigint_nondet_quot!(ctx, x4236, x6, 9);
    let x4238: BytePoly_4 = bigint_nondet_rem!(ctx, x4236, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4237, x6, 13), x4238, 13),
            x4236,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x4238, x1, 4), 34, 1)?;
    let x4239: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x4230, x4196, 4), x6, 4), x4235, 8);
    let x4240: BytePoly_9 = bigint_nondet_quot!(ctx, x4239, x6, 9);
    let x4241: BytePoly_4 = bigint_nondet_rem!(ctx, x4239, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4240, x6, 13), x4241, 13),
            x4239,
            13
        ),
        73156,
        4,
    )?;
    let x4242: BytePoly_8 = bigint_add!(bigint_sub!(x4196, bigint_mul!(x4241, x4194, 8), 8), x6, 8);
    let x4243: BytePoly_8 = bigint_nondet_quot!(ctx, x4242, x6, 8);
    let x4244: BytePoly_4 = bigint_nondet_rem!(ctx, x4242, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4243, x6, 12), x4244, 12),
            x4242,
            12
        ),
        65028,
        4,
    )?;
    let x4245: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x4241, x4241, 8), x4194, 8), x6, 8),
            x4224,
            8
        ),
        x6,
        8
    );
    let x4246: BytePoly_9 = bigint_nondet_quot!(ctx, x4245, x6, 9);
    let x4247: BytePoly_4 = bigint_nondet_rem!(ctx, x4245, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4246, x6, 13), x4247, 13),
            x4245,
            13
        ),
        73156,
        4,
    )?;
    let x4248: BytePoly_8 = bigint_mul!(x4241, x4247, 8);
    let x4249: BytePoly_9 = bigint_nondet_quot!(ctx, x4248, x6, 9);
    let x4250: BytePoly_4 = bigint_nondet_rem!(ctx, x4248, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4249, x6, 13), x4250, 13),
            x4248,
            13
        ),
        73156,
        4,
    )?;
    let x4251: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x4250, x4244, 4), 4), x6, 4);
    let x4252: BytePoly_4 = bigint_nondet_quot!(ctx, x4251, x6, 4);
    let x4253: BytePoly_4 = bigint_nondet_rem!(ctx, x4251, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x4252, x6, 8), x4253, 8), x4251, 8),
        32515,
        2,
    )?;
    let x4254: BytePoly_5 = bigint_add!(
        bigint_mul!(x4247, x4231, 5),
        bigint_mul!(x4194, x4233, 5),
        5
    );
    let x4255: BytePoly_5 = bigint_add!(
        bigint_mul!(x4253, x4231, 5),
        bigint_mul!(x4196, x4233, 5),
        5
    );
    let x4256: BytePoly_6 = bigint_nondet_quot!(ctx, x4254, x6, 6);
    let x4257: BytePoly_4 = bigint_nondet_rem!(ctx, x4254, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4256, x6, 10), x4257, 10),
            x4254,
            10
        ),
        48771,
        4,
    )?;
    let x4258: BytePoly_6 = bigint_nondet_quot!(ctx, x4255, x6, 6);
    let x4259: BytePoly_4 = bigint_nondet_rem!(ctx, x4255, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4258, x6, 10), x4259, 10),
            x4255,
            10
        ),
        48771,
        4,
    )?;
    let x4260: BytePoly_8 = bigint_mul!(x4224, x4224, 8);
    let x4261: BytePoly_9 = bigint_nondet_quot!(ctx, x4260, x6, 9);
    let x4262: BytePoly_4 = bigint_nondet_rem!(ctx, x4260, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4261, x6, 13), x4262, 13),
            x4260,
            13
        ),
        73156,
        4,
    )?;
    let x4263: BytePoly_5 = bigint_add!(bigint_mul!(x4262, x0, 5), x5, 5);
    let x4264: BytePoly_6 = bigint_nondet_quot!(ctx, x4263, x6, 6);
    let x4265: BytePoly_4 = bigint_nondet_rem!(ctx, x4263, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4264, x6, 10), x4265, 10),
            x4263,
            10
        ),
        48771,
        4,
    )?;
    let x4266: BytePoly_4 = bigint_add!(x4230, x4230, 4);
    let x4267: BytePoly_4 = bigint_nondet_quot!(ctx, x4266, x6, 4);
    let x4268: BytePoly_4 = bigint_nondet_rem!(ctx, x4266, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x4267, x6, 8), x4268, 8), x4266, 8),
        32515,
        2,
    )?;
    let x4269: BytePoly_4 = bigint_nondet_inv!(ctx, x4268, x6, 4);
    let x4270: BytePoly_8 = bigint_mul!(x4268, x4269, 8);
    let x4271: BytePoly_9 = bigint_nondet_quot!(ctx, x4270, x6, 9);
    let x4272: BytePoly_4 = bigint_nondet_rem!(ctx, x4270, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4271, x6, 13), x4272, 13),
            x4270,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x4272, x3, 4), 34, 1)?;
    let x4273: BytePoly_8 = bigint_mul!(x4265, x4269, 8);
    let x4274: BytePoly_9 = bigint_nondet_quot!(ctx, x4273, x6, 9);
    let x4275: BytePoly_4 = bigint_nondet_rem!(ctx, x4273, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4274, x6, 13), x4275, 13),
            x4273,
            13
        ),
        73156,
        4,
    )?;
    let x4276: BytePoly_8 = bigint_mul!(x4275, x4224, 8);
    let x4277: BytePoly_9 = bigint_nondet_quot!(ctx, x4276, x6, 9);
    let x4278: BytePoly_4 = bigint_nondet_rem!(ctx, x4276, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4277, x6, 13), x4278, 13),
            x4276,
            13
        ),
        73156,
        4,
    )?;
    let x4279: BytePoly_4 = bigint_add!(bigint_sub!(x4230, x4278, 4), x6, 4);
    let x4280: BytePoly_4 = bigint_nondet_quot!(ctx, x4279, x6, 4);
    let x4281: BytePoly_4 = bigint_nondet_rem!(ctx, x4279, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x4280, x6, 8), x4281, 8), x4279, 8),
        32515,
        2,
    )?;
    let x4282: BytePoly_8 = bigint_mul!(x4275, x4275, 8);
    let x4283: BytePoly_9 = bigint_nondet_quot!(ctx, x4282, x6, 9);
    let x4284: BytePoly_4 = bigint_nondet_rem!(ctx, x4282, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4283, x6, 13), x4284, 13),
            x4282,
            13
        ),
        73156,
        4,
    )?;
    let x4285: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x4284, x4224, 4), x6, 4), x4224, 4),
        x6,
        4
    );
    let x4286: BytePoly_4 = bigint_nondet_quot!(ctx, x4285, x6, 4);
    let x4287: BytePoly_4 = bigint_nondet_rem!(ctx, x4285, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x4286, x6, 8), x4287, 8), x4285, 8),
        32515,
        2,
    )?;
    let x4288: BytePoly_8 = bigint_mul!(x4275, x4287, 8);
    let x4289: BytePoly_9 = bigint_nondet_quot!(ctx, x4288, x6, 9);
    let x4290: BytePoly_4 = bigint_nondet_rem!(ctx, x4288, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4289, x6, 13), x4290, 13),
            x4288,
            13
        ),
        73156,
        4,
    )?;
    let x4291: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x4290, x4281, 4), 4), x6, 4);
    let x4292: BytePoly_4 = bigint_nondet_quot!(ctx, x4291, x6, 4);
    let x4293: BytePoly_4 = bigint_nondet_rem!(ctx, x4291, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x4292, x6, 8), x4293, 8), x4291, 8),
        32515,
        2,
    )?;
    let x4294: BytePoly_1 = bigint_nondet_rem!(ctx, x4232, x2, 1);
    let x4295: BytePoly_5 = bigint_nondet_quot!(ctx, x4232, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x4295, x2, 6), x4294, 6), x4232, 6),
        40643,
        4,
    )?;
    let x4296: BytePoly_1 = bigint_sub!(x3, x4294, 1);
    eqz(ctx, &bigint_mul!(x4294, x4296, 2), 8131, 2)?;
    let x4297: BytePoly_4 = bigint_add!(bigint_sub!(x4287, x4257, 4), x6, 4);
    let x4298: BytePoly_4 = bigint_nondet_inv!(ctx, x4297, x6, 4);
    let x4299: BytePoly_8 = bigint_mul!(x4297, x4298, 8);
    let x4300: BytePoly_9 = bigint_nondet_quot!(ctx, x4299, x6, 9);
    let x4301: BytePoly_4 = bigint_nondet_rem!(ctx, x4299, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4300, x6, 13), x4301, 13),
            x4299,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x4301, x1, 4), 34, 1)?;
    let x4302: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x4293, x4259, 4), x6, 4), x4298, 8);
    let x4303: BytePoly_9 = bigint_nondet_quot!(ctx, x4302, x6, 9);
    let x4304: BytePoly_4 = bigint_nondet_rem!(ctx, x4302, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4303, x6, 13), x4304, 13),
            x4302,
            13
        ),
        73156,
        4,
    )?;
    let x4305: BytePoly_8 = bigint_add!(bigint_sub!(x4259, bigint_mul!(x4304, x4257, 8), 8), x6, 8);
    let x4306: BytePoly_8 = bigint_nondet_quot!(ctx, x4305, x6, 8);
    let x4307: BytePoly_4 = bigint_nondet_rem!(ctx, x4305, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4306, x6, 12), x4307, 12),
            x4305,
            12
        ),
        65028,
        4,
    )?;
    let x4308: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x4304, x4304, 8), x4257, 8), x6, 8),
            x4287,
            8
        ),
        x6,
        8
    );
    let x4309: BytePoly_9 = bigint_nondet_quot!(ctx, x4308, x6, 9);
    let x4310: BytePoly_4 = bigint_nondet_rem!(ctx, x4308, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4309, x6, 13), x4310, 13),
            x4308,
            13
        ),
        73156,
        4,
    )?;
    let x4311: BytePoly_8 = bigint_mul!(x4304, x4310, 8);
    let x4312: BytePoly_9 = bigint_nondet_quot!(ctx, x4311, x6, 9);
    let x4313: BytePoly_4 = bigint_nondet_rem!(ctx, x4311, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4312, x6, 13), x4313, 13),
            x4311,
            13
        ),
        73156,
        4,
    )?;
    let x4314: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x4313, x4307, 4), 4), x6, 4);
    let x4315: BytePoly_4 = bigint_nondet_quot!(ctx, x4314, x6, 4);
    let x4316: BytePoly_4 = bigint_nondet_rem!(ctx, x4314, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x4315, x6, 8), x4316, 8), x4314, 8),
        32515,
        2,
    )?;
    let x4317: BytePoly_5 = bigint_add!(
        bigint_mul!(x4310, x4294, 5),
        bigint_mul!(x4257, x4296, 5),
        5
    );
    let x4318: BytePoly_5 = bigint_add!(
        bigint_mul!(x4316, x4294, 5),
        bigint_mul!(x4259, x4296, 5),
        5
    );
    let x4319: BytePoly_6 = bigint_nondet_quot!(ctx, x4317, x6, 6);
    let x4320: BytePoly_4 = bigint_nondet_rem!(ctx, x4317, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4319, x6, 10), x4320, 10),
            x4317,
            10
        ),
        48771,
        4,
    )?;
    let x4321: BytePoly_6 = bigint_nondet_quot!(ctx, x4318, x6, 6);
    let x4322: BytePoly_4 = bigint_nondet_rem!(ctx, x4318, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4321, x6, 10), x4322, 10),
            x4318,
            10
        ),
        48771,
        4,
    )?;
    let x4323: BytePoly_8 = bigint_mul!(x4287, x4287, 8);
    let x4324: BytePoly_9 = bigint_nondet_quot!(ctx, x4323, x6, 9);
    let x4325: BytePoly_4 = bigint_nondet_rem!(ctx, x4323, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4324, x6, 13), x4325, 13),
            x4323,
            13
        ),
        73156,
        4,
    )?;
    let x4326: BytePoly_5 = bigint_add!(bigint_mul!(x4325, x0, 5), x5, 5);
    let x4327: BytePoly_6 = bigint_nondet_quot!(ctx, x4326, x6, 6);
    let x4328: BytePoly_4 = bigint_nondet_rem!(ctx, x4326, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4327, x6, 10), x4328, 10),
            x4326,
            10
        ),
        48771,
        4,
    )?;
    let x4329: BytePoly_4 = bigint_add!(x4293, x4293, 4);
    let x4330: BytePoly_4 = bigint_nondet_quot!(ctx, x4329, x6, 4);
    let x4331: BytePoly_4 = bigint_nondet_rem!(ctx, x4329, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x4330, x6, 8), x4331, 8), x4329, 8),
        32515,
        2,
    )?;
    let x4332: BytePoly_4 = bigint_nondet_inv!(ctx, x4331, x6, 4);
    let x4333: BytePoly_8 = bigint_mul!(x4331, x4332, 8);
    let x4334: BytePoly_9 = bigint_nondet_quot!(ctx, x4333, x6, 9);
    let x4335: BytePoly_4 = bigint_nondet_rem!(ctx, x4333, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4334, x6, 13), x4335, 13),
            x4333,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x4335, x3, 4), 34, 1)?;
    let x4336: BytePoly_8 = bigint_mul!(x4328, x4332, 8);
    let x4337: BytePoly_9 = bigint_nondet_quot!(ctx, x4336, x6, 9);
    let x4338: BytePoly_4 = bigint_nondet_rem!(ctx, x4336, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4337, x6, 13), x4338, 13),
            x4336,
            13
        ),
        73156,
        4,
    )?;
    let x4339: BytePoly_8 = bigint_mul!(x4338, x4287, 8);
    let x4340: BytePoly_9 = bigint_nondet_quot!(ctx, x4339, x6, 9);
    let x4341: BytePoly_4 = bigint_nondet_rem!(ctx, x4339, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4340, x6, 13), x4341, 13),
            x4339,
            13
        ),
        73156,
        4,
    )?;
    let x4342: BytePoly_4 = bigint_add!(bigint_sub!(x4293, x4341, 4), x6, 4);
    let x4343: BytePoly_4 = bigint_nondet_quot!(ctx, x4342, x6, 4);
    let x4344: BytePoly_4 = bigint_nondet_rem!(ctx, x4342, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x4343, x6, 8), x4344, 8), x4342, 8),
        32515,
        2,
    )?;
    let x4345: BytePoly_8 = bigint_mul!(x4338, x4338, 8);
    let x4346: BytePoly_9 = bigint_nondet_quot!(ctx, x4345, x6, 9);
    let x4347: BytePoly_4 = bigint_nondet_rem!(ctx, x4345, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4346, x6, 13), x4347, 13),
            x4345,
            13
        ),
        73156,
        4,
    )?;
    let x4348: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x4347, x4287, 4), x6, 4), x4287, 4),
        x6,
        4
    );
    let x4349: BytePoly_4 = bigint_nondet_quot!(ctx, x4348, x6, 4);
    let x4350: BytePoly_4 = bigint_nondet_rem!(ctx, x4348, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x4349, x6, 8), x4350, 8), x4348, 8),
        32515,
        2,
    )?;
    let x4351: BytePoly_8 = bigint_mul!(x4338, x4350, 8);
    let x4352: BytePoly_9 = bigint_nondet_quot!(ctx, x4351, x6, 9);
    let x4353: BytePoly_4 = bigint_nondet_rem!(ctx, x4351, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4352, x6, 13), x4353, 13),
            x4351,
            13
        ),
        73156,
        4,
    )?;
    let x4354: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x4353, x4344, 4), 4), x6, 4);
    let x4355: BytePoly_4 = bigint_nondet_quot!(ctx, x4354, x6, 4);
    let x4356: BytePoly_4 = bigint_nondet_rem!(ctx, x4354, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x4355, x6, 8), x4356, 8), x4354, 8),
        32515,
        2,
    )?;
    let x4357: BytePoly_1 = bigint_nondet_rem!(ctx, x4295, x2, 1);
    let x4358: BytePoly_5 = bigint_nondet_quot!(ctx, x4295, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x4358, x2, 6), x4357, 6), x4295, 6),
        40643,
        4,
    )?;
    let x4359: BytePoly_1 = bigint_sub!(x3, x4357, 1);
    eqz(ctx, &bigint_mul!(x4357, x4359, 2), 8131, 2)?;
    let x4360: BytePoly_4 = bigint_add!(bigint_sub!(x4350, x4320, 4), x6, 4);
    let x4361: BytePoly_4 = bigint_nondet_inv!(ctx, x4360, x6, 4);
    let x4362: BytePoly_8 = bigint_mul!(x4360, x4361, 8);
    let x4363: BytePoly_9 = bigint_nondet_quot!(ctx, x4362, x6, 9);
    let x4364: BytePoly_4 = bigint_nondet_rem!(ctx, x4362, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4363, x6, 13), x4364, 13),
            x4362,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x4364, x1, 4), 34, 1)?;
    let x4365: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x4356, x4322, 4), x6, 4), x4361, 8);
    let x4366: BytePoly_9 = bigint_nondet_quot!(ctx, x4365, x6, 9);
    let x4367: BytePoly_4 = bigint_nondet_rem!(ctx, x4365, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4366, x6, 13), x4367, 13),
            x4365,
            13
        ),
        73156,
        4,
    )?;
    let x4368: BytePoly_8 = bigint_add!(bigint_sub!(x4322, bigint_mul!(x4367, x4320, 8), 8), x6, 8);
    let x4369: BytePoly_8 = bigint_nondet_quot!(ctx, x4368, x6, 8);
    let x4370: BytePoly_4 = bigint_nondet_rem!(ctx, x4368, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4369, x6, 12), x4370, 12),
            x4368,
            12
        ),
        65028,
        4,
    )?;
    let x4371: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x4367, x4367, 8), x4320, 8), x6, 8),
            x4350,
            8
        ),
        x6,
        8
    );
    let x4372: BytePoly_9 = bigint_nondet_quot!(ctx, x4371, x6, 9);
    let x4373: BytePoly_4 = bigint_nondet_rem!(ctx, x4371, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4372, x6, 13), x4373, 13),
            x4371,
            13
        ),
        73156,
        4,
    )?;
    let x4374: BytePoly_8 = bigint_mul!(x4367, x4373, 8);
    let x4375: BytePoly_9 = bigint_nondet_quot!(ctx, x4374, x6, 9);
    let x4376: BytePoly_4 = bigint_nondet_rem!(ctx, x4374, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4375, x6, 13), x4376, 13),
            x4374,
            13
        ),
        73156,
        4,
    )?;
    let x4377: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x4376, x4370, 4), 4), x6, 4);
    let x4378: BytePoly_4 = bigint_nondet_quot!(ctx, x4377, x6, 4);
    let x4379: BytePoly_4 = bigint_nondet_rem!(ctx, x4377, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x4378, x6, 8), x4379, 8), x4377, 8),
        32515,
        2,
    )?;
    let x4380: BytePoly_5 = bigint_add!(
        bigint_mul!(x4373, x4357, 5),
        bigint_mul!(x4320, x4359, 5),
        5
    );
    let x4381: BytePoly_5 = bigint_add!(
        bigint_mul!(x4379, x4357, 5),
        bigint_mul!(x4322, x4359, 5),
        5
    );
    let x4382: BytePoly_6 = bigint_nondet_quot!(ctx, x4380, x6, 6);
    let x4383: BytePoly_4 = bigint_nondet_rem!(ctx, x4380, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4382, x6, 10), x4383, 10),
            x4380,
            10
        ),
        48771,
        4,
    )?;
    let x4384: BytePoly_6 = bigint_nondet_quot!(ctx, x4381, x6, 6);
    let x4385: BytePoly_4 = bigint_nondet_rem!(ctx, x4381, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4384, x6, 10), x4385, 10),
            x4381,
            10
        ),
        48771,
        4,
    )?;
    let x4386: BytePoly_8 = bigint_mul!(x4350, x4350, 8);
    let x4387: BytePoly_9 = bigint_nondet_quot!(ctx, x4386, x6, 9);
    let x4388: BytePoly_4 = bigint_nondet_rem!(ctx, x4386, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4387, x6, 13), x4388, 13),
            x4386,
            13
        ),
        73156,
        4,
    )?;
    let x4389: BytePoly_5 = bigint_add!(bigint_mul!(x4388, x0, 5), x5, 5);
    let x4390: BytePoly_6 = bigint_nondet_quot!(ctx, x4389, x6, 6);
    let x4391: BytePoly_4 = bigint_nondet_rem!(ctx, x4389, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4390, x6, 10), x4391, 10),
            x4389,
            10
        ),
        48771,
        4,
    )?;
    let x4392: BytePoly_4 = bigint_add!(x4356, x4356, 4);
    let x4393: BytePoly_4 = bigint_nondet_quot!(ctx, x4392, x6, 4);
    let x4394: BytePoly_4 = bigint_nondet_rem!(ctx, x4392, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x4393, x6, 8), x4394, 8), x4392, 8),
        32515,
        2,
    )?;
    let x4395: BytePoly_4 = bigint_nondet_inv!(ctx, x4394, x6, 4);
    let x4396: BytePoly_8 = bigint_mul!(x4394, x4395, 8);
    let x4397: BytePoly_9 = bigint_nondet_quot!(ctx, x4396, x6, 9);
    let x4398: BytePoly_4 = bigint_nondet_rem!(ctx, x4396, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4397, x6, 13), x4398, 13),
            x4396,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x4398, x3, 4), 34, 1)?;
    let x4399: BytePoly_8 = bigint_mul!(x4391, x4395, 8);
    let x4400: BytePoly_9 = bigint_nondet_quot!(ctx, x4399, x6, 9);
    let x4401: BytePoly_4 = bigint_nondet_rem!(ctx, x4399, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4400, x6, 13), x4401, 13),
            x4399,
            13
        ),
        73156,
        4,
    )?;
    let x4402: BytePoly_8 = bigint_mul!(x4401, x4350, 8);
    let x4403: BytePoly_9 = bigint_nondet_quot!(ctx, x4402, x6, 9);
    let x4404: BytePoly_4 = bigint_nondet_rem!(ctx, x4402, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4403, x6, 13), x4404, 13),
            x4402,
            13
        ),
        73156,
        4,
    )?;
    let x4405: BytePoly_4 = bigint_add!(bigint_sub!(x4356, x4404, 4), x6, 4);
    let x4406: BytePoly_4 = bigint_nondet_quot!(ctx, x4405, x6, 4);
    let x4407: BytePoly_4 = bigint_nondet_rem!(ctx, x4405, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x4406, x6, 8), x4407, 8), x4405, 8),
        32515,
        2,
    )?;
    let x4408: BytePoly_8 = bigint_mul!(x4401, x4401, 8);
    let x4409: BytePoly_9 = bigint_nondet_quot!(ctx, x4408, x6, 9);
    let x4410: BytePoly_4 = bigint_nondet_rem!(ctx, x4408, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4409, x6, 13), x4410, 13),
            x4408,
            13
        ),
        73156,
        4,
    )?;
    let x4411: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x4410, x4350, 4), x6, 4), x4350, 4),
        x6,
        4
    );
    let x4412: BytePoly_4 = bigint_nondet_quot!(ctx, x4411, x6, 4);
    let x4413: BytePoly_4 = bigint_nondet_rem!(ctx, x4411, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x4412, x6, 8), x4413, 8), x4411, 8),
        32515,
        2,
    )?;
    let x4414: BytePoly_8 = bigint_mul!(x4401, x4413, 8);
    let x4415: BytePoly_9 = bigint_nondet_quot!(ctx, x4414, x6, 9);
    let x4416: BytePoly_4 = bigint_nondet_rem!(ctx, x4414, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4415, x6, 13), x4416, 13),
            x4414,
            13
        ),
        73156,
        4,
    )?;
    let x4417: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x4416, x4407, 4), 4), x6, 4);
    let x4418: BytePoly_4 = bigint_nondet_quot!(ctx, x4417, x6, 4);
    let x4419: BytePoly_4 = bigint_nondet_rem!(ctx, x4417, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x4418, x6, 8), x4419, 8), x4417, 8),
        32515,
        2,
    )?;
    let x4420: BytePoly_1 = bigint_nondet_rem!(ctx, x4358, x2, 1);
    let x4421: BytePoly_5 = bigint_nondet_quot!(ctx, x4358, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x4421, x2, 6), x4420, 6), x4358, 6),
        40643,
        4,
    )?;
    let x4422: BytePoly_1 = bigint_sub!(x3, x4420, 1);
    eqz(ctx, &bigint_mul!(x4420, x4422, 2), 8131, 2)?;
    let x4423: BytePoly_4 = bigint_add!(bigint_sub!(x4413, x4383, 4), x6, 4);
    let x4424: BytePoly_4 = bigint_nondet_inv!(ctx, x4423, x6, 4);
    let x4425: BytePoly_8 = bigint_mul!(x4423, x4424, 8);
    let x4426: BytePoly_9 = bigint_nondet_quot!(ctx, x4425, x6, 9);
    let x4427: BytePoly_4 = bigint_nondet_rem!(ctx, x4425, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4426, x6, 13), x4427, 13),
            x4425,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x4427, x1, 4), 34, 1)?;
    let x4428: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x4419, x4385, 4), x6, 4), x4424, 8);
    let x4429: BytePoly_9 = bigint_nondet_quot!(ctx, x4428, x6, 9);
    let x4430: BytePoly_4 = bigint_nondet_rem!(ctx, x4428, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4429, x6, 13), x4430, 13),
            x4428,
            13
        ),
        73156,
        4,
    )?;
    let x4431: BytePoly_8 = bigint_add!(bigint_sub!(x4385, bigint_mul!(x4430, x4383, 8), 8), x6, 8);
    let x4432: BytePoly_8 = bigint_nondet_quot!(ctx, x4431, x6, 8);
    let x4433: BytePoly_4 = bigint_nondet_rem!(ctx, x4431, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4432, x6, 12), x4433, 12),
            x4431,
            12
        ),
        65028,
        4,
    )?;
    let x4434: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x4430, x4430, 8), x4383, 8), x6, 8),
            x4413,
            8
        ),
        x6,
        8
    );
    let x4435: BytePoly_9 = bigint_nondet_quot!(ctx, x4434, x6, 9);
    let x4436: BytePoly_4 = bigint_nondet_rem!(ctx, x4434, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4435, x6, 13), x4436, 13),
            x4434,
            13
        ),
        73156,
        4,
    )?;
    let x4437: BytePoly_8 = bigint_mul!(x4430, x4436, 8);
    let x4438: BytePoly_9 = bigint_nondet_quot!(ctx, x4437, x6, 9);
    let x4439: BytePoly_4 = bigint_nondet_rem!(ctx, x4437, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4438, x6, 13), x4439, 13),
            x4437,
            13
        ),
        73156,
        4,
    )?;
    let x4440: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x4439, x4433, 4), 4), x6, 4);
    let x4441: BytePoly_4 = bigint_nondet_quot!(ctx, x4440, x6, 4);
    let x4442: BytePoly_4 = bigint_nondet_rem!(ctx, x4440, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x4441, x6, 8), x4442, 8), x4440, 8),
        32515,
        2,
    )?;
    let x4443: BytePoly_5 = bigint_add!(
        bigint_mul!(x4436, x4420, 5),
        bigint_mul!(x4383, x4422, 5),
        5
    );
    let x4444: BytePoly_5 = bigint_add!(
        bigint_mul!(x4442, x4420, 5),
        bigint_mul!(x4385, x4422, 5),
        5
    );
    let x4445: BytePoly_6 = bigint_nondet_quot!(ctx, x4443, x6, 6);
    let x4446: BytePoly_4 = bigint_nondet_rem!(ctx, x4443, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4445, x6, 10), x4446, 10),
            x4443,
            10
        ),
        48771,
        4,
    )?;
    let x4447: BytePoly_6 = bigint_nondet_quot!(ctx, x4444, x6, 6);
    let x4448: BytePoly_4 = bigint_nondet_rem!(ctx, x4444, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4447, x6, 10), x4448, 10),
            x4444,
            10
        ),
        48771,
        4,
    )?;
    let x4449: BytePoly_8 = bigint_mul!(x4413, x4413, 8);
    let x4450: BytePoly_9 = bigint_nondet_quot!(ctx, x4449, x6, 9);
    let x4451: BytePoly_4 = bigint_nondet_rem!(ctx, x4449, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4450, x6, 13), x4451, 13),
            x4449,
            13
        ),
        73156,
        4,
    )?;
    let x4452: BytePoly_5 = bigint_add!(bigint_mul!(x4451, x0, 5), x5, 5);
    let x4453: BytePoly_6 = bigint_nondet_quot!(ctx, x4452, x6, 6);
    let x4454: BytePoly_4 = bigint_nondet_rem!(ctx, x4452, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4453, x6, 10), x4454, 10),
            x4452,
            10
        ),
        48771,
        4,
    )?;
    let x4455: BytePoly_4 = bigint_add!(x4419, x4419, 4);
    let x4456: BytePoly_4 = bigint_nondet_quot!(ctx, x4455, x6, 4);
    let x4457: BytePoly_4 = bigint_nondet_rem!(ctx, x4455, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x4456, x6, 8), x4457, 8), x4455, 8),
        32515,
        2,
    )?;
    let x4458: BytePoly_4 = bigint_nondet_inv!(ctx, x4457, x6, 4);
    let x4459: BytePoly_8 = bigint_mul!(x4457, x4458, 8);
    let x4460: BytePoly_9 = bigint_nondet_quot!(ctx, x4459, x6, 9);
    let x4461: BytePoly_4 = bigint_nondet_rem!(ctx, x4459, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4460, x6, 13), x4461, 13),
            x4459,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x4461, x3, 4), 34, 1)?;
    let x4462: BytePoly_8 = bigint_mul!(x4454, x4458, 8);
    let x4463: BytePoly_9 = bigint_nondet_quot!(ctx, x4462, x6, 9);
    let x4464: BytePoly_4 = bigint_nondet_rem!(ctx, x4462, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4463, x6, 13), x4464, 13),
            x4462,
            13
        ),
        73156,
        4,
    )?;
    let x4465: BytePoly_8 = bigint_mul!(x4464, x4413, 8);
    let x4466: BytePoly_9 = bigint_nondet_quot!(ctx, x4465, x6, 9);
    let x4467: BytePoly_4 = bigint_nondet_rem!(ctx, x4465, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4466, x6, 13), x4467, 13),
            x4465,
            13
        ),
        73156,
        4,
    )?;
    let x4468: BytePoly_4 = bigint_add!(bigint_sub!(x4419, x4467, 4), x6, 4);
    let x4469: BytePoly_4 = bigint_nondet_quot!(ctx, x4468, x6, 4);
    let x4470: BytePoly_4 = bigint_nondet_rem!(ctx, x4468, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x4469, x6, 8), x4470, 8), x4468, 8),
        32515,
        2,
    )?;
    let x4471: BytePoly_8 = bigint_mul!(x4464, x4464, 8);
    let x4472: BytePoly_9 = bigint_nondet_quot!(ctx, x4471, x6, 9);
    let x4473: BytePoly_4 = bigint_nondet_rem!(ctx, x4471, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4472, x6, 13), x4473, 13),
            x4471,
            13
        ),
        73156,
        4,
    )?;
    let x4474: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x4473, x4413, 4), x6, 4), x4413, 4),
        x6,
        4
    );
    let x4475: BytePoly_4 = bigint_nondet_quot!(ctx, x4474, x6, 4);
    let x4476: BytePoly_4 = bigint_nondet_rem!(ctx, x4474, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x4475, x6, 8), x4476, 8), x4474, 8),
        32515,
        2,
    )?;
    let x4477: BytePoly_8 = bigint_mul!(x4464, x4476, 8);
    let x4478: BytePoly_9 = bigint_nondet_quot!(ctx, x4477, x6, 9);
    let x4479: BytePoly_4 = bigint_nondet_rem!(ctx, x4477, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4478, x6, 13), x4479, 13),
            x4477,
            13
        ),
        73156,
        4,
    )?;
    let x4480: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x4479, x4470, 4), 4), x6, 4);
    let x4481: BytePoly_4 = bigint_nondet_quot!(ctx, x4480, x6, 4);
    let x4482: BytePoly_4 = bigint_nondet_rem!(ctx, x4480, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x4481, x6, 8), x4482, 8), x4480, 8),
        32515,
        2,
    )?;
    let x4483: BytePoly_1 = bigint_nondet_rem!(ctx, x4421, x2, 1);
    let x4484: BytePoly_5 = bigint_nondet_quot!(ctx, x4421, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x4484, x2, 6), x4483, 6), x4421, 6),
        40643,
        4,
    )?;
    let x4485: BytePoly_1 = bigint_sub!(x3, x4483, 1);
    eqz(ctx, &bigint_mul!(x4483, x4485, 2), 8131, 2)?;
    let x4486: BytePoly_4 = bigint_add!(bigint_sub!(x4476, x4446, 4), x6, 4);
    let x4487: BytePoly_4 = bigint_nondet_inv!(ctx, x4486, x6, 4);
    let x4488: BytePoly_8 = bigint_mul!(x4486, x4487, 8);
    let x4489: BytePoly_9 = bigint_nondet_quot!(ctx, x4488, x6, 9);
    let x4490: BytePoly_4 = bigint_nondet_rem!(ctx, x4488, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4489, x6, 13), x4490, 13),
            x4488,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x4490, x1, 4), 34, 1)?;
    let x4491: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x4482, x4448, 4), x6, 4), x4487, 8);
    let x4492: BytePoly_9 = bigint_nondet_quot!(ctx, x4491, x6, 9);
    let x4493: BytePoly_4 = bigint_nondet_rem!(ctx, x4491, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4492, x6, 13), x4493, 13),
            x4491,
            13
        ),
        73156,
        4,
    )?;
    let x4494: BytePoly_8 = bigint_add!(bigint_sub!(x4448, bigint_mul!(x4493, x4446, 8), 8), x6, 8);
    let x4495: BytePoly_8 = bigint_nondet_quot!(ctx, x4494, x6, 8);
    let x4496: BytePoly_4 = bigint_nondet_rem!(ctx, x4494, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4495, x6, 12), x4496, 12),
            x4494,
            12
        ),
        65028,
        4,
    )?;
    let x4497: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x4493, x4493, 8), x4446, 8), x6, 8),
            x4476,
            8
        ),
        x6,
        8
    );
    let x4498: BytePoly_9 = bigint_nondet_quot!(ctx, x4497, x6, 9);
    let x4499: BytePoly_4 = bigint_nondet_rem!(ctx, x4497, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4498, x6, 13), x4499, 13),
            x4497,
            13
        ),
        73156,
        4,
    )?;
    let x4500: BytePoly_8 = bigint_mul!(x4493, x4499, 8);
    let x4501: BytePoly_9 = bigint_nondet_quot!(ctx, x4500, x6, 9);
    let x4502: BytePoly_4 = bigint_nondet_rem!(ctx, x4500, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4501, x6, 13), x4502, 13),
            x4500,
            13
        ),
        73156,
        4,
    )?;
    let x4503: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x4502, x4496, 4), 4), x6, 4);
    let x4504: BytePoly_4 = bigint_nondet_quot!(ctx, x4503, x6, 4);
    let x4505: BytePoly_4 = bigint_nondet_rem!(ctx, x4503, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x4504, x6, 8), x4505, 8), x4503, 8),
        32515,
        2,
    )?;
    let x4506: BytePoly_5 = bigint_add!(
        bigint_mul!(x4499, x4483, 5),
        bigint_mul!(x4446, x4485, 5),
        5
    );
    let x4507: BytePoly_5 = bigint_add!(
        bigint_mul!(x4505, x4483, 5),
        bigint_mul!(x4448, x4485, 5),
        5
    );
    let x4508: BytePoly_6 = bigint_nondet_quot!(ctx, x4506, x6, 6);
    let x4509: BytePoly_4 = bigint_nondet_rem!(ctx, x4506, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4508, x6, 10), x4509, 10),
            x4506,
            10
        ),
        48771,
        4,
    )?;
    let x4510: BytePoly_6 = bigint_nondet_quot!(ctx, x4507, x6, 6);
    let x4511: BytePoly_4 = bigint_nondet_rem!(ctx, x4507, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4510, x6, 10), x4511, 10),
            x4507,
            10
        ),
        48771,
        4,
    )?;
    let x4512: BytePoly_8 = bigint_mul!(x4476, x4476, 8);
    let x4513: BytePoly_9 = bigint_nondet_quot!(ctx, x4512, x6, 9);
    let x4514: BytePoly_4 = bigint_nondet_rem!(ctx, x4512, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4513, x6, 13), x4514, 13),
            x4512,
            13
        ),
        73156,
        4,
    )?;
    let x4515: BytePoly_5 = bigint_add!(bigint_mul!(x4514, x0, 5), x5, 5);
    let x4516: BytePoly_6 = bigint_nondet_quot!(ctx, x4515, x6, 6);
    let x4517: BytePoly_4 = bigint_nondet_rem!(ctx, x4515, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4516, x6, 10), x4517, 10),
            x4515,
            10
        ),
        48771,
        4,
    )?;
    let x4518: BytePoly_4 = bigint_add!(x4482, x4482, 4);
    let x4519: BytePoly_4 = bigint_nondet_quot!(ctx, x4518, x6, 4);
    let x4520: BytePoly_4 = bigint_nondet_rem!(ctx, x4518, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x4519, x6, 8), x4520, 8), x4518, 8),
        32515,
        2,
    )?;
    let x4521: BytePoly_4 = bigint_nondet_inv!(ctx, x4520, x6, 4);
    let x4522: BytePoly_8 = bigint_mul!(x4520, x4521, 8);
    let x4523: BytePoly_9 = bigint_nondet_quot!(ctx, x4522, x6, 9);
    let x4524: BytePoly_4 = bigint_nondet_rem!(ctx, x4522, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4523, x6, 13), x4524, 13),
            x4522,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x4524, x3, 4), 34, 1)?;
    let x4525: BytePoly_8 = bigint_mul!(x4517, x4521, 8);
    let x4526: BytePoly_9 = bigint_nondet_quot!(ctx, x4525, x6, 9);
    let x4527: BytePoly_4 = bigint_nondet_rem!(ctx, x4525, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4526, x6, 13), x4527, 13),
            x4525,
            13
        ),
        73156,
        4,
    )?;
    let x4528: BytePoly_8 = bigint_mul!(x4527, x4476, 8);
    let x4529: BytePoly_9 = bigint_nondet_quot!(ctx, x4528, x6, 9);
    let x4530: BytePoly_4 = bigint_nondet_rem!(ctx, x4528, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4529, x6, 13), x4530, 13),
            x4528,
            13
        ),
        73156,
        4,
    )?;
    let x4531: BytePoly_4 = bigint_add!(bigint_sub!(x4482, x4530, 4), x6, 4);
    let x4532: BytePoly_4 = bigint_nondet_quot!(ctx, x4531, x6, 4);
    let x4533: BytePoly_4 = bigint_nondet_rem!(ctx, x4531, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x4532, x6, 8), x4533, 8), x4531, 8),
        32515,
        2,
    )?;
    let x4534: BytePoly_8 = bigint_mul!(x4527, x4527, 8);
    let x4535: BytePoly_9 = bigint_nondet_quot!(ctx, x4534, x6, 9);
    let x4536: BytePoly_4 = bigint_nondet_rem!(ctx, x4534, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4535, x6, 13), x4536, 13),
            x4534,
            13
        ),
        73156,
        4,
    )?;
    let x4537: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x4536, x4476, 4), x6, 4), x4476, 4),
        x6,
        4
    );
    let x4538: BytePoly_4 = bigint_nondet_quot!(ctx, x4537, x6, 4);
    let x4539: BytePoly_4 = bigint_nondet_rem!(ctx, x4537, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x4538, x6, 8), x4539, 8), x4537, 8),
        32515,
        2,
    )?;
    let x4540: BytePoly_8 = bigint_mul!(x4527, x4539, 8);
    let x4541: BytePoly_9 = bigint_nondet_quot!(ctx, x4540, x6, 9);
    let x4542: BytePoly_4 = bigint_nondet_rem!(ctx, x4540, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4541, x6, 13), x4542, 13),
            x4540,
            13
        ),
        73156,
        4,
    )?;
    let x4543: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x4542, x4533, 4), 4), x6, 4);
    let x4544: BytePoly_4 = bigint_nondet_quot!(ctx, x4543, x6, 4);
    let x4545: BytePoly_4 = bigint_nondet_rem!(ctx, x4543, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x4544, x6, 8), x4545, 8), x4543, 8),
        32515,
        2,
    )?;
    let x4546: BytePoly_1 = bigint_nondet_rem!(ctx, x4484, x2, 1);
    let x4547: BytePoly_5 = bigint_nondet_quot!(ctx, x4484, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x4547, x2, 6), x4546, 6), x4484, 6),
        40643,
        4,
    )?;
    let x4548: BytePoly_1 = bigint_sub!(x3, x4546, 1);
    eqz(ctx, &bigint_mul!(x4546, x4548, 2), 8131, 2)?;
    let x4549: BytePoly_4 = bigint_add!(bigint_sub!(x4539, x4509, 4), x6, 4);
    let x4550: BytePoly_4 = bigint_nondet_inv!(ctx, x4549, x6, 4);
    let x4551: BytePoly_8 = bigint_mul!(x4549, x4550, 8);
    let x4552: BytePoly_9 = bigint_nondet_quot!(ctx, x4551, x6, 9);
    let x4553: BytePoly_4 = bigint_nondet_rem!(ctx, x4551, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4552, x6, 13), x4553, 13),
            x4551,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x4553, x1, 4), 34, 1)?;
    let x4554: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x4545, x4511, 4), x6, 4), x4550, 8);
    let x4555: BytePoly_9 = bigint_nondet_quot!(ctx, x4554, x6, 9);
    let x4556: BytePoly_4 = bigint_nondet_rem!(ctx, x4554, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4555, x6, 13), x4556, 13),
            x4554,
            13
        ),
        73156,
        4,
    )?;
    let x4557: BytePoly_8 = bigint_add!(bigint_sub!(x4511, bigint_mul!(x4556, x4509, 8), 8), x6, 8);
    let x4558: BytePoly_8 = bigint_nondet_quot!(ctx, x4557, x6, 8);
    let x4559: BytePoly_4 = bigint_nondet_rem!(ctx, x4557, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4558, x6, 12), x4559, 12),
            x4557,
            12
        ),
        65028,
        4,
    )?;
    let x4560: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x4556, x4556, 8), x4509, 8), x6, 8),
            x4539,
            8
        ),
        x6,
        8
    );
    let x4561: BytePoly_9 = bigint_nondet_quot!(ctx, x4560, x6, 9);
    let x4562: BytePoly_4 = bigint_nondet_rem!(ctx, x4560, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4561, x6, 13), x4562, 13),
            x4560,
            13
        ),
        73156,
        4,
    )?;
    let x4563: BytePoly_8 = bigint_mul!(x4556, x4562, 8);
    let x4564: BytePoly_9 = bigint_nondet_quot!(ctx, x4563, x6, 9);
    let x4565: BytePoly_4 = bigint_nondet_rem!(ctx, x4563, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4564, x6, 13), x4565, 13),
            x4563,
            13
        ),
        73156,
        4,
    )?;
    let x4566: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x4565, x4559, 4), 4), x6, 4);
    let x4567: BytePoly_4 = bigint_nondet_quot!(ctx, x4566, x6, 4);
    let x4568: BytePoly_4 = bigint_nondet_rem!(ctx, x4566, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x4567, x6, 8), x4568, 8), x4566, 8),
        32515,
        2,
    )?;
    let x4569: BytePoly_5 = bigint_add!(
        bigint_mul!(x4562, x4546, 5),
        bigint_mul!(x4509, x4548, 5),
        5
    );
    let x4570: BytePoly_5 = bigint_add!(
        bigint_mul!(x4568, x4546, 5),
        bigint_mul!(x4511, x4548, 5),
        5
    );
    let x4571: BytePoly_6 = bigint_nondet_quot!(ctx, x4569, x6, 6);
    let x4572: BytePoly_4 = bigint_nondet_rem!(ctx, x4569, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4571, x6, 10), x4572, 10),
            x4569,
            10
        ),
        48771,
        4,
    )?;
    let x4573: BytePoly_6 = bigint_nondet_quot!(ctx, x4570, x6, 6);
    let x4574: BytePoly_4 = bigint_nondet_rem!(ctx, x4570, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4573, x6, 10), x4574, 10),
            x4570,
            10
        ),
        48771,
        4,
    )?;
    let x4575: BytePoly_8 = bigint_mul!(x4539, x4539, 8);
    let x4576: BytePoly_9 = bigint_nondet_quot!(ctx, x4575, x6, 9);
    let x4577: BytePoly_4 = bigint_nondet_rem!(ctx, x4575, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4576, x6, 13), x4577, 13),
            x4575,
            13
        ),
        73156,
        4,
    )?;
    let x4578: BytePoly_5 = bigint_add!(bigint_mul!(x4577, x0, 5), x5, 5);
    let x4579: BytePoly_6 = bigint_nondet_quot!(ctx, x4578, x6, 6);
    let x4580: BytePoly_4 = bigint_nondet_rem!(ctx, x4578, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4579, x6, 10), x4580, 10),
            x4578,
            10
        ),
        48771,
        4,
    )?;
    let x4581: BytePoly_4 = bigint_add!(x4545, x4545, 4);
    let x4582: BytePoly_4 = bigint_nondet_quot!(ctx, x4581, x6, 4);
    let x4583: BytePoly_4 = bigint_nondet_rem!(ctx, x4581, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x4582, x6, 8), x4583, 8), x4581, 8),
        32515,
        2,
    )?;
    let x4584: BytePoly_4 = bigint_nondet_inv!(ctx, x4583, x6, 4);
    let x4585: BytePoly_8 = bigint_mul!(x4583, x4584, 8);
    let x4586: BytePoly_9 = bigint_nondet_quot!(ctx, x4585, x6, 9);
    let x4587: BytePoly_4 = bigint_nondet_rem!(ctx, x4585, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4586, x6, 13), x4587, 13),
            x4585,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x4587, x3, 4), 34, 1)?;
    let x4588: BytePoly_8 = bigint_mul!(x4580, x4584, 8);
    let x4589: BytePoly_9 = bigint_nondet_quot!(ctx, x4588, x6, 9);
    let x4590: BytePoly_4 = bigint_nondet_rem!(ctx, x4588, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4589, x6, 13), x4590, 13),
            x4588,
            13
        ),
        73156,
        4,
    )?;
    let x4591: BytePoly_8 = bigint_mul!(x4590, x4539, 8);
    let x4592: BytePoly_9 = bigint_nondet_quot!(ctx, x4591, x6, 9);
    let x4593: BytePoly_4 = bigint_nondet_rem!(ctx, x4591, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4592, x6, 13), x4593, 13),
            x4591,
            13
        ),
        73156,
        4,
    )?;
    let x4594: BytePoly_4 = bigint_add!(bigint_sub!(x4545, x4593, 4), x6, 4);
    let x4595: BytePoly_4 = bigint_nondet_quot!(ctx, x4594, x6, 4);
    let x4596: BytePoly_4 = bigint_nondet_rem!(ctx, x4594, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x4595, x6, 8), x4596, 8), x4594, 8),
        32515,
        2,
    )?;
    let x4597: BytePoly_8 = bigint_mul!(x4590, x4590, 8);
    let x4598: BytePoly_9 = bigint_nondet_quot!(ctx, x4597, x6, 9);
    let x4599: BytePoly_4 = bigint_nondet_rem!(ctx, x4597, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4598, x6, 13), x4599, 13),
            x4597,
            13
        ),
        73156,
        4,
    )?;
    let x4600: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x4599, x4539, 4), x6, 4), x4539, 4),
        x6,
        4
    );
    let x4601: BytePoly_4 = bigint_nondet_quot!(ctx, x4600, x6, 4);
    let x4602: BytePoly_4 = bigint_nondet_rem!(ctx, x4600, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x4601, x6, 8), x4602, 8), x4600, 8),
        32515,
        2,
    )?;
    let x4603: BytePoly_8 = bigint_mul!(x4590, x4602, 8);
    let x4604: BytePoly_9 = bigint_nondet_quot!(ctx, x4603, x6, 9);
    let x4605: BytePoly_4 = bigint_nondet_rem!(ctx, x4603, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4604, x6, 13), x4605, 13),
            x4603,
            13
        ),
        73156,
        4,
    )?;
    let x4606: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x4605, x4596, 4), 4), x6, 4);
    let x4607: BytePoly_4 = bigint_nondet_quot!(ctx, x4606, x6, 4);
    let x4608: BytePoly_4 = bigint_nondet_rem!(ctx, x4606, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x4607, x6, 8), x4608, 8), x4606, 8),
        32515,
        2,
    )?;
    let x4609: BytePoly_1 = bigint_nondet_rem!(ctx, x4547, x2, 1);
    let x4610: BytePoly_5 = bigint_nondet_quot!(ctx, x4547, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x4610, x2, 6), x4609, 6), x4547, 6),
        40643,
        4,
    )?;
    let x4611: BytePoly_1 = bigint_sub!(x3, x4609, 1);
    eqz(ctx, &bigint_mul!(x4609, x4611, 2), 8131, 2)?;
    let x4612: BytePoly_4 = bigint_add!(bigint_sub!(x4602, x4572, 4), x6, 4);
    let x4613: BytePoly_4 = bigint_nondet_inv!(ctx, x4612, x6, 4);
    let x4614: BytePoly_8 = bigint_mul!(x4612, x4613, 8);
    let x4615: BytePoly_9 = bigint_nondet_quot!(ctx, x4614, x6, 9);
    let x4616: BytePoly_4 = bigint_nondet_rem!(ctx, x4614, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4615, x6, 13), x4616, 13),
            x4614,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x4616, x1, 4), 34, 1)?;
    let x4617: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x4608, x4574, 4), x6, 4), x4613, 8);
    let x4618: BytePoly_9 = bigint_nondet_quot!(ctx, x4617, x6, 9);
    let x4619: BytePoly_4 = bigint_nondet_rem!(ctx, x4617, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4618, x6, 13), x4619, 13),
            x4617,
            13
        ),
        73156,
        4,
    )?;
    let x4620: BytePoly_8 = bigint_add!(bigint_sub!(x4574, bigint_mul!(x4619, x4572, 8), 8), x6, 8);
    let x4621: BytePoly_8 = bigint_nondet_quot!(ctx, x4620, x6, 8);
    let x4622: BytePoly_4 = bigint_nondet_rem!(ctx, x4620, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4621, x6, 12), x4622, 12),
            x4620,
            12
        ),
        65028,
        4,
    )?;
    let x4623: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x4619, x4619, 8), x4572, 8), x6, 8),
            x4602,
            8
        ),
        x6,
        8
    );
    let x4624: BytePoly_9 = bigint_nondet_quot!(ctx, x4623, x6, 9);
    let x4625: BytePoly_4 = bigint_nondet_rem!(ctx, x4623, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4624, x6, 13), x4625, 13),
            x4623,
            13
        ),
        73156,
        4,
    )?;
    let x4626: BytePoly_8 = bigint_mul!(x4619, x4625, 8);
    let x4627: BytePoly_9 = bigint_nondet_quot!(ctx, x4626, x6, 9);
    let x4628: BytePoly_4 = bigint_nondet_rem!(ctx, x4626, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4627, x6, 13), x4628, 13),
            x4626,
            13
        ),
        73156,
        4,
    )?;
    let x4629: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x4628, x4622, 4), 4), x6, 4);
    let x4630: BytePoly_4 = bigint_nondet_quot!(ctx, x4629, x6, 4);
    let x4631: BytePoly_4 = bigint_nondet_rem!(ctx, x4629, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x4630, x6, 8), x4631, 8), x4629, 8),
        32515,
        2,
    )?;
    let x4632: BytePoly_5 = bigint_add!(
        bigint_mul!(x4625, x4609, 5),
        bigint_mul!(x4572, x4611, 5),
        5
    );
    let x4633: BytePoly_5 = bigint_add!(
        bigint_mul!(x4631, x4609, 5),
        bigint_mul!(x4574, x4611, 5),
        5
    );
    let x4634: BytePoly_6 = bigint_nondet_quot!(ctx, x4632, x6, 6);
    let x4635: BytePoly_4 = bigint_nondet_rem!(ctx, x4632, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4634, x6, 10), x4635, 10),
            x4632,
            10
        ),
        48771,
        4,
    )?;
    let x4636: BytePoly_6 = bigint_nondet_quot!(ctx, x4633, x6, 6);
    let x4637: BytePoly_4 = bigint_nondet_rem!(ctx, x4633, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4636, x6, 10), x4637, 10),
            x4633,
            10
        ),
        48771,
        4,
    )?;
    let x4638: BytePoly_8 = bigint_mul!(x4602, x4602, 8);
    let x4639: BytePoly_9 = bigint_nondet_quot!(ctx, x4638, x6, 9);
    let x4640: BytePoly_4 = bigint_nondet_rem!(ctx, x4638, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4639, x6, 13), x4640, 13),
            x4638,
            13
        ),
        73156,
        4,
    )?;
    let x4641: BytePoly_5 = bigint_add!(bigint_mul!(x4640, x0, 5), x5, 5);
    let x4642: BytePoly_6 = bigint_nondet_quot!(ctx, x4641, x6, 6);
    let x4643: BytePoly_4 = bigint_nondet_rem!(ctx, x4641, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4642, x6, 10), x4643, 10),
            x4641,
            10
        ),
        48771,
        4,
    )?;
    let x4644: BytePoly_4 = bigint_add!(x4608, x4608, 4);
    let x4645: BytePoly_4 = bigint_nondet_quot!(ctx, x4644, x6, 4);
    let x4646: BytePoly_4 = bigint_nondet_rem!(ctx, x4644, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x4645, x6, 8), x4646, 8), x4644, 8),
        32515,
        2,
    )?;
    let x4647: BytePoly_4 = bigint_nondet_inv!(ctx, x4646, x6, 4);
    let x4648: BytePoly_8 = bigint_mul!(x4646, x4647, 8);
    let x4649: BytePoly_9 = bigint_nondet_quot!(ctx, x4648, x6, 9);
    let x4650: BytePoly_4 = bigint_nondet_rem!(ctx, x4648, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4649, x6, 13), x4650, 13),
            x4648,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x4650, x3, 4), 34, 1)?;
    let x4651: BytePoly_8 = bigint_mul!(x4643, x4647, 8);
    let x4652: BytePoly_9 = bigint_nondet_quot!(ctx, x4651, x6, 9);
    let x4653: BytePoly_4 = bigint_nondet_rem!(ctx, x4651, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4652, x6, 13), x4653, 13),
            x4651,
            13
        ),
        73156,
        4,
    )?;
    let x4654: BytePoly_8 = bigint_mul!(x4653, x4602, 8);
    let x4655: BytePoly_9 = bigint_nondet_quot!(ctx, x4654, x6, 9);
    let x4656: BytePoly_4 = bigint_nondet_rem!(ctx, x4654, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4655, x6, 13), x4656, 13),
            x4654,
            13
        ),
        73156,
        4,
    )?;
    let x4657: BytePoly_4 = bigint_add!(bigint_sub!(x4608, x4656, 4), x6, 4);
    let x4658: BytePoly_4 = bigint_nondet_quot!(ctx, x4657, x6, 4);
    let x4659: BytePoly_4 = bigint_nondet_rem!(ctx, x4657, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x4658, x6, 8), x4659, 8), x4657, 8),
        32515,
        2,
    )?;
    let x4660: BytePoly_8 = bigint_mul!(x4653, x4653, 8);
    let x4661: BytePoly_9 = bigint_nondet_quot!(ctx, x4660, x6, 9);
    let x4662: BytePoly_4 = bigint_nondet_rem!(ctx, x4660, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4661, x6, 13), x4662, 13),
            x4660,
            13
        ),
        73156,
        4,
    )?;
    let x4663: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x4662, x4602, 4), x6, 4), x4602, 4),
        x6,
        4
    );
    let x4664: BytePoly_4 = bigint_nondet_quot!(ctx, x4663, x6, 4);
    let x4665: BytePoly_4 = bigint_nondet_rem!(ctx, x4663, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x4664, x6, 8), x4665, 8), x4663, 8),
        32515,
        2,
    )?;
    let x4666: BytePoly_8 = bigint_mul!(x4653, x4665, 8);
    let x4667: BytePoly_9 = bigint_nondet_quot!(ctx, x4666, x6, 9);
    let x4668: BytePoly_4 = bigint_nondet_rem!(ctx, x4666, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4667, x6, 13), x4668, 13),
            x4666,
            13
        ),
        73156,
        4,
    )?;
    let x4669: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x4668, x4659, 4), 4), x6, 4);
    let x4670: BytePoly_4 = bigint_nondet_quot!(ctx, x4669, x6, 4);
    let x4671: BytePoly_4 = bigint_nondet_rem!(ctx, x4669, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x4670, x6, 8), x4671, 8), x4669, 8),
        32515,
        2,
    )?;
    let x4672: BytePoly_1 = bigint_nondet_rem!(ctx, x4610, x2, 1);
    let x4673: BytePoly_5 = bigint_nondet_quot!(ctx, x4610, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x4673, x2, 6), x4672, 6), x4610, 6),
        40643,
        4,
    )?;
    let x4674: BytePoly_1 = bigint_sub!(x3, x4672, 1);
    eqz(ctx, &bigint_mul!(x4672, x4674, 2), 8131, 2)?;
    let x4675: BytePoly_4 = bigint_add!(bigint_sub!(x4665, x4635, 4), x6, 4);
    let x4676: BytePoly_4 = bigint_nondet_inv!(ctx, x4675, x6, 4);
    let x4677: BytePoly_8 = bigint_mul!(x4675, x4676, 8);
    let x4678: BytePoly_9 = bigint_nondet_quot!(ctx, x4677, x6, 9);
    let x4679: BytePoly_4 = bigint_nondet_rem!(ctx, x4677, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4678, x6, 13), x4679, 13),
            x4677,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x4679, x1, 4), 34, 1)?;
    let x4680: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x4671, x4637, 4), x6, 4), x4676, 8);
    let x4681: BytePoly_9 = bigint_nondet_quot!(ctx, x4680, x6, 9);
    let x4682: BytePoly_4 = bigint_nondet_rem!(ctx, x4680, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4681, x6, 13), x4682, 13),
            x4680,
            13
        ),
        73156,
        4,
    )?;
    let x4683: BytePoly_8 = bigint_add!(bigint_sub!(x4637, bigint_mul!(x4682, x4635, 8), 8), x6, 8);
    let x4684: BytePoly_8 = bigint_nondet_quot!(ctx, x4683, x6, 8);
    let x4685: BytePoly_4 = bigint_nondet_rem!(ctx, x4683, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4684, x6, 12), x4685, 12),
            x4683,
            12
        ),
        65028,
        4,
    )?;
    let x4686: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x4682, x4682, 8), x4635, 8), x6, 8),
            x4665,
            8
        ),
        x6,
        8
    );
    let x4687: BytePoly_9 = bigint_nondet_quot!(ctx, x4686, x6, 9);
    let x4688: BytePoly_4 = bigint_nondet_rem!(ctx, x4686, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4687, x6, 13), x4688, 13),
            x4686,
            13
        ),
        73156,
        4,
    )?;
    let x4689: BytePoly_8 = bigint_mul!(x4682, x4688, 8);
    let x4690: BytePoly_9 = bigint_nondet_quot!(ctx, x4689, x6, 9);
    let x4691: BytePoly_4 = bigint_nondet_rem!(ctx, x4689, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4690, x6, 13), x4691, 13),
            x4689,
            13
        ),
        73156,
        4,
    )?;
    let x4692: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x4691, x4685, 4), 4), x6, 4);
    let x4693: BytePoly_4 = bigint_nondet_quot!(ctx, x4692, x6, 4);
    let x4694: BytePoly_4 = bigint_nondet_rem!(ctx, x4692, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x4693, x6, 8), x4694, 8), x4692, 8),
        32515,
        2,
    )?;
    let x4695: BytePoly_5 = bigint_add!(
        bigint_mul!(x4688, x4672, 5),
        bigint_mul!(x4635, x4674, 5),
        5
    );
    let x4696: BytePoly_5 = bigint_add!(
        bigint_mul!(x4694, x4672, 5),
        bigint_mul!(x4637, x4674, 5),
        5
    );
    let x4697: BytePoly_6 = bigint_nondet_quot!(ctx, x4695, x6, 6);
    let x4698: BytePoly_4 = bigint_nondet_rem!(ctx, x4695, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4697, x6, 10), x4698, 10),
            x4695,
            10
        ),
        48771,
        4,
    )?;
    let x4699: BytePoly_6 = bigint_nondet_quot!(ctx, x4696, x6, 6);
    let x4700: BytePoly_4 = bigint_nondet_rem!(ctx, x4696, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4699, x6, 10), x4700, 10),
            x4696,
            10
        ),
        48771,
        4,
    )?;
    let x4701: BytePoly_8 = bigint_mul!(x4665, x4665, 8);
    let x4702: BytePoly_9 = bigint_nondet_quot!(ctx, x4701, x6, 9);
    let x4703: BytePoly_4 = bigint_nondet_rem!(ctx, x4701, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4702, x6, 13), x4703, 13),
            x4701,
            13
        ),
        73156,
        4,
    )?;
    let x4704: BytePoly_5 = bigint_add!(bigint_mul!(x4703, x0, 5), x5, 5);
    let x4705: BytePoly_6 = bigint_nondet_quot!(ctx, x4704, x6, 6);
    let x4706: BytePoly_4 = bigint_nondet_rem!(ctx, x4704, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4705, x6, 10), x4706, 10),
            x4704,
            10
        ),
        48771,
        4,
    )?;
    let x4707: BytePoly_4 = bigint_add!(x4671, x4671, 4);
    let x4708: BytePoly_4 = bigint_nondet_quot!(ctx, x4707, x6, 4);
    let x4709: BytePoly_4 = bigint_nondet_rem!(ctx, x4707, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x4708, x6, 8), x4709, 8), x4707, 8),
        32515,
        2,
    )?;
    let x4710: BytePoly_4 = bigint_nondet_inv!(ctx, x4709, x6, 4);
    let x4711: BytePoly_8 = bigint_mul!(x4709, x4710, 8);
    let x4712: BytePoly_9 = bigint_nondet_quot!(ctx, x4711, x6, 9);
    let x4713: BytePoly_4 = bigint_nondet_rem!(ctx, x4711, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4712, x6, 13), x4713, 13),
            x4711,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x4713, x3, 4), 34, 1)?;
    let x4714: BytePoly_8 = bigint_mul!(x4706, x4710, 8);
    let x4715: BytePoly_9 = bigint_nondet_quot!(ctx, x4714, x6, 9);
    let x4716: BytePoly_4 = bigint_nondet_rem!(ctx, x4714, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4715, x6, 13), x4716, 13),
            x4714,
            13
        ),
        73156,
        4,
    )?;
    let x4717: BytePoly_8 = bigint_mul!(x4716, x4665, 8);
    let x4718: BytePoly_9 = bigint_nondet_quot!(ctx, x4717, x6, 9);
    let x4719: BytePoly_4 = bigint_nondet_rem!(ctx, x4717, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4718, x6, 13), x4719, 13),
            x4717,
            13
        ),
        73156,
        4,
    )?;
    let x4720: BytePoly_4 = bigint_add!(bigint_sub!(x4671, x4719, 4), x6, 4);
    let x4721: BytePoly_4 = bigint_nondet_quot!(ctx, x4720, x6, 4);
    let x4722: BytePoly_4 = bigint_nondet_rem!(ctx, x4720, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x4721, x6, 8), x4722, 8), x4720, 8),
        32515,
        2,
    )?;
    let x4723: BytePoly_8 = bigint_mul!(x4716, x4716, 8);
    let x4724: BytePoly_9 = bigint_nondet_quot!(ctx, x4723, x6, 9);
    let x4725: BytePoly_4 = bigint_nondet_rem!(ctx, x4723, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4724, x6, 13), x4725, 13),
            x4723,
            13
        ),
        73156,
        4,
    )?;
    let x4726: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x4725, x4665, 4), x6, 4), x4665, 4),
        x6,
        4
    );
    let x4727: BytePoly_4 = bigint_nondet_quot!(ctx, x4726, x6, 4);
    let x4728: BytePoly_4 = bigint_nondet_rem!(ctx, x4726, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x4727, x6, 8), x4728, 8), x4726, 8),
        32515,
        2,
    )?;
    let x4729: BytePoly_8 = bigint_mul!(x4716, x4728, 8);
    let x4730: BytePoly_9 = bigint_nondet_quot!(ctx, x4729, x6, 9);
    let x4731: BytePoly_4 = bigint_nondet_rem!(ctx, x4729, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4730, x6, 13), x4731, 13),
            x4729,
            13
        ),
        73156,
        4,
    )?;
    let x4732: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x4731, x4722, 4), 4), x6, 4);
    let x4733: BytePoly_4 = bigint_nondet_quot!(ctx, x4732, x6, 4);
    let x4734: BytePoly_4 = bigint_nondet_rem!(ctx, x4732, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x4733, x6, 8), x4734, 8), x4732, 8),
        32515,
        2,
    )?;
    let x4735: BytePoly_1 = bigint_nondet_rem!(ctx, x4673, x2, 1);
    let x4736: BytePoly_5 = bigint_nondet_quot!(ctx, x4673, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x4736, x2, 6), x4735, 6), x4673, 6),
        40643,
        4,
    )?;
    let x4737: BytePoly_1 = bigint_sub!(x3, x4735, 1);
    eqz(ctx, &bigint_mul!(x4735, x4737, 2), 8131, 2)?;
    let x4738: BytePoly_4 = bigint_add!(bigint_sub!(x4728, x4698, 4), x6, 4);
    let x4739: BytePoly_4 = bigint_nondet_inv!(ctx, x4738, x6, 4);
    let x4740: BytePoly_8 = bigint_mul!(x4738, x4739, 8);
    let x4741: BytePoly_9 = bigint_nondet_quot!(ctx, x4740, x6, 9);
    let x4742: BytePoly_4 = bigint_nondet_rem!(ctx, x4740, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4741, x6, 13), x4742, 13),
            x4740,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x4742, x1, 4), 34, 1)?;
    let x4743: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x4734, x4700, 4), x6, 4), x4739, 8);
    let x4744: BytePoly_9 = bigint_nondet_quot!(ctx, x4743, x6, 9);
    let x4745: BytePoly_4 = bigint_nondet_rem!(ctx, x4743, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4744, x6, 13), x4745, 13),
            x4743,
            13
        ),
        73156,
        4,
    )?;
    let x4746: BytePoly_8 = bigint_add!(bigint_sub!(x4700, bigint_mul!(x4745, x4698, 8), 8), x6, 8);
    let x4747: BytePoly_8 = bigint_nondet_quot!(ctx, x4746, x6, 8);
    let x4748: BytePoly_4 = bigint_nondet_rem!(ctx, x4746, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4747, x6, 12), x4748, 12),
            x4746,
            12
        ),
        65028,
        4,
    )?;
    let x4749: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x4745, x4745, 8), x4698, 8), x6, 8),
            x4728,
            8
        ),
        x6,
        8
    );
    let x4750: BytePoly_9 = bigint_nondet_quot!(ctx, x4749, x6, 9);
    let x4751: BytePoly_4 = bigint_nondet_rem!(ctx, x4749, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4750, x6, 13), x4751, 13),
            x4749,
            13
        ),
        73156,
        4,
    )?;
    let x4752: BytePoly_8 = bigint_mul!(x4745, x4751, 8);
    let x4753: BytePoly_9 = bigint_nondet_quot!(ctx, x4752, x6, 9);
    let x4754: BytePoly_4 = bigint_nondet_rem!(ctx, x4752, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4753, x6, 13), x4754, 13),
            x4752,
            13
        ),
        73156,
        4,
    )?;
    let x4755: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x4754, x4748, 4), 4), x6, 4);
    let x4756: BytePoly_4 = bigint_nondet_quot!(ctx, x4755, x6, 4);
    let x4757: BytePoly_4 = bigint_nondet_rem!(ctx, x4755, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x4756, x6, 8), x4757, 8), x4755, 8),
        32515,
        2,
    )?;
    let x4758: BytePoly_5 = bigint_add!(
        bigint_mul!(x4751, x4735, 5),
        bigint_mul!(x4698, x4737, 5),
        5
    );
    let x4759: BytePoly_5 = bigint_add!(
        bigint_mul!(x4757, x4735, 5),
        bigint_mul!(x4700, x4737, 5),
        5
    );
    let x4760: BytePoly_6 = bigint_nondet_quot!(ctx, x4758, x6, 6);
    let x4761: BytePoly_4 = bigint_nondet_rem!(ctx, x4758, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4760, x6, 10), x4761, 10),
            x4758,
            10
        ),
        48771,
        4,
    )?;
    let x4762: BytePoly_6 = bigint_nondet_quot!(ctx, x4759, x6, 6);
    let x4763: BytePoly_4 = bigint_nondet_rem!(ctx, x4759, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4762, x6, 10), x4763, 10),
            x4759,
            10
        ),
        48771,
        4,
    )?;
    let x4764: BytePoly_8 = bigint_mul!(x4728, x4728, 8);
    let x4765: BytePoly_9 = bigint_nondet_quot!(ctx, x4764, x6, 9);
    let x4766: BytePoly_4 = bigint_nondet_rem!(ctx, x4764, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4765, x6, 13), x4766, 13),
            x4764,
            13
        ),
        73156,
        4,
    )?;
    let x4767: BytePoly_5 = bigint_add!(bigint_mul!(x4766, x0, 5), x5, 5);
    let x4768: BytePoly_6 = bigint_nondet_quot!(ctx, x4767, x6, 6);
    let x4769: BytePoly_4 = bigint_nondet_rem!(ctx, x4767, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4768, x6, 10), x4769, 10),
            x4767,
            10
        ),
        48771,
        4,
    )?;
    let x4770: BytePoly_4 = bigint_add!(x4734, x4734, 4);
    let x4771: BytePoly_4 = bigint_nondet_quot!(ctx, x4770, x6, 4);
    let x4772: BytePoly_4 = bigint_nondet_rem!(ctx, x4770, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x4771, x6, 8), x4772, 8), x4770, 8),
        32515,
        2,
    )?;
    let x4773: BytePoly_4 = bigint_nondet_inv!(ctx, x4772, x6, 4);
    let x4774: BytePoly_8 = bigint_mul!(x4772, x4773, 8);
    let x4775: BytePoly_9 = bigint_nondet_quot!(ctx, x4774, x6, 9);
    let x4776: BytePoly_4 = bigint_nondet_rem!(ctx, x4774, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4775, x6, 13), x4776, 13),
            x4774,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x4776, x3, 4), 34, 1)?;
    let x4777: BytePoly_8 = bigint_mul!(x4769, x4773, 8);
    let x4778: BytePoly_9 = bigint_nondet_quot!(ctx, x4777, x6, 9);
    let x4779: BytePoly_4 = bigint_nondet_rem!(ctx, x4777, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4778, x6, 13), x4779, 13),
            x4777,
            13
        ),
        73156,
        4,
    )?;
    let x4780: BytePoly_8 = bigint_mul!(x4779, x4728, 8);
    let x4781: BytePoly_9 = bigint_nondet_quot!(ctx, x4780, x6, 9);
    let x4782: BytePoly_4 = bigint_nondet_rem!(ctx, x4780, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4781, x6, 13), x4782, 13),
            x4780,
            13
        ),
        73156,
        4,
    )?;
    let x4783: BytePoly_4 = bigint_add!(bigint_sub!(x4734, x4782, 4), x6, 4);
    let x4784: BytePoly_4 = bigint_nondet_quot!(ctx, x4783, x6, 4);
    let x4785: BytePoly_4 = bigint_nondet_rem!(ctx, x4783, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x4784, x6, 8), x4785, 8), x4783, 8),
        32515,
        2,
    )?;
    let x4786: BytePoly_8 = bigint_mul!(x4779, x4779, 8);
    let x4787: BytePoly_9 = bigint_nondet_quot!(ctx, x4786, x6, 9);
    let x4788: BytePoly_4 = bigint_nondet_rem!(ctx, x4786, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4787, x6, 13), x4788, 13),
            x4786,
            13
        ),
        73156,
        4,
    )?;
    let x4789: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x4788, x4728, 4), x6, 4), x4728, 4),
        x6,
        4
    );
    let x4790: BytePoly_4 = bigint_nondet_quot!(ctx, x4789, x6, 4);
    let x4791: BytePoly_4 = bigint_nondet_rem!(ctx, x4789, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x4790, x6, 8), x4791, 8), x4789, 8),
        32515,
        2,
    )?;
    let x4792: BytePoly_8 = bigint_mul!(x4779, x4791, 8);
    let x4793: BytePoly_9 = bigint_nondet_quot!(ctx, x4792, x6, 9);
    let x4794: BytePoly_4 = bigint_nondet_rem!(ctx, x4792, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4793, x6, 13), x4794, 13),
            x4792,
            13
        ),
        73156,
        4,
    )?;
    let x4795: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x4794, x4785, 4), 4), x6, 4);
    let x4796: BytePoly_4 = bigint_nondet_quot!(ctx, x4795, x6, 4);
    let x4797: BytePoly_4 = bigint_nondet_rem!(ctx, x4795, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x4796, x6, 8), x4797, 8), x4795, 8),
        32515,
        2,
    )?;
    let x4798: BytePoly_1 = bigint_nondet_rem!(ctx, x4736, x2, 1);
    let x4799: BytePoly_5 = bigint_nondet_quot!(ctx, x4736, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x4799, x2, 6), x4798, 6), x4736, 6),
        40643,
        4,
    )?;
    let x4800: BytePoly_1 = bigint_sub!(x3, x4798, 1);
    eqz(ctx, &bigint_mul!(x4798, x4800, 2), 8131, 2)?;
    let x4801: BytePoly_4 = bigint_add!(bigint_sub!(x4791, x4761, 4), x6, 4);
    let x4802: BytePoly_4 = bigint_nondet_inv!(ctx, x4801, x6, 4);
    let x4803: BytePoly_8 = bigint_mul!(x4801, x4802, 8);
    let x4804: BytePoly_9 = bigint_nondet_quot!(ctx, x4803, x6, 9);
    let x4805: BytePoly_4 = bigint_nondet_rem!(ctx, x4803, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4804, x6, 13), x4805, 13),
            x4803,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x4805, x1, 4), 34, 1)?;
    let x4806: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x4797, x4763, 4), x6, 4), x4802, 8);
    let x4807: BytePoly_9 = bigint_nondet_quot!(ctx, x4806, x6, 9);
    let x4808: BytePoly_4 = bigint_nondet_rem!(ctx, x4806, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4807, x6, 13), x4808, 13),
            x4806,
            13
        ),
        73156,
        4,
    )?;
    let x4809: BytePoly_8 = bigint_add!(bigint_sub!(x4763, bigint_mul!(x4808, x4761, 8), 8), x6, 8);
    let x4810: BytePoly_8 = bigint_nondet_quot!(ctx, x4809, x6, 8);
    let x4811: BytePoly_4 = bigint_nondet_rem!(ctx, x4809, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4810, x6, 12), x4811, 12),
            x4809,
            12
        ),
        65028,
        4,
    )?;
    let x4812: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x4808, x4808, 8), x4761, 8), x6, 8),
            x4791,
            8
        ),
        x6,
        8
    );
    let x4813: BytePoly_9 = bigint_nondet_quot!(ctx, x4812, x6, 9);
    let x4814: BytePoly_4 = bigint_nondet_rem!(ctx, x4812, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4813, x6, 13), x4814, 13),
            x4812,
            13
        ),
        73156,
        4,
    )?;
    let x4815: BytePoly_8 = bigint_mul!(x4808, x4814, 8);
    let x4816: BytePoly_9 = bigint_nondet_quot!(ctx, x4815, x6, 9);
    let x4817: BytePoly_4 = bigint_nondet_rem!(ctx, x4815, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4816, x6, 13), x4817, 13),
            x4815,
            13
        ),
        73156,
        4,
    )?;
    let x4818: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x4817, x4811, 4), 4), x6, 4);
    let x4819: BytePoly_4 = bigint_nondet_quot!(ctx, x4818, x6, 4);
    let x4820: BytePoly_4 = bigint_nondet_rem!(ctx, x4818, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x4819, x6, 8), x4820, 8), x4818, 8),
        32515,
        2,
    )?;
    let x4821: BytePoly_5 = bigint_add!(
        bigint_mul!(x4814, x4798, 5),
        bigint_mul!(x4761, x4800, 5),
        5
    );
    let x4822: BytePoly_5 = bigint_add!(
        bigint_mul!(x4820, x4798, 5),
        bigint_mul!(x4763, x4800, 5),
        5
    );
    let x4823: BytePoly_6 = bigint_nondet_quot!(ctx, x4821, x6, 6);
    let x4824: BytePoly_4 = bigint_nondet_rem!(ctx, x4821, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4823, x6, 10), x4824, 10),
            x4821,
            10
        ),
        48771,
        4,
    )?;
    let x4825: BytePoly_6 = bigint_nondet_quot!(ctx, x4822, x6, 6);
    let x4826: BytePoly_4 = bigint_nondet_rem!(ctx, x4822, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4825, x6, 10), x4826, 10),
            x4822,
            10
        ),
        48771,
        4,
    )?;
    let x4827: BytePoly_8 = bigint_mul!(x4791, x4791, 8);
    let x4828: BytePoly_9 = bigint_nondet_quot!(ctx, x4827, x6, 9);
    let x4829: BytePoly_4 = bigint_nondet_rem!(ctx, x4827, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4828, x6, 13), x4829, 13),
            x4827,
            13
        ),
        73156,
        4,
    )?;
    let x4830: BytePoly_5 = bigint_add!(bigint_mul!(x4829, x0, 5), x5, 5);
    let x4831: BytePoly_6 = bigint_nondet_quot!(ctx, x4830, x6, 6);
    let x4832: BytePoly_4 = bigint_nondet_rem!(ctx, x4830, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4831, x6, 10), x4832, 10),
            x4830,
            10
        ),
        48771,
        4,
    )?;
    let x4833: BytePoly_4 = bigint_add!(x4797, x4797, 4);
    let x4834: BytePoly_4 = bigint_nondet_quot!(ctx, x4833, x6, 4);
    let x4835: BytePoly_4 = bigint_nondet_rem!(ctx, x4833, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x4834, x6, 8), x4835, 8), x4833, 8),
        32515,
        2,
    )?;
    let x4836: BytePoly_4 = bigint_nondet_inv!(ctx, x4835, x6, 4);
    let x4837: BytePoly_8 = bigint_mul!(x4835, x4836, 8);
    let x4838: BytePoly_9 = bigint_nondet_quot!(ctx, x4837, x6, 9);
    let x4839: BytePoly_4 = bigint_nondet_rem!(ctx, x4837, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4838, x6, 13), x4839, 13),
            x4837,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x4839, x3, 4), 34, 1)?;
    let x4840: BytePoly_8 = bigint_mul!(x4832, x4836, 8);
    let x4841: BytePoly_9 = bigint_nondet_quot!(ctx, x4840, x6, 9);
    let x4842: BytePoly_4 = bigint_nondet_rem!(ctx, x4840, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4841, x6, 13), x4842, 13),
            x4840,
            13
        ),
        73156,
        4,
    )?;
    let x4843: BytePoly_8 = bigint_mul!(x4842, x4791, 8);
    let x4844: BytePoly_9 = bigint_nondet_quot!(ctx, x4843, x6, 9);
    let x4845: BytePoly_4 = bigint_nondet_rem!(ctx, x4843, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4844, x6, 13), x4845, 13),
            x4843,
            13
        ),
        73156,
        4,
    )?;
    let x4846: BytePoly_4 = bigint_add!(bigint_sub!(x4797, x4845, 4), x6, 4);
    let x4847: BytePoly_4 = bigint_nondet_quot!(ctx, x4846, x6, 4);
    let x4848: BytePoly_4 = bigint_nondet_rem!(ctx, x4846, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x4847, x6, 8), x4848, 8), x4846, 8),
        32515,
        2,
    )?;
    let x4849: BytePoly_8 = bigint_mul!(x4842, x4842, 8);
    let x4850: BytePoly_9 = bigint_nondet_quot!(ctx, x4849, x6, 9);
    let x4851: BytePoly_4 = bigint_nondet_rem!(ctx, x4849, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4850, x6, 13), x4851, 13),
            x4849,
            13
        ),
        73156,
        4,
    )?;
    let x4852: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x4851, x4791, 4), x6, 4), x4791, 4),
        x6,
        4
    );
    let x4853: BytePoly_4 = bigint_nondet_quot!(ctx, x4852, x6, 4);
    let x4854: BytePoly_4 = bigint_nondet_rem!(ctx, x4852, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x4853, x6, 8), x4854, 8), x4852, 8),
        32515,
        2,
    )?;
    let x4855: BytePoly_8 = bigint_mul!(x4842, x4854, 8);
    let x4856: BytePoly_9 = bigint_nondet_quot!(ctx, x4855, x6, 9);
    let x4857: BytePoly_4 = bigint_nondet_rem!(ctx, x4855, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4856, x6, 13), x4857, 13),
            x4855,
            13
        ),
        73156,
        4,
    )?;
    let x4858: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x4857, x4848, 4), 4), x6, 4);
    let x4859: BytePoly_4 = bigint_nondet_quot!(ctx, x4858, x6, 4);
    let x4860: BytePoly_4 = bigint_nondet_rem!(ctx, x4858, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x4859, x6, 8), x4860, 8), x4858, 8),
        32515,
        2,
    )?;
    let x4861: BytePoly_1 = bigint_nondet_rem!(ctx, x4799, x2, 1);
    let x4862: BytePoly_5 = bigint_nondet_quot!(ctx, x4799, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x4862, x2, 6), x4861, 6), x4799, 6),
        40643,
        4,
    )?;
    let x4863: BytePoly_1 = bigint_sub!(x3, x4861, 1);
    eqz(ctx, &bigint_mul!(x4861, x4863, 2), 8131, 2)?;
    let x4864: BytePoly_4 = bigint_add!(bigint_sub!(x4854, x4824, 4), x6, 4);
    let x4865: BytePoly_4 = bigint_nondet_inv!(ctx, x4864, x6, 4);
    let x4866: BytePoly_8 = bigint_mul!(x4864, x4865, 8);
    let x4867: BytePoly_9 = bigint_nondet_quot!(ctx, x4866, x6, 9);
    let x4868: BytePoly_4 = bigint_nondet_rem!(ctx, x4866, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4867, x6, 13), x4868, 13),
            x4866,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x4868, x1, 4), 34, 1)?;
    let x4869: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x4860, x4826, 4), x6, 4), x4865, 8);
    let x4870: BytePoly_9 = bigint_nondet_quot!(ctx, x4869, x6, 9);
    let x4871: BytePoly_4 = bigint_nondet_rem!(ctx, x4869, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4870, x6, 13), x4871, 13),
            x4869,
            13
        ),
        73156,
        4,
    )?;
    let x4872: BytePoly_8 = bigint_add!(bigint_sub!(x4826, bigint_mul!(x4871, x4824, 8), 8), x6, 8);
    let x4873: BytePoly_8 = bigint_nondet_quot!(ctx, x4872, x6, 8);
    let x4874: BytePoly_4 = bigint_nondet_rem!(ctx, x4872, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4873, x6, 12), x4874, 12),
            x4872,
            12
        ),
        65028,
        4,
    )?;
    let x4875: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x4871, x4871, 8), x4824, 8), x6, 8),
            x4854,
            8
        ),
        x6,
        8
    );
    let x4876: BytePoly_9 = bigint_nondet_quot!(ctx, x4875, x6, 9);
    let x4877: BytePoly_4 = bigint_nondet_rem!(ctx, x4875, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4876, x6, 13), x4877, 13),
            x4875,
            13
        ),
        73156,
        4,
    )?;
    let x4878: BytePoly_8 = bigint_mul!(x4871, x4877, 8);
    let x4879: BytePoly_9 = bigint_nondet_quot!(ctx, x4878, x6, 9);
    let x4880: BytePoly_4 = bigint_nondet_rem!(ctx, x4878, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4879, x6, 13), x4880, 13),
            x4878,
            13
        ),
        73156,
        4,
    )?;
    let x4881: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x4880, x4874, 4), 4), x6, 4);
    let x4882: BytePoly_4 = bigint_nondet_quot!(ctx, x4881, x6, 4);
    let x4883: BytePoly_4 = bigint_nondet_rem!(ctx, x4881, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x4882, x6, 8), x4883, 8), x4881, 8),
        32515,
        2,
    )?;
    let x4884: BytePoly_5 = bigint_add!(
        bigint_mul!(x4877, x4861, 5),
        bigint_mul!(x4824, x4863, 5),
        5
    );
    let x4885: BytePoly_5 = bigint_add!(
        bigint_mul!(x4883, x4861, 5),
        bigint_mul!(x4826, x4863, 5),
        5
    );
    let x4886: BytePoly_6 = bigint_nondet_quot!(ctx, x4884, x6, 6);
    let x4887: BytePoly_4 = bigint_nondet_rem!(ctx, x4884, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4886, x6, 10), x4887, 10),
            x4884,
            10
        ),
        48771,
        4,
    )?;
    let x4888: BytePoly_6 = bigint_nondet_quot!(ctx, x4885, x6, 6);
    let x4889: BytePoly_4 = bigint_nondet_rem!(ctx, x4885, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4888, x6, 10), x4889, 10),
            x4885,
            10
        ),
        48771,
        4,
    )?;
    let x4890: BytePoly_8 = bigint_mul!(x4854, x4854, 8);
    let x4891: BytePoly_9 = bigint_nondet_quot!(ctx, x4890, x6, 9);
    let x4892: BytePoly_4 = bigint_nondet_rem!(ctx, x4890, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4891, x6, 13), x4892, 13),
            x4890,
            13
        ),
        73156,
        4,
    )?;
    let x4893: BytePoly_5 = bigint_add!(bigint_mul!(x4892, x0, 5), x5, 5);
    let x4894: BytePoly_6 = bigint_nondet_quot!(ctx, x4893, x6, 6);
    let x4895: BytePoly_4 = bigint_nondet_rem!(ctx, x4893, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4894, x6, 10), x4895, 10),
            x4893,
            10
        ),
        48771,
        4,
    )?;
    let x4896: BytePoly_4 = bigint_add!(x4860, x4860, 4);
    let x4897: BytePoly_4 = bigint_nondet_quot!(ctx, x4896, x6, 4);
    let x4898: BytePoly_4 = bigint_nondet_rem!(ctx, x4896, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x4897, x6, 8), x4898, 8), x4896, 8),
        32515,
        2,
    )?;
    let x4899: BytePoly_4 = bigint_nondet_inv!(ctx, x4898, x6, 4);
    let x4900: BytePoly_8 = bigint_mul!(x4898, x4899, 8);
    let x4901: BytePoly_9 = bigint_nondet_quot!(ctx, x4900, x6, 9);
    let x4902: BytePoly_4 = bigint_nondet_rem!(ctx, x4900, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4901, x6, 13), x4902, 13),
            x4900,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x4902, x3, 4), 34, 1)?;
    let x4903: BytePoly_8 = bigint_mul!(x4895, x4899, 8);
    let x4904: BytePoly_9 = bigint_nondet_quot!(ctx, x4903, x6, 9);
    let x4905: BytePoly_4 = bigint_nondet_rem!(ctx, x4903, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4904, x6, 13), x4905, 13),
            x4903,
            13
        ),
        73156,
        4,
    )?;
    let x4906: BytePoly_8 = bigint_mul!(x4905, x4854, 8);
    let x4907: BytePoly_9 = bigint_nondet_quot!(ctx, x4906, x6, 9);
    let x4908: BytePoly_4 = bigint_nondet_rem!(ctx, x4906, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4907, x6, 13), x4908, 13),
            x4906,
            13
        ),
        73156,
        4,
    )?;
    let x4909: BytePoly_4 = bigint_add!(bigint_sub!(x4860, x4908, 4), x6, 4);
    let x4910: BytePoly_4 = bigint_nondet_quot!(ctx, x4909, x6, 4);
    let x4911: BytePoly_4 = bigint_nondet_rem!(ctx, x4909, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x4910, x6, 8), x4911, 8), x4909, 8),
        32515,
        2,
    )?;
    let x4912: BytePoly_8 = bigint_mul!(x4905, x4905, 8);
    let x4913: BytePoly_9 = bigint_nondet_quot!(ctx, x4912, x6, 9);
    let x4914: BytePoly_4 = bigint_nondet_rem!(ctx, x4912, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4913, x6, 13), x4914, 13),
            x4912,
            13
        ),
        73156,
        4,
    )?;
    let x4915: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x4914, x4854, 4), x6, 4), x4854, 4),
        x6,
        4
    );
    let x4916: BytePoly_4 = bigint_nondet_quot!(ctx, x4915, x6, 4);
    let x4917: BytePoly_4 = bigint_nondet_rem!(ctx, x4915, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x4916, x6, 8), x4917, 8), x4915, 8),
        32515,
        2,
    )?;
    let x4918: BytePoly_8 = bigint_mul!(x4905, x4917, 8);
    let x4919: BytePoly_9 = bigint_nondet_quot!(ctx, x4918, x6, 9);
    let x4920: BytePoly_4 = bigint_nondet_rem!(ctx, x4918, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4919, x6, 13), x4920, 13),
            x4918,
            13
        ),
        73156,
        4,
    )?;
    let x4921: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x4920, x4911, 4), 4), x6, 4);
    let x4922: BytePoly_4 = bigint_nondet_quot!(ctx, x4921, x6, 4);
    let x4923: BytePoly_4 = bigint_nondet_rem!(ctx, x4921, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x4922, x6, 8), x4923, 8), x4921, 8),
        32515,
        2,
    )?;
    let x4924: BytePoly_1 = bigint_nondet_rem!(ctx, x4862, x2, 1);
    let x4925: BytePoly_5 = bigint_nondet_quot!(ctx, x4862, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x4925, x2, 6), x4924, 6), x4862, 6),
        40643,
        4,
    )?;
    let x4926: BytePoly_1 = bigint_sub!(x3, x4924, 1);
    eqz(ctx, &bigint_mul!(x4924, x4926, 2), 8131, 2)?;
    let x4927: BytePoly_4 = bigint_add!(bigint_sub!(x4917, x4887, 4), x6, 4);
    let x4928: BytePoly_4 = bigint_nondet_inv!(ctx, x4927, x6, 4);
    let x4929: BytePoly_8 = bigint_mul!(x4927, x4928, 8);
    let x4930: BytePoly_9 = bigint_nondet_quot!(ctx, x4929, x6, 9);
    let x4931: BytePoly_4 = bigint_nondet_rem!(ctx, x4929, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4930, x6, 13), x4931, 13),
            x4929,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x4931, x1, 4), 34, 1)?;
    let x4932: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x4923, x4889, 4), x6, 4), x4928, 8);
    let x4933: BytePoly_9 = bigint_nondet_quot!(ctx, x4932, x6, 9);
    let x4934: BytePoly_4 = bigint_nondet_rem!(ctx, x4932, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4933, x6, 13), x4934, 13),
            x4932,
            13
        ),
        73156,
        4,
    )?;
    let x4935: BytePoly_8 = bigint_add!(bigint_sub!(x4889, bigint_mul!(x4934, x4887, 8), 8), x6, 8);
    let x4936: BytePoly_8 = bigint_nondet_quot!(ctx, x4935, x6, 8);
    let x4937: BytePoly_4 = bigint_nondet_rem!(ctx, x4935, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4936, x6, 12), x4937, 12),
            x4935,
            12
        ),
        65028,
        4,
    )?;
    let x4938: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x4934, x4934, 8), x4887, 8), x6, 8),
            x4917,
            8
        ),
        x6,
        8
    );
    let x4939: BytePoly_9 = bigint_nondet_quot!(ctx, x4938, x6, 9);
    let x4940: BytePoly_4 = bigint_nondet_rem!(ctx, x4938, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4939, x6, 13), x4940, 13),
            x4938,
            13
        ),
        73156,
        4,
    )?;
    let x4941: BytePoly_8 = bigint_mul!(x4934, x4940, 8);
    let x4942: BytePoly_9 = bigint_nondet_quot!(ctx, x4941, x6, 9);
    let x4943: BytePoly_4 = bigint_nondet_rem!(ctx, x4941, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4942, x6, 13), x4943, 13),
            x4941,
            13
        ),
        73156,
        4,
    )?;
    let x4944: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x4943, x4937, 4), 4), x6, 4);
    let x4945: BytePoly_4 = bigint_nondet_quot!(ctx, x4944, x6, 4);
    let x4946: BytePoly_4 = bigint_nondet_rem!(ctx, x4944, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x4945, x6, 8), x4946, 8), x4944, 8),
        32515,
        2,
    )?;
    let x4947: BytePoly_5 = bigint_add!(
        bigint_mul!(x4940, x4924, 5),
        bigint_mul!(x4887, x4926, 5),
        5
    );
    let x4948: BytePoly_5 = bigint_add!(
        bigint_mul!(x4946, x4924, 5),
        bigint_mul!(x4889, x4926, 5),
        5
    );
    let x4949: BytePoly_6 = bigint_nondet_quot!(ctx, x4947, x6, 6);
    let x4950: BytePoly_4 = bigint_nondet_rem!(ctx, x4947, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4949, x6, 10), x4950, 10),
            x4947,
            10
        ),
        48771,
        4,
    )?;
    let x4951: BytePoly_6 = bigint_nondet_quot!(ctx, x4948, x6, 6);
    let x4952: BytePoly_4 = bigint_nondet_rem!(ctx, x4948, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4951, x6, 10), x4952, 10),
            x4948,
            10
        ),
        48771,
        4,
    )?;
    let x4953: BytePoly_8 = bigint_mul!(x4917, x4917, 8);
    let x4954: BytePoly_9 = bigint_nondet_quot!(ctx, x4953, x6, 9);
    let x4955: BytePoly_4 = bigint_nondet_rem!(ctx, x4953, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4954, x6, 13), x4955, 13),
            x4953,
            13
        ),
        73156,
        4,
    )?;
    let x4956: BytePoly_5 = bigint_add!(bigint_mul!(x4955, x0, 5), x5, 5);
    let x4957: BytePoly_6 = bigint_nondet_quot!(ctx, x4956, x6, 6);
    let x4958: BytePoly_4 = bigint_nondet_rem!(ctx, x4956, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4957, x6, 10), x4958, 10),
            x4956,
            10
        ),
        48771,
        4,
    )?;
    let x4959: BytePoly_4 = bigint_add!(x4923, x4923, 4);
    let x4960: BytePoly_4 = bigint_nondet_quot!(ctx, x4959, x6, 4);
    let x4961: BytePoly_4 = bigint_nondet_rem!(ctx, x4959, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x4960, x6, 8), x4961, 8), x4959, 8),
        32515,
        2,
    )?;
    let x4962: BytePoly_4 = bigint_nondet_inv!(ctx, x4961, x6, 4);
    let x4963: BytePoly_8 = bigint_mul!(x4961, x4962, 8);
    let x4964: BytePoly_9 = bigint_nondet_quot!(ctx, x4963, x6, 9);
    let x4965: BytePoly_4 = bigint_nondet_rem!(ctx, x4963, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4964, x6, 13), x4965, 13),
            x4963,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x4965, x3, 4), 34, 1)?;
    let x4966: BytePoly_8 = bigint_mul!(x4958, x4962, 8);
    let x4967: BytePoly_9 = bigint_nondet_quot!(ctx, x4966, x6, 9);
    let x4968: BytePoly_4 = bigint_nondet_rem!(ctx, x4966, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4967, x6, 13), x4968, 13),
            x4966,
            13
        ),
        73156,
        4,
    )?;
    let x4969: BytePoly_8 = bigint_mul!(x4968, x4917, 8);
    let x4970: BytePoly_9 = bigint_nondet_quot!(ctx, x4969, x6, 9);
    let x4971: BytePoly_4 = bigint_nondet_rem!(ctx, x4969, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4970, x6, 13), x4971, 13),
            x4969,
            13
        ),
        73156,
        4,
    )?;
    let x4972: BytePoly_4 = bigint_add!(bigint_sub!(x4923, x4971, 4), x6, 4);
    let x4973: BytePoly_4 = bigint_nondet_quot!(ctx, x4972, x6, 4);
    let x4974: BytePoly_4 = bigint_nondet_rem!(ctx, x4972, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x4973, x6, 8), x4974, 8), x4972, 8),
        32515,
        2,
    )?;
    let x4975: BytePoly_8 = bigint_mul!(x4968, x4968, 8);
    let x4976: BytePoly_9 = bigint_nondet_quot!(ctx, x4975, x6, 9);
    let x4977: BytePoly_4 = bigint_nondet_rem!(ctx, x4975, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4976, x6, 13), x4977, 13),
            x4975,
            13
        ),
        73156,
        4,
    )?;
    let x4978: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x4977, x4917, 4), x6, 4), x4917, 4),
        x6,
        4
    );
    let x4979: BytePoly_4 = bigint_nondet_quot!(ctx, x4978, x6, 4);
    let x4980: BytePoly_4 = bigint_nondet_rem!(ctx, x4978, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x4979, x6, 8), x4980, 8), x4978, 8),
        32515,
        2,
    )?;
    let x4981: BytePoly_8 = bigint_mul!(x4968, x4980, 8);
    let x4982: BytePoly_9 = bigint_nondet_quot!(ctx, x4981, x6, 9);
    let x4983: BytePoly_4 = bigint_nondet_rem!(ctx, x4981, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4982, x6, 13), x4983, 13),
            x4981,
            13
        ),
        73156,
        4,
    )?;
    let x4984: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x4983, x4974, 4), 4), x6, 4);
    let x4985: BytePoly_4 = bigint_nondet_quot!(ctx, x4984, x6, 4);
    let x4986: BytePoly_4 = bigint_nondet_rem!(ctx, x4984, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x4985, x6, 8), x4986, 8), x4984, 8),
        32515,
        2,
    )?;
    let x4987: BytePoly_1 = bigint_nondet_rem!(ctx, x4925, x2, 1);
    let x4988: BytePoly_5 = bigint_nondet_quot!(ctx, x4925, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x4988, x2, 6), x4987, 6), x4925, 6),
        40643,
        4,
    )?;
    let x4989: BytePoly_1 = bigint_sub!(x3, x4987, 1);
    eqz(ctx, &bigint_mul!(x4987, x4989, 2), 8131, 2)?;
    let x4990: BytePoly_4 = bigint_add!(bigint_sub!(x4980, x4950, 4), x6, 4);
    let x4991: BytePoly_4 = bigint_nondet_inv!(ctx, x4990, x6, 4);
    let x4992: BytePoly_8 = bigint_mul!(x4990, x4991, 8);
    let x4993: BytePoly_9 = bigint_nondet_quot!(ctx, x4992, x6, 9);
    let x4994: BytePoly_4 = bigint_nondet_rem!(ctx, x4992, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4993, x6, 13), x4994, 13),
            x4992,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x4994, x1, 4), 34, 1)?;
    let x4995: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x4986, x4952, 4), x6, 4), x4991, 8);
    let x4996: BytePoly_9 = bigint_nondet_quot!(ctx, x4995, x6, 9);
    let x4997: BytePoly_4 = bigint_nondet_rem!(ctx, x4995, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4996, x6, 13), x4997, 13),
            x4995,
            13
        ),
        73156,
        4,
    )?;
    let x4998: BytePoly_8 = bigint_add!(bigint_sub!(x4952, bigint_mul!(x4997, x4950, 8), 8), x6, 8);
    let x4999: BytePoly_8 = bigint_nondet_quot!(ctx, x4998, x6, 8);
    let x5000: BytePoly_4 = bigint_nondet_rem!(ctx, x4998, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4999, x6, 12), x5000, 12),
            x4998,
            12
        ),
        65028,
        4,
    )?;
    let x5001: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x4997, x4997, 8), x4950, 8), x6, 8),
            x4980,
            8
        ),
        x6,
        8
    );
    let x5002: BytePoly_9 = bigint_nondet_quot!(ctx, x5001, x6, 9);
    let x5003: BytePoly_4 = bigint_nondet_rem!(ctx, x5001, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5002, x6, 13), x5003, 13),
            x5001,
            13
        ),
        73156,
        4,
    )?;
    let x5004: BytePoly_8 = bigint_mul!(x4997, x5003, 8);
    let x5005: BytePoly_9 = bigint_nondet_quot!(ctx, x5004, x6, 9);
    let x5006: BytePoly_4 = bigint_nondet_rem!(ctx, x5004, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5005, x6, 13), x5006, 13),
            x5004,
            13
        ),
        73156,
        4,
    )?;
    let x5007: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x5006, x5000, 4), 4), x6, 4);
    let x5008: BytePoly_4 = bigint_nondet_quot!(ctx, x5007, x6, 4);
    let x5009: BytePoly_4 = bigint_nondet_rem!(ctx, x5007, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x5008, x6, 8), x5009, 8), x5007, 8),
        32515,
        2,
    )?;
    let x5010: BytePoly_5 = bigint_add!(
        bigint_mul!(x5003, x4987, 5),
        bigint_mul!(x4950, x4989, 5),
        5
    );
    let x5011: BytePoly_5 = bigint_add!(
        bigint_mul!(x5009, x4987, 5),
        bigint_mul!(x4952, x4989, 5),
        5
    );
    let x5012: BytePoly_6 = bigint_nondet_quot!(ctx, x5010, x6, 6);
    let x5013: BytePoly_4 = bigint_nondet_rem!(ctx, x5010, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5012, x6, 10), x5013, 10),
            x5010,
            10
        ),
        48771,
        4,
    )?;
    let x5014: BytePoly_6 = bigint_nondet_quot!(ctx, x5011, x6, 6);
    let x5015: BytePoly_4 = bigint_nondet_rem!(ctx, x5011, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5014, x6, 10), x5015, 10),
            x5011,
            10
        ),
        48771,
        4,
    )?;
    let x5016: BytePoly_8 = bigint_mul!(x4980, x4980, 8);
    let x5017: BytePoly_9 = bigint_nondet_quot!(ctx, x5016, x6, 9);
    let x5018: BytePoly_4 = bigint_nondet_rem!(ctx, x5016, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5017, x6, 13), x5018, 13),
            x5016,
            13
        ),
        73156,
        4,
    )?;
    let x5019: BytePoly_5 = bigint_add!(bigint_mul!(x5018, x0, 5), x5, 5);
    let x5020: BytePoly_6 = bigint_nondet_quot!(ctx, x5019, x6, 6);
    let x5021: BytePoly_4 = bigint_nondet_rem!(ctx, x5019, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5020, x6, 10), x5021, 10),
            x5019,
            10
        ),
        48771,
        4,
    )?;
    let x5022: BytePoly_4 = bigint_add!(x4986, x4986, 4);
    let x5023: BytePoly_4 = bigint_nondet_quot!(ctx, x5022, x6, 4);
    let x5024: BytePoly_4 = bigint_nondet_rem!(ctx, x5022, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x5023, x6, 8), x5024, 8), x5022, 8),
        32515,
        2,
    )?;
    let x5025: BytePoly_4 = bigint_nondet_inv!(ctx, x5024, x6, 4);
    let x5026: BytePoly_8 = bigint_mul!(x5024, x5025, 8);
    let x5027: BytePoly_9 = bigint_nondet_quot!(ctx, x5026, x6, 9);
    let x5028: BytePoly_4 = bigint_nondet_rem!(ctx, x5026, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5027, x6, 13), x5028, 13),
            x5026,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x5028, x3, 4), 34, 1)?;
    let x5029: BytePoly_8 = bigint_mul!(x5021, x5025, 8);
    let x5030: BytePoly_9 = bigint_nondet_quot!(ctx, x5029, x6, 9);
    let x5031: BytePoly_4 = bigint_nondet_rem!(ctx, x5029, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5030, x6, 13), x5031, 13),
            x5029,
            13
        ),
        73156,
        4,
    )?;
    let x5032: BytePoly_8 = bigint_mul!(x5031, x4980, 8);
    let x5033: BytePoly_9 = bigint_nondet_quot!(ctx, x5032, x6, 9);
    let x5034: BytePoly_4 = bigint_nondet_rem!(ctx, x5032, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5033, x6, 13), x5034, 13),
            x5032,
            13
        ),
        73156,
        4,
    )?;
    let x5035: BytePoly_4 = bigint_add!(bigint_sub!(x4986, x5034, 4), x6, 4);
    let x5036: BytePoly_4 = bigint_nondet_quot!(ctx, x5035, x6, 4);
    let x5037: BytePoly_4 = bigint_nondet_rem!(ctx, x5035, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x5036, x6, 8), x5037, 8), x5035, 8),
        32515,
        2,
    )?;
    let x5038: BytePoly_8 = bigint_mul!(x5031, x5031, 8);
    let x5039: BytePoly_9 = bigint_nondet_quot!(ctx, x5038, x6, 9);
    let x5040: BytePoly_4 = bigint_nondet_rem!(ctx, x5038, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5039, x6, 13), x5040, 13),
            x5038,
            13
        ),
        73156,
        4,
    )?;
    let x5041: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x5040, x4980, 4), x6, 4), x4980, 4),
        x6,
        4
    );
    let x5042: BytePoly_4 = bigint_nondet_quot!(ctx, x5041, x6, 4);
    let x5043: BytePoly_4 = bigint_nondet_rem!(ctx, x5041, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x5042, x6, 8), x5043, 8), x5041, 8),
        32515,
        2,
    )?;
    let x5044: BytePoly_8 = bigint_mul!(x5031, x5043, 8);
    let x5045: BytePoly_9 = bigint_nondet_quot!(ctx, x5044, x6, 9);
    let x5046: BytePoly_4 = bigint_nondet_rem!(ctx, x5044, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5045, x6, 13), x5046, 13),
            x5044,
            13
        ),
        73156,
        4,
    )?;
    let x5047: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x5046, x5037, 4), 4), x6, 4);
    let x5048: BytePoly_4 = bigint_nondet_quot!(ctx, x5047, x6, 4);
    let x5049: BytePoly_4 = bigint_nondet_rem!(ctx, x5047, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x5048, x6, 8), x5049, 8), x5047, 8),
        32515,
        2,
    )?;
    let x5050: BytePoly_1 = bigint_nondet_rem!(ctx, x4988, x2, 1);
    let x5051: BytePoly_5 = bigint_nondet_quot!(ctx, x4988, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x5051, x2, 6), x5050, 6), x4988, 6),
        40643,
        4,
    )?;
    let x5052: BytePoly_1 = bigint_sub!(x3, x5050, 1);
    eqz(ctx, &bigint_mul!(x5050, x5052, 2), 8131, 2)?;
    let x5053: BytePoly_4 = bigint_add!(bigint_sub!(x5043, x5013, 4), x6, 4);
    let x5054: BytePoly_4 = bigint_nondet_inv!(ctx, x5053, x6, 4);
    let x5055: BytePoly_8 = bigint_mul!(x5053, x5054, 8);
    let x5056: BytePoly_9 = bigint_nondet_quot!(ctx, x5055, x6, 9);
    let x5057: BytePoly_4 = bigint_nondet_rem!(ctx, x5055, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5056, x6, 13), x5057, 13),
            x5055,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x5057, x1, 4), 34, 1)?;
    let x5058: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x5049, x5015, 4), x6, 4), x5054, 8);
    let x5059: BytePoly_9 = bigint_nondet_quot!(ctx, x5058, x6, 9);
    let x5060: BytePoly_4 = bigint_nondet_rem!(ctx, x5058, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5059, x6, 13), x5060, 13),
            x5058,
            13
        ),
        73156,
        4,
    )?;
    let x5061: BytePoly_8 = bigint_add!(bigint_sub!(x5015, bigint_mul!(x5060, x5013, 8), 8), x6, 8);
    let x5062: BytePoly_8 = bigint_nondet_quot!(ctx, x5061, x6, 8);
    let x5063: BytePoly_4 = bigint_nondet_rem!(ctx, x5061, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5062, x6, 12), x5063, 12),
            x5061,
            12
        ),
        65028,
        4,
    )?;
    let x5064: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x5060, x5060, 8), x5013, 8), x6, 8),
            x5043,
            8
        ),
        x6,
        8
    );
    let x5065: BytePoly_9 = bigint_nondet_quot!(ctx, x5064, x6, 9);
    let x5066: BytePoly_4 = bigint_nondet_rem!(ctx, x5064, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5065, x6, 13), x5066, 13),
            x5064,
            13
        ),
        73156,
        4,
    )?;
    let x5067: BytePoly_8 = bigint_mul!(x5060, x5066, 8);
    let x5068: BytePoly_9 = bigint_nondet_quot!(ctx, x5067, x6, 9);
    let x5069: BytePoly_4 = bigint_nondet_rem!(ctx, x5067, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5068, x6, 13), x5069, 13),
            x5067,
            13
        ),
        73156,
        4,
    )?;
    let x5070: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x5069, x5063, 4), 4), x6, 4);
    let x5071: BytePoly_4 = bigint_nondet_quot!(ctx, x5070, x6, 4);
    let x5072: BytePoly_4 = bigint_nondet_rem!(ctx, x5070, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x5071, x6, 8), x5072, 8), x5070, 8),
        32515,
        2,
    )?;
    let x5073: BytePoly_5 = bigint_add!(
        bigint_mul!(x5066, x5050, 5),
        bigint_mul!(x5013, x5052, 5),
        5
    );
    let x5074: BytePoly_5 = bigint_add!(
        bigint_mul!(x5072, x5050, 5),
        bigint_mul!(x5015, x5052, 5),
        5
    );
    let x5075: BytePoly_6 = bigint_nondet_quot!(ctx, x5073, x6, 6);
    let x5076: BytePoly_4 = bigint_nondet_rem!(ctx, x5073, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5075, x6, 10), x5076, 10),
            x5073,
            10
        ),
        48771,
        4,
    )?;
    let x5077: BytePoly_6 = bigint_nondet_quot!(ctx, x5074, x6, 6);
    let x5078: BytePoly_4 = bigint_nondet_rem!(ctx, x5074, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5077, x6, 10), x5078, 10),
            x5074,
            10
        ),
        48771,
        4,
    )?;
    let x5079: BytePoly_8 = bigint_mul!(x5043, x5043, 8);
    let x5080: BytePoly_9 = bigint_nondet_quot!(ctx, x5079, x6, 9);
    let x5081: BytePoly_4 = bigint_nondet_rem!(ctx, x5079, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5080, x6, 13), x5081, 13),
            x5079,
            13
        ),
        73156,
        4,
    )?;
    let x5082: BytePoly_5 = bigint_add!(bigint_mul!(x5081, x0, 5), x5, 5);
    let x5083: BytePoly_6 = bigint_nondet_quot!(ctx, x5082, x6, 6);
    let x5084: BytePoly_4 = bigint_nondet_rem!(ctx, x5082, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5083, x6, 10), x5084, 10),
            x5082,
            10
        ),
        48771,
        4,
    )?;
    let x5085: BytePoly_4 = bigint_add!(x5049, x5049, 4);
    let x5086: BytePoly_4 = bigint_nondet_quot!(ctx, x5085, x6, 4);
    let x5087: BytePoly_4 = bigint_nondet_rem!(ctx, x5085, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x5086, x6, 8), x5087, 8), x5085, 8),
        32515,
        2,
    )?;
    let x5088: BytePoly_4 = bigint_nondet_inv!(ctx, x5087, x6, 4);
    let x5089: BytePoly_8 = bigint_mul!(x5087, x5088, 8);
    let x5090: BytePoly_9 = bigint_nondet_quot!(ctx, x5089, x6, 9);
    let x5091: BytePoly_4 = bigint_nondet_rem!(ctx, x5089, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5090, x6, 13), x5091, 13),
            x5089,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x5091, x3, 4), 34, 1)?;
    let x5092: BytePoly_8 = bigint_mul!(x5084, x5088, 8);
    let x5093: BytePoly_9 = bigint_nondet_quot!(ctx, x5092, x6, 9);
    let x5094: BytePoly_4 = bigint_nondet_rem!(ctx, x5092, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5093, x6, 13), x5094, 13),
            x5092,
            13
        ),
        73156,
        4,
    )?;
    let x5095: BytePoly_8 = bigint_mul!(x5094, x5043, 8);
    let x5096: BytePoly_9 = bigint_nondet_quot!(ctx, x5095, x6, 9);
    let x5097: BytePoly_4 = bigint_nondet_rem!(ctx, x5095, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5096, x6, 13), x5097, 13),
            x5095,
            13
        ),
        73156,
        4,
    )?;
    let x5098: BytePoly_4 = bigint_add!(bigint_sub!(x5049, x5097, 4), x6, 4);
    let x5099: BytePoly_4 = bigint_nondet_quot!(ctx, x5098, x6, 4);
    let x5100: BytePoly_4 = bigint_nondet_rem!(ctx, x5098, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x5099, x6, 8), x5100, 8), x5098, 8),
        32515,
        2,
    )?;
    let x5101: BytePoly_8 = bigint_mul!(x5094, x5094, 8);
    let x5102: BytePoly_9 = bigint_nondet_quot!(ctx, x5101, x6, 9);
    let x5103: BytePoly_4 = bigint_nondet_rem!(ctx, x5101, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5102, x6, 13), x5103, 13),
            x5101,
            13
        ),
        73156,
        4,
    )?;
    let x5104: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x5103, x5043, 4), x6, 4), x5043, 4),
        x6,
        4
    );
    let x5105: BytePoly_4 = bigint_nondet_quot!(ctx, x5104, x6, 4);
    let x5106: BytePoly_4 = bigint_nondet_rem!(ctx, x5104, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x5105, x6, 8), x5106, 8), x5104, 8),
        32515,
        2,
    )?;
    let x5107: BytePoly_8 = bigint_mul!(x5094, x5106, 8);
    let x5108: BytePoly_9 = bigint_nondet_quot!(ctx, x5107, x6, 9);
    let x5109: BytePoly_4 = bigint_nondet_rem!(ctx, x5107, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5108, x6, 13), x5109, 13),
            x5107,
            13
        ),
        73156,
        4,
    )?;
    let x5110: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x5109, x5100, 4), 4), x6, 4);
    let x5111: BytePoly_4 = bigint_nondet_quot!(ctx, x5110, x6, 4);
    let x5112: BytePoly_4 = bigint_nondet_rem!(ctx, x5110, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x5111, x6, 8), x5112, 8), x5110, 8),
        32515,
        2,
    )?;
    let x5113: BytePoly_4 = bigint_add!(bigint_sub!(x15, x5076, 4), x6, 4);
    let x5114: BytePoly_4 = bigint_nondet_inv!(ctx, x5113, x6, 4);
    let x5115: BytePoly_8 = bigint_mul!(x5113, x5114, 8);
    let x5116: BytePoly_9 = bigint_nondet_quot!(ctx, x5115, x6, 9);
    let x5117: BytePoly_4 = bigint_nondet_rem!(ctx, x5115, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5116, x6, 13), x5117, 13),
            x5115,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x5117, x1, 4), 34, 1)?;
    let x5118: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x2557, x5078, 4), x6, 4), x5114, 8);
    let x5119: BytePoly_9 = bigint_nondet_quot!(ctx, x5118, x6, 9);
    let x5120: BytePoly_4 = bigint_nondet_rem!(ctx, x5118, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5119, x6, 13), x5120, 13),
            x5118,
            13
        ),
        73156,
        4,
    )?;
    let x5121: BytePoly_8 = bigint_add!(bigint_sub!(x5078, bigint_mul!(x5120, x5076, 8), 8), x6, 8);
    let x5122: BytePoly_8 = bigint_nondet_quot!(ctx, x5121, x6, 8);
    let x5123: BytePoly_4 = bigint_nondet_rem!(ctx, x5121, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5122, x6, 12), x5123, 12),
            x5121,
            12
        ),
        65028,
        4,
    )?;
    let x5124: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x5120, x5120, 8), x5076, 8), x6, 8),
            x15,
            8
        ),
        x6,
        8
    );
    let x5125: BytePoly_9 = bigint_nondet_quot!(ctx, x5124, x6, 9);
    let x5126: BytePoly_4 = bigint_nondet_rem!(ctx, x5124, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5125, x6, 13), x5126, 13),
            x5124,
            13
        ),
        73156,
        4,
    )?;
    let x5127: BytePoly_8 = bigint_mul!(x5120, x5126, 8);
    let x5128: BytePoly_9 = bigint_nondet_quot!(ctx, x5127, x6, 9);
    let x5129: BytePoly_4 = bigint_nondet_rem!(ctx, x5127, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5128, x6, 13), x5129, 13),
            x5127,
            13
        ),
        73156,
        4,
    )?;
    let x5130: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x5129, x5123, 4), 4), x6, 4);
    let x5131: BytePoly_4 = bigint_nondet_quot!(ctx, x5130, x6, 4);
    let x5132: BytePoly_4 = bigint_nondet_rem!(ctx, x5130, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x5131, x6, 8), x5132, 8), x5130, 8),
        32515,
        2,
    )?;
    let x5133: BytePoly_9 = bigint_nondet_quot!(ctx, x24, x6, 9);
    let x5134: BytePoly_4 = bigint_nondet_rem!(ctx, x24, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x5133, x6, 13), x5134, 13), x24, 13),
        73156,
        4,
    )?;
    let x5135: BytePoly_8 = bigint_sub!(
        x23,
        bigint_add!(bigint_add!(bigint_mul!(x15, x5134, 8), x27, 8), x4, 8),
        8
    );
    let x5136: BytePoly_9 = bigint_nondet_quot!(ctx, x5135, x6, 9);
    let x5137: BytePoly_4 = bigint_nondet_rem!(ctx, x5135, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5136, x6, 13), x5137, 13),
            x5135,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &x5137, 34, 1)?;
    let x5138: BytePoly_1 = bigint_nondet_rem!(ctx, x2587, x2, 1);
    let x5139: BytePoly_5 = bigint_nondet_quot!(ctx, x2587, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x5139, x2, 6), x5138, 6), x2587, 6),
        40643,
        4,
    )?;
    let x5140: BytePoly_1 = bigint_sub!(x3, x5138, 1);
    eqz(ctx, &bigint_mul!(x5138, x5140, 2), 8131, 2)?;
    let x5141: BytePoly_4 = bigint_nondet_inv!(ctx, x41, x6, 4);
    let x5142: BytePoly_8 = bigint_mul!(x41, x5141, 8);
    let x5143: BytePoly_9 = bigint_nondet_quot!(ctx, x5142, x6, 9);
    let x5144: BytePoly_4 = bigint_nondet_rem!(ctx, x5142, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5143, x6, 13), x5144, 13),
            x5142,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x5144, x1, 4), 34, 1)?;
    let x5145: BytePoly_8 = bigint_mul!(x40, x5141, 8);
    let x5146: BytePoly_9 = bigint_nondet_quot!(ctx, x5145, x6, 9);
    let x5147: BytePoly_4 = bigint_nondet_rem!(ctx, x5145, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5146, x6, 13), x5147, 13),
            x5145,
            13
        ),
        73156,
        4,
    )?;
    let x5148: BytePoly_8 = bigint_add!(bigint_sub!(x16, bigint_mul!(x5147, x15, 8), 8), x6, 8);
    let x5149: BytePoly_8 = bigint_nondet_quot!(ctx, x5148, x6, 8);
    let x5150: BytePoly_4 = bigint_nondet_rem!(ctx, x5148, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5149, x6, 12), x5150, 12),
            x5148,
            12
        ),
        65028,
        4,
    )?;
    let x5151: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x5147, x5147, 8), x15, 8), x6, 8),
            x10,
            8
        ),
        x6,
        8
    );
    let x5152: BytePoly_9 = bigint_nondet_quot!(ctx, x5151, x6, 9);
    let x5153: BytePoly_4 = bigint_nondet_rem!(ctx, x5151, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5152, x6, 13), x5153, 13),
            x5151,
            13
        ),
        73156,
        4,
    )?;
    let x5154: BytePoly_8 = bigint_mul!(x5147, x5153, 8);
    let x5155: BytePoly_9 = bigint_nondet_quot!(ctx, x5154, x6, 9);
    let x5156: BytePoly_4 = bigint_nondet_rem!(ctx, x5154, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5155, x6, 13), x5156, 13),
            x5154,
            13
        ),
        73156,
        4,
    )?;
    let x5157: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x5156, x5150, 4), 4), x6, 4);
    let x5158: BytePoly_4 = bigint_nondet_quot!(ctx, x5157, x6, 4);
    let x5159: BytePoly_4 = bigint_nondet_rem!(ctx, x5157, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x5158, x6, 8), x5159, 8), x5157, 8),
        32515,
        2,
    )?;
    let x5160: BytePoly_5 =
        bigint_add!(bigint_mul!(x5153, x5138, 5), bigint_mul!(x15, x5140, 5), 5);
    let x5161: BytePoly_5 =
        bigint_add!(bigint_mul!(x5159, x5138, 5), bigint_mul!(x16, x5140, 5), 5);
    let x5162: BytePoly_6 = bigint_nondet_quot!(ctx, x5160, x6, 6);
    let x5163: BytePoly_4 = bigint_nondet_rem!(ctx, x5160, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5162, x6, 10), x5163, 10),
            x5160,
            10
        ),
        48771,
        4,
    )?;
    let x5164: BytePoly_6 = bigint_nondet_quot!(ctx, x5161, x6, 6);
    let x5165: BytePoly_4 = bigint_nondet_rem!(ctx, x5161, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5164, x6, 10), x5165, 10),
            x5161,
            10
        ),
        48771,
        4,
    )?;
    let x5166: BytePoly_9 = bigint_nondet_quot!(ctx, x17, x6, 9);
    let x5167: BytePoly_4 = bigint_nondet_rem!(ctx, x17, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x5166, x6, 13), x5167, 13), x17, 13),
        73156,
        4,
    )?;
    let x5168: BytePoly_5 = bigint_add!(bigint_mul!(x5167, x0, 5), x5, 5);
    let x5169: BytePoly_6 = bigint_nondet_quot!(ctx, x5168, x6, 6);
    let x5170: BytePoly_4 = bigint_nondet_rem!(ctx, x5168, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5169, x6, 10), x5170, 10),
            x5168,
            10
        ),
        48771,
        4,
    )?;
    let x5171: BytePoly_4 = bigint_nondet_quot!(ctx, x72, x6, 4);
    let x5172: BytePoly_4 = bigint_nondet_rem!(ctx, x72, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x5171, x6, 8), x5172, 8), x72, 8),
        32515,
        2,
    )?;
    let x5173: BytePoly_4 = bigint_nondet_inv!(ctx, x5172, x6, 4);
    let x5174: BytePoly_8 = bigint_mul!(x5172, x5173, 8);
    let x5175: BytePoly_9 = bigint_nondet_quot!(ctx, x5174, x6, 9);
    let x5176: BytePoly_4 = bigint_nondet_rem!(ctx, x5174, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5175, x6, 13), x5176, 13),
            x5174,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x5176, x3, 4), 34, 1)?;
    let x5177: BytePoly_8 = bigint_mul!(x5170, x5173, 8);
    let x5178: BytePoly_9 = bigint_nondet_quot!(ctx, x5177, x6, 9);
    let x5179: BytePoly_4 = bigint_nondet_rem!(ctx, x5177, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5178, x6, 13), x5179, 13),
            x5177,
            13
        ),
        73156,
        4,
    )?;
    let x5180: BytePoly_8 = bigint_mul!(x5179, x10, 8);
    let x5181: BytePoly_9 = bigint_nondet_quot!(ctx, x5180, x6, 9);
    let x5182: BytePoly_4 = bigint_nondet_rem!(ctx, x5180, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5181, x6, 13), x5182, 13),
            x5180,
            13
        ),
        73156,
        4,
    )?;
    let x5183: BytePoly_4 = bigint_add!(bigint_sub!(x11, x5182, 4), x6, 4);
    let x5184: BytePoly_4 = bigint_nondet_quot!(ctx, x5183, x6, 4);
    let x5185: BytePoly_4 = bigint_nondet_rem!(ctx, x5183, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x5184, x6, 8), x5185, 8), x5183, 8),
        32515,
        2,
    )?;
    let x5186: BytePoly_8 = bigint_mul!(x5179, x5179, 8);
    let x5187: BytePoly_9 = bigint_nondet_quot!(ctx, x5186, x6, 9);
    let x5188: BytePoly_4 = bigint_nondet_rem!(ctx, x5186, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5187, x6, 13), x5188, 13),
            x5186,
            13
        ),
        73156,
        4,
    )?;
    let x5189: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x5188, x10, 4), x6, 4), x10, 4),
        x6,
        4
    );
    let x5190: BytePoly_4 = bigint_nondet_quot!(ctx, x5189, x6, 4);
    let x5191: BytePoly_4 = bigint_nondet_rem!(ctx, x5189, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x5190, x6, 8), x5191, 8), x5189, 8),
        32515,
        2,
    )?;
    let x5192: BytePoly_8 = bigint_mul!(x5179, x5191, 8);
    let x5193: BytePoly_9 = bigint_nondet_quot!(ctx, x5192, x6, 9);
    let x5194: BytePoly_4 = bigint_nondet_rem!(ctx, x5192, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5193, x6, 13), x5194, 13),
            x5192,
            13
        ),
        73156,
        4,
    )?;
    let x5195: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x5194, x5185, 4), 4), x6, 4);
    let x5196: BytePoly_4 = bigint_nondet_quot!(ctx, x5195, x6, 4);
    let x5197: BytePoly_4 = bigint_nondet_rem!(ctx, x5195, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x5196, x6, 8), x5197, 8), x5195, 8),
        32515,
        2,
    )?;
    let x5198: BytePoly_1 = bigint_nondet_rem!(ctx, x5139, x2, 1);
    let x5199: BytePoly_5 = bigint_nondet_quot!(ctx, x5139, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x5199, x2, 6), x5198, 6), x5139, 6),
        40643,
        4,
    )?;
    let x5200: BytePoly_1 = bigint_sub!(x3, x5198, 1);
    eqz(ctx, &bigint_mul!(x5198, x5200, 2), 8131, 2)?;
    let x5201: BytePoly_4 = bigint_add!(bigint_sub!(x5191, x5163, 4), x6, 4);
    let x5202: BytePoly_4 = bigint_nondet_inv!(ctx, x5201, x6, 4);
    let x5203: BytePoly_8 = bigint_mul!(x5201, x5202, 8);
    let x5204: BytePoly_9 = bigint_nondet_quot!(ctx, x5203, x6, 9);
    let x5205: BytePoly_4 = bigint_nondet_rem!(ctx, x5203, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5204, x6, 13), x5205, 13),
            x5203,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x5205, x1, 4), 34, 1)?;
    let x5206: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x5197, x5165, 4), x6, 4), x5202, 8);
    let x5207: BytePoly_9 = bigint_nondet_quot!(ctx, x5206, x6, 9);
    let x5208: BytePoly_4 = bigint_nondet_rem!(ctx, x5206, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5207, x6, 13), x5208, 13),
            x5206,
            13
        ),
        73156,
        4,
    )?;
    let x5209: BytePoly_8 = bigint_add!(bigint_sub!(x5165, bigint_mul!(x5208, x5163, 8), 8), x6, 8);
    let x5210: BytePoly_8 = bigint_nondet_quot!(ctx, x5209, x6, 8);
    let x5211: BytePoly_4 = bigint_nondet_rem!(ctx, x5209, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5210, x6, 12), x5211, 12),
            x5209,
            12
        ),
        65028,
        4,
    )?;
    let x5212: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x5208, x5208, 8), x5163, 8), x6, 8),
            x5191,
            8
        ),
        x6,
        8
    );
    let x5213: BytePoly_9 = bigint_nondet_quot!(ctx, x5212, x6, 9);
    let x5214: BytePoly_4 = bigint_nondet_rem!(ctx, x5212, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5213, x6, 13), x5214, 13),
            x5212,
            13
        ),
        73156,
        4,
    )?;
    let x5215: BytePoly_8 = bigint_mul!(x5208, x5214, 8);
    let x5216: BytePoly_9 = bigint_nondet_quot!(ctx, x5215, x6, 9);
    let x5217: BytePoly_4 = bigint_nondet_rem!(ctx, x5215, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5216, x6, 13), x5217, 13),
            x5215,
            13
        ),
        73156,
        4,
    )?;
    let x5218: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x5217, x5211, 4), 4), x6, 4);
    let x5219: BytePoly_4 = bigint_nondet_quot!(ctx, x5218, x6, 4);
    let x5220: BytePoly_4 = bigint_nondet_rem!(ctx, x5218, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x5219, x6, 8), x5220, 8), x5218, 8),
        32515,
        2,
    )?;
    let x5221: BytePoly_5 = bigint_add!(
        bigint_mul!(x5214, x5198, 5),
        bigint_mul!(x5163, x5200, 5),
        5
    );
    let x5222: BytePoly_5 = bigint_add!(
        bigint_mul!(x5220, x5198, 5),
        bigint_mul!(x5165, x5200, 5),
        5
    );
    let x5223: BytePoly_6 = bigint_nondet_quot!(ctx, x5221, x6, 6);
    let x5224: BytePoly_4 = bigint_nondet_rem!(ctx, x5221, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5223, x6, 10), x5224, 10),
            x5221,
            10
        ),
        48771,
        4,
    )?;
    let x5225: BytePoly_6 = bigint_nondet_quot!(ctx, x5222, x6, 6);
    let x5226: BytePoly_4 = bigint_nondet_rem!(ctx, x5222, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5225, x6, 10), x5226, 10),
            x5222,
            10
        ),
        48771,
        4,
    )?;
    let x5227: BytePoly_8 = bigint_mul!(x5191, x5191, 8);
    let x5228: BytePoly_9 = bigint_nondet_quot!(ctx, x5227, x6, 9);
    let x5229: BytePoly_4 = bigint_nondet_rem!(ctx, x5227, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5228, x6, 13), x5229, 13),
            x5227,
            13
        ),
        73156,
        4,
    )?;
    let x5230: BytePoly_5 = bigint_add!(bigint_mul!(x5229, x0, 5), x5, 5);
    let x5231: BytePoly_6 = bigint_nondet_quot!(ctx, x5230, x6, 6);
    let x5232: BytePoly_4 = bigint_nondet_rem!(ctx, x5230, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5231, x6, 10), x5232, 10),
            x5230,
            10
        ),
        48771,
        4,
    )?;
    let x5233: BytePoly_4 = bigint_add!(x5197, x5197, 4);
    let x5234: BytePoly_4 = bigint_nondet_quot!(ctx, x5233, x6, 4);
    let x5235: BytePoly_4 = bigint_nondet_rem!(ctx, x5233, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x5234, x6, 8), x5235, 8), x5233, 8),
        32515,
        2,
    )?;
    let x5236: BytePoly_4 = bigint_nondet_inv!(ctx, x5235, x6, 4);
    let x5237: BytePoly_8 = bigint_mul!(x5235, x5236, 8);
    let x5238: BytePoly_9 = bigint_nondet_quot!(ctx, x5237, x6, 9);
    let x5239: BytePoly_4 = bigint_nondet_rem!(ctx, x5237, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5238, x6, 13), x5239, 13),
            x5237,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x5239, x3, 4), 34, 1)?;
    let x5240: BytePoly_8 = bigint_mul!(x5232, x5236, 8);
    let x5241: BytePoly_9 = bigint_nondet_quot!(ctx, x5240, x6, 9);
    let x5242: BytePoly_4 = bigint_nondet_rem!(ctx, x5240, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5241, x6, 13), x5242, 13),
            x5240,
            13
        ),
        73156,
        4,
    )?;
    let x5243: BytePoly_8 = bigint_mul!(x5242, x5191, 8);
    let x5244: BytePoly_9 = bigint_nondet_quot!(ctx, x5243, x6, 9);
    let x5245: BytePoly_4 = bigint_nondet_rem!(ctx, x5243, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5244, x6, 13), x5245, 13),
            x5243,
            13
        ),
        73156,
        4,
    )?;
    let x5246: BytePoly_4 = bigint_add!(bigint_sub!(x5197, x5245, 4), x6, 4);
    let x5247: BytePoly_4 = bigint_nondet_quot!(ctx, x5246, x6, 4);
    let x5248: BytePoly_4 = bigint_nondet_rem!(ctx, x5246, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x5247, x6, 8), x5248, 8), x5246, 8),
        32515,
        2,
    )?;
    let x5249: BytePoly_8 = bigint_mul!(x5242, x5242, 8);
    let x5250: BytePoly_9 = bigint_nondet_quot!(ctx, x5249, x6, 9);
    let x5251: BytePoly_4 = bigint_nondet_rem!(ctx, x5249, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5250, x6, 13), x5251, 13),
            x5249,
            13
        ),
        73156,
        4,
    )?;
    let x5252: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x5251, x5191, 4), x6, 4), x5191, 4),
        x6,
        4
    );
    let x5253: BytePoly_4 = bigint_nondet_quot!(ctx, x5252, x6, 4);
    let x5254: BytePoly_4 = bigint_nondet_rem!(ctx, x5252, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x5253, x6, 8), x5254, 8), x5252, 8),
        32515,
        2,
    )?;
    let x5255: BytePoly_8 = bigint_mul!(x5242, x5254, 8);
    let x5256: BytePoly_9 = bigint_nondet_quot!(ctx, x5255, x6, 9);
    let x5257: BytePoly_4 = bigint_nondet_rem!(ctx, x5255, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5256, x6, 13), x5257, 13),
            x5255,
            13
        ),
        73156,
        4,
    )?;
    let x5258: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x5257, x5248, 4), 4), x6, 4);
    let x5259: BytePoly_4 = bigint_nondet_quot!(ctx, x5258, x6, 4);
    let x5260: BytePoly_4 = bigint_nondet_rem!(ctx, x5258, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x5259, x6, 8), x5260, 8), x5258, 8),
        32515,
        2,
    )?;
    let x5261: BytePoly_1 = bigint_nondet_rem!(ctx, x5199, x2, 1);
    let x5262: BytePoly_5 = bigint_nondet_quot!(ctx, x5199, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x5262, x2, 6), x5261, 6), x5199, 6),
        40643,
        4,
    )?;
    let x5263: BytePoly_1 = bigint_sub!(x3, x5261, 1);
    eqz(ctx, &bigint_mul!(x5261, x5263, 2), 8131, 2)?;
    let x5264: BytePoly_4 = bigint_add!(bigint_sub!(x5254, x5224, 4), x6, 4);
    let x5265: BytePoly_4 = bigint_nondet_inv!(ctx, x5264, x6, 4);
    let x5266: BytePoly_8 = bigint_mul!(x5264, x5265, 8);
    let x5267: BytePoly_9 = bigint_nondet_quot!(ctx, x5266, x6, 9);
    let x5268: BytePoly_4 = bigint_nondet_rem!(ctx, x5266, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5267, x6, 13), x5268, 13),
            x5266,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x5268, x1, 4), 34, 1)?;
    let x5269: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x5260, x5226, 4), x6, 4), x5265, 8);
    let x5270: BytePoly_9 = bigint_nondet_quot!(ctx, x5269, x6, 9);
    let x5271: BytePoly_4 = bigint_nondet_rem!(ctx, x5269, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5270, x6, 13), x5271, 13),
            x5269,
            13
        ),
        73156,
        4,
    )?;
    let x5272: BytePoly_8 = bigint_add!(bigint_sub!(x5226, bigint_mul!(x5271, x5224, 8), 8), x6, 8);
    let x5273: BytePoly_8 = bigint_nondet_quot!(ctx, x5272, x6, 8);
    let x5274: BytePoly_4 = bigint_nondet_rem!(ctx, x5272, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5273, x6, 12), x5274, 12),
            x5272,
            12
        ),
        65028,
        4,
    )?;
    let x5275: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x5271, x5271, 8), x5224, 8), x6, 8),
            x5254,
            8
        ),
        x6,
        8
    );
    let x5276: BytePoly_9 = bigint_nondet_quot!(ctx, x5275, x6, 9);
    let x5277: BytePoly_4 = bigint_nondet_rem!(ctx, x5275, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5276, x6, 13), x5277, 13),
            x5275,
            13
        ),
        73156,
        4,
    )?;
    let x5278: BytePoly_8 = bigint_mul!(x5271, x5277, 8);
    let x5279: BytePoly_9 = bigint_nondet_quot!(ctx, x5278, x6, 9);
    let x5280: BytePoly_4 = bigint_nondet_rem!(ctx, x5278, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5279, x6, 13), x5280, 13),
            x5278,
            13
        ),
        73156,
        4,
    )?;
    let x5281: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x5280, x5274, 4), 4), x6, 4);
    let x5282: BytePoly_4 = bigint_nondet_quot!(ctx, x5281, x6, 4);
    let x5283: BytePoly_4 = bigint_nondet_rem!(ctx, x5281, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x5282, x6, 8), x5283, 8), x5281, 8),
        32515,
        2,
    )?;
    let x5284: BytePoly_5 = bigint_add!(
        bigint_mul!(x5277, x5261, 5),
        bigint_mul!(x5224, x5263, 5),
        5
    );
    let x5285: BytePoly_5 = bigint_add!(
        bigint_mul!(x5283, x5261, 5),
        bigint_mul!(x5226, x5263, 5),
        5
    );
    let x5286: BytePoly_6 = bigint_nondet_quot!(ctx, x5284, x6, 6);
    let x5287: BytePoly_4 = bigint_nondet_rem!(ctx, x5284, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5286, x6, 10), x5287, 10),
            x5284,
            10
        ),
        48771,
        4,
    )?;
    let x5288: BytePoly_6 = bigint_nondet_quot!(ctx, x5285, x6, 6);
    let x5289: BytePoly_4 = bigint_nondet_rem!(ctx, x5285, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5288, x6, 10), x5289, 10),
            x5285,
            10
        ),
        48771,
        4,
    )?;
    let x5290: BytePoly_8 = bigint_mul!(x5254, x5254, 8);
    let x5291: BytePoly_9 = bigint_nondet_quot!(ctx, x5290, x6, 9);
    let x5292: BytePoly_4 = bigint_nondet_rem!(ctx, x5290, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5291, x6, 13), x5292, 13),
            x5290,
            13
        ),
        73156,
        4,
    )?;
    let x5293: BytePoly_5 = bigint_add!(bigint_mul!(x5292, x0, 5), x5, 5);
    let x5294: BytePoly_6 = bigint_nondet_quot!(ctx, x5293, x6, 6);
    let x5295: BytePoly_4 = bigint_nondet_rem!(ctx, x5293, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5294, x6, 10), x5295, 10),
            x5293,
            10
        ),
        48771,
        4,
    )?;
    let x5296: BytePoly_4 = bigint_add!(x5260, x5260, 4);
    let x5297: BytePoly_4 = bigint_nondet_quot!(ctx, x5296, x6, 4);
    let x5298: BytePoly_4 = bigint_nondet_rem!(ctx, x5296, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x5297, x6, 8), x5298, 8), x5296, 8),
        32515,
        2,
    )?;
    let x5299: BytePoly_4 = bigint_nondet_inv!(ctx, x5298, x6, 4);
    let x5300: BytePoly_8 = bigint_mul!(x5298, x5299, 8);
    let x5301: BytePoly_9 = bigint_nondet_quot!(ctx, x5300, x6, 9);
    let x5302: BytePoly_4 = bigint_nondet_rem!(ctx, x5300, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5301, x6, 13), x5302, 13),
            x5300,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x5302, x3, 4), 34, 1)?;
    let x5303: BytePoly_8 = bigint_mul!(x5295, x5299, 8);
    let x5304: BytePoly_9 = bigint_nondet_quot!(ctx, x5303, x6, 9);
    let x5305: BytePoly_4 = bigint_nondet_rem!(ctx, x5303, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5304, x6, 13), x5305, 13),
            x5303,
            13
        ),
        73156,
        4,
    )?;
    let x5306: BytePoly_8 = bigint_mul!(x5305, x5254, 8);
    let x5307: BytePoly_9 = bigint_nondet_quot!(ctx, x5306, x6, 9);
    let x5308: BytePoly_4 = bigint_nondet_rem!(ctx, x5306, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5307, x6, 13), x5308, 13),
            x5306,
            13
        ),
        73156,
        4,
    )?;
    let x5309: BytePoly_4 = bigint_add!(bigint_sub!(x5260, x5308, 4), x6, 4);
    let x5310: BytePoly_4 = bigint_nondet_quot!(ctx, x5309, x6, 4);
    let x5311: BytePoly_4 = bigint_nondet_rem!(ctx, x5309, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x5310, x6, 8), x5311, 8), x5309, 8),
        32515,
        2,
    )?;
    let x5312: BytePoly_8 = bigint_mul!(x5305, x5305, 8);
    let x5313: BytePoly_9 = bigint_nondet_quot!(ctx, x5312, x6, 9);
    let x5314: BytePoly_4 = bigint_nondet_rem!(ctx, x5312, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5313, x6, 13), x5314, 13),
            x5312,
            13
        ),
        73156,
        4,
    )?;
    let x5315: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x5314, x5254, 4), x6, 4), x5254, 4),
        x6,
        4
    );
    let x5316: BytePoly_4 = bigint_nondet_quot!(ctx, x5315, x6, 4);
    let x5317: BytePoly_4 = bigint_nondet_rem!(ctx, x5315, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x5316, x6, 8), x5317, 8), x5315, 8),
        32515,
        2,
    )?;
    let x5318: BytePoly_8 = bigint_mul!(x5305, x5317, 8);
    let x5319: BytePoly_9 = bigint_nondet_quot!(ctx, x5318, x6, 9);
    let x5320: BytePoly_4 = bigint_nondet_rem!(ctx, x5318, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5319, x6, 13), x5320, 13),
            x5318,
            13
        ),
        73156,
        4,
    )?;
    let x5321: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x5320, x5311, 4), 4), x6, 4);
    let x5322: BytePoly_4 = bigint_nondet_quot!(ctx, x5321, x6, 4);
    let x5323: BytePoly_4 = bigint_nondet_rem!(ctx, x5321, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x5322, x6, 8), x5323, 8), x5321, 8),
        32515,
        2,
    )?;
    let x5324: BytePoly_1 = bigint_nondet_rem!(ctx, x5262, x2, 1);
    let x5325: BytePoly_5 = bigint_nondet_quot!(ctx, x5262, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x5325, x2, 6), x5324, 6), x5262, 6),
        40643,
        4,
    )?;
    let x5326: BytePoly_1 = bigint_sub!(x3, x5324, 1);
    eqz(ctx, &bigint_mul!(x5324, x5326, 2), 8131, 2)?;
    let x5327: BytePoly_4 = bigint_add!(bigint_sub!(x5317, x5287, 4), x6, 4);
    let x5328: BytePoly_4 = bigint_nondet_inv!(ctx, x5327, x6, 4);
    let x5329: BytePoly_8 = bigint_mul!(x5327, x5328, 8);
    let x5330: BytePoly_9 = bigint_nondet_quot!(ctx, x5329, x6, 9);
    let x5331: BytePoly_4 = bigint_nondet_rem!(ctx, x5329, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5330, x6, 13), x5331, 13),
            x5329,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x5331, x1, 4), 34, 1)?;
    let x5332: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x5323, x5289, 4), x6, 4), x5328, 8);
    let x5333: BytePoly_9 = bigint_nondet_quot!(ctx, x5332, x6, 9);
    let x5334: BytePoly_4 = bigint_nondet_rem!(ctx, x5332, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5333, x6, 13), x5334, 13),
            x5332,
            13
        ),
        73156,
        4,
    )?;
    let x5335: BytePoly_8 = bigint_add!(bigint_sub!(x5289, bigint_mul!(x5334, x5287, 8), 8), x6, 8);
    let x5336: BytePoly_8 = bigint_nondet_quot!(ctx, x5335, x6, 8);
    let x5337: BytePoly_4 = bigint_nondet_rem!(ctx, x5335, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5336, x6, 12), x5337, 12),
            x5335,
            12
        ),
        65028,
        4,
    )?;
    let x5338: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x5334, x5334, 8), x5287, 8), x6, 8),
            x5317,
            8
        ),
        x6,
        8
    );
    let x5339: BytePoly_9 = bigint_nondet_quot!(ctx, x5338, x6, 9);
    let x5340: BytePoly_4 = bigint_nondet_rem!(ctx, x5338, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5339, x6, 13), x5340, 13),
            x5338,
            13
        ),
        73156,
        4,
    )?;
    let x5341: BytePoly_8 = bigint_mul!(x5334, x5340, 8);
    let x5342: BytePoly_9 = bigint_nondet_quot!(ctx, x5341, x6, 9);
    let x5343: BytePoly_4 = bigint_nondet_rem!(ctx, x5341, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5342, x6, 13), x5343, 13),
            x5341,
            13
        ),
        73156,
        4,
    )?;
    let x5344: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x5343, x5337, 4), 4), x6, 4);
    let x5345: BytePoly_4 = bigint_nondet_quot!(ctx, x5344, x6, 4);
    let x5346: BytePoly_4 = bigint_nondet_rem!(ctx, x5344, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x5345, x6, 8), x5346, 8), x5344, 8),
        32515,
        2,
    )?;
    let x5347: BytePoly_5 = bigint_add!(
        bigint_mul!(x5340, x5324, 5),
        bigint_mul!(x5287, x5326, 5),
        5
    );
    let x5348: BytePoly_5 = bigint_add!(
        bigint_mul!(x5346, x5324, 5),
        bigint_mul!(x5289, x5326, 5),
        5
    );
    let x5349: BytePoly_6 = bigint_nondet_quot!(ctx, x5347, x6, 6);
    let x5350: BytePoly_4 = bigint_nondet_rem!(ctx, x5347, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5349, x6, 10), x5350, 10),
            x5347,
            10
        ),
        48771,
        4,
    )?;
    let x5351: BytePoly_6 = bigint_nondet_quot!(ctx, x5348, x6, 6);
    let x5352: BytePoly_4 = bigint_nondet_rem!(ctx, x5348, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5351, x6, 10), x5352, 10),
            x5348,
            10
        ),
        48771,
        4,
    )?;
    let x5353: BytePoly_8 = bigint_mul!(x5317, x5317, 8);
    let x5354: BytePoly_9 = bigint_nondet_quot!(ctx, x5353, x6, 9);
    let x5355: BytePoly_4 = bigint_nondet_rem!(ctx, x5353, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5354, x6, 13), x5355, 13),
            x5353,
            13
        ),
        73156,
        4,
    )?;
    let x5356: BytePoly_5 = bigint_add!(bigint_mul!(x5355, x0, 5), x5, 5);
    let x5357: BytePoly_6 = bigint_nondet_quot!(ctx, x5356, x6, 6);
    let x5358: BytePoly_4 = bigint_nondet_rem!(ctx, x5356, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5357, x6, 10), x5358, 10),
            x5356,
            10
        ),
        48771,
        4,
    )?;
    let x5359: BytePoly_4 = bigint_add!(x5323, x5323, 4);
    let x5360: BytePoly_4 = bigint_nondet_quot!(ctx, x5359, x6, 4);
    let x5361: BytePoly_4 = bigint_nondet_rem!(ctx, x5359, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x5360, x6, 8), x5361, 8), x5359, 8),
        32515,
        2,
    )?;
    let x5362: BytePoly_4 = bigint_nondet_inv!(ctx, x5361, x6, 4);
    let x5363: BytePoly_8 = bigint_mul!(x5361, x5362, 8);
    let x5364: BytePoly_9 = bigint_nondet_quot!(ctx, x5363, x6, 9);
    let x5365: BytePoly_4 = bigint_nondet_rem!(ctx, x5363, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5364, x6, 13), x5365, 13),
            x5363,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x5365, x3, 4), 34, 1)?;
    let x5366: BytePoly_8 = bigint_mul!(x5358, x5362, 8);
    let x5367: BytePoly_9 = bigint_nondet_quot!(ctx, x5366, x6, 9);
    let x5368: BytePoly_4 = bigint_nondet_rem!(ctx, x5366, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5367, x6, 13), x5368, 13),
            x5366,
            13
        ),
        73156,
        4,
    )?;
    let x5369: BytePoly_8 = bigint_mul!(x5368, x5317, 8);
    let x5370: BytePoly_9 = bigint_nondet_quot!(ctx, x5369, x6, 9);
    let x5371: BytePoly_4 = bigint_nondet_rem!(ctx, x5369, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5370, x6, 13), x5371, 13),
            x5369,
            13
        ),
        73156,
        4,
    )?;
    let x5372: BytePoly_4 = bigint_add!(bigint_sub!(x5323, x5371, 4), x6, 4);
    let x5373: BytePoly_4 = bigint_nondet_quot!(ctx, x5372, x6, 4);
    let x5374: BytePoly_4 = bigint_nondet_rem!(ctx, x5372, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x5373, x6, 8), x5374, 8), x5372, 8),
        32515,
        2,
    )?;
    let x5375: BytePoly_8 = bigint_mul!(x5368, x5368, 8);
    let x5376: BytePoly_9 = bigint_nondet_quot!(ctx, x5375, x6, 9);
    let x5377: BytePoly_4 = bigint_nondet_rem!(ctx, x5375, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5376, x6, 13), x5377, 13),
            x5375,
            13
        ),
        73156,
        4,
    )?;
    let x5378: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x5377, x5317, 4), x6, 4), x5317, 4),
        x6,
        4
    );
    let x5379: BytePoly_4 = bigint_nondet_quot!(ctx, x5378, x6, 4);
    let x5380: BytePoly_4 = bigint_nondet_rem!(ctx, x5378, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x5379, x6, 8), x5380, 8), x5378, 8),
        32515,
        2,
    )?;
    let x5381: BytePoly_8 = bigint_mul!(x5368, x5380, 8);
    let x5382: BytePoly_9 = bigint_nondet_quot!(ctx, x5381, x6, 9);
    let x5383: BytePoly_4 = bigint_nondet_rem!(ctx, x5381, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5382, x6, 13), x5383, 13),
            x5381,
            13
        ),
        73156,
        4,
    )?;
    let x5384: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x5383, x5374, 4), 4), x6, 4);
    let x5385: BytePoly_4 = bigint_nondet_quot!(ctx, x5384, x6, 4);
    let x5386: BytePoly_4 = bigint_nondet_rem!(ctx, x5384, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x5385, x6, 8), x5386, 8), x5384, 8),
        32515,
        2,
    )?;
    let x5387: BytePoly_1 = bigint_nondet_rem!(ctx, x5325, x2, 1);
    let x5388: BytePoly_5 = bigint_nondet_quot!(ctx, x5325, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x5388, x2, 6), x5387, 6), x5325, 6),
        40643,
        4,
    )?;
    let x5389: BytePoly_1 = bigint_sub!(x3, x5387, 1);
    eqz(ctx, &bigint_mul!(x5387, x5389, 2), 8131, 2)?;
    let x5390: BytePoly_4 = bigint_add!(bigint_sub!(x5380, x5350, 4), x6, 4);
    let x5391: BytePoly_4 = bigint_nondet_inv!(ctx, x5390, x6, 4);
    let x5392: BytePoly_8 = bigint_mul!(x5390, x5391, 8);
    let x5393: BytePoly_9 = bigint_nondet_quot!(ctx, x5392, x6, 9);
    let x5394: BytePoly_4 = bigint_nondet_rem!(ctx, x5392, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5393, x6, 13), x5394, 13),
            x5392,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x5394, x1, 4), 34, 1)?;
    let x5395: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x5386, x5352, 4), x6, 4), x5391, 8);
    let x5396: BytePoly_9 = bigint_nondet_quot!(ctx, x5395, x6, 9);
    let x5397: BytePoly_4 = bigint_nondet_rem!(ctx, x5395, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5396, x6, 13), x5397, 13),
            x5395,
            13
        ),
        73156,
        4,
    )?;
    let x5398: BytePoly_8 = bigint_add!(bigint_sub!(x5352, bigint_mul!(x5397, x5350, 8), 8), x6, 8);
    let x5399: BytePoly_8 = bigint_nondet_quot!(ctx, x5398, x6, 8);
    let x5400: BytePoly_4 = bigint_nondet_rem!(ctx, x5398, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5399, x6, 12), x5400, 12),
            x5398,
            12
        ),
        65028,
        4,
    )?;
    let x5401: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x5397, x5397, 8), x5350, 8), x6, 8),
            x5380,
            8
        ),
        x6,
        8
    );
    let x5402: BytePoly_9 = bigint_nondet_quot!(ctx, x5401, x6, 9);
    let x5403: BytePoly_4 = bigint_nondet_rem!(ctx, x5401, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5402, x6, 13), x5403, 13),
            x5401,
            13
        ),
        73156,
        4,
    )?;
    let x5404: BytePoly_8 = bigint_mul!(x5397, x5403, 8);
    let x5405: BytePoly_9 = bigint_nondet_quot!(ctx, x5404, x6, 9);
    let x5406: BytePoly_4 = bigint_nondet_rem!(ctx, x5404, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5405, x6, 13), x5406, 13),
            x5404,
            13
        ),
        73156,
        4,
    )?;
    let x5407: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x5406, x5400, 4), 4), x6, 4);
    let x5408: BytePoly_4 = bigint_nondet_quot!(ctx, x5407, x6, 4);
    let x5409: BytePoly_4 = bigint_nondet_rem!(ctx, x5407, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x5408, x6, 8), x5409, 8), x5407, 8),
        32515,
        2,
    )?;
    let x5410: BytePoly_5 = bigint_add!(
        bigint_mul!(x5403, x5387, 5),
        bigint_mul!(x5350, x5389, 5),
        5
    );
    let x5411: BytePoly_5 = bigint_add!(
        bigint_mul!(x5409, x5387, 5),
        bigint_mul!(x5352, x5389, 5),
        5
    );
    let x5412: BytePoly_6 = bigint_nondet_quot!(ctx, x5410, x6, 6);
    let x5413: BytePoly_4 = bigint_nondet_rem!(ctx, x5410, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5412, x6, 10), x5413, 10),
            x5410,
            10
        ),
        48771,
        4,
    )?;
    let x5414: BytePoly_6 = bigint_nondet_quot!(ctx, x5411, x6, 6);
    let x5415: BytePoly_4 = bigint_nondet_rem!(ctx, x5411, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5414, x6, 10), x5415, 10),
            x5411,
            10
        ),
        48771,
        4,
    )?;
    let x5416: BytePoly_8 = bigint_mul!(x5380, x5380, 8);
    let x5417: BytePoly_9 = bigint_nondet_quot!(ctx, x5416, x6, 9);
    let x5418: BytePoly_4 = bigint_nondet_rem!(ctx, x5416, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5417, x6, 13), x5418, 13),
            x5416,
            13
        ),
        73156,
        4,
    )?;
    let x5419: BytePoly_5 = bigint_add!(bigint_mul!(x5418, x0, 5), x5, 5);
    let x5420: BytePoly_6 = bigint_nondet_quot!(ctx, x5419, x6, 6);
    let x5421: BytePoly_4 = bigint_nondet_rem!(ctx, x5419, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5420, x6, 10), x5421, 10),
            x5419,
            10
        ),
        48771,
        4,
    )?;
    let x5422: BytePoly_4 = bigint_add!(x5386, x5386, 4);
    let x5423: BytePoly_4 = bigint_nondet_quot!(ctx, x5422, x6, 4);
    let x5424: BytePoly_4 = bigint_nondet_rem!(ctx, x5422, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x5423, x6, 8), x5424, 8), x5422, 8),
        32515,
        2,
    )?;
    let x5425: BytePoly_4 = bigint_nondet_inv!(ctx, x5424, x6, 4);
    let x5426: BytePoly_8 = bigint_mul!(x5424, x5425, 8);
    let x5427: BytePoly_9 = bigint_nondet_quot!(ctx, x5426, x6, 9);
    let x5428: BytePoly_4 = bigint_nondet_rem!(ctx, x5426, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5427, x6, 13), x5428, 13),
            x5426,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x5428, x3, 4), 34, 1)?;
    let x5429: BytePoly_8 = bigint_mul!(x5421, x5425, 8);
    let x5430: BytePoly_9 = bigint_nondet_quot!(ctx, x5429, x6, 9);
    let x5431: BytePoly_4 = bigint_nondet_rem!(ctx, x5429, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5430, x6, 13), x5431, 13),
            x5429,
            13
        ),
        73156,
        4,
    )?;
    let x5432: BytePoly_8 = bigint_mul!(x5431, x5380, 8);
    let x5433: BytePoly_9 = bigint_nondet_quot!(ctx, x5432, x6, 9);
    let x5434: BytePoly_4 = bigint_nondet_rem!(ctx, x5432, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5433, x6, 13), x5434, 13),
            x5432,
            13
        ),
        73156,
        4,
    )?;
    let x5435: BytePoly_4 = bigint_add!(bigint_sub!(x5386, x5434, 4), x6, 4);
    let x5436: BytePoly_4 = bigint_nondet_quot!(ctx, x5435, x6, 4);
    let x5437: BytePoly_4 = bigint_nondet_rem!(ctx, x5435, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x5436, x6, 8), x5437, 8), x5435, 8),
        32515,
        2,
    )?;
    let x5438: BytePoly_8 = bigint_mul!(x5431, x5431, 8);
    let x5439: BytePoly_9 = bigint_nondet_quot!(ctx, x5438, x6, 9);
    let x5440: BytePoly_4 = bigint_nondet_rem!(ctx, x5438, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5439, x6, 13), x5440, 13),
            x5438,
            13
        ),
        73156,
        4,
    )?;
    let x5441: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x5440, x5380, 4), x6, 4), x5380, 4),
        x6,
        4
    );
    let x5442: BytePoly_4 = bigint_nondet_quot!(ctx, x5441, x6, 4);
    let x5443: BytePoly_4 = bigint_nondet_rem!(ctx, x5441, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x5442, x6, 8), x5443, 8), x5441, 8),
        32515,
        2,
    )?;
    let x5444: BytePoly_8 = bigint_mul!(x5431, x5443, 8);
    let x5445: BytePoly_9 = bigint_nondet_quot!(ctx, x5444, x6, 9);
    let x5446: BytePoly_4 = bigint_nondet_rem!(ctx, x5444, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5445, x6, 13), x5446, 13),
            x5444,
            13
        ),
        73156,
        4,
    )?;
    let x5447: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x5446, x5437, 4), 4), x6, 4);
    let x5448: BytePoly_4 = bigint_nondet_quot!(ctx, x5447, x6, 4);
    let x5449: BytePoly_4 = bigint_nondet_rem!(ctx, x5447, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x5448, x6, 8), x5449, 8), x5447, 8),
        32515,
        2,
    )?;
    let x5450: BytePoly_1 = bigint_nondet_rem!(ctx, x5388, x2, 1);
    let x5451: BytePoly_5 = bigint_nondet_quot!(ctx, x5388, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x5451, x2, 6), x5450, 6), x5388, 6),
        40643,
        4,
    )?;
    let x5452: BytePoly_1 = bigint_sub!(x3, x5450, 1);
    eqz(ctx, &bigint_mul!(x5450, x5452, 2), 8131, 2)?;
    let x5453: BytePoly_4 = bigint_add!(bigint_sub!(x5443, x5413, 4), x6, 4);
    let x5454: BytePoly_4 = bigint_nondet_inv!(ctx, x5453, x6, 4);
    let x5455: BytePoly_8 = bigint_mul!(x5453, x5454, 8);
    let x5456: BytePoly_9 = bigint_nondet_quot!(ctx, x5455, x6, 9);
    let x5457: BytePoly_4 = bigint_nondet_rem!(ctx, x5455, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5456, x6, 13), x5457, 13),
            x5455,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x5457, x1, 4), 34, 1)?;
    let x5458: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x5449, x5415, 4), x6, 4), x5454, 8);
    let x5459: BytePoly_9 = bigint_nondet_quot!(ctx, x5458, x6, 9);
    let x5460: BytePoly_4 = bigint_nondet_rem!(ctx, x5458, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5459, x6, 13), x5460, 13),
            x5458,
            13
        ),
        73156,
        4,
    )?;
    let x5461: BytePoly_8 = bigint_add!(bigint_sub!(x5415, bigint_mul!(x5460, x5413, 8), 8), x6, 8);
    let x5462: BytePoly_8 = bigint_nondet_quot!(ctx, x5461, x6, 8);
    let x5463: BytePoly_4 = bigint_nondet_rem!(ctx, x5461, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5462, x6, 12), x5463, 12),
            x5461,
            12
        ),
        65028,
        4,
    )?;
    let x5464: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x5460, x5460, 8), x5413, 8), x6, 8),
            x5443,
            8
        ),
        x6,
        8
    );
    let x5465: BytePoly_9 = bigint_nondet_quot!(ctx, x5464, x6, 9);
    let x5466: BytePoly_4 = bigint_nondet_rem!(ctx, x5464, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5465, x6, 13), x5466, 13),
            x5464,
            13
        ),
        73156,
        4,
    )?;
    let x5467: BytePoly_8 = bigint_mul!(x5460, x5466, 8);
    let x5468: BytePoly_9 = bigint_nondet_quot!(ctx, x5467, x6, 9);
    let x5469: BytePoly_4 = bigint_nondet_rem!(ctx, x5467, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5468, x6, 13), x5469, 13),
            x5467,
            13
        ),
        73156,
        4,
    )?;
    let x5470: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x5469, x5463, 4), 4), x6, 4);
    let x5471: BytePoly_4 = bigint_nondet_quot!(ctx, x5470, x6, 4);
    let x5472: BytePoly_4 = bigint_nondet_rem!(ctx, x5470, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x5471, x6, 8), x5472, 8), x5470, 8),
        32515,
        2,
    )?;
    let x5473: BytePoly_5 = bigint_add!(
        bigint_mul!(x5466, x5450, 5),
        bigint_mul!(x5413, x5452, 5),
        5
    );
    let x5474: BytePoly_5 = bigint_add!(
        bigint_mul!(x5472, x5450, 5),
        bigint_mul!(x5415, x5452, 5),
        5
    );
    let x5475: BytePoly_6 = bigint_nondet_quot!(ctx, x5473, x6, 6);
    let x5476: BytePoly_4 = bigint_nondet_rem!(ctx, x5473, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5475, x6, 10), x5476, 10),
            x5473,
            10
        ),
        48771,
        4,
    )?;
    let x5477: BytePoly_6 = bigint_nondet_quot!(ctx, x5474, x6, 6);
    let x5478: BytePoly_4 = bigint_nondet_rem!(ctx, x5474, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5477, x6, 10), x5478, 10),
            x5474,
            10
        ),
        48771,
        4,
    )?;
    let x5479: BytePoly_8 = bigint_mul!(x5443, x5443, 8);
    let x5480: BytePoly_9 = bigint_nondet_quot!(ctx, x5479, x6, 9);
    let x5481: BytePoly_4 = bigint_nondet_rem!(ctx, x5479, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5480, x6, 13), x5481, 13),
            x5479,
            13
        ),
        73156,
        4,
    )?;
    let x5482: BytePoly_5 = bigint_add!(bigint_mul!(x5481, x0, 5), x5, 5);
    let x5483: BytePoly_6 = bigint_nondet_quot!(ctx, x5482, x6, 6);
    let x5484: BytePoly_4 = bigint_nondet_rem!(ctx, x5482, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5483, x6, 10), x5484, 10),
            x5482,
            10
        ),
        48771,
        4,
    )?;
    let x5485: BytePoly_4 = bigint_add!(x5449, x5449, 4);
    let x5486: BytePoly_4 = bigint_nondet_quot!(ctx, x5485, x6, 4);
    let x5487: BytePoly_4 = bigint_nondet_rem!(ctx, x5485, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x5486, x6, 8), x5487, 8), x5485, 8),
        32515,
        2,
    )?;
    let x5488: BytePoly_4 = bigint_nondet_inv!(ctx, x5487, x6, 4);
    let x5489: BytePoly_8 = bigint_mul!(x5487, x5488, 8);
    let x5490: BytePoly_9 = bigint_nondet_quot!(ctx, x5489, x6, 9);
    let x5491: BytePoly_4 = bigint_nondet_rem!(ctx, x5489, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5490, x6, 13), x5491, 13),
            x5489,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x5491, x3, 4), 34, 1)?;
    let x5492: BytePoly_8 = bigint_mul!(x5484, x5488, 8);
    let x5493: BytePoly_9 = bigint_nondet_quot!(ctx, x5492, x6, 9);
    let x5494: BytePoly_4 = bigint_nondet_rem!(ctx, x5492, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5493, x6, 13), x5494, 13),
            x5492,
            13
        ),
        73156,
        4,
    )?;
    let x5495: BytePoly_8 = bigint_mul!(x5494, x5443, 8);
    let x5496: BytePoly_9 = bigint_nondet_quot!(ctx, x5495, x6, 9);
    let x5497: BytePoly_4 = bigint_nondet_rem!(ctx, x5495, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5496, x6, 13), x5497, 13),
            x5495,
            13
        ),
        73156,
        4,
    )?;
    let x5498: BytePoly_4 = bigint_add!(bigint_sub!(x5449, x5497, 4), x6, 4);
    let x5499: BytePoly_4 = bigint_nondet_quot!(ctx, x5498, x6, 4);
    let x5500: BytePoly_4 = bigint_nondet_rem!(ctx, x5498, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x5499, x6, 8), x5500, 8), x5498, 8),
        32515,
        2,
    )?;
    let x5501: BytePoly_8 = bigint_mul!(x5494, x5494, 8);
    let x5502: BytePoly_9 = bigint_nondet_quot!(ctx, x5501, x6, 9);
    let x5503: BytePoly_4 = bigint_nondet_rem!(ctx, x5501, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5502, x6, 13), x5503, 13),
            x5501,
            13
        ),
        73156,
        4,
    )?;
    let x5504: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x5503, x5443, 4), x6, 4), x5443, 4),
        x6,
        4
    );
    let x5505: BytePoly_4 = bigint_nondet_quot!(ctx, x5504, x6, 4);
    let x5506: BytePoly_4 = bigint_nondet_rem!(ctx, x5504, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x5505, x6, 8), x5506, 8), x5504, 8),
        32515,
        2,
    )?;
    let x5507: BytePoly_8 = bigint_mul!(x5494, x5506, 8);
    let x5508: BytePoly_9 = bigint_nondet_quot!(ctx, x5507, x6, 9);
    let x5509: BytePoly_4 = bigint_nondet_rem!(ctx, x5507, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5508, x6, 13), x5509, 13),
            x5507,
            13
        ),
        73156,
        4,
    )?;
    let x5510: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x5509, x5500, 4), 4), x6, 4);
    let x5511: BytePoly_4 = bigint_nondet_quot!(ctx, x5510, x6, 4);
    let x5512: BytePoly_4 = bigint_nondet_rem!(ctx, x5510, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x5511, x6, 8), x5512, 8), x5510, 8),
        32515,
        2,
    )?;
    let x5513: BytePoly_1 = bigint_nondet_rem!(ctx, x5451, x2, 1);
    let x5514: BytePoly_5 = bigint_nondet_quot!(ctx, x5451, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x5514, x2, 6), x5513, 6), x5451, 6),
        40643,
        4,
    )?;
    let x5515: BytePoly_1 = bigint_sub!(x3, x5513, 1);
    eqz(ctx, &bigint_mul!(x5513, x5515, 2), 8131, 2)?;
    let x5516: BytePoly_4 = bigint_add!(bigint_sub!(x5506, x5476, 4), x6, 4);
    let x5517: BytePoly_4 = bigint_nondet_inv!(ctx, x5516, x6, 4);
    let x5518: BytePoly_8 = bigint_mul!(x5516, x5517, 8);
    let x5519: BytePoly_9 = bigint_nondet_quot!(ctx, x5518, x6, 9);
    let x5520: BytePoly_4 = bigint_nondet_rem!(ctx, x5518, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5519, x6, 13), x5520, 13),
            x5518,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x5520, x1, 4), 34, 1)?;
    let x5521: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x5512, x5478, 4), x6, 4), x5517, 8);
    let x5522: BytePoly_9 = bigint_nondet_quot!(ctx, x5521, x6, 9);
    let x5523: BytePoly_4 = bigint_nondet_rem!(ctx, x5521, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5522, x6, 13), x5523, 13),
            x5521,
            13
        ),
        73156,
        4,
    )?;
    let x5524: BytePoly_8 = bigint_add!(bigint_sub!(x5478, bigint_mul!(x5523, x5476, 8), 8), x6, 8);
    let x5525: BytePoly_8 = bigint_nondet_quot!(ctx, x5524, x6, 8);
    let x5526: BytePoly_4 = bigint_nondet_rem!(ctx, x5524, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5525, x6, 12), x5526, 12),
            x5524,
            12
        ),
        65028,
        4,
    )?;
    let x5527: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x5523, x5523, 8), x5476, 8), x6, 8),
            x5506,
            8
        ),
        x6,
        8
    );
    let x5528: BytePoly_9 = bigint_nondet_quot!(ctx, x5527, x6, 9);
    let x5529: BytePoly_4 = bigint_nondet_rem!(ctx, x5527, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5528, x6, 13), x5529, 13),
            x5527,
            13
        ),
        73156,
        4,
    )?;
    let x5530: BytePoly_8 = bigint_mul!(x5523, x5529, 8);
    let x5531: BytePoly_9 = bigint_nondet_quot!(ctx, x5530, x6, 9);
    let x5532: BytePoly_4 = bigint_nondet_rem!(ctx, x5530, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5531, x6, 13), x5532, 13),
            x5530,
            13
        ),
        73156,
        4,
    )?;
    let x5533: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x5532, x5526, 4), 4), x6, 4);
    let x5534: BytePoly_4 = bigint_nondet_quot!(ctx, x5533, x6, 4);
    let x5535: BytePoly_4 = bigint_nondet_rem!(ctx, x5533, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x5534, x6, 8), x5535, 8), x5533, 8),
        32515,
        2,
    )?;
    let x5536: BytePoly_5 = bigint_add!(
        bigint_mul!(x5529, x5513, 5),
        bigint_mul!(x5476, x5515, 5),
        5
    );
    let x5537: BytePoly_5 = bigint_add!(
        bigint_mul!(x5535, x5513, 5),
        bigint_mul!(x5478, x5515, 5),
        5
    );
    let x5538: BytePoly_6 = bigint_nondet_quot!(ctx, x5536, x6, 6);
    let x5539: BytePoly_4 = bigint_nondet_rem!(ctx, x5536, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5538, x6, 10), x5539, 10),
            x5536,
            10
        ),
        48771,
        4,
    )?;
    let x5540: BytePoly_6 = bigint_nondet_quot!(ctx, x5537, x6, 6);
    let x5541: BytePoly_4 = bigint_nondet_rem!(ctx, x5537, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5540, x6, 10), x5541, 10),
            x5537,
            10
        ),
        48771,
        4,
    )?;
    let x5542: BytePoly_8 = bigint_mul!(x5506, x5506, 8);
    let x5543: BytePoly_9 = bigint_nondet_quot!(ctx, x5542, x6, 9);
    let x5544: BytePoly_4 = bigint_nondet_rem!(ctx, x5542, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5543, x6, 13), x5544, 13),
            x5542,
            13
        ),
        73156,
        4,
    )?;
    let x5545: BytePoly_5 = bigint_add!(bigint_mul!(x5544, x0, 5), x5, 5);
    let x5546: BytePoly_6 = bigint_nondet_quot!(ctx, x5545, x6, 6);
    let x5547: BytePoly_4 = bigint_nondet_rem!(ctx, x5545, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5546, x6, 10), x5547, 10),
            x5545,
            10
        ),
        48771,
        4,
    )?;
    let x5548: BytePoly_4 = bigint_add!(x5512, x5512, 4);
    let x5549: BytePoly_4 = bigint_nondet_quot!(ctx, x5548, x6, 4);
    let x5550: BytePoly_4 = bigint_nondet_rem!(ctx, x5548, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x5549, x6, 8), x5550, 8), x5548, 8),
        32515,
        2,
    )?;
    let x5551: BytePoly_4 = bigint_nondet_inv!(ctx, x5550, x6, 4);
    let x5552: BytePoly_8 = bigint_mul!(x5550, x5551, 8);
    let x5553: BytePoly_9 = bigint_nondet_quot!(ctx, x5552, x6, 9);
    let x5554: BytePoly_4 = bigint_nondet_rem!(ctx, x5552, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5553, x6, 13), x5554, 13),
            x5552,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x5554, x3, 4), 34, 1)?;
    let x5555: BytePoly_8 = bigint_mul!(x5547, x5551, 8);
    let x5556: BytePoly_9 = bigint_nondet_quot!(ctx, x5555, x6, 9);
    let x5557: BytePoly_4 = bigint_nondet_rem!(ctx, x5555, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5556, x6, 13), x5557, 13),
            x5555,
            13
        ),
        73156,
        4,
    )?;
    let x5558: BytePoly_8 = bigint_mul!(x5557, x5506, 8);
    let x5559: BytePoly_9 = bigint_nondet_quot!(ctx, x5558, x6, 9);
    let x5560: BytePoly_4 = bigint_nondet_rem!(ctx, x5558, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5559, x6, 13), x5560, 13),
            x5558,
            13
        ),
        73156,
        4,
    )?;
    let x5561: BytePoly_4 = bigint_add!(bigint_sub!(x5512, x5560, 4), x6, 4);
    let x5562: BytePoly_4 = bigint_nondet_quot!(ctx, x5561, x6, 4);
    let x5563: BytePoly_4 = bigint_nondet_rem!(ctx, x5561, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x5562, x6, 8), x5563, 8), x5561, 8),
        32515,
        2,
    )?;
    let x5564: BytePoly_8 = bigint_mul!(x5557, x5557, 8);
    let x5565: BytePoly_9 = bigint_nondet_quot!(ctx, x5564, x6, 9);
    let x5566: BytePoly_4 = bigint_nondet_rem!(ctx, x5564, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5565, x6, 13), x5566, 13),
            x5564,
            13
        ),
        73156,
        4,
    )?;
    let x5567: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x5566, x5506, 4), x6, 4), x5506, 4),
        x6,
        4
    );
    let x5568: BytePoly_4 = bigint_nondet_quot!(ctx, x5567, x6, 4);
    let x5569: BytePoly_4 = bigint_nondet_rem!(ctx, x5567, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x5568, x6, 8), x5569, 8), x5567, 8),
        32515,
        2,
    )?;
    let x5570: BytePoly_8 = bigint_mul!(x5557, x5569, 8);
    let x5571: BytePoly_9 = bigint_nondet_quot!(ctx, x5570, x6, 9);
    let x5572: BytePoly_4 = bigint_nondet_rem!(ctx, x5570, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5571, x6, 13), x5572, 13),
            x5570,
            13
        ),
        73156,
        4,
    )?;
    let x5573: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x5572, x5563, 4), 4), x6, 4);
    let x5574: BytePoly_4 = bigint_nondet_quot!(ctx, x5573, x6, 4);
    let x5575: BytePoly_4 = bigint_nondet_rem!(ctx, x5573, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x5574, x6, 8), x5575, 8), x5573, 8),
        32515,
        2,
    )?;
    let x5576: BytePoly_1 = bigint_nondet_rem!(ctx, x5514, x2, 1);
    let x5577: BytePoly_5 = bigint_nondet_quot!(ctx, x5514, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x5577, x2, 6), x5576, 6), x5514, 6),
        40643,
        4,
    )?;
    let x5578: BytePoly_1 = bigint_sub!(x3, x5576, 1);
    eqz(ctx, &bigint_mul!(x5576, x5578, 2), 8131, 2)?;
    let x5579: BytePoly_4 = bigint_add!(bigint_sub!(x5569, x5539, 4), x6, 4);
    let x5580: BytePoly_4 = bigint_nondet_inv!(ctx, x5579, x6, 4);
    let x5581: BytePoly_8 = bigint_mul!(x5579, x5580, 8);
    let x5582: BytePoly_9 = bigint_nondet_quot!(ctx, x5581, x6, 9);
    let x5583: BytePoly_4 = bigint_nondet_rem!(ctx, x5581, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5582, x6, 13), x5583, 13),
            x5581,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x5583, x1, 4), 34, 1)?;
    let x5584: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x5575, x5541, 4), x6, 4), x5580, 8);
    let x5585: BytePoly_9 = bigint_nondet_quot!(ctx, x5584, x6, 9);
    let x5586: BytePoly_4 = bigint_nondet_rem!(ctx, x5584, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5585, x6, 13), x5586, 13),
            x5584,
            13
        ),
        73156,
        4,
    )?;
    let x5587: BytePoly_8 = bigint_add!(bigint_sub!(x5541, bigint_mul!(x5586, x5539, 8), 8), x6, 8);
    let x5588: BytePoly_8 = bigint_nondet_quot!(ctx, x5587, x6, 8);
    let x5589: BytePoly_4 = bigint_nondet_rem!(ctx, x5587, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5588, x6, 12), x5589, 12),
            x5587,
            12
        ),
        65028,
        4,
    )?;
    let x5590: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x5586, x5586, 8), x5539, 8), x6, 8),
            x5569,
            8
        ),
        x6,
        8
    );
    let x5591: BytePoly_9 = bigint_nondet_quot!(ctx, x5590, x6, 9);
    let x5592: BytePoly_4 = bigint_nondet_rem!(ctx, x5590, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5591, x6, 13), x5592, 13),
            x5590,
            13
        ),
        73156,
        4,
    )?;
    let x5593: BytePoly_8 = bigint_mul!(x5586, x5592, 8);
    let x5594: BytePoly_9 = bigint_nondet_quot!(ctx, x5593, x6, 9);
    let x5595: BytePoly_4 = bigint_nondet_rem!(ctx, x5593, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5594, x6, 13), x5595, 13),
            x5593,
            13
        ),
        73156,
        4,
    )?;
    let x5596: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x5595, x5589, 4), 4), x6, 4);
    let x5597: BytePoly_4 = bigint_nondet_quot!(ctx, x5596, x6, 4);
    let x5598: BytePoly_4 = bigint_nondet_rem!(ctx, x5596, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x5597, x6, 8), x5598, 8), x5596, 8),
        32515,
        2,
    )?;
    let x5599: BytePoly_5 = bigint_add!(
        bigint_mul!(x5592, x5576, 5),
        bigint_mul!(x5539, x5578, 5),
        5
    );
    let x5600: BytePoly_5 = bigint_add!(
        bigint_mul!(x5598, x5576, 5),
        bigint_mul!(x5541, x5578, 5),
        5
    );
    let x5601: BytePoly_6 = bigint_nondet_quot!(ctx, x5599, x6, 6);
    let x5602: BytePoly_4 = bigint_nondet_rem!(ctx, x5599, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5601, x6, 10), x5602, 10),
            x5599,
            10
        ),
        48771,
        4,
    )?;
    let x5603: BytePoly_6 = bigint_nondet_quot!(ctx, x5600, x6, 6);
    let x5604: BytePoly_4 = bigint_nondet_rem!(ctx, x5600, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5603, x6, 10), x5604, 10),
            x5600,
            10
        ),
        48771,
        4,
    )?;
    let x5605: BytePoly_8 = bigint_mul!(x5569, x5569, 8);
    let x5606: BytePoly_9 = bigint_nondet_quot!(ctx, x5605, x6, 9);
    let x5607: BytePoly_4 = bigint_nondet_rem!(ctx, x5605, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5606, x6, 13), x5607, 13),
            x5605,
            13
        ),
        73156,
        4,
    )?;
    let x5608: BytePoly_5 = bigint_add!(bigint_mul!(x5607, x0, 5), x5, 5);
    let x5609: BytePoly_6 = bigint_nondet_quot!(ctx, x5608, x6, 6);
    let x5610: BytePoly_4 = bigint_nondet_rem!(ctx, x5608, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5609, x6, 10), x5610, 10),
            x5608,
            10
        ),
        48771,
        4,
    )?;
    let x5611: BytePoly_4 = bigint_add!(x5575, x5575, 4);
    let x5612: BytePoly_4 = bigint_nondet_quot!(ctx, x5611, x6, 4);
    let x5613: BytePoly_4 = bigint_nondet_rem!(ctx, x5611, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x5612, x6, 8), x5613, 8), x5611, 8),
        32515,
        2,
    )?;
    let x5614: BytePoly_4 = bigint_nondet_inv!(ctx, x5613, x6, 4);
    let x5615: BytePoly_8 = bigint_mul!(x5613, x5614, 8);
    let x5616: BytePoly_9 = bigint_nondet_quot!(ctx, x5615, x6, 9);
    let x5617: BytePoly_4 = bigint_nondet_rem!(ctx, x5615, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5616, x6, 13), x5617, 13),
            x5615,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x5617, x3, 4), 34, 1)?;
    let x5618: BytePoly_8 = bigint_mul!(x5610, x5614, 8);
    let x5619: BytePoly_9 = bigint_nondet_quot!(ctx, x5618, x6, 9);
    let x5620: BytePoly_4 = bigint_nondet_rem!(ctx, x5618, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5619, x6, 13), x5620, 13),
            x5618,
            13
        ),
        73156,
        4,
    )?;
    let x5621: BytePoly_8 = bigint_mul!(x5620, x5569, 8);
    let x5622: BytePoly_9 = bigint_nondet_quot!(ctx, x5621, x6, 9);
    let x5623: BytePoly_4 = bigint_nondet_rem!(ctx, x5621, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5622, x6, 13), x5623, 13),
            x5621,
            13
        ),
        73156,
        4,
    )?;
    let x5624: BytePoly_4 = bigint_add!(bigint_sub!(x5575, x5623, 4), x6, 4);
    let x5625: BytePoly_4 = bigint_nondet_quot!(ctx, x5624, x6, 4);
    let x5626: BytePoly_4 = bigint_nondet_rem!(ctx, x5624, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x5625, x6, 8), x5626, 8), x5624, 8),
        32515,
        2,
    )?;
    let x5627: BytePoly_8 = bigint_mul!(x5620, x5620, 8);
    let x5628: BytePoly_9 = bigint_nondet_quot!(ctx, x5627, x6, 9);
    let x5629: BytePoly_4 = bigint_nondet_rem!(ctx, x5627, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5628, x6, 13), x5629, 13),
            x5627,
            13
        ),
        73156,
        4,
    )?;
    let x5630: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x5629, x5569, 4), x6, 4), x5569, 4),
        x6,
        4
    );
    let x5631: BytePoly_4 = bigint_nondet_quot!(ctx, x5630, x6, 4);
    let x5632: BytePoly_4 = bigint_nondet_rem!(ctx, x5630, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x5631, x6, 8), x5632, 8), x5630, 8),
        32515,
        2,
    )?;
    let x5633: BytePoly_8 = bigint_mul!(x5620, x5632, 8);
    let x5634: BytePoly_9 = bigint_nondet_quot!(ctx, x5633, x6, 9);
    let x5635: BytePoly_4 = bigint_nondet_rem!(ctx, x5633, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5634, x6, 13), x5635, 13),
            x5633,
            13
        ),
        73156,
        4,
    )?;
    let x5636: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x5635, x5626, 4), 4), x6, 4);
    let x5637: BytePoly_4 = bigint_nondet_quot!(ctx, x5636, x6, 4);
    let x5638: BytePoly_4 = bigint_nondet_rem!(ctx, x5636, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x5637, x6, 8), x5638, 8), x5636, 8),
        32515,
        2,
    )?;
    let x5639: BytePoly_1 = bigint_nondet_rem!(ctx, x5577, x2, 1);
    let x5640: BytePoly_5 = bigint_nondet_quot!(ctx, x5577, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x5640, x2, 6), x5639, 6), x5577, 6),
        40643,
        4,
    )?;
    let x5641: BytePoly_1 = bigint_sub!(x3, x5639, 1);
    eqz(ctx, &bigint_mul!(x5639, x5641, 2), 8131, 2)?;
    let x5642: BytePoly_4 = bigint_add!(bigint_sub!(x5632, x5602, 4), x6, 4);
    let x5643: BytePoly_4 = bigint_nondet_inv!(ctx, x5642, x6, 4);
    let x5644: BytePoly_8 = bigint_mul!(x5642, x5643, 8);
    let x5645: BytePoly_9 = bigint_nondet_quot!(ctx, x5644, x6, 9);
    let x5646: BytePoly_4 = bigint_nondet_rem!(ctx, x5644, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5645, x6, 13), x5646, 13),
            x5644,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x5646, x1, 4), 34, 1)?;
    let x5647: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x5638, x5604, 4), x6, 4), x5643, 8);
    let x5648: BytePoly_9 = bigint_nondet_quot!(ctx, x5647, x6, 9);
    let x5649: BytePoly_4 = bigint_nondet_rem!(ctx, x5647, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5648, x6, 13), x5649, 13),
            x5647,
            13
        ),
        73156,
        4,
    )?;
    let x5650: BytePoly_8 = bigint_add!(bigint_sub!(x5604, bigint_mul!(x5649, x5602, 8), 8), x6, 8);
    let x5651: BytePoly_8 = bigint_nondet_quot!(ctx, x5650, x6, 8);
    let x5652: BytePoly_4 = bigint_nondet_rem!(ctx, x5650, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5651, x6, 12), x5652, 12),
            x5650,
            12
        ),
        65028,
        4,
    )?;
    let x5653: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x5649, x5649, 8), x5602, 8), x6, 8),
            x5632,
            8
        ),
        x6,
        8
    );
    let x5654: BytePoly_9 = bigint_nondet_quot!(ctx, x5653, x6, 9);
    let x5655: BytePoly_4 = bigint_nondet_rem!(ctx, x5653, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5654, x6, 13), x5655, 13),
            x5653,
            13
        ),
        73156,
        4,
    )?;
    let x5656: BytePoly_8 = bigint_mul!(x5649, x5655, 8);
    let x5657: BytePoly_9 = bigint_nondet_quot!(ctx, x5656, x6, 9);
    let x5658: BytePoly_4 = bigint_nondet_rem!(ctx, x5656, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5657, x6, 13), x5658, 13),
            x5656,
            13
        ),
        73156,
        4,
    )?;
    let x5659: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x5658, x5652, 4), 4), x6, 4);
    let x5660: BytePoly_4 = bigint_nondet_quot!(ctx, x5659, x6, 4);
    let x5661: BytePoly_4 = bigint_nondet_rem!(ctx, x5659, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x5660, x6, 8), x5661, 8), x5659, 8),
        32515,
        2,
    )?;
    let x5662: BytePoly_5 = bigint_add!(
        bigint_mul!(x5655, x5639, 5),
        bigint_mul!(x5602, x5641, 5),
        5
    );
    let x5663: BytePoly_5 = bigint_add!(
        bigint_mul!(x5661, x5639, 5),
        bigint_mul!(x5604, x5641, 5),
        5
    );
    let x5664: BytePoly_6 = bigint_nondet_quot!(ctx, x5662, x6, 6);
    let x5665: BytePoly_4 = bigint_nondet_rem!(ctx, x5662, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5664, x6, 10), x5665, 10),
            x5662,
            10
        ),
        48771,
        4,
    )?;
    let x5666: BytePoly_6 = bigint_nondet_quot!(ctx, x5663, x6, 6);
    let x5667: BytePoly_4 = bigint_nondet_rem!(ctx, x5663, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5666, x6, 10), x5667, 10),
            x5663,
            10
        ),
        48771,
        4,
    )?;
    let x5668: BytePoly_8 = bigint_mul!(x5632, x5632, 8);
    let x5669: BytePoly_9 = bigint_nondet_quot!(ctx, x5668, x6, 9);
    let x5670: BytePoly_4 = bigint_nondet_rem!(ctx, x5668, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5669, x6, 13), x5670, 13),
            x5668,
            13
        ),
        73156,
        4,
    )?;
    let x5671: BytePoly_5 = bigint_add!(bigint_mul!(x5670, x0, 5), x5, 5);
    let x5672: BytePoly_6 = bigint_nondet_quot!(ctx, x5671, x6, 6);
    let x5673: BytePoly_4 = bigint_nondet_rem!(ctx, x5671, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5672, x6, 10), x5673, 10),
            x5671,
            10
        ),
        48771,
        4,
    )?;
    let x5674: BytePoly_4 = bigint_add!(x5638, x5638, 4);
    let x5675: BytePoly_4 = bigint_nondet_quot!(ctx, x5674, x6, 4);
    let x5676: BytePoly_4 = bigint_nondet_rem!(ctx, x5674, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x5675, x6, 8), x5676, 8), x5674, 8),
        32515,
        2,
    )?;
    let x5677: BytePoly_4 = bigint_nondet_inv!(ctx, x5676, x6, 4);
    let x5678: BytePoly_8 = bigint_mul!(x5676, x5677, 8);
    let x5679: BytePoly_9 = bigint_nondet_quot!(ctx, x5678, x6, 9);
    let x5680: BytePoly_4 = bigint_nondet_rem!(ctx, x5678, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5679, x6, 13), x5680, 13),
            x5678,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x5680, x3, 4), 34, 1)?;
    let x5681: BytePoly_8 = bigint_mul!(x5673, x5677, 8);
    let x5682: BytePoly_9 = bigint_nondet_quot!(ctx, x5681, x6, 9);
    let x5683: BytePoly_4 = bigint_nondet_rem!(ctx, x5681, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5682, x6, 13), x5683, 13),
            x5681,
            13
        ),
        73156,
        4,
    )?;
    let x5684: BytePoly_8 = bigint_mul!(x5683, x5632, 8);
    let x5685: BytePoly_9 = bigint_nondet_quot!(ctx, x5684, x6, 9);
    let x5686: BytePoly_4 = bigint_nondet_rem!(ctx, x5684, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5685, x6, 13), x5686, 13),
            x5684,
            13
        ),
        73156,
        4,
    )?;
    let x5687: BytePoly_4 = bigint_add!(bigint_sub!(x5638, x5686, 4), x6, 4);
    let x5688: BytePoly_4 = bigint_nondet_quot!(ctx, x5687, x6, 4);
    let x5689: BytePoly_4 = bigint_nondet_rem!(ctx, x5687, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x5688, x6, 8), x5689, 8), x5687, 8),
        32515,
        2,
    )?;
    let x5690: BytePoly_8 = bigint_mul!(x5683, x5683, 8);
    let x5691: BytePoly_9 = bigint_nondet_quot!(ctx, x5690, x6, 9);
    let x5692: BytePoly_4 = bigint_nondet_rem!(ctx, x5690, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5691, x6, 13), x5692, 13),
            x5690,
            13
        ),
        73156,
        4,
    )?;
    let x5693: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x5692, x5632, 4), x6, 4), x5632, 4),
        x6,
        4
    );
    let x5694: BytePoly_4 = bigint_nondet_quot!(ctx, x5693, x6, 4);
    let x5695: BytePoly_4 = bigint_nondet_rem!(ctx, x5693, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x5694, x6, 8), x5695, 8), x5693, 8),
        32515,
        2,
    )?;
    let x5696: BytePoly_8 = bigint_mul!(x5683, x5695, 8);
    let x5697: BytePoly_9 = bigint_nondet_quot!(ctx, x5696, x6, 9);
    let x5698: BytePoly_4 = bigint_nondet_rem!(ctx, x5696, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5697, x6, 13), x5698, 13),
            x5696,
            13
        ),
        73156,
        4,
    )?;
    let x5699: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x5698, x5689, 4), 4), x6, 4);
    let x5700: BytePoly_4 = bigint_nondet_quot!(ctx, x5699, x6, 4);
    let x5701: BytePoly_4 = bigint_nondet_rem!(ctx, x5699, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x5700, x6, 8), x5701, 8), x5699, 8),
        32515,
        2,
    )?;
    let x5702: BytePoly_1 = bigint_nondet_rem!(ctx, x5640, x2, 1);
    let x5703: BytePoly_5 = bigint_nondet_quot!(ctx, x5640, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x5703, x2, 6), x5702, 6), x5640, 6),
        40643,
        4,
    )?;
    let x5704: BytePoly_1 = bigint_sub!(x3, x5702, 1);
    eqz(ctx, &bigint_mul!(x5702, x5704, 2), 8131, 2)?;
    let x5705: BytePoly_4 = bigint_add!(bigint_sub!(x5695, x5665, 4), x6, 4);
    let x5706: BytePoly_4 = bigint_nondet_inv!(ctx, x5705, x6, 4);
    let x5707: BytePoly_8 = bigint_mul!(x5705, x5706, 8);
    let x5708: BytePoly_9 = bigint_nondet_quot!(ctx, x5707, x6, 9);
    let x5709: BytePoly_4 = bigint_nondet_rem!(ctx, x5707, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5708, x6, 13), x5709, 13),
            x5707,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x5709, x1, 4), 34, 1)?;
    let x5710: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x5701, x5667, 4), x6, 4), x5706, 8);
    let x5711: BytePoly_9 = bigint_nondet_quot!(ctx, x5710, x6, 9);
    let x5712: BytePoly_4 = bigint_nondet_rem!(ctx, x5710, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5711, x6, 13), x5712, 13),
            x5710,
            13
        ),
        73156,
        4,
    )?;
    let x5713: BytePoly_8 = bigint_add!(bigint_sub!(x5667, bigint_mul!(x5712, x5665, 8), 8), x6, 8);
    let x5714: BytePoly_8 = bigint_nondet_quot!(ctx, x5713, x6, 8);
    let x5715: BytePoly_4 = bigint_nondet_rem!(ctx, x5713, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5714, x6, 12), x5715, 12),
            x5713,
            12
        ),
        65028,
        4,
    )?;
    let x5716: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x5712, x5712, 8), x5665, 8), x6, 8),
            x5695,
            8
        ),
        x6,
        8
    );
    let x5717: BytePoly_9 = bigint_nondet_quot!(ctx, x5716, x6, 9);
    let x5718: BytePoly_4 = bigint_nondet_rem!(ctx, x5716, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5717, x6, 13), x5718, 13),
            x5716,
            13
        ),
        73156,
        4,
    )?;
    let x5719: BytePoly_8 = bigint_mul!(x5712, x5718, 8);
    let x5720: BytePoly_9 = bigint_nondet_quot!(ctx, x5719, x6, 9);
    let x5721: BytePoly_4 = bigint_nondet_rem!(ctx, x5719, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5720, x6, 13), x5721, 13),
            x5719,
            13
        ),
        73156,
        4,
    )?;
    let x5722: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x5721, x5715, 4), 4), x6, 4);
    let x5723: BytePoly_4 = bigint_nondet_quot!(ctx, x5722, x6, 4);
    let x5724: BytePoly_4 = bigint_nondet_rem!(ctx, x5722, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x5723, x6, 8), x5724, 8), x5722, 8),
        32515,
        2,
    )?;
    let x5725: BytePoly_5 = bigint_add!(
        bigint_mul!(x5718, x5702, 5),
        bigint_mul!(x5665, x5704, 5),
        5
    );
    let x5726: BytePoly_5 = bigint_add!(
        bigint_mul!(x5724, x5702, 5),
        bigint_mul!(x5667, x5704, 5),
        5
    );
    let x5727: BytePoly_6 = bigint_nondet_quot!(ctx, x5725, x6, 6);
    let x5728: BytePoly_4 = bigint_nondet_rem!(ctx, x5725, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5727, x6, 10), x5728, 10),
            x5725,
            10
        ),
        48771,
        4,
    )?;
    let x5729: BytePoly_6 = bigint_nondet_quot!(ctx, x5726, x6, 6);
    let x5730: BytePoly_4 = bigint_nondet_rem!(ctx, x5726, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5729, x6, 10), x5730, 10),
            x5726,
            10
        ),
        48771,
        4,
    )?;
    let x5731: BytePoly_8 = bigint_mul!(x5695, x5695, 8);
    let x5732: BytePoly_9 = bigint_nondet_quot!(ctx, x5731, x6, 9);
    let x5733: BytePoly_4 = bigint_nondet_rem!(ctx, x5731, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5732, x6, 13), x5733, 13),
            x5731,
            13
        ),
        73156,
        4,
    )?;
    let x5734: BytePoly_5 = bigint_add!(bigint_mul!(x5733, x0, 5), x5, 5);
    let x5735: BytePoly_6 = bigint_nondet_quot!(ctx, x5734, x6, 6);
    let x5736: BytePoly_4 = bigint_nondet_rem!(ctx, x5734, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5735, x6, 10), x5736, 10),
            x5734,
            10
        ),
        48771,
        4,
    )?;
    let x5737: BytePoly_4 = bigint_add!(x5701, x5701, 4);
    let x5738: BytePoly_4 = bigint_nondet_quot!(ctx, x5737, x6, 4);
    let x5739: BytePoly_4 = bigint_nondet_rem!(ctx, x5737, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x5738, x6, 8), x5739, 8), x5737, 8),
        32515,
        2,
    )?;
    let x5740: BytePoly_4 = bigint_nondet_inv!(ctx, x5739, x6, 4);
    let x5741: BytePoly_8 = bigint_mul!(x5739, x5740, 8);
    let x5742: BytePoly_9 = bigint_nondet_quot!(ctx, x5741, x6, 9);
    let x5743: BytePoly_4 = bigint_nondet_rem!(ctx, x5741, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5742, x6, 13), x5743, 13),
            x5741,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x5743, x3, 4), 34, 1)?;
    let x5744: BytePoly_8 = bigint_mul!(x5736, x5740, 8);
    let x5745: BytePoly_9 = bigint_nondet_quot!(ctx, x5744, x6, 9);
    let x5746: BytePoly_4 = bigint_nondet_rem!(ctx, x5744, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5745, x6, 13), x5746, 13),
            x5744,
            13
        ),
        73156,
        4,
    )?;
    let x5747: BytePoly_8 = bigint_mul!(x5746, x5695, 8);
    let x5748: BytePoly_9 = bigint_nondet_quot!(ctx, x5747, x6, 9);
    let x5749: BytePoly_4 = bigint_nondet_rem!(ctx, x5747, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5748, x6, 13), x5749, 13),
            x5747,
            13
        ),
        73156,
        4,
    )?;
    let x5750: BytePoly_4 = bigint_add!(bigint_sub!(x5701, x5749, 4), x6, 4);
    let x5751: BytePoly_4 = bigint_nondet_quot!(ctx, x5750, x6, 4);
    let x5752: BytePoly_4 = bigint_nondet_rem!(ctx, x5750, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x5751, x6, 8), x5752, 8), x5750, 8),
        32515,
        2,
    )?;
    let x5753: BytePoly_8 = bigint_mul!(x5746, x5746, 8);
    let x5754: BytePoly_9 = bigint_nondet_quot!(ctx, x5753, x6, 9);
    let x5755: BytePoly_4 = bigint_nondet_rem!(ctx, x5753, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5754, x6, 13), x5755, 13),
            x5753,
            13
        ),
        73156,
        4,
    )?;
    let x5756: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x5755, x5695, 4), x6, 4), x5695, 4),
        x6,
        4
    );
    let x5757: BytePoly_4 = bigint_nondet_quot!(ctx, x5756, x6, 4);
    let x5758: BytePoly_4 = bigint_nondet_rem!(ctx, x5756, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x5757, x6, 8), x5758, 8), x5756, 8),
        32515,
        2,
    )?;
    let x5759: BytePoly_8 = bigint_mul!(x5746, x5758, 8);
    let x5760: BytePoly_9 = bigint_nondet_quot!(ctx, x5759, x6, 9);
    let x5761: BytePoly_4 = bigint_nondet_rem!(ctx, x5759, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5760, x6, 13), x5761, 13),
            x5759,
            13
        ),
        73156,
        4,
    )?;
    let x5762: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x5761, x5752, 4), 4), x6, 4);
    let x5763: BytePoly_4 = bigint_nondet_quot!(ctx, x5762, x6, 4);
    let x5764: BytePoly_4 = bigint_nondet_rem!(ctx, x5762, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x5763, x6, 8), x5764, 8), x5762, 8),
        32515,
        2,
    )?;
    let x5765: BytePoly_1 = bigint_nondet_rem!(ctx, x5703, x2, 1);
    let x5766: BytePoly_5 = bigint_nondet_quot!(ctx, x5703, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x5766, x2, 6), x5765, 6), x5703, 6),
        40643,
        4,
    )?;
    let x5767: BytePoly_1 = bigint_sub!(x3, x5765, 1);
    eqz(ctx, &bigint_mul!(x5765, x5767, 2), 8131, 2)?;
    let x5768: BytePoly_4 = bigint_add!(bigint_sub!(x5758, x5728, 4), x6, 4);
    let x5769: BytePoly_4 = bigint_nondet_inv!(ctx, x5768, x6, 4);
    let x5770: BytePoly_8 = bigint_mul!(x5768, x5769, 8);
    let x5771: BytePoly_9 = bigint_nondet_quot!(ctx, x5770, x6, 9);
    let x5772: BytePoly_4 = bigint_nondet_rem!(ctx, x5770, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5771, x6, 13), x5772, 13),
            x5770,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x5772, x1, 4), 34, 1)?;
    let x5773: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x5764, x5730, 4), x6, 4), x5769, 8);
    let x5774: BytePoly_9 = bigint_nondet_quot!(ctx, x5773, x6, 9);
    let x5775: BytePoly_4 = bigint_nondet_rem!(ctx, x5773, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5774, x6, 13), x5775, 13),
            x5773,
            13
        ),
        73156,
        4,
    )?;
    let x5776: BytePoly_8 = bigint_add!(bigint_sub!(x5730, bigint_mul!(x5775, x5728, 8), 8), x6, 8);
    let x5777: BytePoly_8 = bigint_nondet_quot!(ctx, x5776, x6, 8);
    let x5778: BytePoly_4 = bigint_nondet_rem!(ctx, x5776, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5777, x6, 12), x5778, 12),
            x5776,
            12
        ),
        65028,
        4,
    )?;
    let x5779: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x5775, x5775, 8), x5728, 8), x6, 8),
            x5758,
            8
        ),
        x6,
        8
    );
    let x5780: BytePoly_9 = bigint_nondet_quot!(ctx, x5779, x6, 9);
    let x5781: BytePoly_4 = bigint_nondet_rem!(ctx, x5779, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5780, x6, 13), x5781, 13),
            x5779,
            13
        ),
        73156,
        4,
    )?;
    let x5782: BytePoly_8 = bigint_mul!(x5775, x5781, 8);
    let x5783: BytePoly_9 = bigint_nondet_quot!(ctx, x5782, x6, 9);
    let x5784: BytePoly_4 = bigint_nondet_rem!(ctx, x5782, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5783, x6, 13), x5784, 13),
            x5782,
            13
        ),
        73156,
        4,
    )?;
    let x5785: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x5784, x5778, 4), 4), x6, 4);
    let x5786: BytePoly_4 = bigint_nondet_quot!(ctx, x5785, x6, 4);
    let x5787: BytePoly_4 = bigint_nondet_rem!(ctx, x5785, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x5786, x6, 8), x5787, 8), x5785, 8),
        32515,
        2,
    )?;
    let x5788: BytePoly_5 = bigint_add!(
        bigint_mul!(x5781, x5765, 5),
        bigint_mul!(x5728, x5767, 5),
        5
    );
    let x5789: BytePoly_5 = bigint_add!(
        bigint_mul!(x5787, x5765, 5),
        bigint_mul!(x5730, x5767, 5),
        5
    );
    let x5790: BytePoly_6 = bigint_nondet_quot!(ctx, x5788, x6, 6);
    let x5791: BytePoly_4 = bigint_nondet_rem!(ctx, x5788, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5790, x6, 10), x5791, 10),
            x5788,
            10
        ),
        48771,
        4,
    )?;
    let x5792: BytePoly_6 = bigint_nondet_quot!(ctx, x5789, x6, 6);
    let x5793: BytePoly_4 = bigint_nondet_rem!(ctx, x5789, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5792, x6, 10), x5793, 10),
            x5789,
            10
        ),
        48771,
        4,
    )?;
    let x5794: BytePoly_8 = bigint_mul!(x5758, x5758, 8);
    let x5795: BytePoly_9 = bigint_nondet_quot!(ctx, x5794, x6, 9);
    let x5796: BytePoly_4 = bigint_nondet_rem!(ctx, x5794, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5795, x6, 13), x5796, 13),
            x5794,
            13
        ),
        73156,
        4,
    )?;
    let x5797: BytePoly_5 = bigint_add!(bigint_mul!(x5796, x0, 5), x5, 5);
    let x5798: BytePoly_6 = bigint_nondet_quot!(ctx, x5797, x6, 6);
    let x5799: BytePoly_4 = bigint_nondet_rem!(ctx, x5797, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5798, x6, 10), x5799, 10),
            x5797,
            10
        ),
        48771,
        4,
    )?;
    let x5800: BytePoly_4 = bigint_add!(x5764, x5764, 4);
    let x5801: BytePoly_4 = bigint_nondet_quot!(ctx, x5800, x6, 4);
    let x5802: BytePoly_4 = bigint_nondet_rem!(ctx, x5800, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x5801, x6, 8), x5802, 8), x5800, 8),
        32515,
        2,
    )?;
    let x5803: BytePoly_4 = bigint_nondet_inv!(ctx, x5802, x6, 4);
    let x5804: BytePoly_8 = bigint_mul!(x5802, x5803, 8);
    let x5805: BytePoly_9 = bigint_nondet_quot!(ctx, x5804, x6, 9);
    let x5806: BytePoly_4 = bigint_nondet_rem!(ctx, x5804, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5805, x6, 13), x5806, 13),
            x5804,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x5806, x3, 4), 34, 1)?;
    let x5807: BytePoly_8 = bigint_mul!(x5799, x5803, 8);
    let x5808: BytePoly_9 = bigint_nondet_quot!(ctx, x5807, x6, 9);
    let x5809: BytePoly_4 = bigint_nondet_rem!(ctx, x5807, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5808, x6, 13), x5809, 13),
            x5807,
            13
        ),
        73156,
        4,
    )?;
    let x5810: BytePoly_8 = bigint_mul!(x5809, x5758, 8);
    let x5811: BytePoly_9 = bigint_nondet_quot!(ctx, x5810, x6, 9);
    let x5812: BytePoly_4 = bigint_nondet_rem!(ctx, x5810, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5811, x6, 13), x5812, 13),
            x5810,
            13
        ),
        73156,
        4,
    )?;
    let x5813: BytePoly_4 = bigint_add!(bigint_sub!(x5764, x5812, 4), x6, 4);
    let x5814: BytePoly_4 = bigint_nondet_quot!(ctx, x5813, x6, 4);
    let x5815: BytePoly_4 = bigint_nondet_rem!(ctx, x5813, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x5814, x6, 8), x5815, 8), x5813, 8),
        32515,
        2,
    )?;
    let x5816: BytePoly_8 = bigint_mul!(x5809, x5809, 8);
    let x5817: BytePoly_9 = bigint_nondet_quot!(ctx, x5816, x6, 9);
    let x5818: BytePoly_4 = bigint_nondet_rem!(ctx, x5816, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5817, x6, 13), x5818, 13),
            x5816,
            13
        ),
        73156,
        4,
    )?;
    let x5819: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x5818, x5758, 4), x6, 4), x5758, 4),
        x6,
        4
    );
    let x5820: BytePoly_4 = bigint_nondet_quot!(ctx, x5819, x6, 4);
    let x5821: BytePoly_4 = bigint_nondet_rem!(ctx, x5819, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x5820, x6, 8), x5821, 8), x5819, 8),
        32515,
        2,
    )?;
    let x5822: BytePoly_8 = bigint_mul!(x5809, x5821, 8);
    let x5823: BytePoly_9 = bigint_nondet_quot!(ctx, x5822, x6, 9);
    let x5824: BytePoly_4 = bigint_nondet_rem!(ctx, x5822, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5823, x6, 13), x5824, 13),
            x5822,
            13
        ),
        73156,
        4,
    )?;
    let x5825: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x5824, x5815, 4), 4), x6, 4);
    let x5826: BytePoly_4 = bigint_nondet_quot!(ctx, x5825, x6, 4);
    let x5827: BytePoly_4 = bigint_nondet_rem!(ctx, x5825, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x5826, x6, 8), x5827, 8), x5825, 8),
        32515,
        2,
    )?;
    let x5828: BytePoly_1 = bigint_nondet_rem!(ctx, x5766, x2, 1);
    let x5829: BytePoly_5 = bigint_nondet_quot!(ctx, x5766, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x5829, x2, 6), x5828, 6), x5766, 6),
        40643,
        4,
    )?;
    let x5830: BytePoly_1 = bigint_sub!(x3, x5828, 1);
    eqz(ctx, &bigint_mul!(x5828, x5830, 2), 8131, 2)?;
    let x5831: BytePoly_4 = bigint_add!(bigint_sub!(x5821, x5791, 4), x6, 4);
    let x5832: BytePoly_4 = bigint_nondet_inv!(ctx, x5831, x6, 4);
    let x5833: BytePoly_8 = bigint_mul!(x5831, x5832, 8);
    let x5834: BytePoly_9 = bigint_nondet_quot!(ctx, x5833, x6, 9);
    let x5835: BytePoly_4 = bigint_nondet_rem!(ctx, x5833, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5834, x6, 13), x5835, 13),
            x5833,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x5835, x1, 4), 34, 1)?;
    let x5836: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x5827, x5793, 4), x6, 4), x5832, 8);
    let x5837: BytePoly_9 = bigint_nondet_quot!(ctx, x5836, x6, 9);
    let x5838: BytePoly_4 = bigint_nondet_rem!(ctx, x5836, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5837, x6, 13), x5838, 13),
            x5836,
            13
        ),
        73156,
        4,
    )?;
    let x5839: BytePoly_8 = bigint_add!(bigint_sub!(x5793, bigint_mul!(x5838, x5791, 8), 8), x6, 8);
    let x5840: BytePoly_8 = bigint_nondet_quot!(ctx, x5839, x6, 8);
    let x5841: BytePoly_4 = bigint_nondet_rem!(ctx, x5839, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5840, x6, 12), x5841, 12),
            x5839,
            12
        ),
        65028,
        4,
    )?;
    let x5842: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x5838, x5838, 8), x5791, 8), x6, 8),
            x5821,
            8
        ),
        x6,
        8
    );
    let x5843: BytePoly_9 = bigint_nondet_quot!(ctx, x5842, x6, 9);
    let x5844: BytePoly_4 = bigint_nondet_rem!(ctx, x5842, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5843, x6, 13), x5844, 13),
            x5842,
            13
        ),
        73156,
        4,
    )?;
    let x5845: BytePoly_8 = bigint_mul!(x5838, x5844, 8);
    let x5846: BytePoly_9 = bigint_nondet_quot!(ctx, x5845, x6, 9);
    let x5847: BytePoly_4 = bigint_nondet_rem!(ctx, x5845, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5846, x6, 13), x5847, 13),
            x5845,
            13
        ),
        73156,
        4,
    )?;
    let x5848: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x5847, x5841, 4), 4), x6, 4);
    let x5849: BytePoly_4 = bigint_nondet_quot!(ctx, x5848, x6, 4);
    let x5850: BytePoly_4 = bigint_nondet_rem!(ctx, x5848, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x5849, x6, 8), x5850, 8), x5848, 8),
        32515,
        2,
    )?;
    let x5851: BytePoly_5 = bigint_add!(
        bigint_mul!(x5844, x5828, 5),
        bigint_mul!(x5791, x5830, 5),
        5
    );
    let x5852: BytePoly_5 = bigint_add!(
        bigint_mul!(x5850, x5828, 5),
        bigint_mul!(x5793, x5830, 5),
        5
    );
    let x5853: BytePoly_6 = bigint_nondet_quot!(ctx, x5851, x6, 6);
    let x5854: BytePoly_4 = bigint_nondet_rem!(ctx, x5851, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5853, x6, 10), x5854, 10),
            x5851,
            10
        ),
        48771,
        4,
    )?;
    let x5855: BytePoly_6 = bigint_nondet_quot!(ctx, x5852, x6, 6);
    let x5856: BytePoly_4 = bigint_nondet_rem!(ctx, x5852, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5855, x6, 10), x5856, 10),
            x5852,
            10
        ),
        48771,
        4,
    )?;
    let x5857: BytePoly_8 = bigint_mul!(x5821, x5821, 8);
    let x5858: BytePoly_9 = bigint_nondet_quot!(ctx, x5857, x6, 9);
    let x5859: BytePoly_4 = bigint_nondet_rem!(ctx, x5857, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5858, x6, 13), x5859, 13),
            x5857,
            13
        ),
        73156,
        4,
    )?;
    let x5860: BytePoly_5 = bigint_add!(bigint_mul!(x5859, x0, 5), x5, 5);
    let x5861: BytePoly_6 = bigint_nondet_quot!(ctx, x5860, x6, 6);
    let x5862: BytePoly_4 = bigint_nondet_rem!(ctx, x5860, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5861, x6, 10), x5862, 10),
            x5860,
            10
        ),
        48771,
        4,
    )?;
    let x5863: BytePoly_4 = bigint_add!(x5827, x5827, 4);
    let x5864: BytePoly_4 = bigint_nondet_quot!(ctx, x5863, x6, 4);
    let x5865: BytePoly_4 = bigint_nondet_rem!(ctx, x5863, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x5864, x6, 8), x5865, 8), x5863, 8),
        32515,
        2,
    )?;
    let x5866: BytePoly_4 = bigint_nondet_inv!(ctx, x5865, x6, 4);
    let x5867: BytePoly_8 = bigint_mul!(x5865, x5866, 8);
    let x5868: BytePoly_9 = bigint_nondet_quot!(ctx, x5867, x6, 9);
    let x5869: BytePoly_4 = bigint_nondet_rem!(ctx, x5867, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5868, x6, 13), x5869, 13),
            x5867,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x5869, x3, 4), 34, 1)?;
    let x5870: BytePoly_8 = bigint_mul!(x5862, x5866, 8);
    let x5871: BytePoly_9 = bigint_nondet_quot!(ctx, x5870, x6, 9);
    let x5872: BytePoly_4 = bigint_nondet_rem!(ctx, x5870, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5871, x6, 13), x5872, 13),
            x5870,
            13
        ),
        73156,
        4,
    )?;
    let x5873: BytePoly_8 = bigint_mul!(x5872, x5821, 8);
    let x5874: BytePoly_9 = bigint_nondet_quot!(ctx, x5873, x6, 9);
    let x5875: BytePoly_4 = bigint_nondet_rem!(ctx, x5873, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5874, x6, 13), x5875, 13),
            x5873,
            13
        ),
        73156,
        4,
    )?;
    let x5876: BytePoly_4 = bigint_add!(bigint_sub!(x5827, x5875, 4), x6, 4);
    let x5877: BytePoly_4 = bigint_nondet_quot!(ctx, x5876, x6, 4);
    let x5878: BytePoly_4 = bigint_nondet_rem!(ctx, x5876, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x5877, x6, 8), x5878, 8), x5876, 8),
        32515,
        2,
    )?;
    let x5879: BytePoly_8 = bigint_mul!(x5872, x5872, 8);
    let x5880: BytePoly_9 = bigint_nondet_quot!(ctx, x5879, x6, 9);
    let x5881: BytePoly_4 = bigint_nondet_rem!(ctx, x5879, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5880, x6, 13), x5881, 13),
            x5879,
            13
        ),
        73156,
        4,
    )?;
    let x5882: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x5881, x5821, 4), x6, 4), x5821, 4),
        x6,
        4
    );
    let x5883: BytePoly_4 = bigint_nondet_quot!(ctx, x5882, x6, 4);
    let x5884: BytePoly_4 = bigint_nondet_rem!(ctx, x5882, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x5883, x6, 8), x5884, 8), x5882, 8),
        32515,
        2,
    )?;
    let x5885: BytePoly_8 = bigint_mul!(x5872, x5884, 8);
    let x5886: BytePoly_9 = bigint_nondet_quot!(ctx, x5885, x6, 9);
    let x5887: BytePoly_4 = bigint_nondet_rem!(ctx, x5885, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5886, x6, 13), x5887, 13),
            x5885,
            13
        ),
        73156,
        4,
    )?;
    let x5888: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x5887, x5878, 4), 4), x6, 4);
    let x5889: BytePoly_4 = bigint_nondet_quot!(ctx, x5888, x6, 4);
    let x5890: BytePoly_4 = bigint_nondet_rem!(ctx, x5888, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x5889, x6, 8), x5890, 8), x5888, 8),
        32515,
        2,
    )?;
    let x5891: BytePoly_1 = bigint_nondet_rem!(ctx, x5829, x2, 1);
    let x5892: BytePoly_5 = bigint_nondet_quot!(ctx, x5829, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x5892, x2, 6), x5891, 6), x5829, 6),
        40643,
        4,
    )?;
    let x5893: BytePoly_1 = bigint_sub!(x3, x5891, 1);
    eqz(ctx, &bigint_mul!(x5891, x5893, 2), 8131, 2)?;
    let x5894: BytePoly_4 = bigint_add!(bigint_sub!(x5884, x5854, 4), x6, 4);
    let x5895: BytePoly_4 = bigint_nondet_inv!(ctx, x5894, x6, 4);
    let x5896: BytePoly_8 = bigint_mul!(x5894, x5895, 8);
    let x5897: BytePoly_9 = bigint_nondet_quot!(ctx, x5896, x6, 9);
    let x5898: BytePoly_4 = bigint_nondet_rem!(ctx, x5896, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5897, x6, 13), x5898, 13),
            x5896,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x5898, x1, 4), 34, 1)?;
    let x5899: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x5890, x5856, 4), x6, 4), x5895, 8);
    let x5900: BytePoly_9 = bigint_nondet_quot!(ctx, x5899, x6, 9);
    let x5901: BytePoly_4 = bigint_nondet_rem!(ctx, x5899, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5900, x6, 13), x5901, 13),
            x5899,
            13
        ),
        73156,
        4,
    )?;
    let x5902: BytePoly_8 = bigint_add!(bigint_sub!(x5856, bigint_mul!(x5901, x5854, 8), 8), x6, 8);
    let x5903: BytePoly_8 = bigint_nondet_quot!(ctx, x5902, x6, 8);
    let x5904: BytePoly_4 = bigint_nondet_rem!(ctx, x5902, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5903, x6, 12), x5904, 12),
            x5902,
            12
        ),
        65028,
        4,
    )?;
    let x5905: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x5901, x5901, 8), x5854, 8), x6, 8),
            x5884,
            8
        ),
        x6,
        8
    );
    let x5906: BytePoly_9 = bigint_nondet_quot!(ctx, x5905, x6, 9);
    let x5907: BytePoly_4 = bigint_nondet_rem!(ctx, x5905, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5906, x6, 13), x5907, 13),
            x5905,
            13
        ),
        73156,
        4,
    )?;
    let x5908: BytePoly_8 = bigint_mul!(x5901, x5907, 8);
    let x5909: BytePoly_9 = bigint_nondet_quot!(ctx, x5908, x6, 9);
    let x5910: BytePoly_4 = bigint_nondet_rem!(ctx, x5908, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5909, x6, 13), x5910, 13),
            x5908,
            13
        ),
        73156,
        4,
    )?;
    let x5911: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x5910, x5904, 4), 4), x6, 4);
    let x5912: BytePoly_4 = bigint_nondet_quot!(ctx, x5911, x6, 4);
    let x5913: BytePoly_4 = bigint_nondet_rem!(ctx, x5911, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x5912, x6, 8), x5913, 8), x5911, 8),
        32515,
        2,
    )?;
    let x5914: BytePoly_5 = bigint_add!(
        bigint_mul!(x5907, x5891, 5),
        bigint_mul!(x5854, x5893, 5),
        5
    );
    let x5915: BytePoly_5 = bigint_add!(
        bigint_mul!(x5913, x5891, 5),
        bigint_mul!(x5856, x5893, 5),
        5
    );
    let x5916: BytePoly_6 = bigint_nondet_quot!(ctx, x5914, x6, 6);
    let x5917: BytePoly_4 = bigint_nondet_rem!(ctx, x5914, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5916, x6, 10), x5917, 10),
            x5914,
            10
        ),
        48771,
        4,
    )?;
    let x5918: BytePoly_6 = bigint_nondet_quot!(ctx, x5915, x6, 6);
    let x5919: BytePoly_4 = bigint_nondet_rem!(ctx, x5915, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5918, x6, 10), x5919, 10),
            x5915,
            10
        ),
        48771,
        4,
    )?;
    let x5920: BytePoly_8 = bigint_mul!(x5884, x5884, 8);
    let x5921: BytePoly_9 = bigint_nondet_quot!(ctx, x5920, x6, 9);
    let x5922: BytePoly_4 = bigint_nondet_rem!(ctx, x5920, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5921, x6, 13), x5922, 13),
            x5920,
            13
        ),
        73156,
        4,
    )?;
    let x5923: BytePoly_5 = bigint_add!(bigint_mul!(x5922, x0, 5), x5, 5);
    let x5924: BytePoly_6 = bigint_nondet_quot!(ctx, x5923, x6, 6);
    let x5925: BytePoly_4 = bigint_nondet_rem!(ctx, x5923, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5924, x6, 10), x5925, 10),
            x5923,
            10
        ),
        48771,
        4,
    )?;
    let x5926: BytePoly_4 = bigint_add!(x5890, x5890, 4);
    let x5927: BytePoly_4 = bigint_nondet_quot!(ctx, x5926, x6, 4);
    let x5928: BytePoly_4 = bigint_nondet_rem!(ctx, x5926, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x5927, x6, 8), x5928, 8), x5926, 8),
        32515,
        2,
    )?;
    let x5929: BytePoly_4 = bigint_nondet_inv!(ctx, x5928, x6, 4);
    let x5930: BytePoly_8 = bigint_mul!(x5928, x5929, 8);
    let x5931: BytePoly_9 = bigint_nondet_quot!(ctx, x5930, x6, 9);
    let x5932: BytePoly_4 = bigint_nondet_rem!(ctx, x5930, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5931, x6, 13), x5932, 13),
            x5930,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x5932, x3, 4), 34, 1)?;
    let x5933: BytePoly_8 = bigint_mul!(x5925, x5929, 8);
    let x5934: BytePoly_9 = bigint_nondet_quot!(ctx, x5933, x6, 9);
    let x5935: BytePoly_4 = bigint_nondet_rem!(ctx, x5933, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5934, x6, 13), x5935, 13),
            x5933,
            13
        ),
        73156,
        4,
    )?;
    let x5936: BytePoly_8 = bigint_mul!(x5935, x5884, 8);
    let x5937: BytePoly_9 = bigint_nondet_quot!(ctx, x5936, x6, 9);
    let x5938: BytePoly_4 = bigint_nondet_rem!(ctx, x5936, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5937, x6, 13), x5938, 13),
            x5936,
            13
        ),
        73156,
        4,
    )?;
    let x5939: BytePoly_4 = bigint_add!(bigint_sub!(x5890, x5938, 4), x6, 4);
    let x5940: BytePoly_4 = bigint_nondet_quot!(ctx, x5939, x6, 4);
    let x5941: BytePoly_4 = bigint_nondet_rem!(ctx, x5939, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x5940, x6, 8), x5941, 8), x5939, 8),
        32515,
        2,
    )?;
    let x5942: BytePoly_8 = bigint_mul!(x5935, x5935, 8);
    let x5943: BytePoly_9 = bigint_nondet_quot!(ctx, x5942, x6, 9);
    let x5944: BytePoly_4 = bigint_nondet_rem!(ctx, x5942, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5943, x6, 13), x5944, 13),
            x5942,
            13
        ),
        73156,
        4,
    )?;
    let x5945: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x5944, x5884, 4), x6, 4), x5884, 4),
        x6,
        4
    );
    let x5946: BytePoly_4 = bigint_nondet_quot!(ctx, x5945, x6, 4);
    let x5947: BytePoly_4 = bigint_nondet_rem!(ctx, x5945, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x5946, x6, 8), x5947, 8), x5945, 8),
        32515,
        2,
    )?;
    let x5948: BytePoly_8 = bigint_mul!(x5935, x5947, 8);
    let x5949: BytePoly_9 = bigint_nondet_quot!(ctx, x5948, x6, 9);
    let x5950: BytePoly_4 = bigint_nondet_rem!(ctx, x5948, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5949, x6, 13), x5950, 13),
            x5948,
            13
        ),
        73156,
        4,
    )?;
    let x5951: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x5950, x5941, 4), 4), x6, 4);
    let x5952: BytePoly_4 = bigint_nondet_quot!(ctx, x5951, x6, 4);
    let x5953: BytePoly_4 = bigint_nondet_rem!(ctx, x5951, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x5952, x6, 8), x5953, 8), x5951, 8),
        32515,
        2,
    )?;
    let x5954: BytePoly_1 = bigint_nondet_rem!(ctx, x5892, x2, 1);
    let x5955: BytePoly_5 = bigint_nondet_quot!(ctx, x5892, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x5955, x2, 6), x5954, 6), x5892, 6),
        40643,
        4,
    )?;
    let x5956: BytePoly_1 = bigint_sub!(x3, x5954, 1);
    eqz(ctx, &bigint_mul!(x5954, x5956, 2), 8131, 2)?;
    let x5957: BytePoly_4 = bigint_add!(bigint_sub!(x5947, x5917, 4), x6, 4);
    let x5958: BytePoly_4 = bigint_nondet_inv!(ctx, x5957, x6, 4);
    let x5959: BytePoly_8 = bigint_mul!(x5957, x5958, 8);
    let x5960: BytePoly_9 = bigint_nondet_quot!(ctx, x5959, x6, 9);
    let x5961: BytePoly_4 = bigint_nondet_rem!(ctx, x5959, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5960, x6, 13), x5961, 13),
            x5959,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x5961, x1, 4), 34, 1)?;
    let x5962: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x5953, x5919, 4), x6, 4), x5958, 8);
    let x5963: BytePoly_9 = bigint_nondet_quot!(ctx, x5962, x6, 9);
    let x5964: BytePoly_4 = bigint_nondet_rem!(ctx, x5962, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5963, x6, 13), x5964, 13),
            x5962,
            13
        ),
        73156,
        4,
    )?;
    let x5965: BytePoly_8 = bigint_add!(bigint_sub!(x5919, bigint_mul!(x5964, x5917, 8), 8), x6, 8);
    let x5966: BytePoly_8 = bigint_nondet_quot!(ctx, x5965, x6, 8);
    let x5967: BytePoly_4 = bigint_nondet_rem!(ctx, x5965, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5966, x6, 12), x5967, 12),
            x5965,
            12
        ),
        65028,
        4,
    )?;
    let x5968: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x5964, x5964, 8), x5917, 8), x6, 8),
            x5947,
            8
        ),
        x6,
        8
    );
    let x5969: BytePoly_9 = bigint_nondet_quot!(ctx, x5968, x6, 9);
    let x5970: BytePoly_4 = bigint_nondet_rem!(ctx, x5968, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5969, x6, 13), x5970, 13),
            x5968,
            13
        ),
        73156,
        4,
    )?;
    let x5971: BytePoly_8 = bigint_mul!(x5964, x5970, 8);
    let x5972: BytePoly_9 = bigint_nondet_quot!(ctx, x5971, x6, 9);
    let x5973: BytePoly_4 = bigint_nondet_rem!(ctx, x5971, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5972, x6, 13), x5973, 13),
            x5971,
            13
        ),
        73156,
        4,
    )?;
    let x5974: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x5973, x5967, 4), 4), x6, 4);
    let x5975: BytePoly_4 = bigint_nondet_quot!(ctx, x5974, x6, 4);
    let x5976: BytePoly_4 = bigint_nondet_rem!(ctx, x5974, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x5975, x6, 8), x5976, 8), x5974, 8),
        32515,
        2,
    )?;
    let x5977: BytePoly_5 = bigint_add!(
        bigint_mul!(x5970, x5954, 5),
        bigint_mul!(x5917, x5956, 5),
        5
    );
    let x5978: BytePoly_5 = bigint_add!(
        bigint_mul!(x5976, x5954, 5),
        bigint_mul!(x5919, x5956, 5),
        5
    );
    let x5979: BytePoly_6 = bigint_nondet_quot!(ctx, x5977, x6, 6);
    let x5980: BytePoly_4 = bigint_nondet_rem!(ctx, x5977, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5979, x6, 10), x5980, 10),
            x5977,
            10
        ),
        48771,
        4,
    )?;
    let x5981: BytePoly_6 = bigint_nondet_quot!(ctx, x5978, x6, 6);
    let x5982: BytePoly_4 = bigint_nondet_rem!(ctx, x5978, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5981, x6, 10), x5982, 10),
            x5978,
            10
        ),
        48771,
        4,
    )?;
    let x5983: BytePoly_8 = bigint_mul!(x5947, x5947, 8);
    let x5984: BytePoly_9 = bigint_nondet_quot!(ctx, x5983, x6, 9);
    let x5985: BytePoly_4 = bigint_nondet_rem!(ctx, x5983, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5984, x6, 13), x5985, 13),
            x5983,
            13
        ),
        73156,
        4,
    )?;
    let x5986: BytePoly_5 = bigint_add!(bigint_mul!(x5985, x0, 5), x5, 5);
    let x5987: BytePoly_6 = bigint_nondet_quot!(ctx, x5986, x6, 6);
    let x5988: BytePoly_4 = bigint_nondet_rem!(ctx, x5986, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5987, x6, 10), x5988, 10),
            x5986,
            10
        ),
        48771,
        4,
    )?;
    let x5989: BytePoly_4 = bigint_add!(x5953, x5953, 4);
    let x5990: BytePoly_4 = bigint_nondet_quot!(ctx, x5989, x6, 4);
    let x5991: BytePoly_4 = bigint_nondet_rem!(ctx, x5989, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x5990, x6, 8), x5991, 8), x5989, 8),
        32515,
        2,
    )?;
    let x5992: BytePoly_4 = bigint_nondet_inv!(ctx, x5991, x6, 4);
    let x5993: BytePoly_8 = bigint_mul!(x5991, x5992, 8);
    let x5994: BytePoly_9 = bigint_nondet_quot!(ctx, x5993, x6, 9);
    let x5995: BytePoly_4 = bigint_nondet_rem!(ctx, x5993, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5994, x6, 13), x5995, 13),
            x5993,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x5995, x3, 4), 34, 1)?;
    let x5996: BytePoly_8 = bigint_mul!(x5988, x5992, 8);
    let x5997: BytePoly_9 = bigint_nondet_quot!(ctx, x5996, x6, 9);
    let x5998: BytePoly_4 = bigint_nondet_rem!(ctx, x5996, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5997, x6, 13), x5998, 13),
            x5996,
            13
        ),
        73156,
        4,
    )?;
    let x5999: BytePoly_8 = bigint_mul!(x5998, x5947, 8);
    let x6000: BytePoly_9 = bigint_nondet_quot!(ctx, x5999, x6, 9);
    let x6001: BytePoly_4 = bigint_nondet_rem!(ctx, x5999, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6000, x6, 13), x6001, 13),
            x5999,
            13
        ),
        73156,
        4,
    )?;
    let x6002: BytePoly_4 = bigint_add!(bigint_sub!(x5953, x6001, 4), x6, 4);
    let x6003: BytePoly_4 = bigint_nondet_quot!(ctx, x6002, x6, 4);
    let x6004: BytePoly_4 = bigint_nondet_rem!(ctx, x6002, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x6003, x6, 8), x6004, 8), x6002, 8),
        32515,
        2,
    )?;
    let x6005: BytePoly_8 = bigint_mul!(x5998, x5998, 8);
    let x6006: BytePoly_9 = bigint_nondet_quot!(ctx, x6005, x6, 9);
    let x6007: BytePoly_4 = bigint_nondet_rem!(ctx, x6005, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6006, x6, 13), x6007, 13),
            x6005,
            13
        ),
        73156,
        4,
    )?;
    let x6008: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x6007, x5947, 4), x6, 4), x5947, 4),
        x6,
        4
    );
    let x6009: BytePoly_4 = bigint_nondet_quot!(ctx, x6008, x6, 4);
    let x6010: BytePoly_4 = bigint_nondet_rem!(ctx, x6008, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x6009, x6, 8), x6010, 8), x6008, 8),
        32515,
        2,
    )?;
    let x6011: BytePoly_8 = bigint_mul!(x5998, x6010, 8);
    let x6012: BytePoly_9 = bigint_nondet_quot!(ctx, x6011, x6, 9);
    let x6013: BytePoly_4 = bigint_nondet_rem!(ctx, x6011, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6012, x6, 13), x6013, 13),
            x6011,
            13
        ),
        73156,
        4,
    )?;
    let x6014: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x6013, x6004, 4), 4), x6, 4);
    let x6015: BytePoly_4 = bigint_nondet_quot!(ctx, x6014, x6, 4);
    let x6016: BytePoly_4 = bigint_nondet_rem!(ctx, x6014, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x6015, x6, 8), x6016, 8), x6014, 8),
        32515,
        2,
    )?;
    let x6017: BytePoly_1 = bigint_nondet_rem!(ctx, x5955, x2, 1);
    let x6018: BytePoly_5 = bigint_nondet_quot!(ctx, x5955, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x6018, x2, 6), x6017, 6), x5955, 6),
        40643,
        4,
    )?;
    let x6019: BytePoly_1 = bigint_sub!(x3, x6017, 1);
    eqz(ctx, &bigint_mul!(x6017, x6019, 2), 8131, 2)?;
    let x6020: BytePoly_4 = bigint_add!(bigint_sub!(x6010, x5980, 4), x6, 4);
    let x6021: BytePoly_4 = bigint_nondet_inv!(ctx, x6020, x6, 4);
    let x6022: BytePoly_8 = bigint_mul!(x6020, x6021, 8);
    let x6023: BytePoly_9 = bigint_nondet_quot!(ctx, x6022, x6, 9);
    let x6024: BytePoly_4 = bigint_nondet_rem!(ctx, x6022, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6023, x6, 13), x6024, 13),
            x6022,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x6024, x1, 4), 34, 1)?;
    let x6025: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x6016, x5982, 4), x6, 4), x6021, 8);
    let x6026: BytePoly_9 = bigint_nondet_quot!(ctx, x6025, x6, 9);
    let x6027: BytePoly_4 = bigint_nondet_rem!(ctx, x6025, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6026, x6, 13), x6027, 13),
            x6025,
            13
        ),
        73156,
        4,
    )?;
    let x6028: BytePoly_8 = bigint_add!(bigint_sub!(x5982, bigint_mul!(x6027, x5980, 8), 8), x6, 8);
    let x6029: BytePoly_8 = bigint_nondet_quot!(ctx, x6028, x6, 8);
    let x6030: BytePoly_4 = bigint_nondet_rem!(ctx, x6028, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6029, x6, 12), x6030, 12),
            x6028,
            12
        ),
        65028,
        4,
    )?;
    let x6031: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x6027, x6027, 8), x5980, 8), x6, 8),
            x6010,
            8
        ),
        x6,
        8
    );
    let x6032: BytePoly_9 = bigint_nondet_quot!(ctx, x6031, x6, 9);
    let x6033: BytePoly_4 = bigint_nondet_rem!(ctx, x6031, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6032, x6, 13), x6033, 13),
            x6031,
            13
        ),
        73156,
        4,
    )?;
    let x6034: BytePoly_8 = bigint_mul!(x6027, x6033, 8);
    let x6035: BytePoly_9 = bigint_nondet_quot!(ctx, x6034, x6, 9);
    let x6036: BytePoly_4 = bigint_nondet_rem!(ctx, x6034, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6035, x6, 13), x6036, 13),
            x6034,
            13
        ),
        73156,
        4,
    )?;
    let x6037: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x6036, x6030, 4), 4), x6, 4);
    let x6038: BytePoly_4 = bigint_nondet_quot!(ctx, x6037, x6, 4);
    let x6039: BytePoly_4 = bigint_nondet_rem!(ctx, x6037, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x6038, x6, 8), x6039, 8), x6037, 8),
        32515,
        2,
    )?;
    let x6040: BytePoly_5 = bigint_add!(
        bigint_mul!(x6033, x6017, 5),
        bigint_mul!(x5980, x6019, 5),
        5
    );
    let x6041: BytePoly_5 = bigint_add!(
        bigint_mul!(x6039, x6017, 5),
        bigint_mul!(x5982, x6019, 5),
        5
    );
    let x6042: BytePoly_6 = bigint_nondet_quot!(ctx, x6040, x6, 6);
    let x6043: BytePoly_4 = bigint_nondet_rem!(ctx, x6040, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6042, x6, 10), x6043, 10),
            x6040,
            10
        ),
        48771,
        4,
    )?;
    let x6044: BytePoly_6 = bigint_nondet_quot!(ctx, x6041, x6, 6);
    let x6045: BytePoly_4 = bigint_nondet_rem!(ctx, x6041, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6044, x6, 10), x6045, 10),
            x6041,
            10
        ),
        48771,
        4,
    )?;
    let x6046: BytePoly_8 = bigint_mul!(x6010, x6010, 8);
    let x6047: BytePoly_9 = bigint_nondet_quot!(ctx, x6046, x6, 9);
    let x6048: BytePoly_4 = bigint_nondet_rem!(ctx, x6046, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6047, x6, 13), x6048, 13),
            x6046,
            13
        ),
        73156,
        4,
    )?;
    let x6049: BytePoly_5 = bigint_add!(bigint_mul!(x6048, x0, 5), x5, 5);
    let x6050: BytePoly_6 = bigint_nondet_quot!(ctx, x6049, x6, 6);
    let x6051: BytePoly_4 = bigint_nondet_rem!(ctx, x6049, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6050, x6, 10), x6051, 10),
            x6049,
            10
        ),
        48771,
        4,
    )?;
    let x6052: BytePoly_4 = bigint_add!(x6016, x6016, 4);
    let x6053: BytePoly_4 = bigint_nondet_quot!(ctx, x6052, x6, 4);
    let x6054: BytePoly_4 = bigint_nondet_rem!(ctx, x6052, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x6053, x6, 8), x6054, 8), x6052, 8),
        32515,
        2,
    )?;
    let x6055: BytePoly_4 = bigint_nondet_inv!(ctx, x6054, x6, 4);
    let x6056: BytePoly_8 = bigint_mul!(x6054, x6055, 8);
    let x6057: BytePoly_9 = bigint_nondet_quot!(ctx, x6056, x6, 9);
    let x6058: BytePoly_4 = bigint_nondet_rem!(ctx, x6056, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6057, x6, 13), x6058, 13),
            x6056,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x6058, x3, 4), 34, 1)?;
    let x6059: BytePoly_8 = bigint_mul!(x6051, x6055, 8);
    let x6060: BytePoly_9 = bigint_nondet_quot!(ctx, x6059, x6, 9);
    let x6061: BytePoly_4 = bigint_nondet_rem!(ctx, x6059, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6060, x6, 13), x6061, 13),
            x6059,
            13
        ),
        73156,
        4,
    )?;
    let x6062: BytePoly_8 = bigint_mul!(x6061, x6010, 8);
    let x6063: BytePoly_9 = bigint_nondet_quot!(ctx, x6062, x6, 9);
    let x6064: BytePoly_4 = bigint_nondet_rem!(ctx, x6062, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6063, x6, 13), x6064, 13),
            x6062,
            13
        ),
        73156,
        4,
    )?;
    let x6065: BytePoly_4 = bigint_add!(bigint_sub!(x6016, x6064, 4), x6, 4);
    let x6066: BytePoly_4 = bigint_nondet_quot!(ctx, x6065, x6, 4);
    let x6067: BytePoly_4 = bigint_nondet_rem!(ctx, x6065, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x6066, x6, 8), x6067, 8), x6065, 8),
        32515,
        2,
    )?;
    let x6068: BytePoly_8 = bigint_mul!(x6061, x6061, 8);
    let x6069: BytePoly_9 = bigint_nondet_quot!(ctx, x6068, x6, 9);
    let x6070: BytePoly_4 = bigint_nondet_rem!(ctx, x6068, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6069, x6, 13), x6070, 13),
            x6068,
            13
        ),
        73156,
        4,
    )?;
    let x6071: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x6070, x6010, 4), x6, 4), x6010, 4),
        x6,
        4
    );
    let x6072: BytePoly_4 = bigint_nondet_quot!(ctx, x6071, x6, 4);
    let x6073: BytePoly_4 = bigint_nondet_rem!(ctx, x6071, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x6072, x6, 8), x6073, 8), x6071, 8),
        32515,
        2,
    )?;
    let x6074: BytePoly_8 = bigint_mul!(x6061, x6073, 8);
    let x6075: BytePoly_9 = bigint_nondet_quot!(ctx, x6074, x6, 9);
    let x6076: BytePoly_4 = bigint_nondet_rem!(ctx, x6074, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6075, x6, 13), x6076, 13),
            x6074,
            13
        ),
        73156,
        4,
    )?;
    let x6077: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x6076, x6067, 4), 4), x6, 4);
    let x6078: BytePoly_4 = bigint_nondet_quot!(ctx, x6077, x6, 4);
    let x6079: BytePoly_4 = bigint_nondet_rem!(ctx, x6077, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x6078, x6, 8), x6079, 8), x6077, 8),
        32515,
        2,
    )?;
    let x6080: BytePoly_1 = bigint_nondet_rem!(ctx, x6018, x2, 1);
    let x6081: BytePoly_5 = bigint_nondet_quot!(ctx, x6018, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x6081, x2, 6), x6080, 6), x6018, 6),
        40643,
        4,
    )?;
    let x6082: BytePoly_1 = bigint_sub!(x3, x6080, 1);
    eqz(ctx, &bigint_mul!(x6080, x6082, 2), 8131, 2)?;
    let x6083: BytePoly_4 = bigint_add!(bigint_sub!(x6073, x6043, 4), x6, 4);
    let x6084: BytePoly_4 = bigint_nondet_inv!(ctx, x6083, x6, 4);
    let x6085: BytePoly_8 = bigint_mul!(x6083, x6084, 8);
    let x6086: BytePoly_9 = bigint_nondet_quot!(ctx, x6085, x6, 9);
    let x6087: BytePoly_4 = bigint_nondet_rem!(ctx, x6085, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6086, x6, 13), x6087, 13),
            x6085,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x6087, x1, 4), 34, 1)?;
    let x6088: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x6079, x6045, 4), x6, 4), x6084, 8);
    let x6089: BytePoly_9 = bigint_nondet_quot!(ctx, x6088, x6, 9);
    let x6090: BytePoly_4 = bigint_nondet_rem!(ctx, x6088, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6089, x6, 13), x6090, 13),
            x6088,
            13
        ),
        73156,
        4,
    )?;
    let x6091: BytePoly_8 = bigint_add!(bigint_sub!(x6045, bigint_mul!(x6090, x6043, 8), 8), x6, 8);
    let x6092: BytePoly_8 = bigint_nondet_quot!(ctx, x6091, x6, 8);
    let x6093: BytePoly_4 = bigint_nondet_rem!(ctx, x6091, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6092, x6, 12), x6093, 12),
            x6091,
            12
        ),
        65028,
        4,
    )?;
    let x6094: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x6090, x6090, 8), x6043, 8), x6, 8),
            x6073,
            8
        ),
        x6,
        8
    );
    let x6095: BytePoly_9 = bigint_nondet_quot!(ctx, x6094, x6, 9);
    let x6096: BytePoly_4 = bigint_nondet_rem!(ctx, x6094, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6095, x6, 13), x6096, 13),
            x6094,
            13
        ),
        73156,
        4,
    )?;
    let x6097: BytePoly_8 = bigint_mul!(x6090, x6096, 8);
    let x6098: BytePoly_9 = bigint_nondet_quot!(ctx, x6097, x6, 9);
    let x6099: BytePoly_4 = bigint_nondet_rem!(ctx, x6097, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6098, x6, 13), x6099, 13),
            x6097,
            13
        ),
        73156,
        4,
    )?;
    let x6100: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x6099, x6093, 4), 4), x6, 4);
    let x6101: BytePoly_4 = bigint_nondet_quot!(ctx, x6100, x6, 4);
    let x6102: BytePoly_4 = bigint_nondet_rem!(ctx, x6100, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x6101, x6, 8), x6102, 8), x6100, 8),
        32515,
        2,
    )?;
    let x6103: BytePoly_5 = bigint_add!(
        bigint_mul!(x6096, x6080, 5),
        bigint_mul!(x6043, x6082, 5),
        5
    );
    let x6104: BytePoly_5 = bigint_add!(
        bigint_mul!(x6102, x6080, 5),
        bigint_mul!(x6045, x6082, 5),
        5
    );
    let x6105: BytePoly_6 = bigint_nondet_quot!(ctx, x6103, x6, 6);
    let x6106: BytePoly_4 = bigint_nondet_rem!(ctx, x6103, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6105, x6, 10), x6106, 10),
            x6103,
            10
        ),
        48771,
        4,
    )?;
    let x6107: BytePoly_6 = bigint_nondet_quot!(ctx, x6104, x6, 6);
    let x6108: BytePoly_4 = bigint_nondet_rem!(ctx, x6104, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6107, x6, 10), x6108, 10),
            x6104,
            10
        ),
        48771,
        4,
    )?;
    let x6109: BytePoly_8 = bigint_mul!(x6073, x6073, 8);
    let x6110: BytePoly_9 = bigint_nondet_quot!(ctx, x6109, x6, 9);
    let x6111: BytePoly_4 = bigint_nondet_rem!(ctx, x6109, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6110, x6, 13), x6111, 13),
            x6109,
            13
        ),
        73156,
        4,
    )?;
    let x6112: BytePoly_5 = bigint_add!(bigint_mul!(x6111, x0, 5), x5, 5);
    let x6113: BytePoly_6 = bigint_nondet_quot!(ctx, x6112, x6, 6);
    let x6114: BytePoly_4 = bigint_nondet_rem!(ctx, x6112, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6113, x6, 10), x6114, 10),
            x6112,
            10
        ),
        48771,
        4,
    )?;
    let x6115: BytePoly_4 = bigint_add!(x6079, x6079, 4);
    let x6116: BytePoly_4 = bigint_nondet_quot!(ctx, x6115, x6, 4);
    let x6117: BytePoly_4 = bigint_nondet_rem!(ctx, x6115, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x6116, x6, 8), x6117, 8), x6115, 8),
        32515,
        2,
    )?;
    let x6118: BytePoly_4 = bigint_nondet_inv!(ctx, x6117, x6, 4);
    let x6119: BytePoly_8 = bigint_mul!(x6117, x6118, 8);
    let x6120: BytePoly_9 = bigint_nondet_quot!(ctx, x6119, x6, 9);
    let x6121: BytePoly_4 = bigint_nondet_rem!(ctx, x6119, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6120, x6, 13), x6121, 13),
            x6119,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x6121, x3, 4), 34, 1)?;
    let x6122: BytePoly_8 = bigint_mul!(x6114, x6118, 8);
    let x6123: BytePoly_9 = bigint_nondet_quot!(ctx, x6122, x6, 9);
    let x6124: BytePoly_4 = bigint_nondet_rem!(ctx, x6122, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6123, x6, 13), x6124, 13),
            x6122,
            13
        ),
        73156,
        4,
    )?;
    let x6125: BytePoly_8 = bigint_mul!(x6124, x6073, 8);
    let x6126: BytePoly_9 = bigint_nondet_quot!(ctx, x6125, x6, 9);
    let x6127: BytePoly_4 = bigint_nondet_rem!(ctx, x6125, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6126, x6, 13), x6127, 13),
            x6125,
            13
        ),
        73156,
        4,
    )?;
    let x6128: BytePoly_4 = bigint_add!(bigint_sub!(x6079, x6127, 4), x6, 4);
    let x6129: BytePoly_4 = bigint_nondet_quot!(ctx, x6128, x6, 4);
    let x6130: BytePoly_4 = bigint_nondet_rem!(ctx, x6128, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x6129, x6, 8), x6130, 8), x6128, 8),
        32515,
        2,
    )?;
    let x6131: BytePoly_8 = bigint_mul!(x6124, x6124, 8);
    let x6132: BytePoly_9 = bigint_nondet_quot!(ctx, x6131, x6, 9);
    let x6133: BytePoly_4 = bigint_nondet_rem!(ctx, x6131, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6132, x6, 13), x6133, 13),
            x6131,
            13
        ),
        73156,
        4,
    )?;
    let x6134: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x6133, x6073, 4), x6, 4), x6073, 4),
        x6,
        4
    );
    let x6135: BytePoly_4 = bigint_nondet_quot!(ctx, x6134, x6, 4);
    let x6136: BytePoly_4 = bigint_nondet_rem!(ctx, x6134, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x6135, x6, 8), x6136, 8), x6134, 8),
        32515,
        2,
    )?;
    let x6137: BytePoly_8 = bigint_mul!(x6124, x6136, 8);
    let x6138: BytePoly_9 = bigint_nondet_quot!(ctx, x6137, x6, 9);
    let x6139: BytePoly_4 = bigint_nondet_rem!(ctx, x6137, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6138, x6, 13), x6139, 13),
            x6137,
            13
        ),
        73156,
        4,
    )?;
    let x6140: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x6139, x6130, 4), 4), x6, 4);
    let x6141: BytePoly_4 = bigint_nondet_quot!(ctx, x6140, x6, 4);
    let x6142: BytePoly_4 = bigint_nondet_rem!(ctx, x6140, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x6141, x6, 8), x6142, 8), x6140, 8),
        32515,
        2,
    )?;
    let x6143: BytePoly_1 = bigint_nondet_rem!(ctx, x6081, x2, 1);
    let x6144: BytePoly_5 = bigint_nondet_quot!(ctx, x6081, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x6144, x2, 6), x6143, 6), x6081, 6),
        40643,
        4,
    )?;
    let x6145: BytePoly_1 = bigint_sub!(x3, x6143, 1);
    eqz(ctx, &bigint_mul!(x6143, x6145, 2), 8131, 2)?;
    let x6146: BytePoly_4 = bigint_add!(bigint_sub!(x6136, x6106, 4), x6, 4);
    let x6147: BytePoly_4 = bigint_nondet_inv!(ctx, x6146, x6, 4);
    let x6148: BytePoly_8 = bigint_mul!(x6146, x6147, 8);
    let x6149: BytePoly_9 = bigint_nondet_quot!(ctx, x6148, x6, 9);
    let x6150: BytePoly_4 = bigint_nondet_rem!(ctx, x6148, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6149, x6, 13), x6150, 13),
            x6148,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x6150, x1, 4), 34, 1)?;
    let x6151: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x6142, x6108, 4), x6, 4), x6147, 8);
    let x6152: BytePoly_9 = bigint_nondet_quot!(ctx, x6151, x6, 9);
    let x6153: BytePoly_4 = bigint_nondet_rem!(ctx, x6151, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6152, x6, 13), x6153, 13),
            x6151,
            13
        ),
        73156,
        4,
    )?;
    let x6154: BytePoly_8 = bigint_add!(bigint_sub!(x6108, bigint_mul!(x6153, x6106, 8), 8), x6, 8);
    let x6155: BytePoly_8 = bigint_nondet_quot!(ctx, x6154, x6, 8);
    let x6156: BytePoly_4 = bigint_nondet_rem!(ctx, x6154, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6155, x6, 12), x6156, 12),
            x6154,
            12
        ),
        65028,
        4,
    )?;
    let x6157: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x6153, x6153, 8), x6106, 8), x6, 8),
            x6136,
            8
        ),
        x6,
        8
    );
    let x6158: BytePoly_9 = bigint_nondet_quot!(ctx, x6157, x6, 9);
    let x6159: BytePoly_4 = bigint_nondet_rem!(ctx, x6157, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6158, x6, 13), x6159, 13),
            x6157,
            13
        ),
        73156,
        4,
    )?;
    let x6160: BytePoly_8 = bigint_mul!(x6153, x6159, 8);
    let x6161: BytePoly_9 = bigint_nondet_quot!(ctx, x6160, x6, 9);
    let x6162: BytePoly_4 = bigint_nondet_rem!(ctx, x6160, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6161, x6, 13), x6162, 13),
            x6160,
            13
        ),
        73156,
        4,
    )?;
    let x6163: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x6162, x6156, 4), 4), x6, 4);
    let x6164: BytePoly_4 = bigint_nondet_quot!(ctx, x6163, x6, 4);
    let x6165: BytePoly_4 = bigint_nondet_rem!(ctx, x6163, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x6164, x6, 8), x6165, 8), x6163, 8),
        32515,
        2,
    )?;
    let x6166: BytePoly_5 = bigint_add!(
        bigint_mul!(x6159, x6143, 5),
        bigint_mul!(x6106, x6145, 5),
        5
    );
    let x6167: BytePoly_5 = bigint_add!(
        bigint_mul!(x6165, x6143, 5),
        bigint_mul!(x6108, x6145, 5),
        5
    );
    let x6168: BytePoly_6 = bigint_nondet_quot!(ctx, x6166, x6, 6);
    let x6169: BytePoly_4 = bigint_nondet_rem!(ctx, x6166, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6168, x6, 10), x6169, 10),
            x6166,
            10
        ),
        48771,
        4,
    )?;
    let x6170: BytePoly_6 = bigint_nondet_quot!(ctx, x6167, x6, 6);
    let x6171: BytePoly_4 = bigint_nondet_rem!(ctx, x6167, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6170, x6, 10), x6171, 10),
            x6167,
            10
        ),
        48771,
        4,
    )?;
    let x6172: BytePoly_8 = bigint_mul!(x6136, x6136, 8);
    let x6173: BytePoly_9 = bigint_nondet_quot!(ctx, x6172, x6, 9);
    let x6174: BytePoly_4 = bigint_nondet_rem!(ctx, x6172, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6173, x6, 13), x6174, 13),
            x6172,
            13
        ),
        73156,
        4,
    )?;
    let x6175: BytePoly_5 = bigint_add!(bigint_mul!(x6174, x0, 5), x5, 5);
    let x6176: BytePoly_6 = bigint_nondet_quot!(ctx, x6175, x6, 6);
    let x6177: BytePoly_4 = bigint_nondet_rem!(ctx, x6175, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6176, x6, 10), x6177, 10),
            x6175,
            10
        ),
        48771,
        4,
    )?;
    let x6178: BytePoly_4 = bigint_add!(x6142, x6142, 4);
    let x6179: BytePoly_4 = bigint_nondet_quot!(ctx, x6178, x6, 4);
    let x6180: BytePoly_4 = bigint_nondet_rem!(ctx, x6178, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x6179, x6, 8), x6180, 8), x6178, 8),
        32515,
        2,
    )?;
    let x6181: BytePoly_4 = bigint_nondet_inv!(ctx, x6180, x6, 4);
    let x6182: BytePoly_8 = bigint_mul!(x6180, x6181, 8);
    let x6183: BytePoly_9 = bigint_nondet_quot!(ctx, x6182, x6, 9);
    let x6184: BytePoly_4 = bigint_nondet_rem!(ctx, x6182, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6183, x6, 13), x6184, 13),
            x6182,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x6184, x3, 4), 34, 1)?;
    let x6185: BytePoly_8 = bigint_mul!(x6177, x6181, 8);
    let x6186: BytePoly_9 = bigint_nondet_quot!(ctx, x6185, x6, 9);
    let x6187: BytePoly_4 = bigint_nondet_rem!(ctx, x6185, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6186, x6, 13), x6187, 13),
            x6185,
            13
        ),
        73156,
        4,
    )?;
    let x6188: BytePoly_8 = bigint_mul!(x6187, x6136, 8);
    let x6189: BytePoly_9 = bigint_nondet_quot!(ctx, x6188, x6, 9);
    let x6190: BytePoly_4 = bigint_nondet_rem!(ctx, x6188, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6189, x6, 13), x6190, 13),
            x6188,
            13
        ),
        73156,
        4,
    )?;
    let x6191: BytePoly_4 = bigint_add!(bigint_sub!(x6142, x6190, 4), x6, 4);
    let x6192: BytePoly_4 = bigint_nondet_quot!(ctx, x6191, x6, 4);
    let x6193: BytePoly_4 = bigint_nondet_rem!(ctx, x6191, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x6192, x6, 8), x6193, 8), x6191, 8),
        32515,
        2,
    )?;
    let x6194: BytePoly_8 = bigint_mul!(x6187, x6187, 8);
    let x6195: BytePoly_9 = bigint_nondet_quot!(ctx, x6194, x6, 9);
    let x6196: BytePoly_4 = bigint_nondet_rem!(ctx, x6194, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6195, x6, 13), x6196, 13),
            x6194,
            13
        ),
        73156,
        4,
    )?;
    let x6197: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x6196, x6136, 4), x6, 4), x6136, 4),
        x6,
        4
    );
    let x6198: BytePoly_4 = bigint_nondet_quot!(ctx, x6197, x6, 4);
    let x6199: BytePoly_4 = bigint_nondet_rem!(ctx, x6197, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x6198, x6, 8), x6199, 8), x6197, 8),
        32515,
        2,
    )?;
    let x6200: BytePoly_8 = bigint_mul!(x6187, x6199, 8);
    let x6201: BytePoly_9 = bigint_nondet_quot!(ctx, x6200, x6, 9);
    let x6202: BytePoly_4 = bigint_nondet_rem!(ctx, x6200, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6201, x6, 13), x6202, 13),
            x6200,
            13
        ),
        73156,
        4,
    )?;
    let x6203: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x6202, x6193, 4), 4), x6, 4);
    let x6204: BytePoly_4 = bigint_nondet_quot!(ctx, x6203, x6, 4);
    let x6205: BytePoly_4 = bigint_nondet_rem!(ctx, x6203, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x6204, x6, 8), x6205, 8), x6203, 8),
        32515,
        2,
    )?;
    let x6206: BytePoly_1 = bigint_nondet_rem!(ctx, x6144, x2, 1);
    let x6207: BytePoly_5 = bigint_nondet_quot!(ctx, x6144, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x6207, x2, 6), x6206, 6), x6144, 6),
        40643,
        4,
    )?;
    let x6208: BytePoly_1 = bigint_sub!(x3, x6206, 1);
    eqz(ctx, &bigint_mul!(x6206, x6208, 2), 8131, 2)?;
    let x6209: BytePoly_4 = bigint_add!(bigint_sub!(x6199, x6169, 4), x6, 4);
    let x6210: BytePoly_4 = bigint_nondet_inv!(ctx, x6209, x6, 4);
    let x6211: BytePoly_8 = bigint_mul!(x6209, x6210, 8);
    let x6212: BytePoly_9 = bigint_nondet_quot!(ctx, x6211, x6, 9);
    let x6213: BytePoly_4 = bigint_nondet_rem!(ctx, x6211, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6212, x6, 13), x6213, 13),
            x6211,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x6213, x1, 4), 34, 1)?;
    let x6214: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x6205, x6171, 4), x6, 4), x6210, 8);
    let x6215: BytePoly_9 = bigint_nondet_quot!(ctx, x6214, x6, 9);
    let x6216: BytePoly_4 = bigint_nondet_rem!(ctx, x6214, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6215, x6, 13), x6216, 13),
            x6214,
            13
        ),
        73156,
        4,
    )?;
    let x6217: BytePoly_8 = bigint_add!(bigint_sub!(x6171, bigint_mul!(x6216, x6169, 8), 8), x6, 8);
    let x6218: BytePoly_8 = bigint_nondet_quot!(ctx, x6217, x6, 8);
    let x6219: BytePoly_4 = bigint_nondet_rem!(ctx, x6217, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6218, x6, 12), x6219, 12),
            x6217,
            12
        ),
        65028,
        4,
    )?;
    let x6220: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x6216, x6216, 8), x6169, 8), x6, 8),
            x6199,
            8
        ),
        x6,
        8
    );
    let x6221: BytePoly_9 = bigint_nondet_quot!(ctx, x6220, x6, 9);
    let x6222: BytePoly_4 = bigint_nondet_rem!(ctx, x6220, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6221, x6, 13), x6222, 13),
            x6220,
            13
        ),
        73156,
        4,
    )?;
    let x6223: BytePoly_8 = bigint_mul!(x6216, x6222, 8);
    let x6224: BytePoly_9 = bigint_nondet_quot!(ctx, x6223, x6, 9);
    let x6225: BytePoly_4 = bigint_nondet_rem!(ctx, x6223, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6224, x6, 13), x6225, 13),
            x6223,
            13
        ),
        73156,
        4,
    )?;
    let x6226: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x6225, x6219, 4), 4), x6, 4);
    let x6227: BytePoly_4 = bigint_nondet_quot!(ctx, x6226, x6, 4);
    let x6228: BytePoly_4 = bigint_nondet_rem!(ctx, x6226, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x6227, x6, 8), x6228, 8), x6226, 8),
        32515,
        2,
    )?;
    let x6229: BytePoly_5 = bigint_add!(
        bigint_mul!(x6222, x6206, 5),
        bigint_mul!(x6169, x6208, 5),
        5
    );
    let x6230: BytePoly_5 = bigint_add!(
        bigint_mul!(x6228, x6206, 5),
        bigint_mul!(x6171, x6208, 5),
        5
    );
    let x6231: BytePoly_6 = bigint_nondet_quot!(ctx, x6229, x6, 6);
    let x6232: BytePoly_4 = bigint_nondet_rem!(ctx, x6229, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6231, x6, 10), x6232, 10),
            x6229,
            10
        ),
        48771,
        4,
    )?;
    let x6233: BytePoly_6 = bigint_nondet_quot!(ctx, x6230, x6, 6);
    let x6234: BytePoly_4 = bigint_nondet_rem!(ctx, x6230, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6233, x6, 10), x6234, 10),
            x6230,
            10
        ),
        48771,
        4,
    )?;
    let x6235: BytePoly_8 = bigint_mul!(x6199, x6199, 8);
    let x6236: BytePoly_9 = bigint_nondet_quot!(ctx, x6235, x6, 9);
    let x6237: BytePoly_4 = bigint_nondet_rem!(ctx, x6235, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6236, x6, 13), x6237, 13),
            x6235,
            13
        ),
        73156,
        4,
    )?;
    let x6238: BytePoly_5 = bigint_add!(bigint_mul!(x6237, x0, 5), x5, 5);
    let x6239: BytePoly_6 = bigint_nondet_quot!(ctx, x6238, x6, 6);
    let x6240: BytePoly_4 = bigint_nondet_rem!(ctx, x6238, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6239, x6, 10), x6240, 10),
            x6238,
            10
        ),
        48771,
        4,
    )?;
    let x6241: BytePoly_4 = bigint_add!(x6205, x6205, 4);
    let x6242: BytePoly_4 = bigint_nondet_quot!(ctx, x6241, x6, 4);
    let x6243: BytePoly_4 = bigint_nondet_rem!(ctx, x6241, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x6242, x6, 8), x6243, 8), x6241, 8),
        32515,
        2,
    )?;
    let x6244: BytePoly_4 = bigint_nondet_inv!(ctx, x6243, x6, 4);
    let x6245: BytePoly_8 = bigint_mul!(x6243, x6244, 8);
    let x6246: BytePoly_9 = bigint_nondet_quot!(ctx, x6245, x6, 9);
    let x6247: BytePoly_4 = bigint_nondet_rem!(ctx, x6245, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6246, x6, 13), x6247, 13),
            x6245,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x6247, x3, 4), 34, 1)?;
    let x6248: BytePoly_8 = bigint_mul!(x6240, x6244, 8);
    let x6249: BytePoly_9 = bigint_nondet_quot!(ctx, x6248, x6, 9);
    let x6250: BytePoly_4 = bigint_nondet_rem!(ctx, x6248, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6249, x6, 13), x6250, 13),
            x6248,
            13
        ),
        73156,
        4,
    )?;
    let x6251: BytePoly_8 = bigint_mul!(x6250, x6199, 8);
    let x6252: BytePoly_9 = bigint_nondet_quot!(ctx, x6251, x6, 9);
    let x6253: BytePoly_4 = bigint_nondet_rem!(ctx, x6251, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6252, x6, 13), x6253, 13),
            x6251,
            13
        ),
        73156,
        4,
    )?;
    let x6254: BytePoly_4 = bigint_add!(bigint_sub!(x6205, x6253, 4), x6, 4);
    let x6255: BytePoly_4 = bigint_nondet_quot!(ctx, x6254, x6, 4);
    let x6256: BytePoly_4 = bigint_nondet_rem!(ctx, x6254, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x6255, x6, 8), x6256, 8), x6254, 8),
        32515,
        2,
    )?;
    let x6257: BytePoly_8 = bigint_mul!(x6250, x6250, 8);
    let x6258: BytePoly_9 = bigint_nondet_quot!(ctx, x6257, x6, 9);
    let x6259: BytePoly_4 = bigint_nondet_rem!(ctx, x6257, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6258, x6, 13), x6259, 13),
            x6257,
            13
        ),
        73156,
        4,
    )?;
    let x6260: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x6259, x6199, 4), x6, 4), x6199, 4),
        x6,
        4
    );
    let x6261: BytePoly_4 = bigint_nondet_quot!(ctx, x6260, x6, 4);
    let x6262: BytePoly_4 = bigint_nondet_rem!(ctx, x6260, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x6261, x6, 8), x6262, 8), x6260, 8),
        32515,
        2,
    )?;
    let x6263: BytePoly_8 = bigint_mul!(x6250, x6262, 8);
    let x6264: BytePoly_9 = bigint_nondet_quot!(ctx, x6263, x6, 9);
    let x6265: BytePoly_4 = bigint_nondet_rem!(ctx, x6263, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6264, x6, 13), x6265, 13),
            x6263,
            13
        ),
        73156,
        4,
    )?;
    let x6266: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x6265, x6256, 4), 4), x6, 4);
    let x6267: BytePoly_4 = bigint_nondet_quot!(ctx, x6266, x6, 4);
    let x6268: BytePoly_4 = bigint_nondet_rem!(ctx, x6266, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x6267, x6, 8), x6268, 8), x6266, 8),
        32515,
        2,
    )?;
    let x6269: BytePoly_1 = bigint_nondet_rem!(ctx, x6207, x2, 1);
    let x6270: BytePoly_5 = bigint_nondet_quot!(ctx, x6207, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x6270, x2, 6), x6269, 6), x6207, 6),
        40643,
        4,
    )?;
    let x6271: BytePoly_1 = bigint_sub!(x3, x6269, 1);
    eqz(ctx, &bigint_mul!(x6269, x6271, 2), 8131, 2)?;
    let x6272: BytePoly_4 = bigint_add!(bigint_sub!(x6262, x6232, 4), x6, 4);
    let x6273: BytePoly_4 = bigint_nondet_inv!(ctx, x6272, x6, 4);
    let x6274: BytePoly_8 = bigint_mul!(x6272, x6273, 8);
    let x6275: BytePoly_9 = bigint_nondet_quot!(ctx, x6274, x6, 9);
    let x6276: BytePoly_4 = bigint_nondet_rem!(ctx, x6274, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6275, x6, 13), x6276, 13),
            x6274,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x6276, x1, 4), 34, 1)?;
    let x6277: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x6268, x6234, 4), x6, 4), x6273, 8);
    let x6278: BytePoly_9 = bigint_nondet_quot!(ctx, x6277, x6, 9);
    let x6279: BytePoly_4 = bigint_nondet_rem!(ctx, x6277, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6278, x6, 13), x6279, 13),
            x6277,
            13
        ),
        73156,
        4,
    )?;
    let x6280: BytePoly_8 = bigint_add!(bigint_sub!(x6234, bigint_mul!(x6279, x6232, 8), 8), x6, 8);
    let x6281: BytePoly_8 = bigint_nondet_quot!(ctx, x6280, x6, 8);
    let x6282: BytePoly_4 = bigint_nondet_rem!(ctx, x6280, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6281, x6, 12), x6282, 12),
            x6280,
            12
        ),
        65028,
        4,
    )?;
    let x6283: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x6279, x6279, 8), x6232, 8), x6, 8),
            x6262,
            8
        ),
        x6,
        8
    );
    let x6284: BytePoly_9 = bigint_nondet_quot!(ctx, x6283, x6, 9);
    let x6285: BytePoly_4 = bigint_nondet_rem!(ctx, x6283, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6284, x6, 13), x6285, 13),
            x6283,
            13
        ),
        73156,
        4,
    )?;
    let x6286: BytePoly_8 = bigint_mul!(x6279, x6285, 8);
    let x6287: BytePoly_9 = bigint_nondet_quot!(ctx, x6286, x6, 9);
    let x6288: BytePoly_4 = bigint_nondet_rem!(ctx, x6286, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6287, x6, 13), x6288, 13),
            x6286,
            13
        ),
        73156,
        4,
    )?;
    let x6289: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x6288, x6282, 4), 4), x6, 4);
    let x6290: BytePoly_4 = bigint_nondet_quot!(ctx, x6289, x6, 4);
    let x6291: BytePoly_4 = bigint_nondet_rem!(ctx, x6289, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x6290, x6, 8), x6291, 8), x6289, 8),
        32515,
        2,
    )?;
    let x6292: BytePoly_5 = bigint_add!(
        bigint_mul!(x6285, x6269, 5),
        bigint_mul!(x6232, x6271, 5),
        5
    );
    let x6293: BytePoly_5 = bigint_add!(
        bigint_mul!(x6291, x6269, 5),
        bigint_mul!(x6234, x6271, 5),
        5
    );
    let x6294: BytePoly_6 = bigint_nondet_quot!(ctx, x6292, x6, 6);
    let x6295: BytePoly_4 = bigint_nondet_rem!(ctx, x6292, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6294, x6, 10), x6295, 10),
            x6292,
            10
        ),
        48771,
        4,
    )?;
    let x6296: BytePoly_6 = bigint_nondet_quot!(ctx, x6293, x6, 6);
    let x6297: BytePoly_4 = bigint_nondet_rem!(ctx, x6293, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6296, x6, 10), x6297, 10),
            x6293,
            10
        ),
        48771,
        4,
    )?;
    let x6298: BytePoly_8 = bigint_mul!(x6262, x6262, 8);
    let x6299: BytePoly_9 = bigint_nondet_quot!(ctx, x6298, x6, 9);
    let x6300: BytePoly_4 = bigint_nondet_rem!(ctx, x6298, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6299, x6, 13), x6300, 13),
            x6298,
            13
        ),
        73156,
        4,
    )?;
    let x6301: BytePoly_5 = bigint_add!(bigint_mul!(x6300, x0, 5), x5, 5);
    let x6302: BytePoly_6 = bigint_nondet_quot!(ctx, x6301, x6, 6);
    let x6303: BytePoly_4 = bigint_nondet_rem!(ctx, x6301, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6302, x6, 10), x6303, 10),
            x6301,
            10
        ),
        48771,
        4,
    )?;
    let x6304: BytePoly_4 = bigint_add!(x6268, x6268, 4);
    let x6305: BytePoly_4 = bigint_nondet_quot!(ctx, x6304, x6, 4);
    let x6306: BytePoly_4 = bigint_nondet_rem!(ctx, x6304, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x6305, x6, 8), x6306, 8), x6304, 8),
        32515,
        2,
    )?;
    let x6307: BytePoly_4 = bigint_nondet_inv!(ctx, x6306, x6, 4);
    let x6308: BytePoly_8 = bigint_mul!(x6306, x6307, 8);
    let x6309: BytePoly_9 = bigint_nondet_quot!(ctx, x6308, x6, 9);
    let x6310: BytePoly_4 = bigint_nondet_rem!(ctx, x6308, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6309, x6, 13), x6310, 13),
            x6308,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x6310, x3, 4), 34, 1)?;
    let x6311: BytePoly_8 = bigint_mul!(x6303, x6307, 8);
    let x6312: BytePoly_9 = bigint_nondet_quot!(ctx, x6311, x6, 9);
    let x6313: BytePoly_4 = bigint_nondet_rem!(ctx, x6311, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6312, x6, 13), x6313, 13),
            x6311,
            13
        ),
        73156,
        4,
    )?;
    let x6314: BytePoly_8 = bigint_mul!(x6313, x6262, 8);
    let x6315: BytePoly_9 = bigint_nondet_quot!(ctx, x6314, x6, 9);
    let x6316: BytePoly_4 = bigint_nondet_rem!(ctx, x6314, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6315, x6, 13), x6316, 13),
            x6314,
            13
        ),
        73156,
        4,
    )?;
    let x6317: BytePoly_4 = bigint_add!(bigint_sub!(x6268, x6316, 4), x6, 4);
    let x6318: BytePoly_4 = bigint_nondet_quot!(ctx, x6317, x6, 4);
    let x6319: BytePoly_4 = bigint_nondet_rem!(ctx, x6317, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x6318, x6, 8), x6319, 8), x6317, 8),
        32515,
        2,
    )?;
    let x6320: BytePoly_8 = bigint_mul!(x6313, x6313, 8);
    let x6321: BytePoly_9 = bigint_nondet_quot!(ctx, x6320, x6, 9);
    let x6322: BytePoly_4 = bigint_nondet_rem!(ctx, x6320, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6321, x6, 13), x6322, 13),
            x6320,
            13
        ),
        73156,
        4,
    )?;
    let x6323: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x6322, x6262, 4), x6, 4), x6262, 4),
        x6,
        4
    );
    let x6324: BytePoly_4 = bigint_nondet_quot!(ctx, x6323, x6, 4);
    let x6325: BytePoly_4 = bigint_nondet_rem!(ctx, x6323, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x6324, x6, 8), x6325, 8), x6323, 8),
        32515,
        2,
    )?;
    let x6326: BytePoly_8 = bigint_mul!(x6313, x6325, 8);
    let x6327: BytePoly_9 = bigint_nondet_quot!(ctx, x6326, x6, 9);
    let x6328: BytePoly_4 = bigint_nondet_rem!(ctx, x6326, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6327, x6, 13), x6328, 13),
            x6326,
            13
        ),
        73156,
        4,
    )?;
    let x6329: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x6328, x6319, 4), 4), x6, 4);
    let x6330: BytePoly_4 = bigint_nondet_quot!(ctx, x6329, x6, 4);
    let x6331: BytePoly_4 = bigint_nondet_rem!(ctx, x6329, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x6330, x6, 8), x6331, 8), x6329, 8),
        32515,
        2,
    )?;
    let x6332: BytePoly_1 = bigint_nondet_rem!(ctx, x6270, x2, 1);
    let x6333: BytePoly_5 = bigint_nondet_quot!(ctx, x6270, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x6333, x2, 6), x6332, 6), x6270, 6),
        40643,
        4,
    )?;
    let x6334: BytePoly_1 = bigint_sub!(x3, x6332, 1);
    eqz(ctx, &bigint_mul!(x6332, x6334, 2), 8131, 2)?;
    let x6335: BytePoly_4 = bigint_add!(bigint_sub!(x6325, x6295, 4), x6, 4);
    let x6336: BytePoly_4 = bigint_nondet_inv!(ctx, x6335, x6, 4);
    let x6337: BytePoly_8 = bigint_mul!(x6335, x6336, 8);
    let x6338: BytePoly_9 = bigint_nondet_quot!(ctx, x6337, x6, 9);
    let x6339: BytePoly_4 = bigint_nondet_rem!(ctx, x6337, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6338, x6, 13), x6339, 13),
            x6337,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x6339, x1, 4), 34, 1)?;
    let x6340: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x6331, x6297, 4), x6, 4), x6336, 8);
    let x6341: BytePoly_9 = bigint_nondet_quot!(ctx, x6340, x6, 9);
    let x6342: BytePoly_4 = bigint_nondet_rem!(ctx, x6340, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6341, x6, 13), x6342, 13),
            x6340,
            13
        ),
        73156,
        4,
    )?;
    let x6343: BytePoly_8 = bigint_add!(bigint_sub!(x6297, bigint_mul!(x6342, x6295, 8), 8), x6, 8);
    let x6344: BytePoly_8 = bigint_nondet_quot!(ctx, x6343, x6, 8);
    let x6345: BytePoly_4 = bigint_nondet_rem!(ctx, x6343, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6344, x6, 12), x6345, 12),
            x6343,
            12
        ),
        65028,
        4,
    )?;
    let x6346: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x6342, x6342, 8), x6295, 8), x6, 8),
            x6325,
            8
        ),
        x6,
        8
    );
    let x6347: BytePoly_9 = bigint_nondet_quot!(ctx, x6346, x6, 9);
    let x6348: BytePoly_4 = bigint_nondet_rem!(ctx, x6346, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6347, x6, 13), x6348, 13),
            x6346,
            13
        ),
        73156,
        4,
    )?;
    let x6349: BytePoly_8 = bigint_mul!(x6342, x6348, 8);
    let x6350: BytePoly_9 = bigint_nondet_quot!(ctx, x6349, x6, 9);
    let x6351: BytePoly_4 = bigint_nondet_rem!(ctx, x6349, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6350, x6, 13), x6351, 13),
            x6349,
            13
        ),
        73156,
        4,
    )?;
    let x6352: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x6351, x6345, 4), 4), x6, 4);
    let x6353: BytePoly_4 = bigint_nondet_quot!(ctx, x6352, x6, 4);
    let x6354: BytePoly_4 = bigint_nondet_rem!(ctx, x6352, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x6353, x6, 8), x6354, 8), x6352, 8),
        32515,
        2,
    )?;
    let x6355: BytePoly_5 = bigint_add!(
        bigint_mul!(x6348, x6332, 5),
        bigint_mul!(x6295, x6334, 5),
        5
    );
    let x6356: BytePoly_5 = bigint_add!(
        bigint_mul!(x6354, x6332, 5),
        bigint_mul!(x6297, x6334, 5),
        5
    );
    let x6357: BytePoly_6 = bigint_nondet_quot!(ctx, x6355, x6, 6);
    let x6358: BytePoly_4 = bigint_nondet_rem!(ctx, x6355, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6357, x6, 10), x6358, 10),
            x6355,
            10
        ),
        48771,
        4,
    )?;
    let x6359: BytePoly_6 = bigint_nondet_quot!(ctx, x6356, x6, 6);
    let x6360: BytePoly_4 = bigint_nondet_rem!(ctx, x6356, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6359, x6, 10), x6360, 10),
            x6356,
            10
        ),
        48771,
        4,
    )?;
    let x6361: BytePoly_8 = bigint_mul!(x6325, x6325, 8);
    let x6362: BytePoly_9 = bigint_nondet_quot!(ctx, x6361, x6, 9);
    let x6363: BytePoly_4 = bigint_nondet_rem!(ctx, x6361, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6362, x6, 13), x6363, 13),
            x6361,
            13
        ),
        73156,
        4,
    )?;
    let x6364: BytePoly_5 = bigint_add!(bigint_mul!(x6363, x0, 5), x5, 5);
    let x6365: BytePoly_6 = bigint_nondet_quot!(ctx, x6364, x6, 6);
    let x6366: BytePoly_4 = bigint_nondet_rem!(ctx, x6364, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6365, x6, 10), x6366, 10),
            x6364,
            10
        ),
        48771,
        4,
    )?;
    let x6367: BytePoly_4 = bigint_add!(x6331, x6331, 4);
    let x6368: BytePoly_4 = bigint_nondet_quot!(ctx, x6367, x6, 4);
    let x6369: BytePoly_4 = bigint_nondet_rem!(ctx, x6367, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x6368, x6, 8), x6369, 8), x6367, 8),
        32515,
        2,
    )?;
    let x6370: BytePoly_4 = bigint_nondet_inv!(ctx, x6369, x6, 4);
    let x6371: BytePoly_8 = bigint_mul!(x6369, x6370, 8);
    let x6372: BytePoly_9 = bigint_nondet_quot!(ctx, x6371, x6, 9);
    let x6373: BytePoly_4 = bigint_nondet_rem!(ctx, x6371, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6372, x6, 13), x6373, 13),
            x6371,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x6373, x3, 4), 34, 1)?;
    let x6374: BytePoly_8 = bigint_mul!(x6366, x6370, 8);
    let x6375: BytePoly_9 = bigint_nondet_quot!(ctx, x6374, x6, 9);
    let x6376: BytePoly_4 = bigint_nondet_rem!(ctx, x6374, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6375, x6, 13), x6376, 13),
            x6374,
            13
        ),
        73156,
        4,
    )?;
    let x6377: BytePoly_8 = bigint_mul!(x6376, x6325, 8);
    let x6378: BytePoly_9 = bigint_nondet_quot!(ctx, x6377, x6, 9);
    let x6379: BytePoly_4 = bigint_nondet_rem!(ctx, x6377, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6378, x6, 13), x6379, 13),
            x6377,
            13
        ),
        73156,
        4,
    )?;
    let x6380: BytePoly_4 = bigint_add!(bigint_sub!(x6331, x6379, 4), x6, 4);
    let x6381: BytePoly_4 = bigint_nondet_quot!(ctx, x6380, x6, 4);
    let x6382: BytePoly_4 = bigint_nondet_rem!(ctx, x6380, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x6381, x6, 8), x6382, 8), x6380, 8),
        32515,
        2,
    )?;
    let x6383: BytePoly_8 = bigint_mul!(x6376, x6376, 8);
    let x6384: BytePoly_9 = bigint_nondet_quot!(ctx, x6383, x6, 9);
    let x6385: BytePoly_4 = bigint_nondet_rem!(ctx, x6383, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6384, x6, 13), x6385, 13),
            x6383,
            13
        ),
        73156,
        4,
    )?;
    let x6386: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x6385, x6325, 4), x6, 4), x6325, 4),
        x6,
        4
    );
    let x6387: BytePoly_4 = bigint_nondet_quot!(ctx, x6386, x6, 4);
    let x6388: BytePoly_4 = bigint_nondet_rem!(ctx, x6386, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x6387, x6, 8), x6388, 8), x6386, 8),
        32515,
        2,
    )?;
    let x6389: BytePoly_8 = bigint_mul!(x6376, x6388, 8);
    let x6390: BytePoly_9 = bigint_nondet_quot!(ctx, x6389, x6, 9);
    let x6391: BytePoly_4 = bigint_nondet_rem!(ctx, x6389, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6390, x6, 13), x6391, 13),
            x6389,
            13
        ),
        73156,
        4,
    )?;
    let x6392: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x6391, x6382, 4), 4), x6, 4);
    let x6393: BytePoly_4 = bigint_nondet_quot!(ctx, x6392, x6, 4);
    let x6394: BytePoly_4 = bigint_nondet_rem!(ctx, x6392, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x6393, x6, 8), x6394, 8), x6392, 8),
        32515,
        2,
    )?;
    let x6395: BytePoly_1 = bigint_nondet_rem!(ctx, x6333, x2, 1);
    let x6396: BytePoly_5 = bigint_nondet_quot!(ctx, x6333, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x6396, x2, 6), x6395, 6), x6333, 6),
        40643,
        4,
    )?;
    let x6397: BytePoly_1 = bigint_sub!(x3, x6395, 1);
    eqz(ctx, &bigint_mul!(x6395, x6397, 2), 8131, 2)?;
    let x6398: BytePoly_4 = bigint_add!(bigint_sub!(x6388, x6358, 4), x6, 4);
    let x6399: BytePoly_4 = bigint_nondet_inv!(ctx, x6398, x6, 4);
    let x6400: BytePoly_8 = bigint_mul!(x6398, x6399, 8);
    let x6401: BytePoly_9 = bigint_nondet_quot!(ctx, x6400, x6, 9);
    let x6402: BytePoly_4 = bigint_nondet_rem!(ctx, x6400, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6401, x6, 13), x6402, 13),
            x6400,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x6402, x1, 4), 34, 1)?;
    let x6403: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x6394, x6360, 4), x6, 4), x6399, 8);
    let x6404: BytePoly_9 = bigint_nondet_quot!(ctx, x6403, x6, 9);
    let x6405: BytePoly_4 = bigint_nondet_rem!(ctx, x6403, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6404, x6, 13), x6405, 13),
            x6403,
            13
        ),
        73156,
        4,
    )?;
    let x6406: BytePoly_8 = bigint_add!(bigint_sub!(x6360, bigint_mul!(x6405, x6358, 8), 8), x6, 8);
    let x6407: BytePoly_8 = bigint_nondet_quot!(ctx, x6406, x6, 8);
    let x6408: BytePoly_4 = bigint_nondet_rem!(ctx, x6406, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6407, x6, 12), x6408, 12),
            x6406,
            12
        ),
        65028,
        4,
    )?;
    let x6409: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x6405, x6405, 8), x6358, 8), x6, 8),
            x6388,
            8
        ),
        x6,
        8
    );
    let x6410: BytePoly_9 = bigint_nondet_quot!(ctx, x6409, x6, 9);
    let x6411: BytePoly_4 = bigint_nondet_rem!(ctx, x6409, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6410, x6, 13), x6411, 13),
            x6409,
            13
        ),
        73156,
        4,
    )?;
    let x6412: BytePoly_8 = bigint_mul!(x6405, x6411, 8);
    let x6413: BytePoly_9 = bigint_nondet_quot!(ctx, x6412, x6, 9);
    let x6414: BytePoly_4 = bigint_nondet_rem!(ctx, x6412, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6413, x6, 13), x6414, 13),
            x6412,
            13
        ),
        73156,
        4,
    )?;
    let x6415: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x6414, x6408, 4), 4), x6, 4);
    let x6416: BytePoly_4 = bigint_nondet_quot!(ctx, x6415, x6, 4);
    let x6417: BytePoly_4 = bigint_nondet_rem!(ctx, x6415, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x6416, x6, 8), x6417, 8), x6415, 8),
        32515,
        2,
    )?;
    let x6418: BytePoly_5 = bigint_add!(
        bigint_mul!(x6411, x6395, 5),
        bigint_mul!(x6358, x6397, 5),
        5
    );
    let x6419: BytePoly_5 = bigint_add!(
        bigint_mul!(x6417, x6395, 5),
        bigint_mul!(x6360, x6397, 5),
        5
    );
    let x6420: BytePoly_6 = bigint_nondet_quot!(ctx, x6418, x6, 6);
    let x6421: BytePoly_4 = bigint_nondet_rem!(ctx, x6418, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6420, x6, 10), x6421, 10),
            x6418,
            10
        ),
        48771,
        4,
    )?;
    let x6422: BytePoly_6 = bigint_nondet_quot!(ctx, x6419, x6, 6);
    let x6423: BytePoly_4 = bigint_nondet_rem!(ctx, x6419, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6422, x6, 10), x6423, 10),
            x6419,
            10
        ),
        48771,
        4,
    )?;
    let x6424: BytePoly_8 = bigint_mul!(x6388, x6388, 8);
    let x6425: BytePoly_9 = bigint_nondet_quot!(ctx, x6424, x6, 9);
    let x6426: BytePoly_4 = bigint_nondet_rem!(ctx, x6424, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6425, x6, 13), x6426, 13),
            x6424,
            13
        ),
        73156,
        4,
    )?;
    let x6427: BytePoly_5 = bigint_add!(bigint_mul!(x6426, x0, 5), x5, 5);
    let x6428: BytePoly_6 = bigint_nondet_quot!(ctx, x6427, x6, 6);
    let x6429: BytePoly_4 = bigint_nondet_rem!(ctx, x6427, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6428, x6, 10), x6429, 10),
            x6427,
            10
        ),
        48771,
        4,
    )?;
    let x6430: BytePoly_4 = bigint_add!(x6394, x6394, 4);
    let x6431: BytePoly_4 = bigint_nondet_quot!(ctx, x6430, x6, 4);
    let x6432: BytePoly_4 = bigint_nondet_rem!(ctx, x6430, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x6431, x6, 8), x6432, 8), x6430, 8),
        32515,
        2,
    )?;
    let x6433: BytePoly_4 = bigint_nondet_inv!(ctx, x6432, x6, 4);
    let x6434: BytePoly_8 = bigint_mul!(x6432, x6433, 8);
    let x6435: BytePoly_9 = bigint_nondet_quot!(ctx, x6434, x6, 9);
    let x6436: BytePoly_4 = bigint_nondet_rem!(ctx, x6434, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6435, x6, 13), x6436, 13),
            x6434,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x6436, x3, 4), 34, 1)?;
    let x6437: BytePoly_8 = bigint_mul!(x6429, x6433, 8);
    let x6438: BytePoly_9 = bigint_nondet_quot!(ctx, x6437, x6, 9);
    let x6439: BytePoly_4 = bigint_nondet_rem!(ctx, x6437, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6438, x6, 13), x6439, 13),
            x6437,
            13
        ),
        73156,
        4,
    )?;
    let x6440: BytePoly_8 = bigint_mul!(x6439, x6388, 8);
    let x6441: BytePoly_9 = bigint_nondet_quot!(ctx, x6440, x6, 9);
    let x6442: BytePoly_4 = bigint_nondet_rem!(ctx, x6440, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6441, x6, 13), x6442, 13),
            x6440,
            13
        ),
        73156,
        4,
    )?;
    let x6443: BytePoly_4 = bigint_add!(bigint_sub!(x6394, x6442, 4), x6, 4);
    let x6444: BytePoly_4 = bigint_nondet_quot!(ctx, x6443, x6, 4);
    let x6445: BytePoly_4 = bigint_nondet_rem!(ctx, x6443, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x6444, x6, 8), x6445, 8), x6443, 8),
        32515,
        2,
    )?;
    let x6446: BytePoly_8 = bigint_mul!(x6439, x6439, 8);
    let x6447: BytePoly_9 = bigint_nondet_quot!(ctx, x6446, x6, 9);
    let x6448: BytePoly_4 = bigint_nondet_rem!(ctx, x6446, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6447, x6, 13), x6448, 13),
            x6446,
            13
        ),
        73156,
        4,
    )?;
    let x6449: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x6448, x6388, 4), x6, 4), x6388, 4),
        x6,
        4
    );
    let x6450: BytePoly_4 = bigint_nondet_quot!(ctx, x6449, x6, 4);
    let x6451: BytePoly_4 = bigint_nondet_rem!(ctx, x6449, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x6450, x6, 8), x6451, 8), x6449, 8),
        32515,
        2,
    )?;
    let x6452: BytePoly_8 = bigint_mul!(x6439, x6451, 8);
    let x6453: BytePoly_9 = bigint_nondet_quot!(ctx, x6452, x6, 9);
    let x6454: BytePoly_4 = bigint_nondet_rem!(ctx, x6452, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6453, x6, 13), x6454, 13),
            x6452,
            13
        ),
        73156,
        4,
    )?;
    let x6455: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x6454, x6445, 4), 4), x6, 4);
    let x6456: BytePoly_4 = bigint_nondet_quot!(ctx, x6455, x6, 4);
    let x6457: BytePoly_4 = bigint_nondet_rem!(ctx, x6455, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x6456, x6, 8), x6457, 8), x6455, 8),
        32515,
        2,
    )?;
    let x6458: BytePoly_1 = bigint_nondet_rem!(ctx, x6396, x2, 1);
    let x6459: BytePoly_5 = bigint_nondet_quot!(ctx, x6396, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x6459, x2, 6), x6458, 6), x6396, 6),
        40643,
        4,
    )?;
    let x6460: BytePoly_1 = bigint_sub!(x3, x6458, 1);
    eqz(ctx, &bigint_mul!(x6458, x6460, 2), 8131, 2)?;
    let x6461: BytePoly_4 = bigint_add!(bigint_sub!(x6451, x6421, 4), x6, 4);
    let x6462: BytePoly_4 = bigint_nondet_inv!(ctx, x6461, x6, 4);
    let x6463: BytePoly_8 = bigint_mul!(x6461, x6462, 8);
    let x6464: BytePoly_9 = bigint_nondet_quot!(ctx, x6463, x6, 9);
    let x6465: BytePoly_4 = bigint_nondet_rem!(ctx, x6463, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6464, x6, 13), x6465, 13),
            x6463,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x6465, x1, 4), 34, 1)?;
    let x6466: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x6457, x6423, 4), x6, 4), x6462, 8);
    let x6467: BytePoly_9 = bigint_nondet_quot!(ctx, x6466, x6, 9);
    let x6468: BytePoly_4 = bigint_nondet_rem!(ctx, x6466, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6467, x6, 13), x6468, 13),
            x6466,
            13
        ),
        73156,
        4,
    )?;
    let x6469: BytePoly_8 = bigint_add!(bigint_sub!(x6423, bigint_mul!(x6468, x6421, 8), 8), x6, 8);
    let x6470: BytePoly_8 = bigint_nondet_quot!(ctx, x6469, x6, 8);
    let x6471: BytePoly_4 = bigint_nondet_rem!(ctx, x6469, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6470, x6, 12), x6471, 12),
            x6469,
            12
        ),
        65028,
        4,
    )?;
    let x6472: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x6468, x6468, 8), x6421, 8), x6, 8),
            x6451,
            8
        ),
        x6,
        8
    );
    let x6473: BytePoly_9 = bigint_nondet_quot!(ctx, x6472, x6, 9);
    let x6474: BytePoly_4 = bigint_nondet_rem!(ctx, x6472, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6473, x6, 13), x6474, 13),
            x6472,
            13
        ),
        73156,
        4,
    )?;
    let x6475: BytePoly_8 = bigint_mul!(x6468, x6474, 8);
    let x6476: BytePoly_9 = bigint_nondet_quot!(ctx, x6475, x6, 9);
    let x6477: BytePoly_4 = bigint_nondet_rem!(ctx, x6475, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6476, x6, 13), x6477, 13),
            x6475,
            13
        ),
        73156,
        4,
    )?;
    let x6478: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x6477, x6471, 4), 4), x6, 4);
    let x6479: BytePoly_4 = bigint_nondet_quot!(ctx, x6478, x6, 4);
    let x6480: BytePoly_4 = bigint_nondet_rem!(ctx, x6478, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x6479, x6, 8), x6480, 8), x6478, 8),
        32515,
        2,
    )?;
    let x6481: BytePoly_5 = bigint_add!(
        bigint_mul!(x6474, x6458, 5),
        bigint_mul!(x6421, x6460, 5),
        5
    );
    let x6482: BytePoly_5 = bigint_add!(
        bigint_mul!(x6480, x6458, 5),
        bigint_mul!(x6423, x6460, 5),
        5
    );
    let x6483: BytePoly_6 = bigint_nondet_quot!(ctx, x6481, x6, 6);
    let x6484: BytePoly_4 = bigint_nondet_rem!(ctx, x6481, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6483, x6, 10), x6484, 10),
            x6481,
            10
        ),
        48771,
        4,
    )?;
    let x6485: BytePoly_6 = bigint_nondet_quot!(ctx, x6482, x6, 6);
    let x6486: BytePoly_4 = bigint_nondet_rem!(ctx, x6482, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6485, x6, 10), x6486, 10),
            x6482,
            10
        ),
        48771,
        4,
    )?;
    let x6487: BytePoly_8 = bigint_mul!(x6451, x6451, 8);
    let x6488: BytePoly_9 = bigint_nondet_quot!(ctx, x6487, x6, 9);
    let x6489: BytePoly_4 = bigint_nondet_rem!(ctx, x6487, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6488, x6, 13), x6489, 13),
            x6487,
            13
        ),
        73156,
        4,
    )?;
    let x6490: BytePoly_5 = bigint_add!(bigint_mul!(x6489, x0, 5), x5, 5);
    let x6491: BytePoly_6 = bigint_nondet_quot!(ctx, x6490, x6, 6);
    let x6492: BytePoly_4 = bigint_nondet_rem!(ctx, x6490, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6491, x6, 10), x6492, 10),
            x6490,
            10
        ),
        48771,
        4,
    )?;
    let x6493: BytePoly_4 = bigint_add!(x6457, x6457, 4);
    let x6494: BytePoly_4 = bigint_nondet_quot!(ctx, x6493, x6, 4);
    let x6495: BytePoly_4 = bigint_nondet_rem!(ctx, x6493, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x6494, x6, 8), x6495, 8), x6493, 8),
        32515,
        2,
    )?;
    let x6496: BytePoly_4 = bigint_nondet_inv!(ctx, x6495, x6, 4);
    let x6497: BytePoly_8 = bigint_mul!(x6495, x6496, 8);
    let x6498: BytePoly_9 = bigint_nondet_quot!(ctx, x6497, x6, 9);
    let x6499: BytePoly_4 = bigint_nondet_rem!(ctx, x6497, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6498, x6, 13), x6499, 13),
            x6497,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x6499, x3, 4), 34, 1)?;
    let x6500: BytePoly_8 = bigint_mul!(x6492, x6496, 8);
    let x6501: BytePoly_9 = bigint_nondet_quot!(ctx, x6500, x6, 9);
    let x6502: BytePoly_4 = bigint_nondet_rem!(ctx, x6500, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6501, x6, 13), x6502, 13),
            x6500,
            13
        ),
        73156,
        4,
    )?;
    let x6503: BytePoly_8 = bigint_mul!(x6502, x6451, 8);
    let x6504: BytePoly_9 = bigint_nondet_quot!(ctx, x6503, x6, 9);
    let x6505: BytePoly_4 = bigint_nondet_rem!(ctx, x6503, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6504, x6, 13), x6505, 13),
            x6503,
            13
        ),
        73156,
        4,
    )?;
    let x6506: BytePoly_4 = bigint_add!(bigint_sub!(x6457, x6505, 4), x6, 4);
    let x6507: BytePoly_4 = bigint_nondet_quot!(ctx, x6506, x6, 4);
    let x6508: BytePoly_4 = bigint_nondet_rem!(ctx, x6506, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x6507, x6, 8), x6508, 8), x6506, 8),
        32515,
        2,
    )?;
    let x6509: BytePoly_8 = bigint_mul!(x6502, x6502, 8);
    let x6510: BytePoly_9 = bigint_nondet_quot!(ctx, x6509, x6, 9);
    let x6511: BytePoly_4 = bigint_nondet_rem!(ctx, x6509, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6510, x6, 13), x6511, 13),
            x6509,
            13
        ),
        73156,
        4,
    )?;
    let x6512: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x6511, x6451, 4), x6, 4), x6451, 4),
        x6,
        4
    );
    let x6513: BytePoly_4 = bigint_nondet_quot!(ctx, x6512, x6, 4);
    let x6514: BytePoly_4 = bigint_nondet_rem!(ctx, x6512, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x6513, x6, 8), x6514, 8), x6512, 8),
        32515,
        2,
    )?;
    let x6515: BytePoly_8 = bigint_mul!(x6502, x6514, 8);
    let x6516: BytePoly_9 = bigint_nondet_quot!(ctx, x6515, x6, 9);
    let x6517: BytePoly_4 = bigint_nondet_rem!(ctx, x6515, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6516, x6, 13), x6517, 13),
            x6515,
            13
        ),
        73156,
        4,
    )?;
    let x6518: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x6517, x6508, 4), 4), x6, 4);
    let x6519: BytePoly_4 = bigint_nondet_quot!(ctx, x6518, x6, 4);
    let x6520: BytePoly_4 = bigint_nondet_rem!(ctx, x6518, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x6519, x6, 8), x6520, 8), x6518, 8),
        32515,
        2,
    )?;
    let x6521: BytePoly_1 = bigint_nondet_rem!(ctx, x6459, x2, 1);
    let x6522: BytePoly_5 = bigint_nondet_quot!(ctx, x6459, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x6522, x2, 6), x6521, 6), x6459, 6),
        40643,
        4,
    )?;
    let x6523: BytePoly_1 = bigint_sub!(x3, x6521, 1);
    eqz(ctx, &bigint_mul!(x6521, x6523, 2), 8131, 2)?;
    let x6524: BytePoly_4 = bigint_add!(bigint_sub!(x6514, x6484, 4), x6, 4);
    let x6525: BytePoly_4 = bigint_nondet_inv!(ctx, x6524, x6, 4);
    let x6526: BytePoly_8 = bigint_mul!(x6524, x6525, 8);
    let x6527: BytePoly_9 = bigint_nondet_quot!(ctx, x6526, x6, 9);
    let x6528: BytePoly_4 = bigint_nondet_rem!(ctx, x6526, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6527, x6, 13), x6528, 13),
            x6526,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x6528, x1, 4), 34, 1)?;
    let x6529: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x6520, x6486, 4), x6, 4), x6525, 8);
    let x6530: BytePoly_9 = bigint_nondet_quot!(ctx, x6529, x6, 9);
    let x6531: BytePoly_4 = bigint_nondet_rem!(ctx, x6529, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6530, x6, 13), x6531, 13),
            x6529,
            13
        ),
        73156,
        4,
    )?;
    let x6532: BytePoly_8 = bigint_add!(bigint_sub!(x6486, bigint_mul!(x6531, x6484, 8), 8), x6, 8);
    let x6533: BytePoly_8 = bigint_nondet_quot!(ctx, x6532, x6, 8);
    let x6534: BytePoly_4 = bigint_nondet_rem!(ctx, x6532, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6533, x6, 12), x6534, 12),
            x6532,
            12
        ),
        65028,
        4,
    )?;
    let x6535: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x6531, x6531, 8), x6484, 8), x6, 8),
            x6514,
            8
        ),
        x6,
        8
    );
    let x6536: BytePoly_9 = bigint_nondet_quot!(ctx, x6535, x6, 9);
    let x6537: BytePoly_4 = bigint_nondet_rem!(ctx, x6535, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6536, x6, 13), x6537, 13),
            x6535,
            13
        ),
        73156,
        4,
    )?;
    let x6538: BytePoly_8 = bigint_mul!(x6531, x6537, 8);
    let x6539: BytePoly_9 = bigint_nondet_quot!(ctx, x6538, x6, 9);
    let x6540: BytePoly_4 = bigint_nondet_rem!(ctx, x6538, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6539, x6, 13), x6540, 13),
            x6538,
            13
        ),
        73156,
        4,
    )?;
    let x6541: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x6540, x6534, 4), 4), x6, 4);
    let x6542: BytePoly_4 = bigint_nondet_quot!(ctx, x6541, x6, 4);
    let x6543: BytePoly_4 = bigint_nondet_rem!(ctx, x6541, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x6542, x6, 8), x6543, 8), x6541, 8),
        32515,
        2,
    )?;
    let x6544: BytePoly_5 = bigint_add!(
        bigint_mul!(x6537, x6521, 5),
        bigint_mul!(x6484, x6523, 5),
        5
    );
    let x6545: BytePoly_5 = bigint_add!(
        bigint_mul!(x6543, x6521, 5),
        bigint_mul!(x6486, x6523, 5),
        5
    );
    let x6546: BytePoly_6 = bigint_nondet_quot!(ctx, x6544, x6, 6);
    let x6547: BytePoly_4 = bigint_nondet_rem!(ctx, x6544, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6546, x6, 10), x6547, 10),
            x6544,
            10
        ),
        48771,
        4,
    )?;
    let x6548: BytePoly_6 = bigint_nondet_quot!(ctx, x6545, x6, 6);
    let x6549: BytePoly_4 = bigint_nondet_rem!(ctx, x6545, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6548, x6, 10), x6549, 10),
            x6545,
            10
        ),
        48771,
        4,
    )?;
    let x6550: BytePoly_8 = bigint_mul!(x6514, x6514, 8);
    let x6551: BytePoly_9 = bigint_nondet_quot!(ctx, x6550, x6, 9);
    let x6552: BytePoly_4 = bigint_nondet_rem!(ctx, x6550, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6551, x6, 13), x6552, 13),
            x6550,
            13
        ),
        73156,
        4,
    )?;
    let x6553: BytePoly_5 = bigint_add!(bigint_mul!(x6552, x0, 5), x5, 5);
    let x6554: BytePoly_6 = bigint_nondet_quot!(ctx, x6553, x6, 6);
    let x6555: BytePoly_4 = bigint_nondet_rem!(ctx, x6553, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6554, x6, 10), x6555, 10),
            x6553,
            10
        ),
        48771,
        4,
    )?;
    let x6556: BytePoly_4 = bigint_add!(x6520, x6520, 4);
    let x6557: BytePoly_4 = bigint_nondet_quot!(ctx, x6556, x6, 4);
    let x6558: BytePoly_4 = bigint_nondet_rem!(ctx, x6556, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x6557, x6, 8), x6558, 8), x6556, 8),
        32515,
        2,
    )?;
    let x6559: BytePoly_4 = bigint_nondet_inv!(ctx, x6558, x6, 4);
    let x6560: BytePoly_8 = bigint_mul!(x6558, x6559, 8);
    let x6561: BytePoly_9 = bigint_nondet_quot!(ctx, x6560, x6, 9);
    let x6562: BytePoly_4 = bigint_nondet_rem!(ctx, x6560, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6561, x6, 13), x6562, 13),
            x6560,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x6562, x3, 4), 34, 1)?;
    let x6563: BytePoly_8 = bigint_mul!(x6555, x6559, 8);
    let x6564: BytePoly_9 = bigint_nondet_quot!(ctx, x6563, x6, 9);
    let x6565: BytePoly_4 = bigint_nondet_rem!(ctx, x6563, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6564, x6, 13), x6565, 13),
            x6563,
            13
        ),
        73156,
        4,
    )?;
    let x6566: BytePoly_8 = bigint_mul!(x6565, x6514, 8);
    let x6567: BytePoly_9 = bigint_nondet_quot!(ctx, x6566, x6, 9);
    let x6568: BytePoly_4 = bigint_nondet_rem!(ctx, x6566, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6567, x6, 13), x6568, 13),
            x6566,
            13
        ),
        73156,
        4,
    )?;
    let x6569: BytePoly_4 = bigint_add!(bigint_sub!(x6520, x6568, 4), x6, 4);
    let x6570: BytePoly_4 = bigint_nondet_quot!(ctx, x6569, x6, 4);
    let x6571: BytePoly_4 = bigint_nondet_rem!(ctx, x6569, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x6570, x6, 8), x6571, 8), x6569, 8),
        32515,
        2,
    )?;
    let x6572: BytePoly_8 = bigint_mul!(x6565, x6565, 8);
    let x6573: BytePoly_9 = bigint_nondet_quot!(ctx, x6572, x6, 9);
    let x6574: BytePoly_4 = bigint_nondet_rem!(ctx, x6572, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6573, x6, 13), x6574, 13),
            x6572,
            13
        ),
        73156,
        4,
    )?;
    let x6575: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x6574, x6514, 4), x6, 4), x6514, 4),
        x6,
        4
    );
    let x6576: BytePoly_4 = bigint_nondet_quot!(ctx, x6575, x6, 4);
    let x6577: BytePoly_4 = bigint_nondet_rem!(ctx, x6575, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x6576, x6, 8), x6577, 8), x6575, 8),
        32515,
        2,
    )?;
    let x6578: BytePoly_8 = bigint_mul!(x6565, x6577, 8);
    let x6579: BytePoly_9 = bigint_nondet_quot!(ctx, x6578, x6, 9);
    let x6580: BytePoly_4 = bigint_nondet_rem!(ctx, x6578, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6579, x6, 13), x6580, 13),
            x6578,
            13
        ),
        73156,
        4,
    )?;
    let x6581: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x6580, x6571, 4), 4), x6, 4);
    let x6582: BytePoly_4 = bigint_nondet_quot!(ctx, x6581, x6, 4);
    let x6583: BytePoly_4 = bigint_nondet_rem!(ctx, x6581, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x6582, x6, 8), x6583, 8), x6581, 8),
        32515,
        2,
    )?;
    let x6584: BytePoly_1 = bigint_nondet_rem!(ctx, x6522, x2, 1);
    let x6585: BytePoly_5 = bigint_nondet_quot!(ctx, x6522, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x6585, x2, 6), x6584, 6), x6522, 6),
        40643,
        4,
    )?;
    let x6586: BytePoly_1 = bigint_sub!(x3, x6584, 1);
    eqz(ctx, &bigint_mul!(x6584, x6586, 2), 8131, 2)?;
    let x6587: BytePoly_4 = bigint_add!(bigint_sub!(x6577, x6547, 4), x6, 4);
    let x6588: BytePoly_4 = bigint_nondet_inv!(ctx, x6587, x6, 4);
    let x6589: BytePoly_8 = bigint_mul!(x6587, x6588, 8);
    let x6590: BytePoly_9 = bigint_nondet_quot!(ctx, x6589, x6, 9);
    let x6591: BytePoly_4 = bigint_nondet_rem!(ctx, x6589, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6590, x6, 13), x6591, 13),
            x6589,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x6591, x1, 4), 34, 1)?;
    let x6592: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x6583, x6549, 4), x6, 4), x6588, 8);
    let x6593: BytePoly_9 = bigint_nondet_quot!(ctx, x6592, x6, 9);
    let x6594: BytePoly_4 = bigint_nondet_rem!(ctx, x6592, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6593, x6, 13), x6594, 13),
            x6592,
            13
        ),
        73156,
        4,
    )?;
    let x6595: BytePoly_8 = bigint_add!(bigint_sub!(x6549, bigint_mul!(x6594, x6547, 8), 8), x6, 8);
    let x6596: BytePoly_8 = bigint_nondet_quot!(ctx, x6595, x6, 8);
    let x6597: BytePoly_4 = bigint_nondet_rem!(ctx, x6595, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6596, x6, 12), x6597, 12),
            x6595,
            12
        ),
        65028,
        4,
    )?;
    let x6598: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x6594, x6594, 8), x6547, 8), x6, 8),
            x6577,
            8
        ),
        x6,
        8
    );
    let x6599: BytePoly_9 = bigint_nondet_quot!(ctx, x6598, x6, 9);
    let x6600: BytePoly_4 = bigint_nondet_rem!(ctx, x6598, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6599, x6, 13), x6600, 13),
            x6598,
            13
        ),
        73156,
        4,
    )?;
    let x6601: BytePoly_8 = bigint_mul!(x6594, x6600, 8);
    let x6602: BytePoly_9 = bigint_nondet_quot!(ctx, x6601, x6, 9);
    let x6603: BytePoly_4 = bigint_nondet_rem!(ctx, x6601, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6602, x6, 13), x6603, 13),
            x6601,
            13
        ),
        73156,
        4,
    )?;
    let x6604: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x6603, x6597, 4), 4), x6, 4);
    let x6605: BytePoly_4 = bigint_nondet_quot!(ctx, x6604, x6, 4);
    let x6606: BytePoly_4 = bigint_nondet_rem!(ctx, x6604, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x6605, x6, 8), x6606, 8), x6604, 8),
        32515,
        2,
    )?;
    let x6607: BytePoly_5 = bigint_add!(
        bigint_mul!(x6600, x6584, 5),
        bigint_mul!(x6547, x6586, 5),
        5
    );
    let x6608: BytePoly_5 = bigint_add!(
        bigint_mul!(x6606, x6584, 5),
        bigint_mul!(x6549, x6586, 5),
        5
    );
    let x6609: BytePoly_6 = bigint_nondet_quot!(ctx, x6607, x6, 6);
    let x6610: BytePoly_4 = bigint_nondet_rem!(ctx, x6607, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6609, x6, 10), x6610, 10),
            x6607,
            10
        ),
        48771,
        4,
    )?;
    let x6611: BytePoly_6 = bigint_nondet_quot!(ctx, x6608, x6, 6);
    let x6612: BytePoly_4 = bigint_nondet_rem!(ctx, x6608, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6611, x6, 10), x6612, 10),
            x6608,
            10
        ),
        48771,
        4,
    )?;
    let x6613: BytePoly_8 = bigint_mul!(x6577, x6577, 8);
    let x6614: BytePoly_9 = bigint_nondet_quot!(ctx, x6613, x6, 9);
    let x6615: BytePoly_4 = bigint_nondet_rem!(ctx, x6613, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6614, x6, 13), x6615, 13),
            x6613,
            13
        ),
        73156,
        4,
    )?;
    let x6616: BytePoly_5 = bigint_add!(bigint_mul!(x6615, x0, 5), x5, 5);
    let x6617: BytePoly_6 = bigint_nondet_quot!(ctx, x6616, x6, 6);
    let x6618: BytePoly_4 = bigint_nondet_rem!(ctx, x6616, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6617, x6, 10), x6618, 10),
            x6616,
            10
        ),
        48771,
        4,
    )?;
    let x6619: BytePoly_4 = bigint_add!(x6583, x6583, 4);
    let x6620: BytePoly_4 = bigint_nondet_quot!(ctx, x6619, x6, 4);
    let x6621: BytePoly_4 = bigint_nondet_rem!(ctx, x6619, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x6620, x6, 8), x6621, 8), x6619, 8),
        32515,
        2,
    )?;
    let x6622: BytePoly_4 = bigint_nondet_inv!(ctx, x6621, x6, 4);
    let x6623: BytePoly_8 = bigint_mul!(x6621, x6622, 8);
    let x6624: BytePoly_9 = bigint_nondet_quot!(ctx, x6623, x6, 9);
    let x6625: BytePoly_4 = bigint_nondet_rem!(ctx, x6623, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6624, x6, 13), x6625, 13),
            x6623,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x6625, x3, 4), 34, 1)?;
    let x6626: BytePoly_8 = bigint_mul!(x6618, x6622, 8);
    let x6627: BytePoly_9 = bigint_nondet_quot!(ctx, x6626, x6, 9);
    let x6628: BytePoly_4 = bigint_nondet_rem!(ctx, x6626, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6627, x6, 13), x6628, 13),
            x6626,
            13
        ),
        73156,
        4,
    )?;
    let x6629: BytePoly_8 = bigint_mul!(x6628, x6577, 8);
    let x6630: BytePoly_9 = bigint_nondet_quot!(ctx, x6629, x6, 9);
    let x6631: BytePoly_4 = bigint_nondet_rem!(ctx, x6629, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6630, x6, 13), x6631, 13),
            x6629,
            13
        ),
        73156,
        4,
    )?;
    let x6632: BytePoly_4 = bigint_add!(bigint_sub!(x6583, x6631, 4), x6, 4);
    let x6633: BytePoly_4 = bigint_nondet_quot!(ctx, x6632, x6, 4);
    let x6634: BytePoly_4 = bigint_nondet_rem!(ctx, x6632, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x6633, x6, 8), x6634, 8), x6632, 8),
        32515,
        2,
    )?;
    let x6635: BytePoly_8 = bigint_mul!(x6628, x6628, 8);
    let x6636: BytePoly_9 = bigint_nondet_quot!(ctx, x6635, x6, 9);
    let x6637: BytePoly_4 = bigint_nondet_rem!(ctx, x6635, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6636, x6, 13), x6637, 13),
            x6635,
            13
        ),
        73156,
        4,
    )?;
    let x6638: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x6637, x6577, 4), x6, 4), x6577, 4),
        x6,
        4
    );
    let x6639: BytePoly_4 = bigint_nondet_quot!(ctx, x6638, x6, 4);
    let x6640: BytePoly_4 = bigint_nondet_rem!(ctx, x6638, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x6639, x6, 8), x6640, 8), x6638, 8),
        32515,
        2,
    )?;
    let x6641: BytePoly_8 = bigint_mul!(x6628, x6640, 8);
    let x6642: BytePoly_9 = bigint_nondet_quot!(ctx, x6641, x6, 9);
    let x6643: BytePoly_4 = bigint_nondet_rem!(ctx, x6641, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6642, x6, 13), x6643, 13),
            x6641,
            13
        ),
        73156,
        4,
    )?;
    let x6644: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x6643, x6634, 4), 4), x6, 4);
    let x6645: BytePoly_4 = bigint_nondet_quot!(ctx, x6644, x6, 4);
    let x6646: BytePoly_4 = bigint_nondet_rem!(ctx, x6644, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x6645, x6, 8), x6646, 8), x6644, 8),
        32515,
        2,
    )?;
    let x6647: BytePoly_1 = bigint_nondet_rem!(ctx, x6585, x2, 1);
    let x6648: BytePoly_5 = bigint_nondet_quot!(ctx, x6585, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x6648, x2, 6), x6647, 6), x6585, 6),
        40643,
        4,
    )?;
    let x6649: BytePoly_1 = bigint_sub!(x3, x6647, 1);
    eqz(ctx, &bigint_mul!(x6647, x6649, 2), 8131, 2)?;
    let x6650: BytePoly_4 = bigint_add!(bigint_sub!(x6640, x6610, 4), x6, 4);
    let x6651: BytePoly_4 = bigint_nondet_inv!(ctx, x6650, x6, 4);
    let x6652: BytePoly_8 = bigint_mul!(x6650, x6651, 8);
    let x6653: BytePoly_9 = bigint_nondet_quot!(ctx, x6652, x6, 9);
    let x6654: BytePoly_4 = bigint_nondet_rem!(ctx, x6652, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6653, x6, 13), x6654, 13),
            x6652,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x6654, x1, 4), 34, 1)?;
    let x6655: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x6646, x6612, 4), x6, 4), x6651, 8);
    let x6656: BytePoly_9 = bigint_nondet_quot!(ctx, x6655, x6, 9);
    let x6657: BytePoly_4 = bigint_nondet_rem!(ctx, x6655, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6656, x6, 13), x6657, 13),
            x6655,
            13
        ),
        73156,
        4,
    )?;
    let x6658: BytePoly_8 = bigint_add!(bigint_sub!(x6612, bigint_mul!(x6657, x6610, 8), 8), x6, 8);
    let x6659: BytePoly_8 = bigint_nondet_quot!(ctx, x6658, x6, 8);
    let x6660: BytePoly_4 = bigint_nondet_rem!(ctx, x6658, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6659, x6, 12), x6660, 12),
            x6658,
            12
        ),
        65028,
        4,
    )?;
    let x6661: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x6657, x6657, 8), x6610, 8), x6, 8),
            x6640,
            8
        ),
        x6,
        8
    );
    let x6662: BytePoly_9 = bigint_nondet_quot!(ctx, x6661, x6, 9);
    let x6663: BytePoly_4 = bigint_nondet_rem!(ctx, x6661, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6662, x6, 13), x6663, 13),
            x6661,
            13
        ),
        73156,
        4,
    )?;
    let x6664: BytePoly_8 = bigint_mul!(x6657, x6663, 8);
    let x6665: BytePoly_9 = bigint_nondet_quot!(ctx, x6664, x6, 9);
    let x6666: BytePoly_4 = bigint_nondet_rem!(ctx, x6664, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6665, x6, 13), x6666, 13),
            x6664,
            13
        ),
        73156,
        4,
    )?;
    let x6667: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x6666, x6660, 4), 4), x6, 4);
    let x6668: BytePoly_4 = bigint_nondet_quot!(ctx, x6667, x6, 4);
    let x6669: BytePoly_4 = bigint_nondet_rem!(ctx, x6667, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x6668, x6, 8), x6669, 8), x6667, 8),
        32515,
        2,
    )?;
    let x6670: BytePoly_5 = bigint_add!(
        bigint_mul!(x6663, x6647, 5),
        bigint_mul!(x6610, x6649, 5),
        5
    );
    let x6671: BytePoly_5 = bigint_add!(
        bigint_mul!(x6669, x6647, 5),
        bigint_mul!(x6612, x6649, 5),
        5
    );
    let x6672: BytePoly_6 = bigint_nondet_quot!(ctx, x6670, x6, 6);
    let x6673: BytePoly_4 = bigint_nondet_rem!(ctx, x6670, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6672, x6, 10), x6673, 10),
            x6670,
            10
        ),
        48771,
        4,
    )?;
    let x6674: BytePoly_6 = bigint_nondet_quot!(ctx, x6671, x6, 6);
    let x6675: BytePoly_4 = bigint_nondet_rem!(ctx, x6671, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6674, x6, 10), x6675, 10),
            x6671,
            10
        ),
        48771,
        4,
    )?;
    let x6676: BytePoly_8 = bigint_mul!(x6640, x6640, 8);
    let x6677: BytePoly_9 = bigint_nondet_quot!(ctx, x6676, x6, 9);
    let x6678: BytePoly_4 = bigint_nondet_rem!(ctx, x6676, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6677, x6, 13), x6678, 13),
            x6676,
            13
        ),
        73156,
        4,
    )?;
    let x6679: BytePoly_5 = bigint_add!(bigint_mul!(x6678, x0, 5), x5, 5);
    let x6680: BytePoly_6 = bigint_nondet_quot!(ctx, x6679, x6, 6);
    let x6681: BytePoly_4 = bigint_nondet_rem!(ctx, x6679, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6680, x6, 10), x6681, 10),
            x6679,
            10
        ),
        48771,
        4,
    )?;
    let x6682: BytePoly_4 = bigint_add!(x6646, x6646, 4);
    let x6683: BytePoly_4 = bigint_nondet_quot!(ctx, x6682, x6, 4);
    let x6684: BytePoly_4 = bigint_nondet_rem!(ctx, x6682, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x6683, x6, 8), x6684, 8), x6682, 8),
        32515,
        2,
    )?;
    let x6685: BytePoly_4 = bigint_nondet_inv!(ctx, x6684, x6, 4);
    let x6686: BytePoly_8 = bigint_mul!(x6684, x6685, 8);
    let x6687: BytePoly_9 = bigint_nondet_quot!(ctx, x6686, x6, 9);
    let x6688: BytePoly_4 = bigint_nondet_rem!(ctx, x6686, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6687, x6, 13), x6688, 13),
            x6686,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x6688, x3, 4), 34, 1)?;
    let x6689: BytePoly_8 = bigint_mul!(x6681, x6685, 8);
    let x6690: BytePoly_9 = bigint_nondet_quot!(ctx, x6689, x6, 9);
    let x6691: BytePoly_4 = bigint_nondet_rem!(ctx, x6689, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6690, x6, 13), x6691, 13),
            x6689,
            13
        ),
        73156,
        4,
    )?;
    let x6692: BytePoly_8 = bigint_mul!(x6691, x6640, 8);
    let x6693: BytePoly_9 = bigint_nondet_quot!(ctx, x6692, x6, 9);
    let x6694: BytePoly_4 = bigint_nondet_rem!(ctx, x6692, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6693, x6, 13), x6694, 13),
            x6692,
            13
        ),
        73156,
        4,
    )?;
    let x6695: BytePoly_4 = bigint_add!(bigint_sub!(x6646, x6694, 4), x6, 4);
    let x6696: BytePoly_4 = bigint_nondet_quot!(ctx, x6695, x6, 4);
    let x6697: BytePoly_4 = bigint_nondet_rem!(ctx, x6695, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x6696, x6, 8), x6697, 8), x6695, 8),
        32515,
        2,
    )?;
    let x6698: BytePoly_8 = bigint_mul!(x6691, x6691, 8);
    let x6699: BytePoly_9 = bigint_nondet_quot!(ctx, x6698, x6, 9);
    let x6700: BytePoly_4 = bigint_nondet_rem!(ctx, x6698, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6699, x6, 13), x6700, 13),
            x6698,
            13
        ),
        73156,
        4,
    )?;
    let x6701: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x6700, x6640, 4), x6, 4), x6640, 4),
        x6,
        4
    );
    let x6702: BytePoly_4 = bigint_nondet_quot!(ctx, x6701, x6, 4);
    let x6703: BytePoly_4 = bigint_nondet_rem!(ctx, x6701, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x6702, x6, 8), x6703, 8), x6701, 8),
        32515,
        2,
    )?;
    let x6704: BytePoly_8 = bigint_mul!(x6691, x6703, 8);
    let x6705: BytePoly_9 = bigint_nondet_quot!(ctx, x6704, x6, 9);
    let x6706: BytePoly_4 = bigint_nondet_rem!(ctx, x6704, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6705, x6, 13), x6706, 13),
            x6704,
            13
        ),
        73156,
        4,
    )?;
    let x6707: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x6706, x6697, 4), 4), x6, 4);
    let x6708: BytePoly_4 = bigint_nondet_quot!(ctx, x6707, x6, 4);
    let x6709: BytePoly_4 = bigint_nondet_rem!(ctx, x6707, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x6708, x6, 8), x6709, 8), x6707, 8),
        32515,
        2,
    )?;
    let x6710: BytePoly_1 = bigint_nondet_rem!(ctx, x6648, x2, 1);
    let x6711: BytePoly_5 = bigint_nondet_quot!(ctx, x6648, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x6711, x2, 6), x6710, 6), x6648, 6),
        40643,
        4,
    )?;
    let x6712: BytePoly_1 = bigint_sub!(x3, x6710, 1);
    eqz(ctx, &bigint_mul!(x6710, x6712, 2), 8131, 2)?;
    let x6713: BytePoly_4 = bigint_add!(bigint_sub!(x6703, x6673, 4), x6, 4);
    let x6714: BytePoly_4 = bigint_nondet_inv!(ctx, x6713, x6, 4);
    let x6715: BytePoly_8 = bigint_mul!(x6713, x6714, 8);
    let x6716: BytePoly_9 = bigint_nondet_quot!(ctx, x6715, x6, 9);
    let x6717: BytePoly_4 = bigint_nondet_rem!(ctx, x6715, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6716, x6, 13), x6717, 13),
            x6715,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x6717, x1, 4), 34, 1)?;
    let x6718: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x6709, x6675, 4), x6, 4), x6714, 8);
    let x6719: BytePoly_9 = bigint_nondet_quot!(ctx, x6718, x6, 9);
    let x6720: BytePoly_4 = bigint_nondet_rem!(ctx, x6718, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6719, x6, 13), x6720, 13),
            x6718,
            13
        ),
        73156,
        4,
    )?;
    let x6721: BytePoly_8 = bigint_add!(bigint_sub!(x6675, bigint_mul!(x6720, x6673, 8), 8), x6, 8);
    let x6722: BytePoly_8 = bigint_nondet_quot!(ctx, x6721, x6, 8);
    let x6723: BytePoly_4 = bigint_nondet_rem!(ctx, x6721, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6722, x6, 12), x6723, 12),
            x6721,
            12
        ),
        65028,
        4,
    )?;
    let x6724: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x6720, x6720, 8), x6673, 8), x6, 8),
            x6703,
            8
        ),
        x6,
        8
    );
    let x6725: BytePoly_9 = bigint_nondet_quot!(ctx, x6724, x6, 9);
    let x6726: BytePoly_4 = bigint_nondet_rem!(ctx, x6724, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6725, x6, 13), x6726, 13),
            x6724,
            13
        ),
        73156,
        4,
    )?;
    let x6727: BytePoly_8 = bigint_mul!(x6720, x6726, 8);
    let x6728: BytePoly_9 = bigint_nondet_quot!(ctx, x6727, x6, 9);
    let x6729: BytePoly_4 = bigint_nondet_rem!(ctx, x6727, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6728, x6, 13), x6729, 13),
            x6727,
            13
        ),
        73156,
        4,
    )?;
    let x6730: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x6729, x6723, 4), 4), x6, 4);
    let x6731: BytePoly_4 = bigint_nondet_quot!(ctx, x6730, x6, 4);
    let x6732: BytePoly_4 = bigint_nondet_rem!(ctx, x6730, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x6731, x6, 8), x6732, 8), x6730, 8),
        32515,
        2,
    )?;
    let x6733: BytePoly_5 = bigint_add!(
        bigint_mul!(x6726, x6710, 5),
        bigint_mul!(x6673, x6712, 5),
        5
    );
    let x6734: BytePoly_5 = bigint_add!(
        bigint_mul!(x6732, x6710, 5),
        bigint_mul!(x6675, x6712, 5),
        5
    );
    let x6735: BytePoly_6 = bigint_nondet_quot!(ctx, x6733, x6, 6);
    let x6736: BytePoly_4 = bigint_nondet_rem!(ctx, x6733, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6735, x6, 10), x6736, 10),
            x6733,
            10
        ),
        48771,
        4,
    )?;
    let x6737: BytePoly_6 = bigint_nondet_quot!(ctx, x6734, x6, 6);
    let x6738: BytePoly_4 = bigint_nondet_rem!(ctx, x6734, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6737, x6, 10), x6738, 10),
            x6734,
            10
        ),
        48771,
        4,
    )?;
    let x6739: BytePoly_8 = bigint_mul!(x6703, x6703, 8);
    let x6740: BytePoly_9 = bigint_nondet_quot!(ctx, x6739, x6, 9);
    let x6741: BytePoly_4 = bigint_nondet_rem!(ctx, x6739, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6740, x6, 13), x6741, 13),
            x6739,
            13
        ),
        73156,
        4,
    )?;
    let x6742: BytePoly_5 = bigint_add!(bigint_mul!(x6741, x0, 5), x5, 5);
    let x6743: BytePoly_6 = bigint_nondet_quot!(ctx, x6742, x6, 6);
    let x6744: BytePoly_4 = bigint_nondet_rem!(ctx, x6742, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6743, x6, 10), x6744, 10),
            x6742,
            10
        ),
        48771,
        4,
    )?;
    let x6745: BytePoly_4 = bigint_add!(x6709, x6709, 4);
    let x6746: BytePoly_4 = bigint_nondet_quot!(ctx, x6745, x6, 4);
    let x6747: BytePoly_4 = bigint_nondet_rem!(ctx, x6745, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x6746, x6, 8), x6747, 8), x6745, 8),
        32515,
        2,
    )?;
    let x6748: BytePoly_4 = bigint_nondet_inv!(ctx, x6747, x6, 4);
    let x6749: BytePoly_8 = bigint_mul!(x6747, x6748, 8);
    let x6750: BytePoly_9 = bigint_nondet_quot!(ctx, x6749, x6, 9);
    let x6751: BytePoly_4 = bigint_nondet_rem!(ctx, x6749, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6750, x6, 13), x6751, 13),
            x6749,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x6751, x3, 4), 34, 1)?;
    let x6752: BytePoly_8 = bigint_mul!(x6744, x6748, 8);
    let x6753: BytePoly_9 = bigint_nondet_quot!(ctx, x6752, x6, 9);
    let x6754: BytePoly_4 = bigint_nondet_rem!(ctx, x6752, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6753, x6, 13), x6754, 13),
            x6752,
            13
        ),
        73156,
        4,
    )?;
    let x6755: BytePoly_8 = bigint_mul!(x6754, x6703, 8);
    let x6756: BytePoly_9 = bigint_nondet_quot!(ctx, x6755, x6, 9);
    let x6757: BytePoly_4 = bigint_nondet_rem!(ctx, x6755, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6756, x6, 13), x6757, 13),
            x6755,
            13
        ),
        73156,
        4,
    )?;
    let x6758: BytePoly_4 = bigint_add!(bigint_sub!(x6709, x6757, 4), x6, 4);
    let x6759: BytePoly_4 = bigint_nondet_quot!(ctx, x6758, x6, 4);
    let x6760: BytePoly_4 = bigint_nondet_rem!(ctx, x6758, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x6759, x6, 8), x6760, 8), x6758, 8),
        32515,
        2,
    )?;
    let x6761: BytePoly_8 = bigint_mul!(x6754, x6754, 8);
    let x6762: BytePoly_9 = bigint_nondet_quot!(ctx, x6761, x6, 9);
    let x6763: BytePoly_4 = bigint_nondet_rem!(ctx, x6761, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6762, x6, 13), x6763, 13),
            x6761,
            13
        ),
        73156,
        4,
    )?;
    let x6764: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x6763, x6703, 4), x6, 4), x6703, 4),
        x6,
        4
    );
    let x6765: BytePoly_4 = bigint_nondet_quot!(ctx, x6764, x6, 4);
    let x6766: BytePoly_4 = bigint_nondet_rem!(ctx, x6764, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x6765, x6, 8), x6766, 8), x6764, 8),
        32515,
        2,
    )?;
    let x6767: BytePoly_8 = bigint_mul!(x6754, x6766, 8);
    let x6768: BytePoly_9 = bigint_nondet_quot!(ctx, x6767, x6, 9);
    let x6769: BytePoly_4 = bigint_nondet_rem!(ctx, x6767, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6768, x6, 13), x6769, 13),
            x6767,
            13
        ),
        73156,
        4,
    )?;
    let x6770: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x6769, x6760, 4), 4), x6, 4);
    let x6771: BytePoly_4 = bigint_nondet_quot!(ctx, x6770, x6, 4);
    let x6772: BytePoly_4 = bigint_nondet_rem!(ctx, x6770, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x6771, x6, 8), x6772, 8), x6770, 8),
        32515,
        2,
    )?;
    let x6773: BytePoly_1 = bigint_nondet_rem!(ctx, x6711, x2, 1);
    let x6774: BytePoly_5 = bigint_nondet_quot!(ctx, x6711, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x6774, x2, 6), x6773, 6), x6711, 6),
        40643,
        4,
    )?;
    let x6775: BytePoly_1 = bigint_sub!(x3, x6773, 1);
    eqz(ctx, &bigint_mul!(x6773, x6775, 2), 8131, 2)?;
    let x6776: BytePoly_4 = bigint_add!(bigint_sub!(x6766, x6736, 4), x6, 4);
    let x6777: BytePoly_4 = bigint_nondet_inv!(ctx, x6776, x6, 4);
    let x6778: BytePoly_8 = bigint_mul!(x6776, x6777, 8);
    let x6779: BytePoly_9 = bigint_nondet_quot!(ctx, x6778, x6, 9);
    let x6780: BytePoly_4 = bigint_nondet_rem!(ctx, x6778, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6779, x6, 13), x6780, 13),
            x6778,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x6780, x1, 4), 34, 1)?;
    let x6781: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x6772, x6738, 4), x6, 4), x6777, 8);
    let x6782: BytePoly_9 = bigint_nondet_quot!(ctx, x6781, x6, 9);
    let x6783: BytePoly_4 = bigint_nondet_rem!(ctx, x6781, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6782, x6, 13), x6783, 13),
            x6781,
            13
        ),
        73156,
        4,
    )?;
    let x6784: BytePoly_8 = bigint_add!(bigint_sub!(x6738, bigint_mul!(x6783, x6736, 8), 8), x6, 8);
    let x6785: BytePoly_8 = bigint_nondet_quot!(ctx, x6784, x6, 8);
    let x6786: BytePoly_4 = bigint_nondet_rem!(ctx, x6784, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6785, x6, 12), x6786, 12),
            x6784,
            12
        ),
        65028,
        4,
    )?;
    let x6787: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x6783, x6783, 8), x6736, 8), x6, 8),
            x6766,
            8
        ),
        x6,
        8
    );
    let x6788: BytePoly_9 = bigint_nondet_quot!(ctx, x6787, x6, 9);
    let x6789: BytePoly_4 = bigint_nondet_rem!(ctx, x6787, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6788, x6, 13), x6789, 13),
            x6787,
            13
        ),
        73156,
        4,
    )?;
    let x6790: BytePoly_8 = bigint_mul!(x6783, x6789, 8);
    let x6791: BytePoly_9 = bigint_nondet_quot!(ctx, x6790, x6, 9);
    let x6792: BytePoly_4 = bigint_nondet_rem!(ctx, x6790, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6791, x6, 13), x6792, 13),
            x6790,
            13
        ),
        73156,
        4,
    )?;
    let x6793: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x6792, x6786, 4), 4), x6, 4);
    let x6794: BytePoly_4 = bigint_nondet_quot!(ctx, x6793, x6, 4);
    let x6795: BytePoly_4 = bigint_nondet_rem!(ctx, x6793, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x6794, x6, 8), x6795, 8), x6793, 8),
        32515,
        2,
    )?;
    let x6796: BytePoly_5 = bigint_add!(
        bigint_mul!(x6789, x6773, 5),
        bigint_mul!(x6736, x6775, 5),
        5
    );
    let x6797: BytePoly_5 = bigint_add!(
        bigint_mul!(x6795, x6773, 5),
        bigint_mul!(x6738, x6775, 5),
        5
    );
    let x6798: BytePoly_6 = bigint_nondet_quot!(ctx, x6796, x6, 6);
    let x6799: BytePoly_4 = bigint_nondet_rem!(ctx, x6796, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6798, x6, 10), x6799, 10),
            x6796,
            10
        ),
        48771,
        4,
    )?;
    let x6800: BytePoly_6 = bigint_nondet_quot!(ctx, x6797, x6, 6);
    let x6801: BytePoly_4 = bigint_nondet_rem!(ctx, x6797, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6800, x6, 10), x6801, 10),
            x6797,
            10
        ),
        48771,
        4,
    )?;
    let x6802: BytePoly_8 = bigint_mul!(x6766, x6766, 8);
    let x6803: BytePoly_9 = bigint_nondet_quot!(ctx, x6802, x6, 9);
    let x6804: BytePoly_4 = bigint_nondet_rem!(ctx, x6802, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6803, x6, 13), x6804, 13),
            x6802,
            13
        ),
        73156,
        4,
    )?;
    let x6805: BytePoly_5 = bigint_add!(bigint_mul!(x6804, x0, 5), x5, 5);
    let x6806: BytePoly_6 = bigint_nondet_quot!(ctx, x6805, x6, 6);
    let x6807: BytePoly_4 = bigint_nondet_rem!(ctx, x6805, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6806, x6, 10), x6807, 10),
            x6805,
            10
        ),
        48771,
        4,
    )?;
    let x6808: BytePoly_4 = bigint_add!(x6772, x6772, 4);
    let x6809: BytePoly_4 = bigint_nondet_quot!(ctx, x6808, x6, 4);
    let x6810: BytePoly_4 = bigint_nondet_rem!(ctx, x6808, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x6809, x6, 8), x6810, 8), x6808, 8),
        32515,
        2,
    )?;
    let x6811: BytePoly_4 = bigint_nondet_inv!(ctx, x6810, x6, 4);
    let x6812: BytePoly_8 = bigint_mul!(x6810, x6811, 8);
    let x6813: BytePoly_9 = bigint_nondet_quot!(ctx, x6812, x6, 9);
    let x6814: BytePoly_4 = bigint_nondet_rem!(ctx, x6812, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6813, x6, 13), x6814, 13),
            x6812,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x6814, x3, 4), 34, 1)?;
    let x6815: BytePoly_8 = bigint_mul!(x6807, x6811, 8);
    let x6816: BytePoly_9 = bigint_nondet_quot!(ctx, x6815, x6, 9);
    let x6817: BytePoly_4 = bigint_nondet_rem!(ctx, x6815, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6816, x6, 13), x6817, 13),
            x6815,
            13
        ),
        73156,
        4,
    )?;
    let x6818: BytePoly_8 = bigint_mul!(x6817, x6766, 8);
    let x6819: BytePoly_9 = bigint_nondet_quot!(ctx, x6818, x6, 9);
    let x6820: BytePoly_4 = bigint_nondet_rem!(ctx, x6818, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6819, x6, 13), x6820, 13),
            x6818,
            13
        ),
        73156,
        4,
    )?;
    let x6821: BytePoly_4 = bigint_add!(bigint_sub!(x6772, x6820, 4), x6, 4);
    let x6822: BytePoly_4 = bigint_nondet_quot!(ctx, x6821, x6, 4);
    let x6823: BytePoly_4 = bigint_nondet_rem!(ctx, x6821, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x6822, x6, 8), x6823, 8), x6821, 8),
        32515,
        2,
    )?;
    let x6824: BytePoly_8 = bigint_mul!(x6817, x6817, 8);
    let x6825: BytePoly_9 = bigint_nondet_quot!(ctx, x6824, x6, 9);
    let x6826: BytePoly_4 = bigint_nondet_rem!(ctx, x6824, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6825, x6, 13), x6826, 13),
            x6824,
            13
        ),
        73156,
        4,
    )?;
    let x6827: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x6826, x6766, 4), x6, 4), x6766, 4),
        x6,
        4
    );
    let x6828: BytePoly_4 = bigint_nondet_quot!(ctx, x6827, x6, 4);
    let x6829: BytePoly_4 = bigint_nondet_rem!(ctx, x6827, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x6828, x6, 8), x6829, 8), x6827, 8),
        32515,
        2,
    )?;
    let x6830: BytePoly_8 = bigint_mul!(x6817, x6829, 8);
    let x6831: BytePoly_9 = bigint_nondet_quot!(ctx, x6830, x6, 9);
    let x6832: BytePoly_4 = bigint_nondet_rem!(ctx, x6830, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6831, x6, 13), x6832, 13),
            x6830,
            13
        ),
        73156,
        4,
    )?;
    let x6833: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x6832, x6823, 4), 4), x6, 4);
    let x6834: BytePoly_4 = bigint_nondet_quot!(ctx, x6833, x6, 4);
    let x6835: BytePoly_4 = bigint_nondet_rem!(ctx, x6833, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x6834, x6, 8), x6835, 8), x6833, 8),
        32515,
        2,
    )?;
    let x6836: BytePoly_1 = bigint_nondet_rem!(ctx, x6774, x2, 1);
    let x6837: BytePoly_5 = bigint_nondet_quot!(ctx, x6774, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x6837, x2, 6), x6836, 6), x6774, 6),
        40643,
        4,
    )?;
    let x6838: BytePoly_1 = bigint_sub!(x3, x6836, 1);
    eqz(ctx, &bigint_mul!(x6836, x6838, 2), 8131, 2)?;
    let x6839: BytePoly_4 = bigint_add!(bigint_sub!(x6829, x6799, 4), x6, 4);
    let x6840: BytePoly_4 = bigint_nondet_inv!(ctx, x6839, x6, 4);
    let x6841: BytePoly_8 = bigint_mul!(x6839, x6840, 8);
    let x6842: BytePoly_9 = bigint_nondet_quot!(ctx, x6841, x6, 9);
    let x6843: BytePoly_4 = bigint_nondet_rem!(ctx, x6841, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6842, x6, 13), x6843, 13),
            x6841,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x6843, x1, 4), 34, 1)?;
    let x6844: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x6835, x6801, 4), x6, 4), x6840, 8);
    let x6845: BytePoly_9 = bigint_nondet_quot!(ctx, x6844, x6, 9);
    let x6846: BytePoly_4 = bigint_nondet_rem!(ctx, x6844, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6845, x6, 13), x6846, 13),
            x6844,
            13
        ),
        73156,
        4,
    )?;
    let x6847: BytePoly_8 = bigint_add!(bigint_sub!(x6801, bigint_mul!(x6846, x6799, 8), 8), x6, 8);
    let x6848: BytePoly_8 = bigint_nondet_quot!(ctx, x6847, x6, 8);
    let x6849: BytePoly_4 = bigint_nondet_rem!(ctx, x6847, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6848, x6, 12), x6849, 12),
            x6847,
            12
        ),
        65028,
        4,
    )?;
    let x6850: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x6846, x6846, 8), x6799, 8), x6, 8),
            x6829,
            8
        ),
        x6,
        8
    );
    let x6851: BytePoly_9 = bigint_nondet_quot!(ctx, x6850, x6, 9);
    let x6852: BytePoly_4 = bigint_nondet_rem!(ctx, x6850, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6851, x6, 13), x6852, 13),
            x6850,
            13
        ),
        73156,
        4,
    )?;
    let x6853: BytePoly_8 = bigint_mul!(x6846, x6852, 8);
    let x6854: BytePoly_9 = bigint_nondet_quot!(ctx, x6853, x6, 9);
    let x6855: BytePoly_4 = bigint_nondet_rem!(ctx, x6853, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6854, x6, 13), x6855, 13),
            x6853,
            13
        ),
        73156,
        4,
    )?;
    let x6856: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x6855, x6849, 4), 4), x6, 4);
    let x6857: BytePoly_4 = bigint_nondet_quot!(ctx, x6856, x6, 4);
    let x6858: BytePoly_4 = bigint_nondet_rem!(ctx, x6856, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x6857, x6, 8), x6858, 8), x6856, 8),
        32515,
        2,
    )?;
    let x6859: BytePoly_5 = bigint_add!(
        bigint_mul!(x6852, x6836, 5),
        bigint_mul!(x6799, x6838, 5),
        5
    );
    let x6860: BytePoly_5 = bigint_add!(
        bigint_mul!(x6858, x6836, 5),
        bigint_mul!(x6801, x6838, 5),
        5
    );
    let x6861: BytePoly_6 = bigint_nondet_quot!(ctx, x6859, x6, 6);
    let x6862: BytePoly_4 = bigint_nondet_rem!(ctx, x6859, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6861, x6, 10), x6862, 10),
            x6859,
            10
        ),
        48771,
        4,
    )?;
    let x6863: BytePoly_6 = bigint_nondet_quot!(ctx, x6860, x6, 6);
    let x6864: BytePoly_4 = bigint_nondet_rem!(ctx, x6860, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6863, x6, 10), x6864, 10),
            x6860,
            10
        ),
        48771,
        4,
    )?;
    let x6865: BytePoly_8 = bigint_mul!(x6829, x6829, 8);
    let x6866: BytePoly_9 = bigint_nondet_quot!(ctx, x6865, x6, 9);
    let x6867: BytePoly_4 = bigint_nondet_rem!(ctx, x6865, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6866, x6, 13), x6867, 13),
            x6865,
            13
        ),
        73156,
        4,
    )?;
    let x6868: BytePoly_5 = bigint_add!(bigint_mul!(x6867, x0, 5), x5, 5);
    let x6869: BytePoly_6 = bigint_nondet_quot!(ctx, x6868, x6, 6);
    let x6870: BytePoly_4 = bigint_nondet_rem!(ctx, x6868, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6869, x6, 10), x6870, 10),
            x6868,
            10
        ),
        48771,
        4,
    )?;
    let x6871: BytePoly_4 = bigint_add!(x6835, x6835, 4);
    let x6872: BytePoly_4 = bigint_nondet_quot!(ctx, x6871, x6, 4);
    let x6873: BytePoly_4 = bigint_nondet_rem!(ctx, x6871, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x6872, x6, 8), x6873, 8), x6871, 8),
        32515,
        2,
    )?;
    let x6874: BytePoly_4 = bigint_nondet_inv!(ctx, x6873, x6, 4);
    let x6875: BytePoly_8 = bigint_mul!(x6873, x6874, 8);
    let x6876: BytePoly_9 = bigint_nondet_quot!(ctx, x6875, x6, 9);
    let x6877: BytePoly_4 = bigint_nondet_rem!(ctx, x6875, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6876, x6, 13), x6877, 13),
            x6875,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x6877, x3, 4), 34, 1)?;
    let x6878: BytePoly_8 = bigint_mul!(x6870, x6874, 8);
    let x6879: BytePoly_9 = bigint_nondet_quot!(ctx, x6878, x6, 9);
    let x6880: BytePoly_4 = bigint_nondet_rem!(ctx, x6878, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6879, x6, 13), x6880, 13),
            x6878,
            13
        ),
        73156,
        4,
    )?;
    let x6881: BytePoly_8 = bigint_mul!(x6880, x6829, 8);
    let x6882: BytePoly_9 = bigint_nondet_quot!(ctx, x6881, x6, 9);
    let x6883: BytePoly_4 = bigint_nondet_rem!(ctx, x6881, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6882, x6, 13), x6883, 13),
            x6881,
            13
        ),
        73156,
        4,
    )?;
    let x6884: BytePoly_4 = bigint_add!(bigint_sub!(x6835, x6883, 4), x6, 4);
    let x6885: BytePoly_4 = bigint_nondet_quot!(ctx, x6884, x6, 4);
    let x6886: BytePoly_4 = bigint_nondet_rem!(ctx, x6884, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x6885, x6, 8), x6886, 8), x6884, 8),
        32515,
        2,
    )?;
    let x6887: BytePoly_8 = bigint_mul!(x6880, x6880, 8);
    let x6888: BytePoly_9 = bigint_nondet_quot!(ctx, x6887, x6, 9);
    let x6889: BytePoly_4 = bigint_nondet_rem!(ctx, x6887, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6888, x6, 13), x6889, 13),
            x6887,
            13
        ),
        73156,
        4,
    )?;
    let x6890: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x6889, x6829, 4), x6, 4), x6829, 4),
        x6,
        4
    );
    let x6891: BytePoly_4 = bigint_nondet_quot!(ctx, x6890, x6, 4);
    let x6892: BytePoly_4 = bigint_nondet_rem!(ctx, x6890, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x6891, x6, 8), x6892, 8), x6890, 8),
        32515,
        2,
    )?;
    let x6893: BytePoly_8 = bigint_mul!(x6880, x6892, 8);
    let x6894: BytePoly_9 = bigint_nondet_quot!(ctx, x6893, x6, 9);
    let x6895: BytePoly_4 = bigint_nondet_rem!(ctx, x6893, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6894, x6, 13), x6895, 13),
            x6893,
            13
        ),
        73156,
        4,
    )?;
    let x6896: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x6895, x6886, 4), 4), x6, 4);
    let x6897: BytePoly_4 = bigint_nondet_quot!(ctx, x6896, x6, 4);
    let x6898: BytePoly_4 = bigint_nondet_rem!(ctx, x6896, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x6897, x6, 8), x6898, 8), x6896, 8),
        32515,
        2,
    )?;
    let x6899: BytePoly_1 = bigint_nondet_rem!(ctx, x6837, x2, 1);
    let x6900: BytePoly_5 = bigint_nondet_quot!(ctx, x6837, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x6900, x2, 6), x6899, 6), x6837, 6),
        40643,
        4,
    )?;
    let x6901: BytePoly_1 = bigint_sub!(x3, x6899, 1);
    eqz(ctx, &bigint_mul!(x6899, x6901, 2), 8131, 2)?;
    let x6902: BytePoly_4 = bigint_add!(bigint_sub!(x6892, x6862, 4), x6, 4);
    let x6903: BytePoly_4 = bigint_nondet_inv!(ctx, x6902, x6, 4);
    let x6904: BytePoly_8 = bigint_mul!(x6902, x6903, 8);
    let x6905: BytePoly_9 = bigint_nondet_quot!(ctx, x6904, x6, 9);
    let x6906: BytePoly_4 = bigint_nondet_rem!(ctx, x6904, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6905, x6, 13), x6906, 13),
            x6904,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x6906, x1, 4), 34, 1)?;
    let x6907: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x6898, x6864, 4), x6, 4), x6903, 8);
    let x6908: BytePoly_9 = bigint_nondet_quot!(ctx, x6907, x6, 9);
    let x6909: BytePoly_4 = bigint_nondet_rem!(ctx, x6907, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6908, x6, 13), x6909, 13),
            x6907,
            13
        ),
        73156,
        4,
    )?;
    let x6910: BytePoly_8 = bigint_add!(bigint_sub!(x6864, bigint_mul!(x6909, x6862, 8), 8), x6, 8);
    let x6911: BytePoly_8 = bigint_nondet_quot!(ctx, x6910, x6, 8);
    let x6912: BytePoly_4 = bigint_nondet_rem!(ctx, x6910, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6911, x6, 12), x6912, 12),
            x6910,
            12
        ),
        65028,
        4,
    )?;
    let x6913: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x6909, x6909, 8), x6862, 8), x6, 8),
            x6892,
            8
        ),
        x6,
        8
    );
    let x6914: BytePoly_9 = bigint_nondet_quot!(ctx, x6913, x6, 9);
    let x6915: BytePoly_4 = bigint_nondet_rem!(ctx, x6913, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6914, x6, 13), x6915, 13),
            x6913,
            13
        ),
        73156,
        4,
    )?;
    let x6916: BytePoly_8 = bigint_mul!(x6909, x6915, 8);
    let x6917: BytePoly_9 = bigint_nondet_quot!(ctx, x6916, x6, 9);
    let x6918: BytePoly_4 = bigint_nondet_rem!(ctx, x6916, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6917, x6, 13), x6918, 13),
            x6916,
            13
        ),
        73156,
        4,
    )?;
    let x6919: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x6918, x6912, 4), 4), x6, 4);
    let x6920: BytePoly_4 = bigint_nondet_quot!(ctx, x6919, x6, 4);
    let x6921: BytePoly_4 = bigint_nondet_rem!(ctx, x6919, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x6920, x6, 8), x6921, 8), x6919, 8),
        32515,
        2,
    )?;
    let x6922: BytePoly_5 = bigint_add!(
        bigint_mul!(x6915, x6899, 5),
        bigint_mul!(x6862, x6901, 5),
        5
    );
    let x6923: BytePoly_5 = bigint_add!(
        bigint_mul!(x6921, x6899, 5),
        bigint_mul!(x6864, x6901, 5),
        5
    );
    let x6924: BytePoly_6 = bigint_nondet_quot!(ctx, x6922, x6, 6);
    let x6925: BytePoly_4 = bigint_nondet_rem!(ctx, x6922, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6924, x6, 10), x6925, 10),
            x6922,
            10
        ),
        48771,
        4,
    )?;
    let x6926: BytePoly_6 = bigint_nondet_quot!(ctx, x6923, x6, 6);
    let x6927: BytePoly_4 = bigint_nondet_rem!(ctx, x6923, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6926, x6, 10), x6927, 10),
            x6923,
            10
        ),
        48771,
        4,
    )?;
    let x6928: BytePoly_8 = bigint_mul!(x6892, x6892, 8);
    let x6929: BytePoly_9 = bigint_nondet_quot!(ctx, x6928, x6, 9);
    let x6930: BytePoly_4 = bigint_nondet_rem!(ctx, x6928, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6929, x6, 13), x6930, 13),
            x6928,
            13
        ),
        73156,
        4,
    )?;
    let x6931: BytePoly_5 = bigint_add!(bigint_mul!(x6930, x0, 5), x5, 5);
    let x6932: BytePoly_6 = bigint_nondet_quot!(ctx, x6931, x6, 6);
    let x6933: BytePoly_4 = bigint_nondet_rem!(ctx, x6931, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6932, x6, 10), x6933, 10),
            x6931,
            10
        ),
        48771,
        4,
    )?;
    let x6934: BytePoly_4 = bigint_add!(x6898, x6898, 4);
    let x6935: BytePoly_4 = bigint_nondet_quot!(ctx, x6934, x6, 4);
    let x6936: BytePoly_4 = bigint_nondet_rem!(ctx, x6934, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x6935, x6, 8), x6936, 8), x6934, 8),
        32515,
        2,
    )?;
    let x6937: BytePoly_4 = bigint_nondet_inv!(ctx, x6936, x6, 4);
    let x6938: BytePoly_8 = bigint_mul!(x6936, x6937, 8);
    let x6939: BytePoly_9 = bigint_nondet_quot!(ctx, x6938, x6, 9);
    let x6940: BytePoly_4 = bigint_nondet_rem!(ctx, x6938, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6939, x6, 13), x6940, 13),
            x6938,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x6940, x3, 4), 34, 1)?;
    let x6941: BytePoly_8 = bigint_mul!(x6933, x6937, 8);
    let x6942: BytePoly_9 = bigint_nondet_quot!(ctx, x6941, x6, 9);
    let x6943: BytePoly_4 = bigint_nondet_rem!(ctx, x6941, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6942, x6, 13), x6943, 13),
            x6941,
            13
        ),
        73156,
        4,
    )?;
    let x6944: BytePoly_8 = bigint_mul!(x6943, x6892, 8);
    let x6945: BytePoly_9 = bigint_nondet_quot!(ctx, x6944, x6, 9);
    let x6946: BytePoly_4 = bigint_nondet_rem!(ctx, x6944, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6945, x6, 13), x6946, 13),
            x6944,
            13
        ),
        73156,
        4,
    )?;
    let x6947: BytePoly_4 = bigint_add!(bigint_sub!(x6898, x6946, 4), x6, 4);
    let x6948: BytePoly_4 = bigint_nondet_quot!(ctx, x6947, x6, 4);
    let x6949: BytePoly_4 = bigint_nondet_rem!(ctx, x6947, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x6948, x6, 8), x6949, 8), x6947, 8),
        32515,
        2,
    )?;
    let x6950: BytePoly_8 = bigint_mul!(x6943, x6943, 8);
    let x6951: BytePoly_9 = bigint_nondet_quot!(ctx, x6950, x6, 9);
    let x6952: BytePoly_4 = bigint_nondet_rem!(ctx, x6950, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6951, x6, 13), x6952, 13),
            x6950,
            13
        ),
        73156,
        4,
    )?;
    let x6953: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x6952, x6892, 4), x6, 4), x6892, 4),
        x6,
        4
    );
    let x6954: BytePoly_4 = bigint_nondet_quot!(ctx, x6953, x6, 4);
    let x6955: BytePoly_4 = bigint_nondet_rem!(ctx, x6953, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x6954, x6, 8), x6955, 8), x6953, 8),
        32515,
        2,
    )?;
    let x6956: BytePoly_8 = bigint_mul!(x6943, x6955, 8);
    let x6957: BytePoly_9 = bigint_nondet_quot!(ctx, x6956, x6, 9);
    let x6958: BytePoly_4 = bigint_nondet_rem!(ctx, x6956, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6957, x6, 13), x6958, 13),
            x6956,
            13
        ),
        73156,
        4,
    )?;
    let x6959: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x6958, x6949, 4), 4), x6, 4);
    let x6960: BytePoly_4 = bigint_nondet_quot!(ctx, x6959, x6, 4);
    let x6961: BytePoly_4 = bigint_nondet_rem!(ctx, x6959, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x6960, x6, 8), x6961, 8), x6959, 8),
        32515,
        2,
    )?;
    let x6962: BytePoly_1 = bigint_nondet_rem!(ctx, x6900, x2, 1);
    let x6963: BytePoly_5 = bigint_nondet_quot!(ctx, x6900, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x6963, x2, 6), x6962, 6), x6900, 6),
        40643,
        4,
    )?;
    let x6964: BytePoly_1 = bigint_sub!(x3, x6962, 1);
    eqz(ctx, &bigint_mul!(x6962, x6964, 2), 8131, 2)?;
    let x6965: BytePoly_4 = bigint_add!(bigint_sub!(x6955, x6925, 4), x6, 4);
    let x6966: BytePoly_4 = bigint_nondet_inv!(ctx, x6965, x6, 4);
    let x6967: BytePoly_8 = bigint_mul!(x6965, x6966, 8);
    let x6968: BytePoly_9 = bigint_nondet_quot!(ctx, x6967, x6, 9);
    let x6969: BytePoly_4 = bigint_nondet_rem!(ctx, x6967, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6968, x6, 13), x6969, 13),
            x6967,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x6969, x1, 4), 34, 1)?;
    let x6970: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x6961, x6927, 4), x6, 4), x6966, 8);
    let x6971: BytePoly_9 = bigint_nondet_quot!(ctx, x6970, x6, 9);
    let x6972: BytePoly_4 = bigint_nondet_rem!(ctx, x6970, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6971, x6, 13), x6972, 13),
            x6970,
            13
        ),
        73156,
        4,
    )?;
    let x6973: BytePoly_8 = bigint_add!(bigint_sub!(x6927, bigint_mul!(x6972, x6925, 8), 8), x6, 8);
    let x6974: BytePoly_8 = bigint_nondet_quot!(ctx, x6973, x6, 8);
    let x6975: BytePoly_4 = bigint_nondet_rem!(ctx, x6973, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6974, x6, 12), x6975, 12),
            x6973,
            12
        ),
        65028,
        4,
    )?;
    let x6976: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x6972, x6972, 8), x6925, 8), x6, 8),
            x6955,
            8
        ),
        x6,
        8
    );
    let x6977: BytePoly_9 = bigint_nondet_quot!(ctx, x6976, x6, 9);
    let x6978: BytePoly_4 = bigint_nondet_rem!(ctx, x6976, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6977, x6, 13), x6978, 13),
            x6976,
            13
        ),
        73156,
        4,
    )?;
    let x6979: BytePoly_8 = bigint_mul!(x6972, x6978, 8);
    let x6980: BytePoly_9 = bigint_nondet_quot!(ctx, x6979, x6, 9);
    let x6981: BytePoly_4 = bigint_nondet_rem!(ctx, x6979, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6980, x6, 13), x6981, 13),
            x6979,
            13
        ),
        73156,
        4,
    )?;
    let x6982: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x6981, x6975, 4), 4), x6, 4);
    let x6983: BytePoly_4 = bigint_nondet_quot!(ctx, x6982, x6, 4);
    let x6984: BytePoly_4 = bigint_nondet_rem!(ctx, x6982, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x6983, x6, 8), x6984, 8), x6982, 8),
        32515,
        2,
    )?;
    let x6985: BytePoly_5 = bigint_add!(
        bigint_mul!(x6978, x6962, 5),
        bigint_mul!(x6925, x6964, 5),
        5
    );
    let x6986: BytePoly_5 = bigint_add!(
        bigint_mul!(x6984, x6962, 5),
        bigint_mul!(x6927, x6964, 5),
        5
    );
    let x6987: BytePoly_6 = bigint_nondet_quot!(ctx, x6985, x6, 6);
    let x6988: BytePoly_4 = bigint_nondet_rem!(ctx, x6985, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6987, x6, 10), x6988, 10),
            x6985,
            10
        ),
        48771,
        4,
    )?;
    let x6989: BytePoly_6 = bigint_nondet_quot!(ctx, x6986, x6, 6);
    let x6990: BytePoly_4 = bigint_nondet_rem!(ctx, x6986, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6989, x6, 10), x6990, 10),
            x6986,
            10
        ),
        48771,
        4,
    )?;
    let x6991: BytePoly_8 = bigint_mul!(x6955, x6955, 8);
    let x6992: BytePoly_9 = bigint_nondet_quot!(ctx, x6991, x6, 9);
    let x6993: BytePoly_4 = bigint_nondet_rem!(ctx, x6991, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6992, x6, 13), x6993, 13),
            x6991,
            13
        ),
        73156,
        4,
    )?;
    let x6994: BytePoly_5 = bigint_add!(bigint_mul!(x6993, x0, 5), x5, 5);
    let x6995: BytePoly_6 = bigint_nondet_quot!(ctx, x6994, x6, 6);
    let x6996: BytePoly_4 = bigint_nondet_rem!(ctx, x6994, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x6995, x6, 10), x6996, 10),
            x6994,
            10
        ),
        48771,
        4,
    )?;
    let x6997: BytePoly_4 = bigint_add!(x6961, x6961, 4);
    let x6998: BytePoly_4 = bigint_nondet_quot!(ctx, x6997, x6, 4);
    let x6999: BytePoly_4 = bigint_nondet_rem!(ctx, x6997, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x6998, x6, 8), x6999, 8), x6997, 8),
        32515,
        2,
    )?;
    let x7000: BytePoly_4 = bigint_nondet_inv!(ctx, x6999, x6, 4);
    let x7001: BytePoly_8 = bigint_mul!(x6999, x7000, 8);
    let x7002: BytePoly_9 = bigint_nondet_quot!(ctx, x7001, x6, 9);
    let x7003: BytePoly_4 = bigint_nondet_rem!(ctx, x7001, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7002, x6, 13), x7003, 13),
            x7001,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x7003, x3, 4), 34, 1)?;
    let x7004: BytePoly_8 = bigint_mul!(x6996, x7000, 8);
    let x7005: BytePoly_9 = bigint_nondet_quot!(ctx, x7004, x6, 9);
    let x7006: BytePoly_4 = bigint_nondet_rem!(ctx, x7004, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7005, x6, 13), x7006, 13),
            x7004,
            13
        ),
        73156,
        4,
    )?;
    let x7007: BytePoly_8 = bigint_mul!(x7006, x6955, 8);
    let x7008: BytePoly_9 = bigint_nondet_quot!(ctx, x7007, x6, 9);
    let x7009: BytePoly_4 = bigint_nondet_rem!(ctx, x7007, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7008, x6, 13), x7009, 13),
            x7007,
            13
        ),
        73156,
        4,
    )?;
    let x7010: BytePoly_4 = bigint_add!(bigint_sub!(x6961, x7009, 4), x6, 4);
    let x7011: BytePoly_4 = bigint_nondet_quot!(ctx, x7010, x6, 4);
    let x7012: BytePoly_4 = bigint_nondet_rem!(ctx, x7010, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x7011, x6, 8), x7012, 8), x7010, 8),
        32515,
        2,
    )?;
    let x7013: BytePoly_8 = bigint_mul!(x7006, x7006, 8);
    let x7014: BytePoly_9 = bigint_nondet_quot!(ctx, x7013, x6, 9);
    let x7015: BytePoly_4 = bigint_nondet_rem!(ctx, x7013, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7014, x6, 13), x7015, 13),
            x7013,
            13
        ),
        73156,
        4,
    )?;
    let x7016: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x7015, x6955, 4), x6, 4), x6955, 4),
        x6,
        4
    );
    let x7017: BytePoly_4 = bigint_nondet_quot!(ctx, x7016, x6, 4);
    let x7018: BytePoly_4 = bigint_nondet_rem!(ctx, x7016, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x7017, x6, 8), x7018, 8), x7016, 8),
        32515,
        2,
    )?;
    let x7019: BytePoly_8 = bigint_mul!(x7006, x7018, 8);
    let x7020: BytePoly_9 = bigint_nondet_quot!(ctx, x7019, x6, 9);
    let x7021: BytePoly_4 = bigint_nondet_rem!(ctx, x7019, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7020, x6, 13), x7021, 13),
            x7019,
            13
        ),
        73156,
        4,
    )?;
    let x7022: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x7021, x7012, 4), 4), x6, 4);
    let x7023: BytePoly_4 = bigint_nondet_quot!(ctx, x7022, x6, 4);
    let x7024: BytePoly_4 = bigint_nondet_rem!(ctx, x7022, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x7023, x6, 8), x7024, 8), x7022, 8),
        32515,
        2,
    )?;
    let x7025: BytePoly_1 = bigint_nondet_rem!(ctx, x6963, x2, 1);
    let x7026: BytePoly_5 = bigint_nondet_quot!(ctx, x6963, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x7026, x2, 6), x7025, 6), x6963, 6),
        40643,
        4,
    )?;
    let x7027: BytePoly_1 = bigint_sub!(x3, x7025, 1);
    eqz(ctx, &bigint_mul!(x7025, x7027, 2), 8131, 2)?;
    let x7028: BytePoly_4 = bigint_add!(bigint_sub!(x7018, x6988, 4), x6, 4);
    let x7029: BytePoly_4 = bigint_nondet_inv!(ctx, x7028, x6, 4);
    let x7030: BytePoly_8 = bigint_mul!(x7028, x7029, 8);
    let x7031: BytePoly_9 = bigint_nondet_quot!(ctx, x7030, x6, 9);
    let x7032: BytePoly_4 = bigint_nondet_rem!(ctx, x7030, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7031, x6, 13), x7032, 13),
            x7030,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x7032, x1, 4), 34, 1)?;
    let x7033: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x7024, x6990, 4), x6, 4), x7029, 8);
    let x7034: BytePoly_9 = bigint_nondet_quot!(ctx, x7033, x6, 9);
    let x7035: BytePoly_4 = bigint_nondet_rem!(ctx, x7033, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7034, x6, 13), x7035, 13),
            x7033,
            13
        ),
        73156,
        4,
    )?;
    let x7036: BytePoly_8 = bigint_add!(bigint_sub!(x6990, bigint_mul!(x7035, x6988, 8), 8), x6, 8);
    let x7037: BytePoly_8 = bigint_nondet_quot!(ctx, x7036, x6, 8);
    let x7038: BytePoly_4 = bigint_nondet_rem!(ctx, x7036, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7037, x6, 12), x7038, 12),
            x7036,
            12
        ),
        65028,
        4,
    )?;
    let x7039: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x7035, x7035, 8), x6988, 8), x6, 8),
            x7018,
            8
        ),
        x6,
        8
    );
    let x7040: BytePoly_9 = bigint_nondet_quot!(ctx, x7039, x6, 9);
    let x7041: BytePoly_4 = bigint_nondet_rem!(ctx, x7039, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7040, x6, 13), x7041, 13),
            x7039,
            13
        ),
        73156,
        4,
    )?;
    let x7042: BytePoly_8 = bigint_mul!(x7035, x7041, 8);
    let x7043: BytePoly_9 = bigint_nondet_quot!(ctx, x7042, x6, 9);
    let x7044: BytePoly_4 = bigint_nondet_rem!(ctx, x7042, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7043, x6, 13), x7044, 13),
            x7042,
            13
        ),
        73156,
        4,
    )?;
    let x7045: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x7044, x7038, 4), 4), x6, 4);
    let x7046: BytePoly_4 = bigint_nondet_quot!(ctx, x7045, x6, 4);
    let x7047: BytePoly_4 = bigint_nondet_rem!(ctx, x7045, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x7046, x6, 8), x7047, 8), x7045, 8),
        32515,
        2,
    )?;
    let x7048: BytePoly_5 = bigint_add!(
        bigint_mul!(x7041, x7025, 5),
        bigint_mul!(x6988, x7027, 5),
        5
    );
    let x7049: BytePoly_5 = bigint_add!(
        bigint_mul!(x7047, x7025, 5),
        bigint_mul!(x6990, x7027, 5),
        5
    );
    let x7050: BytePoly_6 = bigint_nondet_quot!(ctx, x7048, x6, 6);
    let x7051: BytePoly_4 = bigint_nondet_rem!(ctx, x7048, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7050, x6, 10), x7051, 10),
            x7048,
            10
        ),
        48771,
        4,
    )?;
    let x7052: BytePoly_6 = bigint_nondet_quot!(ctx, x7049, x6, 6);
    let x7053: BytePoly_4 = bigint_nondet_rem!(ctx, x7049, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7052, x6, 10), x7053, 10),
            x7049,
            10
        ),
        48771,
        4,
    )?;
    let x7054: BytePoly_8 = bigint_mul!(x7018, x7018, 8);
    let x7055: BytePoly_9 = bigint_nondet_quot!(ctx, x7054, x6, 9);
    let x7056: BytePoly_4 = bigint_nondet_rem!(ctx, x7054, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7055, x6, 13), x7056, 13),
            x7054,
            13
        ),
        73156,
        4,
    )?;
    let x7057: BytePoly_5 = bigint_add!(bigint_mul!(x7056, x0, 5), x5, 5);
    let x7058: BytePoly_6 = bigint_nondet_quot!(ctx, x7057, x6, 6);
    let x7059: BytePoly_4 = bigint_nondet_rem!(ctx, x7057, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7058, x6, 10), x7059, 10),
            x7057,
            10
        ),
        48771,
        4,
    )?;
    let x7060: BytePoly_4 = bigint_add!(x7024, x7024, 4);
    let x7061: BytePoly_4 = bigint_nondet_quot!(ctx, x7060, x6, 4);
    let x7062: BytePoly_4 = bigint_nondet_rem!(ctx, x7060, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x7061, x6, 8), x7062, 8), x7060, 8),
        32515,
        2,
    )?;
    let x7063: BytePoly_4 = bigint_nondet_inv!(ctx, x7062, x6, 4);
    let x7064: BytePoly_8 = bigint_mul!(x7062, x7063, 8);
    let x7065: BytePoly_9 = bigint_nondet_quot!(ctx, x7064, x6, 9);
    let x7066: BytePoly_4 = bigint_nondet_rem!(ctx, x7064, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7065, x6, 13), x7066, 13),
            x7064,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x7066, x3, 4), 34, 1)?;
    let x7067: BytePoly_8 = bigint_mul!(x7059, x7063, 8);
    let x7068: BytePoly_9 = bigint_nondet_quot!(ctx, x7067, x6, 9);
    let x7069: BytePoly_4 = bigint_nondet_rem!(ctx, x7067, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7068, x6, 13), x7069, 13),
            x7067,
            13
        ),
        73156,
        4,
    )?;
    let x7070: BytePoly_8 = bigint_mul!(x7069, x7018, 8);
    let x7071: BytePoly_9 = bigint_nondet_quot!(ctx, x7070, x6, 9);
    let x7072: BytePoly_4 = bigint_nondet_rem!(ctx, x7070, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7071, x6, 13), x7072, 13),
            x7070,
            13
        ),
        73156,
        4,
    )?;
    let x7073: BytePoly_4 = bigint_add!(bigint_sub!(x7024, x7072, 4), x6, 4);
    let x7074: BytePoly_4 = bigint_nondet_quot!(ctx, x7073, x6, 4);
    let x7075: BytePoly_4 = bigint_nondet_rem!(ctx, x7073, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x7074, x6, 8), x7075, 8), x7073, 8),
        32515,
        2,
    )?;
    let x7076: BytePoly_8 = bigint_mul!(x7069, x7069, 8);
    let x7077: BytePoly_9 = bigint_nondet_quot!(ctx, x7076, x6, 9);
    let x7078: BytePoly_4 = bigint_nondet_rem!(ctx, x7076, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7077, x6, 13), x7078, 13),
            x7076,
            13
        ),
        73156,
        4,
    )?;
    let x7079: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x7078, x7018, 4), x6, 4), x7018, 4),
        x6,
        4
    );
    let x7080: BytePoly_4 = bigint_nondet_quot!(ctx, x7079, x6, 4);
    let x7081: BytePoly_4 = bigint_nondet_rem!(ctx, x7079, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x7080, x6, 8), x7081, 8), x7079, 8),
        32515,
        2,
    )?;
    let x7082: BytePoly_8 = bigint_mul!(x7069, x7081, 8);
    let x7083: BytePoly_9 = bigint_nondet_quot!(ctx, x7082, x6, 9);
    let x7084: BytePoly_4 = bigint_nondet_rem!(ctx, x7082, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7083, x6, 13), x7084, 13),
            x7082,
            13
        ),
        73156,
        4,
    )?;
    let x7085: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x7084, x7075, 4), 4), x6, 4);
    let x7086: BytePoly_4 = bigint_nondet_quot!(ctx, x7085, x6, 4);
    let x7087: BytePoly_4 = bigint_nondet_rem!(ctx, x7085, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x7086, x6, 8), x7087, 8), x7085, 8),
        32515,
        2,
    )?;
    let x7088: BytePoly_1 = bigint_nondet_rem!(ctx, x7026, x2, 1);
    let x7089: BytePoly_5 = bigint_nondet_quot!(ctx, x7026, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x7089, x2, 6), x7088, 6), x7026, 6),
        40643,
        4,
    )?;
    let x7090: BytePoly_1 = bigint_sub!(x3, x7088, 1);
    eqz(ctx, &bigint_mul!(x7088, x7090, 2), 8131, 2)?;
    let x7091: BytePoly_4 = bigint_add!(bigint_sub!(x7081, x7051, 4), x6, 4);
    let x7092: BytePoly_4 = bigint_nondet_inv!(ctx, x7091, x6, 4);
    let x7093: BytePoly_8 = bigint_mul!(x7091, x7092, 8);
    let x7094: BytePoly_9 = bigint_nondet_quot!(ctx, x7093, x6, 9);
    let x7095: BytePoly_4 = bigint_nondet_rem!(ctx, x7093, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7094, x6, 13), x7095, 13),
            x7093,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x7095, x1, 4), 34, 1)?;
    let x7096: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x7087, x7053, 4), x6, 4), x7092, 8);
    let x7097: BytePoly_9 = bigint_nondet_quot!(ctx, x7096, x6, 9);
    let x7098: BytePoly_4 = bigint_nondet_rem!(ctx, x7096, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7097, x6, 13), x7098, 13),
            x7096,
            13
        ),
        73156,
        4,
    )?;
    let x7099: BytePoly_8 = bigint_add!(bigint_sub!(x7053, bigint_mul!(x7098, x7051, 8), 8), x6, 8);
    let x7100: BytePoly_8 = bigint_nondet_quot!(ctx, x7099, x6, 8);
    let x7101: BytePoly_4 = bigint_nondet_rem!(ctx, x7099, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7100, x6, 12), x7101, 12),
            x7099,
            12
        ),
        65028,
        4,
    )?;
    let x7102: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x7098, x7098, 8), x7051, 8), x6, 8),
            x7081,
            8
        ),
        x6,
        8
    );
    let x7103: BytePoly_9 = bigint_nondet_quot!(ctx, x7102, x6, 9);
    let x7104: BytePoly_4 = bigint_nondet_rem!(ctx, x7102, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7103, x6, 13), x7104, 13),
            x7102,
            13
        ),
        73156,
        4,
    )?;
    let x7105: BytePoly_8 = bigint_mul!(x7098, x7104, 8);
    let x7106: BytePoly_9 = bigint_nondet_quot!(ctx, x7105, x6, 9);
    let x7107: BytePoly_4 = bigint_nondet_rem!(ctx, x7105, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7106, x6, 13), x7107, 13),
            x7105,
            13
        ),
        73156,
        4,
    )?;
    let x7108: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x7107, x7101, 4), 4), x6, 4);
    let x7109: BytePoly_4 = bigint_nondet_quot!(ctx, x7108, x6, 4);
    let x7110: BytePoly_4 = bigint_nondet_rem!(ctx, x7108, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x7109, x6, 8), x7110, 8), x7108, 8),
        32515,
        2,
    )?;
    let x7111: BytePoly_5 = bigint_add!(
        bigint_mul!(x7104, x7088, 5),
        bigint_mul!(x7051, x7090, 5),
        5
    );
    let x7112: BytePoly_5 = bigint_add!(
        bigint_mul!(x7110, x7088, 5),
        bigint_mul!(x7053, x7090, 5),
        5
    );
    let x7113: BytePoly_6 = bigint_nondet_quot!(ctx, x7111, x6, 6);
    let x7114: BytePoly_4 = bigint_nondet_rem!(ctx, x7111, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7113, x6, 10), x7114, 10),
            x7111,
            10
        ),
        48771,
        4,
    )?;
    let x7115: BytePoly_6 = bigint_nondet_quot!(ctx, x7112, x6, 6);
    let x7116: BytePoly_4 = bigint_nondet_rem!(ctx, x7112, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7115, x6, 10), x7116, 10),
            x7112,
            10
        ),
        48771,
        4,
    )?;
    let x7117: BytePoly_8 = bigint_mul!(x7081, x7081, 8);
    let x7118: BytePoly_9 = bigint_nondet_quot!(ctx, x7117, x6, 9);
    let x7119: BytePoly_4 = bigint_nondet_rem!(ctx, x7117, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7118, x6, 13), x7119, 13),
            x7117,
            13
        ),
        73156,
        4,
    )?;
    let x7120: BytePoly_5 = bigint_add!(bigint_mul!(x7119, x0, 5), x5, 5);
    let x7121: BytePoly_6 = bigint_nondet_quot!(ctx, x7120, x6, 6);
    let x7122: BytePoly_4 = bigint_nondet_rem!(ctx, x7120, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7121, x6, 10), x7122, 10),
            x7120,
            10
        ),
        48771,
        4,
    )?;
    let x7123: BytePoly_4 = bigint_add!(x7087, x7087, 4);
    let x7124: BytePoly_4 = bigint_nondet_quot!(ctx, x7123, x6, 4);
    let x7125: BytePoly_4 = bigint_nondet_rem!(ctx, x7123, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x7124, x6, 8), x7125, 8), x7123, 8),
        32515,
        2,
    )?;
    let x7126: BytePoly_4 = bigint_nondet_inv!(ctx, x7125, x6, 4);
    let x7127: BytePoly_8 = bigint_mul!(x7125, x7126, 8);
    let x7128: BytePoly_9 = bigint_nondet_quot!(ctx, x7127, x6, 9);
    let x7129: BytePoly_4 = bigint_nondet_rem!(ctx, x7127, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7128, x6, 13), x7129, 13),
            x7127,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x7129, x3, 4), 34, 1)?;
    let x7130: BytePoly_8 = bigint_mul!(x7122, x7126, 8);
    let x7131: BytePoly_9 = bigint_nondet_quot!(ctx, x7130, x6, 9);
    let x7132: BytePoly_4 = bigint_nondet_rem!(ctx, x7130, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7131, x6, 13), x7132, 13),
            x7130,
            13
        ),
        73156,
        4,
    )?;
    let x7133: BytePoly_8 = bigint_mul!(x7132, x7081, 8);
    let x7134: BytePoly_9 = bigint_nondet_quot!(ctx, x7133, x6, 9);
    let x7135: BytePoly_4 = bigint_nondet_rem!(ctx, x7133, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7134, x6, 13), x7135, 13),
            x7133,
            13
        ),
        73156,
        4,
    )?;
    let x7136: BytePoly_4 = bigint_add!(bigint_sub!(x7087, x7135, 4), x6, 4);
    let x7137: BytePoly_4 = bigint_nondet_quot!(ctx, x7136, x6, 4);
    let x7138: BytePoly_4 = bigint_nondet_rem!(ctx, x7136, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x7137, x6, 8), x7138, 8), x7136, 8),
        32515,
        2,
    )?;
    let x7139: BytePoly_8 = bigint_mul!(x7132, x7132, 8);
    let x7140: BytePoly_9 = bigint_nondet_quot!(ctx, x7139, x6, 9);
    let x7141: BytePoly_4 = bigint_nondet_rem!(ctx, x7139, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7140, x6, 13), x7141, 13),
            x7139,
            13
        ),
        73156,
        4,
    )?;
    let x7142: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x7141, x7081, 4), x6, 4), x7081, 4),
        x6,
        4
    );
    let x7143: BytePoly_4 = bigint_nondet_quot!(ctx, x7142, x6, 4);
    let x7144: BytePoly_4 = bigint_nondet_rem!(ctx, x7142, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x7143, x6, 8), x7144, 8), x7142, 8),
        32515,
        2,
    )?;
    let x7145: BytePoly_8 = bigint_mul!(x7132, x7144, 8);
    let x7146: BytePoly_9 = bigint_nondet_quot!(ctx, x7145, x6, 9);
    let x7147: BytePoly_4 = bigint_nondet_rem!(ctx, x7145, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7146, x6, 13), x7147, 13),
            x7145,
            13
        ),
        73156,
        4,
    )?;
    let x7148: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x7147, x7138, 4), 4), x6, 4);
    let x7149: BytePoly_4 = bigint_nondet_quot!(ctx, x7148, x6, 4);
    let x7150: BytePoly_4 = bigint_nondet_rem!(ctx, x7148, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x7149, x6, 8), x7150, 8), x7148, 8),
        32515,
        2,
    )?;
    let x7151: BytePoly_1 = bigint_nondet_rem!(ctx, x7089, x2, 1);
    let x7152: BytePoly_5 = bigint_nondet_quot!(ctx, x7089, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x7152, x2, 6), x7151, 6), x7089, 6),
        40643,
        4,
    )?;
    let x7153: BytePoly_1 = bigint_sub!(x3, x7151, 1);
    eqz(ctx, &bigint_mul!(x7151, x7153, 2), 8131, 2)?;
    let x7154: BytePoly_4 = bigint_add!(bigint_sub!(x7144, x7114, 4), x6, 4);
    let x7155: BytePoly_4 = bigint_nondet_inv!(ctx, x7154, x6, 4);
    let x7156: BytePoly_8 = bigint_mul!(x7154, x7155, 8);
    let x7157: BytePoly_9 = bigint_nondet_quot!(ctx, x7156, x6, 9);
    let x7158: BytePoly_4 = bigint_nondet_rem!(ctx, x7156, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7157, x6, 13), x7158, 13),
            x7156,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x7158, x1, 4), 34, 1)?;
    let x7159: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x7150, x7116, 4), x6, 4), x7155, 8);
    let x7160: BytePoly_9 = bigint_nondet_quot!(ctx, x7159, x6, 9);
    let x7161: BytePoly_4 = bigint_nondet_rem!(ctx, x7159, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7160, x6, 13), x7161, 13),
            x7159,
            13
        ),
        73156,
        4,
    )?;
    let x7162: BytePoly_8 = bigint_add!(bigint_sub!(x7116, bigint_mul!(x7161, x7114, 8), 8), x6, 8);
    let x7163: BytePoly_8 = bigint_nondet_quot!(ctx, x7162, x6, 8);
    let x7164: BytePoly_4 = bigint_nondet_rem!(ctx, x7162, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7163, x6, 12), x7164, 12),
            x7162,
            12
        ),
        65028,
        4,
    )?;
    let x7165: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x7161, x7161, 8), x7114, 8), x6, 8),
            x7144,
            8
        ),
        x6,
        8
    );
    let x7166: BytePoly_9 = bigint_nondet_quot!(ctx, x7165, x6, 9);
    let x7167: BytePoly_4 = bigint_nondet_rem!(ctx, x7165, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7166, x6, 13), x7167, 13),
            x7165,
            13
        ),
        73156,
        4,
    )?;
    let x7168: BytePoly_8 = bigint_mul!(x7161, x7167, 8);
    let x7169: BytePoly_9 = bigint_nondet_quot!(ctx, x7168, x6, 9);
    let x7170: BytePoly_4 = bigint_nondet_rem!(ctx, x7168, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7169, x6, 13), x7170, 13),
            x7168,
            13
        ),
        73156,
        4,
    )?;
    let x7171: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x7170, x7164, 4), 4), x6, 4);
    let x7172: BytePoly_4 = bigint_nondet_quot!(ctx, x7171, x6, 4);
    let x7173: BytePoly_4 = bigint_nondet_rem!(ctx, x7171, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x7172, x6, 8), x7173, 8), x7171, 8),
        32515,
        2,
    )?;
    let x7174: BytePoly_5 = bigint_add!(
        bigint_mul!(x7167, x7151, 5),
        bigint_mul!(x7114, x7153, 5),
        5
    );
    let x7175: BytePoly_5 = bigint_add!(
        bigint_mul!(x7173, x7151, 5),
        bigint_mul!(x7116, x7153, 5),
        5
    );
    let x7176: BytePoly_6 = bigint_nondet_quot!(ctx, x7174, x6, 6);
    let x7177: BytePoly_4 = bigint_nondet_rem!(ctx, x7174, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7176, x6, 10), x7177, 10),
            x7174,
            10
        ),
        48771,
        4,
    )?;
    let x7178: BytePoly_6 = bigint_nondet_quot!(ctx, x7175, x6, 6);
    let x7179: BytePoly_4 = bigint_nondet_rem!(ctx, x7175, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7178, x6, 10), x7179, 10),
            x7175,
            10
        ),
        48771,
        4,
    )?;
    let x7180: BytePoly_8 = bigint_mul!(x7144, x7144, 8);
    let x7181: BytePoly_9 = bigint_nondet_quot!(ctx, x7180, x6, 9);
    let x7182: BytePoly_4 = bigint_nondet_rem!(ctx, x7180, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7181, x6, 13), x7182, 13),
            x7180,
            13
        ),
        73156,
        4,
    )?;
    let x7183: BytePoly_5 = bigint_add!(bigint_mul!(x7182, x0, 5), x5, 5);
    let x7184: BytePoly_6 = bigint_nondet_quot!(ctx, x7183, x6, 6);
    let x7185: BytePoly_4 = bigint_nondet_rem!(ctx, x7183, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7184, x6, 10), x7185, 10),
            x7183,
            10
        ),
        48771,
        4,
    )?;
    let x7186: BytePoly_4 = bigint_add!(x7150, x7150, 4);
    let x7187: BytePoly_4 = bigint_nondet_quot!(ctx, x7186, x6, 4);
    let x7188: BytePoly_4 = bigint_nondet_rem!(ctx, x7186, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x7187, x6, 8), x7188, 8), x7186, 8),
        32515,
        2,
    )?;
    let x7189: BytePoly_4 = bigint_nondet_inv!(ctx, x7188, x6, 4);
    let x7190: BytePoly_8 = bigint_mul!(x7188, x7189, 8);
    let x7191: BytePoly_9 = bigint_nondet_quot!(ctx, x7190, x6, 9);
    let x7192: BytePoly_4 = bigint_nondet_rem!(ctx, x7190, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7191, x6, 13), x7192, 13),
            x7190,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x7192, x3, 4), 34, 1)?;
    let x7193: BytePoly_8 = bigint_mul!(x7185, x7189, 8);
    let x7194: BytePoly_9 = bigint_nondet_quot!(ctx, x7193, x6, 9);
    let x7195: BytePoly_4 = bigint_nondet_rem!(ctx, x7193, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7194, x6, 13), x7195, 13),
            x7193,
            13
        ),
        73156,
        4,
    )?;
    let x7196: BytePoly_8 = bigint_mul!(x7195, x7144, 8);
    let x7197: BytePoly_9 = bigint_nondet_quot!(ctx, x7196, x6, 9);
    let x7198: BytePoly_4 = bigint_nondet_rem!(ctx, x7196, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7197, x6, 13), x7198, 13),
            x7196,
            13
        ),
        73156,
        4,
    )?;
    let x7199: BytePoly_4 = bigint_add!(bigint_sub!(x7150, x7198, 4), x6, 4);
    let x7200: BytePoly_4 = bigint_nondet_quot!(ctx, x7199, x6, 4);
    let x7201: BytePoly_4 = bigint_nondet_rem!(ctx, x7199, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x7200, x6, 8), x7201, 8), x7199, 8),
        32515,
        2,
    )?;
    let x7202: BytePoly_8 = bigint_mul!(x7195, x7195, 8);
    let x7203: BytePoly_9 = bigint_nondet_quot!(ctx, x7202, x6, 9);
    let x7204: BytePoly_4 = bigint_nondet_rem!(ctx, x7202, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7203, x6, 13), x7204, 13),
            x7202,
            13
        ),
        73156,
        4,
    )?;
    let x7205: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x7204, x7144, 4), x6, 4), x7144, 4),
        x6,
        4
    );
    let x7206: BytePoly_4 = bigint_nondet_quot!(ctx, x7205, x6, 4);
    let x7207: BytePoly_4 = bigint_nondet_rem!(ctx, x7205, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x7206, x6, 8), x7207, 8), x7205, 8),
        32515,
        2,
    )?;
    let x7208: BytePoly_8 = bigint_mul!(x7195, x7207, 8);
    let x7209: BytePoly_9 = bigint_nondet_quot!(ctx, x7208, x6, 9);
    let x7210: BytePoly_4 = bigint_nondet_rem!(ctx, x7208, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7209, x6, 13), x7210, 13),
            x7208,
            13
        ),
        73156,
        4,
    )?;
    let x7211: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x7210, x7201, 4), 4), x6, 4);
    let x7212: BytePoly_4 = bigint_nondet_quot!(ctx, x7211, x6, 4);
    let x7213: BytePoly_4 = bigint_nondet_rem!(ctx, x7211, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x7212, x6, 8), x7213, 8), x7211, 8),
        32515,
        2,
    )?;
    let x7214: BytePoly_1 = bigint_nondet_rem!(ctx, x7152, x2, 1);
    let x7215: BytePoly_5 = bigint_nondet_quot!(ctx, x7152, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x7215, x2, 6), x7214, 6), x7152, 6),
        40643,
        4,
    )?;
    let x7216: BytePoly_1 = bigint_sub!(x3, x7214, 1);
    eqz(ctx, &bigint_mul!(x7214, x7216, 2), 8131, 2)?;
    let x7217: BytePoly_4 = bigint_add!(bigint_sub!(x7207, x7177, 4), x6, 4);
    let x7218: BytePoly_4 = bigint_nondet_inv!(ctx, x7217, x6, 4);
    let x7219: BytePoly_8 = bigint_mul!(x7217, x7218, 8);
    let x7220: BytePoly_9 = bigint_nondet_quot!(ctx, x7219, x6, 9);
    let x7221: BytePoly_4 = bigint_nondet_rem!(ctx, x7219, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7220, x6, 13), x7221, 13),
            x7219,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x7221, x1, 4), 34, 1)?;
    let x7222: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x7213, x7179, 4), x6, 4), x7218, 8);
    let x7223: BytePoly_9 = bigint_nondet_quot!(ctx, x7222, x6, 9);
    let x7224: BytePoly_4 = bigint_nondet_rem!(ctx, x7222, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7223, x6, 13), x7224, 13),
            x7222,
            13
        ),
        73156,
        4,
    )?;
    let x7225: BytePoly_8 = bigint_add!(bigint_sub!(x7179, bigint_mul!(x7224, x7177, 8), 8), x6, 8);
    let x7226: BytePoly_8 = bigint_nondet_quot!(ctx, x7225, x6, 8);
    let x7227: BytePoly_4 = bigint_nondet_rem!(ctx, x7225, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7226, x6, 12), x7227, 12),
            x7225,
            12
        ),
        65028,
        4,
    )?;
    let x7228: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x7224, x7224, 8), x7177, 8), x6, 8),
            x7207,
            8
        ),
        x6,
        8
    );
    let x7229: BytePoly_9 = bigint_nondet_quot!(ctx, x7228, x6, 9);
    let x7230: BytePoly_4 = bigint_nondet_rem!(ctx, x7228, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7229, x6, 13), x7230, 13),
            x7228,
            13
        ),
        73156,
        4,
    )?;
    let x7231: BytePoly_8 = bigint_mul!(x7224, x7230, 8);
    let x7232: BytePoly_9 = bigint_nondet_quot!(ctx, x7231, x6, 9);
    let x7233: BytePoly_4 = bigint_nondet_rem!(ctx, x7231, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7232, x6, 13), x7233, 13),
            x7231,
            13
        ),
        73156,
        4,
    )?;
    let x7234: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x7233, x7227, 4), 4), x6, 4);
    let x7235: BytePoly_4 = bigint_nondet_quot!(ctx, x7234, x6, 4);
    let x7236: BytePoly_4 = bigint_nondet_rem!(ctx, x7234, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x7235, x6, 8), x7236, 8), x7234, 8),
        32515,
        2,
    )?;
    let x7237: BytePoly_5 = bigint_add!(
        bigint_mul!(x7230, x7214, 5),
        bigint_mul!(x7177, x7216, 5),
        5
    );
    let x7238: BytePoly_5 = bigint_add!(
        bigint_mul!(x7236, x7214, 5),
        bigint_mul!(x7179, x7216, 5),
        5
    );
    let x7239: BytePoly_6 = bigint_nondet_quot!(ctx, x7237, x6, 6);
    let x7240: BytePoly_4 = bigint_nondet_rem!(ctx, x7237, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7239, x6, 10), x7240, 10),
            x7237,
            10
        ),
        48771,
        4,
    )?;
    let x7241: BytePoly_6 = bigint_nondet_quot!(ctx, x7238, x6, 6);
    let x7242: BytePoly_4 = bigint_nondet_rem!(ctx, x7238, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7241, x6, 10), x7242, 10),
            x7238,
            10
        ),
        48771,
        4,
    )?;
    let x7243: BytePoly_8 = bigint_mul!(x7207, x7207, 8);
    let x7244: BytePoly_9 = bigint_nondet_quot!(ctx, x7243, x6, 9);
    let x7245: BytePoly_4 = bigint_nondet_rem!(ctx, x7243, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7244, x6, 13), x7245, 13),
            x7243,
            13
        ),
        73156,
        4,
    )?;
    let x7246: BytePoly_5 = bigint_add!(bigint_mul!(x7245, x0, 5), x5, 5);
    let x7247: BytePoly_6 = bigint_nondet_quot!(ctx, x7246, x6, 6);
    let x7248: BytePoly_4 = bigint_nondet_rem!(ctx, x7246, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7247, x6, 10), x7248, 10),
            x7246,
            10
        ),
        48771,
        4,
    )?;
    let x7249: BytePoly_4 = bigint_add!(x7213, x7213, 4);
    let x7250: BytePoly_4 = bigint_nondet_quot!(ctx, x7249, x6, 4);
    let x7251: BytePoly_4 = bigint_nondet_rem!(ctx, x7249, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x7250, x6, 8), x7251, 8), x7249, 8),
        32515,
        2,
    )?;
    let x7252: BytePoly_4 = bigint_nondet_inv!(ctx, x7251, x6, 4);
    let x7253: BytePoly_8 = bigint_mul!(x7251, x7252, 8);
    let x7254: BytePoly_9 = bigint_nondet_quot!(ctx, x7253, x6, 9);
    let x7255: BytePoly_4 = bigint_nondet_rem!(ctx, x7253, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7254, x6, 13), x7255, 13),
            x7253,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x7255, x3, 4), 34, 1)?;
    let x7256: BytePoly_8 = bigint_mul!(x7248, x7252, 8);
    let x7257: BytePoly_9 = bigint_nondet_quot!(ctx, x7256, x6, 9);
    let x7258: BytePoly_4 = bigint_nondet_rem!(ctx, x7256, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7257, x6, 13), x7258, 13),
            x7256,
            13
        ),
        73156,
        4,
    )?;
    let x7259: BytePoly_8 = bigint_mul!(x7258, x7207, 8);
    let x7260: BytePoly_9 = bigint_nondet_quot!(ctx, x7259, x6, 9);
    let x7261: BytePoly_4 = bigint_nondet_rem!(ctx, x7259, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7260, x6, 13), x7261, 13),
            x7259,
            13
        ),
        73156,
        4,
    )?;
    let x7262: BytePoly_4 = bigint_add!(bigint_sub!(x7213, x7261, 4), x6, 4);
    let x7263: BytePoly_4 = bigint_nondet_quot!(ctx, x7262, x6, 4);
    let x7264: BytePoly_4 = bigint_nondet_rem!(ctx, x7262, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x7263, x6, 8), x7264, 8), x7262, 8),
        32515,
        2,
    )?;
    let x7265: BytePoly_8 = bigint_mul!(x7258, x7258, 8);
    let x7266: BytePoly_9 = bigint_nondet_quot!(ctx, x7265, x6, 9);
    let x7267: BytePoly_4 = bigint_nondet_rem!(ctx, x7265, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7266, x6, 13), x7267, 13),
            x7265,
            13
        ),
        73156,
        4,
    )?;
    let x7268: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x7267, x7207, 4), x6, 4), x7207, 4),
        x6,
        4
    );
    let x7269: BytePoly_4 = bigint_nondet_quot!(ctx, x7268, x6, 4);
    let x7270: BytePoly_4 = bigint_nondet_rem!(ctx, x7268, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x7269, x6, 8), x7270, 8), x7268, 8),
        32515,
        2,
    )?;
    let x7271: BytePoly_8 = bigint_mul!(x7258, x7270, 8);
    let x7272: BytePoly_9 = bigint_nondet_quot!(ctx, x7271, x6, 9);
    let x7273: BytePoly_4 = bigint_nondet_rem!(ctx, x7271, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7272, x6, 13), x7273, 13),
            x7271,
            13
        ),
        73156,
        4,
    )?;
    let x7274: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x7273, x7264, 4), 4), x6, 4);
    let x7275: BytePoly_4 = bigint_nondet_quot!(ctx, x7274, x6, 4);
    let x7276: BytePoly_4 = bigint_nondet_rem!(ctx, x7274, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x7275, x6, 8), x7276, 8), x7274, 8),
        32515,
        2,
    )?;
    let x7277: BytePoly_1 = bigint_nondet_rem!(ctx, x7215, x2, 1);
    let x7278: BytePoly_5 = bigint_nondet_quot!(ctx, x7215, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x7278, x2, 6), x7277, 6), x7215, 6),
        40643,
        4,
    )?;
    let x7279: BytePoly_1 = bigint_sub!(x3, x7277, 1);
    eqz(ctx, &bigint_mul!(x7277, x7279, 2), 8131, 2)?;
    let x7280: BytePoly_4 = bigint_add!(bigint_sub!(x7270, x7240, 4), x6, 4);
    let x7281: BytePoly_4 = bigint_nondet_inv!(ctx, x7280, x6, 4);
    let x7282: BytePoly_8 = bigint_mul!(x7280, x7281, 8);
    let x7283: BytePoly_9 = bigint_nondet_quot!(ctx, x7282, x6, 9);
    let x7284: BytePoly_4 = bigint_nondet_rem!(ctx, x7282, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7283, x6, 13), x7284, 13),
            x7282,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x7284, x1, 4), 34, 1)?;
    let x7285: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x7276, x7242, 4), x6, 4), x7281, 8);
    let x7286: BytePoly_9 = bigint_nondet_quot!(ctx, x7285, x6, 9);
    let x7287: BytePoly_4 = bigint_nondet_rem!(ctx, x7285, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7286, x6, 13), x7287, 13),
            x7285,
            13
        ),
        73156,
        4,
    )?;
    let x7288: BytePoly_8 = bigint_add!(bigint_sub!(x7242, bigint_mul!(x7287, x7240, 8), 8), x6, 8);
    let x7289: BytePoly_8 = bigint_nondet_quot!(ctx, x7288, x6, 8);
    let x7290: BytePoly_4 = bigint_nondet_rem!(ctx, x7288, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7289, x6, 12), x7290, 12),
            x7288,
            12
        ),
        65028,
        4,
    )?;
    let x7291: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x7287, x7287, 8), x7240, 8), x6, 8),
            x7270,
            8
        ),
        x6,
        8
    );
    let x7292: BytePoly_9 = bigint_nondet_quot!(ctx, x7291, x6, 9);
    let x7293: BytePoly_4 = bigint_nondet_rem!(ctx, x7291, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7292, x6, 13), x7293, 13),
            x7291,
            13
        ),
        73156,
        4,
    )?;
    let x7294: BytePoly_8 = bigint_mul!(x7287, x7293, 8);
    let x7295: BytePoly_9 = bigint_nondet_quot!(ctx, x7294, x6, 9);
    let x7296: BytePoly_4 = bigint_nondet_rem!(ctx, x7294, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7295, x6, 13), x7296, 13),
            x7294,
            13
        ),
        73156,
        4,
    )?;
    let x7297: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x7296, x7290, 4), 4), x6, 4);
    let x7298: BytePoly_4 = bigint_nondet_quot!(ctx, x7297, x6, 4);
    let x7299: BytePoly_4 = bigint_nondet_rem!(ctx, x7297, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x7298, x6, 8), x7299, 8), x7297, 8),
        32515,
        2,
    )?;
    let x7300: BytePoly_5 = bigint_add!(
        bigint_mul!(x7293, x7277, 5),
        bigint_mul!(x7240, x7279, 5),
        5
    );
    let x7301: BytePoly_5 = bigint_add!(
        bigint_mul!(x7299, x7277, 5),
        bigint_mul!(x7242, x7279, 5),
        5
    );
    let x7302: BytePoly_6 = bigint_nondet_quot!(ctx, x7300, x6, 6);
    let x7303: BytePoly_4 = bigint_nondet_rem!(ctx, x7300, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7302, x6, 10), x7303, 10),
            x7300,
            10
        ),
        48771,
        4,
    )?;
    let x7304: BytePoly_6 = bigint_nondet_quot!(ctx, x7301, x6, 6);
    let x7305: BytePoly_4 = bigint_nondet_rem!(ctx, x7301, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7304, x6, 10), x7305, 10),
            x7301,
            10
        ),
        48771,
        4,
    )?;
    let x7306: BytePoly_8 = bigint_mul!(x7270, x7270, 8);
    let x7307: BytePoly_9 = bigint_nondet_quot!(ctx, x7306, x6, 9);
    let x7308: BytePoly_4 = bigint_nondet_rem!(ctx, x7306, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7307, x6, 13), x7308, 13),
            x7306,
            13
        ),
        73156,
        4,
    )?;
    let x7309: BytePoly_5 = bigint_add!(bigint_mul!(x7308, x0, 5), x5, 5);
    let x7310: BytePoly_6 = bigint_nondet_quot!(ctx, x7309, x6, 6);
    let x7311: BytePoly_4 = bigint_nondet_rem!(ctx, x7309, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7310, x6, 10), x7311, 10),
            x7309,
            10
        ),
        48771,
        4,
    )?;
    let x7312: BytePoly_4 = bigint_add!(x7276, x7276, 4);
    let x7313: BytePoly_4 = bigint_nondet_quot!(ctx, x7312, x6, 4);
    let x7314: BytePoly_4 = bigint_nondet_rem!(ctx, x7312, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x7313, x6, 8), x7314, 8), x7312, 8),
        32515,
        2,
    )?;
    let x7315: BytePoly_4 = bigint_nondet_inv!(ctx, x7314, x6, 4);
    let x7316: BytePoly_8 = bigint_mul!(x7314, x7315, 8);
    let x7317: BytePoly_9 = bigint_nondet_quot!(ctx, x7316, x6, 9);
    let x7318: BytePoly_4 = bigint_nondet_rem!(ctx, x7316, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7317, x6, 13), x7318, 13),
            x7316,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x7318, x3, 4), 34, 1)?;
    let x7319: BytePoly_8 = bigint_mul!(x7311, x7315, 8);
    let x7320: BytePoly_9 = bigint_nondet_quot!(ctx, x7319, x6, 9);
    let x7321: BytePoly_4 = bigint_nondet_rem!(ctx, x7319, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7320, x6, 13), x7321, 13),
            x7319,
            13
        ),
        73156,
        4,
    )?;
    let x7322: BytePoly_8 = bigint_mul!(x7321, x7270, 8);
    let x7323: BytePoly_9 = bigint_nondet_quot!(ctx, x7322, x6, 9);
    let x7324: BytePoly_4 = bigint_nondet_rem!(ctx, x7322, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7323, x6, 13), x7324, 13),
            x7322,
            13
        ),
        73156,
        4,
    )?;
    let x7325: BytePoly_4 = bigint_add!(bigint_sub!(x7276, x7324, 4), x6, 4);
    let x7326: BytePoly_4 = bigint_nondet_quot!(ctx, x7325, x6, 4);
    let x7327: BytePoly_4 = bigint_nondet_rem!(ctx, x7325, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x7326, x6, 8), x7327, 8), x7325, 8),
        32515,
        2,
    )?;
    let x7328: BytePoly_8 = bigint_mul!(x7321, x7321, 8);
    let x7329: BytePoly_9 = bigint_nondet_quot!(ctx, x7328, x6, 9);
    let x7330: BytePoly_4 = bigint_nondet_rem!(ctx, x7328, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7329, x6, 13), x7330, 13),
            x7328,
            13
        ),
        73156,
        4,
    )?;
    let x7331: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x7330, x7270, 4), x6, 4), x7270, 4),
        x6,
        4
    );
    let x7332: BytePoly_4 = bigint_nondet_quot!(ctx, x7331, x6, 4);
    let x7333: BytePoly_4 = bigint_nondet_rem!(ctx, x7331, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x7332, x6, 8), x7333, 8), x7331, 8),
        32515,
        2,
    )?;
    let x7334: BytePoly_8 = bigint_mul!(x7321, x7333, 8);
    let x7335: BytePoly_9 = bigint_nondet_quot!(ctx, x7334, x6, 9);
    let x7336: BytePoly_4 = bigint_nondet_rem!(ctx, x7334, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7335, x6, 13), x7336, 13),
            x7334,
            13
        ),
        73156,
        4,
    )?;
    let x7337: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x7336, x7327, 4), 4), x6, 4);
    let x7338: BytePoly_4 = bigint_nondet_quot!(ctx, x7337, x6, 4);
    let x7339: BytePoly_4 = bigint_nondet_rem!(ctx, x7337, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x7338, x6, 8), x7339, 8), x7337, 8),
        32515,
        2,
    )?;
    let x7340: BytePoly_1 = bigint_nondet_rem!(ctx, x7278, x2, 1);
    let x7341: BytePoly_5 = bigint_nondet_quot!(ctx, x7278, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x7341, x2, 6), x7340, 6), x7278, 6),
        40643,
        4,
    )?;
    let x7342: BytePoly_1 = bigint_sub!(x3, x7340, 1);
    eqz(ctx, &bigint_mul!(x7340, x7342, 2), 8131, 2)?;
    let x7343: BytePoly_4 = bigint_add!(bigint_sub!(x7333, x7303, 4), x6, 4);
    let x7344: BytePoly_4 = bigint_nondet_inv!(ctx, x7343, x6, 4);
    let x7345: BytePoly_8 = bigint_mul!(x7343, x7344, 8);
    let x7346: BytePoly_9 = bigint_nondet_quot!(ctx, x7345, x6, 9);
    let x7347: BytePoly_4 = bigint_nondet_rem!(ctx, x7345, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7346, x6, 13), x7347, 13),
            x7345,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x7347, x1, 4), 34, 1)?;
    let x7348: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x7339, x7305, 4), x6, 4), x7344, 8);
    let x7349: BytePoly_9 = bigint_nondet_quot!(ctx, x7348, x6, 9);
    let x7350: BytePoly_4 = bigint_nondet_rem!(ctx, x7348, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7349, x6, 13), x7350, 13),
            x7348,
            13
        ),
        73156,
        4,
    )?;
    let x7351: BytePoly_8 = bigint_add!(bigint_sub!(x7305, bigint_mul!(x7350, x7303, 8), 8), x6, 8);
    let x7352: BytePoly_8 = bigint_nondet_quot!(ctx, x7351, x6, 8);
    let x7353: BytePoly_4 = bigint_nondet_rem!(ctx, x7351, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7352, x6, 12), x7353, 12),
            x7351,
            12
        ),
        65028,
        4,
    )?;
    let x7354: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x7350, x7350, 8), x7303, 8), x6, 8),
            x7333,
            8
        ),
        x6,
        8
    );
    let x7355: BytePoly_9 = bigint_nondet_quot!(ctx, x7354, x6, 9);
    let x7356: BytePoly_4 = bigint_nondet_rem!(ctx, x7354, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7355, x6, 13), x7356, 13),
            x7354,
            13
        ),
        73156,
        4,
    )?;
    let x7357: BytePoly_8 = bigint_mul!(x7350, x7356, 8);
    let x7358: BytePoly_9 = bigint_nondet_quot!(ctx, x7357, x6, 9);
    let x7359: BytePoly_4 = bigint_nondet_rem!(ctx, x7357, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7358, x6, 13), x7359, 13),
            x7357,
            13
        ),
        73156,
        4,
    )?;
    let x7360: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x7359, x7353, 4), 4), x6, 4);
    let x7361: BytePoly_4 = bigint_nondet_quot!(ctx, x7360, x6, 4);
    let x7362: BytePoly_4 = bigint_nondet_rem!(ctx, x7360, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x7361, x6, 8), x7362, 8), x7360, 8),
        32515,
        2,
    )?;
    let x7363: BytePoly_5 = bigint_add!(
        bigint_mul!(x7356, x7340, 5),
        bigint_mul!(x7303, x7342, 5),
        5
    );
    let x7364: BytePoly_5 = bigint_add!(
        bigint_mul!(x7362, x7340, 5),
        bigint_mul!(x7305, x7342, 5),
        5
    );
    let x7365: BytePoly_6 = bigint_nondet_quot!(ctx, x7363, x6, 6);
    let x7366: BytePoly_4 = bigint_nondet_rem!(ctx, x7363, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7365, x6, 10), x7366, 10),
            x7363,
            10
        ),
        48771,
        4,
    )?;
    let x7367: BytePoly_6 = bigint_nondet_quot!(ctx, x7364, x6, 6);
    let x7368: BytePoly_4 = bigint_nondet_rem!(ctx, x7364, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7367, x6, 10), x7368, 10),
            x7364,
            10
        ),
        48771,
        4,
    )?;
    let x7369: BytePoly_8 = bigint_mul!(x7333, x7333, 8);
    let x7370: BytePoly_9 = bigint_nondet_quot!(ctx, x7369, x6, 9);
    let x7371: BytePoly_4 = bigint_nondet_rem!(ctx, x7369, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7370, x6, 13), x7371, 13),
            x7369,
            13
        ),
        73156,
        4,
    )?;
    let x7372: BytePoly_5 = bigint_add!(bigint_mul!(x7371, x0, 5), x5, 5);
    let x7373: BytePoly_6 = bigint_nondet_quot!(ctx, x7372, x6, 6);
    let x7374: BytePoly_4 = bigint_nondet_rem!(ctx, x7372, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7373, x6, 10), x7374, 10),
            x7372,
            10
        ),
        48771,
        4,
    )?;
    let x7375: BytePoly_4 = bigint_add!(x7339, x7339, 4);
    let x7376: BytePoly_4 = bigint_nondet_quot!(ctx, x7375, x6, 4);
    let x7377: BytePoly_4 = bigint_nondet_rem!(ctx, x7375, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x7376, x6, 8), x7377, 8), x7375, 8),
        32515,
        2,
    )?;
    let x7378: BytePoly_4 = bigint_nondet_inv!(ctx, x7377, x6, 4);
    let x7379: BytePoly_8 = bigint_mul!(x7377, x7378, 8);
    let x7380: BytePoly_9 = bigint_nondet_quot!(ctx, x7379, x6, 9);
    let x7381: BytePoly_4 = bigint_nondet_rem!(ctx, x7379, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7380, x6, 13), x7381, 13),
            x7379,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x7381, x3, 4), 34, 1)?;
    let x7382: BytePoly_8 = bigint_mul!(x7374, x7378, 8);
    let x7383: BytePoly_9 = bigint_nondet_quot!(ctx, x7382, x6, 9);
    let x7384: BytePoly_4 = bigint_nondet_rem!(ctx, x7382, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7383, x6, 13), x7384, 13),
            x7382,
            13
        ),
        73156,
        4,
    )?;
    let x7385: BytePoly_8 = bigint_mul!(x7384, x7333, 8);
    let x7386: BytePoly_9 = bigint_nondet_quot!(ctx, x7385, x6, 9);
    let x7387: BytePoly_4 = bigint_nondet_rem!(ctx, x7385, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7386, x6, 13), x7387, 13),
            x7385,
            13
        ),
        73156,
        4,
    )?;
    let x7388: BytePoly_4 = bigint_add!(bigint_sub!(x7339, x7387, 4), x6, 4);
    let x7389: BytePoly_4 = bigint_nondet_quot!(ctx, x7388, x6, 4);
    let x7390: BytePoly_4 = bigint_nondet_rem!(ctx, x7388, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x7389, x6, 8), x7390, 8), x7388, 8),
        32515,
        2,
    )?;
    let x7391: BytePoly_8 = bigint_mul!(x7384, x7384, 8);
    let x7392: BytePoly_9 = bigint_nondet_quot!(ctx, x7391, x6, 9);
    let x7393: BytePoly_4 = bigint_nondet_rem!(ctx, x7391, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7392, x6, 13), x7393, 13),
            x7391,
            13
        ),
        73156,
        4,
    )?;
    let x7394: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x7393, x7333, 4), x6, 4), x7333, 4),
        x6,
        4
    );
    let x7395: BytePoly_4 = bigint_nondet_quot!(ctx, x7394, x6, 4);
    let x7396: BytePoly_4 = bigint_nondet_rem!(ctx, x7394, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x7395, x6, 8), x7396, 8), x7394, 8),
        32515,
        2,
    )?;
    let x7397: BytePoly_8 = bigint_mul!(x7384, x7396, 8);
    let x7398: BytePoly_9 = bigint_nondet_quot!(ctx, x7397, x6, 9);
    let x7399: BytePoly_4 = bigint_nondet_rem!(ctx, x7397, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7398, x6, 13), x7399, 13),
            x7397,
            13
        ),
        73156,
        4,
    )?;
    let x7400: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x7399, x7390, 4), 4), x6, 4);
    let x7401: BytePoly_4 = bigint_nondet_quot!(ctx, x7400, x6, 4);
    let x7402: BytePoly_4 = bigint_nondet_rem!(ctx, x7400, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x7401, x6, 8), x7402, 8), x7400, 8),
        32515,
        2,
    )?;
    let x7403: BytePoly_1 = bigint_nondet_rem!(ctx, x7341, x2, 1);
    let x7404: BytePoly_5 = bigint_nondet_quot!(ctx, x7341, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x7404, x2, 6), x7403, 6), x7341, 6),
        40643,
        4,
    )?;
    let x7405: BytePoly_1 = bigint_sub!(x3, x7403, 1);
    eqz(ctx, &bigint_mul!(x7403, x7405, 2), 8131, 2)?;
    let x7406: BytePoly_4 = bigint_add!(bigint_sub!(x7396, x7366, 4), x6, 4);
    let x7407: BytePoly_4 = bigint_nondet_inv!(ctx, x7406, x6, 4);
    let x7408: BytePoly_8 = bigint_mul!(x7406, x7407, 8);
    let x7409: BytePoly_9 = bigint_nondet_quot!(ctx, x7408, x6, 9);
    let x7410: BytePoly_4 = bigint_nondet_rem!(ctx, x7408, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7409, x6, 13), x7410, 13),
            x7408,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x7410, x1, 4), 34, 1)?;
    let x7411: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x7402, x7368, 4), x6, 4), x7407, 8);
    let x7412: BytePoly_9 = bigint_nondet_quot!(ctx, x7411, x6, 9);
    let x7413: BytePoly_4 = bigint_nondet_rem!(ctx, x7411, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7412, x6, 13), x7413, 13),
            x7411,
            13
        ),
        73156,
        4,
    )?;
    let x7414: BytePoly_8 = bigint_add!(bigint_sub!(x7368, bigint_mul!(x7413, x7366, 8), 8), x6, 8);
    let x7415: BytePoly_8 = bigint_nondet_quot!(ctx, x7414, x6, 8);
    let x7416: BytePoly_4 = bigint_nondet_rem!(ctx, x7414, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7415, x6, 12), x7416, 12),
            x7414,
            12
        ),
        65028,
        4,
    )?;
    let x7417: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x7413, x7413, 8), x7366, 8), x6, 8),
            x7396,
            8
        ),
        x6,
        8
    );
    let x7418: BytePoly_9 = bigint_nondet_quot!(ctx, x7417, x6, 9);
    let x7419: BytePoly_4 = bigint_nondet_rem!(ctx, x7417, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7418, x6, 13), x7419, 13),
            x7417,
            13
        ),
        73156,
        4,
    )?;
    let x7420: BytePoly_8 = bigint_mul!(x7413, x7419, 8);
    let x7421: BytePoly_9 = bigint_nondet_quot!(ctx, x7420, x6, 9);
    let x7422: BytePoly_4 = bigint_nondet_rem!(ctx, x7420, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7421, x6, 13), x7422, 13),
            x7420,
            13
        ),
        73156,
        4,
    )?;
    let x7423: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x7422, x7416, 4), 4), x6, 4);
    let x7424: BytePoly_4 = bigint_nondet_quot!(ctx, x7423, x6, 4);
    let x7425: BytePoly_4 = bigint_nondet_rem!(ctx, x7423, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x7424, x6, 8), x7425, 8), x7423, 8),
        32515,
        2,
    )?;
    let x7426: BytePoly_5 = bigint_add!(
        bigint_mul!(x7419, x7403, 5),
        bigint_mul!(x7366, x7405, 5),
        5
    );
    let x7427: BytePoly_5 = bigint_add!(
        bigint_mul!(x7425, x7403, 5),
        bigint_mul!(x7368, x7405, 5),
        5
    );
    let x7428: BytePoly_6 = bigint_nondet_quot!(ctx, x7426, x6, 6);
    let x7429: BytePoly_4 = bigint_nondet_rem!(ctx, x7426, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7428, x6, 10), x7429, 10),
            x7426,
            10
        ),
        48771,
        4,
    )?;
    let x7430: BytePoly_6 = bigint_nondet_quot!(ctx, x7427, x6, 6);
    let x7431: BytePoly_4 = bigint_nondet_rem!(ctx, x7427, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7430, x6, 10), x7431, 10),
            x7427,
            10
        ),
        48771,
        4,
    )?;
    let x7432: BytePoly_8 = bigint_mul!(x7396, x7396, 8);
    let x7433: BytePoly_9 = bigint_nondet_quot!(ctx, x7432, x6, 9);
    let x7434: BytePoly_4 = bigint_nondet_rem!(ctx, x7432, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7433, x6, 13), x7434, 13),
            x7432,
            13
        ),
        73156,
        4,
    )?;
    let x7435: BytePoly_5 = bigint_add!(bigint_mul!(x7434, x0, 5), x5, 5);
    let x7436: BytePoly_6 = bigint_nondet_quot!(ctx, x7435, x6, 6);
    let x7437: BytePoly_4 = bigint_nondet_rem!(ctx, x7435, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7436, x6, 10), x7437, 10),
            x7435,
            10
        ),
        48771,
        4,
    )?;
    let x7438: BytePoly_4 = bigint_add!(x7402, x7402, 4);
    let x7439: BytePoly_4 = bigint_nondet_quot!(ctx, x7438, x6, 4);
    let x7440: BytePoly_4 = bigint_nondet_rem!(ctx, x7438, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x7439, x6, 8), x7440, 8), x7438, 8),
        32515,
        2,
    )?;
    let x7441: BytePoly_4 = bigint_nondet_inv!(ctx, x7440, x6, 4);
    let x7442: BytePoly_8 = bigint_mul!(x7440, x7441, 8);
    let x7443: BytePoly_9 = bigint_nondet_quot!(ctx, x7442, x6, 9);
    let x7444: BytePoly_4 = bigint_nondet_rem!(ctx, x7442, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7443, x6, 13), x7444, 13),
            x7442,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x7444, x3, 4), 34, 1)?;
    let x7445: BytePoly_8 = bigint_mul!(x7437, x7441, 8);
    let x7446: BytePoly_9 = bigint_nondet_quot!(ctx, x7445, x6, 9);
    let x7447: BytePoly_4 = bigint_nondet_rem!(ctx, x7445, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7446, x6, 13), x7447, 13),
            x7445,
            13
        ),
        73156,
        4,
    )?;
    let x7448: BytePoly_8 = bigint_mul!(x7447, x7396, 8);
    let x7449: BytePoly_9 = bigint_nondet_quot!(ctx, x7448, x6, 9);
    let x7450: BytePoly_4 = bigint_nondet_rem!(ctx, x7448, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7449, x6, 13), x7450, 13),
            x7448,
            13
        ),
        73156,
        4,
    )?;
    let x7451: BytePoly_4 = bigint_add!(bigint_sub!(x7402, x7450, 4), x6, 4);
    let x7452: BytePoly_4 = bigint_nondet_quot!(ctx, x7451, x6, 4);
    let x7453: BytePoly_4 = bigint_nondet_rem!(ctx, x7451, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x7452, x6, 8), x7453, 8), x7451, 8),
        32515,
        2,
    )?;
    let x7454: BytePoly_8 = bigint_mul!(x7447, x7447, 8);
    let x7455: BytePoly_9 = bigint_nondet_quot!(ctx, x7454, x6, 9);
    let x7456: BytePoly_4 = bigint_nondet_rem!(ctx, x7454, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7455, x6, 13), x7456, 13),
            x7454,
            13
        ),
        73156,
        4,
    )?;
    let x7457: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x7456, x7396, 4), x6, 4), x7396, 4),
        x6,
        4
    );
    let x7458: BytePoly_4 = bigint_nondet_quot!(ctx, x7457, x6, 4);
    let x7459: BytePoly_4 = bigint_nondet_rem!(ctx, x7457, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x7458, x6, 8), x7459, 8), x7457, 8),
        32515,
        2,
    )?;
    let x7460: BytePoly_8 = bigint_mul!(x7447, x7459, 8);
    let x7461: BytePoly_9 = bigint_nondet_quot!(ctx, x7460, x6, 9);
    let x7462: BytePoly_4 = bigint_nondet_rem!(ctx, x7460, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7461, x6, 13), x7462, 13),
            x7460,
            13
        ),
        73156,
        4,
    )?;
    let x7463: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x7462, x7453, 4), 4), x6, 4);
    let x7464: BytePoly_4 = bigint_nondet_quot!(ctx, x7463, x6, 4);
    let x7465: BytePoly_4 = bigint_nondet_rem!(ctx, x7463, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x7464, x6, 8), x7465, 8), x7463, 8),
        32515,
        2,
    )?;
    let x7466: BytePoly_1 = bigint_nondet_rem!(ctx, x7404, x2, 1);
    let x7467: BytePoly_5 = bigint_nondet_quot!(ctx, x7404, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x7467, x2, 6), x7466, 6), x7404, 6),
        40643,
        4,
    )?;
    let x7468: BytePoly_1 = bigint_sub!(x3, x7466, 1);
    eqz(ctx, &bigint_mul!(x7466, x7468, 2), 8131, 2)?;
    let x7469: BytePoly_4 = bigint_add!(bigint_sub!(x7459, x7429, 4), x6, 4);
    let x7470: BytePoly_4 = bigint_nondet_inv!(ctx, x7469, x6, 4);
    let x7471: BytePoly_8 = bigint_mul!(x7469, x7470, 8);
    let x7472: BytePoly_9 = bigint_nondet_quot!(ctx, x7471, x6, 9);
    let x7473: BytePoly_4 = bigint_nondet_rem!(ctx, x7471, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7472, x6, 13), x7473, 13),
            x7471,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x7473, x1, 4), 34, 1)?;
    let x7474: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x7465, x7431, 4), x6, 4), x7470, 8);
    let x7475: BytePoly_9 = bigint_nondet_quot!(ctx, x7474, x6, 9);
    let x7476: BytePoly_4 = bigint_nondet_rem!(ctx, x7474, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7475, x6, 13), x7476, 13),
            x7474,
            13
        ),
        73156,
        4,
    )?;
    let x7477: BytePoly_8 = bigint_add!(bigint_sub!(x7431, bigint_mul!(x7476, x7429, 8), 8), x6, 8);
    let x7478: BytePoly_8 = bigint_nondet_quot!(ctx, x7477, x6, 8);
    let x7479: BytePoly_4 = bigint_nondet_rem!(ctx, x7477, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7478, x6, 12), x7479, 12),
            x7477,
            12
        ),
        65028,
        4,
    )?;
    let x7480: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x7476, x7476, 8), x7429, 8), x6, 8),
            x7459,
            8
        ),
        x6,
        8
    );
    let x7481: BytePoly_9 = bigint_nondet_quot!(ctx, x7480, x6, 9);
    let x7482: BytePoly_4 = bigint_nondet_rem!(ctx, x7480, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7481, x6, 13), x7482, 13),
            x7480,
            13
        ),
        73156,
        4,
    )?;
    let x7483: BytePoly_8 = bigint_mul!(x7476, x7482, 8);
    let x7484: BytePoly_9 = bigint_nondet_quot!(ctx, x7483, x6, 9);
    let x7485: BytePoly_4 = bigint_nondet_rem!(ctx, x7483, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7484, x6, 13), x7485, 13),
            x7483,
            13
        ),
        73156,
        4,
    )?;
    let x7486: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x7485, x7479, 4), 4), x6, 4);
    let x7487: BytePoly_4 = bigint_nondet_quot!(ctx, x7486, x6, 4);
    let x7488: BytePoly_4 = bigint_nondet_rem!(ctx, x7486, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x7487, x6, 8), x7488, 8), x7486, 8),
        32515,
        2,
    )?;
    let x7489: BytePoly_5 = bigint_add!(
        bigint_mul!(x7482, x7466, 5),
        bigint_mul!(x7429, x7468, 5),
        5
    );
    let x7490: BytePoly_5 = bigint_add!(
        bigint_mul!(x7488, x7466, 5),
        bigint_mul!(x7431, x7468, 5),
        5
    );
    let x7491: BytePoly_6 = bigint_nondet_quot!(ctx, x7489, x6, 6);
    let x7492: BytePoly_4 = bigint_nondet_rem!(ctx, x7489, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7491, x6, 10), x7492, 10),
            x7489,
            10
        ),
        48771,
        4,
    )?;
    let x7493: BytePoly_6 = bigint_nondet_quot!(ctx, x7490, x6, 6);
    let x7494: BytePoly_4 = bigint_nondet_rem!(ctx, x7490, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7493, x6, 10), x7494, 10),
            x7490,
            10
        ),
        48771,
        4,
    )?;
    let x7495: BytePoly_8 = bigint_mul!(x7459, x7459, 8);
    let x7496: BytePoly_9 = bigint_nondet_quot!(ctx, x7495, x6, 9);
    let x7497: BytePoly_4 = bigint_nondet_rem!(ctx, x7495, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7496, x6, 13), x7497, 13),
            x7495,
            13
        ),
        73156,
        4,
    )?;
    let x7498: BytePoly_5 = bigint_add!(bigint_mul!(x7497, x0, 5), x5, 5);
    let x7499: BytePoly_6 = bigint_nondet_quot!(ctx, x7498, x6, 6);
    let x7500: BytePoly_4 = bigint_nondet_rem!(ctx, x7498, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7499, x6, 10), x7500, 10),
            x7498,
            10
        ),
        48771,
        4,
    )?;
    let x7501: BytePoly_4 = bigint_add!(x7465, x7465, 4);
    let x7502: BytePoly_4 = bigint_nondet_quot!(ctx, x7501, x6, 4);
    let x7503: BytePoly_4 = bigint_nondet_rem!(ctx, x7501, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x7502, x6, 8), x7503, 8), x7501, 8),
        32515,
        2,
    )?;
    let x7504: BytePoly_4 = bigint_nondet_inv!(ctx, x7503, x6, 4);
    let x7505: BytePoly_8 = bigint_mul!(x7503, x7504, 8);
    let x7506: BytePoly_9 = bigint_nondet_quot!(ctx, x7505, x6, 9);
    let x7507: BytePoly_4 = bigint_nondet_rem!(ctx, x7505, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7506, x6, 13), x7507, 13),
            x7505,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x7507, x3, 4), 34, 1)?;
    let x7508: BytePoly_8 = bigint_mul!(x7500, x7504, 8);
    let x7509: BytePoly_9 = bigint_nondet_quot!(ctx, x7508, x6, 9);
    let x7510: BytePoly_4 = bigint_nondet_rem!(ctx, x7508, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7509, x6, 13), x7510, 13),
            x7508,
            13
        ),
        73156,
        4,
    )?;
    let x7511: BytePoly_8 = bigint_mul!(x7510, x7459, 8);
    let x7512: BytePoly_9 = bigint_nondet_quot!(ctx, x7511, x6, 9);
    let x7513: BytePoly_4 = bigint_nondet_rem!(ctx, x7511, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7512, x6, 13), x7513, 13),
            x7511,
            13
        ),
        73156,
        4,
    )?;
    let x7514: BytePoly_4 = bigint_add!(bigint_sub!(x7465, x7513, 4), x6, 4);
    let x7515: BytePoly_4 = bigint_nondet_quot!(ctx, x7514, x6, 4);
    let x7516: BytePoly_4 = bigint_nondet_rem!(ctx, x7514, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x7515, x6, 8), x7516, 8), x7514, 8),
        32515,
        2,
    )?;
    let x7517: BytePoly_8 = bigint_mul!(x7510, x7510, 8);
    let x7518: BytePoly_9 = bigint_nondet_quot!(ctx, x7517, x6, 9);
    let x7519: BytePoly_4 = bigint_nondet_rem!(ctx, x7517, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7518, x6, 13), x7519, 13),
            x7517,
            13
        ),
        73156,
        4,
    )?;
    let x7520: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x7519, x7459, 4), x6, 4), x7459, 4),
        x6,
        4
    );
    let x7521: BytePoly_4 = bigint_nondet_quot!(ctx, x7520, x6, 4);
    let x7522: BytePoly_4 = bigint_nondet_rem!(ctx, x7520, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x7521, x6, 8), x7522, 8), x7520, 8),
        32515,
        2,
    )?;
    let x7523: BytePoly_8 = bigint_mul!(x7510, x7522, 8);
    let x7524: BytePoly_9 = bigint_nondet_quot!(ctx, x7523, x6, 9);
    let x7525: BytePoly_4 = bigint_nondet_rem!(ctx, x7523, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7524, x6, 13), x7525, 13),
            x7523,
            13
        ),
        73156,
        4,
    )?;
    let x7526: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x7525, x7516, 4), 4), x6, 4);
    let x7527: BytePoly_4 = bigint_nondet_quot!(ctx, x7526, x6, 4);
    let x7528: BytePoly_4 = bigint_nondet_rem!(ctx, x7526, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x7527, x6, 8), x7528, 8), x7526, 8),
        32515,
        2,
    )?;
    let x7529: BytePoly_1 = bigint_nondet_rem!(ctx, x7467, x2, 1);
    let x7530: BytePoly_5 = bigint_nondet_quot!(ctx, x7467, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x7530, x2, 6), x7529, 6), x7467, 6),
        40643,
        4,
    )?;
    let x7531: BytePoly_1 = bigint_sub!(x3, x7529, 1);
    eqz(ctx, &bigint_mul!(x7529, x7531, 2), 8131, 2)?;
    let x7532: BytePoly_4 = bigint_add!(bigint_sub!(x7522, x7492, 4), x6, 4);
    let x7533: BytePoly_4 = bigint_nondet_inv!(ctx, x7532, x6, 4);
    let x7534: BytePoly_8 = bigint_mul!(x7532, x7533, 8);
    let x7535: BytePoly_9 = bigint_nondet_quot!(ctx, x7534, x6, 9);
    let x7536: BytePoly_4 = bigint_nondet_rem!(ctx, x7534, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7535, x6, 13), x7536, 13),
            x7534,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x7536, x1, 4), 34, 1)?;
    let x7537: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x7528, x7494, 4), x6, 4), x7533, 8);
    let x7538: BytePoly_9 = bigint_nondet_quot!(ctx, x7537, x6, 9);
    let x7539: BytePoly_4 = bigint_nondet_rem!(ctx, x7537, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7538, x6, 13), x7539, 13),
            x7537,
            13
        ),
        73156,
        4,
    )?;
    let x7540: BytePoly_8 = bigint_add!(bigint_sub!(x7494, bigint_mul!(x7539, x7492, 8), 8), x6, 8);
    let x7541: BytePoly_8 = bigint_nondet_quot!(ctx, x7540, x6, 8);
    let x7542: BytePoly_4 = bigint_nondet_rem!(ctx, x7540, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7541, x6, 12), x7542, 12),
            x7540,
            12
        ),
        65028,
        4,
    )?;
    let x7543: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x7539, x7539, 8), x7492, 8), x6, 8),
            x7522,
            8
        ),
        x6,
        8
    );
    let x7544: BytePoly_9 = bigint_nondet_quot!(ctx, x7543, x6, 9);
    let x7545: BytePoly_4 = bigint_nondet_rem!(ctx, x7543, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7544, x6, 13), x7545, 13),
            x7543,
            13
        ),
        73156,
        4,
    )?;
    let x7546: BytePoly_8 = bigint_mul!(x7539, x7545, 8);
    let x7547: BytePoly_9 = bigint_nondet_quot!(ctx, x7546, x6, 9);
    let x7548: BytePoly_4 = bigint_nondet_rem!(ctx, x7546, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7547, x6, 13), x7548, 13),
            x7546,
            13
        ),
        73156,
        4,
    )?;
    let x7549: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x7548, x7542, 4), 4), x6, 4);
    let x7550: BytePoly_4 = bigint_nondet_quot!(ctx, x7549, x6, 4);
    let x7551: BytePoly_4 = bigint_nondet_rem!(ctx, x7549, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x7550, x6, 8), x7551, 8), x7549, 8),
        32515,
        2,
    )?;
    let x7552: BytePoly_5 = bigint_add!(
        bigint_mul!(x7545, x7529, 5),
        bigint_mul!(x7492, x7531, 5),
        5
    );
    let x7553: BytePoly_5 = bigint_add!(
        bigint_mul!(x7551, x7529, 5),
        bigint_mul!(x7494, x7531, 5),
        5
    );
    let x7554: BytePoly_6 = bigint_nondet_quot!(ctx, x7552, x6, 6);
    let x7555: BytePoly_4 = bigint_nondet_rem!(ctx, x7552, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7554, x6, 10), x7555, 10),
            x7552,
            10
        ),
        48771,
        4,
    )?;
    let x7556: BytePoly_6 = bigint_nondet_quot!(ctx, x7553, x6, 6);
    let x7557: BytePoly_4 = bigint_nondet_rem!(ctx, x7553, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7556, x6, 10), x7557, 10),
            x7553,
            10
        ),
        48771,
        4,
    )?;
    let x7558: BytePoly_8 = bigint_mul!(x7522, x7522, 8);
    let x7559: BytePoly_9 = bigint_nondet_quot!(ctx, x7558, x6, 9);
    let x7560: BytePoly_4 = bigint_nondet_rem!(ctx, x7558, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7559, x6, 13), x7560, 13),
            x7558,
            13
        ),
        73156,
        4,
    )?;
    let x7561: BytePoly_5 = bigint_add!(bigint_mul!(x7560, x0, 5), x5, 5);
    let x7562: BytePoly_6 = bigint_nondet_quot!(ctx, x7561, x6, 6);
    let x7563: BytePoly_4 = bigint_nondet_rem!(ctx, x7561, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7562, x6, 10), x7563, 10),
            x7561,
            10
        ),
        48771,
        4,
    )?;
    let x7564: BytePoly_4 = bigint_add!(x7528, x7528, 4);
    let x7565: BytePoly_4 = bigint_nondet_quot!(ctx, x7564, x6, 4);
    let x7566: BytePoly_4 = bigint_nondet_rem!(ctx, x7564, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x7565, x6, 8), x7566, 8), x7564, 8),
        32515,
        2,
    )?;
    let x7567: BytePoly_4 = bigint_nondet_inv!(ctx, x7566, x6, 4);
    let x7568: BytePoly_8 = bigint_mul!(x7566, x7567, 8);
    let x7569: BytePoly_9 = bigint_nondet_quot!(ctx, x7568, x6, 9);
    let x7570: BytePoly_4 = bigint_nondet_rem!(ctx, x7568, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7569, x6, 13), x7570, 13),
            x7568,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x7570, x3, 4), 34, 1)?;
    let x7571: BytePoly_8 = bigint_mul!(x7563, x7567, 8);
    let x7572: BytePoly_9 = bigint_nondet_quot!(ctx, x7571, x6, 9);
    let x7573: BytePoly_4 = bigint_nondet_rem!(ctx, x7571, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7572, x6, 13), x7573, 13),
            x7571,
            13
        ),
        73156,
        4,
    )?;
    let x7574: BytePoly_8 = bigint_mul!(x7573, x7522, 8);
    let x7575: BytePoly_9 = bigint_nondet_quot!(ctx, x7574, x6, 9);
    let x7576: BytePoly_4 = bigint_nondet_rem!(ctx, x7574, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7575, x6, 13), x7576, 13),
            x7574,
            13
        ),
        73156,
        4,
    )?;
    let x7577: BytePoly_4 = bigint_add!(bigint_sub!(x7528, x7576, 4), x6, 4);
    let x7578: BytePoly_4 = bigint_nondet_quot!(ctx, x7577, x6, 4);
    let x7579: BytePoly_4 = bigint_nondet_rem!(ctx, x7577, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x7578, x6, 8), x7579, 8), x7577, 8),
        32515,
        2,
    )?;
    let x7580: BytePoly_8 = bigint_mul!(x7573, x7573, 8);
    let x7581: BytePoly_9 = bigint_nondet_quot!(ctx, x7580, x6, 9);
    let x7582: BytePoly_4 = bigint_nondet_rem!(ctx, x7580, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7581, x6, 13), x7582, 13),
            x7580,
            13
        ),
        73156,
        4,
    )?;
    let x7583: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x7582, x7522, 4), x6, 4), x7522, 4),
        x6,
        4
    );
    let x7584: BytePoly_4 = bigint_nondet_quot!(ctx, x7583, x6, 4);
    let x7585: BytePoly_4 = bigint_nondet_rem!(ctx, x7583, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x7584, x6, 8), x7585, 8), x7583, 8),
        32515,
        2,
    )?;
    let x7586: BytePoly_8 = bigint_mul!(x7573, x7585, 8);
    let x7587: BytePoly_9 = bigint_nondet_quot!(ctx, x7586, x6, 9);
    let x7588: BytePoly_4 = bigint_nondet_rem!(ctx, x7586, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7587, x6, 13), x7588, 13),
            x7586,
            13
        ),
        73156,
        4,
    )?;
    let x7589: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x7588, x7579, 4), 4), x6, 4);
    let x7590: BytePoly_4 = bigint_nondet_quot!(ctx, x7589, x6, 4);
    let x7591: BytePoly_4 = bigint_nondet_rem!(ctx, x7589, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x7590, x6, 8), x7591, 8), x7589, 8),
        32515,
        2,
    )?;
    let x7592: BytePoly_1 = bigint_nondet_rem!(ctx, x7530, x2, 1);
    let x7593: BytePoly_5 = bigint_nondet_quot!(ctx, x7530, x2, 5);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x7593, x2, 6), x7592, 6), x7530, 6),
        40643,
        4,
    )?;
    let x7594: BytePoly_1 = bigint_sub!(x3, x7592, 1);
    eqz(ctx, &bigint_mul!(x7592, x7594, 2), 8131, 2)?;
    let x7595: BytePoly_4 = bigint_add!(bigint_sub!(x7585, x7555, 4), x6, 4);
    let x7596: BytePoly_4 = bigint_nondet_inv!(ctx, x7595, x6, 4);
    let x7597: BytePoly_8 = bigint_mul!(x7595, x7596, 8);
    let x7598: BytePoly_9 = bigint_nondet_quot!(ctx, x7597, x6, 9);
    let x7599: BytePoly_4 = bigint_nondet_rem!(ctx, x7597, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7598, x6, 13), x7599, 13),
            x7597,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x7599, x1, 4), 34, 1)?;
    let x7600: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x7591, x7557, 4), x6, 4), x7596, 8);
    let x7601: BytePoly_9 = bigint_nondet_quot!(ctx, x7600, x6, 9);
    let x7602: BytePoly_4 = bigint_nondet_rem!(ctx, x7600, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7601, x6, 13), x7602, 13),
            x7600,
            13
        ),
        73156,
        4,
    )?;
    let x7603: BytePoly_8 = bigint_add!(bigint_sub!(x7557, bigint_mul!(x7602, x7555, 8), 8), x6, 8);
    let x7604: BytePoly_8 = bigint_nondet_quot!(ctx, x7603, x6, 8);
    let x7605: BytePoly_4 = bigint_nondet_rem!(ctx, x7603, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7604, x6, 12), x7605, 12),
            x7603,
            12
        ),
        65028,
        4,
    )?;
    let x7606: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x7602, x7602, 8), x7555, 8), x6, 8),
            x7585,
            8
        ),
        x6,
        8
    );
    let x7607: BytePoly_9 = bigint_nondet_quot!(ctx, x7606, x6, 9);
    let x7608: BytePoly_4 = bigint_nondet_rem!(ctx, x7606, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7607, x6, 13), x7608, 13),
            x7606,
            13
        ),
        73156,
        4,
    )?;
    let x7609: BytePoly_8 = bigint_mul!(x7602, x7608, 8);
    let x7610: BytePoly_9 = bigint_nondet_quot!(ctx, x7609, x6, 9);
    let x7611: BytePoly_4 = bigint_nondet_rem!(ctx, x7609, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7610, x6, 13), x7611, 13),
            x7609,
            13
        ),
        73156,
        4,
    )?;
    let x7612: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x7611, x7605, 4), 4), x6, 4);
    let x7613: BytePoly_4 = bigint_nondet_quot!(ctx, x7612, x6, 4);
    let x7614: BytePoly_4 = bigint_nondet_rem!(ctx, x7612, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x7613, x6, 8), x7614, 8), x7612, 8),
        32515,
        2,
    )?;
    let x7615: BytePoly_5 = bigint_add!(
        bigint_mul!(x7608, x7592, 5),
        bigint_mul!(x7555, x7594, 5),
        5
    );
    let x7616: BytePoly_5 = bigint_add!(
        bigint_mul!(x7614, x7592, 5),
        bigint_mul!(x7557, x7594, 5),
        5
    );
    let x7617: BytePoly_6 = bigint_nondet_quot!(ctx, x7615, x6, 6);
    let x7618: BytePoly_4 = bigint_nondet_rem!(ctx, x7615, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7617, x6, 10), x7618, 10),
            x7615,
            10
        ),
        48771,
        4,
    )?;
    let x7619: BytePoly_6 = bigint_nondet_quot!(ctx, x7616, x6, 6);
    let x7620: BytePoly_4 = bigint_nondet_rem!(ctx, x7616, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7619, x6, 10), x7620, 10),
            x7616,
            10
        ),
        48771,
        4,
    )?;
    let x7621: BytePoly_8 = bigint_mul!(x7585, x7585, 8);
    let x7622: BytePoly_9 = bigint_nondet_quot!(ctx, x7621, x6, 9);
    let x7623: BytePoly_4 = bigint_nondet_rem!(ctx, x7621, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7622, x6, 13), x7623, 13),
            x7621,
            13
        ),
        73156,
        4,
    )?;
    let x7624: BytePoly_5 = bigint_add!(bigint_mul!(x7623, x0, 5), x5, 5);
    let x7625: BytePoly_6 = bigint_nondet_quot!(ctx, x7624, x6, 6);
    let x7626: BytePoly_4 = bigint_nondet_rem!(ctx, x7624, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7625, x6, 10), x7626, 10),
            x7624,
            10
        ),
        48771,
        4,
    )?;
    let x7627: BytePoly_4 = bigint_add!(x7591, x7591, 4);
    let x7628: BytePoly_4 = bigint_nondet_quot!(ctx, x7627, x6, 4);
    let x7629: BytePoly_4 = bigint_nondet_rem!(ctx, x7627, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x7628, x6, 8), x7629, 8), x7627, 8),
        32515,
        2,
    )?;
    let x7630: BytePoly_4 = bigint_nondet_inv!(ctx, x7629, x6, 4);
    let x7631: BytePoly_8 = bigint_mul!(x7629, x7630, 8);
    let x7632: BytePoly_9 = bigint_nondet_quot!(ctx, x7631, x6, 9);
    let x7633: BytePoly_4 = bigint_nondet_rem!(ctx, x7631, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7632, x6, 13), x7633, 13),
            x7631,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x7633, x3, 4), 34, 1)?;
    let x7634: BytePoly_8 = bigint_mul!(x7626, x7630, 8);
    let x7635: BytePoly_9 = bigint_nondet_quot!(ctx, x7634, x6, 9);
    let x7636: BytePoly_4 = bigint_nondet_rem!(ctx, x7634, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7635, x6, 13), x7636, 13),
            x7634,
            13
        ),
        73156,
        4,
    )?;
    let x7637: BytePoly_8 = bigint_mul!(x7636, x7585, 8);
    let x7638: BytePoly_9 = bigint_nondet_quot!(ctx, x7637, x6, 9);
    let x7639: BytePoly_4 = bigint_nondet_rem!(ctx, x7637, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7638, x6, 13), x7639, 13),
            x7637,
            13
        ),
        73156,
        4,
    )?;
    let x7640: BytePoly_4 = bigint_add!(bigint_sub!(x7591, x7639, 4), x6, 4);
    let x7641: BytePoly_4 = bigint_nondet_quot!(ctx, x7640, x6, 4);
    let x7642: BytePoly_4 = bigint_nondet_rem!(ctx, x7640, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x7641, x6, 8), x7642, 8), x7640, 8),
        32515,
        2,
    )?;
    let x7643: BytePoly_8 = bigint_mul!(x7636, x7636, 8);
    let x7644: BytePoly_9 = bigint_nondet_quot!(ctx, x7643, x6, 9);
    let x7645: BytePoly_4 = bigint_nondet_rem!(ctx, x7643, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7644, x6, 13), x7645, 13),
            x7643,
            13
        ),
        73156,
        4,
    )?;
    let x7646: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x7645, x7585, 4), x6, 4), x7585, 4),
        x6,
        4
    );
    let x7647: BytePoly_4 = bigint_nondet_quot!(ctx, x7646, x6, 4);
    let x7648: BytePoly_4 = bigint_nondet_rem!(ctx, x7646, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x7647, x6, 8), x7648, 8), x7646, 8),
        32515,
        2,
    )?;
    let x7649: BytePoly_8 = bigint_mul!(x7636, x7648, 8);
    let x7650: BytePoly_9 = bigint_nondet_quot!(ctx, x7649, x6, 9);
    let x7651: BytePoly_4 = bigint_nondet_rem!(ctx, x7649, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7650, x6, 13), x7651, 13),
            x7649,
            13
        ),
        73156,
        4,
    )?;
    let x7652: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x7651, x7642, 4), 4), x6, 4);
    let x7653: BytePoly_4 = bigint_nondet_quot!(ctx, x7652, x6, 4);
    let x7654: BytePoly_4 = bigint_nondet_rem!(ctx, x7652, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x7653, x6, 8), x7654, 8), x7652, 8),
        32515,
        2,
    )?;
    let x7655: BytePoly_4 = bigint_add!(bigint_sub!(x15, x7618, 4), x6, 4);
    let x7656: BytePoly_4 = bigint_nondet_inv!(ctx, x7655, x6, 4);
    let x7657: BytePoly_8 = bigint_mul!(x7655, x7656, 8);
    let x7658: BytePoly_9 = bigint_nondet_quot!(ctx, x7657, x6, 9);
    let x7659: BytePoly_4 = bigint_nondet_rem!(ctx, x7657, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7658, x6, 13), x7659, 13),
            x7657,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x7659, x1, 4), 34, 1)?;
    let x7660: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x2557, x7620, 4), x6, 4), x7656, 8);
    let x7661: BytePoly_9 = bigint_nondet_quot!(ctx, x7660, x6, 9);
    let x7662: BytePoly_4 = bigint_nondet_rem!(ctx, x7660, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7661, x6, 13), x7662, 13),
            x7660,
            13
        ),
        73156,
        4,
    )?;
    let x7663: BytePoly_8 = bigint_add!(bigint_sub!(x7620, bigint_mul!(x7662, x7618, 8), 8), x6, 8);
    let x7664: BytePoly_8 = bigint_nondet_quot!(ctx, x7663, x6, 8);
    let x7665: BytePoly_4 = bigint_nondet_rem!(ctx, x7663, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7664, x6, 12), x7665, 12),
            x7663,
            12
        ),
        65028,
        4,
    )?;
    let x7666: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x7662, x7662, 8), x7618, 8), x6, 8),
            x15,
            8
        ),
        x6,
        8
    );
    let x7667: BytePoly_9 = bigint_nondet_quot!(ctx, x7666, x6, 9);
    let x7668: BytePoly_4 = bigint_nondet_rem!(ctx, x7666, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7667, x6, 13), x7668, 13),
            x7666,
            13
        ),
        73156,
        4,
    )?;
    let x7669: BytePoly_8 = bigint_mul!(x7662, x7668, 8);
    let x7670: BytePoly_9 = bigint_nondet_quot!(ctx, x7669, x6, 9);
    let x7671: BytePoly_4 = bigint_nondet_rem!(ctx, x7669, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7670, x6, 13), x7671, 13),
            x7669,
            13
        ),
        73156,
        4,
    )?;
    let x7672: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x7671, x7665, 4), 4), x6, 4);
    let x7673: BytePoly_4 = bigint_nondet_quot!(ctx, x7672, x6, 4);
    let x7674: BytePoly_4 = bigint_nondet_rem!(ctx, x7672, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x7673, x6, 8), x7674, 8), x7672, 8),
        32515,
        2,
    )?;
    let x7675: BytePoly_4 = bigint_add!(bigint_sub!(x7668, x5126, 4), x6, 4);
    let x7676: BytePoly_4 = bigint_nondet_inv!(ctx, x7675, x6, 4);
    let x7677: BytePoly_8 = bigint_mul!(x7675, x7676, 8);
    let x7678: BytePoly_9 = bigint_nondet_quot!(ctx, x7677, x6, 9);
    let x7679: BytePoly_4 = bigint_nondet_rem!(ctx, x7677, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7678, x6, 13), x7679, 13),
            x7677,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x7679, x1, 4), 34, 1)?;
    let x7680: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x7674, x5132, 4), x6, 4), x7676, 8);
    let x7681: BytePoly_9 = bigint_nondet_quot!(ctx, x7680, x6, 9);
    let x7682: BytePoly_4 = bigint_nondet_rem!(ctx, x7680, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7681, x6, 13), x7682, 13),
            x7680,
            13
        ),
        73156,
        4,
    )?;
    let x7683: BytePoly_8 = bigint_add!(bigint_sub!(x5132, bigint_mul!(x7682, x5126, 8), 8), x6, 8);
    let x7684: BytePoly_8 = bigint_nondet_quot!(ctx, x7683, x6, 8);
    let x7685: BytePoly_4 = bigint_nondet_rem!(ctx, x7683, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7684, x6, 12), x7685, 12),
            x7683,
            12
        ),
        65028,
        4,
    )?;
    let x7686: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x7682, x7682, 8), x5126, 8), x6, 8),
            x7668,
            8
        ),
        x6,
        8
    );
    let x7687: BytePoly_9 = bigint_nondet_quot!(ctx, x7686, x6, 9);
    let x7688: BytePoly_4 = bigint_nondet_rem!(ctx, x7686, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7687, x6, 13), x7688, 13),
            x7686,
            13
        ),
        73156,
        4,
    )?;
    let x7689: BytePoly_8 = bigint_mul!(x7682, x7688, 8);
    let x7690: BytePoly_9 = bigint_nondet_quot!(ctx, x7689, x6, 9);
    let x7691: BytePoly_4 = bigint_nondet_rem!(ctx, x7689, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x7690, x6, 13), x7691, 13),
            x7689,
            13
        ),
        73156,
        4,
    )?;
    let x7692: BytePoly_4 = bigint_add!(bigint_sub!(x6, bigint_add!(x7691, x7685, 4), 4), x6, 4);
    let x7693: BytePoly_4 = bigint_nondet_quot!(ctx, x7692, x6, 4);
    let x7694: BytePoly_4 = bigint_nondet_rem!(ctx, x7692, x6, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x7693, x6, 8), x7694, 8), x7692, 8),
        32515,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x13, x7688, 5), 34, 1)?;
    return Ok(());
}
pub fn ec_aff_add_test_8(ctx: &mut BigIntContext) -> Result<()> {
    let x0: BytePoly_1 = bigint_const!(ctx, 1);
    let x1: BytePoly_1 = bigint_const!(ctx, 11);
    let x2: BytePoly_1 = bigint_def!(ctx, 1, 0, 1);
    let x3: BytePoly_1 = bigint_def!(ctx, 1, 1, 1);
    let x4: BytePoly_1 = bigint_def!(ctx, 1, 2, 1);
    let x5: BytePoly_1 = bigint_def!(ctx, 1, 3, 1);
    let x6: BytePoly_1 = bigint_def!(ctx, 1, 4, 1);
    let x7: BytePoly_1 = bigint_def!(ctx, 1, 5, 1);
    let x8: BytePoly_1 = bigint_def!(ctx, 1, 6, 1);
    eqz(ctx, &bigint_sub!(x4, x4, 1), 34, 1)?;
    let x9: BytePoly_1 = bigint_add!(bigint_sub!(x5, x2, 1), x1, 1);
    let x10: BytePoly_1 = bigint_nondet_inv!(ctx, x9, x1, 1);
    let x11: BytePoly_2 = bigint_mul!(x9, x10, 2);
    let x12: BytePoly_3 = bigint_nondet_quot!(ctx, x11, x1, 3);
    let x13: BytePoly_1 = bigint_nondet_rem!(ctx, x11, x1, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x12, x1, 4), x13, 4), x11, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x13, x0, 1), 34, 1)?;
    let x14: BytePoly_2 = bigint_mul!(bigint_add!(bigint_sub!(x6, x3, 1), x1, 1), x10, 2);
    let x15: BytePoly_3 = bigint_nondet_quot!(ctx, x14, x1, 3);
    let x16: BytePoly_1 = bigint_nondet_rem!(ctx, x14, x1, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x15, x1, 4), x16, 4), x14, 4),
        24387,
        2,
    )?;
    let x17: BytePoly_2 = bigint_add!(bigint_sub!(x3, bigint_mul!(x16, x2, 2), 2), x1, 2);
    let x18: BytePoly_2 = bigint_nondet_quot!(ctx, x17, x1, 2);
    let x19: BytePoly_1 = bigint_nondet_rem!(ctx, x17, x1, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x18, x1, 3), x19, 3), x17, 3),
        16259,
        2,
    )?;
    let x20: BytePoly_2 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x16, x16, 2), x2, 2), x1, 2),
            x5,
            2
        ),
        x1,
        2
    );
    let x21: BytePoly_3 = bigint_nondet_quot!(ctx, x20, x1, 3);
    let x22: BytePoly_1 = bigint_nondet_rem!(ctx, x20, x1, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x21, x1, 4), x22, 4), x20, 4),
        24387,
        2,
    )?;
    let x23: BytePoly_2 = bigint_mul!(x16, x22, 2);
    let x24: BytePoly_3 = bigint_nondet_quot!(ctx, x23, x1, 3);
    let x25: BytePoly_1 = bigint_nondet_rem!(ctx, x23, x1, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x24, x1, 4), x25, 4), x23, 4),
        24387,
        2,
    )?;
    let x26: BytePoly_1 = bigint_add!(bigint_sub!(x1, bigint_add!(x25, x19, 1), 1), x1, 1);
    let x27: BytePoly_1 = bigint_nondet_quot!(ctx, x26, x1, 1);
    let x28: BytePoly_1 = bigint_nondet_rem!(ctx, x26, x1, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x27, x1, 2), x28, 2), x26, 2),
        8131,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x22, x7, 1), 34, 1)?;
    eqz(ctx, &bigint_sub!(x28, x8, 1), 34, 1)?;
    return Ok(());
}
pub fn ec_aff_add_test_256(ctx: &mut BigIntContext) -> Result<()> {
    let x0: BytePoly_1 = bigint_const!(ctx, 1);
    let x1: BytePoly_32 = bigint_const!(
        ctx, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0
    );
    let x2: BytePoly_32 = bigint_def!(ctx, 32, 0, 1);
    let x3: BytePoly_32 = bigint_def!(ctx, 32, 1, 1);
    let x4: BytePoly_32 = bigint_def!(ctx, 32, 2, 1);
    let x5: BytePoly_32 = bigint_def!(ctx, 32, 3, 1);
    let x6: BytePoly_32 = bigint_def!(ctx, 32, 4, 1);
    let x7: BytePoly_32 = bigint_def!(ctx, 32, 5, 1);
    let x8: BytePoly_32 = bigint_def!(ctx, 32, 6, 1);
    eqz(ctx, &bigint_sub!(x4, x4, 32), 34, 1)?;
    let x9: BytePoly_32 = bigint_add!(bigint_sub!(x5, x2, 32), x1, 32);
    let x10: BytePoly_32 = bigint_nondet_inv!(ctx, x9, x1, 32);
    let x11: BytePoly_64 = bigint_mul!(x9, x10, 64);
    let x12: BytePoly_66 = bigint_nondet_quot!(ctx, x11, x1, 66);
    let x13: BytePoly_32 = bigint_nondet_rem!(ctx, x11, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x12, x1, 98), x13, 98), x11, 98),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x13, x0, 32), 34, 1)?;
    let x14: BytePoly_64 = bigint_mul!(bigint_add!(bigint_sub!(x6, x3, 32), x1, 32), x10, 64);
    let x15: BytePoly_66 = bigint_nondet_quot!(ctx, x14, x1, 66);
    let x16: BytePoly_32 = bigint_nondet_rem!(ctx, x14, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x15, x1, 98), x16, 98), x14, 98),
        536459,
        4,
    )?;
    let x17: BytePoly_64 = bigint_add!(bigint_sub!(x3, bigint_mul!(x16, x2, 64), 64), x1, 64);
    let x18: BytePoly_64 = bigint_nondet_quot!(ctx, x17, x1, 64);
    let x19: BytePoly_32 = bigint_nondet_rem!(ctx, x17, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x18, x1, 96), x19, 96), x17, 96),
        520203,
        4,
    )?;
    let x20: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x16, x16, 64), x2, 64), x1, 64),
            x5,
            64
        ),
        x1,
        64
    );
    let x21: BytePoly_66 = bigint_nondet_quot!(ctx, x20, x1, 66);
    let x22: BytePoly_32 = bigint_nondet_rem!(ctx, x20, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x21, x1, 98), x22, 98), x20, 98),
        536459,
        4,
    )?;
    let x23: BytePoly_64 = bigint_mul!(x16, x22, 64);
    let x24: BytePoly_66 = bigint_nondet_quot!(ctx, x23, x1, 66);
    let x25: BytePoly_32 = bigint_nondet_rem!(ctx, x23, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x24, x1, 98), x25, 98), x23, 98),
        536459,
        4,
    )?;
    let x26: BytePoly_32 = bigint_add!(bigint_sub!(x1, bigint_add!(x25, x19, 32), 32), x1, 32);
    let x27: BytePoly_32 = bigint_nondet_quot!(ctx, x26, x1, 32);
    let x28: BytePoly_32 = bigint_nondet_rem!(ctx, x26, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x27, x1, 64), x28, 64), x26, 64),
        260103,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x22, x7, 32), 34, 1)?;
    eqz(ctx, &bigint_sub!(x28, x8, 32), 34, 1)?;
    return Ok(());
}
pub fn ec_aff_doub_test_8(ctx: &mut BigIntContext) -> Result<()> {
    let x0: BytePoly_1 = bigint_const!(ctx, 5);
    let x1: BytePoly_1 = bigint_const!(ctx, 3);
    let x2: BytePoly_1 = bigint_const!(ctx, 1);
    let x3: BytePoly_1 = bigint_const!(ctx, 11);
    let x4: BytePoly_1 = bigint_def!(ctx, 1, 0, 1);
    let x5: BytePoly_1 = bigint_def!(ctx, 1, 1, 1);
    let x6: BytePoly_2 = bigint_def!(ctx, 2, 2, 1);
    let x7: BytePoly_1 = bigint_def!(ctx, 1, 3, 1);
    let x8: BytePoly_1 = bigint_def!(ctx, 1, 4, 1);
    let x9: BytePoly_2 = bigint_mul!(x4, x4, 2);
    let x10: BytePoly_3 = bigint_nondet_quot!(ctx, x9, x3, 3);
    let x11: BytePoly_1 = bigint_nondet_rem!(ctx, x9, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x10, x3, 4), x11, 4), x9, 4),
        24387,
        2,
    )?;
    let x12: BytePoly_2 = bigint_add!(bigint_mul!(x11, x1, 2), x0, 2);
    let x13: BytePoly_3 = bigint_nondet_quot!(ctx, x12, x3, 3);
    let x14: BytePoly_1 = bigint_nondet_rem!(ctx, x12, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x13, x3, 4), x14, 4), x12, 4),
        24387,
        2,
    )?;
    let x15: BytePoly_1 = bigint_add!(x5, x5, 1);
    let x16: BytePoly_1 = bigint_nondet_quot!(ctx, x15, x3, 1);
    let x17: BytePoly_1 = bigint_nondet_rem!(ctx, x15, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x16, x3, 2), x17, 2), x15, 2),
        8131,
        2,
    )?;
    let x18: BytePoly_1 = bigint_nondet_inv!(ctx, x17, x3, 1);
    let x19: BytePoly_2 = bigint_mul!(x17, x18, 2);
    let x20: BytePoly_3 = bigint_nondet_quot!(ctx, x19, x3, 3);
    let x21: BytePoly_1 = bigint_nondet_rem!(ctx, x19, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x20, x3, 4), x21, 4), x19, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x21, x2, 1), 34, 1)?;
    let x22: BytePoly_2 = bigint_mul!(x14, x18, 2);
    let x23: BytePoly_3 = bigint_nondet_quot!(ctx, x22, x3, 3);
    let x24: BytePoly_1 = bigint_nondet_rem!(ctx, x22, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x23, x3, 4), x24, 4), x22, 4),
        24387,
        2,
    )?;
    let x25: BytePoly_2 = bigint_mul!(x24, x4, 2);
    let x26: BytePoly_3 = bigint_nondet_quot!(ctx, x25, x3, 3);
    let x27: BytePoly_1 = bigint_nondet_rem!(ctx, x25, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x26, x3, 4), x27, 4), x25, 4),
        24387,
        2,
    )?;
    let x28: BytePoly_1 = bigint_add!(bigint_sub!(x5, x27, 1), x3, 1);
    let x29: BytePoly_1 = bigint_nondet_quot!(ctx, x28, x3, 1);
    let x30: BytePoly_1 = bigint_nondet_rem!(ctx, x28, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x29, x3, 2), x30, 2), x28, 2),
        8131,
        2,
    )?;
    let x31: BytePoly_2 = bigint_mul!(x24, x24, 2);
    let x32: BytePoly_3 = bigint_nondet_quot!(ctx, x31, x3, 3);
    let x33: BytePoly_1 = bigint_nondet_rem!(ctx, x31, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x32, x3, 4), x33, 4), x31, 4),
        24387,
        2,
    )?;
    let x34: BytePoly_1 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x33, x4, 1), x3, 1), x4, 1),
        x3,
        1
    );
    let x35: BytePoly_1 = bigint_nondet_quot!(ctx, x34, x3, 1);
    let x36: BytePoly_1 = bigint_nondet_rem!(ctx, x34, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x35, x3, 2), x36, 2), x34, 2),
        8131,
        2,
    )?;
    let x37: BytePoly_2 = bigint_mul!(x24, x36, 2);
    let x38: BytePoly_3 = bigint_nondet_quot!(ctx, x37, x3, 3);
    let x39: BytePoly_1 = bigint_nondet_rem!(ctx, x37, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x38, x3, 4), x39, 4), x37, 4),
        24387,
        2,
    )?;
    let x40: BytePoly_1 = bigint_add!(bigint_sub!(x3, bigint_add!(x39, x30, 1), 1), x3, 1);
    let x41: BytePoly_1 = bigint_nondet_quot!(ctx, x40, x3, 1);
    let x42: BytePoly_1 = bigint_nondet_rem!(ctx, x40, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x41, x3, 2), x42, 2), x40, 2),
        8131,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x36, x7, 1), 34, 1)?;
    eqz(ctx, &bigint_sub!(x42, x8, 1), 34, 1)?;
    eqz(ctx, &bigint_sub!(x6, x6, 2), 34, 1)?;
    return Ok(());
}
pub fn ec_aff_doub_test_256(ctx: &mut BigIntContext) -> Result<()> {
    let x0: BytePoly_32 = bigint_const!(
        ctx, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0
    );
    let x1: BytePoly_1 = bigint_const!(ctx, 3);
    let x2: BytePoly_1 = bigint_const!(ctx, 1);
    let x3: BytePoly_32 = bigint_const!(
        ctx, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0
    );
    let x4: BytePoly_32 = bigint_def!(ctx, 32, 0, 1);
    let x5: BytePoly_32 = bigint_def!(ctx, 32, 1, 1);
    let x6: BytePoly_33 = bigint_def!(ctx, 33, 2, 1);
    let x7: BytePoly_32 = bigint_def!(ctx, 32, 3, 1);
    let x8: BytePoly_32 = bigint_def!(ctx, 32, 4, 1);
    let x9: BytePoly_64 = bigint_mul!(x4, x4, 64);
    let x10: BytePoly_66 = bigint_nondet_quot!(ctx, x9, x3, 66);
    let x11: BytePoly_32 = bigint_nondet_rem!(ctx, x9, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x10, x3, 98), x11, 98), x9, 98),
        536459,
        4,
    )?;
    let x12: BytePoly_33 = bigint_add!(bigint_mul!(x11, x1, 33), x0, 33);
    let x13: BytePoly_35 = bigint_nondet_quot!(ctx, x12, x3, 35);
    let x14: BytePoly_32 = bigint_nondet_rem!(ctx, x12, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x13, x3, 67), x14, 67), x12, 67),
        284487,
        4,
    )?;
    let x15: BytePoly_32 = bigint_add!(x5, x5, 32);
    let x16: BytePoly_32 = bigint_nondet_quot!(ctx, x15, x3, 32);
    let x17: BytePoly_32 = bigint_nondet_rem!(ctx, x15, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x16, x3, 64), x17, 64), x15, 64),
        260103,
        4,
    )?;
    let x18: BytePoly_32 = bigint_nondet_inv!(ctx, x17, x3, 32);
    let x19: BytePoly_64 = bigint_mul!(x17, x18, 64);
    let x20: BytePoly_66 = bigint_nondet_quot!(ctx, x19, x3, 66);
    let x21: BytePoly_32 = bigint_nondet_rem!(ctx, x19, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x20, x3, 98), x21, 98), x19, 98),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x21, x2, 32), 34, 1)?;
    let x22: BytePoly_64 = bigint_mul!(x14, x18, 64);
    let x23: BytePoly_66 = bigint_nondet_quot!(ctx, x22, x3, 66);
    let x24: BytePoly_32 = bigint_nondet_rem!(ctx, x22, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x23, x3, 98), x24, 98), x22, 98),
        536459,
        4,
    )?;
    let x25: BytePoly_64 = bigint_mul!(x24, x4, 64);
    let x26: BytePoly_66 = bigint_nondet_quot!(ctx, x25, x3, 66);
    let x27: BytePoly_32 = bigint_nondet_rem!(ctx, x25, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x26, x3, 98), x27, 98), x25, 98),
        536459,
        4,
    )?;
    let x28: BytePoly_32 = bigint_add!(bigint_sub!(x5, x27, 32), x3, 32);
    let x29: BytePoly_32 = bigint_nondet_quot!(ctx, x28, x3, 32);
    let x30: BytePoly_32 = bigint_nondet_rem!(ctx, x28, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x29, x3, 64), x30, 64), x28, 64),
        260103,
        4,
    )?;
    let x31: BytePoly_64 = bigint_mul!(x24, x24, 64);
    let x32: BytePoly_66 = bigint_nondet_quot!(ctx, x31, x3, 66);
    let x33: BytePoly_32 = bigint_nondet_rem!(ctx, x31, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x32, x3, 98), x33, 98), x31, 98),
        536459,
        4,
    )?;
    let x34: BytePoly_32 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x33, x4, 32), x3, 32), x4, 32),
        x3,
        32
    );
    let x35: BytePoly_32 = bigint_nondet_quot!(ctx, x34, x3, 32);
    let x36: BytePoly_32 = bigint_nondet_rem!(ctx, x34, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x35, x3, 64), x36, 64), x34, 64),
        260103,
        4,
    )?;
    let x37: BytePoly_64 = bigint_mul!(x24, x36, 64);
    let x38: BytePoly_66 = bigint_nondet_quot!(ctx, x37, x3, 66);
    let x39: BytePoly_32 = bigint_nondet_rem!(ctx, x37, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x38, x3, 98), x39, 98), x37, 98),
        536459,
        4,
    )?;
    let x40: BytePoly_32 = bigint_add!(bigint_sub!(x3, bigint_add!(x39, x30, 32), 32), x3, 32);
    let x41: BytePoly_32 = bigint_nondet_quot!(ctx, x40, x3, 32);
    let x42: BytePoly_32 = bigint_nondet_rem!(ctx, x40, x3, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x41, x3, 64), x42, 64), x40, 64),
        260103,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x36, x7, 32), 34, 1)?;
    eqz(ctx, &bigint_sub!(x42, x8, 32), 34, 1)?;
    eqz(ctx, &bigint_sub!(x6, x6, 33), 34, 1)?;
    return Ok(());
}
pub fn ec_aff_mul_test_8(ctx: &mut BigIntContext) -> Result<()> {
    let x0: BytePoly_1 = bigint_const!(ctx, 3);
    let x1: BytePoly_1 = bigint_const!(ctx, 1);
    let x2: BytePoly_1 = bigint_const!(ctx, 5);
    let x3: BytePoly_1 = bigint_const!(ctx, 11);
    let x4: BytePoly_1 = bigint_const!(ctx, 2);
    let x5: BytePoly_1 = bigint_const!(ctx, 1);
    let x6: BytePoly_1 = bigint_def!(ctx, 1, 0, 1);
    let x7: BytePoly_1 = bigint_def!(ctx, 1, 1, 1);
    let x8: BytePoly_1 = bigint_def!(ctx, 1, 2, 1);
    let x9: BytePoly_1 = bigint_def!(ctx, 1, 3, 1);
    let x10: BytePoly_1 = bigint_def!(ctx, 1, 4, 1);
    let x11: BytePoly_1 = bigint_def!(ctx, 1, 5, 1);
    let x12: BytePoly_1 = bigint_def!(ctx, 1, 6, 1);
    let x13: BytePoly_1 = bigint_def!(ctx, 1, 7, 1);
    eqz(ctx, &bigint_sub!(x6, x6, 1), 34, 1)?;
    eqz(ctx, &bigint_sub!(x7, x7, 1), 34, 1)?;
    eqz(ctx, &bigint_sub!(x8, x8, 1), 34, 1)?;
    eqz(ctx, &bigint_sub!(x9, x9, 1), 34, 1)?;
    eqz(ctx, &bigint_sub!(x10, x10, 1), 34, 1)?;
    eqz(ctx, &bigint_sub!(x11, x11, 1), 34, 1)?;
    eqz(ctx, &bigint_sub!(x12, x12, 1), 34, 1)?;
    eqz(ctx, &bigint_sub!(x13, x13, 1), 34, 1)?;
    let x14: BytePoly_2 = bigint_mul!(x9, x9, 2);
    let x15: BytePoly_3 = bigint_nondet_quot!(ctx, x14, x3, 3);
    let x16: BytePoly_1 = bigint_nondet_rem!(ctx, x14, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x15, x3, 4), x16, 4), x14, 4),
        24387,
        2,
    )?;
    let x17: BytePoly_2 = bigint_sub!(
        bigint_mul!(x10, x10, 2),
        bigint_add!(
            bigint_add!(bigint_mul!(x9, x16, 2), bigint_mul!(x9, x2, 2), 2),
            x1,
            2
        ),
        2
    );
    let x18: BytePoly_3 = bigint_nondet_quot!(ctx, x17, x3, 3);
    let x19: BytePoly_1 = bigint_nondet_rem!(ctx, x17, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x18, x3, 4), x19, 4), x17, 4),
        24387,
        2,
    )?;
    eqz(ctx, &x19, 34, 1)?;
    let x20: BytePoly_1 = bigint_nondet_rem!(ctx, x8, x4, 1);
    let x21: BytePoly_1 = bigint_nondet_quot!(ctx, x8, x4, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x21, x4, 2), x20, 2), x8, 2),
        8131,
        2,
    )?;
    let x22: BytePoly_1 = bigint_sub!(x5, x20, 1);
    eqz(ctx, &bigint_mul!(x20, x22, 2), 8131, 2)?;
    let x23: BytePoly_1 = bigint_add!(bigint_sub!(x6, x9, 1), x3, 1);
    let x24: BytePoly_1 = bigint_nondet_inv!(ctx, x23, x3, 1);
    let x25: BytePoly_2 = bigint_mul!(x23, x24, 2);
    let x26: BytePoly_3 = bigint_nondet_quot!(ctx, x25, x3, 3);
    let x27: BytePoly_1 = bigint_nondet_rem!(ctx, x25, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x26, x3, 4), x27, 4), x25, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x27, x1, 1), 34, 1)?;
    let x28: BytePoly_2 = bigint_mul!(bigint_add!(bigint_sub!(x7, x10, 1), x3, 1), x24, 2);
    let x29: BytePoly_3 = bigint_nondet_quot!(ctx, x28, x3, 3);
    let x30: BytePoly_1 = bigint_nondet_rem!(ctx, x28, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x29, x3, 4), x30, 4), x28, 4),
        24387,
        2,
    )?;
    let x31: BytePoly_2 = bigint_add!(bigint_sub!(x10, bigint_mul!(x30, x9, 2), 2), x3, 2);
    let x32: BytePoly_2 = bigint_nondet_quot!(ctx, x31, x3, 2);
    let x33: BytePoly_1 = bigint_nondet_rem!(ctx, x31, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x32, x3, 3), x33, 3), x31, 3),
        16259,
        2,
    )?;
    let x34: BytePoly_2 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x30, x30, 2), x9, 2), x3, 2),
            x6,
            2
        ),
        x3,
        2
    );
    let x35: BytePoly_3 = bigint_nondet_quot!(ctx, x34, x3, 3);
    let x36: BytePoly_1 = bigint_nondet_rem!(ctx, x34, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x35, x3, 4), x36, 4), x34, 4),
        24387,
        2,
    )?;
    let x37: BytePoly_2 = bigint_mul!(x30, x36, 2);
    let x38: BytePoly_3 = bigint_nondet_quot!(ctx, x37, x3, 3);
    let x39: BytePoly_1 = bigint_nondet_rem!(ctx, x37, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x38, x3, 4), x39, 4), x37, 4),
        24387,
        2,
    )?;
    let x40: BytePoly_1 = bigint_add!(bigint_sub!(x3, bigint_add!(x39, x33, 1), 1), x3, 1);
    let x41: BytePoly_1 = bigint_nondet_quot!(ctx, x40, x3, 1);
    let x42: BytePoly_1 = bigint_nondet_rem!(ctx, x40, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x41, x3, 2), x42, 2), x40, 2),
        8131,
        2,
    )?;
    let x43: BytePoly_2 = bigint_add!(bigint_mul!(x36, x20, 2), bigint_mul!(x9, x22, 2), 2);
    let x44: BytePoly_2 = bigint_add!(bigint_mul!(x42, x20, 2), bigint_mul!(x10, x22, 2), 2);
    let x45: BytePoly_3 = bigint_nondet_quot!(ctx, x43, x3, 3);
    let x46: BytePoly_1 = bigint_nondet_rem!(ctx, x43, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x45, x3, 4), x46, 4), x43, 4),
        24387,
        2,
    )?;
    let x47: BytePoly_3 = bigint_nondet_quot!(ctx, x44, x3, 3);
    let x48: BytePoly_1 = bigint_nondet_rem!(ctx, x44, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x47, x3, 4), x48, 4), x44, 4),
        24387,
        2,
    )?;
    let x49: BytePoly_2 = bigint_mul!(x6, x6, 2);
    let x50: BytePoly_3 = bigint_nondet_quot!(ctx, x49, x3, 3);
    let x51: BytePoly_1 = bigint_nondet_rem!(ctx, x49, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x50, x3, 4), x51, 4), x49, 4),
        24387,
        2,
    )?;
    let x52: BytePoly_2 = bigint_add!(bigint_mul!(x51, x0, 2), x2, 2);
    let x53: BytePoly_3 = bigint_nondet_quot!(ctx, x52, x3, 3);
    let x54: BytePoly_1 = bigint_nondet_rem!(ctx, x52, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x53, x3, 4), x54, 4), x52, 4),
        24387,
        2,
    )?;
    let x55: BytePoly_1 = bigint_add!(x7, x7, 1);
    let x56: BytePoly_1 = bigint_nondet_quot!(ctx, x55, x3, 1);
    let x57: BytePoly_1 = bigint_nondet_rem!(ctx, x55, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x56, x3, 2), x57, 2), x55, 2),
        8131,
        2,
    )?;
    let x58: BytePoly_1 = bigint_nondet_inv!(ctx, x57, x3, 1);
    let x59: BytePoly_2 = bigint_mul!(x57, x58, 2);
    let x60: BytePoly_3 = bigint_nondet_quot!(ctx, x59, x3, 3);
    let x61: BytePoly_1 = bigint_nondet_rem!(ctx, x59, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x60, x3, 4), x61, 4), x59, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x61, x5, 1), 34, 1)?;
    let x62: BytePoly_2 = bigint_mul!(x54, x58, 2);
    let x63: BytePoly_3 = bigint_nondet_quot!(ctx, x62, x3, 3);
    let x64: BytePoly_1 = bigint_nondet_rem!(ctx, x62, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x63, x3, 4), x64, 4), x62, 4),
        24387,
        2,
    )?;
    let x65: BytePoly_2 = bigint_mul!(x64, x6, 2);
    let x66: BytePoly_3 = bigint_nondet_quot!(ctx, x65, x3, 3);
    let x67: BytePoly_1 = bigint_nondet_rem!(ctx, x65, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x66, x3, 4), x67, 4), x65, 4),
        24387,
        2,
    )?;
    let x68: BytePoly_1 = bigint_add!(bigint_sub!(x7, x67, 1), x3, 1);
    let x69: BytePoly_1 = bigint_nondet_quot!(ctx, x68, x3, 1);
    let x70: BytePoly_1 = bigint_nondet_rem!(ctx, x68, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x69, x3, 2), x70, 2), x68, 2),
        8131,
        2,
    )?;
    let x71: BytePoly_2 = bigint_mul!(x64, x64, 2);
    let x72: BytePoly_3 = bigint_nondet_quot!(ctx, x71, x3, 3);
    let x73: BytePoly_1 = bigint_nondet_rem!(ctx, x71, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x72, x3, 4), x73, 4), x71, 4),
        24387,
        2,
    )?;
    let x74: BytePoly_1 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x73, x6, 1), x3, 1), x6, 1),
        x3,
        1
    );
    let x75: BytePoly_1 = bigint_nondet_quot!(ctx, x74, x3, 1);
    let x76: BytePoly_1 = bigint_nondet_rem!(ctx, x74, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x75, x3, 2), x76, 2), x74, 2),
        8131,
        2,
    )?;
    let x77: BytePoly_2 = bigint_mul!(x64, x76, 2);
    let x78: BytePoly_3 = bigint_nondet_quot!(ctx, x77, x3, 3);
    let x79: BytePoly_1 = bigint_nondet_rem!(ctx, x77, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x78, x3, 4), x79, 4), x77, 4),
        24387,
        2,
    )?;
    let x80: BytePoly_1 = bigint_add!(bigint_sub!(x3, bigint_add!(x79, x70, 1), 1), x3, 1);
    let x81: BytePoly_1 = bigint_nondet_quot!(ctx, x80, x3, 1);
    let x82: BytePoly_1 = bigint_nondet_rem!(ctx, x80, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x81, x3, 2), x82, 2), x80, 2),
        8131,
        2,
    )?;
    let x83: BytePoly_1 = bigint_nondet_rem!(ctx, x21, x4, 1);
    let x84: BytePoly_1 = bigint_nondet_quot!(ctx, x21, x4, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x84, x4, 2), x83, 2), x21, 2),
        8131,
        2,
    )?;
    let x85: BytePoly_1 = bigint_sub!(x5, x83, 1);
    eqz(ctx, &bigint_mul!(x83, x85, 2), 8131, 2)?;
    let x86: BytePoly_1 = bigint_add!(bigint_sub!(x76, x46, 1), x3, 1);
    let x87: BytePoly_1 = bigint_nondet_inv!(ctx, x86, x3, 1);
    let x88: BytePoly_2 = bigint_mul!(x86, x87, 2);
    let x89: BytePoly_3 = bigint_nondet_quot!(ctx, x88, x3, 3);
    let x90: BytePoly_1 = bigint_nondet_rem!(ctx, x88, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x89, x3, 4), x90, 4), x88, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x90, x1, 1), 34, 1)?;
    let x91: BytePoly_2 = bigint_mul!(bigint_add!(bigint_sub!(x82, x48, 1), x3, 1), x87, 2);
    let x92: BytePoly_3 = bigint_nondet_quot!(ctx, x91, x3, 3);
    let x93: BytePoly_1 = bigint_nondet_rem!(ctx, x91, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x92, x3, 4), x93, 4), x91, 4),
        24387,
        2,
    )?;
    let x94: BytePoly_2 = bigint_add!(bigint_sub!(x48, bigint_mul!(x93, x46, 2), 2), x3, 2);
    let x95: BytePoly_2 = bigint_nondet_quot!(ctx, x94, x3, 2);
    let x96: BytePoly_1 = bigint_nondet_rem!(ctx, x94, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x95, x3, 3), x96, 3), x94, 3),
        16259,
        2,
    )?;
    let x97: BytePoly_2 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x93, x93, 2), x46, 2), x3, 2),
            x76,
            2
        ),
        x3,
        2
    );
    let x98: BytePoly_3 = bigint_nondet_quot!(ctx, x97, x3, 3);
    let x99: BytePoly_1 = bigint_nondet_rem!(ctx, x97, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x98, x3, 4), x99, 4), x97, 4),
        24387,
        2,
    )?;
    let x100: BytePoly_2 = bigint_mul!(x93, x99, 2);
    let x101: BytePoly_3 = bigint_nondet_quot!(ctx, x100, x3, 3);
    let x102: BytePoly_1 = bigint_nondet_rem!(ctx, x100, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x101, x3, 4), x102, 4), x100, 4),
        24387,
        2,
    )?;
    let x103: BytePoly_1 = bigint_add!(bigint_sub!(x3, bigint_add!(x102, x96, 1), 1), x3, 1);
    let x104: BytePoly_1 = bigint_nondet_quot!(ctx, x103, x3, 1);
    let x105: BytePoly_1 = bigint_nondet_rem!(ctx, x103, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x104, x3, 2), x105, 2), x103, 2),
        8131,
        2,
    )?;
    let x106: BytePoly_2 = bigint_add!(bigint_mul!(x99, x83, 2), bigint_mul!(x46, x85, 2), 2);
    let x107: BytePoly_2 = bigint_add!(bigint_mul!(x105, x83, 2), bigint_mul!(x48, x85, 2), 2);
    let x108: BytePoly_3 = bigint_nondet_quot!(ctx, x106, x3, 3);
    let x109: BytePoly_1 = bigint_nondet_rem!(ctx, x106, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x108, x3, 4), x109, 4), x106, 4),
        24387,
        2,
    )?;
    let x110: BytePoly_3 = bigint_nondet_quot!(ctx, x107, x3, 3);
    let x111: BytePoly_1 = bigint_nondet_rem!(ctx, x107, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x110, x3, 4), x111, 4), x107, 4),
        24387,
        2,
    )?;
    let x112: BytePoly_2 = bigint_mul!(x76, x76, 2);
    let x113: BytePoly_3 = bigint_nondet_quot!(ctx, x112, x3, 3);
    let x114: BytePoly_1 = bigint_nondet_rem!(ctx, x112, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x113, x3, 4), x114, 4), x112, 4),
        24387,
        2,
    )?;
    let x115: BytePoly_2 = bigint_add!(bigint_mul!(x114, x0, 2), x2, 2);
    let x116: BytePoly_3 = bigint_nondet_quot!(ctx, x115, x3, 3);
    let x117: BytePoly_1 = bigint_nondet_rem!(ctx, x115, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x116, x3, 4), x117, 4), x115, 4),
        24387,
        2,
    )?;
    let x118: BytePoly_1 = bigint_add!(x82, x82, 1);
    let x119: BytePoly_1 = bigint_nondet_quot!(ctx, x118, x3, 1);
    let x120: BytePoly_1 = bigint_nondet_rem!(ctx, x118, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x119, x3, 2), x120, 2), x118, 2),
        8131,
        2,
    )?;
    let x121: BytePoly_1 = bigint_nondet_inv!(ctx, x120, x3, 1);
    let x122: BytePoly_2 = bigint_mul!(x120, x121, 2);
    let x123: BytePoly_3 = bigint_nondet_quot!(ctx, x122, x3, 3);
    let x124: BytePoly_1 = bigint_nondet_rem!(ctx, x122, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x123, x3, 4), x124, 4), x122, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x124, x5, 1), 34, 1)?;
    let x125: BytePoly_2 = bigint_mul!(x117, x121, 2);
    let x126: BytePoly_3 = bigint_nondet_quot!(ctx, x125, x3, 3);
    let x127: BytePoly_1 = bigint_nondet_rem!(ctx, x125, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x126, x3, 4), x127, 4), x125, 4),
        24387,
        2,
    )?;
    let x128: BytePoly_2 = bigint_mul!(x127, x76, 2);
    let x129: BytePoly_3 = bigint_nondet_quot!(ctx, x128, x3, 3);
    let x130: BytePoly_1 = bigint_nondet_rem!(ctx, x128, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x129, x3, 4), x130, 4), x128, 4),
        24387,
        2,
    )?;
    let x131: BytePoly_1 = bigint_add!(bigint_sub!(x82, x130, 1), x3, 1);
    let x132: BytePoly_1 = bigint_nondet_quot!(ctx, x131, x3, 1);
    let x133: BytePoly_1 = bigint_nondet_rem!(ctx, x131, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x132, x3, 2), x133, 2), x131, 2),
        8131,
        2,
    )?;
    let x134: BytePoly_2 = bigint_mul!(x127, x127, 2);
    let x135: BytePoly_3 = bigint_nondet_quot!(ctx, x134, x3, 3);
    let x136: BytePoly_1 = bigint_nondet_rem!(ctx, x134, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x135, x3, 4), x136, 4), x134, 4),
        24387,
        2,
    )?;
    let x137: BytePoly_1 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x136, x76, 1), x3, 1), x76, 1),
        x3,
        1
    );
    let x138: BytePoly_1 = bigint_nondet_quot!(ctx, x137, x3, 1);
    let x139: BytePoly_1 = bigint_nondet_rem!(ctx, x137, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x138, x3, 2), x139, 2), x137, 2),
        8131,
        2,
    )?;
    let x140: BytePoly_2 = bigint_mul!(x127, x139, 2);
    let x141: BytePoly_3 = bigint_nondet_quot!(ctx, x140, x3, 3);
    let x142: BytePoly_1 = bigint_nondet_rem!(ctx, x140, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x141, x3, 4), x142, 4), x140, 4),
        24387,
        2,
    )?;
    let x143: BytePoly_1 = bigint_add!(bigint_sub!(x3, bigint_add!(x142, x133, 1), 1), x3, 1);
    let x144: BytePoly_1 = bigint_nondet_quot!(ctx, x143, x3, 1);
    let x145: BytePoly_1 = bigint_nondet_rem!(ctx, x143, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x144, x3, 2), x145, 2), x143, 2),
        8131,
        2,
    )?;
    let x146: BytePoly_1 = bigint_nondet_rem!(ctx, x84, x4, 1);
    let x147: BytePoly_1 = bigint_nondet_quot!(ctx, x84, x4, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x147, x4, 2), x146, 2), x84, 2),
        8131,
        2,
    )?;
    let x148: BytePoly_1 = bigint_sub!(x5, x146, 1);
    eqz(ctx, &bigint_mul!(x146, x148, 2), 8131, 2)?;
    let x149: BytePoly_1 = bigint_add!(bigint_sub!(x139, x109, 1), x3, 1);
    let x150: BytePoly_1 = bigint_nondet_inv!(ctx, x149, x3, 1);
    let x151: BytePoly_2 = bigint_mul!(x149, x150, 2);
    let x152: BytePoly_3 = bigint_nondet_quot!(ctx, x151, x3, 3);
    let x153: BytePoly_1 = bigint_nondet_rem!(ctx, x151, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x152, x3, 4), x153, 4), x151, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x153, x1, 1), 34, 1)?;
    let x154: BytePoly_2 = bigint_mul!(bigint_add!(bigint_sub!(x145, x111, 1), x3, 1), x150, 2);
    let x155: BytePoly_3 = bigint_nondet_quot!(ctx, x154, x3, 3);
    let x156: BytePoly_1 = bigint_nondet_rem!(ctx, x154, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x155, x3, 4), x156, 4), x154, 4),
        24387,
        2,
    )?;
    let x157: BytePoly_2 = bigint_add!(bigint_sub!(x111, bigint_mul!(x156, x109, 2), 2), x3, 2);
    let x158: BytePoly_2 = bigint_nondet_quot!(ctx, x157, x3, 2);
    let x159: BytePoly_1 = bigint_nondet_rem!(ctx, x157, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x158, x3, 3), x159, 3), x157, 3),
        16259,
        2,
    )?;
    let x160: BytePoly_2 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x156, x156, 2), x109, 2), x3, 2),
            x139,
            2
        ),
        x3,
        2
    );
    let x161: BytePoly_3 = bigint_nondet_quot!(ctx, x160, x3, 3);
    let x162: BytePoly_1 = bigint_nondet_rem!(ctx, x160, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x161, x3, 4), x162, 4), x160, 4),
        24387,
        2,
    )?;
    let x163: BytePoly_2 = bigint_mul!(x156, x162, 2);
    let x164: BytePoly_3 = bigint_nondet_quot!(ctx, x163, x3, 3);
    let x165: BytePoly_1 = bigint_nondet_rem!(ctx, x163, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x164, x3, 4), x165, 4), x163, 4),
        24387,
        2,
    )?;
    let x166: BytePoly_1 = bigint_add!(bigint_sub!(x3, bigint_add!(x165, x159, 1), 1), x3, 1);
    let x167: BytePoly_1 = bigint_nondet_quot!(ctx, x166, x3, 1);
    let x168: BytePoly_1 = bigint_nondet_rem!(ctx, x166, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x167, x3, 2), x168, 2), x166, 2),
        8131,
        2,
    )?;
    let x169: BytePoly_2 = bigint_add!(bigint_mul!(x162, x146, 2), bigint_mul!(x109, x148, 2), 2);
    let x170: BytePoly_2 = bigint_add!(bigint_mul!(x168, x146, 2), bigint_mul!(x111, x148, 2), 2);
    let x171: BytePoly_3 = bigint_nondet_quot!(ctx, x169, x3, 3);
    let x172: BytePoly_1 = bigint_nondet_rem!(ctx, x169, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x171, x3, 4), x172, 4), x169, 4),
        24387,
        2,
    )?;
    let x173: BytePoly_3 = bigint_nondet_quot!(ctx, x170, x3, 3);
    let x174: BytePoly_1 = bigint_nondet_rem!(ctx, x170, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x173, x3, 4), x174, 4), x170, 4),
        24387,
        2,
    )?;
    let x175: BytePoly_2 = bigint_mul!(x139, x139, 2);
    let x176: BytePoly_3 = bigint_nondet_quot!(ctx, x175, x3, 3);
    let x177: BytePoly_1 = bigint_nondet_rem!(ctx, x175, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x176, x3, 4), x177, 4), x175, 4),
        24387,
        2,
    )?;
    let x178: BytePoly_2 = bigint_add!(bigint_mul!(x177, x0, 2), x2, 2);
    let x179: BytePoly_3 = bigint_nondet_quot!(ctx, x178, x3, 3);
    let x180: BytePoly_1 = bigint_nondet_rem!(ctx, x178, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x179, x3, 4), x180, 4), x178, 4),
        24387,
        2,
    )?;
    let x181: BytePoly_1 = bigint_add!(x145, x145, 1);
    let x182: BytePoly_1 = bigint_nondet_quot!(ctx, x181, x3, 1);
    let x183: BytePoly_1 = bigint_nondet_rem!(ctx, x181, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x182, x3, 2), x183, 2), x181, 2),
        8131,
        2,
    )?;
    let x184: BytePoly_1 = bigint_nondet_inv!(ctx, x183, x3, 1);
    let x185: BytePoly_2 = bigint_mul!(x183, x184, 2);
    let x186: BytePoly_3 = bigint_nondet_quot!(ctx, x185, x3, 3);
    let x187: BytePoly_1 = bigint_nondet_rem!(ctx, x185, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x186, x3, 4), x187, 4), x185, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x187, x5, 1), 34, 1)?;
    let x188: BytePoly_2 = bigint_mul!(x180, x184, 2);
    let x189: BytePoly_3 = bigint_nondet_quot!(ctx, x188, x3, 3);
    let x190: BytePoly_1 = bigint_nondet_rem!(ctx, x188, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x189, x3, 4), x190, 4), x188, 4),
        24387,
        2,
    )?;
    let x191: BytePoly_2 = bigint_mul!(x190, x139, 2);
    let x192: BytePoly_3 = bigint_nondet_quot!(ctx, x191, x3, 3);
    let x193: BytePoly_1 = bigint_nondet_rem!(ctx, x191, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x192, x3, 4), x193, 4), x191, 4),
        24387,
        2,
    )?;
    let x194: BytePoly_1 = bigint_add!(bigint_sub!(x145, x193, 1), x3, 1);
    let x195: BytePoly_1 = bigint_nondet_quot!(ctx, x194, x3, 1);
    let x196: BytePoly_1 = bigint_nondet_rem!(ctx, x194, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x195, x3, 2), x196, 2), x194, 2),
        8131,
        2,
    )?;
    let x197: BytePoly_2 = bigint_mul!(x190, x190, 2);
    let x198: BytePoly_3 = bigint_nondet_quot!(ctx, x197, x3, 3);
    let x199: BytePoly_1 = bigint_nondet_rem!(ctx, x197, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x198, x3, 4), x199, 4), x197, 4),
        24387,
        2,
    )?;
    let x200: BytePoly_1 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x199, x139, 1), x3, 1), x139, 1),
        x3,
        1
    );
    let x201: BytePoly_1 = bigint_nondet_quot!(ctx, x200, x3, 1);
    let x202: BytePoly_1 = bigint_nondet_rem!(ctx, x200, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x201, x3, 2), x202, 2), x200, 2),
        8131,
        2,
    )?;
    let x203: BytePoly_2 = bigint_mul!(x190, x202, 2);
    let x204: BytePoly_3 = bigint_nondet_quot!(ctx, x203, x3, 3);
    let x205: BytePoly_1 = bigint_nondet_rem!(ctx, x203, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x204, x3, 4), x205, 4), x203, 4),
        24387,
        2,
    )?;
    let x206: BytePoly_1 = bigint_add!(bigint_sub!(x3, bigint_add!(x205, x196, 1), 1), x3, 1);
    let x207: BytePoly_1 = bigint_nondet_quot!(ctx, x206, x3, 1);
    let x208: BytePoly_1 = bigint_nondet_rem!(ctx, x206, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x207, x3, 2), x208, 2), x206, 2),
        8131,
        2,
    )?;
    let x209: BytePoly_1 = bigint_nondet_rem!(ctx, x147, x4, 1);
    let x210: BytePoly_1 = bigint_nondet_quot!(ctx, x147, x4, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x210, x4, 2), x209, 2), x147, 2),
        8131,
        2,
    )?;
    let x211: BytePoly_1 = bigint_sub!(x5, x209, 1);
    eqz(ctx, &bigint_mul!(x209, x211, 2), 8131, 2)?;
    let x212: BytePoly_1 = bigint_add!(bigint_sub!(x202, x172, 1), x3, 1);
    let x213: BytePoly_1 = bigint_nondet_inv!(ctx, x212, x3, 1);
    let x214: BytePoly_2 = bigint_mul!(x212, x213, 2);
    let x215: BytePoly_3 = bigint_nondet_quot!(ctx, x214, x3, 3);
    let x216: BytePoly_1 = bigint_nondet_rem!(ctx, x214, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x215, x3, 4), x216, 4), x214, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x216, x1, 1), 34, 1)?;
    let x217: BytePoly_2 = bigint_mul!(bigint_add!(bigint_sub!(x208, x174, 1), x3, 1), x213, 2);
    let x218: BytePoly_3 = bigint_nondet_quot!(ctx, x217, x3, 3);
    let x219: BytePoly_1 = bigint_nondet_rem!(ctx, x217, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x218, x3, 4), x219, 4), x217, 4),
        24387,
        2,
    )?;
    let x220: BytePoly_2 = bigint_add!(bigint_sub!(x174, bigint_mul!(x219, x172, 2), 2), x3, 2);
    let x221: BytePoly_2 = bigint_nondet_quot!(ctx, x220, x3, 2);
    let x222: BytePoly_1 = bigint_nondet_rem!(ctx, x220, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x221, x3, 3), x222, 3), x220, 3),
        16259,
        2,
    )?;
    let x223: BytePoly_2 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x219, x219, 2), x172, 2), x3, 2),
            x202,
            2
        ),
        x3,
        2
    );
    let x224: BytePoly_3 = bigint_nondet_quot!(ctx, x223, x3, 3);
    let x225: BytePoly_1 = bigint_nondet_rem!(ctx, x223, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x224, x3, 4), x225, 4), x223, 4),
        24387,
        2,
    )?;
    let x226: BytePoly_2 = bigint_mul!(x219, x225, 2);
    let x227: BytePoly_3 = bigint_nondet_quot!(ctx, x226, x3, 3);
    let x228: BytePoly_1 = bigint_nondet_rem!(ctx, x226, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x227, x3, 4), x228, 4), x226, 4),
        24387,
        2,
    )?;
    let x229: BytePoly_1 = bigint_add!(bigint_sub!(x3, bigint_add!(x228, x222, 1), 1), x3, 1);
    let x230: BytePoly_1 = bigint_nondet_quot!(ctx, x229, x3, 1);
    let x231: BytePoly_1 = bigint_nondet_rem!(ctx, x229, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x230, x3, 2), x231, 2), x229, 2),
        8131,
        2,
    )?;
    let x232: BytePoly_2 = bigint_add!(bigint_mul!(x225, x209, 2), bigint_mul!(x172, x211, 2), 2);
    let x233: BytePoly_2 = bigint_add!(bigint_mul!(x231, x209, 2), bigint_mul!(x174, x211, 2), 2);
    let x234: BytePoly_3 = bigint_nondet_quot!(ctx, x232, x3, 3);
    let x235: BytePoly_1 = bigint_nondet_rem!(ctx, x232, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x234, x3, 4), x235, 4), x232, 4),
        24387,
        2,
    )?;
    let x236: BytePoly_3 = bigint_nondet_quot!(ctx, x233, x3, 3);
    let x237: BytePoly_1 = bigint_nondet_rem!(ctx, x233, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x236, x3, 4), x237, 4), x233, 4),
        24387,
        2,
    )?;
    let x238: BytePoly_2 = bigint_mul!(x202, x202, 2);
    let x239: BytePoly_3 = bigint_nondet_quot!(ctx, x238, x3, 3);
    let x240: BytePoly_1 = bigint_nondet_rem!(ctx, x238, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x239, x3, 4), x240, 4), x238, 4),
        24387,
        2,
    )?;
    let x241: BytePoly_2 = bigint_add!(bigint_mul!(x240, x0, 2), x2, 2);
    let x242: BytePoly_3 = bigint_nondet_quot!(ctx, x241, x3, 3);
    let x243: BytePoly_1 = bigint_nondet_rem!(ctx, x241, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x242, x3, 4), x243, 4), x241, 4),
        24387,
        2,
    )?;
    let x244: BytePoly_1 = bigint_add!(x208, x208, 1);
    let x245: BytePoly_1 = bigint_nondet_quot!(ctx, x244, x3, 1);
    let x246: BytePoly_1 = bigint_nondet_rem!(ctx, x244, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x245, x3, 2), x246, 2), x244, 2),
        8131,
        2,
    )?;
    let x247: BytePoly_1 = bigint_nondet_inv!(ctx, x246, x3, 1);
    let x248: BytePoly_2 = bigint_mul!(x246, x247, 2);
    let x249: BytePoly_3 = bigint_nondet_quot!(ctx, x248, x3, 3);
    let x250: BytePoly_1 = bigint_nondet_rem!(ctx, x248, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x249, x3, 4), x250, 4), x248, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x250, x5, 1), 34, 1)?;
    let x251: BytePoly_2 = bigint_mul!(x243, x247, 2);
    let x252: BytePoly_3 = bigint_nondet_quot!(ctx, x251, x3, 3);
    let x253: BytePoly_1 = bigint_nondet_rem!(ctx, x251, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x252, x3, 4), x253, 4), x251, 4),
        24387,
        2,
    )?;
    let x254: BytePoly_2 = bigint_mul!(x253, x202, 2);
    let x255: BytePoly_3 = bigint_nondet_quot!(ctx, x254, x3, 3);
    let x256: BytePoly_1 = bigint_nondet_rem!(ctx, x254, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x255, x3, 4), x256, 4), x254, 4),
        24387,
        2,
    )?;
    let x257: BytePoly_1 = bigint_add!(bigint_sub!(x208, x256, 1), x3, 1);
    let x258: BytePoly_1 = bigint_nondet_quot!(ctx, x257, x3, 1);
    let x259: BytePoly_1 = bigint_nondet_rem!(ctx, x257, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x258, x3, 2), x259, 2), x257, 2),
        8131,
        2,
    )?;
    let x260: BytePoly_2 = bigint_mul!(x253, x253, 2);
    let x261: BytePoly_3 = bigint_nondet_quot!(ctx, x260, x3, 3);
    let x262: BytePoly_1 = bigint_nondet_rem!(ctx, x260, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x261, x3, 4), x262, 4), x260, 4),
        24387,
        2,
    )?;
    let x263: BytePoly_1 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x262, x202, 1), x3, 1), x202, 1),
        x3,
        1
    );
    let x264: BytePoly_1 = bigint_nondet_quot!(ctx, x263, x3, 1);
    let x265: BytePoly_1 = bigint_nondet_rem!(ctx, x263, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x264, x3, 2), x265, 2), x263, 2),
        8131,
        2,
    )?;
    let x266: BytePoly_2 = bigint_mul!(x253, x265, 2);
    let x267: BytePoly_3 = bigint_nondet_quot!(ctx, x266, x3, 3);
    let x268: BytePoly_1 = bigint_nondet_rem!(ctx, x266, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x267, x3, 4), x268, 4), x266, 4),
        24387,
        2,
    )?;
    let x269: BytePoly_1 = bigint_add!(bigint_sub!(x3, bigint_add!(x268, x259, 1), 1), x3, 1);
    let x270: BytePoly_1 = bigint_nondet_quot!(ctx, x269, x3, 1);
    let x271: BytePoly_1 = bigint_nondet_rem!(ctx, x269, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x270, x3, 2), x271, 2), x269, 2),
        8131,
        2,
    )?;
    let x272: BytePoly_1 = bigint_nondet_rem!(ctx, x210, x4, 1);
    let x273: BytePoly_1 = bigint_nondet_quot!(ctx, x210, x4, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x273, x4, 2), x272, 2), x210, 2),
        8131,
        2,
    )?;
    let x274: BytePoly_1 = bigint_sub!(x5, x272, 1);
    eqz(ctx, &bigint_mul!(x272, x274, 2), 8131, 2)?;
    let x275: BytePoly_1 = bigint_add!(bigint_sub!(x265, x235, 1), x3, 1);
    let x276: BytePoly_1 = bigint_nondet_inv!(ctx, x275, x3, 1);
    let x277: BytePoly_2 = bigint_mul!(x275, x276, 2);
    let x278: BytePoly_3 = bigint_nondet_quot!(ctx, x277, x3, 3);
    let x279: BytePoly_1 = bigint_nondet_rem!(ctx, x277, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x278, x3, 4), x279, 4), x277, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x279, x1, 1), 34, 1)?;
    let x280: BytePoly_2 = bigint_mul!(bigint_add!(bigint_sub!(x271, x237, 1), x3, 1), x276, 2);
    let x281: BytePoly_3 = bigint_nondet_quot!(ctx, x280, x3, 3);
    let x282: BytePoly_1 = bigint_nondet_rem!(ctx, x280, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x281, x3, 4), x282, 4), x280, 4),
        24387,
        2,
    )?;
    let x283: BytePoly_2 = bigint_add!(bigint_sub!(x237, bigint_mul!(x282, x235, 2), 2), x3, 2);
    let x284: BytePoly_2 = bigint_nondet_quot!(ctx, x283, x3, 2);
    let x285: BytePoly_1 = bigint_nondet_rem!(ctx, x283, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x284, x3, 3), x285, 3), x283, 3),
        16259,
        2,
    )?;
    let x286: BytePoly_2 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x282, x282, 2), x235, 2), x3, 2),
            x265,
            2
        ),
        x3,
        2
    );
    let x287: BytePoly_3 = bigint_nondet_quot!(ctx, x286, x3, 3);
    let x288: BytePoly_1 = bigint_nondet_rem!(ctx, x286, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x287, x3, 4), x288, 4), x286, 4),
        24387,
        2,
    )?;
    let x289: BytePoly_2 = bigint_mul!(x282, x288, 2);
    let x290: BytePoly_3 = bigint_nondet_quot!(ctx, x289, x3, 3);
    let x291: BytePoly_1 = bigint_nondet_rem!(ctx, x289, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x290, x3, 4), x291, 4), x289, 4),
        24387,
        2,
    )?;
    let x292: BytePoly_1 = bigint_add!(bigint_sub!(x3, bigint_add!(x291, x285, 1), 1), x3, 1);
    let x293: BytePoly_1 = bigint_nondet_quot!(ctx, x292, x3, 1);
    let x294: BytePoly_1 = bigint_nondet_rem!(ctx, x292, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x293, x3, 2), x294, 2), x292, 2),
        8131,
        2,
    )?;
    let x295: BytePoly_2 = bigint_add!(bigint_mul!(x288, x272, 2), bigint_mul!(x235, x274, 2), 2);
    let x296: BytePoly_2 = bigint_add!(bigint_mul!(x294, x272, 2), bigint_mul!(x237, x274, 2), 2);
    let x297: BytePoly_3 = bigint_nondet_quot!(ctx, x295, x3, 3);
    let x298: BytePoly_1 = bigint_nondet_rem!(ctx, x295, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x297, x3, 4), x298, 4), x295, 4),
        24387,
        2,
    )?;
    let x299: BytePoly_3 = bigint_nondet_quot!(ctx, x296, x3, 3);
    let x300: BytePoly_1 = bigint_nondet_rem!(ctx, x296, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x299, x3, 4), x300, 4), x296, 4),
        24387,
        2,
    )?;
    let x301: BytePoly_2 = bigint_mul!(x265, x265, 2);
    let x302: BytePoly_3 = bigint_nondet_quot!(ctx, x301, x3, 3);
    let x303: BytePoly_1 = bigint_nondet_rem!(ctx, x301, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x302, x3, 4), x303, 4), x301, 4),
        24387,
        2,
    )?;
    let x304: BytePoly_2 = bigint_add!(bigint_mul!(x303, x0, 2), x2, 2);
    let x305: BytePoly_3 = bigint_nondet_quot!(ctx, x304, x3, 3);
    let x306: BytePoly_1 = bigint_nondet_rem!(ctx, x304, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x305, x3, 4), x306, 4), x304, 4),
        24387,
        2,
    )?;
    let x307: BytePoly_1 = bigint_add!(x271, x271, 1);
    let x308: BytePoly_1 = bigint_nondet_quot!(ctx, x307, x3, 1);
    let x309: BytePoly_1 = bigint_nondet_rem!(ctx, x307, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x308, x3, 2), x309, 2), x307, 2),
        8131,
        2,
    )?;
    let x310: BytePoly_1 = bigint_nondet_inv!(ctx, x309, x3, 1);
    let x311: BytePoly_2 = bigint_mul!(x309, x310, 2);
    let x312: BytePoly_3 = bigint_nondet_quot!(ctx, x311, x3, 3);
    let x313: BytePoly_1 = bigint_nondet_rem!(ctx, x311, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x312, x3, 4), x313, 4), x311, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x313, x5, 1), 34, 1)?;
    let x314: BytePoly_2 = bigint_mul!(x306, x310, 2);
    let x315: BytePoly_3 = bigint_nondet_quot!(ctx, x314, x3, 3);
    let x316: BytePoly_1 = bigint_nondet_rem!(ctx, x314, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x315, x3, 4), x316, 4), x314, 4),
        24387,
        2,
    )?;
    let x317: BytePoly_2 = bigint_mul!(x316, x265, 2);
    let x318: BytePoly_3 = bigint_nondet_quot!(ctx, x317, x3, 3);
    let x319: BytePoly_1 = bigint_nondet_rem!(ctx, x317, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x318, x3, 4), x319, 4), x317, 4),
        24387,
        2,
    )?;
    let x320: BytePoly_1 = bigint_add!(bigint_sub!(x271, x319, 1), x3, 1);
    let x321: BytePoly_1 = bigint_nondet_quot!(ctx, x320, x3, 1);
    let x322: BytePoly_1 = bigint_nondet_rem!(ctx, x320, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x321, x3, 2), x322, 2), x320, 2),
        8131,
        2,
    )?;
    let x323: BytePoly_2 = bigint_mul!(x316, x316, 2);
    let x324: BytePoly_3 = bigint_nondet_quot!(ctx, x323, x3, 3);
    let x325: BytePoly_1 = bigint_nondet_rem!(ctx, x323, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x324, x3, 4), x325, 4), x323, 4),
        24387,
        2,
    )?;
    let x326: BytePoly_1 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x325, x265, 1), x3, 1), x265, 1),
        x3,
        1
    );
    let x327: BytePoly_1 = bigint_nondet_quot!(ctx, x326, x3, 1);
    let x328: BytePoly_1 = bigint_nondet_rem!(ctx, x326, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x327, x3, 2), x328, 2), x326, 2),
        8131,
        2,
    )?;
    let x329: BytePoly_2 = bigint_mul!(x316, x328, 2);
    let x330: BytePoly_3 = bigint_nondet_quot!(ctx, x329, x3, 3);
    let x331: BytePoly_1 = bigint_nondet_rem!(ctx, x329, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x330, x3, 4), x331, 4), x329, 4),
        24387,
        2,
    )?;
    let x332: BytePoly_1 = bigint_add!(bigint_sub!(x3, bigint_add!(x331, x322, 1), 1), x3, 1);
    let x333: BytePoly_1 = bigint_nondet_quot!(ctx, x332, x3, 1);
    let x334: BytePoly_1 = bigint_nondet_rem!(ctx, x332, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x333, x3, 2), x334, 2), x332, 2),
        8131,
        2,
    )?;
    let x335: BytePoly_1 = bigint_nondet_rem!(ctx, x273, x4, 1);
    let x336: BytePoly_1 = bigint_nondet_quot!(ctx, x273, x4, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x336, x4, 2), x335, 2), x273, 2),
        8131,
        2,
    )?;
    let x337: BytePoly_1 = bigint_sub!(x5, x335, 1);
    eqz(ctx, &bigint_mul!(x335, x337, 2), 8131, 2)?;
    let x338: BytePoly_1 = bigint_add!(bigint_sub!(x328, x298, 1), x3, 1);
    let x339: BytePoly_1 = bigint_nondet_inv!(ctx, x338, x3, 1);
    let x340: BytePoly_2 = bigint_mul!(x338, x339, 2);
    let x341: BytePoly_3 = bigint_nondet_quot!(ctx, x340, x3, 3);
    let x342: BytePoly_1 = bigint_nondet_rem!(ctx, x340, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x341, x3, 4), x342, 4), x340, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x342, x1, 1), 34, 1)?;
    let x343: BytePoly_2 = bigint_mul!(bigint_add!(bigint_sub!(x334, x300, 1), x3, 1), x339, 2);
    let x344: BytePoly_3 = bigint_nondet_quot!(ctx, x343, x3, 3);
    let x345: BytePoly_1 = bigint_nondet_rem!(ctx, x343, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x344, x3, 4), x345, 4), x343, 4),
        24387,
        2,
    )?;
    let x346: BytePoly_2 = bigint_add!(bigint_sub!(x300, bigint_mul!(x345, x298, 2), 2), x3, 2);
    let x347: BytePoly_2 = bigint_nondet_quot!(ctx, x346, x3, 2);
    let x348: BytePoly_1 = bigint_nondet_rem!(ctx, x346, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x347, x3, 3), x348, 3), x346, 3),
        16259,
        2,
    )?;
    let x349: BytePoly_2 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x345, x345, 2), x298, 2), x3, 2),
            x328,
            2
        ),
        x3,
        2
    );
    let x350: BytePoly_3 = bigint_nondet_quot!(ctx, x349, x3, 3);
    let x351: BytePoly_1 = bigint_nondet_rem!(ctx, x349, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x350, x3, 4), x351, 4), x349, 4),
        24387,
        2,
    )?;
    let x352: BytePoly_2 = bigint_mul!(x345, x351, 2);
    let x353: BytePoly_3 = bigint_nondet_quot!(ctx, x352, x3, 3);
    let x354: BytePoly_1 = bigint_nondet_rem!(ctx, x352, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x353, x3, 4), x354, 4), x352, 4),
        24387,
        2,
    )?;
    let x355: BytePoly_1 = bigint_add!(bigint_sub!(x3, bigint_add!(x354, x348, 1), 1), x3, 1);
    let x356: BytePoly_1 = bigint_nondet_quot!(ctx, x355, x3, 1);
    let x357: BytePoly_1 = bigint_nondet_rem!(ctx, x355, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x356, x3, 2), x357, 2), x355, 2),
        8131,
        2,
    )?;
    let x358: BytePoly_2 = bigint_add!(bigint_mul!(x351, x335, 2), bigint_mul!(x298, x337, 2), 2);
    let x359: BytePoly_2 = bigint_add!(bigint_mul!(x357, x335, 2), bigint_mul!(x300, x337, 2), 2);
    let x360: BytePoly_3 = bigint_nondet_quot!(ctx, x358, x3, 3);
    let x361: BytePoly_1 = bigint_nondet_rem!(ctx, x358, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x360, x3, 4), x361, 4), x358, 4),
        24387,
        2,
    )?;
    let x362: BytePoly_3 = bigint_nondet_quot!(ctx, x359, x3, 3);
    let x363: BytePoly_1 = bigint_nondet_rem!(ctx, x359, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x362, x3, 4), x363, 4), x359, 4),
        24387,
        2,
    )?;
    let x364: BytePoly_2 = bigint_mul!(x328, x328, 2);
    let x365: BytePoly_3 = bigint_nondet_quot!(ctx, x364, x3, 3);
    let x366: BytePoly_1 = bigint_nondet_rem!(ctx, x364, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x365, x3, 4), x366, 4), x364, 4),
        24387,
        2,
    )?;
    let x367: BytePoly_2 = bigint_add!(bigint_mul!(x366, x0, 2), x2, 2);
    let x368: BytePoly_3 = bigint_nondet_quot!(ctx, x367, x3, 3);
    let x369: BytePoly_1 = bigint_nondet_rem!(ctx, x367, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x368, x3, 4), x369, 4), x367, 4),
        24387,
        2,
    )?;
    let x370: BytePoly_1 = bigint_add!(x334, x334, 1);
    let x371: BytePoly_1 = bigint_nondet_quot!(ctx, x370, x3, 1);
    let x372: BytePoly_1 = bigint_nondet_rem!(ctx, x370, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x371, x3, 2), x372, 2), x370, 2),
        8131,
        2,
    )?;
    let x373: BytePoly_1 = bigint_nondet_inv!(ctx, x372, x3, 1);
    let x374: BytePoly_2 = bigint_mul!(x372, x373, 2);
    let x375: BytePoly_3 = bigint_nondet_quot!(ctx, x374, x3, 3);
    let x376: BytePoly_1 = bigint_nondet_rem!(ctx, x374, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x375, x3, 4), x376, 4), x374, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x376, x5, 1), 34, 1)?;
    let x377: BytePoly_2 = bigint_mul!(x369, x373, 2);
    let x378: BytePoly_3 = bigint_nondet_quot!(ctx, x377, x3, 3);
    let x379: BytePoly_1 = bigint_nondet_rem!(ctx, x377, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x378, x3, 4), x379, 4), x377, 4),
        24387,
        2,
    )?;
    let x380: BytePoly_2 = bigint_mul!(x379, x328, 2);
    let x381: BytePoly_3 = bigint_nondet_quot!(ctx, x380, x3, 3);
    let x382: BytePoly_1 = bigint_nondet_rem!(ctx, x380, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x381, x3, 4), x382, 4), x380, 4),
        24387,
        2,
    )?;
    let x383: BytePoly_1 = bigint_add!(bigint_sub!(x334, x382, 1), x3, 1);
    let x384: BytePoly_1 = bigint_nondet_quot!(ctx, x383, x3, 1);
    let x385: BytePoly_1 = bigint_nondet_rem!(ctx, x383, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x384, x3, 2), x385, 2), x383, 2),
        8131,
        2,
    )?;
    let x386: BytePoly_2 = bigint_mul!(x379, x379, 2);
    let x387: BytePoly_3 = bigint_nondet_quot!(ctx, x386, x3, 3);
    let x388: BytePoly_1 = bigint_nondet_rem!(ctx, x386, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x387, x3, 4), x388, 4), x386, 4),
        24387,
        2,
    )?;
    let x389: BytePoly_1 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x388, x328, 1), x3, 1), x328, 1),
        x3,
        1
    );
    let x390: BytePoly_1 = bigint_nondet_quot!(ctx, x389, x3, 1);
    let x391: BytePoly_1 = bigint_nondet_rem!(ctx, x389, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x390, x3, 2), x391, 2), x389, 2),
        8131,
        2,
    )?;
    let x392: BytePoly_2 = bigint_mul!(x379, x391, 2);
    let x393: BytePoly_3 = bigint_nondet_quot!(ctx, x392, x3, 3);
    let x394: BytePoly_1 = bigint_nondet_rem!(ctx, x392, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x393, x3, 4), x394, 4), x392, 4),
        24387,
        2,
    )?;
    let x395: BytePoly_1 = bigint_add!(bigint_sub!(x3, bigint_add!(x394, x385, 1), 1), x3, 1);
    let x396: BytePoly_1 = bigint_nondet_quot!(ctx, x395, x3, 1);
    let x397: BytePoly_1 = bigint_nondet_rem!(ctx, x395, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x396, x3, 2), x397, 2), x395, 2),
        8131,
        2,
    )?;
    let x398: BytePoly_1 = bigint_nondet_rem!(ctx, x336, x4, 1);
    let x399: BytePoly_1 = bigint_nondet_quot!(ctx, x336, x4, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x399, x4, 2), x398, 2), x336, 2),
        8131,
        2,
    )?;
    let x400: BytePoly_1 = bigint_sub!(x5, x398, 1);
    eqz(ctx, &bigint_mul!(x398, x400, 2), 8131, 2)?;
    let x401: BytePoly_1 = bigint_add!(bigint_sub!(x391, x361, 1), x3, 1);
    let x402: BytePoly_1 = bigint_nondet_inv!(ctx, x401, x3, 1);
    let x403: BytePoly_2 = bigint_mul!(x401, x402, 2);
    let x404: BytePoly_3 = bigint_nondet_quot!(ctx, x403, x3, 3);
    let x405: BytePoly_1 = bigint_nondet_rem!(ctx, x403, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x404, x3, 4), x405, 4), x403, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x405, x1, 1), 34, 1)?;
    let x406: BytePoly_2 = bigint_mul!(bigint_add!(bigint_sub!(x397, x363, 1), x3, 1), x402, 2);
    let x407: BytePoly_3 = bigint_nondet_quot!(ctx, x406, x3, 3);
    let x408: BytePoly_1 = bigint_nondet_rem!(ctx, x406, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x407, x3, 4), x408, 4), x406, 4),
        24387,
        2,
    )?;
    let x409: BytePoly_2 = bigint_add!(bigint_sub!(x363, bigint_mul!(x408, x361, 2), 2), x3, 2);
    let x410: BytePoly_2 = bigint_nondet_quot!(ctx, x409, x3, 2);
    let x411: BytePoly_1 = bigint_nondet_rem!(ctx, x409, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x410, x3, 3), x411, 3), x409, 3),
        16259,
        2,
    )?;
    let x412: BytePoly_2 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x408, x408, 2), x361, 2), x3, 2),
            x391,
            2
        ),
        x3,
        2
    );
    let x413: BytePoly_3 = bigint_nondet_quot!(ctx, x412, x3, 3);
    let x414: BytePoly_1 = bigint_nondet_rem!(ctx, x412, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x413, x3, 4), x414, 4), x412, 4),
        24387,
        2,
    )?;
    let x415: BytePoly_2 = bigint_mul!(x408, x414, 2);
    let x416: BytePoly_3 = bigint_nondet_quot!(ctx, x415, x3, 3);
    let x417: BytePoly_1 = bigint_nondet_rem!(ctx, x415, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x416, x3, 4), x417, 4), x415, 4),
        24387,
        2,
    )?;
    let x418: BytePoly_1 = bigint_add!(bigint_sub!(x3, bigint_add!(x417, x411, 1), 1), x3, 1);
    let x419: BytePoly_1 = bigint_nondet_quot!(ctx, x418, x3, 1);
    let x420: BytePoly_1 = bigint_nondet_rem!(ctx, x418, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x419, x3, 2), x420, 2), x418, 2),
        8131,
        2,
    )?;
    let x421: BytePoly_2 = bigint_add!(bigint_mul!(x414, x398, 2), bigint_mul!(x361, x400, 2), 2);
    let x422: BytePoly_2 = bigint_add!(bigint_mul!(x420, x398, 2), bigint_mul!(x363, x400, 2), 2);
    let x423: BytePoly_3 = bigint_nondet_quot!(ctx, x421, x3, 3);
    let x424: BytePoly_1 = bigint_nondet_rem!(ctx, x421, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x423, x3, 4), x424, 4), x421, 4),
        24387,
        2,
    )?;
    let x425: BytePoly_3 = bigint_nondet_quot!(ctx, x422, x3, 3);
    let x426: BytePoly_1 = bigint_nondet_rem!(ctx, x422, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x425, x3, 4), x426, 4), x422, 4),
        24387,
        2,
    )?;
    let x427: BytePoly_2 = bigint_mul!(x391, x391, 2);
    let x428: BytePoly_3 = bigint_nondet_quot!(ctx, x427, x3, 3);
    let x429: BytePoly_1 = bigint_nondet_rem!(ctx, x427, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x428, x3, 4), x429, 4), x427, 4),
        24387,
        2,
    )?;
    let x430: BytePoly_2 = bigint_add!(bigint_mul!(x429, x0, 2), x2, 2);
    let x431: BytePoly_3 = bigint_nondet_quot!(ctx, x430, x3, 3);
    let x432: BytePoly_1 = bigint_nondet_rem!(ctx, x430, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x431, x3, 4), x432, 4), x430, 4),
        24387,
        2,
    )?;
    let x433: BytePoly_1 = bigint_add!(x397, x397, 1);
    let x434: BytePoly_1 = bigint_nondet_quot!(ctx, x433, x3, 1);
    let x435: BytePoly_1 = bigint_nondet_rem!(ctx, x433, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x434, x3, 2), x435, 2), x433, 2),
        8131,
        2,
    )?;
    let x436: BytePoly_1 = bigint_nondet_inv!(ctx, x435, x3, 1);
    let x437: BytePoly_2 = bigint_mul!(x435, x436, 2);
    let x438: BytePoly_3 = bigint_nondet_quot!(ctx, x437, x3, 3);
    let x439: BytePoly_1 = bigint_nondet_rem!(ctx, x437, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x438, x3, 4), x439, 4), x437, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x439, x5, 1), 34, 1)?;
    let x440: BytePoly_2 = bigint_mul!(x432, x436, 2);
    let x441: BytePoly_3 = bigint_nondet_quot!(ctx, x440, x3, 3);
    let x442: BytePoly_1 = bigint_nondet_rem!(ctx, x440, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x441, x3, 4), x442, 4), x440, 4),
        24387,
        2,
    )?;
    let x443: BytePoly_2 = bigint_mul!(x442, x391, 2);
    let x444: BytePoly_3 = bigint_nondet_quot!(ctx, x443, x3, 3);
    let x445: BytePoly_1 = bigint_nondet_rem!(ctx, x443, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x444, x3, 4), x445, 4), x443, 4),
        24387,
        2,
    )?;
    let x446: BytePoly_1 = bigint_add!(bigint_sub!(x397, x445, 1), x3, 1);
    let x447: BytePoly_1 = bigint_nondet_quot!(ctx, x446, x3, 1);
    let x448: BytePoly_1 = bigint_nondet_rem!(ctx, x446, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x447, x3, 2), x448, 2), x446, 2),
        8131,
        2,
    )?;
    let x449: BytePoly_2 = bigint_mul!(x442, x442, 2);
    let x450: BytePoly_3 = bigint_nondet_quot!(ctx, x449, x3, 3);
    let x451: BytePoly_1 = bigint_nondet_rem!(ctx, x449, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x450, x3, 4), x451, 4), x449, 4),
        24387,
        2,
    )?;
    let x452: BytePoly_1 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x451, x391, 1), x3, 1), x391, 1),
        x3,
        1
    );
    let x453: BytePoly_1 = bigint_nondet_quot!(ctx, x452, x3, 1);
    let x454: BytePoly_1 = bigint_nondet_rem!(ctx, x452, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x453, x3, 2), x454, 2), x452, 2),
        8131,
        2,
    )?;
    let x455: BytePoly_2 = bigint_mul!(x442, x454, 2);
    let x456: BytePoly_3 = bigint_nondet_quot!(ctx, x455, x3, 3);
    let x457: BytePoly_1 = bigint_nondet_rem!(ctx, x455, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x456, x3, 4), x457, 4), x455, 4),
        24387,
        2,
    )?;
    let x458: BytePoly_1 = bigint_add!(bigint_sub!(x3, bigint_add!(x457, x448, 1), 1), x3, 1);
    let x459: BytePoly_1 = bigint_nondet_quot!(ctx, x458, x3, 1);
    let x460: BytePoly_1 = bigint_nondet_rem!(ctx, x458, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x459, x3, 2), x460, 2), x458, 2),
        8131,
        2,
    )?;
    let x461: BytePoly_1 = bigint_nondet_rem!(ctx, x399, x4, 1);
    let x462: BytePoly_1 = bigint_nondet_quot!(ctx, x399, x4, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x462, x4, 2), x461, 2), x399, 2),
        8131,
        2,
    )?;
    let x463: BytePoly_1 = bigint_sub!(x5, x461, 1);
    eqz(ctx, &bigint_mul!(x461, x463, 2), 8131, 2)?;
    let x464: BytePoly_1 = bigint_add!(bigint_sub!(x454, x424, 1), x3, 1);
    let x465: BytePoly_1 = bigint_nondet_inv!(ctx, x464, x3, 1);
    let x466: BytePoly_2 = bigint_mul!(x464, x465, 2);
    let x467: BytePoly_3 = bigint_nondet_quot!(ctx, x466, x3, 3);
    let x468: BytePoly_1 = bigint_nondet_rem!(ctx, x466, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x467, x3, 4), x468, 4), x466, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x468, x1, 1), 34, 1)?;
    let x469: BytePoly_2 = bigint_mul!(bigint_add!(bigint_sub!(x460, x426, 1), x3, 1), x465, 2);
    let x470: BytePoly_3 = bigint_nondet_quot!(ctx, x469, x3, 3);
    let x471: BytePoly_1 = bigint_nondet_rem!(ctx, x469, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x470, x3, 4), x471, 4), x469, 4),
        24387,
        2,
    )?;
    let x472: BytePoly_2 = bigint_add!(bigint_sub!(x426, bigint_mul!(x471, x424, 2), 2), x3, 2);
    let x473: BytePoly_2 = bigint_nondet_quot!(ctx, x472, x3, 2);
    let x474: BytePoly_1 = bigint_nondet_rem!(ctx, x472, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x473, x3, 3), x474, 3), x472, 3),
        16259,
        2,
    )?;
    let x475: BytePoly_2 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x471, x471, 2), x424, 2), x3, 2),
            x454,
            2
        ),
        x3,
        2
    );
    let x476: BytePoly_3 = bigint_nondet_quot!(ctx, x475, x3, 3);
    let x477: BytePoly_1 = bigint_nondet_rem!(ctx, x475, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x476, x3, 4), x477, 4), x475, 4),
        24387,
        2,
    )?;
    let x478: BytePoly_2 = bigint_mul!(x471, x477, 2);
    let x479: BytePoly_3 = bigint_nondet_quot!(ctx, x478, x3, 3);
    let x480: BytePoly_1 = bigint_nondet_rem!(ctx, x478, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x479, x3, 4), x480, 4), x478, 4),
        24387,
        2,
    )?;
    let x481: BytePoly_1 = bigint_add!(bigint_sub!(x3, bigint_add!(x480, x474, 1), 1), x3, 1);
    let x482: BytePoly_1 = bigint_nondet_quot!(ctx, x481, x3, 1);
    let x483: BytePoly_1 = bigint_nondet_rem!(ctx, x481, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x482, x3, 2), x483, 2), x481, 2),
        8131,
        2,
    )?;
    let x484: BytePoly_2 = bigint_add!(bigint_mul!(x477, x461, 2), bigint_mul!(x424, x463, 2), 2);
    let x485: BytePoly_2 = bigint_add!(bigint_mul!(x483, x461, 2), bigint_mul!(x426, x463, 2), 2);
    let x486: BytePoly_3 = bigint_nondet_quot!(ctx, x484, x3, 3);
    let x487: BytePoly_1 = bigint_nondet_rem!(ctx, x484, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x486, x3, 4), x487, 4), x484, 4),
        24387,
        2,
    )?;
    let x488: BytePoly_3 = bigint_nondet_quot!(ctx, x485, x3, 3);
    let x489: BytePoly_1 = bigint_nondet_rem!(ctx, x485, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x488, x3, 4), x489, 4), x485, 4),
        24387,
        2,
    )?;
    let x490: BytePoly_2 = bigint_mul!(x454, x454, 2);
    let x491: BytePoly_3 = bigint_nondet_quot!(ctx, x490, x3, 3);
    let x492: BytePoly_1 = bigint_nondet_rem!(ctx, x490, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x491, x3, 4), x492, 4), x490, 4),
        24387,
        2,
    )?;
    let x493: BytePoly_2 = bigint_add!(bigint_mul!(x492, x0, 2), x2, 2);
    let x494: BytePoly_3 = bigint_nondet_quot!(ctx, x493, x3, 3);
    let x495: BytePoly_1 = bigint_nondet_rem!(ctx, x493, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x494, x3, 4), x495, 4), x493, 4),
        24387,
        2,
    )?;
    let x496: BytePoly_1 = bigint_add!(x460, x460, 1);
    let x497: BytePoly_1 = bigint_nondet_quot!(ctx, x496, x3, 1);
    let x498: BytePoly_1 = bigint_nondet_rem!(ctx, x496, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x497, x3, 2), x498, 2), x496, 2),
        8131,
        2,
    )?;
    let x499: BytePoly_1 = bigint_nondet_inv!(ctx, x498, x3, 1);
    let x500: BytePoly_2 = bigint_mul!(x498, x499, 2);
    let x501: BytePoly_3 = bigint_nondet_quot!(ctx, x500, x3, 3);
    let x502: BytePoly_1 = bigint_nondet_rem!(ctx, x500, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x501, x3, 4), x502, 4), x500, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x502, x5, 1), 34, 1)?;
    let x503: BytePoly_2 = bigint_mul!(x495, x499, 2);
    let x504: BytePoly_3 = bigint_nondet_quot!(ctx, x503, x3, 3);
    let x505: BytePoly_1 = bigint_nondet_rem!(ctx, x503, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x504, x3, 4), x505, 4), x503, 4),
        24387,
        2,
    )?;
    let x506: BytePoly_2 = bigint_mul!(x505, x454, 2);
    let x507: BytePoly_3 = bigint_nondet_quot!(ctx, x506, x3, 3);
    let x508: BytePoly_1 = bigint_nondet_rem!(ctx, x506, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x507, x3, 4), x508, 4), x506, 4),
        24387,
        2,
    )?;
    let x509: BytePoly_1 = bigint_add!(bigint_sub!(x460, x508, 1), x3, 1);
    let x510: BytePoly_1 = bigint_nondet_quot!(ctx, x509, x3, 1);
    let x511: BytePoly_1 = bigint_nondet_rem!(ctx, x509, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x510, x3, 2), x511, 2), x509, 2),
        8131,
        2,
    )?;
    let x512: BytePoly_2 = bigint_mul!(x505, x505, 2);
    let x513: BytePoly_3 = bigint_nondet_quot!(ctx, x512, x3, 3);
    let x514: BytePoly_1 = bigint_nondet_rem!(ctx, x512, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x513, x3, 4), x514, 4), x512, 4),
        24387,
        2,
    )?;
    let x515: BytePoly_1 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x514, x454, 1), x3, 1), x454, 1),
        x3,
        1
    );
    let x516: BytePoly_1 = bigint_nondet_quot!(ctx, x515, x3, 1);
    let x517: BytePoly_1 = bigint_nondet_rem!(ctx, x515, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x516, x3, 2), x517, 2), x515, 2),
        8131,
        2,
    )?;
    let x518: BytePoly_2 = bigint_mul!(x505, x517, 2);
    let x519: BytePoly_3 = bigint_nondet_quot!(ctx, x518, x3, 3);
    let x520: BytePoly_1 = bigint_nondet_rem!(ctx, x518, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x519, x3, 4), x520, 4), x518, 4),
        24387,
        2,
    )?;
    let x521: BytePoly_1 = bigint_add!(bigint_sub!(x3, bigint_add!(x520, x511, 1), 1), x3, 1);
    let x522: BytePoly_1 = bigint_nondet_quot!(ctx, x521, x3, 1);
    let x523: BytePoly_1 = bigint_nondet_rem!(ctx, x521, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x522, x3, 2), x523, 2), x521, 2),
        8131,
        2,
    )?;
    let x524: BytePoly_1 = bigint_add!(bigint_sub!(x9, x487, 1), x3, 1);
    let x525: BytePoly_1 = bigint_nondet_inv!(ctx, x524, x3, 1);
    let x526: BytePoly_2 = bigint_mul!(x524, x525, 2);
    let x527: BytePoly_3 = bigint_nondet_quot!(ctx, x526, x3, 3);
    let x528: BytePoly_1 = bigint_nondet_rem!(ctx, x526, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x527, x3, 4), x528, 4), x526, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x528, x1, 1), 34, 1)?;
    let x529: BytePoly_2 = bigint_mul!(
        bigint_add!(bigint_sub!(bigint_sub!(x3, x10, 1), x489, 1), x3, 1),
        x525,
        2
    );
    let x530: BytePoly_3 = bigint_nondet_quot!(ctx, x529, x3, 3);
    let x531: BytePoly_1 = bigint_nondet_rem!(ctx, x529, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x530, x3, 4), x531, 4), x529, 4),
        24387,
        2,
    )?;
    let x532: BytePoly_2 = bigint_add!(bigint_sub!(x489, bigint_mul!(x531, x487, 2), 2), x3, 2);
    let x533: BytePoly_2 = bigint_nondet_quot!(ctx, x532, x3, 2);
    let x534: BytePoly_1 = bigint_nondet_rem!(ctx, x532, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x533, x3, 3), x534, 3), x532, 3),
        16259,
        2,
    )?;
    let x535: BytePoly_2 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x531, x531, 2), x487, 2), x3, 2),
            x9,
            2
        ),
        x3,
        2
    );
    let x536: BytePoly_3 = bigint_nondet_quot!(ctx, x535, x3, 3);
    let x537: BytePoly_1 = bigint_nondet_rem!(ctx, x535, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x536, x3, 4), x537, 4), x535, 4),
        24387,
        2,
    )?;
    let x538: BytePoly_2 = bigint_mul!(x531, x537, 2);
    let x539: BytePoly_3 = bigint_nondet_quot!(ctx, x538, x3, 3);
    let x540: BytePoly_1 = bigint_nondet_rem!(ctx, x538, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x539, x3, 4), x540, 4), x538, 4),
        24387,
        2,
    )?;
    let x541: BytePoly_1 = bigint_add!(bigint_sub!(x3, bigint_add!(x540, x534, 1), 1), x3, 1);
    let x542: BytePoly_1 = bigint_nondet_quot!(ctx, x541, x3, 1);
    let x543: BytePoly_1 = bigint_nondet_rem!(ctx, x541, x3, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x542, x3, 2), x543, 2), x541, 2),
        8131,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x537, x12, 1), 34, 1)?;
    eqz(ctx, &bigint_sub!(x543, x13, 1), 34, 1)?;
    return Ok(());
}
pub fn ec_aff_mul_test_32(ctx: &mut BigIntContext) -> Result<()> {
    let x0: BytePoly_1 = bigint_const!(ctx, 3);
    let x1: BytePoly_1 = bigint_const!(ctx, 1);
    let x2: BytePoly_4 = bigint_const!(ctx, 1, 0, 0, 0);
    let x3: BytePoly_4 = bigint_const!(ctx, 5, 0, 0, 0);
    let x4: BytePoly_4 = bigint_const!(ctx, 11, 0, 0, 0);
    let x5: BytePoly_1 = bigint_const!(ctx, 2);
    let x6: BytePoly_1 = bigint_const!(ctx, 1);
    let x7: BytePoly_4 = bigint_def!(ctx, 4, 0, 1);
    let x8: BytePoly_4 = bigint_def!(ctx, 4, 1, 1);
    let x9: BytePoly_4 = bigint_def!(ctx, 4, 2, 1);
    let x10: BytePoly_4 = bigint_def!(ctx, 4, 3, 1);
    let x11: BytePoly_4 = bigint_def!(ctx, 4, 4, 1);
    let x12: BytePoly_4 = bigint_def!(ctx, 4, 5, 1);
    let x13: BytePoly_4 = bigint_def!(ctx, 4, 6, 1);
    let x14: BytePoly_4 = bigint_def!(ctx, 4, 7, 1);
    eqz(ctx, &bigint_sub!(x7, x7, 4), 34, 1)?;
    eqz(ctx, &bigint_sub!(x8, x8, 4), 34, 1)?;
    eqz(ctx, &bigint_sub!(x9, x9, 4), 34, 1)?;
    eqz(ctx, &bigint_sub!(x10, x10, 4), 34, 1)?;
    eqz(ctx, &bigint_sub!(x11, x11, 4), 34, 1)?;
    eqz(ctx, &bigint_sub!(x12, x12, 4), 34, 1)?;
    eqz(ctx, &bigint_sub!(x13, x13, 4), 34, 1)?;
    eqz(ctx, &bigint_sub!(x14, x14, 4), 34, 1)?;
    let x15: BytePoly_8 = bigint_mul!(x10, x10, 8);
    let x16: BytePoly_9 = bigint_nondet_quot!(ctx, x15, x4, 9);
    let x17: BytePoly_4 = bigint_nondet_rem!(ctx, x15, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x16, x4, 13), x17, 13), x15, 13),
        73156,
        4,
    )?;
    let x18: BytePoly_8 = bigint_sub!(
        bigint_mul!(x11, x11, 8),
        bigint_add!(
            bigint_add!(bigint_mul!(x10, x17, 8), bigint_mul!(x10, x3, 8), 8),
            x2,
            8
        ),
        8
    );
    let x19: BytePoly_9 = bigint_nondet_quot!(ctx, x18, x4, 9);
    let x20: BytePoly_4 = bigint_nondet_rem!(ctx, x18, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x19, x4, 13), x20, 13), x18, 13),
        73156,
        4,
    )?;
    eqz(ctx, &x20, 34, 1)?;
    let x21: BytePoly_1 = bigint_nondet_rem!(ctx, x9, x5, 1);
    let x22: BytePoly_4 = bigint_nondet_quot!(ctx, x9, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x22, x5, 5), x21, 5), x9, 5),
        32515,
        2,
    )?;
    let x23: BytePoly_1 = bigint_sub!(x6, x21, 1);
    eqz(ctx, &bigint_mul!(x21, x23, 2), 8131, 2)?;
    let x24: BytePoly_4 = bigint_add!(bigint_sub!(x7, x10, 4), x4, 4);
    let x25: BytePoly_4 = bigint_nondet_inv!(ctx, x24, x4, 4);
    let x26: BytePoly_8 = bigint_mul!(x24, x25, 8);
    let x27: BytePoly_9 = bigint_nondet_quot!(ctx, x26, x4, 9);
    let x28: BytePoly_4 = bigint_nondet_rem!(ctx, x26, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x27, x4, 13), x28, 13), x26, 13),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x28, x1, 4), 34, 1)?;
    let x29: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x8, x11, 4), x4, 4), x25, 8);
    let x30: BytePoly_9 = bigint_nondet_quot!(ctx, x29, x4, 9);
    let x31: BytePoly_4 = bigint_nondet_rem!(ctx, x29, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x30, x4, 13), x31, 13), x29, 13),
        73156,
        4,
    )?;
    let x32: BytePoly_8 = bigint_add!(bigint_sub!(x11, bigint_mul!(x31, x10, 8), 8), x4, 8);
    let x33: BytePoly_8 = bigint_nondet_quot!(ctx, x32, x4, 8);
    let x34: BytePoly_4 = bigint_nondet_rem!(ctx, x32, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x33, x4, 12), x34, 12), x32, 12),
        65028,
        4,
    )?;
    let x35: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x31, x31, 8), x10, 8), x4, 8),
            x7,
            8
        ),
        x4,
        8
    );
    let x36: BytePoly_9 = bigint_nondet_quot!(ctx, x35, x4, 9);
    let x37: BytePoly_4 = bigint_nondet_rem!(ctx, x35, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x36, x4, 13), x37, 13), x35, 13),
        73156,
        4,
    )?;
    let x38: BytePoly_8 = bigint_mul!(x31, x37, 8);
    let x39: BytePoly_9 = bigint_nondet_quot!(ctx, x38, x4, 9);
    let x40: BytePoly_4 = bigint_nondet_rem!(ctx, x38, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x39, x4, 13), x40, 13), x38, 13),
        73156,
        4,
    )?;
    let x41: BytePoly_4 = bigint_add!(bigint_sub!(x4, bigint_add!(x40, x34, 4), 4), x4, 4);
    let x42: BytePoly_4 = bigint_nondet_quot!(ctx, x41, x4, 4);
    let x43: BytePoly_4 = bigint_nondet_rem!(ctx, x41, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x42, x4, 8), x43, 8), x41, 8),
        32515,
        2,
    )?;
    let x44: BytePoly_5 = bigint_add!(bigint_mul!(x37, x21, 5), bigint_mul!(x10, x23, 5), 5);
    let x45: BytePoly_5 = bigint_add!(bigint_mul!(x43, x21, 5), bigint_mul!(x11, x23, 5), 5);
    let x46: BytePoly_6 = bigint_nondet_quot!(ctx, x44, x4, 6);
    let x47: BytePoly_4 = bigint_nondet_rem!(ctx, x44, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x46, x4, 10), x47, 10), x44, 10),
        48771,
        4,
    )?;
    let x48: BytePoly_6 = bigint_nondet_quot!(ctx, x45, x4, 6);
    let x49: BytePoly_4 = bigint_nondet_rem!(ctx, x45, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x48, x4, 10), x49, 10), x45, 10),
        48771,
        4,
    )?;
    let x50: BytePoly_8 = bigint_mul!(x7, x7, 8);
    let x51: BytePoly_9 = bigint_nondet_quot!(ctx, x50, x4, 9);
    let x52: BytePoly_4 = bigint_nondet_rem!(ctx, x50, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x51, x4, 13), x52, 13), x50, 13),
        73156,
        4,
    )?;
    let x53: BytePoly_5 = bigint_add!(bigint_mul!(x52, x0, 5), x3, 5);
    let x54: BytePoly_6 = bigint_nondet_quot!(ctx, x53, x4, 6);
    let x55: BytePoly_4 = bigint_nondet_rem!(ctx, x53, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x54, x4, 10), x55, 10), x53, 10),
        48771,
        4,
    )?;
    let x56: BytePoly_4 = bigint_add!(x8, x8, 4);
    let x57: BytePoly_4 = bigint_nondet_quot!(ctx, x56, x4, 4);
    let x58: BytePoly_4 = bigint_nondet_rem!(ctx, x56, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x57, x4, 8), x58, 8), x56, 8),
        32515,
        2,
    )?;
    let x59: BytePoly_4 = bigint_nondet_inv!(ctx, x58, x4, 4);
    let x60: BytePoly_8 = bigint_mul!(x58, x59, 8);
    let x61: BytePoly_9 = bigint_nondet_quot!(ctx, x60, x4, 9);
    let x62: BytePoly_4 = bigint_nondet_rem!(ctx, x60, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x61, x4, 13), x62, 13), x60, 13),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x62, x6, 4), 34, 1)?;
    let x63: BytePoly_8 = bigint_mul!(x55, x59, 8);
    let x64: BytePoly_9 = bigint_nondet_quot!(ctx, x63, x4, 9);
    let x65: BytePoly_4 = bigint_nondet_rem!(ctx, x63, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x64, x4, 13), x65, 13), x63, 13),
        73156,
        4,
    )?;
    let x66: BytePoly_8 = bigint_mul!(x65, x7, 8);
    let x67: BytePoly_9 = bigint_nondet_quot!(ctx, x66, x4, 9);
    let x68: BytePoly_4 = bigint_nondet_rem!(ctx, x66, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x67, x4, 13), x68, 13), x66, 13),
        73156,
        4,
    )?;
    let x69: BytePoly_4 = bigint_add!(bigint_sub!(x8, x68, 4), x4, 4);
    let x70: BytePoly_4 = bigint_nondet_quot!(ctx, x69, x4, 4);
    let x71: BytePoly_4 = bigint_nondet_rem!(ctx, x69, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x70, x4, 8), x71, 8), x69, 8),
        32515,
        2,
    )?;
    let x72: BytePoly_8 = bigint_mul!(x65, x65, 8);
    let x73: BytePoly_9 = bigint_nondet_quot!(ctx, x72, x4, 9);
    let x74: BytePoly_4 = bigint_nondet_rem!(ctx, x72, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x73, x4, 13), x74, 13), x72, 13),
        73156,
        4,
    )?;
    let x75: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x74, x7, 4), x4, 4), x7, 4),
        x4,
        4
    );
    let x76: BytePoly_4 = bigint_nondet_quot!(ctx, x75, x4, 4);
    let x77: BytePoly_4 = bigint_nondet_rem!(ctx, x75, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x76, x4, 8), x77, 8), x75, 8),
        32515,
        2,
    )?;
    let x78: BytePoly_8 = bigint_mul!(x65, x77, 8);
    let x79: BytePoly_9 = bigint_nondet_quot!(ctx, x78, x4, 9);
    let x80: BytePoly_4 = bigint_nondet_rem!(ctx, x78, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x79, x4, 13), x80, 13), x78, 13),
        73156,
        4,
    )?;
    let x81: BytePoly_4 = bigint_add!(bigint_sub!(x4, bigint_add!(x80, x71, 4), 4), x4, 4);
    let x82: BytePoly_4 = bigint_nondet_quot!(ctx, x81, x4, 4);
    let x83: BytePoly_4 = bigint_nondet_rem!(ctx, x81, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x82, x4, 8), x83, 8), x81, 8),
        32515,
        2,
    )?;
    let x84: BytePoly_1 = bigint_nondet_rem!(ctx, x22, x5, 1);
    let x85: BytePoly_4 = bigint_nondet_quot!(ctx, x22, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x85, x5, 5), x84, 5), x22, 5),
        32515,
        2,
    )?;
    let x86: BytePoly_1 = bigint_sub!(x6, x84, 1);
    eqz(ctx, &bigint_mul!(x84, x86, 2), 8131, 2)?;
    let x87: BytePoly_4 = bigint_add!(bigint_sub!(x77, x47, 4), x4, 4);
    let x88: BytePoly_4 = bigint_nondet_inv!(ctx, x87, x4, 4);
    let x89: BytePoly_8 = bigint_mul!(x87, x88, 8);
    let x90: BytePoly_9 = bigint_nondet_quot!(ctx, x89, x4, 9);
    let x91: BytePoly_4 = bigint_nondet_rem!(ctx, x89, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x90, x4, 13), x91, 13), x89, 13),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x91, x1, 4), 34, 1)?;
    let x92: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x83, x49, 4), x4, 4), x88, 8);
    let x93: BytePoly_9 = bigint_nondet_quot!(ctx, x92, x4, 9);
    let x94: BytePoly_4 = bigint_nondet_rem!(ctx, x92, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x93, x4, 13), x94, 13), x92, 13),
        73156,
        4,
    )?;
    let x95: BytePoly_8 = bigint_add!(bigint_sub!(x49, bigint_mul!(x94, x47, 8), 8), x4, 8);
    let x96: BytePoly_8 = bigint_nondet_quot!(ctx, x95, x4, 8);
    let x97: BytePoly_4 = bigint_nondet_rem!(ctx, x95, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x96, x4, 12), x97, 12), x95, 12),
        65028,
        4,
    )?;
    let x98: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x94, x94, 8), x47, 8), x4, 8),
            x77,
            8
        ),
        x4,
        8
    );
    let x99: BytePoly_9 = bigint_nondet_quot!(ctx, x98, x4, 9);
    let x100: BytePoly_4 = bigint_nondet_rem!(ctx, x98, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x99, x4, 13), x100, 13), x98, 13),
        73156,
        4,
    )?;
    let x101: BytePoly_8 = bigint_mul!(x94, x100, 8);
    let x102: BytePoly_9 = bigint_nondet_quot!(ctx, x101, x4, 9);
    let x103: BytePoly_4 = bigint_nondet_rem!(ctx, x101, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x102, x4, 13), x103, 13), x101, 13),
        73156,
        4,
    )?;
    let x104: BytePoly_4 = bigint_add!(bigint_sub!(x4, bigint_add!(x103, x97, 4), 4), x4, 4);
    let x105: BytePoly_4 = bigint_nondet_quot!(ctx, x104, x4, 4);
    let x106: BytePoly_4 = bigint_nondet_rem!(ctx, x104, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x105, x4, 8), x106, 8), x104, 8),
        32515,
        2,
    )?;
    let x107: BytePoly_5 = bigint_add!(bigint_mul!(x100, x84, 5), bigint_mul!(x47, x86, 5), 5);
    let x108: BytePoly_5 = bigint_add!(bigint_mul!(x106, x84, 5), bigint_mul!(x49, x86, 5), 5);
    let x109: BytePoly_6 = bigint_nondet_quot!(ctx, x107, x4, 6);
    let x110: BytePoly_4 = bigint_nondet_rem!(ctx, x107, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x109, x4, 10), x110, 10), x107, 10),
        48771,
        4,
    )?;
    let x111: BytePoly_6 = bigint_nondet_quot!(ctx, x108, x4, 6);
    let x112: BytePoly_4 = bigint_nondet_rem!(ctx, x108, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x111, x4, 10), x112, 10), x108, 10),
        48771,
        4,
    )?;
    let x113: BytePoly_8 = bigint_mul!(x77, x77, 8);
    let x114: BytePoly_9 = bigint_nondet_quot!(ctx, x113, x4, 9);
    let x115: BytePoly_4 = bigint_nondet_rem!(ctx, x113, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x114, x4, 13), x115, 13), x113, 13),
        73156,
        4,
    )?;
    let x116: BytePoly_5 = bigint_add!(bigint_mul!(x115, x0, 5), x3, 5);
    let x117: BytePoly_6 = bigint_nondet_quot!(ctx, x116, x4, 6);
    let x118: BytePoly_4 = bigint_nondet_rem!(ctx, x116, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x117, x4, 10), x118, 10), x116, 10),
        48771,
        4,
    )?;
    let x119: BytePoly_4 = bigint_add!(x83, x83, 4);
    let x120: BytePoly_4 = bigint_nondet_quot!(ctx, x119, x4, 4);
    let x121: BytePoly_4 = bigint_nondet_rem!(ctx, x119, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x120, x4, 8), x121, 8), x119, 8),
        32515,
        2,
    )?;
    let x122: BytePoly_4 = bigint_nondet_inv!(ctx, x121, x4, 4);
    let x123: BytePoly_8 = bigint_mul!(x121, x122, 8);
    let x124: BytePoly_9 = bigint_nondet_quot!(ctx, x123, x4, 9);
    let x125: BytePoly_4 = bigint_nondet_rem!(ctx, x123, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x124, x4, 13), x125, 13), x123, 13),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x125, x6, 4), 34, 1)?;
    let x126: BytePoly_8 = bigint_mul!(x118, x122, 8);
    let x127: BytePoly_9 = bigint_nondet_quot!(ctx, x126, x4, 9);
    let x128: BytePoly_4 = bigint_nondet_rem!(ctx, x126, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x127, x4, 13), x128, 13), x126, 13),
        73156,
        4,
    )?;
    let x129: BytePoly_8 = bigint_mul!(x128, x77, 8);
    let x130: BytePoly_9 = bigint_nondet_quot!(ctx, x129, x4, 9);
    let x131: BytePoly_4 = bigint_nondet_rem!(ctx, x129, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x130, x4, 13), x131, 13), x129, 13),
        73156,
        4,
    )?;
    let x132: BytePoly_4 = bigint_add!(bigint_sub!(x83, x131, 4), x4, 4);
    let x133: BytePoly_4 = bigint_nondet_quot!(ctx, x132, x4, 4);
    let x134: BytePoly_4 = bigint_nondet_rem!(ctx, x132, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x133, x4, 8), x134, 8), x132, 8),
        32515,
        2,
    )?;
    let x135: BytePoly_8 = bigint_mul!(x128, x128, 8);
    let x136: BytePoly_9 = bigint_nondet_quot!(ctx, x135, x4, 9);
    let x137: BytePoly_4 = bigint_nondet_rem!(ctx, x135, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x136, x4, 13), x137, 13), x135, 13),
        73156,
        4,
    )?;
    let x138: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x137, x77, 4), x4, 4), x77, 4),
        x4,
        4
    );
    let x139: BytePoly_4 = bigint_nondet_quot!(ctx, x138, x4, 4);
    let x140: BytePoly_4 = bigint_nondet_rem!(ctx, x138, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x139, x4, 8), x140, 8), x138, 8),
        32515,
        2,
    )?;
    let x141: BytePoly_8 = bigint_mul!(x128, x140, 8);
    let x142: BytePoly_9 = bigint_nondet_quot!(ctx, x141, x4, 9);
    let x143: BytePoly_4 = bigint_nondet_rem!(ctx, x141, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x142, x4, 13), x143, 13), x141, 13),
        73156,
        4,
    )?;
    let x144: BytePoly_4 = bigint_add!(bigint_sub!(x4, bigint_add!(x143, x134, 4), 4), x4, 4);
    let x145: BytePoly_4 = bigint_nondet_quot!(ctx, x144, x4, 4);
    let x146: BytePoly_4 = bigint_nondet_rem!(ctx, x144, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x145, x4, 8), x146, 8), x144, 8),
        32515,
        2,
    )?;
    let x147: BytePoly_1 = bigint_nondet_rem!(ctx, x85, x5, 1);
    let x148: BytePoly_4 = bigint_nondet_quot!(ctx, x85, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x148, x5, 5), x147, 5), x85, 5),
        32515,
        2,
    )?;
    let x149: BytePoly_1 = bigint_sub!(x6, x147, 1);
    eqz(ctx, &bigint_mul!(x147, x149, 2), 8131, 2)?;
    let x150: BytePoly_4 = bigint_add!(bigint_sub!(x140, x110, 4), x4, 4);
    let x151: BytePoly_4 = bigint_nondet_inv!(ctx, x150, x4, 4);
    let x152: BytePoly_8 = bigint_mul!(x150, x151, 8);
    let x153: BytePoly_9 = bigint_nondet_quot!(ctx, x152, x4, 9);
    let x154: BytePoly_4 = bigint_nondet_rem!(ctx, x152, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x153, x4, 13), x154, 13), x152, 13),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x154, x1, 4), 34, 1)?;
    let x155: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x146, x112, 4), x4, 4), x151, 8);
    let x156: BytePoly_9 = bigint_nondet_quot!(ctx, x155, x4, 9);
    let x157: BytePoly_4 = bigint_nondet_rem!(ctx, x155, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x156, x4, 13), x157, 13), x155, 13),
        73156,
        4,
    )?;
    let x158: BytePoly_8 = bigint_add!(bigint_sub!(x112, bigint_mul!(x157, x110, 8), 8), x4, 8);
    let x159: BytePoly_8 = bigint_nondet_quot!(ctx, x158, x4, 8);
    let x160: BytePoly_4 = bigint_nondet_rem!(ctx, x158, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x159, x4, 12), x160, 12), x158, 12),
        65028,
        4,
    )?;
    let x161: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x157, x157, 8), x110, 8), x4, 8),
            x140,
            8
        ),
        x4,
        8
    );
    let x162: BytePoly_9 = bigint_nondet_quot!(ctx, x161, x4, 9);
    let x163: BytePoly_4 = bigint_nondet_rem!(ctx, x161, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x162, x4, 13), x163, 13), x161, 13),
        73156,
        4,
    )?;
    let x164: BytePoly_8 = bigint_mul!(x157, x163, 8);
    let x165: BytePoly_9 = bigint_nondet_quot!(ctx, x164, x4, 9);
    let x166: BytePoly_4 = bigint_nondet_rem!(ctx, x164, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x165, x4, 13), x166, 13), x164, 13),
        73156,
        4,
    )?;
    let x167: BytePoly_4 = bigint_add!(bigint_sub!(x4, bigint_add!(x166, x160, 4), 4), x4, 4);
    let x168: BytePoly_4 = bigint_nondet_quot!(ctx, x167, x4, 4);
    let x169: BytePoly_4 = bigint_nondet_rem!(ctx, x167, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x168, x4, 8), x169, 8), x167, 8),
        32515,
        2,
    )?;
    let x170: BytePoly_5 = bigint_add!(bigint_mul!(x163, x147, 5), bigint_mul!(x110, x149, 5), 5);
    let x171: BytePoly_5 = bigint_add!(bigint_mul!(x169, x147, 5), bigint_mul!(x112, x149, 5), 5);
    let x172: BytePoly_6 = bigint_nondet_quot!(ctx, x170, x4, 6);
    let x173: BytePoly_4 = bigint_nondet_rem!(ctx, x170, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x172, x4, 10), x173, 10), x170, 10),
        48771,
        4,
    )?;
    let x174: BytePoly_6 = bigint_nondet_quot!(ctx, x171, x4, 6);
    let x175: BytePoly_4 = bigint_nondet_rem!(ctx, x171, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x174, x4, 10), x175, 10), x171, 10),
        48771,
        4,
    )?;
    let x176: BytePoly_8 = bigint_mul!(x140, x140, 8);
    let x177: BytePoly_9 = bigint_nondet_quot!(ctx, x176, x4, 9);
    let x178: BytePoly_4 = bigint_nondet_rem!(ctx, x176, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x177, x4, 13), x178, 13), x176, 13),
        73156,
        4,
    )?;
    let x179: BytePoly_5 = bigint_add!(bigint_mul!(x178, x0, 5), x3, 5);
    let x180: BytePoly_6 = bigint_nondet_quot!(ctx, x179, x4, 6);
    let x181: BytePoly_4 = bigint_nondet_rem!(ctx, x179, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x180, x4, 10), x181, 10), x179, 10),
        48771,
        4,
    )?;
    let x182: BytePoly_4 = bigint_add!(x146, x146, 4);
    let x183: BytePoly_4 = bigint_nondet_quot!(ctx, x182, x4, 4);
    let x184: BytePoly_4 = bigint_nondet_rem!(ctx, x182, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x183, x4, 8), x184, 8), x182, 8),
        32515,
        2,
    )?;
    let x185: BytePoly_4 = bigint_nondet_inv!(ctx, x184, x4, 4);
    let x186: BytePoly_8 = bigint_mul!(x184, x185, 8);
    let x187: BytePoly_9 = bigint_nondet_quot!(ctx, x186, x4, 9);
    let x188: BytePoly_4 = bigint_nondet_rem!(ctx, x186, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x187, x4, 13), x188, 13), x186, 13),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x188, x6, 4), 34, 1)?;
    let x189: BytePoly_8 = bigint_mul!(x181, x185, 8);
    let x190: BytePoly_9 = bigint_nondet_quot!(ctx, x189, x4, 9);
    let x191: BytePoly_4 = bigint_nondet_rem!(ctx, x189, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x190, x4, 13), x191, 13), x189, 13),
        73156,
        4,
    )?;
    let x192: BytePoly_8 = bigint_mul!(x191, x140, 8);
    let x193: BytePoly_9 = bigint_nondet_quot!(ctx, x192, x4, 9);
    let x194: BytePoly_4 = bigint_nondet_rem!(ctx, x192, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x193, x4, 13), x194, 13), x192, 13),
        73156,
        4,
    )?;
    let x195: BytePoly_4 = bigint_add!(bigint_sub!(x146, x194, 4), x4, 4);
    let x196: BytePoly_4 = bigint_nondet_quot!(ctx, x195, x4, 4);
    let x197: BytePoly_4 = bigint_nondet_rem!(ctx, x195, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x196, x4, 8), x197, 8), x195, 8),
        32515,
        2,
    )?;
    let x198: BytePoly_8 = bigint_mul!(x191, x191, 8);
    let x199: BytePoly_9 = bigint_nondet_quot!(ctx, x198, x4, 9);
    let x200: BytePoly_4 = bigint_nondet_rem!(ctx, x198, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x199, x4, 13), x200, 13), x198, 13),
        73156,
        4,
    )?;
    let x201: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x200, x140, 4), x4, 4), x140, 4),
        x4,
        4
    );
    let x202: BytePoly_4 = bigint_nondet_quot!(ctx, x201, x4, 4);
    let x203: BytePoly_4 = bigint_nondet_rem!(ctx, x201, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x202, x4, 8), x203, 8), x201, 8),
        32515,
        2,
    )?;
    let x204: BytePoly_8 = bigint_mul!(x191, x203, 8);
    let x205: BytePoly_9 = bigint_nondet_quot!(ctx, x204, x4, 9);
    let x206: BytePoly_4 = bigint_nondet_rem!(ctx, x204, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x205, x4, 13), x206, 13), x204, 13),
        73156,
        4,
    )?;
    let x207: BytePoly_4 = bigint_add!(bigint_sub!(x4, bigint_add!(x206, x197, 4), 4), x4, 4);
    let x208: BytePoly_4 = bigint_nondet_quot!(ctx, x207, x4, 4);
    let x209: BytePoly_4 = bigint_nondet_rem!(ctx, x207, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x208, x4, 8), x209, 8), x207, 8),
        32515,
        2,
    )?;
    let x210: BytePoly_1 = bigint_nondet_rem!(ctx, x148, x5, 1);
    let x211: BytePoly_4 = bigint_nondet_quot!(ctx, x148, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x211, x5, 5), x210, 5), x148, 5),
        32515,
        2,
    )?;
    let x212: BytePoly_1 = bigint_sub!(x6, x210, 1);
    eqz(ctx, &bigint_mul!(x210, x212, 2), 8131, 2)?;
    let x213: BytePoly_4 = bigint_add!(bigint_sub!(x203, x173, 4), x4, 4);
    let x214: BytePoly_4 = bigint_nondet_inv!(ctx, x213, x4, 4);
    let x215: BytePoly_8 = bigint_mul!(x213, x214, 8);
    let x216: BytePoly_9 = bigint_nondet_quot!(ctx, x215, x4, 9);
    let x217: BytePoly_4 = bigint_nondet_rem!(ctx, x215, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x216, x4, 13), x217, 13), x215, 13),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x217, x1, 4), 34, 1)?;
    let x218: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x209, x175, 4), x4, 4), x214, 8);
    let x219: BytePoly_9 = bigint_nondet_quot!(ctx, x218, x4, 9);
    let x220: BytePoly_4 = bigint_nondet_rem!(ctx, x218, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x219, x4, 13), x220, 13), x218, 13),
        73156,
        4,
    )?;
    let x221: BytePoly_8 = bigint_add!(bigint_sub!(x175, bigint_mul!(x220, x173, 8), 8), x4, 8);
    let x222: BytePoly_8 = bigint_nondet_quot!(ctx, x221, x4, 8);
    let x223: BytePoly_4 = bigint_nondet_rem!(ctx, x221, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x222, x4, 12), x223, 12), x221, 12),
        65028,
        4,
    )?;
    let x224: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x220, x220, 8), x173, 8), x4, 8),
            x203,
            8
        ),
        x4,
        8
    );
    let x225: BytePoly_9 = bigint_nondet_quot!(ctx, x224, x4, 9);
    let x226: BytePoly_4 = bigint_nondet_rem!(ctx, x224, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x225, x4, 13), x226, 13), x224, 13),
        73156,
        4,
    )?;
    let x227: BytePoly_8 = bigint_mul!(x220, x226, 8);
    let x228: BytePoly_9 = bigint_nondet_quot!(ctx, x227, x4, 9);
    let x229: BytePoly_4 = bigint_nondet_rem!(ctx, x227, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x228, x4, 13), x229, 13), x227, 13),
        73156,
        4,
    )?;
    let x230: BytePoly_4 = bigint_add!(bigint_sub!(x4, bigint_add!(x229, x223, 4), 4), x4, 4);
    let x231: BytePoly_4 = bigint_nondet_quot!(ctx, x230, x4, 4);
    let x232: BytePoly_4 = bigint_nondet_rem!(ctx, x230, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x231, x4, 8), x232, 8), x230, 8),
        32515,
        2,
    )?;
    let x233: BytePoly_5 = bigint_add!(bigint_mul!(x226, x210, 5), bigint_mul!(x173, x212, 5), 5);
    let x234: BytePoly_5 = bigint_add!(bigint_mul!(x232, x210, 5), bigint_mul!(x175, x212, 5), 5);
    let x235: BytePoly_6 = bigint_nondet_quot!(ctx, x233, x4, 6);
    let x236: BytePoly_4 = bigint_nondet_rem!(ctx, x233, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x235, x4, 10), x236, 10), x233, 10),
        48771,
        4,
    )?;
    let x237: BytePoly_6 = bigint_nondet_quot!(ctx, x234, x4, 6);
    let x238: BytePoly_4 = bigint_nondet_rem!(ctx, x234, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x237, x4, 10), x238, 10), x234, 10),
        48771,
        4,
    )?;
    let x239: BytePoly_8 = bigint_mul!(x203, x203, 8);
    let x240: BytePoly_9 = bigint_nondet_quot!(ctx, x239, x4, 9);
    let x241: BytePoly_4 = bigint_nondet_rem!(ctx, x239, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x240, x4, 13), x241, 13), x239, 13),
        73156,
        4,
    )?;
    let x242: BytePoly_5 = bigint_add!(bigint_mul!(x241, x0, 5), x3, 5);
    let x243: BytePoly_6 = bigint_nondet_quot!(ctx, x242, x4, 6);
    let x244: BytePoly_4 = bigint_nondet_rem!(ctx, x242, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x243, x4, 10), x244, 10), x242, 10),
        48771,
        4,
    )?;
    let x245: BytePoly_4 = bigint_add!(x209, x209, 4);
    let x246: BytePoly_4 = bigint_nondet_quot!(ctx, x245, x4, 4);
    let x247: BytePoly_4 = bigint_nondet_rem!(ctx, x245, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x246, x4, 8), x247, 8), x245, 8),
        32515,
        2,
    )?;
    let x248: BytePoly_4 = bigint_nondet_inv!(ctx, x247, x4, 4);
    let x249: BytePoly_8 = bigint_mul!(x247, x248, 8);
    let x250: BytePoly_9 = bigint_nondet_quot!(ctx, x249, x4, 9);
    let x251: BytePoly_4 = bigint_nondet_rem!(ctx, x249, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x250, x4, 13), x251, 13), x249, 13),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x251, x6, 4), 34, 1)?;
    let x252: BytePoly_8 = bigint_mul!(x244, x248, 8);
    let x253: BytePoly_9 = bigint_nondet_quot!(ctx, x252, x4, 9);
    let x254: BytePoly_4 = bigint_nondet_rem!(ctx, x252, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x253, x4, 13), x254, 13), x252, 13),
        73156,
        4,
    )?;
    let x255: BytePoly_8 = bigint_mul!(x254, x203, 8);
    let x256: BytePoly_9 = bigint_nondet_quot!(ctx, x255, x4, 9);
    let x257: BytePoly_4 = bigint_nondet_rem!(ctx, x255, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x256, x4, 13), x257, 13), x255, 13),
        73156,
        4,
    )?;
    let x258: BytePoly_4 = bigint_add!(bigint_sub!(x209, x257, 4), x4, 4);
    let x259: BytePoly_4 = bigint_nondet_quot!(ctx, x258, x4, 4);
    let x260: BytePoly_4 = bigint_nondet_rem!(ctx, x258, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x259, x4, 8), x260, 8), x258, 8),
        32515,
        2,
    )?;
    let x261: BytePoly_8 = bigint_mul!(x254, x254, 8);
    let x262: BytePoly_9 = bigint_nondet_quot!(ctx, x261, x4, 9);
    let x263: BytePoly_4 = bigint_nondet_rem!(ctx, x261, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x262, x4, 13), x263, 13), x261, 13),
        73156,
        4,
    )?;
    let x264: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x263, x203, 4), x4, 4), x203, 4),
        x4,
        4
    );
    let x265: BytePoly_4 = bigint_nondet_quot!(ctx, x264, x4, 4);
    let x266: BytePoly_4 = bigint_nondet_rem!(ctx, x264, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x265, x4, 8), x266, 8), x264, 8),
        32515,
        2,
    )?;
    let x267: BytePoly_8 = bigint_mul!(x254, x266, 8);
    let x268: BytePoly_9 = bigint_nondet_quot!(ctx, x267, x4, 9);
    let x269: BytePoly_4 = bigint_nondet_rem!(ctx, x267, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x268, x4, 13), x269, 13), x267, 13),
        73156,
        4,
    )?;
    let x270: BytePoly_4 = bigint_add!(bigint_sub!(x4, bigint_add!(x269, x260, 4), 4), x4, 4);
    let x271: BytePoly_4 = bigint_nondet_quot!(ctx, x270, x4, 4);
    let x272: BytePoly_4 = bigint_nondet_rem!(ctx, x270, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x271, x4, 8), x272, 8), x270, 8),
        32515,
        2,
    )?;
    let x273: BytePoly_1 = bigint_nondet_rem!(ctx, x211, x5, 1);
    let x274: BytePoly_4 = bigint_nondet_quot!(ctx, x211, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x274, x5, 5), x273, 5), x211, 5),
        32515,
        2,
    )?;
    let x275: BytePoly_1 = bigint_sub!(x6, x273, 1);
    eqz(ctx, &bigint_mul!(x273, x275, 2), 8131, 2)?;
    let x276: BytePoly_4 = bigint_add!(bigint_sub!(x266, x236, 4), x4, 4);
    let x277: BytePoly_4 = bigint_nondet_inv!(ctx, x276, x4, 4);
    let x278: BytePoly_8 = bigint_mul!(x276, x277, 8);
    let x279: BytePoly_9 = bigint_nondet_quot!(ctx, x278, x4, 9);
    let x280: BytePoly_4 = bigint_nondet_rem!(ctx, x278, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x279, x4, 13), x280, 13), x278, 13),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x280, x1, 4), 34, 1)?;
    let x281: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x272, x238, 4), x4, 4), x277, 8);
    let x282: BytePoly_9 = bigint_nondet_quot!(ctx, x281, x4, 9);
    let x283: BytePoly_4 = bigint_nondet_rem!(ctx, x281, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x282, x4, 13), x283, 13), x281, 13),
        73156,
        4,
    )?;
    let x284: BytePoly_8 = bigint_add!(bigint_sub!(x238, bigint_mul!(x283, x236, 8), 8), x4, 8);
    let x285: BytePoly_8 = bigint_nondet_quot!(ctx, x284, x4, 8);
    let x286: BytePoly_4 = bigint_nondet_rem!(ctx, x284, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x285, x4, 12), x286, 12), x284, 12),
        65028,
        4,
    )?;
    let x287: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x283, x283, 8), x236, 8), x4, 8),
            x266,
            8
        ),
        x4,
        8
    );
    let x288: BytePoly_9 = bigint_nondet_quot!(ctx, x287, x4, 9);
    let x289: BytePoly_4 = bigint_nondet_rem!(ctx, x287, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x288, x4, 13), x289, 13), x287, 13),
        73156,
        4,
    )?;
    let x290: BytePoly_8 = bigint_mul!(x283, x289, 8);
    let x291: BytePoly_9 = bigint_nondet_quot!(ctx, x290, x4, 9);
    let x292: BytePoly_4 = bigint_nondet_rem!(ctx, x290, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x291, x4, 13), x292, 13), x290, 13),
        73156,
        4,
    )?;
    let x293: BytePoly_4 = bigint_add!(bigint_sub!(x4, bigint_add!(x292, x286, 4), 4), x4, 4);
    let x294: BytePoly_4 = bigint_nondet_quot!(ctx, x293, x4, 4);
    let x295: BytePoly_4 = bigint_nondet_rem!(ctx, x293, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x294, x4, 8), x295, 8), x293, 8),
        32515,
        2,
    )?;
    let x296: BytePoly_5 = bigint_add!(bigint_mul!(x289, x273, 5), bigint_mul!(x236, x275, 5), 5);
    let x297: BytePoly_5 = bigint_add!(bigint_mul!(x295, x273, 5), bigint_mul!(x238, x275, 5), 5);
    let x298: BytePoly_6 = bigint_nondet_quot!(ctx, x296, x4, 6);
    let x299: BytePoly_4 = bigint_nondet_rem!(ctx, x296, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x298, x4, 10), x299, 10), x296, 10),
        48771,
        4,
    )?;
    let x300: BytePoly_6 = bigint_nondet_quot!(ctx, x297, x4, 6);
    let x301: BytePoly_4 = bigint_nondet_rem!(ctx, x297, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x300, x4, 10), x301, 10), x297, 10),
        48771,
        4,
    )?;
    let x302: BytePoly_8 = bigint_mul!(x266, x266, 8);
    let x303: BytePoly_9 = bigint_nondet_quot!(ctx, x302, x4, 9);
    let x304: BytePoly_4 = bigint_nondet_rem!(ctx, x302, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x303, x4, 13), x304, 13), x302, 13),
        73156,
        4,
    )?;
    let x305: BytePoly_5 = bigint_add!(bigint_mul!(x304, x0, 5), x3, 5);
    let x306: BytePoly_6 = bigint_nondet_quot!(ctx, x305, x4, 6);
    let x307: BytePoly_4 = bigint_nondet_rem!(ctx, x305, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x306, x4, 10), x307, 10), x305, 10),
        48771,
        4,
    )?;
    let x308: BytePoly_4 = bigint_add!(x272, x272, 4);
    let x309: BytePoly_4 = bigint_nondet_quot!(ctx, x308, x4, 4);
    let x310: BytePoly_4 = bigint_nondet_rem!(ctx, x308, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x309, x4, 8), x310, 8), x308, 8),
        32515,
        2,
    )?;
    let x311: BytePoly_4 = bigint_nondet_inv!(ctx, x310, x4, 4);
    let x312: BytePoly_8 = bigint_mul!(x310, x311, 8);
    let x313: BytePoly_9 = bigint_nondet_quot!(ctx, x312, x4, 9);
    let x314: BytePoly_4 = bigint_nondet_rem!(ctx, x312, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x313, x4, 13), x314, 13), x312, 13),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x314, x6, 4), 34, 1)?;
    let x315: BytePoly_8 = bigint_mul!(x307, x311, 8);
    let x316: BytePoly_9 = bigint_nondet_quot!(ctx, x315, x4, 9);
    let x317: BytePoly_4 = bigint_nondet_rem!(ctx, x315, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x316, x4, 13), x317, 13), x315, 13),
        73156,
        4,
    )?;
    let x318: BytePoly_8 = bigint_mul!(x317, x266, 8);
    let x319: BytePoly_9 = bigint_nondet_quot!(ctx, x318, x4, 9);
    let x320: BytePoly_4 = bigint_nondet_rem!(ctx, x318, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x319, x4, 13), x320, 13), x318, 13),
        73156,
        4,
    )?;
    let x321: BytePoly_4 = bigint_add!(bigint_sub!(x272, x320, 4), x4, 4);
    let x322: BytePoly_4 = bigint_nondet_quot!(ctx, x321, x4, 4);
    let x323: BytePoly_4 = bigint_nondet_rem!(ctx, x321, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x322, x4, 8), x323, 8), x321, 8),
        32515,
        2,
    )?;
    let x324: BytePoly_8 = bigint_mul!(x317, x317, 8);
    let x325: BytePoly_9 = bigint_nondet_quot!(ctx, x324, x4, 9);
    let x326: BytePoly_4 = bigint_nondet_rem!(ctx, x324, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x325, x4, 13), x326, 13), x324, 13),
        73156,
        4,
    )?;
    let x327: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x326, x266, 4), x4, 4), x266, 4),
        x4,
        4
    );
    let x328: BytePoly_4 = bigint_nondet_quot!(ctx, x327, x4, 4);
    let x329: BytePoly_4 = bigint_nondet_rem!(ctx, x327, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x328, x4, 8), x329, 8), x327, 8),
        32515,
        2,
    )?;
    let x330: BytePoly_8 = bigint_mul!(x317, x329, 8);
    let x331: BytePoly_9 = bigint_nondet_quot!(ctx, x330, x4, 9);
    let x332: BytePoly_4 = bigint_nondet_rem!(ctx, x330, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x331, x4, 13), x332, 13), x330, 13),
        73156,
        4,
    )?;
    let x333: BytePoly_4 = bigint_add!(bigint_sub!(x4, bigint_add!(x332, x323, 4), 4), x4, 4);
    let x334: BytePoly_4 = bigint_nondet_quot!(ctx, x333, x4, 4);
    let x335: BytePoly_4 = bigint_nondet_rem!(ctx, x333, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x334, x4, 8), x335, 8), x333, 8),
        32515,
        2,
    )?;
    let x336: BytePoly_1 = bigint_nondet_rem!(ctx, x274, x5, 1);
    let x337: BytePoly_4 = bigint_nondet_quot!(ctx, x274, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x337, x5, 5), x336, 5), x274, 5),
        32515,
        2,
    )?;
    let x338: BytePoly_1 = bigint_sub!(x6, x336, 1);
    eqz(ctx, &bigint_mul!(x336, x338, 2), 8131, 2)?;
    let x339: BytePoly_4 = bigint_add!(bigint_sub!(x329, x299, 4), x4, 4);
    let x340: BytePoly_4 = bigint_nondet_inv!(ctx, x339, x4, 4);
    let x341: BytePoly_8 = bigint_mul!(x339, x340, 8);
    let x342: BytePoly_9 = bigint_nondet_quot!(ctx, x341, x4, 9);
    let x343: BytePoly_4 = bigint_nondet_rem!(ctx, x341, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x342, x4, 13), x343, 13), x341, 13),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x343, x1, 4), 34, 1)?;
    let x344: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x335, x301, 4), x4, 4), x340, 8);
    let x345: BytePoly_9 = bigint_nondet_quot!(ctx, x344, x4, 9);
    let x346: BytePoly_4 = bigint_nondet_rem!(ctx, x344, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x345, x4, 13), x346, 13), x344, 13),
        73156,
        4,
    )?;
    let x347: BytePoly_8 = bigint_add!(bigint_sub!(x301, bigint_mul!(x346, x299, 8), 8), x4, 8);
    let x348: BytePoly_8 = bigint_nondet_quot!(ctx, x347, x4, 8);
    let x349: BytePoly_4 = bigint_nondet_rem!(ctx, x347, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x348, x4, 12), x349, 12), x347, 12),
        65028,
        4,
    )?;
    let x350: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x346, x346, 8), x299, 8), x4, 8),
            x329,
            8
        ),
        x4,
        8
    );
    let x351: BytePoly_9 = bigint_nondet_quot!(ctx, x350, x4, 9);
    let x352: BytePoly_4 = bigint_nondet_rem!(ctx, x350, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x351, x4, 13), x352, 13), x350, 13),
        73156,
        4,
    )?;
    let x353: BytePoly_8 = bigint_mul!(x346, x352, 8);
    let x354: BytePoly_9 = bigint_nondet_quot!(ctx, x353, x4, 9);
    let x355: BytePoly_4 = bigint_nondet_rem!(ctx, x353, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x354, x4, 13), x355, 13), x353, 13),
        73156,
        4,
    )?;
    let x356: BytePoly_4 = bigint_add!(bigint_sub!(x4, bigint_add!(x355, x349, 4), 4), x4, 4);
    let x357: BytePoly_4 = bigint_nondet_quot!(ctx, x356, x4, 4);
    let x358: BytePoly_4 = bigint_nondet_rem!(ctx, x356, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x357, x4, 8), x358, 8), x356, 8),
        32515,
        2,
    )?;
    let x359: BytePoly_5 = bigint_add!(bigint_mul!(x352, x336, 5), bigint_mul!(x299, x338, 5), 5);
    let x360: BytePoly_5 = bigint_add!(bigint_mul!(x358, x336, 5), bigint_mul!(x301, x338, 5), 5);
    let x361: BytePoly_6 = bigint_nondet_quot!(ctx, x359, x4, 6);
    let x362: BytePoly_4 = bigint_nondet_rem!(ctx, x359, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x361, x4, 10), x362, 10), x359, 10),
        48771,
        4,
    )?;
    let x363: BytePoly_6 = bigint_nondet_quot!(ctx, x360, x4, 6);
    let x364: BytePoly_4 = bigint_nondet_rem!(ctx, x360, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x363, x4, 10), x364, 10), x360, 10),
        48771,
        4,
    )?;
    let x365: BytePoly_8 = bigint_mul!(x329, x329, 8);
    let x366: BytePoly_9 = bigint_nondet_quot!(ctx, x365, x4, 9);
    let x367: BytePoly_4 = bigint_nondet_rem!(ctx, x365, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x366, x4, 13), x367, 13), x365, 13),
        73156,
        4,
    )?;
    let x368: BytePoly_5 = bigint_add!(bigint_mul!(x367, x0, 5), x3, 5);
    let x369: BytePoly_6 = bigint_nondet_quot!(ctx, x368, x4, 6);
    let x370: BytePoly_4 = bigint_nondet_rem!(ctx, x368, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x369, x4, 10), x370, 10), x368, 10),
        48771,
        4,
    )?;
    let x371: BytePoly_4 = bigint_add!(x335, x335, 4);
    let x372: BytePoly_4 = bigint_nondet_quot!(ctx, x371, x4, 4);
    let x373: BytePoly_4 = bigint_nondet_rem!(ctx, x371, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x372, x4, 8), x373, 8), x371, 8),
        32515,
        2,
    )?;
    let x374: BytePoly_4 = bigint_nondet_inv!(ctx, x373, x4, 4);
    let x375: BytePoly_8 = bigint_mul!(x373, x374, 8);
    let x376: BytePoly_9 = bigint_nondet_quot!(ctx, x375, x4, 9);
    let x377: BytePoly_4 = bigint_nondet_rem!(ctx, x375, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x376, x4, 13), x377, 13), x375, 13),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x377, x6, 4), 34, 1)?;
    let x378: BytePoly_8 = bigint_mul!(x370, x374, 8);
    let x379: BytePoly_9 = bigint_nondet_quot!(ctx, x378, x4, 9);
    let x380: BytePoly_4 = bigint_nondet_rem!(ctx, x378, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x379, x4, 13), x380, 13), x378, 13),
        73156,
        4,
    )?;
    let x381: BytePoly_8 = bigint_mul!(x380, x329, 8);
    let x382: BytePoly_9 = bigint_nondet_quot!(ctx, x381, x4, 9);
    let x383: BytePoly_4 = bigint_nondet_rem!(ctx, x381, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x382, x4, 13), x383, 13), x381, 13),
        73156,
        4,
    )?;
    let x384: BytePoly_4 = bigint_add!(bigint_sub!(x335, x383, 4), x4, 4);
    let x385: BytePoly_4 = bigint_nondet_quot!(ctx, x384, x4, 4);
    let x386: BytePoly_4 = bigint_nondet_rem!(ctx, x384, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x385, x4, 8), x386, 8), x384, 8),
        32515,
        2,
    )?;
    let x387: BytePoly_8 = bigint_mul!(x380, x380, 8);
    let x388: BytePoly_9 = bigint_nondet_quot!(ctx, x387, x4, 9);
    let x389: BytePoly_4 = bigint_nondet_rem!(ctx, x387, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x388, x4, 13), x389, 13), x387, 13),
        73156,
        4,
    )?;
    let x390: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x389, x329, 4), x4, 4), x329, 4),
        x4,
        4
    );
    let x391: BytePoly_4 = bigint_nondet_quot!(ctx, x390, x4, 4);
    let x392: BytePoly_4 = bigint_nondet_rem!(ctx, x390, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x391, x4, 8), x392, 8), x390, 8),
        32515,
        2,
    )?;
    let x393: BytePoly_8 = bigint_mul!(x380, x392, 8);
    let x394: BytePoly_9 = bigint_nondet_quot!(ctx, x393, x4, 9);
    let x395: BytePoly_4 = bigint_nondet_rem!(ctx, x393, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x394, x4, 13), x395, 13), x393, 13),
        73156,
        4,
    )?;
    let x396: BytePoly_4 = bigint_add!(bigint_sub!(x4, bigint_add!(x395, x386, 4), 4), x4, 4);
    let x397: BytePoly_4 = bigint_nondet_quot!(ctx, x396, x4, 4);
    let x398: BytePoly_4 = bigint_nondet_rem!(ctx, x396, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x397, x4, 8), x398, 8), x396, 8),
        32515,
        2,
    )?;
    let x399: BytePoly_1 = bigint_nondet_rem!(ctx, x337, x5, 1);
    let x400: BytePoly_4 = bigint_nondet_quot!(ctx, x337, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x400, x5, 5), x399, 5), x337, 5),
        32515,
        2,
    )?;
    let x401: BytePoly_1 = bigint_sub!(x6, x399, 1);
    eqz(ctx, &bigint_mul!(x399, x401, 2), 8131, 2)?;
    let x402: BytePoly_4 = bigint_add!(bigint_sub!(x392, x362, 4), x4, 4);
    let x403: BytePoly_4 = bigint_nondet_inv!(ctx, x402, x4, 4);
    let x404: BytePoly_8 = bigint_mul!(x402, x403, 8);
    let x405: BytePoly_9 = bigint_nondet_quot!(ctx, x404, x4, 9);
    let x406: BytePoly_4 = bigint_nondet_rem!(ctx, x404, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x405, x4, 13), x406, 13), x404, 13),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x406, x1, 4), 34, 1)?;
    let x407: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x398, x364, 4), x4, 4), x403, 8);
    let x408: BytePoly_9 = bigint_nondet_quot!(ctx, x407, x4, 9);
    let x409: BytePoly_4 = bigint_nondet_rem!(ctx, x407, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x408, x4, 13), x409, 13), x407, 13),
        73156,
        4,
    )?;
    let x410: BytePoly_8 = bigint_add!(bigint_sub!(x364, bigint_mul!(x409, x362, 8), 8), x4, 8);
    let x411: BytePoly_8 = bigint_nondet_quot!(ctx, x410, x4, 8);
    let x412: BytePoly_4 = bigint_nondet_rem!(ctx, x410, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x411, x4, 12), x412, 12), x410, 12),
        65028,
        4,
    )?;
    let x413: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x409, x409, 8), x362, 8), x4, 8),
            x392,
            8
        ),
        x4,
        8
    );
    let x414: BytePoly_9 = bigint_nondet_quot!(ctx, x413, x4, 9);
    let x415: BytePoly_4 = bigint_nondet_rem!(ctx, x413, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x414, x4, 13), x415, 13), x413, 13),
        73156,
        4,
    )?;
    let x416: BytePoly_8 = bigint_mul!(x409, x415, 8);
    let x417: BytePoly_9 = bigint_nondet_quot!(ctx, x416, x4, 9);
    let x418: BytePoly_4 = bigint_nondet_rem!(ctx, x416, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x417, x4, 13), x418, 13), x416, 13),
        73156,
        4,
    )?;
    let x419: BytePoly_4 = bigint_add!(bigint_sub!(x4, bigint_add!(x418, x412, 4), 4), x4, 4);
    let x420: BytePoly_4 = bigint_nondet_quot!(ctx, x419, x4, 4);
    let x421: BytePoly_4 = bigint_nondet_rem!(ctx, x419, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x420, x4, 8), x421, 8), x419, 8),
        32515,
        2,
    )?;
    let x422: BytePoly_5 = bigint_add!(bigint_mul!(x415, x399, 5), bigint_mul!(x362, x401, 5), 5);
    let x423: BytePoly_5 = bigint_add!(bigint_mul!(x421, x399, 5), bigint_mul!(x364, x401, 5), 5);
    let x424: BytePoly_6 = bigint_nondet_quot!(ctx, x422, x4, 6);
    let x425: BytePoly_4 = bigint_nondet_rem!(ctx, x422, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x424, x4, 10), x425, 10), x422, 10),
        48771,
        4,
    )?;
    let x426: BytePoly_6 = bigint_nondet_quot!(ctx, x423, x4, 6);
    let x427: BytePoly_4 = bigint_nondet_rem!(ctx, x423, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x426, x4, 10), x427, 10), x423, 10),
        48771,
        4,
    )?;
    let x428: BytePoly_8 = bigint_mul!(x392, x392, 8);
    let x429: BytePoly_9 = bigint_nondet_quot!(ctx, x428, x4, 9);
    let x430: BytePoly_4 = bigint_nondet_rem!(ctx, x428, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x429, x4, 13), x430, 13), x428, 13),
        73156,
        4,
    )?;
    let x431: BytePoly_5 = bigint_add!(bigint_mul!(x430, x0, 5), x3, 5);
    let x432: BytePoly_6 = bigint_nondet_quot!(ctx, x431, x4, 6);
    let x433: BytePoly_4 = bigint_nondet_rem!(ctx, x431, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x432, x4, 10), x433, 10), x431, 10),
        48771,
        4,
    )?;
    let x434: BytePoly_4 = bigint_add!(x398, x398, 4);
    let x435: BytePoly_4 = bigint_nondet_quot!(ctx, x434, x4, 4);
    let x436: BytePoly_4 = bigint_nondet_rem!(ctx, x434, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x435, x4, 8), x436, 8), x434, 8),
        32515,
        2,
    )?;
    let x437: BytePoly_4 = bigint_nondet_inv!(ctx, x436, x4, 4);
    let x438: BytePoly_8 = bigint_mul!(x436, x437, 8);
    let x439: BytePoly_9 = bigint_nondet_quot!(ctx, x438, x4, 9);
    let x440: BytePoly_4 = bigint_nondet_rem!(ctx, x438, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x439, x4, 13), x440, 13), x438, 13),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x440, x6, 4), 34, 1)?;
    let x441: BytePoly_8 = bigint_mul!(x433, x437, 8);
    let x442: BytePoly_9 = bigint_nondet_quot!(ctx, x441, x4, 9);
    let x443: BytePoly_4 = bigint_nondet_rem!(ctx, x441, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x442, x4, 13), x443, 13), x441, 13),
        73156,
        4,
    )?;
    let x444: BytePoly_8 = bigint_mul!(x443, x392, 8);
    let x445: BytePoly_9 = bigint_nondet_quot!(ctx, x444, x4, 9);
    let x446: BytePoly_4 = bigint_nondet_rem!(ctx, x444, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x445, x4, 13), x446, 13), x444, 13),
        73156,
        4,
    )?;
    let x447: BytePoly_4 = bigint_add!(bigint_sub!(x398, x446, 4), x4, 4);
    let x448: BytePoly_4 = bigint_nondet_quot!(ctx, x447, x4, 4);
    let x449: BytePoly_4 = bigint_nondet_rem!(ctx, x447, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x448, x4, 8), x449, 8), x447, 8),
        32515,
        2,
    )?;
    let x450: BytePoly_8 = bigint_mul!(x443, x443, 8);
    let x451: BytePoly_9 = bigint_nondet_quot!(ctx, x450, x4, 9);
    let x452: BytePoly_4 = bigint_nondet_rem!(ctx, x450, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x451, x4, 13), x452, 13), x450, 13),
        73156,
        4,
    )?;
    let x453: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x452, x392, 4), x4, 4), x392, 4),
        x4,
        4
    );
    let x454: BytePoly_4 = bigint_nondet_quot!(ctx, x453, x4, 4);
    let x455: BytePoly_4 = bigint_nondet_rem!(ctx, x453, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x454, x4, 8), x455, 8), x453, 8),
        32515,
        2,
    )?;
    let x456: BytePoly_8 = bigint_mul!(x443, x455, 8);
    let x457: BytePoly_9 = bigint_nondet_quot!(ctx, x456, x4, 9);
    let x458: BytePoly_4 = bigint_nondet_rem!(ctx, x456, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x457, x4, 13), x458, 13), x456, 13),
        73156,
        4,
    )?;
    let x459: BytePoly_4 = bigint_add!(bigint_sub!(x4, bigint_add!(x458, x449, 4), 4), x4, 4);
    let x460: BytePoly_4 = bigint_nondet_quot!(ctx, x459, x4, 4);
    let x461: BytePoly_4 = bigint_nondet_rem!(ctx, x459, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x460, x4, 8), x461, 8), x459, 8),
        32515,
        2,
    )?;
    let x462: BytePoly_1 = bigint_nondet_rem!(ctx, x400, x5, 1);
    let x463: BytePoly_4 = bigint_nondet_quot!(ctx, x400, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x463, x5, 5), x462, 5), x400, 5),
        32515,
        2,
    )?;
    let x464: BytePoly_1 = bigint_sub!(x6, x462, 1);
    eqz(ctx, &bigint_mul!(x462, x464, 2), 8131, 2)?;
    let x465: BytePoly_4 = bigint_add!(bigint_sub!(x455, x425, 4), x4, 4);
    let x466: BytePoly_4 = bigint_nondet_inv!(ctx, x465, x4, 4);
    let x467: BytePoly_8 = bigint_mul!(x465, x466, 8);
    let x468: BytePoly_9 = bigint_nondet_quot!(ctx, x467, x4, 9);
    let x469: BytePoly_4 = bigint_nondet_rem!(ctx, x467, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x468, x4, 13), x469, 13), x467, 13),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x469, x1, 4), 34, 1)?;
    let x470: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x461, x427, 4), x4, 4), x466, 8);
    let x471: BytePoly_9 = bigint_nondet_quot!(ctx, x470, x4, 9);
    let x472: BytePoly_4 = bigint_nondet_rem!(ctx, x470, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x471, x4, 13), x472, 13), x470, 13),
        73156,
        4,
    )?;
    let x473: BytePoly_8 = bigint_add!(bigint_sub!(x427, bigint_mul!(x472, x425, 8), 8), x4, 8);
    let x474: BytePoly_8 = bigint_nondet_quot!(ctx, x473, x4, 8);
    let x475: BytePoly_4 = bigint_nondet_rem!(ctx, x473, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x474, x4, 12), x475, 12), x473, 12),
        65028,
        4,
    )?;
    let x476: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x472, x472, 8), x425, 8), x4, 8),
            x455,
            8
        ),
        x4,
        8
    );
    let x477: BytePoly_9 = bigint_nondet_quot!(ctx, x476, x4, 9);
    let x478: BytePoly_4 = bigint_nondet_rem!(ctx, x476, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x477, x4, 13), x478, 13), x476, 13),
        73156,
        4,
    )?;
    let x479: BytePoly_8 = bigint_mul!(x472, x478, 8);
    let x480: BytePoly_9 = bigint_nondet_quot!(ctx, x479, x4, 9);
    let x481: BytePoly_4 = bigint_nondet_rem!(ctx, x479, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x480, x4, 13), x481, 13), x479, 13),
        73156,
        4,
    )?;
    let x482: BytePoly_4 = bigint_add!(bigint_sub!(x4, bigint_add!(x481, x475, 4), 4), x4, 4);
    let x483: BytePoly_4 = bigint_nondet_quot!(ctx, x482, x4, 4);
    let x484: BytePoly_4 = bigint_nondet_rem!(ctx, x482, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x483, x4, 8), x484, 8), x482, 8),
        32515,
        2,
    )?;
    let x485: BytePoly_5 = bigint_add!(bigint_mul!(x478, x462, 5), bigint_mul!(x425, x464, 5), 5);
    let x486: BytePoly_5 = bigint_add!(bigint_mul!(x484, x462, 5), bigint_mul!(x427, x464, 5), 5);
    let x487: BytePoly_6 = bigint_nondet_quot!(ctx, x485, x4, 6);
    let x488: BytePoly_4 = bigint_nondet_rem!(ctx, x485, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x487, x4, 10), x488, 10), x485, 10),
        48771,
        4,
    )?;
    let x489: BytePoly_6 = bigint_nondet_quot!(ctx, x486, x4, 6);
    let x490: BytePoly_4 = bigint_nondet_rem!(ctx, x486, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x489, x4, 10), x490, 10), x486, 10),
        48771,
        4,
    )?;
    let x491: BytePoly_8 = bigint_mul!(x455, x455, 8);
    let x492: BytePoly_9 = bigint_nondet_quot!(ctx, x491, x4, 9);
    let x493: BytePoly_4 = bigint_nondet_rem!(ctx, x491, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x492, x4, 13), x493, 13), x491, 13),
        73156,
        4,
    )?;
    let x494: BytePoly_5 = bigint_add!(bigint_mul!(x493, x0, 5), x3, 5);
    let x495: BytePoly_6 = bigint_nondet_quot!(ctx, x494, x4, 6);
    let x496: BytePoly_4 = bigint_nondet_rem!(ctx, x494, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x495, x4, 10), x496, 10), x494, 10),
        48771,
        4,
    )?;
    let x497: BytePoly_4 = bigint_add!(x461, x461, 4);
    let x498: BytePoly_4 = bigint_nondet_quot!(ctx, x497, x4, 4);
    let x499: BytePoly_4 = bigint_nondet_rem!(ctx, x497, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x498, x4, 8), x499, 8), x497, 8),
        32515,
        2,
    )?;
    let x500: BytePoly_4 = bigint_nondet_inv!(ctx, x499, x4, 4);
    let x501: BytePoly_8 = bigint_mul!(x499, x500, 8);
    let x502: BytePoly_9 = bigint_nondet_quot!(ctx, x501, x4, 9);
    let x503: BytePoly_4 = bigint_nondet_rem!(ctx, x501, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x502, x4, 13), x503, 13), x501, 13),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x503, x6, 4), 34, 1)?;
    let x504: BytePoly_8 = bigint_mul!(x496, x500, 8);
    let x505: BytePoly_9 = bigint_nondet_quot!(ctx, x504, x4, 9);
    let x506: BytePoly_4 = bigint_nondet_rem!(ctx, x504, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x505, x4, 13), x506, 13), x504, 13),
        73156,
        4,
    )?;
    let x507: BytePoly_8 = bigint_mul!(x506, x455, 8);
    let x508: BytePoly_9 = bigint_nondet_quot!(ctx, x507, x4, 9);
    let x509: BytePoly_4 = bigint_nondet_rem!(ctx, x507, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x508, x4, 13), x509, 13), x507, 13),
        73156,
        4,
    )?;
    let x510: BytePoly_4 = bigint_add!(bigint_sub!(x461, x509, 4), x4, 4);
    let x511: BytePoly_4 = bigint_nondet_quot!(ctx, x510, x4, 4);
    let x512: BytePoly_4 = bigint_nondet_rem!(ctx, x510, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x511, x4, 8), x512, 8), x510, 8),
        32515,
        2,
    )?;
    let x513: BytePoly_8 = bigint_mul!(x506, x506, 8);
    let x514: BytePoly_9 = bigint_nondet_quot!(ctx, x513, x4, 9);
    let x515: BytePoly_4 = bigint_nondet_rem!(ctx, x513, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x514, x4, 13), x515, 13), x513, 13),
        73156,
        4,
    )?;
    let x516: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x515, x455, 4), x4, 4), x455, 4),
        x4,
        4
    );
    let x517: BytePoly_4 = bigint_nondet_quot!(ctx, x516, x4, 4);
    let x518: BytePoly_4 = bigint_nondet_rem!(ctx, x516, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x517, x4, 8), x518, 8), x516, 8),
        32515,
        2,
    )?;
    let x519: BytePoly_8 = bigint_mul!(x506, x518, 8);
    let x520: BytePoly_9 = bigint_nondet_quot!(ctx, x519, x4, 9);
    let x521: BytePoly_4 = bigint_nondet_rem!(ctx, x519, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x520, x4, 13), x521, 13), x519, 13),
        73156,
        4,
    )?;
    let x522: BytePoly_4 = bigint_add!(bigint_sub!(x4, bigint_add!(x521, x512, 4), 4), x4, 4);
    let x523: BytePoly_4 = bigint_nondet_quot!(ctx, x522, x4, 4);
    let x524: BytePoly_4 = bigint_nondet_rem!(ctx, x522, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x523, x4, 8), x524, 8), x522, 8),
        32515,
        2,
    )?;
    let x525: BytePoly_1 = bigint_nondet_rem!(ctx, x463, x5, 1);
    let x526: BytePoly_4 = bigint_nondet_quot!(ctx, x463, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x526, x5, 5), x525, 5), x463, 5),
        32515,
        2,
    )?;
    let x527: BytePoly_1 = bigint_sub!(x6, x525, 1);
    eqz(ctx, &bigint_mul!(x525, x527, 2), 8131, 2)?;
    let x528: BytePoly_4 = bigint_add!(bigint_sub!(x518, x488, 4), x4, 4);
    let x529: BytePoly_4 = bigint_nondet_inv!(ctx, x528, x4, 4);
    let x530: BytePoly_8 = bigint_mul!(x528, x529, 8);
    let x531: BytePoly_9 = bigint_nondet_quot!(ctx, x530, x4, 9);
    let x532: BytePoly_4 = bigint_nondet_rem!(ctx, x530, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x531, x4, 13), x532, 13), x530, 13),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x532, x1, 4), 34, 1)?;
    let x533: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x524, x490, 4), x4, 4), x529, 8);
    let x534: BytePoly_9 = bigint_nondet_quot!(ctx, x533, x4, 9);
    let x535: BytePoly_4 = bigint_nondet_rem!(ctx, x533, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x534, x4, 13), x535, 13), x533, 13),
        73156,
        4,
    )?;
    let x536: BytePoly_8 = bigint_add!(bigint_sub!(x490, bigint_mul!(x535, x488, 8), 8), x4, 8);
    let x537: BytePoly_8 = bigint_nondet_quot!(ctx, x536, x4, 8);
    let x538: BytePoly_4 = bigint_nondet_rem!(ctx, x536, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x537, x4, 12), x538, 12), x536, 12),
        65028,
        4,
    )?;
    let x539: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x535, x535, 8), x488, 8), x4, 8),
            x518,
            8
        ),
        x4,
        8
    );
    let x540: BytePoly_9 = bigint_nondet_quot!(ctx, x539, x4, 9);
    let x541: BytePoly_4 = bigint_nondet_rem!(ctx, x539, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x540, x4, 13), x541, 13), x539, 13),
        73156,
        4,
    )?;
    let x542: BytePoly_8 = bigint_mul!(x535, x541, 8);
    let x543: BytePoly_9 = bigint_nondet_quot!(ctx, x542, x4, 9);
    let x544: BytePoly_4 = bigint_nondet_rem!(ctx, x542, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x543, x4, 13), x544, 13), x542, 13),
        73156,
        4,
    )?;
    let x545: BytePoly_4 = bigint_add!(bigint_sub!(x4, bigint_add!(x544, x538, 4), 4), x4, 4);
    let x546: BytePoly_4 = bigint_nondet_quot!(ctx, x545, x4, 4);
    let x547: BytePoly_4 = bigint_nondet_rem!(ctx, x545, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x546, x4, 8), x547, 8), x545, 8),
        32515,
        2,
    )?;
    let x548: BytePoly_5 = bigint_add!(bigint_mul!(x541, x525, 5), bigint_mul!(x488, x527, 5), 5);
    let x549: BytePoly_5 = bigint_add!(bigint_mul!(x547, x525, 5), bigint_mul!(x490, x527, 5), 5);
    let x550: BytePoly_6 = bigint_nondet_quot!(ctx, x548, x4, 6);
    let x551: BytePoly_4 = bigint_nondet_rem!(ctx, x548, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x550, x4, 10), x551, 10), x548, 10),
        48771,
        4,
    )?;
    let x552: BytePoly_6 = bigint_nondet_quot!(ctx, x549, x4, 6);
    let x553: BytePoly_4 = bigint_nondet_rem!(ctx, x549, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x552, x4, 10), x553, 10), x549, 10),
        48771,
        4,
    )?;
    let x554: BytePoly_8 = bigint_mul!(x518, x518, 8);
    let x555: BytePoly_9 = bigint_nondet_quot!(ctx, x554, x4, 9);
    let x556: BytePoly_4 = bigint_nondet_rem!(ctx, x554, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x555, x4, 13), x556, 13), x554, 13),
        73156,
        4,
    )?;
    let x557: BytePoly_5 = bigint_add!(bigint_mul!(x556, x0, 5), x3, 5);
    let x558: BytePoly_6 = bigint_nondet_quot!(ctx, x557, x4, 6);
    let x559: BytePoly_4 = bigint_nondet_rem!(ctx, x557, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x558, x4, 10), x559, 10), x557, 10),
        48771,
        4,
    )?;
    let x560: BytePoly_4 = bigint_add!(x524, x524, 4);
    let x561: BytePoly_4 = bigint_nondet_quot!(ctx, x560, x4, 4);
    let x562: BytePoly_4 = bigint_nondet_rem!(ctx, x560, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x561, x4, 8), x562, 8), x560, 8),
        32515,
        2,
    )?;
    let x563: BytePoly_4 = bigint_nondet_inv!(ctx, x562, x4, 4);
    let x564: BytePoly_8 = bigint_mul!(x562, x563, 8);
    let x565: BytePoly_9 = bigint_nondet_quot!(ctx, x564, x4, 9);
    let x566: BytePoly_4 = bigint_nondet_rem!(ctx, x564, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x565, x4, 13), x566, 13), x564, 13),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x566, x6, 4), 34, 1)?;
    let x567: BytePoly_8 = bigint_mul!(x559, x563, 8);
    let x568: BytePoly_9 = bigint_nondet_quot!(ctx, x567, x4, 9);
    let x569: BytePoly_4 = bigint_nondet_rem!(ctx, x567, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x568, x4, 13), x569, 13), x567, 13),
        73156,
        4,
    )?;
    let x570: BytePoly_8 = bigint_mul!(x569, x518, 8);
    let x571: BytePoly_9 = bigint_nondet_quot!(ctx, x570, x4, 9);
    let x572: BytePoly_4 = bigint_nondet_rem!(ctx, x570, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x571, x4, 13), x572, 13), x570, 13),
        73156,
        4,
    )?;
    let x573: BytePoly_4 = bigint_add!(bigint_sub!(x524, x572, 4), x4, 4);
    let x574: BytePoly_4 = bigint_nondet_quot!(ctx, x573, x4, 4);
    let x575: BytePoly_4 = bigint_nondet_rem!(ctx, x573, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x574, x4, 8), x575, 8), x573, 8),
        32515,
        2,
    )?;
    let x576: BytePoly_8 = bigint_mul!(x569, x569, 8);
    let x577: BytePoly_9 = bigint_nondet_quot!(ctx, x576, x4, 9);
    let x578: BytePoly_4 = bigint_nondet_rem!(ctx, x576, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x577, x4, 13), x578, 13), x576, 13),
        73156,
        4,
    )?;
    let x579: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x578, x518, 4), x4, 4), x518, 4),
        x4,
        4
    );
    let x580: BytePoly_4 = bigint_nondet_quot!(ctx, x579, x4, 4);
    let x581: BytePoly_4 = bigint_nondet_rem!(ctx, x579, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x580, x4, 8), x581, 8), x579, 8),
        32515,
        2,
    )?;
    let x582: BytePoly_8 = bigint_mul!(x569, x581, 8);
    let x583: BytePoly_9 = bigint_nondet_quot!(ctx, x582, x4, 9);
    let x584: BytePoly_4 = bigint_nondet_rem!(ctx, x582, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x583, x4, 13), x584, 13), x582, 13),
        73156,
        4,
    )?;
    let x585: BytePoly_4 = bigint_add!(bigint_sub!(x4, bigint_add!(x584, x575, 4), 4), x4, 4);
    let x586: BytePoly_4 = bigint_nondet_quot!(ctx, x585, x4, 4);
    let x587: BytePoly_4 = bigint_nondet_rem!(ctx, x585, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x586, x4, 8), x587, 8), x585, 8),
        32515,
        2,
    )?;
    let x588: BytePoly_1 = bigint_nondet_rem!(ctx, x526, x5, 1);
    let x589: BytePoly_4 = bigint_nondet_quot!(ctx, x526, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x589, x5, 5), x588, 5), x526, 5),
        32515,
        2,
    )?;
    let x590: BytePoly_1 = bigint_sub!(x6, x588, 1);
    eqz(ctx, &bigint_mul!(x588, x590, 2), 8131, 2)?;
    let x591: BytePoly_4 = bigint_add!(bigint_sub!(x581, x551, 4), x4, 4);
    let x592: BytePoly_4 = bigint_nondet_inv!(ctx, x591, x4, 4);
    let x593: BytePoly_8 = bigint_mul!(x591, x592, 8);
    let x594: BytePoly_9 = bigint_nondet_quot!(ctx, x593, x4, 9);
    let x595: BytePoly_4 = bigint_nondet_rem!(ctx, x593, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x594, x4, 13), x595, 13), x593, 13),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x595, x1, 4), 34, 1)?;
    let x596: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x587, x553, 4), x4, 4), x592, 8);
    let x597: BytePoly_9 = bigint_nondet_quot!(ctx, x596, x4, 9);
    let x598: BytePoly_4 = bigint_nondet_rem!(ctx, x596, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x597, x4, 13), x598, 13), x596, 13),
        73156,
        4,
    )?;
    let x599: BytePoly_8 = bigint_add!(bigint_sub!(x553, bigint_mul!(x598, x551, 8), 8), x4, 8);
    let x600: BytePoly_8 = bigint_nondet_quot!(ctx, x599, x4, 8);
    let x601: BytePoly_4 = bigint_nondet_rem!(ctx, x599, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x600, x4, 12), x601, 12), x599, 12),
        65028,
        4,
    )?;
    let x602: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x598, x598, 8), x551, 8), x4, 8),
            x581,
            8
        ),
        x4,
        8
    );
    let x603: BytePoly_9 = bigint_nondet_quot!(ctx, x602, x4, 9);
    let x604: BytePoly_4 = bigint_nondet_rem!(ctx, x602, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x603, x4, 13), x604, 13), x602, 13),
        73156,
        4,
    )?;
    let x605: BytePoly_8 = bigint_mul!(x598, x604, 8);
    let x606: BytePoly_9 = bigint_nondet_quot!(ctx, x605, x4, 9);
    let x607: BytePoly_4 = bigint_nondet_rem!(ctx, x605, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x606, x4, 13), x607, 13), x605, 13),
        73156,
        4,
    )?;
    let x608: BytePoly_4 = bigint_add!(bigint_sub!(x4, bigint_add!(x607, x601, 4), 4), x4, 4);
    let x609: BytePoly_4 = bigint_nondet_quot!(ctx, x608, x4, 4);
    let x610: BytePoly_4 = bigint_nondet_rem!(ctx, x608, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x609, x4, 8), x610, 8), x608, 8),
        32515,
        2,
    )?;
    let x611: BytePoly_5 = bigint_add!(bigint_mul!(x604, x588, 5), bigint_mul!(x551, x590, 5), 5);
    let x612: BytePoly_5 = bigint_add!(bigint_mul!(x610, x588, 5), bigint_mul!(x553, x590, 5), 5);
    let x613: BytePoly_6 = bigint_nondet_quot!(ctx, x611, x4, 6);
    let x614: BytePoly_4 = bigint_nondet_rem!(ctx, x611, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x613, x4, 10), x614, 10), x611, 10),
        48771,
        4,
    )?;
    let x615: BytePoly_6 = bigint_nondet_quot!(ctx, x612, x4, 6);
    let x616: BytePoly_4 = bigint_nondet_rem!(ctx, x612, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x615, x4, 10), x616, 10), x612, 10),
        48771,
        4,
    )?;
    let x617: BytePoly_8 = bigint_mul!(x581, x581, 8);
    let x618: BytePoly_9 = bigint_nondet_quot!(ctx, x617, x4, 9);
    let x619: BytePoly_4 = bigint_nondet_rem!(ctx, x617, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x618, x4, 13), x619, 13), x617, 13),
        73156,
        4,
    )?;
    let x620: BytePoly_5 = bigint_add!(bigint_mul!(x619, x0, 5), x3, 5);
    let x621: BytePoly_6 = bigint_nondet_quot!(ctx, x620, x4, 6);
    let x622: BytePoly_4 = bigint_nondet_rem!(ctx, x620, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x621, x4, 10), x622, 10), x620, 10),
        48771,
        4,
    )?;
    let x623: BytePoly_4 = bigint_add!(x587, x587, 4);
    let x624: BytePoly_4 = bigint_nondet_quot!(ctx, x623, x4, 4);
    let x625: BytePoly_4 = bigint_nondet_rem!(ctx, x623, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x624, x4, 8), x625, 8), x623, 8),
        32515,
        2,
    )?;
    let x626: BytePoly_4 = bigint_nondet_inv!(ctx, x625, x4, 4);
    let x627: BytePoly_8 = bigint_mul!(x625, x626, 8);
    let x628: BytePoly_9 = bigint_nondet_quot!(ctx, x627, x4, 9);
    let x629: BytePoly_4 = bigint_nondet_rem!(ctx, x627, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x628, x4, 13), x629, 13), x627, 13),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x629, x6, 4), 34, 1)?;
    let x630: BytePoly_8 = bigint_mul!(x622, x626, 8);
    let x631: BytePoly_9 = bigint_nondet_quot!(ctx, x630, x4, 9);
    let x632: BytePoly_4 = bigint_nondet_rem!(ctx, x630, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x631, x4, 13), x632, 13), x630, 13),
        73156,
        4,
    )?;
    let x633: BytePoly_8 = bigint_mul!(x632, x581, 8);
    let x634: BytePoly_9 = bigint_nondet_quot!(ctx, x633, x4, 9);
    let x635: BytePoly_4 = bigint_nondet_rem!(ctx, x633, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x634, x4, 13), x635, 13), x633, 13),
        73156,
        4,
    )?;
    let x636: BytePoly_4 = bigint_add!(bigint_sub!(x587, x635, 4), x4, 4);
    let x637: BytePoly_4 = bigint_nondet_quot!(ctx, x636, x4, 4);
    let x638: BytePoly_4 = bigint_nondet_rem!(ctx, x636, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x637, x4, 8), x638, 8), x636, 8),
        32515,
        2,
    )?;
    let x639: BytePoly_8 = bigint_mul!(x632, x632, 8);
    let x640: BytePoly_9 = bigint_nondet_quot!(ctx, x639, x4, 9);
    let x641: BytePoly_4 = bigint_nondet_rem!(ctx, x639, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x640, x4, 13), x641, 13), x639, 13),
        73156,
        4,
    )?;
    let x642: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x641, x581, 4), x4, 4), x581, 4),
        x4,
        4
    );
    let x643: BytePoly_4 = bigint_nondet_quot!(ctx, x642, x4, 4);
    let x644: BytePoly_4 = bigint_nondet_rem!(ctx, x642, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x643, x4, 8), x644, 8), x642, 8),
        32515,
        2,
    )?;
    let x645: BytePoly_8 = bigint_mul!(x632, x644, 8);
    let x646: BytePoly_9 = bigint_nondet_quot!(ctx, x645, x4, 9);
    let x647: BytePoly_4 = bigint_nondet_rem!(ctx, x645, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x646, x4, 13), x647, 13), x645, 13),
        73156,
        4,
    )?;
    let x648: BytePoly_4 = bigint_add!(bigint_sub!(x4, bigint_add!(x647, x638, 4), 4), x4, 4);
    let x649: BytePoly_4 = bigint_nondet_quot!(ctx, x648, x4, 4);
    let x650: BytePoly_4 = bigint_nondet_rem!(ctx, x648, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x649, x4, 8), x650, 8), x648, 8),
        32515,
        2,
    )?;
    let x651: BytePoly_1 = bigint_nondet_rem!(ctx, x589, x5, 1);
    let x652: BytePoly_4 = bigint_nondet_quot!(ctx, x589, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x652, x5, 5), x651, 5), x589, 5),
        32515,
        2,
    )?;
    let x653: BytePoly_1 = bigint_sub!(x6, x651, 1);
    eqz(ctx, &bigint_mul!(x651, x653, 2), 8131, 2)?;
    let x654: BytePoly_4 = bigint_add!(bigint_sub!(x644, x614, 4), x4, 4);
    let x655: BytePoly_4 = bigint_nondet_inv!(ctx, x654, x4, 4);
    let x656: BytePoly_8 = bigint_mul!(x654, x655, 8);
    let x657: BytePoly_9 = bigint_nondet_quot!(ctx, x656, x4, 9);
    let x658: BytePoly_4 = bigint_nondet_rem!(ctx, x656, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x657, x4, 13), x658, 13), x656, 13),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x658, x1, 4), 34, 1)?;
    let x659: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x650, x616, 4), x4, 4), x655, 8);
    let x660: BytePoly_9 = bigint_nondet_quot!(ctx, x659, x4, 9);
    let x661: BytePoly_4 = bigint_nondet_rem!(ctx, x659, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x660, x4, 13), x661, 13), x659, 13),
        73156,
        4,
    )?;
    let x662: BytePoly_8 = bigint_add!(bigint_sub!(x616, bigint_mul!(x661, x614, 8), 8), x4, 8);
    let x663: BytePoly_8 = bigint_nondet_quot!(ctx, x662, x4, 8);
    let x664: BytePoly_4 = bigint_nondet_rem!(ctx, x662, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x663, x4, 12), x664, 12), x662, 12),
        65028,
        4,
    )?;
    let x665: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x661, x661, 8), x614, 8), x4, 8),
            x644,
            8
        ),
        x4,
        8
    );
    let x666: BytePoly_9 = bigint_nondet_quot!(ctx, x665, x4, 9);
    let x667: BytePoly_4 = bigint_nondet_rem!(ctx, x665, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x666, x4, 13), x667, 13), x665, 13),
        73156,
        4,
    )?;
    let x668: BytePoly_8 = bigint_mul!(x661, x667, 8);
    let x669: BytePoly_9 = bigint_nondet_quot!(ctx, x668, x4, 9);
    let x670: BytePoly_4 = bigint_nondet_rem!(ctx, x668, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x669, x4, 13), x670, 13), x668, 13),
        73156,
        4,
    )?;
    let x671: BytePoly_4 = bigint_add!(bigint_sub!(x4, bigint_add!(x670, x664, 4), 4), x4, 4);
    let x672: BytePoly_4 = bigint_nondet_quot!(ctx, x671, x4, 4);
    let x673: BytePoly_4 = bigint_nondet_rem!(ctx, x671, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x672, x4, 8), x673, 8), x671, 8),
        32515,
        2,
    )?;
    let x674: BytePoly_5 = bigint_add!(bigint_mul!(x667, x651, 5), bigint_mul!(x614, x653, 5), 5);
    let x675: BytePoly_5 = bigint_add!(bigint_mul!(x673, x651, 5), bigint_mul!(x616, x653, 5), 5);
    let x676: BytePoly_6 = bigint_nondet_quot!(ctx, x674, x4, 6);
    let x677: BytePoly_4 = bigint_nondet_rem!(ctx, x674, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x676, x4, 10), x677, 10), x674, 10),
        48771,
        4,
    )?;
    let x678: BytePoly_6 = bigint_nondet_quot!(ctx, x675, x4, 6);
    let x679: BytePoly_4 = bigint_nondet_rem!(ctx, x675, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x678, x4, 10), x679, 10), x675, 10),
        48771,
        4,
    )?;
    let x680: BytePoly_8 = bigint_mul!(x644, x644, 8);
    let x681: BytePoly_9 = bigint_nondet_quot!(ctx, x680, x4, 9);
    let x682: BytePoly_4 = bigint_nondet_rem!(ctx, x680, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x681, x4, 13), x682, 13), x680, 13),
        73156,
        4,
    )?;
    let x683: BytePoly_5 = bigint_add!(bigint_mul!(x682, x0, 5), x3, 5);
    let x684: BytePoly_6 = bigint_nondet_quot!(ctx, x683, x4, 6);
    let x685: BytePoly_4 = bigint_nondet_rem!(ctx, x683, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x684, x4, 10), x685, 10), x683, 10),
        48771,
        4,
    )?;
    let x686: BytePoly_4 = bigint_add!(x650, x650, 4);
    let x687: BytePoly_4 = bigint_nondet_quot!(ctx, x686, x4, 4);
    let x688: BytePoly_4 = bigint_nondet_rem!(ctx, x686, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x687, x4, 8), x688, 8), x686, 8),
        32515,
        2,
    )?;
    let x689: BytePoly_4 = bigint_nondet_inv!(ctx, x688, x4, 4);
    let x690: BytePoly_8 = bigint_mul!(x688, x689, 8);
    let x691: BytePoly_9 = bigint_nondet_quot!(ctx, x690, x4, 9);
    let x692: BytePoly_4 = bigint_nondet_rem!(ctx, x690, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x691, x4, 13), x692, 13), x690, 13),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x692, x6, 4), 34, 1)?;
    let x693: BytePoly_8 = bigint_mul!(x685, x689, 8);
    let x694: BytePoly_9 = bigint_nondet_quot!(ctx, x693, x4, 9);
    let x695: BytePoly_4 = bigint_nondet_rem!(ctx, x693, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x694, x4, 13), x695, 13), x693, 13),
        73156,
        4,
    )?;
    let x696: BytePoly_8 = bigint_mul!(x695, x644, 8);
    let x697: BytePoly_9 = bigint_nondet_quot!(ctx, x696, x4, 9);
    let x698: BytePoly_4 = bigint_nondet_rem!(ctx, x696, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x697, x4, 13), x698, 13), x696, 13),
        73156,
        4,
    )?;
    let x699: BytePoly_4 = bigint_add!(bigint_sub!(x650, x698, 4), x4, 4);
    let x700: BytePoly_4 = bigint_nondet_quot!(ctx, x699, x4, 4);
    let x701: BytePoly_4 = bigint_nondet_rem!(ctx, x699, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x700, x4, 8), x701, 8), x699, 8),
        32515,
        2,
    )?;
    let x702: BytePoly_8 = bigint_mul!(x695, x695, 8);
    let x703: BytePoly_9 = bigint_nondet_quot!(ctx, x702, x4, 9);
    let x704: BytePoly_4 = bigint_nondet_rem!(ctx, x702, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x703, x4, 13), x704, 13), x702, 13),
        73156,
        4,
    )?;
    let x705: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x704, x644, 4), x4, 4), x644, 4),
        x4,
        4
    );
    let x706: BytePoly_4 = bigint_nondet_quot!(ctx, x705, x4, 4);
    let x707: BytePoly_4 = bigint_nondet_rem!(ctx, x705, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x706, x4, 8), x707, 8), x705, 8),
        32515,
        2,
    )?;
    let x708: BytePoly_8 = bigint_mul!(x695, x707, 8);
    let x709: BytePoly_9 = bigint_nondet_quot!(ctx, x708, x4, 9);
    let x710: BytePoly_4 = bigint_nondet_rem!(ctx, x708, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x709, x4, 13), x710, 13), x708, 13),
        73156,
        4,
    )?;
    let x711: BytePoly_4 = bigint_add!(bigint_sub!(x4, bigint_add!(x710, x701, 4), 4), x4, 4);
    let x712: BytePoly_4 = bigint_nondet_quot!(ctx, x711, x4, 4);
    let x713: BytePoly_4 = bigint_nondet_rem!(ctx, x711, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x712, x4, 8), x713, 8), x711, 8),
        32515,
        2,
    )?;
    let x714: BytePoly_1 = bigint_nondet_rem!(ctx, x652, x5, 1);
    let x715: BytePoly_4 = bigint_nondet_quot!(ctx, x652, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x715, x5, 5), x714, 5), x652, 5),
        32515,
        2,
    )?;
    let x716: BytePoly_1 = bigint_sub!(x6, x714, 1);
    eqz(ctx, &bigint_mul!(x714, x716, 2), 8131, 2)?;
    let x717: BytePoly_4 = bigint_add!(bigint_sub!(x707, x677, 4), x4, 4);
    let x718: BytePoly_4 = bigint_nondet_inv!(ctx, x717, x4, 4);
    let x719: BytePoly_8 = bigint_mul!(x717, x718, 8);
    let x720: BytePoly_9 = bigint_nondet_quot!(ctx, x719, x4, 9);
    let x721: BytePoly_4 = bigint_nondet_rem!(ctx, x719, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x720, x4, 13), x721, 13), x719, 13),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x721, x1, 4), 34, 1)?;
    let x722: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x713, x679, 4), x4, 4), x718, 8);
    let x723: BytePoly_9 = bigint_nondet_quot!(ctx, x722, x4, 9);
    let x724: BytePoly_4 = bigint_nondet_rem!(ctx, x722, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x723, x4, 13), x724, 13), x722, 13),
        73156,
        4,
    )?;
    let x725: BytePoly_8 = bigint_add!(bigint_sub!(x679, bigint_mul!(x724, x677, 8), 8), x4, 8);
    let x726: BytePoly_8 = bigint_nondet_quot!(ctx, x725, x4, 8);
    let x727: BytePoly_4 = bigint_nondet_rem!(ctx, x725, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x726, x4, 12), x727, 12), x725, 12),
        65028,
        4,
    )?;
    let x728: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x724, x724, 8), x677, 8), x4, 8),
            x707,
            8
        ),
        x4,
        8
    );
    let x729: BytePoly_9 = bigint_nondet_quot!(ctx, x728, x4, 9);
    let x730: BytePoly_4 = bigint_nondet_rem!(ctx, x728, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x729, x4, 13), x730, 13), x728, 13),
        73156,
        4,
    )?;
    let x731: BytePoly_8 = bigint_mul!(x724, x730, 8);
    let x732: BytePoly_9 = bigint_nondet_quot!(ctx, x731, x4, 9);
    let x733: BytePoly_4 = bigint_nondet_rem!(ctx, x731, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x732, x4, 13), x733, 13), x731, 13),
        73156,
        4,
    )?;
    let x734: BytePoly_4 = bigint_add!(bigint_sub!(x4, bigint_add!(x733, x727, 4), 4), x4, 4);
    let x735: BytePoly_4 = bigint_nondet_quot!(ctx, x734, x4, 4);
    let x736: BytePoly_4 = bigint_nondet_rem!(ctx, x734, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x735, x4, 8), x736, 8), x734, 8),
        32515,
        2,
    )?;
    let x737: BytePoly_5 = bigint_add!(bigint_mul!(x730, x714, 5), bigint_mul!(x677, x716, 5), 5);
    let x738: BytePoly_5 = bigint_add!(bigint_mul!(x736, x714, 5), bigint_mul!(x679, x716, 5), 5);
    let x739: BytePoly_6 = bigint_nondet_quot!(ctx, x737, x4, 6);
    let x740: BytePoly_4 = bigint_nondet_rem!(ctx, x737, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x739, x4, 10), x740, 10), x737, 10),
        48771,
        4,
    )?;
    let x741: BytePoly_6 = bigint_nondet_quot!(ctx, x738, x4, 6);
    let x742: BytePoly_4 = bigint_nondet_rem!(ctx, x738, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x741, x4, 10), x742, 10), x738, 10),
        48771,
        4,
    )?;
    let x743: BytePoly_8 = bigint_mul!(x707, x707, 8);
    let x744: BytePoly_9 = bigint_nondet_quot!(ctx, x743, x4, 9);
    let x745: BytePoly_4 = bigint_nondet_rem!(ctx, x743, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x744, x4, 13), x745, 13), x743, 13),
        73156,
        4,
    )?;
    let x746: BytePoly_5 = bigint_add!(bigint_mul!(x745, x0, 5), x3, 5);
    let x747: BytePoly_6 = bigint_nondet_quot!(ctx, x746, x4, 6);
    let x748: BytePoly_4 = bigint_nondet_rem!(ctx, x746, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x747, x4, 10), x748, 10), x746, 10),
        48771,
        4,
    )?;
    let x749: BytePoly_4 = bigint_add!(x713, x713, 4);
    let x750: BytePoly_4 = bigint_nondet_quot!(ctx, x749, x4, 4);
    let x751: BytePoly_4 = bigint_nondet_rem!(ctx, x749, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x750, x4, 8), x751, 8), x749, 8),
        32515,
        2,
    )?;
    let x752: BytePoly_4 = bigint_nondet_inv!(ctx, x751, x4, 4);
    let x753: BytePoly_8 = bigint_mul!(x751, x752, 8);
    let x754: BytePoly_9 = bigint_nondet_quot!(ctx, x753, x4, 9);
    let x755: BytePoly_4 = bigint_nondet_rem!(ctx, x753, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x754, x4, 13), x755, 13), x753, 13),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x755, x6, 4), 34, 1)?;
    let x756: BytePoly_8 = bigint_mul!(x748, x752, 8);
    let x757: BytePoly_9 = bigint_nondet_quot!(ctx, x756, x4, 9);
    let x758: BytePoly_4 = bigint_nondet_rem!(ctx, x756, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x757, x4, 13), x758, 13), x756, 13),
        73156,
        4,
    )?;
    let x759: BytePoly_8 = bigint_mul!(x758, x707, 8);
    let x760: BytePoly_9 = bigint_nondet_quot!(ctx, x759, x4, 9);
    let x761: BytePoly_4 = bigint_nondet_rem!(ctx, x759, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x760, x4, 13), x761, 13), x759, 13),
        73156,
        4,
    )?;
    let x762: BytePoly_4 = bigint_add!(bigint_sub!(x713, x761, 4), x4, 4);
    let x763: BytePoly_4 = bigint_nondet_quot!(ctx, x762, x4, 4);
    let x764: BytePoly_4 = bigint_nondet_rem!(ctx, x762, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x763, x4, 8), x764, 8), x762, 8),
        32515,
        2,
    )?;
    let x765: BytePoly_8 = bigint_mul!(x758, x758, 8);
    let x766: BytePoly_9 = bigint_nondet_quot!(ctx, x765, x4, 9);
    let x767: BytePoly_4 = bigint_nondet_rem!(ctx, x765, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x766, x4, 13), x767, 13), x765, 13),
        73156,
        4,
    )?;
    let x768: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x767, x707, 4), x4, 4), x707, 4),
        x4,
        4
    );
    let x769: BytePoly_4 = bigint_nondet_quot!(ctx, x768, x4, 4);
    let x770: BytePoly_4 = bigint_nondet_rem!(ctx, x768, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x769, x4, 8), x770, 8), x768, 8),
        32515,
        2,
    )?;
    let x771: BytePoly_8 = bigint_mul!(x758, x770, 8);
    let x772: BytePoly_9 = bigint_nondet_quot!(ctx, x771, x4, 9);
    let x773: BytePoly_4 = bigint_nondet_rem!(ctx, x771, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x772, x4, 13), x773, 13), x771, 13),
        73156,
        4,
    )?;
    let x774: BytePoly_4 = bigint_add!(bigint_sub!(x4, bigint_add!(x773, x764, 4), 4), x4, 4);
    let x775: BytePoly_4 = bigint_nondet_quot!(ctx, x774, x4, 4);
    let x776: BytePoly_4 = bigint_nondet_rem!(ctx, x774, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x775, x4, 8), x776, 8), x774, 8),
        32515,
        2,
    )?;
    let x777: BytePoly_1 = bigint_nondet_rem!(ctx, x715, x5, 1);
    let x778: BytePoly_4 = bigint_nondet_quot!(ctx, x715, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x778, x5, 5), x777, 5), x715, 5),
        32515,
        2,
    )?;
    let x779: BytePoly_1 = bigint_sub!(x6, x777, 1);
    eqz(ctx, &bigint_mul!(x777, x779, 2), 8131, 2)?;
    let x780: BytePoly_4 = bigint_add!(bigint_sub!(x770, x740, 4), x4, 4);
    let x781: BytePoly_4 = bigint_nondet_inv!(ctx, x780, x4, 4);
    let x782: BytePoly_8 = bigint_mul!(x780, x781, 8);
    let x783: BytePoly_9 = bigint_nondet_quot!(ctx, x782, x4, 9);
    let x784: BytePoly_4 = bigint_nondet_rem!(ctx, x782, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x783, x4, 13), x784, 13), x782, 13),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x784, x1, 4), 34, 1)?;
    let x785: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x776, x742, 4), x4, 4), x781, 8);
    let x786: BytePoly_9 = bigint_nondet_quot!(ctx, x785, x4, 9);
    let x787: BytePoly_4 = bigint_nondet_rem!(ctx, x785, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x786, x4, 13), x787, 13), x785, 13),
        73156,
        4,
    )?;
    let x788: BytePoly_8 = bigint_add!(bigint_sub!(x742, bigint_mul!(x787, x740, 8), 8), x4, 8);
    let x789: BytePoly_8 = bigint_nondet_quot!(ctx, x788, x4, 8);
    let x790: BytePoly_4 = bigint_nondet_rem!(ctx, x788, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x789, x4, 12), x790, 12), x788, 12),
        65028,
        4,
    )?;
    let x791: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x787, x787, 8), x740, 8), x4, 8),
            x770,
            8
        ),
        x4,
        8
    );
    let x792: BytePoly_9 = bigint_nondet_quot!(ctx, x791, x4, 9);
    let x793: BytePoly_4 = bigint_nondet_rem!(ctx, x791, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x792, x4, 13), x793, 13), x791, 13),
        73156,
        4,
    )?;
    let x794: BytePoly_8 = bigint_mul!(x787, x793, 8);
    let x795: BytePoly_9 = bigint_nondet_quot!(ctx, x794, x4, 9);
    let x796: BytePoly_4 = bigint_nondet_rem!(ctx, x794, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x795, x4, 13), x796, 13), x794, 13),
        73156,
        4,
    )?;
    let x797: BytePoly_4 = bigint_add!(bigint_sub!(x4, bigint_add!(x796, x790, 4), 4), x4, 4);
    let x798: BytePoly_4 = bigint_nondet_quot!(ctx, x797, x4, 4);
    let x799: BytePoly_4 = bigint_nondet_rem!(ctx, x797, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x798, x4, 8), x799, 8), x797, 8),
        32515,
        2,
    )?;
    let x800: BytePoly_5 = bigint_add!(bigint_mul!(x793, x777, 5), bigint_mul!(x740, x779, 5), 5);
    let x801: BytePoly_5 = bigint_add!(bigint_mul!(x799, x777, 5), bigint_mul!(x742, x779, 5), 5);
    let x802: BytePoly_6 = bigint_nondet_quot!(ctx, x800, x4, 6);
    let x803: BytePoly_4 = bigint_nondet_rem!(ctx, x800, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x802, x4, 10), x803, 10), x800, 10),
        48771,
        4,
    )?;
    let x804: BytePoly_6 = bigint_nondet_quot!(ctx, x801, x4, 6);
    let x805: BytePoly_4 = bigint_nondet_rem!(ctx, x801, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x804, x4, 10), x805, 10), x801, 10),
        48771,
        4,
    )?;
    let x806: BytePoly_8 = bigint_mul!(x770, x770, 8);
    let x807: BytePoly_9 = bigint_nondet_quot!(ctx, x806, x4, 9);
    let x808: BytePoly_4 = bigint_nondet_rem!(ctx, x806, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x807, x4, 13), x808, 13), x806, 13),
        73156,
        4,
    )?;
    let x809: BytePoly_5 = bigint_add!(bigint_mul!(x808, x0, 5), x3, 5);
    let x810: BytePoly_6 = bigint_nondet_quot!(ctx, x809, x4, 6);
    let x811: BytePoly_4 = bigint_nondet_rem!(ctx, x809, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x810, x4, 10), x811, 10), x809, 10),
        48771,
        4,
    )?;
    let x812: BytePoly_4 = bigint_add!(x776, x776, 4);
    let x813: BytePoly_4 = bigint_nondet_quot!(ctx, x812, x4, 4);
    let x814: BytePoly_4 = bigint_nondet_rem!(ctx, x812, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x813, x4, 8), x814, 8), x812, 8),
        32515,
        2,
    )?;
    let x815: BytePoly_4 = bigint_nondet_inv!(ctx, x814, x4, 4);
    let x816: BytePoly_8 = bigint_mul!(x814, x815, 8);
    let x817: BytePoly_9 = bigint_nondet_quot!(ctx, x816, x4, 9);
    let x818: BytePoly_4 = bigint_nondet_rem!(ctx, x816, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x817, x4, 13), x818, 13), x816, 13),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x818, x6, 4), 34, 1)?;
    let x819: BytePoly_8 = bigint_mul!(x811, x815, 8);
    let x820: BytePoly_9 = bigint_nondet_quot!(ctx, x819, x4, 9);
    let x821: BytePoly_4 = bigint_nondet_rem!(ctx, x819, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x820, x4, 13), x821, 13), x819, 13),
        73156,
        4,
    )?;
    let x822: BytePoly_8 = bigint_mul!(x821, x770, 8);
    let x823: BytePoly_9 = bigint_nondet_quot!(ctx, x822, x4, 9);
    let x824: BytePoly_4 = bigint_nondet_rem!(ctx, x822, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x823, x4, 13), x824, 13), x822, 13),
        73156,
        4,
    )?;
    let x825: BytePoly_4 = bigint_add!(bigint_sub!(x776, x824, 4), x4, 4);
    let x826: BytePoly_4 = bigint_nondet_quot!(ctx, x825, x4, 4);
    let x827: BytePoly_4 = bigint_nondet_rem!(ctx, x825, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x826, x4, 8), x827, 8), x825, 8),
        32515,
        2,
    )?;
    let x828: BytePoly_8 = bigint_mul!(x821, x821, 8);
    let x829: BytePoly_9 = bigint_nondet_quot!(ctx, x828, x4, 9);
    let x830: BytePoly_4 = bigint_nondet_rem!(ctx, x828, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x829, x4, 13), x830, 13), x828, 13),
        73156,
        4,
    )?;
    let x831: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x830, x770, 4), x4, 4), x770, 4),
        x4,
        4
    );
    let x832: BytePoly_4 = bigint_nondet_quot!(ctx, x831, x4, 4);
    let x833: BytePoly_4 = bigint_nondet_rem!(ctx, x831, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x832, x4, 8), x833, 8), x831, 8),
        32515,
        2,
    )?;
    let x834: BytePoly_8 = bigint_mul!(x821, x833, 8);
    let x835: BytePoly_9 = bigint_nondet_quot!(ctx, x834, x4, 9);
    let x836: BytePoly_4 = bigint_nondet_rem!(ctx, x834, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x835, x4, 13), x836, 13), x834, 13),
        73156,
        4,
    )?;
    let x837: BytePoly_4 = bigint_add!(bigint_sub!(x4, bigint_add!(x836, x827, 4), 4), x4, 4);
    let x838: BytePoly_4 = bigint_nondet_quot!(ctx, x837, x4, 4);
    let x839: BytePoly_4 = bigint_nondet_rem!(ctx, x837, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x838, x4, 8), x839, 8), x837, 8),
        32515,
        2,
    )?;
    let x840: BytePoly_1 = bigint_nondet_rem!(ctx, x778, x5, 1);
    let x841: BytePoly_4 = bigint_nondet_quot!(ctx, x778, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x841, x5, 5), x840, 5), x778, 5),
        32515,
        2,
    )?;
    let x842: BytePoly_1 = bigint_sub!(x6, x840, 1);
    eqz(ctx, &bigint_mul!(x840, x842, 2), 8131, 2)?;
    let x843: BytePoly_4 = bigint_add!(bigint_sub!(x833, x803, 4), x4, 4);
    let x844: BytePoly_4 = bigint_nondet_inv!(ctx, x843, x4, 4);
    let x845: BytePoly_8 = bigint_mul!(x843, x844, 8);
    let x846: BytePoly_9 = bigint_nondet_quot!(ctx, x845, x4, 9);
    let x847: BytePoly_4 = bigint_nondet_rem!(ctx, x845, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x846, x4, 13), x847, 13), x845, 13),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x847, x1, 4), 34, 1)?;
    let x848: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x839, x805, 4), x4, 4), x844, 8);
    let x849: BytePoly_9 = bigint_nondet_quot!(ctx, x848, x4, 9);
    let x850: BytePoly_4 = bigint_nondet_rem!(ctx, x848, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x849, x4, 13), x850, 13), x848, 13),
        73156,
        4,
    )?;
    let x851: BytePoly_8 = bigint_add!(bigint_sub!(x805, bigint_mul!(x850, x803, 8), 8), x4, 8);
    let x852: BytePoly_8 = bigint_nondet_quot!(ctx, x851, x4, 8);
    let x853: BytePoly_4 = bigint_nondet_rem!(ctx, x851, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x852, x4, 12), x853, 12), x851, 12),
        65028,
        4,
    )?;
    let x854: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x850, x850, 8), x803, 8), x4, 8),
            x833,
            8
        ),
        x4,
        8
    );
    let x855: BytePoly_9 = bigint_nondet_quot!(ctx, x854, x4, 9);
    let x856: BytePoly_4 = bigint_nondet_rem!(ctx, x854, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x855, x4, 13), x856, 13), x854, 13),
        73156,
        4,
    )?;
    let x857: BytePoly_8 = bigint_mul!(x850, x856, 8);
    let x858: BytePoly_9 = bigint_nondet_quot!(ctx, x857, x4, 9);
    let x859: BytePoly_4 = bigint_nondet_rem!(ctx, x857, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x858, x4, 13), x859, 13), x857, 13),
        73156,
        4,
    )?;
    let x860: BytePoly_4 = bigint_add!(bigint_sub!(x4, bigint_add!(x859, x853, 4), 4), x4, 4);
    let x861: BytePoly_4 = bigint_nondet_quot!(ctx, x860, x4, 4);
    let x862: BytePoly_4 = bigint_nondet_rem!(ctx, x860, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x861, x4, 8), x862, 8), x860, 8),
        32515,
        2,
    )?;
    let x863: BytePoly_5 = bigint_add!(bigint_mul!(x856, x840, 5), bigint_mul!(x803, x842, 5), 5);
    let x864: BytePoly_5 = bigint_add!(bigint_mul!(x862, x840, 5), bigint_mul!(x805, x842, 5), 5);
    let x865: BytePoly_6 = bigint_nondet_quot!(ctx, x863, x4, 6);
    let x866: BytePoly_4 = bigint_nondet_rem!(ctx, x863, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x865, x4, 10), x866, 10), x863, 10),
        48771,
        4,
    )?;
    let x867: BytePoly_6 = bigint_nondet_quot!(ctx, x864, x4, 6);
    let x868: BytePoly_4 = bigint_nondet_rem!(ctx, x864, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x867, x4, 10), x868, 10), x864, 10),
        48771,
        4,
    )?;
    let x869: BytePoly_8 = bigint_mul!(x833, x833, 8);
    let x870: BytePoly_9 = bigint_nondet_quot!(ctx, x869, x4, 9);
    let x871: BytePoly_4 = bigint_nondet_rem!(ctx, x869, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x870, x4, 13), x871, 13), x869, 13),
        73156,
        4,
    )?;
    let x872: BytePoly_5 = bigint_add!(bigint_mul!(x871, x0, 5), x3, 5);
    let x873: BytePoly_6 = bigint_nondet_quot!(ctx, x872, x4, 6);
    let x874: BytePoly_4 = bigint_nondet_rem!(ctx, x872, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x873, x4, 10), x874, 10), x872, 10),
        48771,
        4,
    )?;
    let x875: BytePoly_4 = bigint_add!(x839, x839, 4);
    let x876: BytePoly_4 = bigint_nondet_quot!(ctx, x875, x4, 4);
    let x877: BytePoly_4 = bigint_nondet_rem!(ctx, x875, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x876, x4, 8), x877, 8), x875, 8),
        32515,
        2,
    )?;
    let x878: BytePoly_4 = bigint_nondet_inv!(ctx, x877, x4, 4);
    let x879: BytePoly_8 = bigint_mul!(x877, x878, 8);
    let x880: BytePoly_9 = bigint_nondet_quot!(ctx, x879, x4, 9);
    let x881: BytePoly_4 = bigint_nondet_rem!(ctx, x879, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x880, x4, 13), x881, 13), x879, 13),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x881, x6, 4), 34, 1)?;
    let x882: BytePoly_8 = bigint_mul!(x874, x878, 8);
    let x883: BytePoly_9 = bigint_nondet_quot!(ctx, x882, x4, 9);
    let x884: BytePoly_4 = bigint_nondet_rem!(ctx, x882, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x883, x4, 13), x884, 13), x882, 13),
        73156,
        4,
    )?;
    let x885: BytePoly_8 = bigint_mul!(x884, x833, 8);
    let x886: BytePoly_9 = bigint_nondet_quot!(ctx, x885, x4, 9);
    let x887: BytePoly_4 = bigint_nondet_rem!(ctx, x885, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x886, x4, 13), x887, 13), x885, 13),
        73156,
        4,
    )?;
    let x888: BytePoly_4 = bigint_add!(bigint_sub!(x839, x887, 4), x4, 4);
    let x889: BytePoly_4 = bigint_nondet_quot!(ctx, x888, x4, 4);
    let x890: BytePoly_4 = bigint_nondet_rem!(ctx, x888, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x889, x4, 8), x890, 8), x888, 8),
        32515,
        2,
    )?;
    let x891: BytePoly_8 = bigint_mul!(x884, x884, 8);
    let x892: BytePoly_9 = bigint_nondet_quot!(ctx, x891, x4, 9);
    let x893: BytePoly_4 = bigint_nondet_rem!(ctx, x891, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x892, x4, 13), x893, 13), x891, 13),
        73156,
        4,
    )?;
    let x894: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x893, x833, 4), x4, 4), x833, 4),
        x4,
        4
    );
    let x895: BytePoly_4 = bigint_nondet_quot!(ctx, x894, x4, 4);
    let x896: BytePoly_4 = bigint_nondet_rem!(ctx, x894, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x895, x4, 8), x896, 8), x894, 8),
        32515,
        2,
    )?;
    let x897: BytePoly_8 = bigint_mul!(x884, x896, 8);
    let x898: BytePoly_9 = bigint_nondet_quot!(ctx, x897, x4, 9);
    let x899: BytePoly_4 = bigint_nondet_rem!(ctx, x897, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x898, x4, 13), x899, 13), x897, 13),
        73156,
        4,
    )?;
    let x900: BytePoly_4 = bigint_add!(bigint_sub!(x4, bigint_add!(x899, x890, 4), 4), x4, 4);
    let x901: BytePoly_4 = bigint_nondet_quot!(ctx, x900, x4, 4);
    let x902: BytePoly_4 = bigint_nondet_rem!(ctx, x900, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x901, x4, 8), x902, 8), x900, 8),
        32515,
        2,
    )?;
    let x903: BytePoly_1 = bigint_nondet_rem!(ctx, x841, x5, 1);
    let x904: BytePoly_4 = bigint_nondet_quot!(ctx, x841, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x904, x5, 5), x903, 5), x841, 5),
        32515,
        2,
    )?;
    let x905: BytePoly_1 = bigint_sub!(x6, x903, 1);
    eqz(ctx, &bigint_mul!(x903, x905, 2), 8131, 2)?;
    let x906: BytePoly_4 = bigint_add!(bigint_sub!(x896, x866, 4), x4, 4);
    let x907: BytePoly_4 = bigint_nondet_inv!(ctx, x906, x4, 4);
    let x908: BytePoly_8 = bigint_mul!(x906, x907, 8);
    let x909: BytePoly_9 = bigint_nondet_quot!(ctx, x908, x4, 9);
    let x910: BytePoly_4 = bigint_nondet_rem!(ctx, x908, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x909, x4, 13), x910, 13), x908, 13),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x910, x1, 4), 34, 1)?;
    let x911: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x902, x868, 4), x4, 4), x907, 8);
    let x912: BytePoly_9 = bigint_nondet_quot!(ctx, x911, x4, 9);
    let x913: BytePoly_4 = bigint_nondet_rem!(ctx, x911, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x912, x4, 13), x913, 13), x911, 13),
        73156,
        4,
    )?;
    let x914: BytePoly_8 = bigint_add!(bigint_sub!(x868, bigint_mul!(x913, x866, 8), 8), x4, 8);
    let x915: BytePoly_8 = bigint_nondet_quot!(ctx, x914, x4, 8);
    let x916: BytePoly_4 = bigint_nondet_rem!(ctx, x914, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x915, x4, 12), x916, 12), x914, 12),
        65028,
        4,
    )?;
    let x917: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x913, x913, 8), x866, 8), x4, 8),
            x896,
            8
        ),
        x4,
        8
    );
    let x918: BytePoly_9 = bigint_nondet_quot!(ctx, x917, x4, 9);
    let x919: BytePoly_4 = bigint_nondet_rem!(ctx, x917, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x918, x4, 13), x919, 13), x917, 13),
        73156,
        4,
    )?;
    let x920: BytePoly_8 = bigint_mul!(x913, x919, 8);
    let x921: BytePoly_9 = bigint_nondet_quot!(ctx, x920, x4, 9);
    let x922: BytePoly_4 = bigint_nondet_rem!(ctx, x920, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x921, x4, 13), x922, 13), x920, 13),
        73156,
        4,
    )?;
    let x923: BytePoly_4 = bigint_add!(bigint_sub!(x4, bigint_add!(x922, x916, 4), 4), x4, 4);
    let x924: BytePoly_4 = bigint_nondet_quot!(ctx, x923, x4, 4);
    let x925: BytePoly_4 = bigint_nondet_rem!(ctx, x923, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x924, x4, 8), x925, 8), x923, 8),
        32515,
        2,
    )?;
    let x926: BytePoly_5 = bigint_add!(bigint_mul!(x919, x903, 5), bigint_mul!(x866, x905, 5), 5);
    let x927: BytePoly_5 = bigint_add!(bigint_mul!(x925, x903, 5), bigint_mul!(x868, x905, 5), 5);
    let x928: BytePoly_6 = bigint_nondet_quot!(ctx, x926, x4, 6);
    let x929: BytePoly_4 = bigint_nondet_rem!(ctx, x926, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x928, x4, 10), x929, 10), x926, 10),
        48771,
        4,
    )?;
    let x930: BytePoly_6 = bigint_nondet_quot!(ctx, x927, x4, 6);
    let x931: BytePoly_4 = bigint_nondet_rem!(ctx, x927, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x930, x4, 10), x931, 10), x927, 10),
        48771,
        4,
    )?;
    let x932: BytePoly_8 = bigint_mul!(x896, x896, 8);
    let x933: BytePoly_9 = bigint_nondet_quot!(ctx, x932, x4, 9);
    let x934: BytePoly_4 = bigint_nondet_rem!(ctx, x932, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x933, x4, 13), x934, 13), x932, 13),
        73156,
        4,
    )?;
    let x935: BytePoly_5 = bigint_add!(bigint_mul!(x934, x0, 5), x3, 5);
    let x936: BytePoly_6 = bigint_nondet_quot!(ctx, x935, x4, 6);
    let x937: BytePoly_4 = bigint_nondet_rem!(ctx, x935, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x936, x4, 10), x937, 10), x935, 10),
        48771,
        4,
    )?;
    let x938: BytePoly_4 = bigint_add!(x902, x902, 4);
    let x939: BytePoly_4 = bigint_nondet_quot!(ctx, x938, x4, 4);
    let x940: BytePoly_4 = bigint_nondet_rem!(ctx, x938, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x939, x4, 8), x940, 8), x938, 8),
        32515,
        2,
    )?;
    let x941: BytePoly_4 = bigint_nondet_inv!(ctx, x940, x4, 4);
    let x942: BytePoly_8 = bigint_mul!(x940, x941, 8);
    let x943: BytePoly_9 = bigint_nondet_quot!(ctx, x942, x4, 9);
    let x944: BytePoly_4 = bigint_nondet_rem!(ctx, x942, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x943, x4, 13), x944, 13), x942, 13),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x944, x6, 4), 34, 1)?;
    let x945: BytePoly_8 = bigint_mul!(x937, x941, 8);
    let x946: BytePoly_9 = bigint_nondet_quot!(ctx, x945, x4, 9);
    let x947: BytePoly_4 = bigint_nondet_rem!(ctx, x945, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x946, x4, 13), x947, 13), x945, 13),
        73156,
        4,
    )?;
    let x948: BytePoly_8 = bigint_mul!(x947, x896, 8);
    let x949: BytePoly_9 = bigint_nondet_quot!(ctx, x948, x4, 9);
    let x950: BytePoly_4 = bigint_nondet_rem!(ctx, x948, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x949, x4, 13), x950, 13), x948, 13),
        73156,
        4,
    )?;
    let x951: BytePoly_4 = bigint_add!(bigint_sub!(x902, x950, 4), x4, 4);
    let x952: BytePoly_4 = bigint_nondet_quot!(ctx, x951, x4, 4);
    let x953: BytePoly_4 = bigint_nondet_rem!(ctx, x951, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x952, x4, 8), x953, 8), x951, 8),
        32515,
        2,
    )?;
    let x954: BytePoly_8 = bigint_mul!(x947, x947, 8);
    let x955: BytePoly_9 = bigint_nondet_quot!(ctx, x954, x4, 9);
    let x956: BytePoly_4 = bigint_nondet_rem!(ctx, x954, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x955, x4, 13), x956, 13), x954, 13),
        73156,
        4,
    )?;
    let x957: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x956, x896, 4), x4, 4), x896, 4),
        x4,
        4
    );
    let x958: BytePoly_4 = bigint_nondet_quot!(ctx, x957, x4, 4);
    let x959: BytePoly_4 = bigint_nondet_rem!(ctx, x957, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x958, x4, 8), x959, 8), x957, 8),
        32515,
        2,
    )?;
    let x960: BytePoly_8 = bigint_mul!(x947, x959, 8);
    let x961: BytePoly_9 = bigint_nondet_quot!(ctx, x960, x4, 9);
    let x962: BytePoly_4 = bigint_nondet_rem!(ctx, x960, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x961, x4, 13), x962, 13), x960, 13),
        73156,
        4,
    )?;
    let x963: BytePoly_4 = bigint_add!(bigint_sub!(x4, bigint_add!(x962, x953, 4), 4), x4, 4);
    let x964: BytePoly_4 = bigint_nondet_quot!(ctx, x963, x4, 4);
    let x965: BytePoly_4 = bigint_nondet_rem!(ctx, x963, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x964, x4, 8), x965, 8), x963, 8),
        32515,
        2,
    )?;
    let x966: BytePoly_1 = bigint_nondet_rem!(ctx, x904, x5, 1);
    let x967: BytePoly_4 = bigint_nondet_quot!(ctx, x904, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x967, x5, 5), x966, 5), x904, 5),
        32515,
        2,
    )?;
    let x968: BytePoly_1 = bigint_sub!(x6, x966, 1);
    eqz(ctx, &bigint_mul!(x966, x968, 2), 8131, 2)?;
    let x969: BytePoly_4 = bigint_add!(bigint_sub!(x959, x929, 4), x4, 4);
    let x970: BytePoly_4 = bigint_nondet_inv!(ctx, x969, x4, 4);
    let x971: BytePoly_8 = bigint_mul!(x969, x970, 8);
    let x972: BytePoly_9 = bigint_nondet_quot!(ctx, x971, x4, 9);
    let x973: BytePoly_4 = bigint_nondet_rem!(ctx, x971, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x972, x4, 13), x973, 13), x971, 13),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x973, x1, 4), 34, 1)?;
    let x974: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x965, x931, 4), x4, 4), x970, 8);
    let x975: BytePoly_9 = bigint_nondet_quot!(ctx, x974, x4, 9);
    let x976: BytePoly_4 = bigint_nondet_rem!(ctx, x974, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x975, x4, 13), x976, 13), x974, 13),
        73156,
        4,
    )?;
    let x977: BytePoly_8 = bigint_add!(bigint_sub!(x931, bigint_mul!(x976, x929, 8), 8), x4, 8);
    let x978: BytePoly_8 = bigint_nondet_quot!(ctx, x977, x4, 8);
    let x979: BytePoly_4 = bigint_nondet_rem!(ctx, x977, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x978, x4, 12), x979, 12), x977, 12),
        65028,
        4,
    )?;
    let x980: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x976, x976, 8), x929, 8), x4, 8),
            x959,
            8
        ),
        x4,
        8
    );
    let x981: BytePoly_9 = bigint_nondet_quot!(ctx, x980, x4, 9);
    let x982: BytePoly_4 = bigint_nondet_rem!(ctx, x980, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x981, x4, 13), x982, 13), x980, 13),
        73156,
        4,
    )?;
    let x983: BytePoly_8 = bigint_mul!(x976, x982, 8);
    let x984: BytePoly_9 = bigint_nondet_quot!(ctx, x983, x4, 9);
    let x985: BytePoly_4 = bigint_nondet_rem!(ctx, x983, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x984, x4, 13), x985, 13), x983, 13),
        73156,
        4,
    )?;
    let x986: BytePoly_4 = bigint_add!(bigint_sub!(x4, bigint_add!(x985, x979, 4), 4), x4, 4);
    let x987: BytePoly_4 = bigint_nondet_quot!(ctx, x986, x4, 4);
    let x988: BytePoly_4 = bigint_nondet_rem!(ctx, x986, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x987, x4, 8), x988, 8), x986, 8),
        32515,
        2,
    )?;
    let x989: BytePoly_5 = bigint_add!(bigint_mul!(x982, x966, 5), bigint_mul!(x929, x968, 5), 5);
    let x990: BytePoly_5 = bigint_add!(bigint_mul!(x988, x966, 5), bigint_mul!(x931, x968, 5), 5);
    let x991: BytePoly_6 = bigint_nondet_quot!(ctx, x989, x4, 6);
    let x992: BytePoly_4 = bigint_nondet_rem!(ctx, x989, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x991, x4, 10), x992, 10), x989, 10),
        48771,
        4,
    )?;
    let x993: BytePoly_6 = bigint_nondet_quot!(ctx, x990, x4, 6);
    let x994: BytePoly_4 = bigint_nondet_rem!(ctx, x990, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x993, x4, 10), x994, 10), x990, 10),
        48771,
        4,
    )?;
    let x995: BytePoly_8 = bigint_mul!(x959, x959, 8);
    let x996: BytePoly_9 = bigint_nondet_quot!(ctx, x995, x4, 9);
    let x997: BytePoly_4 = bigint_nondet_rem!(ctx, x995, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x996, x4, 13), x997, 13), x995, 13),
        73156,
        4,
    )?;
    let x998: BytePoly_5 = bigint_add!(bigint_mul!(x997, x0, 5), x3, 5);
    let x999: BytePoly_6 = bigint_nondet_quot!(ctx, x998, x4, 6);
    let x1000: BytePoly_4 = bigint_nondet_rem!(ctx, x998, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x999, x4, 10), x1000, 10), x998, 10),
        48771,
        4,
    )?;
    let x1001: BytePoly_4 = bigint_add!(x965, x965, 4);
    let x1002: BytePoly_4 = bigint_nondet_quot!(ctx, x1001, x4, 4);
    let x1003: BytePoly_4 = bigint_nondet_rem!(ctx, x1001, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1002, x4, 8), x1003, 8), x1001, 8),
        32515,
        2,
    )?;
    let x1004: BytePoly_4 = bigint_nondet_inv!(ctx, x1003, x4, 4);
    let x1005: BytePoly_8 = bigint_mul!(x1003, x1004, 8);
    let x1006: BytePoly_9 = bigint_nondet_quot!(ctx, x1005, x4, 9);
    let x1007: BytePoly_4 = bigint_nondet_rem!(ctx, x1005, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1006, x4, 13), x1007, 13),
            x1005,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1007, x6, 4), 34, 1)?;
    let x1008: BytePoly_8 = bigint_mul!(x1000, x1004, 8);
    let x1009: BytePoly_9 = bigint_nondet_quot!(ctx, x1008, x4, 9);
    let x1010: BytePoly_4 = bigint_nondet_rem!(ctx, x1008, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1009, x4, 13), x1010, 13),
            x1008,
            13
        ),
        73156,
        4,
    )?;
    let x1011: BytePoly_8 = bigint_mul!(x1010, x959, 8);
    let x1012: BytePoly_9 = bigint_nondet_quot!(ctx, x1011, x4, 9);
    let x1013: BytePoly_4 = bigint_nondet_rem!(ctx, x1011, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1012, x4, 13), x1013, 13),
            x1011,
            13
        ),
        73156,
        4,
    )?;
    let x1014: BytePoly_4 = bigint_add!(bigint_sub!(x965, x1013, 4), x4, 4);
    let x1015: BytePoly_4 = bigint_nondet_quot!(ctx, x1014, x4, 4);
    let x1016: BytePoly_4 = bigint_nondet_rem!(ctx, x1014, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1015, x4, 8), x1016, 8), x1014, 8),
        32515,
        2,
    )?;
    let x1017: BytePoly_8 = bigint_mul!(x1010, x1010, 8);
    let x1018: BytePoly_9 = bigint_nondet_quot!(ctx, x1017, x4, 9);
    let x1019: BytePoly_4 = bigint_nondet_rem!(ctx, x1017, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1018, x4, 13), x1019, 13),
            x1017,
            13
        ),
        73156,
        4,
    )?;
    let x1020: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1019, x959, 4), x4, 4), x959, 4),
        x4,
        4
    );
    let x1021: BytePoly_4 = bigint_nondet_quot!(ctx, x1020, x4, 4);
    let x1022: BytePoly_4 = bigint_nondet_rem!(ctx, x1020, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1021, x4, 8), x1022, 8), x1020, 8),
        32515,
        2,
    )?;
    let x1023: BytePoly_8 = bigint_mul!(x1010, x1022, 8);
    let x1024: BytePoly_9 = bigint_nondet_quot!(ctx, x1023, x4, 9);
    let x1025: BytePoly_4 = bigint_nondet_rem!(ctx, x1023, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1024, x4, 13), x1025, 13),
            x1023,
            13
        ),
        73156,
        4,
    )?;
    let x1026: BytePoly_4 = bigint_add!(bigint_sub!(x4, bigint_add!(x1025, x1016, 4), 4), x4, 4);
    let x1027: BytePoly_4 = bigint_nondet_quot!(ctx, x1026, x4, 4);
    let x1028: BytePoly_4 = bigint_nondet_rem!(ctx, x1026, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1027, x4, 8), x1028, 8), x1026, 8),
        32515,
        2,
    )?;
    let x1029: BytePoly_1 = bigint_nondet_rem!(ctx, x967, x5, 1);
    let x1030: BytePoly_4 = bigint_nondet_quot!(ctx, x967, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1030, x5, 5), x1029, 5), x967, 5),
        32515,
        2,
    )?;
    let x1031: BytePoly_1 = bigint_sub!(x6, x1029, 1);
    eqz(ctx, &bigint_mul!(x1029, x1031, 2), 8131, 2)?;
    let x1032: BytePoly_4 = bigint_add!(bigint_sub!(x1022, x992, 4), x4, 4);
    let x1033: BytePoly_4 = bigint_nondet_inv!(ctx, x1032, x4, 4);
    let x1034: BytePoly_8 = bigint_mul!(x1032, x1033, 8);
    let x1035: BytePoly_9 = bigint_nondet_quot!(ctx, x1034, x4, 9);
    let x1036: BytePoly_4 = bigint_nondet_rem!(ctx, x1034, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1035, x4, 13), x1036, 13),
            x1034,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1036, x1, 4), 34, 1)?;
    let x1037: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x1028, x994, 4), x4, 4), x1033, 8);
    let x1038: BytePoly_9 = bigint_nondet_quot!(ctx, x1037, x4, 9);
    let x1039: BytePoly_4 = bigint_nondet_rem!(ctx, x1037, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1038, x4, 13), x1039, 13),
            x1037,
            13
        ),
        73156,
        4,
    )?;
    let x1040: BytePoly_8 = bigint_add!(bigint_sub!(x994, bigint_mul!(x1039, x992, 8), 8), x4, 8);
    let x1041: BytePoly_8 = bigint_nondet_quot!(ctx, x1040, x4, 8);
    let x1042: BytePoly_4 = bigint_nondet_rem!(ctx, x1040, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1041, x4, 12), x1042, 12),
            x1040,
            12
        ),
        65028,
        4,
    )?;
    let x1043: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x1039, x1039, 8), x992, 8), x4, 8),
            x1022,
            8
        ),
        x4,
        8
    );
    let x1044: BytePoly_9 = bigint_nondet_quot!(ctx, x1043, x4, 9);
    let x1045: BytePoly_4 = bigint_nondet_rem!(ctx, x1043, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1044, x4, 13), x1045, 13),
            x1043,
            13
        ),
        73156,
        4,
    )?;
    let x1046: BytePoly_8 = bigint_mul!(x1039, x1045, 8);
    let x1047: BytePoly_9 = bigint_nondet_quot!(ctx, x1046, x4, 9);
    let x1048: BytePoly_4 = bigint_nondet_rem!(ctx, x1046, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1047, x4, 13), x1048, 13),
            x1046,
            13
        ),
        73156,
        4,
    )?;
    let x1049: BytePoly_4 = bigint_add!(bigint_sub!(x4, bigint_add!(x1048, x1042, 4), 4), x4, 4);
    let x1050: BytePoly_4 = bigint_nondet_quot!(ctx, x1049, x4, 4);
    let x1051: BytePoly_4 = bigint_nondet_rem!(ctx, x1049, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1050, x4, 8), x1051, 8), x1049, 8),
        32515,
        2,
    )?;
    let x1052: BytePoly_5 =
        bigint_add!(bigint_mul!(x1045, x1029, 5), bigint_mul!(x992, x1031, 5), 5);
    let x1053: BytePoly_5 =
        bigint_add!(bigint_mul!(x1051, x1029, 5), bigint_mul!(x994, x1031, 5), 5);
    let x1054: BytePoly_6 = bigint_nondet_quot!(ctx, x1052, x4, 6);
    let x1055: BytePoly_4 = bigint_nondet_rem!(ctx, x1052, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1054, x4, 10), x1055, 10),
            x1052,
            10
        ),
        48771,
        4,
    )?;
    let x1056: BytePoly_6 = bigint_nondet_quot!(ctx, x1053, x4, 6);
    let x1057: BytePoly_4 = bigint_nondet_rem!(ctx, x1053, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1056, x4, 10), x1057, 10),
            x1053,
            10
        ),
        48771,
        4,
    )?;
    let x1058: BytePoly_8 = bigint_mul!(x1022, x1022, 8);
    let x1059: BytePoly_9 = bigint_nondet_quot!(ctx, x1058, x4, 9);
    let x1060: BytePoly_4 = bigint_nondet_rem!(ctx, x1058, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1059, x4, 13), x1060, 13),
            x1058,
            13
        ),
        73156,
        4,
    )?;
    let x1061: BytePoly_5 = bigint_add!(bigint_mul!(x1060, x0, 5), x3, 5);
    let x1062: BytePoly_6 = bigint_nondet_quot!(ctx, x1061, x4, 6);
    let x1063: BytePoly_4 = bigint_nondet_rem!(ctx, x1061, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1062, x4, 10), x1063, 10),
            x1061,
            10
        ),
        48771,
        4,
    )?;
    let x1064: BytePoly_4 = bigint_add!(x1028, x1028, 4);
    let x1065: BytePoly_4 = bigint_nondet_quot!(ctx, x1064, x4, 4);
    let x1066: BytePoly_4 = bigint_nondet_rem!(ctx, x1064, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1065, x4, 8), x1066, 8), x1064, 8),
        32515,
        2,
    )?;
    let x1067: BytePoly_4 = bigint_nondet_inv!(ctx, x1066, x4, 4);
    let x1068: BytePoly_8 = bigint_mul!(x1066, x1067, 8);
    let x1069: BytePoly_9 = bigint_nondet_quot!(ctx, x1068, x4, 9);
    let x1070: BytePoly_4 = bigint_nondet_rem!(ctx, x1068, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1069, x4, 13), x1070, 13),
            x1068,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1070, x6, 4), 34, 1)?;
    let x1071: BytePoly_8 = bigint_mul!(x1063, x1067, 8);
    let x1072: BytePoly_9 = bigint_nondet_quot!(ctx, x1071, x4, 9);
    let x1073: BytePoly_4 = bigint_nondet_rem!(ctx, x1071, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1072, x4, 13), x1073, 13),
            x1071,
            13
        ),
        73156,
        4,
    )?;
    let x1074: BytePoly_8 = bigint_mul!(x1073, x1022, 8);
    let x1075: BytePoly_9 = bigint_nondet_quot!(ctx, x1074, x4, 9);
    let x1076: BytePoly_4 = bigint_nondet_rem!(ctx, x1074, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1075, x4, 13), x1076, 13),
            x1074,
            13
        ),
        73156,
        4,
    )?;
    let x1077: BytePoly_4 = bigint_add!(bigint_sub!(x1028, x1076, 4), x4, 4);
    let x1078: BytePoly_4 = bigint_nondet_quot!(ctx, x1077, x4, 4);
    let x1079: BytePoly_4 = bigint_nondet_rem!(ctx, x1077, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1078, x4, 8), x1079, 8), x1077, 8),
        32515,
        2,
    )?;
    let x1080: BytePoly_8 = bigint_mul!(x1073, x1073, 8);
    let x1081: BytePoly_9 = bigint_nondet_quot!(ctx, x1080, x4, 9);
    let x1082: BytePoly_4 = bigint_nondet_rem!(ctx, x1080, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1081, x4, 13), x1082, 13),
            x1080,
            13
        ),
        73156,
        4,
    )?;
    let x1083: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1082, x1022, 4), x4, 4), x1022, 4),
        x4,
        4
    );
    let x1084: BytePoly_4 = bigint_nondet_quot!(ctx, x1083, x4, 4);
    let x1085: BytePoly_4 = bigint_nondet_rem!(ctx, x1083, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1084, x4, 8), x1085, 8), x1083, 8),
        32515,
        2,
    )?;
    let x1086: BytePoly_8 = bigint_mul!(x1073, x1085, 8);
    let x1087: BytePoly_9 = bigint_nondet_quot!(ctx, x1086, x4, 9);
    let x1088: BytePoly_4 = bigint_nondet_rem!(ctx, x1086, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1087, x4, 13), x1088, 13),
            x1086,
            13
        ),
        73156,
        4,
    )?;
    let x1089: BytePoly_4 = bigint_add!(bigint_sub!(x4, bigint_add!(x1088, x1079, 4), 4), x4, 4);
    let x1090: BytePoly_4 = bigint_nondet_quot!(ctx, x1089, x4, 4);
    let x1091: BytePoly_4 = bigint_nondet_rem!(ctx, x1089, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1090, x4, 8), x1091, 8), x1089, 8),
        32515,
        2,
    )?;
    let x1092: BytePoly_1 = bigint_nondet_rem!(ctx, x1030, x5, 1);
    let x1093: BytePoly_4 = bigint_nondet_quot!(ctx, x1030, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1093, x5, 5), x1092, 5), x1030, 5),
        32515,
        2,
    )?;
    let x1094: BytePoly_1 = bigint_sub!(x6, x1092, 1);
    eqz(ctx, &bigint_mul!(x1092, x1094, 2), 8131, 2)?;
    let x1095: BytePoly_4 = bigint_add!(bigint_sub!(x1085, x1055, 4), x4, 4);
    let x1096: BytePoly_4 = bigint_nondet_inv!(ctx, x1095, x4, 4);
    let x1097: BytePoly_8 = bigint_mul!(x1095, x1096, 8);
    let x1098: BytePoly_9 = bigint_nondet_quot!(ctx, x1097, x4, 9);
    let x1099: BytePoly_4 = bigint_nondet_rem!(ctx, x1097, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1098, x4, 13), x1099, 13),
            x1097,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1099, x1, 4), 34, 1)?;
    let x1100: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x1091, x1057, 4), x4, 4), x1096, 8);
    let x1101: BytePoly_9 = bigint_nondet_quot!(ctx, x1100, x4, 9);
    let x1102: BytePoly_4 = bigint_nondet_rem!(ctx, x1100, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1101, x4, 13), x1102, 13),
            x1100,
            13
        ),
        73156,
        4,
    )?;
    let x1103: BytePoly_8 = bigint_add!(bigint_sub!(x1057, bigint_mul!(x1102, x1055, 8), 8), x4, 8);
    let x1104: BytePoly_8 = bigint_nondet_quot!(ctx, x1103, x4, 8);
    let x1105: BytePoly_4 = bigint_nondet_rem!(ctx, x1103, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1104, x4, 12), x1105, 12),
            x1103,
            12
        ),
        65028,
        4,
    )?;
    let x1106: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x1102, x1102, 8), x1055, 8), x4, 8),
            x1085,
            8
        ),
        x4,
        8
    );
    let x1107: BytePoly_9 = bigint_nondet_quot!(ctx, x1106, x4, 9);
    let x1108: BytePoly_4 = bigint_nondet_rem!(ctx, x1106, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1107, x4, 13), x1108, 13),
            x1106,
            13
        ),
        73156,
        4,
    )?;
    let x1109: BytePoly_8 = bigint_mul!(x1102, x1108, 8);
    let x1110: BytePoly_9 = bigint_nondet_quot!(ctx, x1109, x4, 9);
    let x1111: BytePoly_4 = bigint_nondet_rem!(ctx, x1109, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1110, x4, 13), x1111, 13),
            x1109,
            13
        ),
        73156,
        4,
    )?;
    let x1112: BytePoly_4 = bigint_add!(bigint_sub!(x4, bigint_add!(x1111, x1105, 4), 4), x4, 4);
    let x1113: BytePoly_4 = bigint_nondet_quot!(ctx, x1112, x4, 4);
    let x1114: BytePoly_4 = bigint_nondet_rem!(ctx, x1112, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1113, x4, 8), x1114, 8), x1112, 8),
        32515,
        2,
    )?;
    let x1115: BytePoly_5 = bigint_add!(
        bigint_mul!(x1108, x1092, 5),
        bigint_mul!(x1055, x1094, 5),
        5
    );
    let x1116: BytePoly_5 = bigint_add!(
        bigint_mul!(x1114, x1092, 5),
        bigint_mul!(x1057, x1094, 5),
        5
    );
    let x1117: BytePoly_6 = bigint_nondet_quot!(ctx, x1115, x4, 6);
    let x1118: BytePoly_4 = bigint_nondet_rem!(ctx, x1115, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1117, x4, 10), x1118, 10),
            x1115,
            10
        ),
        48771,
        4,
    )?;
    let x1119: BytePoly_6 = bigint_nondet_quot!(ctx, x1116, x4, 6);
    let x1120: BytePoly_4 = bigint_nondet_rem!(ctx, x1116, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1119, x4, 10), x1120, 10),
            x1116,
            10
        ),
        48771,
        4,
    )?;
    let x1121: BytePoly_8 = bigint_mul!(x1085, x1085, 8);
    let x1122: BytePoly_9 = bigint_nondet_quot!(ctx, x1121, x4, 9);
    let x1123: BytePoly_4 = bigint_nondet_rem!(ctx, x1121, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1122, x4, 13), x1123, 13),
            x1121,
            13
        ),
        73156,
        4,
    )?;
    let x1124: BytePoly_5 = bigint_add!(bigint_mul!(x1123, x0, 5), x3, 5);
    let x1125: BytePoly_6 = bigint_nondet_quot!(ctx, x1124, x4, 6);
    let x1126: BytePoly_4 = bigint_nondet_rem!(ctx, x1124, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1125, x4, 10), x1126, 10),
            x1124,
            10
        ),
        48771,
        4,
    )?;
    let x1127: BytePoly_4 = bigint_add!(x1091, x1091, 4);
    let x1128: BytePoly_4 = bigint_nondet_quot!(ctx, x1127, x4, 4);
    let x1129: BytePoly_4 = bigint_nondet_rem!(ctx, x1127, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1128, x4, 8), x1129, 8), x1127, 8),
        32515,
        2,
    )?;
    let x1130: BytePoly_4 = bigint_nondet_inv!(ctx, x1129, x4, 4);
    let x1131: BytePoly_8 = bigint_mul!(x1129, x1130, 8);
    let x1132: BytePoly_9 = bigint_nondet_quot!(ctx, x1131, x4, 9);
    let x1133: BytePoly_4 = bigint_nondet_rem!(ctx, x1131, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1132, x4, 13), x1133, 13),
            x1131,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1133, x6, 4), 34, 1)?;
    let x1134: BytePoly_8 = bigint_mul!(x1126, x1130, 8);
    let x1135: BytePoly_9 = bigint_nondet_quot!(ctx, x1134, x4, 9);
    let x1136: BytePoly_4 = bigint_nondet_rem!(ctx, x1134, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1135, x4, 13), x1136, 13),
            x1134,
            13
        ),
        73156,
        4,
    )?;
    let x1137: BytePoly_8 = bigint_mul!(x1136, x1085, 8);
    let x1138: BytePoly_9 = bigint_nondet_quot!(ctx, x1137, x4, 9);
    let x1139: BytePoly_4 = bigint_nondet_rem!(ctx, x1137, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1138, x4, 13), x1139, 13),
            x1137,
            13
        ),
        73156,
        4,
    )?;
    let x1140: BytePoly_4 = bigint_add!(bigint_sub!(x1091, x1139, 4), x4, 4);
    let x1141: BytePoly_4 = bigint_nondet_quot!(ctx, x1140, x4, 4);
    let x1142: BytePoly_4 = bigint_nondet_rem!(ctx, x1140, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1141, x4, 8), x1142, 8), x1140, 8),
        32515,
        2,
    )?;
    let x1143: BytePoly_8 = bigint_mul!(x1136, x1136, 8);
    let x1144: BytePoly_9 = bigint_nondet_quot!(ctx, x1143, x4, 9);
    let x1145: BytePoly_4 = bigint_nondet_rem!(ctx, x1143, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1144, x4, 13), x1145, 13),
            x1143,
            13
        ),
        73156,
        4,
    )?;
    let x1146: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1145, x1085, 4), x4, 4), x1085, 4),
        x4,
        4
    );
    let x1147: BytePoly_4 = bigint_nondet_quot!(ctx, x1146, x4, 4);
    let x1148: BytePoly_4 = bigint_nondet_rem!(ctx, x1146, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1147, x4, 8), x1148, 8), x1146, 8),
        32515,
        2,
    )?;
    let x1149: BytePoly_8 = bigint_mul!(x1136, x1148, 8);
    let x1150: BytePoly_9 = bigint_nondet_quot!(ctx, x1149, x4, 9);
    let x1151: BytePoly_4 = bigint_nondet_rem!(ctx, x1149, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1150, x4, 13), x1151, 13),
            x1149,
            13
        ),
        73156,
        4,
    )?;
    let x1152: BytePoly_4 = bigint_add!(bigint_sub!(x4, bigint_add!(x1151, x1142, 4), 4), x4, 4);
    let x1153: BytePoly_4 = bigint_nondet_quot!(ctx, x1152, x4, 4);
    let x1154: BytePoly_4 = bigint_nondet_rem!(ctx, x1152, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1153, x4, 8), x1154, 8), x1152, 8),
        32515,
        2,
    )?;
    let x1155: BytePoly_1 = bigint_nondet_rem!(ctx, x1093, x5, 1);
    let x1156: BytePoly_4 = bigint_nondet_quot!(ctx, x1093, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1156, x5, 5), x1155, 5), x1093, 5),
        32515,
        2,
    )?;
    let x1157: BytePoly_1 = bigint_sub!(x6, x1155, 1);
    eqz(ctx, &bigint_mul!(x1155, x1157, 2), 8131, 2)?;
    let x1158: BytePoly_4 = bigint_add!(bigint_sub!(x1148, x1118, 4), x4, 4);
    let x1159: BytePoly_4 = bigint_nondet_inv!(ctx, x1158, x4, 4);
    let x1160: BytePoly_8 = bigint_mul!(x1158, x1159, 8);
    let x1161: BytePoly_9 = bigint_nondet_quot!(ctx, x1160, x4, 9);
    let x1162: BytePoly_4 = bigint_nondet_rem!(ctx, x1160, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1161, x4, 13), x1162, 13),
            x1160,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1162, x1, 4), 34, 1)?;
    let x1163: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x1154, x1120, 4), x4, 4), x1159, 8);
    let x1164: BytePoly_9 = bigint_nondet_quot!(ctx, x1163, x4, 9);
    let x1165: BytePoly_4 = bigint_nondet_rem!(ctx, x1163, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1164, x4, 13), x1165, 13),
            x1163,
            13
        ),
        73156,
        4,
    )?;
    let x1166: BytePoly_8 = bigint_add!(bigint_sub!(x1120, bigint_mul!(x1165, x1118, 8), 8), x4, 8);
    let x1167: BytePoly_8 = bigint_nondet_quot!(ctx, x1166, x4, 8);
    let x1168: BytePoly_4 = bigint_nondet_rem!(ctx, x1166, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1167, x4, 12), x1168, 12),
            x1166,
            12
        ),
        65028,
        4,
    )?;
    let x1169: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x1165, x1165, 8), x1118, 8), x4, 8),
            x1148,
            8
        ),
        x4,
        8
    );
    let x1170: BytePoly_9 = bigint_nondet_quot!(ctx, x1169, x4, 9);
    let x1171: BytePoly_4 = bigint_nondet_rem!(ctx, x1169, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1170, x4, 13), x1171, 13),
            x1169,
            13
        ),
        73156,
        4,
    )?;
    let x1172: BytePoly_8 = bigint_mul!(x1165, x1171, 8);
    let x1173: BytePoly_9 = bigint_nondet_quot!(ctx, x1172, x4, 9);
    let x1174: BytePoly_4 = bigint_nondet_rem!(ctx, x1172, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1173, x4, 13), x1174, 13),
            x1172,
            13
        ),
        73156,
        4,
    )?;
    let x1175: BytePoly_4 = bigint_add!(bigint_sub!(x4, bigint_add!(x1174, x1168, 4), 4), x4, 4);
    let x1176: BytePoly_4 = bigint_nondet_quot!(ctx, x1175, x4, 4);
    let x1177: BytePoly_4 = bigint_nondet_rem!(ctx, x1175, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1176, x4, 8), x1177, 8), x1175, 8),
        32515,
        2,
    )?;
    let x1178: BytePoly_5 = bigint_add!(
        bigint_mul!(x1171, x1155, 5),
        bigint_mul!(x1118, x1157, 5),
        5
    );
    let x1179: BytePoly_5 = bigint_add!(
        bigint_mul!(x1177, x1155, 5),
        bigint_mul!(x1120, x1157, 5),
        5
    );
    let x1180: BytePoly_6 = bigint_nondet_quot!(ctx, x1178, x4, 6);
    let x1181: BytePoly_4 = bigint_nondet_rem!(ctx, x1178, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1180, x4, 10), x1181, 10),
            x1178,
            10
        ),
        48771,
        4,
    )?;
    let x1182: BytePoly_6 = bigint_nondet_quot!(ctx, x1179, x4, 6);
    let x1183: BytePoly_4 = bigint_nondet_rem!(ctx, x1179, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1182, x4, 10), x1183, 10),
            x1179,
            10
        ),
        48771,
        4,
    )?;
    let x1184: BytePoly_8 = bigint_mul!(x1148, x1148, 8);
    let x1185: BytePoly_9 = bigint_nondet_quot!(ctx, x1184, x4, 9);
    let x1186: BytePoly_4 = bigint_nondet_rem!(ctx, x1184, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1185, x4, 13), x1186, 13),
            x1184,
            13
        ),
        73156,
        4,
    )?;
    let x1187: BytePoly_5 = bigint_add!(bigint_mul!(x1186, x0, 5), x3, 5);
    let x1188: BytePoly_6 = bigint_nondet_quot!(ctx, x1187, x4, 6);
    let x1189: BytePoly_4 = bigint_nondet_rem!(ctx, x1187, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1188, x4, 10), x1189, 10),
            x1187,
            10
        ),
        48771,
        4,
    )?;
    let x1190: BytePoly_4 = bigint_add!(x1154, x1154, 4);
    let x1191: BytePoly_4 = bigint_nondet_quot!(ctx, x1190, x4, 4);
    let x1192: BytePoly_4 = bigint_nondet_rem!(ctx, x1190, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1191, x4, 8), x1192, 8), x1190, 8),
        32515,
        2,
    )?;
    let x1193: BytePoly_4 = bigint_nondet_inv!(ctx, x1192, x4, 4);
    let x1194: BytePoly_8 = bigint_mul!(x1192, x1193, 8);
    let x1195: BytePoly_9 = bigint_nondet_quot!(ctx, x1194, x4, 9);
    let x1196: BytePoly_4 = bigint_nondet_rem!(ctx, x1194, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1195, x4, 13), x1196, 13),
            x1194,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1196, x6, 4), 34, 1)?;
    let x1197: BytePoly_8 = bigint_mul!(x1189, x1193, 8);
    let x1198: BytePoly_9 = bigint_nondet_quot!(ctx, x1197, x4, 9);
    let x1199: BytePoly_4 = bigint_nondet_rem!(ctx, x1197, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1198, x4, 13), x1199, 13),
            x1197,
            13
        ),
        73156,
        4,
    )?;
    let x1200: BytePoly_8 = bigint_mul!(x1199, x1148, 8);
    let x1201: BytePoly_9 = bigint_nondet_quot!(ctx, x1200, x4, 9);
    let x1202: BytePoly_4 = bigint_nondet_rem!(ctx, x1200, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1201, x4, 13), x1202, 13),
            x1200,
            13
        ),
        73156,
        4,
    )?;
    let x1203: BytePoly_4 = bigint_add!(bigint_sub!(x1154, x1202, 4), x4, 4);
    let x1204: BytePoly_4 = bigint_nondet_quot!(ctx, x1203, x4, 4);
    let x1205: BytePoly_4 = bigint_nondet_rem!(ctx, x1203, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1204, x4, 8), x1205, 8), x1203, 8),
        32515,
        2,
    )?;
    let x1206: BytePoly_8 = bigint_mul!(x1199, x1199, 8);
    let x1207: BytePoly_9 = bigint_nondet_quot!(ctx, x1206, x4, 9);
    let x1208: BytePoly_4 = bigint_nondet_rem!(ctx, x1206, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1207, x4, 13), x1208, 13),
            x1206,
            13
        ),
        73156,
        4,
    )?;
    let x1209: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1208, x1148, 4), x4, 4), x1148, 4),
        x4,
        4
    );
    let x1210: BytePoly_4 = bigint_nondet_quot!(ctx, x1209, x4, 4);
    let x1211: BytePoly_4 = bigint_nondet_rem!(ctx, x1209, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1210, x4, 8), x1211, 8), x1209, 8),
        32515,
        2,
    )?;
    let x1212: BytePoly_8 = bigint_mul!(x1199, x1211, 8);
    let x1213: BytePoly_9 = bigint_nondet_quot!(ctx, x1212, x4, 9);
    let x1214: BytePoly_4 = bigint_nondet_rem!(ctx, x1212, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1213, x4, 13), x1214, 13),
            x1212,
            13
        ),
        73156,
        4,
    )?;
    let x1215: BytePoly_4 = bigint_add!(bigint_sub!(x4, bigint_add!(x1214, x1205, 4), 4), x4, 4);
    let x1216: BytePoly_4 = bigint_nondet_quot!(ctx, x1215, x4, 4);
    let x1217: BytePoly_4 = bigint_nondet_rem!(ctx, x1215, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1216, x4, 8), x1217, 8), x1215, 8),
        32515,
        2,
    )?;
    let x1218: BytePoly_1 = bigint_nondet_rem!(ctx, x1156, x5, 1);
    let x1219: BytePoly_4 = bigint_nondet_quot!(ctx, x1156, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1219, x5, 5), x1218, 5), x1156, 5),
        32515,
        2,
    )?;
    let x1220: BytePoly_1 = bigint_sub!(x6, x1218, 1);
    eqz(ctx, &bigint_mul!(x1218, x1220, 2), 8131, 2)?;
    let x1221: BytePoly_4 = bigint_add!(bigint_sub!(x1211, x1181, 4), x4, 4);
    let x1222: BytePoly_4 = bigint_nondet_inv!(ctx, x1221, x4, 4);
    let x1223: BytePoly_8 = bigint_mul!(x1221, x1222, 8);
    let x1224: BytePoly_9 = bigint_nondet_quot!(ctx, x1223, x4, 9);
    let x1225: BytePoly_4 = bigint_nondet_rem!(ctx, x1223, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1224, x4, 13), x1225, 13),
            x1223,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1225, x1, 4), 34, 1)?;
    let x1226: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x1217, x1183, 4), x4, 4), x1222, 8);
    let x1227: BytePoly_9 = bigint_nondet_quot!(ctx, x1226, x4, 9);
    let x1228: BytePoly_4 = bigint_nondet_rem!(ctx, x1226, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1227, x4, 13), x1228, 13),
            x1226,
            13
        ),
        73156,
        4,
    )?;
    let x1229: BytePoly_8 = bigint_add!(bigint_sub!(x1183, bigint_mul!(x1228, x1181, 8), 8), x4, 8);
    let x1230: BytePoly_8 = bigint_nondet_quot!(ctx, x1229, x4, 8);
    let x1231: BytePoly_4 = bigint_nondet_rem!(ctx, x1229, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1230, x4, 12), x1231, 12),
            x1229,
            12
        ),
        65028,
        4,
    )?;
    let x1232: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x1228, x1228, 8), x1181, 8), x4, 8),
            x1211,
            8
        ),
        x4,
        8
    );
    let x1233: BytePoly_9 = bigint_nondet_quot!(ctx, x1232, x4, 9);
    let x1234: BytePoly_4 = bigint_nondet_rem!(ctx, x1232, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1233, x4, 13), x1234, 13),
            x1232,
            13
        ),
        73156,
        4,
    )?;
    let x1235: BytePoly_8 = bigint_mul!(x1228, x1234, 8);
    let x1236: BytePoly_9 = bigint_nondet_quot!(ctx, x1235, x4, 9);
    let x1237: BytePoly_4 = bigint_nondet_rem!(ctx, x1235, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1236, x4, 13), x1237, 13),
            x1235,
            13
        ),
        73156,
        4,
    )?;
    let x1238: BytePoly_4 = bigint_add!(bigint_sub!(x4, bigint_add!(x1237, x1231, 4), 4), x4, 4);
    let x1239: BytePoly_4 = bigint_nondet_quot!(ctx, x1238, x4, 4);
    let x1240: BytePoly_4 = bigint_nondet_rem!(ctx, x1238, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1239, x4, 8), x1240, 8), x1238, 8),
        32515,
        2,
    )?;
    let x1241: BytePoly_5 = bigint_add!(
        bigint_mul!(x1234, x1218, 5),
        bigint_mul!(x1181, x1220, 5),
        5
    );
    let x1242: BytePoly_5 = bigint_add!(
        bigint_mul!(x1240, x1218, 5),
        bigint_mul!(x1183, x1220, 5),
        5
    );
    let x1243: BytePoly_6 = bigint_nondet_quot!(ctx, x1241, x4, 6);
    let x1244: BytePoly_4 = bigint_nondet_rem!(ctx, x1241, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1243, x4, 10), x1244, 10),
            x1241,
            10
        ),
        48771,
        4,
    )?;
    let x1245: BytePoly_6 = bigint_nondet_quot!(ctx, x1242, x4, 6);
    let x1246: BytePoly_4 = bigint_nondet_rem!(ctx, x1242, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1245, x4, 10), x1246, 10),
            x1242,
            10
        ),
        48771,
        4,
    )?;
    let x1247: BytePoly_8 = bigint_mul!(x1211, x1211, 8);
    let x1248: BytePoly_9 = bigint_nondet_quot!(ctx, x1247, x4, 9);
    let x1249: BytePoly_4 = bigint_nondet_rem!(ctx, x1247, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1248, x4, 13), x1249, 13),
            x1247,
            13
        ),
        73156,
        4,
    )?;
    let x1250: BytePoly_5 = bigint_add!(bigint_mul!(x1249, x0, 5), x3, 5);
    let x1251: BytePoly_6 = bigint_nondet_quot!(ctx, x1250, x4, 6);
    let x1252: BytePoly_4 = bigint_nondet_rem!(ctx, x1250, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1251, x4, 10), x1252, 10),
            x1250,
            10
        ),
        48771,
        4,
    )?;
    let x1253: BytePoly_4 = bigint_add!(x1217, x1217, 4);
    let x1254: BytePoly_4 = bigint_nondet_quot!(ctx, x1253, x4, 4);
    let x1255: BytePoly_4 = bigint_nondet_rem!(ctx, x1253, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1254, x4, 8), x1255, 8), x1253, 8),
        32515,
        2,
    )?;
    let x1256: BytePoly_4 = bigint_nondet_inv!(ctx, x1255, x4, 4);
    let x1257: BytePoly_8 = bigint_mul!(x1255, x1256, 8);
    let x1258: BytePoly_9 = bigint_nondet_quot!(ctx, x1257, x4, 9);
    let x1259: BytePoly_4 = bigint_nondet_rem!(ctx, x1257, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1258, x4, 13), x1259, 13),
            x1257,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1259, x6, 4), 34, 1)?;
    let x1260: BytePoly_8 = bigint_mul!(x1252, x1256, 8);
    let x1261: BytePoly_9 = bigint_nondet_quot!(ctx, x1260, x4, 9);
    let x1262: BytePoly_4 = bigint_nondet_rem!(ctx, x1260, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1261, x4, 13), x1262, 13),
            x1260,
            13
        ),
        73156,
        4,
    )?;
    let x1263: BytePoly_8 = bigint_mul!(x1262, x1211, 8);
    let x1264: BytePoly_9 = bigint_nondet_quot!(ctx, x1263, x4, 9);
    let x1265: BytePoly_4 = bigint_nondet_rem!(ctx, x1263, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1264, x4, 13), x1265, 13),
            x1263,
            13
        ),
        73156,
        4,
    )?;
    let x1266: BytePoly_4 = bigint_add!(bigint_sub!(x1217, x1265, 4), x4, 4);
    let x1267: BytePoly_4 = bigint_nondet_quot!(ctx, x1266, x4, 4);
    let x1268: BytePoly_4 = bigint_nondet_rem!(ctx, x1266, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1267, x4, 8), x1268, 8), x1266, 8),
        32515,
        2,
    )?;
    let x1269: BytePoly_8 = bigint_mul!(x1262, x1262, 8);
    let x1270: BytePoly_9 = bigint_nondet_quot!(ctx, x1269, x4, 9);
    let x1271: BytePoly_4 = bigint_nondet_rem!(ctx, x1269, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1270, x4, 13), x1271, 13),
            x1269,
            13
        ),
        73156,
        4,
    )?;
    let x1272: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1271, x1211, 4), x4, 4), x1211, 4),
        x4,
        4
    );
    let x1273: BytePoly_4 = bigint_nondet_quot!(ctx, x1272, x4, 4);
    let x1274: BytePoly_4 = bigint_nondet_rem!(ctx, x1272, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1273, x4, 8), x1274, 8), x1272, 8),
        32515,
        2,
    )?;
    let x1275: BytePoly_8 = bigint_mul!(x1262, x1274, 8);
    let x1276: BytePoly_9 = bigint_nondet_quot!(ctx, x1275, x4, 9);
    let x1277: BytePoly_4 = bigint_nondet_rem!(ctx, x1275, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1276, x4, 13), x1277, 13),
            x1275,
            13
        ),
        73156,
        4,
    )?;
    let x1278: BytePoly_4 = bigint_add!(bigint_sub!(x4, bigint_add!(x1277, x1268, 4), 4), x4, 4);
    let x1279: BytePoly_4 = bigint_nondet_quot!(ctx, x1278, x4, 4);
    let x1280: BytePoly_4 = bigint_nondet_rem!(ctx, x1278, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1279, x4, 8), x1280, 8), x1278, 8),
        32515,
        2,
    )?;
    let x1281: BytePoly_1 = bigint_nondet_rem!(ctx, x1219, x5, 1);
    let x1282: BytePoly_4 = bigint_nondet_quot!(ctx, x1219, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1282, x5, 5), x1281, 5), x1219, 5),
        32515,
        2,
    )?;
    let x1283: BytePoly_1 = bigint_sub!(x6, x1281, 1);
    eqz(ctx, &bigint_mul!(x1281, x1283, 2), 8131, 2)?;
    let x1284: BytePoly_4 = bigint_add!(bigint_sub!(x1274, x1244, 4), x4, 4);
    let x1285: BytePoly_4 = bigint_nondet_inv!(ctx, x1284, x4, 4);
    let x1286: BytePoly_8 = bigint_mul!(x1284, x1285, 8);
    let x1287: BytePoly_9 = bigint_nondet_quot!(ctx, x1286, x4, 9);
    let x1288: BytePoly_4 = bigint_nondet_rem!(ctx, x1286, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1287, x4, 13), x1288, 13),
            x1286,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1288, x1, 4), 34, 1)?;
    let x1289: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x1280, x1246, 4), x4, 4), x1285, 8);
    let x1290: BytePoly_9 = bigint_nondet_quot!(ctx, x1289, x4, 9);
    let x1291: BytePoly_4 = bigint_nondet_rem!(ctx, x1289, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1290, x4, 13), x1291, 13),
            x1289,
            13
        ),
        73156,
        4,
    )?;
    let x1292: BytePoly_8 = bigint_add!(bigint_sub!(x1246, bigint_mul!(x1291, x1244, 8), 8), x4, 8);
    let x1293: BytePoly_8 = bigint_nondet_quot!(ctx, x1292, x4, 8);
    let x1294: BytePoly_4 = bigint_nondet_rem!(ctx, x1292, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1293, x4, 12), x1294, 12),
            x1292,
            12
        ),
        65028,
        4,
    )?;
    let x1295: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x1291, x1291, 8), x1244, 8), x4, 8),
            x1274,
            8
        ),
        x4,
        8
    );
    let x1296: BytePoly_9 = bigint_nondet_quot!(ctx, x1295, x4, 9);
    let x1297: BytePoly_4 = bigint_nondet_rem!(ctx, x1295, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1296, x4, 13), x1297, 13),
            x1295,
            13
        ),
        73156,
        4,
    )?;
    let x1298: BytePoly_8 = bigint_mul!(x1291, x1297, 8);
    let x1299: BytePoly_9 = bigint_nondet_quot!(ctx, x1298, x4, 9);
    let x1300: BytePoly_4 = bigint_nondet_rem!(ctx, x1298, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1299, x4, 13), x1300, 13),
            x1298,
            13
        ),
        73156,
        4,
    )?;
    let x1301: BytePoly_4 = bigint_add!(bigint_sub!(x4, bigint_add!(x1300, x1294, 4), 4), x4, 4);
    let x1302: BytePoly_4 = bigint_nondet_quot!(ctx, x1301, x4, 4);
    let x1303: BytePoly_4 = bigint_nondet_rem!(ctx, x1301, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1302, x4, 8), x1303, 8), x1301, 8),
        32515,
        2,
    )?;
    let x1304: BytePoly_5 = bigint_add!(
        bigint_mul!(x1297, x1281, 5),
        bigint_mul!(x1244, x1283, 5),
        5
    );
    let x1305: BytePoly_5 = bigint_add!(
        bigint_mul!(x1303, x1281, 5),
        bigint_mul!(x1246, x1283, 5),
        5
    );
    let x1306: BytePoly_6 = bigint_nondet_quot!(ctx, x1304, x4, 6);
    let x1307: BytePoly_4 = bigint_nondet_rem!(ctx, x1304, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1306, x4, 10), x1307, 10),
            x1304,
            10
        ),
        48771,
        4,
    )?;
    let x1308: BytePoly_6 = bigint_nondet_quot!(ctx, x1305, x4, 6);
    let x1309: BytePoly_4 = bigint_nondet_rem!(ctx, x1305, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1308, x4, 10), x1309, 10),
            x1305,
            10
        ),
        48771,
        4,
    )?;
    let x1310: BytePoly_8 = bigint_mul!(x1274, x1274, 8);
    let x1311: BytePoly_9 = bigint_nondet_quot!(ctx, x1310, x4, 9);
    let x1312: BytePoly_4 = bigint_nondet_rem!(ctx, x1310, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1311, x4, 13), x1312, 13),
            x1310,
            13
        ),
        73156,
        4,
    )?;
    let x1313: BytePoly_5 = bigint_add!(bigint_mul!(x1312, x0, 5), x3, 5);
    let x1314: BytePoly_6 = bigint_nondet_quot!(ctx, x1313, x4, 6);
    let x1315: BytePoly_4 = bigint_nondet_rem!(ctx, x1313, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1314, x4, 10), x1315, 10),
            x1313,
            10
        ),
        48771,
        4,
    )?;
    let x1316: BytePoly_4 = bigint_add!(x1280, x1280, 4);
    let x1317: BytePoly_4 = bigint_nondet_quot!(ctx, x1316, x4, 4);
    let x1318: BytePoly_4 = bigint_nondet_rem!(ctx, x1316, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1317, x4, 8), x1318, 8), x1316, 8),
        32515,
        2,
    )?;
    let x1319: BytePoly_4 = bigint_nondet_inv!(ctx, x1318, x4, 4);
    let x1320: BytePoly_8 = bigint_mul!(x1318, x1319, 8);
    let x1321: BytePoly_9 = bigint_nondet_quot!(ctx, x1320, x4, 9);
    let x1322: BytePoly_4 = bigint_nondet_rem!(ctx, x1320, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1321, x4, 13), x1322, 13),
            x1320,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1322, x6, 4), 34, 1)?;
    let x1323: BytePoly_8 = bigint_mul!(x1315, x1319, 8);
    let x1324: BytePoly_9 = bigint_nondet_quot!(ctx, x1323, x4, 9);
    let x1325: BytePoly_4 = bigint_nondet_rem!(ctx, x1323, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1324, x4, 13), x1325, 13),
            x1323,
            13
        ),
        73156,
        4,
    )?;
    let x1326: BytePoly_8 = bigint_mul!(x1325, x1274, 8);
    let x1327: BytePoly_9 = bigint_nondet_quot!(ctx, x1326, x4, 9);
    let x1328: BytePoly_4 = bigint_nondet_rem!(ctx, x1326, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1327, x4, 13), x1328, 13),
            x1326,
            13
        ),
        73156,
        4,
    )?;
    let x1329: BytePoly_4 = bigint_add!(bigint_sub!(x1280, x1328, 4), x4, 4);
    let x1330: BytePoly_4 = bigint_nondet_quot!(ctx, x1329, x4, 4);
    let x1331: BytePoly_4 = bigint_nondet_rem!(ctx, x1329, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1330, x4, 8), x1331, 8), x1329, 8),
        32515,
        2,
    )?;
    let x1332: BytePoly_8 = bigint_mul!(x1325, x1325, 8);
    let x1333: BytePoly_9 = bigint_nondet_quot!(ctx, x1332, x4, 9);
    let x1334: BytePoly_4 = bigint_nondet_rem!(ctx, x1332, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1333, x4, 13), x1334, 13),
            x1332,
            13
        ),
        73156,
        4,
    )?;
    let x1335: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1334, x1274, 4), x4, 4), x1274, 4),
        x4,
        4
    );
    let x1336: BytePoly_4 = bigint_nondet_quot!(ctx, x1335, x4, 4);
    let x1337: BytePoly_4 = bigint_nondet_rem!(ctx, x1335, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1336, x4, 8), x1337, 8), x1335, 8),
        32515,
        2,
    )?;
    let x1338: BytePoly_8 = bigint_mul!(x1325, x1337, 8);
    let x1339: BytePoly_9 = bigint_nondet_quot!(ctx, x1338, x4, 9);
    let x1340: BytePoly_4 = bigint_nondet_rem!(ctx, x1338, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1339, x4, 13), x1340, 13),
            x1338,
            13
        ),
        73156,
        4,
    )?;
    let x1341: BytePoly_4 = bigint_add!(bigint_sub!(x4, bigint_add!(x1340, x1331, 4), 4), x4, 4);
    let x1342: BytePoly_4 = bigint_nondet_quot!(ctx, x1341, x4, 4);
    let x1343: BytePoly_4 = bigint_nondet_rem!(ctx, x1341, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1342, x4, 8), x1343, 8), x1341, 8),
        32515,
        2,
    )?;
    let x1344: BytePoly_1 = bigint_nondet_rem!(ctx, x1282, x5, 1);
    let x1345: BytePoly_4 = bigint_nondet_quot!(ctx, x1282, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1345, x5, 5), x1344, 5), x1282, 5),
        32515,
        2,
    )?;
    let x1346: BytePoly_1 = bigint_sub!(x6, x1344, 1);
    eqz(ctx, &bigint_mul!(x1344, x1346, 2), 8131, 2)?;
    let x1347: BytePoly_4 = bigint_add!(bigint_sub!(x1337, x1307, 4), x4, 4);
    let x1348: BytePoly_4 = bigint_nondet_inv!(ctx, x1347, x4, 4);
    let x1349: BytePoly_8 = bigint_mul!(x1347, x1348, 8);
    let x1350: BytePoly_9 = bigint_nondet_quot!(ctx, x1349, x4, 9);
    let x1351: BytePoly_4 = bigint_nondet_rem!(ctx, x1349, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1350, x4, 13), x1351, 13),
            x1349,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1351, x1, 4), 34, 1)?;
    let x1352: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x1343, x1309, 4), x4, 4), x1348, 8);
    let x1353: BytePoly_9 = bigint_nondet_quot!(ctx, x1352, x4, 9);
    let x1354: BytePoly_4 = bigint_nondet_rem!(ctx, x1352, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1353, x4, 13), x1354, 13),
            x1352,
            13
        ),
        73156,
        4,
    )?;
    let x1355: BytePoly_8 = bigint_add!(bigint_sub!(x1309, bigint_mul!(x1354, x1307, 8), 8), x4, 8);
    let x1356: BytePoly_8 = bigint_nondet_quot!(ctx, x1355, x4, 8);
    let x1357: BytePoly_4 = bigint_nondet_rem!(ctx, x1355, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1356, x4, 12), x1357, 12),
            x1355,
            12
        ),
        65028,
        4,
    )?;
    let x1358: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x1354, x1354, 8), x1307, 8), x4, 8),
            x1337,
            8
        ),
        x4,
        8
    );
    let x1359: BytePoly_9 = bigint_nondet_quot!(ctx, x1358, x4, 9);
    let x1360: BytePoly_4 = bigint_nondet_rem!(ctx, x1358, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1359, x4, 13), x1360, 13),
            x1358,
            13
        ),
        73156,
        4,
    )?;
    let x1361: BytePoly_8 = bigint_mul!(x1354, x1360, 8);
    let x1362: BytePoly_9 = bigint_nondet_quot!(ctx, x1361, x4, 9);
    let x1363: BytePoly_4 = bigint_nondet_rem!(ctx, x1361, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1362, x4, 13), x1363, 13),
            x1361,
            13
        ),
        73156,
        4,
    )?;
    let x1364: BytePoly_4 = bigint_add!(bigint_sub!(x4, bigint_add!(x1363, x1357, 4), 4), x4, 4);
    let x1365: BytePoly_4 = bigint_nondet_quot!(ctx, x1364, x4, 4);
    let x1366: BytePoly_4 = bigint_nondet_rem!(ctx, x1364, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1365, x4, 8), x1366, 8), x1364, 8),
        32515,
        2,
    )?;
    let x1367: BytePoly_5 = bigint_add!(
        bigint_mul!(x1360, x1344, 5),
        bigint_mul!(x1307, x1346, 5),
        5
    );
    let x1368: BytePoly_5 = bigint_add!(
        bigint_mul!(x1366, x1344, 5),
        bigint_mul!(x1309, x1346, 5),
        5
    );
    let x1369: BytePoly_6 = bigint_nondet_quot!(ctx, x1367, x4, 6);
    let x1370: BytePoly_4 = bigint_nondet_rem!(ctx, x1367, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1369, x4, 10), x1370, 10),
            x1367,
            10
        ),
        48771,
        4,
    )?;
    let x1371: BytePoly_6 = bigint_nondet_quot!(ctx, x1368, x4, 6);
    let x1372: BytePoly_4 = bigint_nondet_rem!(ctx, x1368, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1371, x4, 10), x1372, 10),
            x1368,
            10
        ),
        48771,
        4,
    )?;
    let x1373: BytePoly_8 = bigint_mul!(x1337, x1337, 8);
    let x1374: BytePoly_9 = bigint_nondet_quot!(ctx, x1373, x4, 9);
    let x1375: BytePoly_4 = bigint_nondet_rem!(ctx, x1373, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1374, x4, 13), x1375, 13),
            x1373,
            13
        ),
        73156,
        4,
    )?;
    let x1376: BytePoly_5 = bigint_add!(bigint_mul!(x1375, x0, 5), x3, 5);
    let x1377: BytePoly_6 = bigint_nondet_quot!(ctx, x1376, x4, 6);
    let x1378: BytePoly_4 = bigint_nondet_rem!(ctx, x1376, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1377, x4, 10), x1378, 10),
            x1376,
            10
        ),
        48771,
        4,
    )?;
    let x1379: BytePoly_4 = bigint_add!(x1343, x1343, 4);
    let x1380: BytePoly_4 = bigint_nondet_quot!(ctx, x1379, x4, 4);
    let x1381: BytePoly_4 = bigint_nondet_rem!(ctx, x1379, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1380, x4, 8), x1381, 8), x1379, 8),
        32515,
        2,
    )?;
    let x1382: BytePoly_4 = bigint_nondet_inv!(ctx, x1381, x4, 4);
    let x1383: BytePoly_8 = bigint_mul!(x1381, x1382, 8);
    let x1384: BytePoly_9 = bigint_nondet_quot!(ctx, x1383, x4, 9);
    let x1385: BytePoly_4 = bigint_nondet_rem!(ctx, x1383, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1384, x4, 13), x1385, 13),
            x1383,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1385, x6, 4), 34, 1)?;
    let x1386: BytePoly_8 = bigint_mul!(x1378, x1382, 8);
    let x1387: BytePoly_9 = bigint_nondet_quot!(ctx, x1386, x4, 9);
    let x1388: BytePoly_4 = bigint_nondet_rem!(ctx, x1386, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1387, x4, 13), x1388, 13),
            x1386,
            13
        ),
        73156,
        4,
    )?;
    let x1389: BytePoly_8 = bigint_mul!(x1388, x1337, 8);
    let x1390: BytePoly_9 = bigint_nondet_quot!(ctx, x1389, x4, 9);
    let x1391: BytePoly_4 = bigint_nondet_rem!(ctx, x1389, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1390, x4, 13), x1391, 13),
            x1389,
            13
        ),
        73156,
        4,
    )?;
    let x1392: BytePoly_4 = bigint_add!(bigint_sub!(x1343, x1391, 4), x4, 4);
    let x1393: BytePoly_4 = bigint_nondet_quot!(ctx, x1392, x4, 4);
    let x1394: BytePoly_4 = bigint_nondet_rem!(ctx, x1392, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1393, x4, 8), x1394, 8), x1392, 8),
        32515,
        2,
    )?;
    let x1395: BytePoly_8 = bigint_mul!(x1388, x1388, 8);
    let x1396: BytePoly_9 = bigint_nondet_quot!(ctx, x1395, x4, 9);
    let x1397: BytePoly_4 = bigint_nondet_rem!(ctx, x1395, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1396, x4, 13), x1397, 13),
            x1395,
            13
        ),
        73156,
        4,
    )?;
    let x1398: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1397, x1337, 4), x4, 4), x1337, 4),
        x4,
        4
    );
    let x1399: BytePoly_4 = bigint_nondet_quot!(ctx, x1398, x4, 4);
    let x1400: BytePoly_4 = bigint_nondet_rem!(ctx, x1398, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1399, x4, 8), x1400, 8), x1398, 8),
        32515,
        2,
    )?;
    let x1401: BytePoly_8 = bigint_mul!(x1388, x1400, 8);
    let x1402: BytePoly_9 = bigint_nondet_quot!(ctx, x1401, x4, 9);
    let x1403: BytePoly_4 = bigint_nondet_rem!(ctx, x1401, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1402, x4, 13), x1403, 13),
            x1401,
            13
        ),
        73156,
        4,
    )?;
    let x1404: BytePoly_4 = bigint_add!(bigint_sub!(x4, bigint_add!(x1403, x1394, 4), 4), x4, 4);
    let x1405: BytePoly_4 = bigint_nondet_quot!(ctx, x1404, x4, 4);
    let x1406: BytePoly_4 = bigint_nondet_rem!(ctx, x1404, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1405, x4, 8), x1406, 8), x1404, 8),
        32515,
        2,
    )?;
    let x1407: BytePoly_1 = bigint_nondet_rem!(ctx, x1345, x5, 1);
    let x1408: BytePoly_4 = bigint_nondet_quot!(ctx, x1345, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1408, x5, 5), x1407, 5), x1345, 5),
        32515,
        2,
    )?;
    let x1409: BytePoly_1 = bigint_sub!(x6, x1407, 1);
    eqz(ctx, &bigint_mul!(x1407, x1409, 2), 8131, 2)?;
    let x1410: BytePoly_4 = bigint_add!(bigint_sub!(x1400, x1370, 4), x4, 4);
    let x1411: BytePoly_4 = bigint_nondet_inv!(ctx, x1410, x4, 4);
    let x1412: BytePoly_8 = bigint_mul!(x1410, x1411, 8);
    let x1413: BytePoly_9 = bigint_nondet_quot!(ctx, x1412, x4, 9);
    let x1414: BytePoly_4 = bigint_nondet_rem!(ctx, x1412, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1413, x4, 13), x1414, 13),
            x1412,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1414, x1, 4), 34, 1)?;
    let x1415: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x1406, x1372, 4), x4, 4), x1411, 8);
    let x1416: BytePoly_9 = bigint_nondet_quot!(ctx, x1415, x4, 9);
    let x1417: BytePoly_4 = bigint_nondet_rem!(ctx, x1415, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1416, x4, 13), x1417, 13),
            x1415,
            13
        ),
        73156,
        4,
    )?;
    let x1418: BytePoly_8 = bigint_add!(bigint_sub!(x1372, bigint_mul!(x1417, x1370, 8), 8), x4, 8);
    let x1419: BytePoly_8 = bigint_nondet_quot!(ctx, x1418, x4, 8);
    let x1420: BytePoly_4 = bigint_nondet_rem!(ctx, x1418, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1419, x4, 12), x1420, 12),
            x1418,
            12
        ),
        65028,
        4,
    )?;
    let x1421: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x1417, x1417, 8), x1370, 8), x4, 8),
            x1400,
            8
        ),
        x4,
        8
    );
    let x1422: BytePoly_9 = bigint_nondet_quot!(ctx, x1421, x4, 9);
    let x1423: BytePoly_4 = bigint_nondet_rem!(ctx, x1421, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1422, x4, 13), x1423, 13),
            x1421,
            13
        ),
        73156,
        4,
    )?;
    let x1424: BytePoly_8 = bigint_mul!(x1417, x1423, 8);
    let x1425: BytePoly_9 = bigint_nondet_quot!(ctx, x1424, x4, 9);
    let x1426: BytePoly_4 = bigint_nondet_rem!(ctx, x1424, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1425, x4, 13), x1426, 13),
            x1424,
            13
        ),
        73156,
        4,
    )?;
    let x1427: BytePoly_4 = bigint_add!(bigint_sub!(x4, bigint_add!(x1426, x1420, 4), 4), x4, 4);
    let x1428: BytePoly_4 = bigint_nondet_quot!(ctx, x1427, x4, 4);
    let x1429: BytePoly_4 = bigint_nondet_rem!(ctx, x1427, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1428, x4, 8), x1429, 8), x1427, 8),
        32515,
        2,
    )?;
    let x1430: BytePoly_5 = bigint_add!(
        bigint_mul!(x1423, x1407, 5),
        bigint_mul!(x1370, x1409, 5),
        5
    );
    let x1431: BytePoly_5 = bigint_add!(
        bigint_mul!(x1429, x1407, 5),
        bigint_mul!(x1372, x1409, 5),
        5
    );
    let x1432: BytePoly_6 = bigint_nondet_quot!(ctx, x1430, x4, 6);
    let x1433: BytePoly_4 = bigint_nondet_rem!(ctx, x1430, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1432, x4, 10), x1433, 10),
            x1430,
            10
        ),
        48771,
        4,
    )?;
    let x1434: BytePoly_6 = bigint_nondet_quot!(ctx, x1431, x4, 6);
    let x1435: BytePoly_4 = bigint_nondet_rem!(ctx, x1431, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1434, x4, 10), x1435, 10),
            x1431,
            10
        ),
        48771,
        4,
    )?;
    let x1436: BytePoly_8 = bigint_mul!(x1400, x1400, 8);
    let x1437: BytePoly_9 = bigint_nondet_quot!(ctx, x1436, x4, 9);
    let x1438: BytePoly_4 = bigint_nondet_rem!(ctx, x1436, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1437, x4, 13), x1438, 13),
            x1436,
            13
        ),
        73156,
        4,
    )?;
    let x1439: BytePoly_5 = bigint_add!(bigint_mul!(x1438, x0, 5), x3, 5);
    let x1440: BytePoly_6 = bigint_nondet_quot!(ctx, x1439, x4, 6);
    let x1441: BytePoly_4 = bigint_nondet_rem!(ctx, x1439, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1440, x4, 10), x1441, 10),
            x1439,
            10
        ),
        48771,
        4,
    )?;
    let x1442: BytePoly_4 = bigint_add!(x1406, x1406, 4);
    let x1443: BytePoly_4 = bigint_nondet_quot!(ctx, x1442, x4, 4);
    let x1444: BytePoly_4 = bigint_nondet_rem!(ctx, x1442, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1443, x4, 8), x1444, 8), x1442, 8),
        32515,
        2,
    )?;
    let x1445: BytePoly_4 = bigint_nondet_inv!(ctx, x1444, x4, 4);
    let x1446: BytePoly_8 = bigint_mul!(x1444, x1445, 8);
    let x1447: BytePoly_9 = bigint_nondet_quot!(ctx, x1446, x4, 9);
    let x1448: BytePoly_4 = bigint_nondet_rem!(ctx, x1446, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1447, x4, 13), x1448, 13),
            x1446,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1448, x6, 4), 34, 1)?;
    let x1449: BytePoly_8 = bigint_mul!(x1441, x1445, 8);
    let x1450: BytePoly_9 = bigint_nondet_quot!(ctx, x1449, x4, 9);
    let x1451: BytePoly_4 = bigint_nondet_rem!(ctx, x1449, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1450, x4, 13), x1451, 13),
            x1449,
            13
        ),
        73156,
        4,
    )?;
    let x1452: BytePoly_8 = bigint_mul!(x1451, x1400, 8);
    let x1453: BytePoly_9 = bigint_nondet_quot!(ctx, x1452, x4, 9);
    let x1454: BytePoly_4 = bigint_nondet_rem!(ctx, x1452, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1453, x4, 13), x1454, 13),
            x1452,
            13
        ),
        73156,
        4,
    )?;
    let x1455: BytePoly_4 = bigint_add!(bigint_sub!(x1406, x1454, 4), x4, 4);
    let x1456: BytePoly_4 = bigint_nondet_quot!(ctx, x1455, x4, 4);
    let x1457: BytePoly_4 = bigint_nondet_rem!(ctx, x1455, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1456, x4, 8), x1457, 8), x1455, 8),
        32515,
        2,
    )?;
    let x1458: BytePoly_8 = bigint_mul!(x1451, x1451, 8);
    let x1459: BytePoly_9 = bigint_nondet_quot!(ctx, x1458, x4, 9);
    let x1460: BytePoly_4 = bigint_nondet_rem!(ctx, x1458, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1459, x4, 13), x1460, 13),
            x1458,
            13
        ),
        73156,
        4,
    )?;
    let x1461: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1460, x1400, 4), x4, 4), x1400, 4),
        x4,
        4
    );
    let x1462: BytePoly_4 = bigint_nondet_quot!(ctx, x1461, x4, 4);
    let x1463: BytePoly_4 = bigint_nondet_rem!(ctx, x1461, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1462, x4, 8), x1463, 8), x1461, 8),
        32515,
        2,
    )?;
    let x1464: BytePoly_8 = bigint_mul!(x1451, x1463, 8);
    let x1465: BytePoly_9 = bigint_nondet_quot!(ctx, x1464, x4, 9);
    let x1466: BytePoly_4 = bigint_nondet_rem!(ctx, x1464, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1465, x4, 13), x1466, 13),
            x1464,
            13
        ),
        73156,
        4,
    )?;
    let x1467: BytePoly_4 = bigint_add!(bigint_sub!(x4, bigint_add!(x1466, x1457, 4), 4), x4, 4);
    let x1468: BytePoly_4 = bigint_nondet_quot!(ctx, x1467, x4, 4);
    let x1469: BytePoly_4 = bigint_nondet_rem!(ctx, x1467, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1468, x4, 8), x1469, 8), x1467, 8),
        32515,
        2,
    )?;
    let x1470: BytePoly_1 = bigint_nondet_rem!(ctx, x1408, x5, 1);
    let x1471: BytePoly_4 = bigint_nondet_quot!(ctx, x1408, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1471, x5, 5), x1470, 5), x1408, 5),
        32515,
        2,
    )?;
    let x1472: BytePoly_1 = bigint_sub!(x6, x1470, 1);
    eqz(ctx, &bigint_mul!(x1470, x1472, 2), 8131, 2)?;
    let x1473: BytePoly_4 = bigint_add!(bigint_sub!(x1463, x1433, 4), x4, 4);
    let x1474: BytePoly_4 = bigint_nondet_inv!(ctx, x1473, x4, 4);
    let x1475: BytePoly_8 = bigint_mul!(x1473, x1474, 8);
    let x1476: BytePoly_9 = bigint_nondet_quot!(ctx, x1475, x4, 9);
    let x1477: BytePoly_4 = bigint_nondet_rem!(ctx, x1475, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1476, x4, 13), x1477, 13),
            x1475,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1477, x1, 4), 34, 1)?;
    let x1478: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x1469, x1435, 4), x4, 4), x1474, 8);
    let x1479: BytePoly_9 = bigint_nondet_quot!(ctx, x1478, x4, 9);
    let x1480: BytePoly_4 = bigint_nondet_rem!(ctx, x1478, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1479, x4, 13), x1480, 13),
            x1478,
            13
        ),
        73156,
        4,
    )?;
    let x1481: BytePoly_8 = bigint_add!(bigint_sub!(x1435, bigint_mul!(x1480, x1433, 8), 8), x4, 8);
    let x1482: BytePoly_8 = bigint_nondet_quot!(ctx, x1481, x4, 8);
    let x1483: BytePoly_4 = bigint_nondet_rem!(ctx, x1481, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1482, x4, 12), x1483, 12),
            x1481,
            12
        ),
        65028,
        4,
    )?;
    let x1484: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x1480, x1480, 8), x1433, 8), x4, 8),
            x1463,
            8
        ),
        x4,
        8
    );
    let x1485: BytePoly_9 = bigint_nondet_quot!(ctx, x1484, x4, 9);
    let x1486: BytePoly_4 = bigint_nondet_rem!(ctx, x1484, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1485, x4, 13), x1486, 13),
            x1484,
            13
        ),
        73156,
        4,
    )?;
    let x1487: BytePoly_8 = bigint_mul!(x1480, x1486, 8);
    let x1488: BytePoly_9 = bigint_nondet_quot!(ctx, x1487, x4, 9);
    let x1489: BytePoly_4 = bigint_nondet_rem!(ctx, x1487, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1488, x4, 13), x1489, 13),
            x1487,
            13
        ),
        73156,
        4,
    )?;
    let x1490: BytePoly_4 = bigint_add!(bigint_sub!(x4, bigint_add!(x1489, x1483, 4), 4), x4, 4);
    let x1491: BytePoly_4 = bigint_nondet_quot!(ctx, x1490, x4, 4);
    let x1492: BytePoly_4 = bigint_nondet_rem!(ctx, x1490, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1491, x4, 8), x1492, 8), x1490, 8),
        32515,
        2,
    )?;
    let x1493: BytePoly_5 = bigint_add!(
        bigint_mul!(x1486, x1470, 5),
        bigint_mul!(x1433, x1472, 5),
        5
    );
    let x1494: BytePoly_5 = bigint_add!(
        bigint_mul!(x1492, x1470, 5),
        bigint_mul!(x1435, x1472, 5),
        5
    );
    let x1495: BytePoly_6 = bigint_nondet_quot!(ctx, x1493, x4, 6);
    let x1496: BytePoly_4 = bigint_nondet_rem!(ctx, x1493, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1495, x4, 10), x1496, 10),
            x1493,
            10
        ),
        48771,
        4,
    )?;
    let x1497: BytePoly_6 = bigint_nondet_quot!(ctx, x1494, x4, 6);
    let x1498: BytePoly_4 = bigint_nondet_rem!(ctx, x1494, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1497, x4, 10), x1498, 10),
            x1494,
            10
        ),
        48771,
        4,
    )?;
    let x1499: BytePoly_8 = bigint_mul!(x1463, x1463, 8);
    let x1500: BytePoly_9 = bigint_nondet_quot!(ctx, x1499, x4, 9);
    let x1501: BytePoly_4 = bigint_nondet_rem!(ctx, x1499, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1500, x4, 13), x1501, 13),
            x1499,
            13
        ),
        73156,
        4,
    )?;
    let x1502: BytePoly_5 = bigint_add!(bigint_mul!(x1501, x0, 5), x3, 5);
    let x1503: BytePoly_6 = bigint_nondet_quot!(ctx, x1502, x4, 6);
    let x1504: BytePoly_4 = bigint_nondet_rem!(ctx, x1502, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1503, x4, 10), x1504, 10),
            x1502,
            10
        ),
        48771,
        4,
    )?;
    let x1505: BytePoly_4 = bigint_add!(x1469, x1469, 4);
    let x1506: BytePoly_4 = bigint_nondet_quot!(ctx, x1505, x4, 4);
    let x1507: BytePoly_4 = bigint_nondet_rem!(ctx, x1505, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1506, x4, 8), x1507, 8), x1505, 8),
        32515,
        2,
    )?;
    let x1508: BytePoly_4 = bigint_nondet_inv!(ctx, x1507, x4, 4);
    let x1509: BytePoly_8 = bigint_mul!(x1507, x1508, 8);
    let x1510: BytePoly_9 = bigint_nondet_quot!(ctx, x1509, x4, 9);
    let x1511: BytePoly_4 = bigint_nondet_rem!(ctx, x1509, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1510, x4, 13), x1511, 13),
            x1509,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1511, x6, 4), 34, 1)?;
    let x1512: BytePoly_8 = bigint_mul!(x1504, x1508, 8);
    let x1513: BytePoly_9 = bigint_nondet_quot!(ctx, x1512, x4, 9);
    let x1514: BytePoly_4 = bigint_nondet_rem!(ctx, x1512, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1513, x4, 13), x1514, 13),
            x1512,
            13
        ),
        73156,
        4,
    )?;
    let x1515: BytePoly_8 = bigint_mul!(x1514, x1463, 8);
    let x1516: BytePoly_9 = bigint_nondet_quot!(ctx, x1515, x4, 9);
    let x1517: BytePoly_4 = bigint_nondet_rem!(ctx, x1515, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1516, x4, 13), x1517, 13),
            x1515,
            13
        ),
        73156,
        4,
    )?;
    let x1518: BytePoly_4 = bigint_add!(bigint_sub!(x1469, x1517, 4), x4, 4);
    let x1519: BytePoly_4 = bigint_nondet_quot!(ctx, x1518, x4, 4);
    let x1520: BytePoly_4 = bigint_nondet_rem!(ctx, x1518, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1519, x4, 8), x1520, 8), x1518, 8),
        32515,
        2,
    )?;
    let x1521: BytePoly_8 = bigint_mul!(x1514, x1514, 8);
    let x1522: BytePoly_9 = bigint_nondet_quot!(ctx, x1521, x4, 9);
    let x1523: BytePoly_4 = bigint_nondet_rem!(ctx, x1521, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1522, x4, 13), x1523, 13),
            x1521,
            13
        ),
        73156,
        4,
    )?;
    let x1524: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1523, x1463, 4), x4, 4), x1463, 4),
        x4,
        4
    );
    let x1525: BytePoly_4 = bigint_nondet_quot!(ctx, x1524, x4, 4);
    let x1526: BytePoly_4 = bigint_nondet_rem!(ctx, x1524, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1525, x4, 8), x1526, 8), x1524, 8),
        32515,
        2,
    )?;
    let x1527: BytePoly_8 = bigint_mul!(x1514, x1526, 8);
    let x1528: BytePoly_9 = bigint_nondet_quot!(ctx, x1527, x4, 9);
    let x1529: BytePoly_4 = bigint_nondet_rem!(ctx, x1527, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1528, x4, 13), x1529, 13),
            x1527,
            13
        ),
        73156,
        4,
    )?;
    let x1530: BytePoly_4 = bigint_add!(bigint_sub!(x4, bigint_add!(x1529, x1520, 4), 4), x4, 4);
    let x1531: BytePoly_4 = bigint_nondet_quot!(ctx, x1530, x4, 4);
    let x1532: BytePoly_4 = bigint_nondet_rem!(ctx, x1530, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1531, x4, 8), x1532, 8), x1530, 8),
        32515,
        2,
    )?;
    let x1533: BytePoly_1 = bigint_nondet_rem!(ctx, x1471, x5, 1);
    let x1534: BytePoly_4 = bigint_nondet_quot!(ctx, x1471, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1534, x5, 5), x1533, 5), x1471, 5),
        32515,
        2,
    )?;
    let x1535: BytePoly_1 = bigint_sub!(x6, x1533, 1);
    eqz(ctx, &bigint_mul!(x1533, x1535, 2), 8131, 2)?;
    let x1536: BytePoly_4 = bigint_add!(bigint_sub!(x1526, x1496, 4), x4, 4);
    let x1537: BytePoly_4 = bigint_nondet_inv!(ctx, x1536, x4, 4);
    let x1538: BytePoly_8 = bigint_mul!(x1536, x1537, 8);
    let x1539: BytePoly_9 = bigint_nondet_quot!(ctx, x1538, x4, 9);
    let x1540: BytePoly_4 = bigint_nondet_rem!(ctx, x1538, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1539, x4, 13), x1540, 13),
            x1538,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1540, x1, 4), 34, 1)?;
    let x1541: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x1532, x1498, 4), x4, 4), x1537, 8);
    let x1542: BytePoly_9 = bigint_nondet_quot!(ctx, x1541, x4, 9);
    let x1543: BytePoly_4 = bigint_nondet_rem!(ctx, x1541, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1542, x4, 13), x1543, 13),
            x1541,
            13
        ),
        73156,
        4,
    )?;
    let x1544: BytePoly_8 = bigint_add!(bigint_sub!(x1498, bigint_mul!(x1543, x1496, 8), 8), x4, 8);
    let x1545: BytePoly_8 = bigint_nondet_quot!(ctx, x1544, x4, 8);
    let x1546: BytePoly_4 = bigint_nondet_rem!(ctx, x1544, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1545, x4, 12), x1546, 12),
            x1544,
            12
        ),
        65028,
        4,
    )?;
    let x1547: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x1543, x1543, 8), x1496, 8), x4, 8),
            x1526,
            8
        ),
        x4,
        8
    );
    let x1548: BytePoly_9 = bigint_nondet_quot!(ctx, x1547, x4, 9);
    let x1549: BytePoly_4 = bigint_nondet_rem!(ctx, x1547, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1548, x4, 13), x1549, 13),
            x1547,
            13
        ),
        73156,
        4,
    )?;
    let x1550: BytePoly_8 = bigint_mul!(x1543, x1549, 8);
    let x1551: BytePoly_9 = bigint_nondet_quot!(ctx, x1550, x4, 9);
    let x1552: BytePoly_4 = bigint_nondet_rem!(ctx, x1550, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1551, x4, 13), x1552, 13),
            x1550,
            13
        ),
        73156,
        4,
    )?;
    let x1553: BytePoly_4 = bigint_add!(bigint_sub!(x4, bigint_add!(x1552, x1546, 4), 4), x4, 4);
    let x1554: BytePoly_4 = bigint_nondet_quot!(ctx, x1553, x4, 4);
    let x1555: BytePoly_4 = bigint_nondet_rem!(ctx, x1553, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1554, x4, 8), x1555, 8), x1553, 8),
        32515,
        2,
    )?;
    let x1556: BytePoly_5 = bigint_add!(
        bigint_mul!(x1549, x1533, 5),
        bigint_mul!(x1496, x1535, 5),
        5
    );
    let x1557: BytePoly_5 = bigint_add!(
        bigint_mul!(x1555, x1533, 5),
        bigint_mul!(x1498, x1535, 5),
        5
    );
    let x1558: BytePoly_6 = bigint_nondet_quot!(ctx, x1556, x4, 6);
    let x1559: BytePoly_4 = bigint_nondet_rem!(ctx, x1556, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1558, x4, 10), x1559, 10),
            x1556,
            10
        ),
        48771,
        4,
    )?;
    let x1560: BytePoly_6 = bigint_nondet_quot!(ctx, x1557, x4, 6);
    let x1561: BytePoly_4 = bigint_nondet_rem!(ctx, x1557, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1560, x4, 10), x1561, 10),
            x1557,
            10
        ),
        48771,
        4,
    )?;
    let x1562: BytePoly_8 = bigint_mul!(x1526, x1526, 8);
    let x1563: BytePoly_9 = bigint_nondet_quot!(ctx, x1562, x4, 9);
    let x1564: BytePoly_4 = bigint_nondet_rem!(ctx, x1562, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1563, x4, 13), x1564, 13),
            x1562,
            13
        ),
        73156,
        4,
    )?;
    let x1565: BytePoly_5 = bigint_add!(bigint_mul!(x1564, x0, 5), x3, 5);
    let x1566: BytePoly_6 = bigint_nondet_quot!(ctx, x1565, x4, 6);
    let x1567: BytePoly_4 = bigint_nondet_rem!(ctx, x1565, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1566, x4, 10), x1567, 10),
            x1565,
            10
        ),
        48771,
        4,
    )?;
    let x1568: BytePoly_4 = bigint_add!(x1532, x1532, 4);
    let x1569: BytePoly_4 = bigint_nondet_quot!(ctx, x1568, x4, 4);
    let x1570: BytePoly_4 = bigint_nondet_rem!(ctx, x1568, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1569, x4, 8), x1570, 8), x1568, 8),
        32515,
        2,
    )?;
    let x1571: BytePoly_4 = bigint_nondet_inv!(ctx, x1570, x4, 4);
    let x1572: BytePoly_8 = bigint_mul!(x1570, x1571, 8);
    let x1573: BytePoly_9 = bigint_nondet_quot!(ctx, x1572, x4, 9);
    let x1574: BytePoly_4 = bigint_nondet_rem!(ctx, x1572, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1573, x4, 13), x1574, 13),
            x1572,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1574, x6, 4), 34, 1)?;
    let x1575: BytePoly_8 = bigint_mul!(x1567, x1571, 8);
    let x1576: BytePoly_9 = bigint_nondet_quot!(ctx, x1575, x4, 9);
    let x1577: BytePoly_4 = bigint_nondet_rem!(ctx, x1575, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1576, x4, 13), x1577, 13),
            x1575,
            13
        ),
        73156,
        4,
    )?;
    let x1578: BytePoly_8 = bigint_mul!(x1577, x1526, 8);
    let x1579: BytePoly_9 = bigint_nondet_quot!(ctx, x1578, x4, 9);
    let x1580: BytePoly_4 = bigint_nondet_rem!(ctx, x1578, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1579, x4, 13), x1580, 13),
            x1578,
            13
        ),
        73156,
        4,
    )?;
    let x1581: BytePoly_4 = bigint_add!(bigint_sub!(x1532, x1580, 4), x4, 4);
    let x1582: BytePoly_4 = bigint_nondet_quot!(ctx, x1581, x4, 4);
    let x1583: BytePoly_4 = bigint_nondet_rem!(ctx, x1581, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1582, x4, 8), x1583, 8), x1581, 8),
        32515,
        2,
    )?;
    let x1584: BytePoly_8 = bigint_mul!(x1577, x1577, 8);
    let x1585: BytePoly_9 = bigint_nondet_quot!(ctx, x1584, x4, 9);
    let x1586: BytePoly_4 = bigint_nondet_rem!(ctx, x1584, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1585, x4, 13), x1586, 13),
            x1584,
            13
        ),
        73156,
        4,
    )?;
    let x1587: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1586, x1526, 4), x4, 4), x1526, 4),
        x4,
        4
    );
    let x1588: BytePoly_4 = bigint_nondet_quot!(ctx, x1587, x4, 4);
    let x1589: BytePoly_4 = bigint_nondet_rem!(ctx, x1587, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1588, x4, 8), x1589, 8), x1587, 8),
        32515,
        2,
    )?;
    let x1590: BytePoly_8 = bigint_mul!(x1577, x1589, 8);
    let x1591: BytePoly_9 = bigint_nondet_quot!(ctx, x1590, x4, 9);
    let x1592: BytePoly_4 = bigint_nondet_rem!(ctx, x1590, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1591, x4, 13), x1592, 13),
            x1590,
            13
        ),
        73156,
        4,
    )?;
    let x1593: BytePoly_4 = bigint_add!(bigint_sub!(x4, bigint_add!(x1592, x1583, 4), 4), x4, 4);
    let x1594: BytePoly_4 = bigint_nondet_quot!(ctx, x1593, x4, 4);
    let x1595: BytePoly_4 = bigint_nondet_rem!(ctx, x1593, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1594, x4, 8), x1595, 8), x1593, 8),
        32515,
        2,
    )?;
    let x1596: BytePoly_1 = bigint_nondet_rem!(ctx, x1534, x5, 1);
    let x1597: BytePoly_4 = bigint_nondet_quot!(ctx, x1534, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1597, x5, 5), x1596, 5), x1534, 5),
        32515,
        2,
    )?;
    let x1598: BytePoly_1 = bigint_sub!(x6, x1596, 1);
    eqz(ctx, &bigint_mul!(x1596, x1598, 2), 8131, 2)?;
    let x1599: BytePoly_4 = bigint_add!(bigint_sub!(x1589, x1559, 4), x4, 4);
    let x1600: BytePoly_4 = bigint_nondet_inv!(ctx, x1599, x4, 4);
    let x1601: BytePoly_8 = bigint_mul!(x1599, x1600, 8);
    let x1602: BytePoly_9 = bigint_nondet_quot!(ctx, x1601, x4, 9);
    let x1603: BytePoly_4 = bigint_nondet_rem!(ctx, x1601, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1602, x4, 13), x1603, 13),
            x1601,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1603, x1, 4), 34, 1)?;
    let x1604: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x1595, x1561, 4), x4, 4), x1600, 8);
    let x1605: BytePoly_9 = bigint_nondet_quot!(ctx, x1604, x4, 9);
    let x1606: BytePoly_4 = bigint_nondet_rem!(ctx, x1604, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1605, x4, 13), x1606, 13),
            x1604,
            13
        ),
        73156,
        4,
    )?;
    let x1607: BytePoly_8 = bigint_add!(bigint_sub!(x1561, bigint_mul!(x1606, x1559, 8), 8), x4, 8);
    let x1608: BytePoly_8 = bigint_nondet_quot!(ctx, x1607, x4, 8);
    let x1609: BytePoly_4 = bigint_nondet_rem!(ctx, x1607, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1608, x4, 12), x1609, 12),
            x1607,
            12
        ),
        65028,
        4,
    )?;
    let x1610: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x1606, x1606, 8), x1559, 8), x4, 8),
            x1589,
            8
        ),
        x4,
        8
    );
    let x1611: BytePoly_9 = bigint_nondet_quot!(ctx, x1610, x4, 9);
    let x1612: BytePoly_4 = bigint_nondet_rem!(ctx, x1610, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1611, x4, 13), x1612, 13),
            x1610,
            13
        ),
        73156,
        4,
    )?;
    let x1613: BytePoly_8 = bigint_mul!(x1606, x1612, 8);
    let x1614: BytePoly_9 = bigint_nondet_quot!(ctx, x1613, x4, 9);
    let x1615: BytePoly_4 = bigint_nondet_rem!(ctx, x1613, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1614, x4, 13), x1615, 13),
            x1613,
            13
        ),
        73156,
        4,
    )?;
    let x1616: BytePoly_4 = bigint_add!(bigint_sub!(x4, bigint_add!(x1615, x1609, 4), 4), x4, 4);
    let x1617: BytePoly_4 = bigint_nondet_quot!(ctx, x1616, x4, 4);
    let x1618: BytePoly_4 = bigint_nondet_rem!(ctx, x1616, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1617, x4, 8), x1618, 8), x1616, 8),
        32515,
        2,
    )?;
    let x1619: BytePoly_5 = bigint_add!(
        bigint_mul!(x1612, x1596, 5),
        bigint_mul!(x1559, x1598, 5),
        5
    );
    let x1620: BytePoly_5 = bigint_add!(
        bigint_mul!(x1618, x1596, 5),
        bigint_mul!(x1561, x1598, 5),
        5
    );
    let x1621: BytePoly_6 = bigint_nondet_quot!(ctx, x1619, x4, 6);
    let x1622: BytePoly_4 = bigint_nondet_rem!(ctx, x1619, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1621, x4, 10), x1622, 10),
            x1619,
            10
        ),
        48771,
        4,
    )?;
    let x1623: BytePoly_6 = bigint_nondet_quot!(ctx, x1620, x4, 6);
    let x1624: BytePoly_4 = bigint_nondet_rem!(ctx, x1620, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1623, x4, 10), x1624, 10),
            x1620,
            10
        ),
        48771,
        4,
    )?;
    let x1625: BytePoly_8 = bigint_mul!(x1589, x1589, 8);
    let x1626: BytePoly_9 = bigint_nondet_quot!(ctx, x1625, x4, 9);
    let x1627: BytePoly_4 = bigint_nondet_rem!(ctx, x1625, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1626, x4, 13), x1627, 13),
            x1625,
            13
        ),
        73156,
        4,
    )?;
    let x1628: BytePoly_5 = bigint_add!(bigint_mul!(x1627, x0, 5), x3, 5);
    let x1629: BytePoly_6 = bigint_nondet_quot!(ctx, x1628, x4, 6);
    let x1630: BytePoly_4 = bigint_nondet_rem!(ctx, x1628, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1629, x4, 10), x1630, 10),
            x1628,
            10
        ),
        48771,
        4,
    )?;
    let x1631: BytePoly_4 = bigint_add!(x1595, x1595, 4);
    let x1632: BytePoly_4 = bigint_nondet_quot!(ctx, x1631, x4, 4);
    let x1633: BytePoly_4 = bigint_nondet_rem!(ctx, x1631, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1632, x4, 8), x1633, 8), x1631, 8),
        32515,
        2,
    )?;
    let x1634: BytePoly_4 = bigint_nondet_inv!(ctx, x1633, x4, 4);
    let x1635: BytePoly_8 = bigint_mul!(x1633, x1634, 8);
    let x1636: BytePoly_9 = bigint_nondet_quot!(ctx, x1635, x4, 9);
    let x1637: BytePoly_4 = bigint_nondet_rem!(ctx, x1635, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1636, x4, 13), x1637, 13),
            x1635,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1637, x6, 4), 34, 1)?;
    let x1638: BytePoly_8 = bigint_mul!(x1630, x1634, 8);
    let x1639: BytePoly_9 = bigint_nondet_quot!(ctx, x1638, x4, 9);
    let x1640: BytePoly_4 = bigint_nondet_rem!(ctx, x1638, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1639, x4, 13), x1640, 13),
            x1638,
            13
        ),
        73156,
        4,
    )?;
    let x1641: BytePoly_8 = bigint_mul!(x1640, x1589, 8);
    let x1642: BytePoly_9 = bigint_nondet_quot!(ctx, x1641, x4, 9);
    let x1643: BytePoly_4 = bigint_nondet_rem!(ctx, x1641, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1642, x4, 13), x1643, 13),
            x1641,
            13
        ),
        73156,
        4,
    )?;
    let x1644: BytePoly_4 = bigint_add!(bigint_sub!(x1595, x1643, 4), x4, 4);
    let x1645: BytePoly_4 = bigint_nondet_quot!(ctx, x1644, x4, 4);
    let x1646: BytePoly_4 = bigint_nondet_rem!(ctx, x1644, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1645, x4, 8), x1646, 8), x1644, 8),
        32515,
        2,
    )?;
    let x1647: BytePoly_8 = bigint_mul!(x1640, x1640, 8);
    let x1648: BytePoly_9 = bigint_nondet_quot!(ctx, x1647, x4, 9);
    let x1649: BytePoly_4 = bigint_nondet_rem!(ctx, x1647, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1648, x4, 13), x1649, 13),
            x1647,
            13
        ),
        73156,
        4,
    )?;
    let x1650: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1649, x1589, 4), x4, 4), x1589, 4),
        x4,
        4
    );
    let x1651: BytePoly_4 = bigint_nondet_quot!(ctx, x1650, x4, 4);
    let x1652: BytePoly_4 = bigint_nondet_rem!(ctx, x1650, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1651, x4, 8), x1652, 8), x1650, 8),
        32515,
        2,
    )?;
    let x1653: BytePoly_8 = bigint_mul!(x1640, x1652, 8);
    let x1654: BytePoly_9 = bigint_nondet_quot!(ctx, x1653, x4, 9);
    let x1655: BytePoly_4 = bigint_nondet_rem!(ctx, x1653, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1654, x4, 13), x1655, 13),
            x1653,
            13
        ),
        73156,
        4,
    )?;
    let x1656: BytePoly_4 = bigint_add!(bigint_sub!(x4, bigint_add!(x1655, x1646, 4), 4), x4, 4);
    let x1657: BytePoly_4 = bigint_nondet_quot!(ctx, x1656, x4, 4);
    let x1658: BytePoly_4 = bigint_nondet_rem!(ctx, x1656, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1657, x4, 8), x1658, 8), x1656, 8),
        32515,
        2,
    )?;
    let x1659: BytePoly_1 = bigint_nondet_rem!(ctx, x1597, x5, 1);
    let x1660: BytePoly_4 = bigint_nondet_quot!(ctx, x1597, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1660, x5, 5), x1659, 5), x1597, 5),
        32515,
        2,
    )?;
    let x1661: BytePoly_1 = bigint_sub!(x6, x1659, 1);
    eqz(ctx, &bigint_mul!(x1659, x1661, 2), 8131, 2)?;
    let x1662: BytePoly_4 = bigint_add!(bigint_sub!(x1652, x1622, 4), x4, 4);
    let x1663: BytePoly_4 = bigint_nondet_inv!(ctx, x1662, x4, 4);
    let x1664: BytePoly_8 = bigint_mul!(x1662, x1663, 8);
    let x1665: BytePoly_9 = bigint_nondet_quot!(ctx, x1664, x4, 9);
    let x1666: BytePoly_4 = bigint_nondet_rem!(ctx, x1664, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1665, x4, 13), x1666, 13),
            x1664,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1666, x1, 4), 34, 1)?;
    let x1667: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x1658, x1624, 4), x4, 4), x1663, 8);
    let x1668: BytePoly_9 = bigint_nondet_quot!(ctx, x1667, x4, 9);
    let x1669: BytePoly_4 = bigint_nondet_rem!(ctx, x1667, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1668, x4, 13), x1669, 13),
            x1667,
            13
        ),
        73156,
        4,
    )?;
    let x1670: BytePoly_8 = bigint_add!(bigint_sub!(x1624, bigint_mul!(x1669, x1622, 8), 8), x4, 8);
    let x1671: BytePoly_8 = bigint_nondet_quot!(ctx, x1670, x4, 8);
    let x1672: BytePoly_4 = bigint_nondet_rem!(ctx, x1670, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1671, x4, 12), x1672, 12),
            x1670,
            12
        ),
        65028,
        4,
    )?;
    let x1673: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x1669, x1669, 8), x1622, 8), x4, 8),
            x1652,
            8
        ),
        x4,
        8
    );
    let x1674: BytePoly_9 = bigint_nondet_quot!(ctx, x1673, x4, 9);
    let x1675: BytePoly_4 = bigint_nondet_rem!(ctx, x1673, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1674, x4, 13), x1675, 13),
            x1673,
            13
        ),
        73156,
        4,
    )?;
    let x1676: BytePoly_8 = bigint_mul!(x1669, x1675, 8);
    let x1677: BytePoly_9 = bigint_nondet_quot!(ctx, x1676, x4, 9);
    let x1678: BytePoly_4 = bigint_nondet_rem!(ctx, x1676, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1677, x4, 13), x1678, 13),
            x1676,
            13
        ),
        73156,
        4,
    )?;
    let x1679: BytePoly_4 = bigint_add!(bigint_sub!(x4, bigint_add!(x1678, x1672, 4), 4), x4, 4);
    let x1680: BytePoly_4 = bigint_nondet_quot!(ctx, x1679, x4, 4);
    let x1681: BytePoly_4 = bigint_nondet_rem!(ctx, x1679, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1680, x4, 8), x1681, 8), x1679, 8),
        32515,
        2,
    )?;
    let x1682: BytePoly_5 = bigint_add!(
        bigint_mul!(x1675, x1659, 5),
        bigint_mul!(x1622, x1661, 5),
        5
    );
    let x1683: BytePoly_5 = bigint_add!(
        bigint_mul!(x1681, x1659, 5),
        bigint_mul!(x1624, x1661, 5),
        5
    );
    let x1684: BytePoly_6 = bigint_nondet_quot!(ctx, x1682, x4, 6);
    let x1685: BytePoly_4 = bigint_nondet_rem!(ctx, x1682, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1684, x4, 10), x1685, 10),
            x1682,
            10
        ),
        48771,
        4,
    )?;
    let x1686: BytePoly_6 = bigint_nondet_quot!(ctx, x1683, x4, 6);
    let x1687: BytePoly_4 = bigint_nondet_rem!(ctx, x1683, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1686, x4, 10), x1687, 10),
            x1683,
            10
        ),
        48771,
        4,
    )?;
    let x1688: BytePoly_8 = bigint_mul!(x1652, x1652, 8);
    let x1689: BytePoly_9 = bigint_nondet_quot!(ctx, x1688, x4, 9);
    let x1690: BytePoly_4 = bigint_nondet_rem!(ctx, x1688, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1689, x4, 13), x1690, 13),
            x1688,
            13
        ),
        73156,
        4,
    )?;
    let x1691: BytePoly_5 = bigint_add!(bigint_mul!(x1690, x0, 5), x3, 5);
    let x1692: BytePoly_6 = bigint_nondet_quot!(ctx, x1691, x4, 6);
    let x1693: BytePoly_4 = bigint_nondet_rem!(ctx, x1691, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1692, x4, 10), x1693, 10),
            x1691,
            10
        ),
        48771,
        4,
    )?;
    let x1694: BytePoly_4 = bigint_add!(x1658, x1658, 4);
    let x1695: BytePoly_4 = bigint_nondet_quot!(ctx, x1694, x4, 4);
    let x1696: BytePoly_4 = bigint_nondet_rem!(ctx, x1694, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1695, x4, 8), x1696, 8), x1694, 8),
        32515,
        2,
    )?;
    let x1697: BytePoly_4 = bigint_nondet_inv!(ctx, x1696, x4, 4);
    let x1698: BytePoly_8 = bigint_mul!(x1696, x1697, 8);
    let x1699: BytePoly_9 = bigint_nondet_quot!(ctx, x1698, x4, 9);
    let x1700: BytePoly_4 = bigint_nondet_rem!(ctx, x1698, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1699, x4, 13), x1700, 13),
            x1698,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1700, x6, 4), 34, 1)?;
    let x1701: BytePoly_8 = bigint_mul!(x1693, x1697, 8);
    let x1702: BytePoly_9 = bigint_nondet_quot!(ctx, x1701, x4, 9);
    let x1703: BytePoly_4 = bigint_nondet_rem!(ctx, x1701, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1702, x4, 13), x1703, 13),
            x1701,
            13
        ),
        73156,
        4,
    )?;
    let x1704: BytePoly_8 = bigint_mul!(x1703, x1652, 8);
    let x1705: BytePoly_9 = bigint_nondet_quot!(ctx, x1704, x4, 9);
    let x1706: BytePoly_4 = bigint_nondet_rem!(ctx, x1704, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1705, x4, 13), x1706, 13),
            x1704,
            13
        ),
        73156,
        4,
    )?;
    let x1707: BytePoly_4 = bigint_add!(bigint_sub!(x1658, x1706, 4), x4, 4);
    let x1708: BytePoly_4 = bigint_nondet_quot!(ctx, x1707, x4, 4);
    let x1709: BytePoly_4 = bigint_nondet_rem!(ctx, x1707, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1708, x4, 8), x1709, 8), x1707, 8),
        32515,
        2,
    )?;
    let x1710: BytePoly_8 = bigint_mul!(x1703, x1703, 8);
    let x1711: BytePoly_9 = bigint_nondet_quot!(ctx, x1710, x4, 9);
    let x1712: BytePoly_4 = bigint_nondet_rem!(ctx, x1710, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1711, x4, 13), x1712, 13),
            x1710,
            13
        ),
        73156,
        4,
    )?;
    let x1713: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1712, x1652, 4), x4, 4), x1652, 4),
        x4,
        4
    );
    let x1714: BytePoly_4 = bigint_nondet_quot!(ctx, x1713, x4, 4);
    let x1715: BytePoly_4 = bigint_nondet_rem!(ctx, x1713, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1714, x4, 8), x1715, 8), x1713, 8),
        32515,
        2,
    )?;
    let x1716: BytePoly_8 = bigint_mul!(x1703, x1715, 8);
    let x1717: BytePoly_9 = bigint_nondet_quot!(ctx, x1716, x4, 9);
    let x1718: BytePoly_4 = bigint_nondet_rem!(ctx, x1716, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1717, x4, 13), x1718, 13),
            x1716,
            13
        ),
        73156,
        4,
    )?;
    let x1719: BytePoly_4 = bigint_add!(bigint_sub!(x4, bigint_add!(x1718, x1709, 4), 4), x4, 4);
    let x1720: BytePoly_4 = bigint_nondet_quot!(ctx, x1719, x4, 4);
    let x1721: BytePoly_4 = bigint_nondet_rem!(ctx, x1719, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1720, x4, 8), x1721, 8), x1719, 8),
        32515,
        2,
    )?;
    let x1722: BytePoly_1 = bigint_nondet_rem!(ctx, x1660, x5, 1);
    let x1723: BytePoly_4 = bigint_nondet_quot!(ctx, x1660, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1723, x5, 5), x1722, 5), x1660, 5),
        32515,
        2,
    )?;
    let x1724: BytePoly_1 = bigint_sub!(x6, x1722, 1);
    eqz(ctx, &bigint_mul!(x1722, x1724, 2), 8131, 2)?;
    let x1725: BytePoly_4 = bigint_add!(bigint_sub!(x1715, x1685, 4), x4, 4);
    let x1726: BytePoly_4 = bigint_nondet_inv!(ctx, x1725, x4, 4);
    let x1727: BytePoly_8 = bigint_mul!(x1725, x1726, 8);
    let x1728: BytePoly_9 = bigint_nondet_quot!(ctx, x1727, x4, 9);
    let x1729: BytePoly_4 = bigint_nondet_rem!(ctx, x1727, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1728, x4, 13), x1729, 13),
            x1727,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1729, x1, 4), 34, 1)?;
    let x1730: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x1721, x1687, 4), x4, 4), x1726, 8);
    let x1731: BytePoly_9 = bigint_nondet_quot!(ctx, x1730, x4, 9);
    let x1732: BytePoly_4 = bigint_nondet_rem!(ctx, x1730, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1731, x4, 13), x1732, 13),
            x1730,
            13
        ),
        73156,
        4,
    )?;
    let x1733: BytePoly_8 = bigint_add!(bigint_sub!(x1687, bigint_mul!(x1732, x1685, 8), 8), x4, 8);
    let x1734: BytePoly_8 = bigint_nondet_quot!(ctx, x1733, x4, 8);
    let x1735: BytePoly_4 = bigint_nondet_rem!(ctx, x1733, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1734, x4, 12), x1735, 12),
            x1733,
            12
        ),
        65028,
        4,
    )?;
    let x1736: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x1732, x1732, 8), x1685, 8), x4, 8),
            x1715,
            8
        ),
        x4,
        8
    );
    let x1737: BytePoly_9 = bigint_nondet_quot!(ctx, x1736, x4, 9);
    let x1738: BytePoly_4 = bigint_nondet_rem!(ctx, x1736, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1737, x4, 13), x1738, 13),
            x1736,
            13
        ),
        73156,
        4,
    )?;
    let x1739: BytePoly_8 = bigint_mul!(x1732, x1738, 8);
    let x1740: BytePoly_9 = bigint_nondet_quot!(ctx, x1739, x4, 9);
    let x1741: BytePoly_4 = bigint_nondet_rem!(ctx, x1739, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1740, x4, 13), x1741, 13),
            x1739,
            13
        ),
        73156,
        4,
    )?;
    let x1742: BytePoly_4 = bigint_add!(bigint_sub!(x4, bigint_add!(x1741, x1735, 4), 4), x4, 4);
    let x1743: BytePoly_4 = bigint_nondet_quot!(ctx, x1742, x4, 4);
    let x1744: BytePoly_4 = bigint_nondet_rem!(ctx, x1742, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1743, x4, 8), x1744, 8), x1742, 8),
        32515,
        2,
    )?;
    let x1745: BytePoly_5 = bigint_add!(
        bigint_mul!(x1738, x1722, 5),
        bigint_mul!(x1685, x1724, 5),
        5
    );
    let x1746: BytePoly_5 = bigint_add!(
        bigint_mul!(x1744, x1722, 5),
        bigint_mul!(x1687, x1724, 5),
        5
    );
    let x1747: BytePoly_6 = bigint_nondet_quot!(ctx, x1745, x4, 6);
    let x1748: BytePoly_4 = bigint_nondet_rem!(ctx, x1745, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1747, x4, 10), x1748, 10),
            x1745,
            10
        ),
        48771,
        4,
    )?;
    let x1749: BytePoly_6 = bigint_nondet_quot!(ctx, x1746, x4, 6);
    let x1750: BytePoly_4 = bigint_nondet_rem!(ctx, x1746, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1749, x4, 10), x1750, 10),
            x1746,
            10
        ),
        48771,
        4,
    )?;
    let x1751: BytePoly_8 = bigint_mul!(x1715, x1715, 8);
    let x1752: BytePoly_9 = bigint_nondet_quot!(ctx, x1751, x4, 9);
    let x1753: BytePoly_4 = bigint_nondet_rem!(ctx, x1751, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1752, x4, 13), x1753, 13),
            x1751,
            13
        ),
        73156,
        4,
    )?;
    let x1754: BytePoly_5 = bigint_add!(bigint_mul!(x1753, x0, 5), x3, 5);
    let x1755: BytePoly_6 = bigint_nondet_quot!(ctx, x1754, x4, 6);
    let x1756: BytePoly_4 = bigint_nondet_rem!(ctx, x1754, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1755, x4, 10), x1756, 10),
            x1754,
            10
        ),
        48771,
        4,
    )?;
    let x1757: BytePoly_4 = bigint_add!(x1721, x1721, 4);
    let x1758: BytePoly_4 = bigint_nondet_quot!(ctx, x1757, x4, 4);
    let x1759: BytePoly_4 = bigint_nondet_rem!(ctx, x1757, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1758, x4, 8), x1759, 8), x1757, 8),
        32515,
        2,
    )?;
    let x1760: BytePoly_4 = bigint_nondet_inv!(ctx, x1759, x4, 4);
    let x1761: BytePoly_8 = bigint_mul!(x1759, x1760, 8);
    let x1762: BytePoly_9 = bigint_nondet_quot!(ctx, x1761, x4, 9);
    let x1763: BytePoly_4 = bigint_nondet_rem!(ctx, x1761, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1762, x4, 13), x1763, 13),
            x1761,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1763, x6, 4), 34, 1)?;
    let x1764: BytePoly_8 = bigint_mul!(x1756, x1760, 8);
    let x1765: BytePoly_9 = bigint_nondet_quot!(ctx, x1764, x4, 9);
    let x1766: BytePoly_4 = bigint_nondet_rem!(ctx, x1764, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1765, x4, 13), x1766, 13),
            x1764,
            13
        ),
        73156,
        4,
    )?;
    let x1767: BytePoly_8 = bigint_mul!(x1766, x1715, 8);
    let x1768: BytePoly_9 = bigint_nondet_quot!(ctx, x1767, x4, 9);
    let x1769: BytePoly_4 = bigint_nondet_rem!(ctx, x1767, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1768, x4, 13), x1769, 13),
            x1767,
            13
        ),
        73156,
        4,
    )?;
    let x1770: BytePoly_4 = bigint_add!(bigint_sub!(x1721, x1769, 4), x4, 4);
    let x1771: BytePoly_4 = bigint_nondet_quot!(ctx, x1770, x4, 4);
    let x1772: BytePoly_4 = bigint_nondet_rem!(ctx, x1770, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1771, x4, 8), x1772, 8), x1770, 8),
        32515,
        2,
    )?;
    let x1773: BytePoly_8 = bigint_mul!(x1766, x1766, 8);
    let x1774: BytePoly_9 = bigint_nondet_quot!(ctx, x1773, x4, 9);
    let x1775: BytePoly_4 = bigint_nondet_rem!(ctx, x1773, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1774, x4, 13), x1775, 13),
            x1773,
            13
        ),
        73156,
        4,
    )?;
    let x1776: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1775, x1715, 4), x4, 4), x1715, 4),
        x4,
        4
    );
    let x1777: BytePoly_4 = bigint_nondet_quot!(ctx, x1776, x4, 4);
    let x1778: BytePoly_4 = bigint_nondet_rem!(ctx, x1776, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1777, x4, 8), x1778, 8), x1776, 8),
        32515,
        2,
    )?;
    let x1779: BytePoly_8 = bigint_mul!(x1766, x1778, 8);
    let x1780: BytePoly_9 = bigint_nondet_quot!(ctx, x1779, x4, 9);
    let x1781: BytePoly_4 = bigint_nondet_rem!(ctx, x1779, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1780, x4, 13), x1781, 13),
            x1779,
            13
        ),
        73156,
        4,
    )?;
    let x1782: BytePoly_4 = bigint_add!(bigint_sub!(x4, bigint_add!(x1781, x1772, 4), 4), x4, 4);
    let x1783: BytePoly_4 = bigint_nondet_quot!(ctx, x1782, x4, 4);
    let x1784: BytePoly_4 = bigint_nondet_rem!(ctx, x1782, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1783, x4, 8), x1784, 8), x1782, 8),
        32515,
        2,
    )?;
    let x1785: BytePoly_1 = bigint_nondet_rem!(ctx, x1723, x5, 1);
    let x1786: BytePoly_4 = bigint_nondet_quot!(ctx, x1723, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1786, x5, 5), x1785, 5), x1723, 5),
        32515,
        2,
    )?;
    let x1787: BytePoly_1 = bigint_sub!(x6, x1785, 1);
    eqz(ctx, &bigint_mul!(x1785, x1787, 2), 8131, 2)?;
    let x1788: BytePoly_4 = bigint_add!(bigint_sub!(x1778, x1748, 4), x4, 4);
    let x1789: BytePoly_4 = bigint_nondet_inv!(ctx, x1788, x4, 4);
    let x1790: BytePoly_8 = bigint_mul!(x1788, x1789, 8);
    let x1791: BytePoly_9 = bigint_nondet_quot!(ctx, x1790, x4, 9);
    let x1792: BytePoly_4 = bigint_nondet_rem!(ctx, x1790, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1791, x4, 13), x1792, 13),
            x1790,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1792, x1, 4), 34, 1)?;
    let x1793: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x1784, x1750, 4), x4, 4), x1789, 8);
    let x1794: BytePoly_9 = bigint_nondet_quot!(ctx, x1793, x4, 9);
    let x1795: BytePoly_4 = bigint_nondet_rem!(ctx, x1793, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1794, x4, 13), x1795, 13),
            x1793,
            13
        ),
        73156,
        4,
    )?;
    let x1796: BytePoly_8 = bigint_add!(bigint_sub!(x1750, bigint_mul!(x1795, x1748, 8), 8), x4, 8);
    let x1797: BytePoly_8 = bigint_nondet_quot!(ctx, x1796, x4, 8);
    let x1798: BytePoly_4 = bigint_nondet_rem!(ctx, x1796, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1797, x4, 12), x1798, 12),
            x1796,
            12
        ),
        65028,
        4,
    )?;
    let x1799: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x1795, x1795, 8), x1748, 8), x4, 8),
            x1778,
            8
        ),
        x4,
        8
    );
    let x1800: BytePoly_9 = bigint_nondet_quot!(ctx, x1799, x4, 9);
    let x1801: BytePoly_4 = bigint_nondet_rem!(ctx, x1799, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1800, x4, 13), x1801, 13),
            x1799,
            13
        ),
        73156,
        4,
    )?;
    let x1802: BytePoly_8 = bigint_mul!(x1795, x1801, 8);
    let x1803: BytePoly_9 = bigint_nondet_quot!(ctx, x1802, x4, 9);
    let x1804: BytePoly_4 = bigint_nondet_rem!(ctx, x1802, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1803, x4, 13), x1804, 13),
            x1802,
            13
        ),
        73156,
        4,
    )?;
    let x1805: BytePoly_4 = bigint_add!(bigint_sub!(x4, bigint_add!(x1804, x1798, 4), 4), x4, 4);
    let x1806: BytePoly_4 = bigint_nondet_quot!(ctx, x1805, x4, 4);
    let x1807: BytePoly_4 = bigint_nondet_rem!(ctx, x1805, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1806, x4, 8), x1807, 8), x1805, 8),
        32515,
        2,
    )?;
    let x1808: BytePoly_5 = bigint_add!(
        bigint_mul!(x1801, x1785, 5),
        bigint_mul!(x1748, x1787, 5),
        5
    );
    let x1809: BytePoly_5 = bigint_add!(
        bigint_mul!(x1807, x1785, 5),
        bigint_mul!(x1750, x1787, 5),
        5
    );
    let x1810: BytePoly_6 = bigint_nondet_quot!(ctx, x1808, x4, 6);
    let x1811: BytePoly_4 = bigint_nondet_rem!(ctx, x1808, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1810, x4, 10), x1811, 10),
            x1808,
            10
        ),
        48771,
        4,
    )?;
    let x1812: BytePoly_6 = bigint_nondet_quot!(ctx, x1809, x4, 6);
    let x1813: BytePoly_4 = bigint_nondet_rem!(ctx, x1809, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1812, x4, 10), x1813, 10),
            x1809,
            10
        ),
        48771,
        4,
    )?;
    let x1814: BytePoly_8 = bigint_mul!(x1778, x1778, 8);
    let x1815: BytePoly_9 = bigint_nondet_quot!(ctx, x1814, x4, 9);
    let x1816: BytePoly_4 = bigint_nondet_rem!(ctx, x1814, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1815, x4, 13), x1816, 13),
            x1814,
            13
        ),
        73156,
        4,
    )?;
    let x1817: BytePoly_5 = bigint_add!(bigint_mul!(x1816, x0, 5), x3, 5);
    let x1818: BytePoly_6 = bigint_nondet_quot!(ctx, x1817, x4, 6);
    let x1819: BytePoly_4 = bigint_nondet_rem!(ctx, x1817, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1818, x4, 10), x1819, 10),
            x1817,
            10
        ),
        48771,
        4,
    )?;
    let x1820: BytePoly_4 = bigint_add!(x1784, x1784, 4);
    let x1821: BytePoly_4 = bigint_nondet_quot!(ctx, x1820, x4, 4);
    let x1822: BytePoly_4 = bigint_nondet_rem!(ctx, x1820, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1821, x4, 8), x1822, 8), x1820, 8),
        32515,
        2,
    )?;
    let x1823: BytePoly_4 = bigint_nondet_inv!(ctx, x1822, x4, 4);
    let x1824: BytePoly_8 = bigint_mul!(x1822, x1823, 8);
    let x1825: BytePoly_9 = bigint_nondet_quot!(ctx, x1824, x4, 9);
    let x1826: BytePoly_4 = bigint_nondet_rem!(ctx, x1824, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1825, x4, 13), x1826, 13),
            x1824,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1826, x6, 4), 34, 1)?;
    let x1827: BytePoly_8 = bigint_mul!(x1819, x1823, 8);
    let x1828: BytePoly_9 = bigint_nondet_quot!(ctx, x1827, x4, 9);
    let x1829: BytePoly_4 = bigint_nondet_rem!(ctx, x1827, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1828, x4, 13), x1829, 13),
            x1827,
            13
        ),
        73156,
        4,
    )?;
    let x1830: BytePoly_8 = bigint_mul!(x1829, x1778, 8);
    let x1831: BytePoly_9 = bigint_nondet_quot!(ctx, x1830, x4, 9);
    let x1832: BytePoly_4 = bigint_nondet_rem!(ctx, x1830, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1831, x4, 13), x1832, 13),
            x1830,
            13
        ),
        73156,
        4,
    )?;
    let x1833: BytePoly_4 = bigint_add!(bigint_sub!(x1784, x1832, 4), x4, 4);
    let x1834: BytePoly_4 = bigint_nondet_quot!(ctx, x1833, x4, 4);
    let x1835: BytePoly_4 = bigint_nondet_rem!(ctx, x1833, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1834, x4, 8), x1835, 8), x1833, 8),
        32515,
        2,
    )?;
    let x1836: BytePoly_8 = bigint_mul!(x1829, x1829, 8);
    let x1837: BytePoly_9 = bigint_nondet_quot!(ctx, x1836, x4, 9);
    let x1838: BytePoly_4 = bigint_nondet_rem!(ctx, x1836, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1837, x4, 13), x1838, 13),
            x1836,
            13
        ),
        73156,
        4,
    )?;
    let x1839: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1838, x1778, 4), x4, 4), x1778, 4),
        x4,
        4
    );
    let x1840: BytePoly_4 = bigint_nondet_quot!(ctx, x1839, x4, 4);
    let x1841: BytePoly_4 = bigint_nondet_rem!(ctx, x1839, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1840, x4, 8), x1841, 8), x1839, 8),
        32515,
        2,
    )?;
    let x1842: BytePoly_8 = bigint_mul!(x1829, x1841, 8);
    let x1843: BytePoly_9 = bigint_nondet_quot!(ctx, x1842, x4, 9);
    let x1844: BytePoly_4 = bigint_nondet_rem!(ctx, x1842, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1843, x4, 13), x1844, 13),
            x1842,
            13
        ),
        73156,
        4,
    )?;
    let x1845: BytePoly_4 = bigint_add!(bigint_sub!(x4, bigint_add!(x1844, x1835, 4), 4), x4, 4);
    let x1846: BytePoly_4 = bigint_nondet_quot!(ctx, x1845, x4, 4);
    let x1847: BytePoly_4 = bigint_nondet_rem!(ctx, x1845, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1846, x4, 8), x1847, 8), x1845, 8),
        32515,
        2,
    )?;
    let x1848: BytePoly_1 = bigint_nondet_rem!(ctx, x1786, x5, 1);
    let x1849: BytePoly_4 = bigint_nondet_quot!(ctx, x1786, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1849, x5, 5), x1848, 5), x1786, 5),
        32515,
        2,
    )?;
    let x1850: BytePoly_1 = bigint_sub!(x6, x1848, 1);
    eqz(ctx, &bigint_mul!(x1848, x1850, 2), 8131, 2)?;
    let x1851: BytePoly_4 = bigint_add!(bigint_sub!(x1841, x1811, 4), x4, 4);
    let x1852: BytePoly_4 = bigint_nondet_inv!(ctx, x1851, x4, 4);
    let x1853: BytePoly_8 = bigint_mul!(x1851, x1852, 8);
    let x1854: BytePoly_9 = bigint_nondet_quot!(ctx, x1853, x4, 9);
    let x1855: BytePoly_4 = bigint_nondet_rem!(ctx, x1853, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1854, x4, 13), x1855, 13),
            x1853,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1855, x1, 4), 34, 1)?;
    let x1856: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x1847, x1813, 4), x4, 4), x1852, 8);
    let x1857: BytePoly_9 = bigint_nondet_quot!(ctx, x1856, x4, 9);
    let x1858: BytePoly_4 = bigint_nondet_rem!(ctx, x1856, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1857, x4, 13), x1858, 13),
            x1856,
            13
        ),
        73156,
        4,
    )?;
    let x1859: BytePoly_8 = bigint_add!(bigint_sub!(x1813, bigint_mul!(x1858, x1811, 8), 8), x4, 8);
    let x1860: BytePoly_8 = bigint_nondet_quot!(ctx, x1859, x4, 8);
    let x1861: BytePoly_4 = bigint_nondet_rem!(ctx, x1859, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1860, x4, 12), x1861, 12),
            x1859,
            12
        ),
        65028,
        4,
    )?;
    let x1862: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x1858, x1858, 8), x1811, 8), x4, 8),
            x1841,
            8
        ),
        x4,
        8
    );
    let x1863: BytePoly_9 = bigint_nondet_quot!(ctx, x1862, x4, 9);
    let x1864: BytePoly_4 = bigint_nondet_rem!(ctx, x1862, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1863, x4, 13), x1864, 13),
            x1862,
            13
        ),
        73156,
        4,
    )?;
    let x1865: BytePoly_8 = bigint_mul!(x1858, x1864, 8);
    let x1866: BytePoly_9 = bigint_nondet_quot!(ctx, x1865, x4, 9);
    let x1867: BytePoly_4 = bigint_nondet_rem!(ctx, x1865, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1866, x4, 13), x1867, 13),
            x1865,
            13
        ),
        73156,
        4,
    )?;
    let x1868: BytePoly_4 = bigint_add!(bigint_sub!(x4, bigint_add!(x1867, x1861, 4), 4), x4, 4);
    let x1869: BytePoly_4 = bigint_nondet_quot!(ctx, x1868, x4, 4);
    let x1870: BytePoly_4 = bigint_nondet_rem!(ctx, x1868, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1869, x4, 8), x1870, 8), x1868, 8),
        32515,
        2,
    )?;
    let x1871: BytePoly_5 = bigint_add!(
        bigint_mul!(x1864, x1848, 5),
        bigint_mul!(x1811, x1850, 5),
        5
    );
    let x1872: BytePoly_5 = bigint_add!(
        bigint_mul!(x1870, x1848, 5),
        bigint_mul!(x1813, x1850, 5),
        5
    );
    let x1873: BytePoly_6 = bigint_nondet_quot!(ctx, x1871, x4, 6);
    let x1874: BytePoly_4 = bigint_nondet_rem!(ctx, x1871, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1873, x4, 10), x1874, 10),
            x1871,
            10
        ),
        48771,
        4,
    )?;
    let x1875: BytePoly_6 = bigint_nondet_quot!(ctx, x1872, x4, 6);
    let x1876: BytePoly_4 = bigint_nondet_rem!(ctx, x1872, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1875, x4, 10), x1876, 10),
            x1872,
            10
        ),
        48771,
        4,
    )?;
    let x1877: BytePoly_8 = bigint_mul!(x1841, x1841, 8);
    let x1878: BytePoly_9 = bigint_nondet_quot!(ctx, x1877, x4, 9);
    let x1879: BytePoly_4 = bigint_nondet_rem!(ctx, x1877, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1878, x4, 13), x1879, 13),
            x1877,
            13
        ),
        73156,
        4,
    )?;
    let x1880: BytePoly_5 = bigint_add!(bigint_mul!(x1879, x0, 5), x3, 5);
    let x1881: BytePoly_6 = bigint_nondet_quot!(ctx, x1880, x4, 6);
    let x1882: BytePoly_4 = bigint_nondet_rem!(ctx, x1880, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1881, x4, 10), x1882, 10),
            x1880,
            10
        ),
        48771,
        4,
    )?;
    let x1883: BytePoly_4 = bigint_add!(x1847, x1847, 4);
    let x1884: BytePoly_4 = bigint_nondet_quot!(ctx, x1883, x4, 4);
    let x1885: BytePoly_4 = bigint_nondet_rem!(ctx, x1883, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1884, x4, 8), x1885, 8), x1883, 8),
        32515,
        2,
    )?;
    let x1886: BytePoly_4 = bigint_nondet_inv!(ctx, x1885, x4, 4);
    let x1887: BytePoly_8 = bigint_mul!(x1885, x1886, 8);
    let x1888: BytePoly_9 = bigint_nondet_quot!(ctx, x1887, x4, 9);
    let x1889: BytePoly_4 = bigint_nondet_rem!(ctx, x1887, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1888, x4, 13), x1889, 13),
            x1887,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1889, x6, 4), 34, 1)?;
    let x1890: BytePoly_8 = bigint_mul!(x1882, x1886, 8);
    let x1891: BytePoly_9 = bigint_nondet_quot!(ctx, x1890, x4, 9);
    let x1892: BytePoly_4 = bigint_nondet_rem!(ctx, x1890, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1891, x4, 13), x1892, 13),
            x1890,
            13
        ),
        73156,
        4,
    )?;
    let x1893: BytePoly_8 = bigint_mul!(x1892, x1841, 8);
    let x1894: BytePoly_9 = bigint_nondet_quot!(ctx, x1893, x4, 9);
    let x1895: BytePoly_4 = bigint_nondet_rem!(ctx, x1893, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1894, x4, 13), x1895, 13),
            x1893,
            13
        ),
        73156,
        4,
    )?;
    let x1896: BytePoly_4 = bigint_add!(bigint_sub!(x1847, x1895, 4), x4, 4);
    let x1897: BytePoly_4 = bigint_nondet_quot!(ctx, x1896, x4, 4);
    let x1898: BytePoly_4 = bigint_nondet_rem!(ctx, x1896, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1897, x4, 8), x1898, 8), x1896, 8),
        32515,
        2,
    )?;
    let x1899: BytePoly_8 = bigint_mul!(x1892, x1892, 8);
    let x1900: BytePoly_9 = bigint_nondet_quot!(ctx, x1899, x4, 9);
    let x1901: BytePoly_4 = bigint_nondet_rem!(ctx, x1899, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1900, x4, 13), x1901, 13),
            x1899,
            13
        ),
        73156,
        4,
    )?;
    let x1902: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1901, x1841, 4), x4, 4), x1841, 4),
        x4,
        4
    );
    let x1903: BytePoly_4 = bigint_nondet_quot!(ctx, x1902, x4, 4);
    let x1904: BytePoly_4 = bigint_nondet_rem!(ctx, x1902, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1903, x4, 8), x1904, 8), x1902, 8),
        32515,
        2,
    )?;
    let x1905: BytePoly_8 = bigint_mul!(x1892, x1904, 8);
    let x1906: BytePoly_9 = bigint_nondet_quot!(ctx, x1905, x4, 9);
    let x1907: BytePoly_4 = bigint_nondet_rem!(ctx, x1905, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1906, x4, 13), x1907, 13),
            x1905,
            13
        ),
        73156,
        4,
    )?;
    let x1908: BytePoly_4 = bigint_add!(bigint_sub!(x4, bigint_add!(x1907, x1898, 4), 4), x4, 4);
    let x1909: BytePoly_4 = bigint_nondet_quot!(ctx, x1908, x4, 4);
    let x1910: BytePoly_4 = bigint_nondet_rem!(ctx, x1908, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1909, x4, 8), x1910, 8), x1908, 8),
        32515,
        2,
    )?;
    let x1911: BytePoly_1 = bigint_nondet_rem!(ctx, x1849, x5, 1);
    let x1912: BytePoly_4 = bigint_nondet_quot!(ctx, x1849, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1912, x5, 5), x1911, 5), x1849, 5),
        32515,
        2,
    )?;
    let x1913: BytePoly_1 = bigint_sub!(x6, x1911, 1);
    eqz(ctx, &bigint_mul!(x1911, x1913, 2), 8131, 2)?;
    let x1914: BytePoly_4 = bigint_add!(bigint_sub!(x1904, x1874, 4), x4, 4);
    let x1915: BytePoly_4 = bigint_nondet_inv!(ctx, x1914, x4, 4);
    let x1916: BytePoly_8 = bigint_mul!(x1914, x1915, 8);
    let x1917: BytePoly_9 = bigint_nondet_quot!(ctx, x1916, x4, 9);
    let x1918: BytePoly_4 = bigint_nondet_rem!(ctx, x1916, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1917, x4, 13), x1918, 13),
            x1916,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1918, x1, 4), 34, 1)?;
    let x1919: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x1910, x1876, 4), x4, 4), x1915, 8);
    let x1920: BytePoly_9 = bigint_nondet_quot!(ctx, x1919, x4, 9);
    let x1921: BytePoly_4 = bigint_nondet_rem!(ctx, x1919, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1920, x4, 13), x1921, 13),
            x1919,
            13
        ),
        73156,
        4,
    )?;
    let x1922: BytePoly_8 = bigint_add!(bigint_sub!(x1876, bigint_mul!(x1921, x1874, 8), 8), x4, 8);
    let x1923: BytePoly_8 = bigint_nondet_quot!(ctx, x1922, x4, 8);
    let x1924: BytePoly_4 = bigint_nondet_rem!(ctx, x1922, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1923, x4, 12), x1924, 12),
            x1922,
            12
        ),
        65028,
        4,
    )?;
    let x1925: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x1921, x1921, 8), x1874, 8), x4, 8),
            x1904,
            8
        ),
        x4,
        8
    );
    let x1926: BytePoly_9 = bigint_nondet_quot!(ctx, x1925, x4, 9);
    let x1927: BytePoly_4 = bigint_nondet_rem!(ctx, x1925, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1926, x4, 13), x1927, 13),
            x1925,
            13
        ),
        73156,
        4,
    )?;
    let x1928: BytePoly_8 = bigint_mul!(x1921, x1927, 8);
    let x1929: BytePoly_9 = bigint_nondet_quot!(ctx, x1928, x4, 9);
    let x1930: BytePoly_4 = bigint_nondet_rem!(ctx, x1928, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1929, x4, 13), x1930, 13),
            x1928,
            13
        ),
        73156,
        4,
    )?;
    let x1931: BytePoly_4 = bigint_add!(bigint_sub!(x4, bigint_add!(x1930, x1924, 4), 4), x4, 4);
    let x1932: BytePoly_4 = bigint_nondet_quot!(ctx, x1931, x4, 4);
    let x1933: BytePoly_4 = bigint_nondet_rem!(ctx, x1931, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1932, x4, 8), x1933, 8), x1931, 8),
        32515,
        2,
    )?;
    let x1934: BytePoly_5 = bigint_add!(
        bigint_mul!(x1927, x1911, 5),
        bigint_mul!(x1874, x1913, 5),
        5
    );
    let x1935: BytePoly_5 = bigint_add!(
        bigint_mul!(x1933, x1911, 5),
        bigint_mul!(x1876, x1913, 5),
        5
    );
    let x1936: BytePoly_6 = bigint_nondet_quot!(ctx, x1934, x4, 6);
    let x1937: BytePoly_4 = bigint_nondet_rem!(ctx, x1934, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1936, x4, 10), x1937, 10),
            x1934,
            10
        ),
        48771,
        4,
    )?;
    let x1938: BytePoly_6 = bigint_nondet_quot!(ctx, x1935, x4, 6);
    let x1939: BytePoly_4 = bigint_nondet_rem!(ctx, x1935, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1938, x4, 10), x1939, 10),
            x1935,
            10
        ),
        48771,
        4,
    )?;
    let x1940: BytePoly_8 = bigint_mul!(x1904, x1904, 8);
    let x1941: BytePoly_9 = bigint_nondet_quot!(ctx, x1940, x4, 9);
    let x1942: BytePoly_4 = bigint_nondet_rem!(ctx, x1940, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1941, x4, 13), x1942, 13),
            x1940,
            13
        ),
        73156,
        4,
    )?;
    let x1943: BytePoly_5 = bigint_add!(bigint_mul!(x1942, x0, 5), x3, 5);
    let x1944: BytePoly_6 = bigint_nondet_quot!(ctx, x1943, x4, 6);
    let x1945: BytePoly_4 = bigint_nondet_rem!(ctx, x1943, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1944, x4, 10), x1945, 10),
            x1943,
            10
        ),
        48771,
        4,
    )?;
    let x1946: BytePoly_4 = bigint_add!(x1910, x1910, 4);
    let x1947: BytePoly_4 = bigint_nondet_quot!(ctx, x1946, x4, 4);
    let x1948: BytePoly_4 = bigint_nondet_rem!(ctx, x1946, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1947, x4, 8), x1948, 8), x1946, 8),
        32515,
        2,
    )?;
    let x1949: BytePoly_4 = bigint_nondet_inv!(ctx, x1948, x4, 4);
    let x1950: BytePoly_8 = bigint_mul!(x1948, x1949, 8);
    let x1951: BytePoly_9 = bigint_nondet_quot!(ctx, x1950, x4, 9);
    let x1952: BytePoly_4 = bigint_nondet_rem!(ctx, x1950, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1951, x4, 13), x1952, 13),
            x1950,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1952, x6, 4), 34, 1)?;
    let x1953: BytePoly_8 = bigint_mul!(x1945, x1949, 8);
    let x1954: BytePoly_9 = bigint_nondet_quot!(ctx, x1953, x4, 9);
    let x1955: BytePoly_4 = bigint_nondet_rem!(ctx, x1953, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1954, x4, 13), x1955, 13),
            x1953,
            13
        ),
        73156,
        4,
    )?;
    let x1956: BytePoly_8 = bigint_mul!(x1955, x1904, 8);
    let x1957: BytePoly_9 = bigint_nondet_quot!(ctx, x1956, x4, 9);
    let x1958: BytePoly_4 = bigint_nondet_rem!(ctx, x1956, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1957, x4, 13), x1958, 13),
            x1956,
            13
        ),
        73156,
        4,
    )?;
    let x1959: BytePoly_4 = bigint_add!(bigint_sub!(x1910, x1958, 4), x4, 4);
    let x1960: BytePoly_4 = bigint_nondet_quot!(ctx, x1959, x4, 4);
    let x1961: BytePoly_4 = bigint_nondet_rem!(ctx, x1959, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1960, x4, 8), x1961, 8), x1959, 8),
        32515,
        2,
    )?;
    let x1962: BytePoly_8 = bigint_mul!(x1955, x1955, 8);
    let x1963: BytePoly_9 = bigint_nondet_quot!(ctx, x1962, x4, 9);
    let x1964: BytePoly_4 = bigint_nondet_rem!(ctx, x1962, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1963, x4, 13), x1964, 13),
            x1962,
            13
        ),
        73156,
        4,
    )?;
    let x1965: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x1964, x1904, 4), x4, 4), x1904, 4),
        x4,
        4
    );
    let x1966: BytePoly_4 = bigint_nondet_quot!(ctx, x1965, x4, 4);
    let x1967: BytePoly_4 = bigint_nondet_rem!(ctx, x1965, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1966, x4, 8), x1967, 8), x1965, 8),
        32515,
        2,
    )?;
    let x1968: BytePoly_8 = bigint_mul!(x1955, x1967, 8);
    let x1969: BytePoly_9 = bigint_nondet_quot!(ctx, x1968, x4, 9);
    let x1970: BytePoly_4 = bigint_nondet_rem!(ctx, x1968, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1969, x4, 13), x1970, 13),
            x1968,
            13
        ),
        73156,
        4,
    )?;
    let x1971: BytePoly_4 = bigint_add!(bigint_sub!(x4, bigint_add!(x1970, x1961, 4), 4), x4, 4);
    let x1972: BytePoly_4 = bigint_nondet_quot!(ctx, x1971, x4, 4);
    let x1973: BytePoly_4 = bigint_nondet_rem!(ctx, x1971, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1972, x4, 8), x1973, 8), x1971, 8),
        32515,
        2,
    )?;
    let x1974: BytePoly_1 = bigint_nondet_rem!(ctx, x1912, x5, 1);
    let x1975: BytePoly_4 = bigint_nondet_quot!(ctx, x1912, x5, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1975, x5, 5), x1974, 5), x1912, 5),
        32515,
        2,
    )?;
    let x1976: BytePoly_1 = bigint_sub!(x6, x1974, 1);
    eqz(ctx, &bigint_mul!(x1974, x1976, 2), 8131, 2)?;
    let x1977: BytePoly_4 = bigint_add!(bigint_sub!(x1967, x1937, 4), x4, 4);
    let x1978: BytePoly_4 = bigint_nondet_inv!(ctx, x1977, x4, 4);
    let x1979: BytePoly_8 = bigint_mul!(x1977, x1978, 8);
    let x1980: BytePoly_9 = bigint_nondet_quot!(ctx, x1979, x4, 9);
    let x1981: BytePoly_4 = bigint_nondet_rem!(ctx, x1979, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1980, x4, 13), x1981, 13),
            x1979,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1981, x1, 4), 34, 1)?;
    let x1982: BytePoly_8 = bigint_mul!(bigint_add!(bigint_sub!(x1973, x1939, 4), x4, 4), x1978, 8);
    let x1983: BytePoly_9 = bigint_nondet_quot!(ctx, x1982, x4, 9);
    let x1984: BytePoly_4 = bigint_nondet_rem!(ctx, x1982, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1983, x4, 13), x1984, 13),
            x1982,
            13
        ),
        73156,
        4,
    )?;
    let x1985: BytePoly_8 = bigint_add!(bigint_sub!(x1939, bigint_mul!(x1984, x1937, 8), 8), x4, 8);
    let x1986: BytePoly_8 = bigint_nondet_quot!(ctx, x1985, x4, 8);
    let x1987: BytePoly_4 = bigint_nondet_rem!(ctx, x1985, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1986, x4, 12), x1987, 12),
            x1985,
            12
        ),
        65028,
        4,
    )?;
    let x1988: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x1984, x1984, 8), x1937, 8), x4, 8),
            x1967,
            8
        ),
        x4,
        8
    );
    let x1989: BytePoly_9 = bigint_nondet_quot!(ctx, x1988, x4, 9);
    let x1990: BytePoly_4 = bigint_nondet_rem!(ctx, x1988, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1989, x4, 13), x1990, 13),
            x1988,
            13
        ),
        73156,
        4,
    )?;
    let x1991: BytePoly_8 = bigint_mul!(x1984, x1990, 8);
    let x1992: BytePoly_9 = bigint_nondet_quot!(ctx, x1991, x4, 9);
    let x1993: BytePoly_4 = bigint_nondet_rem!(ctx, x1991, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1992, x4, 13), x1993, 13),
            x1991,
            13
        ),
        73156,
        4,
    )?;
    let x1994: BytePoly_4 = bigint_add!(bigint_sub!(x4, bigint_add!(x1993, x1987, 4), 4), x4, 4);
    let x1995: BytePoly_4 = bigint_nondet_quot!(ctx, x1994, x4, 4);
    let x1996: BytePoly_4 = bigint_nondet_rem!(ctx, x1994, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x1995, x4, 8), x1996, 8), x1994, 8),
        32515,
        2,
    )?;
    let x1997: BytePoly_5 = bigint_add!(
        bigint_mul!(x1990, x1974, 5),
        bigint_mul!(x1937, x1976, 5),
        5
    );
    let x1998: BytePoly_5 = bigint_add!(
        bigint_mul!(x1996, x1974, 5),
        bigint_mul!(x1939, x1976, 5),
        5
    );
    let x1999: BytePoly_6 = bigint_nondet_quot!(ctx, x1997, x4, 6);
    let x2000: BytePoly_4 = bigint_nondet_rem!(ctx, x1997, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1999, x4, 10), x2000, 10),
            x1997,
            10
        ),
        48771,
        4,
    )?;
    let x2001: BytePoly_6 = bigint_nondet_quot!(ctx, x1998, x4, 6);
    let x2002: BytePoly_4 = bigint_nondet_rem!(ctx, x1998, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2001, x4, 10), x2002, 10),
            x1998,
            10
        ),
        48771,
        4,
    )?;
    let x2003: BytePoly_8 = bigint_mul!(x1967, x1967, 8);
    let x2004: BytePoly_9 = bigint_nondet_quot!(ctx, x2003, x4, 9);
    let x2005: BytePoly_4 = bigint_nondet_rem!(ctx, x2003, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2004, x4, 13), x2005, 13),
            x2003,
            13
        ),
        73156,
        4,
    )?;
    let x2006: BytePoly_5 = bigint_add!(bigint_mul!(x2005, x0, 5), x3, 5);
    let x2007: BytePoly_6 = bigint_nondet_quot!(ctx, x2006, x4, 6);
    let x2008: BytePoly_4 = bigint_nondet_rem!(ctx, x2006, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2007, x4, 10), x2008, 10),
            x2006,
            10
        ),
        48771,
        4,
    )?;
    let x2009: BytePoly_4 = bigint_add!(x1973, x1973, 4);
    let x2010: BytePoly_4 = bigint_nondet_quot!(ctx, x2009, x4, 4);
    let x2011: BytePoly_4 = bigint_nondet_rem!(ctx, x2009, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2010, x4, 8), x2011, 8), x2009, 8),
        32515,
        2,
    )?;
    let x2012: BytePoly_4 = bigint_nondet_inv!(ctx, x2011, x4, 4);
    let x2013: BytePoly_8 = bigint_mul!(x2011, x2012, 8);
    let x2014: BytePoly_9 = bigint_nondet_quot!(ctx, x2013, x4, 9);
    let x2015: BytePoly_4 = bigint_nondet_rem!(ctx, x2013, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2014, x4, 13), x2015, 13),
            x2013,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x2015, x6, 4), 34, 1)?;
    let x2016: BytePoly_8 = bigint_mul!(x2008, x2012, 8);
    let x2017: BytePoly_9 = bigint_nondet_quot!(ctx, x2016, x4, 9);
    let x2018: BytePoly_4 = bigint_nondet_rem!(ctx, x2016, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2017, x4, 13), x2018, 13),
            x2016,
            13
        ),
        73156,
        4,
    )?;
    let x2019: BytePoly_8 = bigint_mul!(x2018, x1967, 8);
    let x2020: BytePoly_9 = bigint_nondet_quot!(ctx, x2019, x4, 9);
    let x2021: BytePoly_4 = bigint_nondet_rem!(ctx, x2019, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2020, x4, 13), x2021, 13),
            x2019,
            13
        ),
        73156,
        4,
    )?;
    let x2022: BytePoly_4 = bigint_add!(bigint_sub!(x1973, x2021, 4), x4, 4);
    let x2023: BytePoly_4 = bigint_nondet_quot!(ctx, x2022, x4, 4);
    let x2024: BytePoly_4 = bigint_nondet_rem!(ctx, x2022, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2023, x4, 8), x2024, 8), x2022, 8),
        32515,
        2,
    )?;
    let x2025: BytePoly_8 = bigint_mul!(x2018, x2018, 8);
    let x2026: BytePoly_9 = bigint_nondet_quot!(ctx, x2025, x4, 9);
    let x2027: BytePoly_4 = bigint_nondet_rem!(ctx, x2025, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2026, x4, 13), x2027, 13),
            x2025,
            13
        ),
        73156,
        4,
    )?;
    let x2028: BytePoly_4 = bigint_add!(
        bigint_sub!(bigint_add!(bigint_sub!(x2027, x1967, 4), x4, 4), x1967, 4),
        x4,
        4
    );
    let x2029: BytePoly_4 = bigint_nondet_quot!(ctx, x2028, x4, 4);
    let x2030: BytePoly_4 = bigint_nondet_rem!(ctx, x2028, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2029, x4, 8), x2030, 8), x2028, 8),
        32515,
        2,
    )?;
    let x2031: BytePoly_8 = bigint_mul!(x2018, x2030, 8);
    let x2032: BytePoly_9 = bigint_nondet_quot!(ctx, x2031, x4, 9);
    let x2033: BytePoly_4 = bigint_nondet_rem!(ctx, x2031, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2032, x4, 13), x2033, 13),
            x2031,
            13
        ),
        73156,
        4,
    )?;
    let x2034: BytePoly_4 = bigint_add!(bigint_sub!(x4, bigint_add!(x2033, x2024, 4), 4), x4, 4);
    let x2035: BytePoly_4 = bigint_nondet_quot!(ctx, x2034, x4, 4);
    let x2036: BytePoly_4 = bigint_nondet_rem!(ctx, x2034, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2035, x4, 8), x2036, 8), x2034, 8),
        32515,
        2,
    )?;
    let x2037: BytePoly_4 = bigint_add!(bigint_sub!(x10, x2000, 4), x4, 4);
    let x2038: BytePoly_4 = bigint_nondet_inv!(ctx, x2037, x4, 4);
    let x2039: BytePoly_8 = bigint_mul!(x2037, x2038, 8);
    let x2040: BytePoly_9 = bigint_nondet_quot!(ctx, x2039, x4, 9);
    let x2041: BytePoly_4 = bigint_nondet_rem!(ctx, x2039, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2040, x4, 13), x2041, 13),
            x2039,
            13
        ),
        73156,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x2041, x1, 4), 34, 1)?;
    let x2042: BytePoly_8 = bigint_mul!(
        bigint_add!(bigint_sub!(bigint_sub!(x4, x11, 4), x2002, 4), x4, 4),
        x2038,
        8
    );
    let x2043: BytePoly_9 = bigint_nondet_quot!(ctx, x2042, x4, 9);
    let x2044: BytePoly_4 = bigint_nondet_rem!(ctx, x2042, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2043, x4, 13), x2044, 13),
            x2042,
            13
        ),
        73156,
        4,
    )?;
    let x2045: BytePoly_8 = bigint_add!(bigint_sub!(x2002, bigint_mul!(x2044, x2000, 8), 8), x4, 8);
    let x2046: BytePoly_8 = bigint_nondet_quot!(ctx, x2045, x4, 8);
    let x2047: BytePoly_4 = bigint_nondet_rem!(ctx, x2045, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2046, x4, 12), x2047, 12),
            x2045,
            12
        ),
        65028,
        4,
    )?;
    let x2048: BytePoly_8 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x2044, x2044, 8), x2000, 8), x4, 8),
            x10,
            8
        ),
        x4,
        8
    );
    let x2049: BytePoly_9 = bigint_nondet_quot!(ctx, x2048, x4, 9);
    let x2050: BytePoly_4 = bigint_nondet_rem!(ctx, x2048, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2049, x4, 13), x2050, 13),
            x2048,
            13
        ),
        73156,
        4,
    )?;
    let x2051: BytePoly_8 = bigint_mul!(x2044, x2050, 8);
    let x2052: BytePoly_9 = bigint_nondet_quot!(ctx, x2051, x4, 9);
    let x2053: BytePoly_4 = bigint_nondet_rem!(ctx, x2051, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2052, x4, 13), x2053, 13),
            x2051,
            13
        ),
        73156,
        4,
    )?;
    let x2054: BytePoly_4 = bigint_add!(bigint_sub!(x4, bigint_add!(x2053, x2047, 4), 4), x4, 4);
    let x2055: BytePoly_4 = bigint_nondet_quot!(ctx, x2054, x4, 4);
    let x2056: BytePoly_4 = bigint_nondet_rem!(ctx, x2054, x4, 4);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x2055, x4, 8), x2056, 8), x2054, 8),
        32515,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x2050, x13, 4), 34, 1)?;
    eqz(ctx, &bigint_sub!(x2056, x14, 4), 34, 1)?;
    return Ok(());
}
pub fn ec_aff_neg_test_8(ctx: &mut BigIntContext) -> Result<()> {
    let x0: BytePoly_1 = bigint_const!(ctx, 11);
    let x1: BytePoly_1 = bigint_def!(ctx, 1, 0, 1);
    let x2: BytePoly_1 = bigint_def!(ctx, 1, 1, 1);
    let x3: BytePoly_1 = bigint_def!(ctx, 1, 2, 1);
    let x4: BytePoly_1 = bigint_def!(ctx, 1, 3, 1);
    let x5: BytePoly_1 = bigint_def!(ctx, 1, 4, 1);
    eqz(ctx, &bigint_sub!(x1, x4, 1), 34, 1)?;
    eqz(ctx, &bigint_sub!(bigint_sub!(x0, x2, 1), x5, 1), 34, 1)?;
    eqz(ctx, &bigint_sub!(x3, x3, 1), 34, 1)?;
    return Ok(());
}
pub fn ec_aff_sub_test_8(ctx: &mut BigIntContext) -> Result<()> {
    let x0: BytePoly_1 = bigint_const!(ctx, 1);
    let x1: BytePoly_1 = bigint_const!(ctx, 11);
    let x2: BytePoly_1 = bigint_def!(ctx, 1, 0, 1);
    let x3: BytePoly_1 = bigint_def!(ctx, 1, 1, 1);
    let x4: BytePoly_2 = bigint_def!(ctx, 2, 2, 1);
    let x5: BytePoly_1 = bigint_def!(ctx, 1, 3, 1);
    let x6: BytePoly_1 = bigint_def!(ctx, 1, 4, 1);
    let x7: BytePoly_1 = bigint_def!(ctx, 1, 5, 1);
    let x8: BytePoly_1 = bigint_def!(ctx, 1, 6, 1);
    let x9: BytePoly_1 = bigint_add!(bigint_sub!(x5, x2, 1), x1, 1);
    let x10: BytePoly_1 = bigint_nondet_inv!(ctx, x9, x1, 1);
    let x11: BytePoly_2 = bigint_mul!(x9, x10, 2);
    let x12: BytePoly_3 = bigint_nondet_quot!(ctx, x11, x1, 3);
    let x13: BytePoly_1 = bigint_nondet_rem!(ctx, x11, x1, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x12, x1, 4), x13, 4), x11, 4),
        24387,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x13, x0, 1), 34, 1)?;
    let x14: BytePoly_2 = bigint_mul!(
        bigint_add!(bigint_sub!(bigint_sub!(x1, x6, 1), x3, 1), x1, 1),
        x10,
        2
    );
    let x15: BytePoly_3 = bigint_nondet_quot!(ctx, x14, x1, 3);
    let x16: BytePoly_1 = bigint_nondet_rem!(ctx, x14, x1, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x15, x1, 4), x16, 4), x14, 4),
        24387,
        2,
    )?;
    let x17: BytePoly_2 = bigint_add!(bigint_sub!(x3, bigint_mul!(x16, x2, 2), 2), x1, 2);
    let x18: BytePoly_2 = bigint_nondet_quot!(ctx, x17, x1, 2);
    let x19: BytePoly_1 = bigint_nondet_rem!(ctx, x17, x1, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x18, x1, 3), x19, 3), x17, 3),
        16259,
        2,
    )?;
    let x20: BytePoly_2 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x16, x16, 2), x2, 2), x1, 2),
            x5,
            2
        ),
        x1,
        2
    );
    let x21: BytePoly_3 = bigint_nondet_quot!(ctx, x20, x1, 3);
    let x22: BytePoly_1 = bigint_nondet_rem!(ctx, x20, x1, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x21, x1, 4), x22, 4), x20, 4),
        24387,
        2,
    )?;
    let x23: BytePoly_2 = bigint_mul!(x16, x22, 2);
    let x24: BytePoly_3 = bigint_nondet_quot!(ctx, x23, x1, 3);
    let x25: BytePoly_1 = bigint_nondet_rem!(ctx, x23, x1, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x24, x1, 4), x25, 4), x23, 4),
        24387,
        2,
    )?;
    let x26: BytePoly_1 = bigint_add!(bigint_sub!(x1, bigint_add!(x25, x19, 1), 1), x1, 1);
    let x27: BytePoly_1 = bigint_nondet_quot!(ctx, x26, x1, 1);
    let x28: BytePoly_1 = bigint_nondet_rem!(ctx, x26, x1, 1);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x27, x1, 2), x28, 2), x26, 2),
        8131,
        2,
    )?;
    eqz(ctx, &bigint_sub!(x22, x7, 1), 34, 1)?;
    eqz(ctx, &bigint_sub!(x28, x8, 1), 34, 1)?;
    eqz(ctx, &bigint_sub!(x4, x4, 2), 34, 1)?;
    return Ok(());
}
pub fn ec_pts_eq_test_8(ctx: &mut BigIntContext) -> Result<()> {
    let x0: BytePoly_1 = bigint_def!(ctx, 1, 0, 1);
    let x1: BytePoly_1 = bigint_def!(ctx, 1, 1, 1);
    let x2: BytePoly_1 = bigint_def!(ctx, 1, 2, 1);
    let x3: BytePoly_1 = bigint_def!(ctx, 1, 3, 1);
    let x4: BytePoly_1 = bigint_def!(ctx, 1, 4, 1);
    eqz(ctx, &bigint_sub!(x0, x3, 1), 34, 1)?;
    eqz(ctx, &bigint_sub!(x1, x4, 1), 34, 1)?;
    eqz(ctx, &bigint_sub!(x2, x2, 1), 34, 1)?;
    return Ok(());
}
pub fn rep_ec_aff_add_test_256_r5(ctx: &mut BigIntContext) -> Result<()> {
    let x0: BytePoly_1 = bigint_const!(ctx, 1);
    let x1: BytePoly_32 = bigint_const!(
        ctx, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0
    );
    let x2: BytePoly_32 = bigint_def!(ctx, 32, 0, 1);
    let x3: BytePoly_32 = bigint_def!(ctx, 32, 1, 1);
    let x4: BytePoly_32 = bigint_def!(ctx, 32, 2, 1);
    let x5: BytePoly_32 = bigint_def!(ctx, 32, 3, 1);
    let x6: BytePoly_32 = bigint_def!(ctx, 32, 4, 1);
    let x7: BytePoly_32 = bigint_def!(ctx, 32, 5, 1);
    let x8: BytePoly_32 = bigint_def!(ctx, 32, 6, 1);
    eqz(ctx, &bigint_sub!(x4, x4, 32), 34, 1)?;
    let x9: BytePoly_32 = bigint_add!(bigint_sub!(x5, x2, 32), x1, 32);
    let x10: BytePoly_32 = bigint_nondet_inv!(ctx, x9, x1, 32);
    let x11: BytePoly_64 = bigint_mul!(x9, x10, 64);
    let x12: BytePoly_66 = bigint_nondet_quot!(ctx, x11, x1, 66);
    let x13: BytePoly_32 = bigint_nondet_rem!(ctx, x11, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x12, x1, 98), x13, 98), x11, 98),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x13, x0, 32), 34, 1)?;
    let x14: BytePoly_64 = bigint_mul!(bigint_add!(bigint_sub!(x6, x3, 32), x1, 32), x10, 64);
    let x15: BytePoly_66 = bigint_nondet_quot!(ctx, x14, x1, 66);
    let x16: BytePoly_32 = bigint_nondet_rem!(ctx, x14, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x15, x1, 98), x16, 98), x14, 98),
        536459,
        4,
    )?;
    let x17: BytePoly_64 = bigint_add!(bigint_sub!(x3, bigint_mul!(x16, x2, 64), 64), x1, 64);
    let x18: BytePoly_64 = bigint_nondet_quot!(ctx, x17, x1, 64);
    let x19: BytePoly_32 = bigint_nondet_rem!(ctx, x17, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x18, x1, 96), x19, 96), x17, 96),
        520203,
        4,
    )?;
    let x20: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x16, x16, 64), x2, 64), x1, 64),
            x5,
            64
        ),
        x1,
        64
    );
    let x21: BytePoly_66 = bigint_nondet_quot!(ctx, x20, x1, 66);
    let x22: BytePoly_32 = bigint_nondet_rem!(ctx, x20, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x21, x1, 98), x22, 98), x20, 98),
        536459,
        4,
    )?;
    let x23: BytePoly_64 = bigint_mul!(x16, x22, 64);
    let x24: BytePoly_66 = bigint_nondet_quot!(ctx, x23, x1, 66);
    let x25: BytePoly_32 = bigint_nondet_rem!(ctx, x23, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x24, x1, 98), x25, 98), x23, 98),
        536459,
        4,
    )?;
    let x26: BytePoly_32 = bigint_add!(bigint_sub!(x1, bigint_add!(x25, x19, 32), 32), x1, 32);
    let x27: BytePoly_32 = bigint_nondet_quot!(ctx, x26, x1, 32);
    let x28: BytePoly_32 = bigint_nondet_rem!(ctx, x26, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x27, x1, 64), x28, 64), x26, 64),
        260103,
        4,
    )?;
    let x29: BytePoly_32 = bigint_add!(bigint_sub!(x5, x22, 32), x1, 32);
    let x30: BytePoly_32 = bigint_nondet_inv!(ctx, x29, x1, 32);
    let x31: BytePoly_64 = bigint_mul!(x29, x30, 64);
    let x32: BytePoly_66 = bigint_nondet_quot!(ctx, x31, x1, 66);
    let x33: BytePoly_32 = bigint_nondet_rem!(ctx, x31, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x32, x1, 98), x33, 98), x31, 98),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x33, x0, 32), 34, 1)?;
    let x34: BytePoly_64 = bigint_mul!(bigint_add!(bigint_sub!(x6, x28, 32), x1, 32), x30, 64);
    let x35: BytePoly_66 = bigint_nondet_quot!(ctx, x34, x1, 66);
    let x36: BytePoly_32 = bigint_nondet_rem!(ctx, x34, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x35, x1, 98), x36, 98), x34, 98),
        536459,
        4,
    )?;
    let x37: BytePoly_64 = bigint_add!(bigint_sub!(x28, bigint_mul!(x36, x22, 64), 64), x1, 64);
    let x38: BytePoly_64 = bigint_nondet_quot!(ctx, x37, x1, 64);
    let x39: BytePoly_32 = bigint_nondet_rem!(ctx, x37, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x38, x1, 96), x39, 96), x37, 96),
        520203,
        4,
    )?;
    let x40: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x36, x36, 64), x22, 64), x1, 64),
            x5,
            64
        ),
        x1,
        64
    );
    let x41: BytePoly_66 = bigint_nondet_quot!(ctx, x40, x1, 66);
    let x42: BytePoly_32 = bigint_nondet_rem!(ctx, x40, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x41, x1, 98), x42, 98), x40, 98),
        536459,
        4,
    )?;
    let x43: BytePoly_64 = bigint_mul!(x36, x42, 64);
    let x44: BytePoly_66 = bigint_nondet_quot!(ctx, x43, x1, 66);
    let x45: BytePoly_32 = bigint_nondet_rem!(ctx, x43, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x44, x1, 98), x45, 98), x43, 98),
        536459,
        4,
    )?;
    let x46: BytePoly_32 = bigint_add!(bigint_sub!(x1, bigint_add!(x45, x39, 32), 32), x1, 32);
    let x47: BytePoly_32 = bigint_nondet_quot!(ctx, x46, x1, 32);
    let x48: BytePoly_32 = bigint_nondet_rem!(ctx, x46, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x47, x1, 64), x48, 64), x46, 64),
        260103,
        4,
    )?;
    let x49: BytePoly_32 = bigint_add!(bigint_sub!(x5, x42, 32), x1, 32);
    let x50: BytePoly_32 = bigint_nondet_inv!(ctx, x49, x1, 32);
    let x51: BytePoly_64 = bigint_mul!(x49, x50, 64);
    let x52: BytePoly_66 = bigint_nondet_quot!(ctx, x51, x1, 66);
    let x53: BytePoly_32 = bigint_nondet_rem!(ctx, x51, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x52, x1, 98), x53, 98), x51, 98),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x53, x0, 32), 34, 1)?;
    let x54: BytePoly_64 = bigint_mul!(bigint_add!(bigint_sub!(x6, x48, 32), x1, 32), x50, 64);
    let x55: BytePoly_66 = bigint_nondet_quot!(ctx, x54, x1, 66);
    let x56: BytePoly_32 = bigint_nondet_rem!(ctx, x54, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x55, x1, 98), x56, 98), x54, 98),
        536459,
        4,
    )?;
    let x57: BytePoly_64 = bigint_add!(bigint_sub!(x48, bigint_mul!(x56, x42, 64), 64), x1, 64);
    let x58: BytePoly_64 = bigint_nondet_quot!(ctx, x57, x1, 64);
    let x59: BytePoly_32 = bigint_nondet_rem!(ctx, x57, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x58, x1, 96), x59, 96), x57, 96),
        520203,
        4,
    )?;
    let x60: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x56, x56, 64), x42, 64), x1, 64),
            x5,
            64
        ),
        x1,
        64
    );
    let x61: BytePoly_66 = bigint_nondet_quot!(ctx, x60, x1, 66);
    let x62: BytePoly_32 = bigint_nondet_rem!(ctx, x60, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x61, x1, 98), x62, 98), x60, 98),
        536459,
        4,
    )?;
    let x63: BytePoly_64 = bigint_mul!(x56, x62, 64);
    let x64: BytePoly_66 = bigint_nondet_quot!(ctx, x63, x1, 66);
    let x65: BytePoly_32 = bigint_nondet_rem!(ctx, x63, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x64, x1, 98), x65, 98), x63, 98),
        536459,
        4,
    )?;
    let x66: BytePoly_32 = bigint_add!(bigint_sub!(x1, bigint_add!(x65, x59, 32), 32), x1, 32);
    let x67: BytePoly_32 = bigint_nondet_quot!(ctx, x66, x1, 32);
    let x68: BytePoly_32 = bigint_nondet_rem!(ctx, x66, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x67, x1, 64), x68, 64), x66, 64),
        260103,
        4,
    )?;
    let x69: BytePoly_32 = bigint_add!(bigint_sub!(x5, x62, 32), x1, 32);
    let x70: BytePoly_32 = bigint_nondet_inv!(ctx, x69, x1, 32);
    let x71: BytePoly_64 = bigint_mul!(x69, x70, 64);
    let x72: BytePoly_66 = bigint_nondet_quot!(ctx, x71, x1, 66);
    let x73: BytePoly_32 = bigint_nondet_rem!(ctx, x71, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x72, x1, 98), x73, 98), x71, 98),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x73, x0, 32), 34, 1)?;
    let x74: BytePoly_64 = bigint_mul!(bigint_add!(bigint_sub!(x6, x68, 32), x1, 32), x70, 64);
    let x75: BytePoly_66 = bigint_nondet_quot!(ctx, x74, x1, 66);
    let x76: BytePoly_32 = bigint_nondet_rem!(ctx, x74, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x75, x1, 98), x76, 98), x74, 98),
        536459,
        4,
    )?;
    let x77: BytePoly_64 = bigint_add!(bigint_sub!(x68, bigint_mul!(x76, x62, 64), 64), x1, 64);
    let x78: BytePoly_64 = bigint_nondet_quot!(ctx, x77, x1, 64);
    let x79: BytePoly_32 = bigint_nondet_rem!(ctx, x77, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x78, x1, 96), x79, 96), x77, 96),
        520203,
        4,
    )?;
    let x80: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x76, x76, 64), x62, 64), x1, 64),
            x5,
            64
        ),
        x1,
        64
    );
    let x81: BytePoly_66 = bigint_nondet_quot!(ctx, x80, x1, 66);
    let x82: BytePoly_32 = bigint_nondet_rem!(ctx, x80, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x81, x1, 98), x82, 98), x80, 98),
        536459,
        4,
    )?;
    let x83: BytePoly_64 = bigint_mul!(x76, x82, 64);
    let x84: BytePoly_66 = bigint_nondet_quot!(ctx, x83, x1, 66);
    let x85: BytePoly_32 = bigint_nondet_rem!(ctx, x83, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x84, x1, 98), x85, 98), x83, 98),
        536459,
        4,
    )?;
    let x86: BytePoly_32 = bigint_add!(bigint_sub!(x1, bigint_add!(x85, x79, 32), 32), x1, 32);
    let x87: BytePoly_32 = bigint_nondet_quot!(ctx, x86, x1, 32);
    let x88: BytePoly_32 = bigint_nondet_rem!(ctx, x86, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x87, x1, 64), x88, 64), x86, 64),
        260103,
        4,
    )?;
    let x89: BytePoly_32 = bigint_add!(bigint_sub!(x5, x82, 32), x1, 32);
    let x90: BytePoly_32 = bigint_nondet_inv!(ctx, x89, x1, 32);
    let x91: BytePoly_64 = bigint_mul!(x89, x90, 64);
    let x92: BytePoly_66 = bigint_nondet_quot!(ctx, x91, x1, 66);
    let x93: BytePoly_32 = bigint_nondet_rem!(ctx, x91, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x92, x1, 98), x93, 98), x91, 98),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x93, x0, 32), 34, 1)?;
    let x94: BytePoly_64 = bigint_mul!(bigint_add!(bigint_sub!(x6, x88, 32), x1, 32), x90, 64);
    let x95: BytePoly_66 = bigint_nondet_quot!(ctx, x94, x1, 66);
    let x96: BytePoly_32 = bigint_nondet_rem!(ctx, x94, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x95, x1, 98), x96, 98), x94, 98),
        536459,
        4,
    )?;
    let x97: BytePoly_64 = bigint_add!(bigint_sub!(x88, bigint_mul!(x96, x82, 64), 64), x1, 64);
    let x98: BytePoly_64 = bigint_nondet_quot!(ctx, x97, x1, 64);
    let x99: BytePoly_32 = bigint_nondet_rem!(ctx, x97, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x98, x1, 96), x99, 96), x97, 96),
        520203,
        4,
    )?;
    let x100: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x96, x96, 64), x82, 64), x1, 64),
            x5,
            64
        ),
        x1,
        64
    );
    let x101: BytePoly_66 = bigint_nondet_quot!(ctx, x100, x1, 66);
    let x102: BytePoly_32 = bigint_nondet_rem!(ctx, x100, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x101, x1, 98), x102, 98), x100, 98),
        536459,
        4,
    )?;
    let x103: BytePoly_64 = bigint_mul!(x96, x102, 64);
    let x104: BytePoly_66 = bigint_nondet_quot!(ctx, x103, x1, 66);
    let x105: BytePoly_32 = bigint_nondet_rem!(ctx, x103, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x104, x1, 98), x105, 98), x103, 98),
        536459,
        4,
    )?;
    let x106: BytePoly_32 = bigint_add!(bigint_sub!(x1, bigint_add!(x105, x99, 32), 32), x1, 32);
    let x107: BytePoly_32 = bigint_nondet_quot!(ctx, x106, x1, 32);
    let x108: BytePoly_32 = bigint_nondet_rem!(ctx, x106, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x107, x1, 64), x108, 64), x106, 64),
        260103,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x102, x7, 32), 34, 1)?;
    eqz(ctx, &bigint_sub!(x108, x8, 32), 34, 1)?;
    return Ok(());
}
pub fn rep_ec_aff_add_test_256_r10(ctx: &mut BigIntContext) -> Result<()> {
    let x0: BytePoly_1 = bigint_const!(ctx, 1);
    let x1: BytePoly_32 = bigint_const!(
        ctx, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0
    );
    let x2: BytePoly_32 = bigint_def!(ctx, 32, 0, 1);
    let x3: BytePoly_32 = bigint_def!(ctx, 32, 1, 1);
    let x4: BytePoly_32 = bigint_def!(ctx, 32, 2, 1);
    let x5: BytePoly_32 = bigint_def!(ctx, 32, 3, 1);
    let x6: BytePoly_32 = bigint_def!(ctx, 32, 4, 1);
    let x7: BytePoly_32 = bigint_def!(ctx, 32, 5, 1);
    let x8: BytePoly_32 = bigint_def!(ctx, 32, 6, 1);
    eqz(ctx, &bigint_sub!(x4, x4, 32), 34, 1)?;
    let x9: BytePoly_32 = bigint_add!(bigint_sub!(x5, x2, 32), x1, 32);
    let x10: BytePoly_32 = bigint_nondet_inv!(ctx, x9, x1, 32);
    let x11: BytePoly_64 = bigint_mul!(x9, x10, 64);
    let x12: BytePoly_66 = bigint_nondet_quot!(ctx, x11, x1, 66);
    let x13: BytePoly_32 = bigint_nondet_rem!(ctx, x11, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x12, x1, 98), x13, 98), x11, 98),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x13, x0, 32), 34, 1)?;
    let x14: BytePoly_64 = bigint_mul!(bigint_add!(bigint_sub!(x6, x3, 32), x1, 32), x10, 64);
    let x15: BytePoly_66 = bigint_nondet_quot!(ctx, x14, x1, 66);
    let x16: BytePoly_32 = bigint_nondet_rem!(ctx, x14, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x15, x1, 98), x16, 98), x14, 98),
        536459,
        4,
    )?;
    let x17: BytePoly_64 = bigint_add!(bigint_sub!(x3, bigint_mul!(x16, x2, 64), 64), x1, 64);
    let x18: BytePoly_64 = bigint_nondet_quot!(ctx, x17, x1, 64);
    let x19: BytePoly_32 = bigint_nondet_rem!(ctx, x17, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x18, x1, 96), x19, 96), x17, 96),
        520203,
        4,
    )?;
    let x20: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x16, x16, 64), x2, 64), x1, 64),
            x5,
            64
        ),
        x1,
        64
    );
    let x21: BytePoly_66 = bigint_nondet_quot!(ctx, x20, x1, 66);
    let x22: BytePoly_32 = bigint_nondet_rem!(ctx, x20, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x21, x1, 98), x22, 98), x20, 98),
        536459,
        4,
    )?;
    let x23: BytePoly_64 = bigint_mul!(x16, x22, 64);
    let x24: BytePoly_66 = bigint_nondet_quot!(ctx, x23, x1, 66);
    let x25: BytePoly_32 = bigint_nondet_rem!(ctx, x23, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x24, x1, 98), x25, 98), x23, 98),
        536459,
        4,
    )?;
    let x26: BytePoly_32 = bigint_add!(bigint_sub!(x1, bigint_add!(x25, x19, 32), 32), x1, 32);
    let x27: BytePoly_32 = bigint_nondet_quot!(ctx, x26, x1, 32);
    let x28: BytePoly_32 = bigint_nondet_rem!(ctx, x26, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x27, x1, 64), x28, 64), x26, 64),
        260103,
        4,
    )?;
    let x29: BytePoly_32 = bigint_add!(bigint_sub!(x5, x22, 32), x1, 32);
    let x30: BytePoly_32 = bigint_nondet_inv!(ctx, x29, x1, 32);
    let x31: BytePoly_64 = bigint_mul!(x29, x30, 64);
    let x32: BytePoly_66 = bigint_nondet_quot!(ctx, x31, x1, 66);
    let x33: BytePoly_32 = bigint_nondet_rem!(ctx, x31, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x32, x1, 98), x33, 98), x31, 98),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x33, x0, 32), 34, 1)?;
    let x34: BytePoly_64 = bigint_mul!(bigint_add!(bigint_sub!(x6, x28, 32), x1, 32), x30, 64);
    let x35: BytePoly_66 = bigint_nondet_quot!(ctx, x34, x1, 66);
    let x36: BytePoly_32 = bigint_nondet_rem!(ctx, x34, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x35, x1, 98), x36, 98), x34, 98),
        536459,
        4,
    )?;
    let x37: BytePoly_64 = bigint_add!(bigint_sub!(x28, bigint_mul!(x36, x22, 64), 64), x1, 64);
    let x38: BytePoly_64 = bigint_nondet_quot!(ctx, x37, x1, 64);
    let x39: BytePoly_32 = bigint_nondet_rem!(ctx, x37, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x38, x1, 96), x39, 96), x37, 96),
        520203,
        4,
    )?;
    let x40: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x36, x36, 64), x22, 64), x1, 64),
            x5,
            64
        ),
        x1,
        64
    );
    let x41: BytePoly_66 = bigint_nondet_quot!(ctx, x40, x1, 66);
    let x42: BytePoly_32 = bigint_nondet_rem!(ctx, x40, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x41, x1, 98), x42, 98), x40, 98),
        536459,
        4,
    )?;
    let x43: BytePoly_64 = bigint_mul!(x36, x42, 64);
    let x44: BytePoly_66 = bigint_nondet_quot!(ctx, x43, x1, 66);
    let x45: BytePoly_32 = bigint_nondet_rem!(ctx, x43, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x44, x1, 98), x45, 98), x43, 98),
        536459,
        4,
    )?;
    let x46: BytePoly_32 = bigint_add!(bigint_sub!(x1, bigint_add!(x45, x39, 32), 32), x1, 32);
    let x47: BytePoly_32 = bigint_nondet_quot!(ctx, x46, x1, 32);
    let x48: BytePoly_32 = bigint_nondet_rem!(ctx, x46, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x47, x1, 64), x48, 64), x46, 64),
        260103,
        4,
    )?;
    let x49: BytePoly_32 = bigint_add!(bigint_sub!(x5, x42, 32), x1, 32);
    let x50: BytePoly_32 = bigint_nondet_inv!(ctx, x49, x1, 32);
    let x51: BytePoly_64 = bigint_mul!(x49, x50, 64);
    let x52: BytePoly_66 = bigint_nondet_quot!(ctx, x51, x1, 66);
    let x53: BytePoly_32 = bigint_nondet_rem!(ctx, x51, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x52, x1, 98), x53, 98), x51, 98),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x53, x0, 32), 34, 1)?;
    let x54: BytePoly_64 = bigint_mul!(bigint_add!(bigint_sub!(x6, x48, 32), x1, 32), x50, 64);
    let x55: BytePoly_66 = bigint_nondet_quot!(ctx, x54, x1, 66);
    let x56: BytePoly_32 = bigint_nondet_rem!(ctx, x54, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x55, x1, 98), x56, 98), x54, 98),
        536459,
        4,
    )?;
    let x57: BytePoly_64 = bigint_add!(bigint_sub!(x48, bigint_mul!(x56, x42, 64), 64), x1, 64);
    let x58: BytePoly_64 = bigint_nondet_quot!(ctx, x57, x1, 64);
    let x59: BytePoly_32 = bigint_nondet_rem!(ctx, x57, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x58, x1, 96), x59, 96), x57, 96),
        520203,
        4,
    )?;
    let x60: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x56, x56, 64), x42, 64), x1, 64),
            x5,
            64
        ),
        x1,
        64
    );
    let x61: BytePoly_66 = bigint_nondet_quot!(ctx, x60, x1, 66);
    let x62: BytePoly_32 = bigint_nondet_rem!(ctx, x60, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x61, x1, 98), x62, 98), x60, 98),
        536459,
        4,
    )?;
    let x63: BytePoly_64 = bigint_mul!(x56, x62, 64);
    let x64: BytePoly_66 = bigint_nondet_quot!(ctx, x63, x1, 66);
    let x65: BytePoly_32 = bigint_nondet_rem!(ctx, x63, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x64, x1, 98), x65, 98), x63, 98),
        536459,
        4,
    )?;
    let x66: BytePoly_32 = bigint_add!(bigint_sub!(x1, bigint_add!(x65, x59, 32), 32), x1, 32);
    let x67: BytePoly_32 = bigint_nondet_quot!(ctx, x66, x1, 32);
    let x68: BytePoly_32 = bigint_nondet_rem!(ctx, x66, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x67, x1, 64), x68, 64), x66, 64),
        260103,
        4,
    )?;
    let x69: BytePoly_32 = bigint_add!(bigint_sub!(x5, x62, 32), x1, 32);
    let x70: BytePoly_32 = bigint_nondet_inv!(ctx, x69, x1, 32);
    let x71: BytePoly_64 = bigint_mul!(x69, x70, 64);
    let x72: BytePoly_66 = bigint_nondet_quot!(ctx, x71, x1, 66);
    let x73: BytePoly_32 = bigint_nondet_rem!(ctx, x71, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x72, x1, 98), x73, 98), x71, 98),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x73, x0, 32), 34, 1)?;
    let x74: BytePoly_64 = bigint_mul!(bigint_add!(bigint_sub!(x6, x68, 32), x1, 32), x70, 64);
    let x75: BytePoly_66 = bigint_nondet_quot!(ctx, x74, x1, 66);
    let x76: BytePoly_32 = bigint_nondet_rem!(ctx, x74, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x75, x1, 98), x76, 98), x74, 98),
        536459,
        4,
    )?;
    let x77: BytePoly_64 = bigint_add!(bigint_sub!(x68, bigint_mul!(x76, x62, 64), 64), x1, 64);
    let x78: BytePoly_64 = bigint_nondet_quot!(ctx, x77, x1, 64);
    let x79: BytePoly_32 = bigint_nondet_rem!(ctx, x77, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x78, x1, 96), x79, 96), x77, 96),
        520203,
        4,
    )?;
    let x80: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x76, x76, 64), x62, 64), x1, 64),
            x5,
            64
        ),
        x1,
        64
    );
    let x81: BytePoly_66 = bigint_nondet_quot!(ctx, x80, x1, 66);
    let x82: BytePoly_32 = bigint_nondet_rem!(ctx, x80, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x81, x1, 98), x82, 98), x80, 98),
        536459,
        4,
    )?;
    let x83: BytePoly_64 = bigint_mul!(x76, x82, 64);
    let x84: BytePoly_66 = bigint_nondet_quot!(ctx, x83, x1, 66);
    let x85: BytePoly_32 = bigint_nondet_rem!(ctx, x83, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x84, x1, 98), x85, 98), x83, 98),
        536459,
        4,
    )?;
    let x86: BytePoly_32 = bigint_add!(bigint_sub!(x1, bigint_add!(x85, x79, 32), 32), x1, 32);
    let x87: BytePoly_32 = bigint_nondet_quot!(ctx, x86, x1, 32);
    let x88: BytePoly_32 = bigint_nondet_rem!(ctx, x86, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x87, x1, 64), x88, 64), x86, 64),
        260103,
        4,
    )?;
    let x89: BytePoly_32 = bigint_add!(bigint_sub!(x5, x82, 32), x1, 32);
    let x90: BytePoly_32 = bigint_nondet_inv!(ctx, x89, x1, 32);
    let x91: BytePoly_64 = bigint_mul!(x89, x90, 64);
    let x92: BytePoly_66 = bigint_nondet_quot!(ctx, x91, x1, 66);
    let x93: BytePoly_32 = bigint_nondet_rem!(ctx, x91, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x92, x1, 98), x93, 98), x91, 98),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x93, x0, 32), 34, 1)?;
    let x94: BytePoly_64 = bigint_mul!(bigint_add!(bigint_sub!(x6, x88, 32), x1, 32), x90, 64);
    let x95: BytePoly_66 = bigint_nondet_quot!(ctx, x94, x1, 66);
    let x96: BytePoly_32 = bigint_nondet_rem!(ctx, x94, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x95, x1, 98), x96, 98), x94, 98),
        536459,
        4,
    )?;
    let x97: BytePoly_64 = bigint_add!(bigint_sub!(x88, bigint_mul!(x96, x82, 64), 64), x1, 64);
    let x98: BytePoly_64 = bigint_nondet_quot!(ctx, x97, x1, 64);
    let x99: BytePoly_32 = bigint_nondet_rem!(ctx, x97, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x98, x1, 96), x99, 96), x97, 96),
        520203,
        4,
    )?;
    let x100: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x96, x96, 64), x82, 64), x1, 64),
            x5,
            64
        ),
        x1,
        64
    );
    let x101: BytePoly_66 = bigint_nondet_quot!(ctx, x100, x1, 66);
    let x102: BytePoly_32 = bigint_nondet_rem!(ctx, x100, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x101, x1, 98), x102, 98), x100, 98),
        536459,
        4,
    )?;
    let x103: BytePoly_64 = bigint_mul!(x96, x102, 64);
    let x104: BytePoly_66 = bigint_nondet_quot!(ctx, x103, x1, 66);
    let x105: BytePoly_32 = bigint_nondet_rem!(ctx, x103, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x104, x1, 98), x105, 98), x103, 98),
        536459,
        4,
    )?;
    let x106: BytePoly_32 = bigint_add!(bigint_sub!(x1, bigint_add!(x105, x99, 32), 32), x1, 32);
    let x107: BytePoly_32 = bigint_nondet_quot!(ctx, x106, x1, 32);
    let x108: BytePoly_32 = bigint_nondet_rem!(ctx, x106, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x107, x1, 64), x108, 64), x106, 64),
        260103,
        4,
    )?;
    let x109: BytePoly_32 = bigint_add!(bigint_sub!(x5, x102, 32), x1, 32);
    let x110: BytePoly_32 = bigint_nondet_inv!(ctx, x109, x1, 32);
    let x111: BytePoly_64 = bigint_mul!(x109, x110, 64);
    let x112: BytePoly_66 = bigint_nondet_quot!(ctx, x111, x1, 66);
    let x113: BytePoly_32 = bigint_nondet_rem!(ctx, x111, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x112, x1, 98), x113, 98), x111, 98),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x113, x0, 32), 34, 1)?;
    let x114: BytePoly_64 = bigint_mul!(bigint_add!(bigint_sub!(x6, x108, 32), x1, 32), x110, 64);
    let x115: BytePoly_66 = bigint_nondet_quot!(ctx, x114, x1, 66);
    let x116: BytePoly_32 = bigint_nondet_rem!(ctx, x114, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x115, x1, 98), x116, 98), x114, 98),
        536459,
        4,
    )?;
    let x117: BytePoly_64 = bigint_add!(bigint_sub!(x108, bigint_mul!(x116, x102, 64), 64), x1, 64);
    let x118: BytePoly_64 = bigint_nondet_quot!(ctx, x117, x1, 64);
    let x119: BytePoly_32 = bigint_nondet_rem!(ctx, x117, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x118, x1, 96), x119, 96), x117, 96),
        520203,
        4,
    )?;
    let x120: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x116, x116, 64), x102, 64), x1, 64),
            x5,
            64
        ),
        x1,
        64
    );
    let x121: BytePoly_66 = bigint_nondet_quot!(ctx, x120, x1, 66);
    let x122: BytePoly_32 = bigint_nondet_rem!(ctx, x120, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x121, x1, 98), x122, 98), x120, 98),
        536459,
        4,
    )?;
    let x123: BytePoly_64 = bigint_mul!(x116, x122, 64);
    let x124: BytePoly_66 = bigint_nondet_quot!(ctx, x123, x1, 66);
    let x125: BytePoly_32 = bigint_nondet_rem!(ctx, x123, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x124, x1, 98), x125, 98), x123, 98),
        536459,
        4,
    )?;
    let x126: BytePoly_32 = bigint_add!(bigint_sub!(x1, bigint_add!(x125, x119, 32), 32), x1, 32);
    let x127: BytePoly_32 = bigint_nondet_quot!(ctx, x126, x1, 32);
    let x128: BytePoly_32 = bigint_nondet_rem!(ctx, x126, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x127, x1, 64), x128, 64), x126, 64),
        260103,
        4,
    )?;
    let x129: BytePoly_32 = bigint_add!(bigint_sub!(x5, x122, 32), x1, 32);
    let x130: BytePoly_32 = bigint_nondet_inv!(ctx, x129, x1, 32);
    let x131: BytePoly_64 = bigint_mul!(x129, x130, 64);
    let x132: BytePoly_66 = bigint_nondet_quot!(ctx, x131, x1, 66);
    let x133: BytePoly_32 = bigint_nondet_rem!(ctx, x131, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x132, x1, 98), x133, 98), x131, 98),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x133, x0, 32), 34, 1)?;
    let x134: BytePoly_64 = bigint_mul!(bigint_add!(bigint_sub!(x6, x128, 32), x1, 32), x130, 64);
    let x135: BytePoly_66 = bigint_nondet_quot!(ctx, x134, x1, 66);
    let x136: BytePoly_32 = bigint_nondet_rem!(ctx, x134, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x135, x1, 98), x136, 98), x134, 98),
        536459,
        4,
    )?;
    let x137: BytePoly_64 = bigint_add!(bigint_sub!(x128, bigint_mul!(x136, x122, 64), 64), x1, 64);
    let x138: BytePoly_64 = bigint_nondet_quot!(ctx, x137, x1, 64);
    let x139: BytePoly_32 = bigint_nondet_rem!(ctx, x137, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x138, x1, 96), x139, 96), x137, 96),
        520203,
        4,
    )?;
    let x140: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x136, x136, 64), x122, 64), x1, 64),
            x5,
            64
        ),
        x1,
        64
    );
    let x141: BytePoly_66 = bigint_nondet_quot!(ctx, x140, x1, 66);
    let x142: BytePoly_32 = bigint_nondet_rem!(ctx, x140, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x141, x1, 98), x142, 98), x140, 98),
        536459,
        4,
    )?;
    let x143: BytePoly_64 = bigint_mul!(x136, x142, 64);
    let x144: BytePoly_66 = bigint_nondet_quot!(ctx, x143, x1, 66);
    let x145: BytePoly_32 = bigint_nondet_rem!(ctx, x143, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x144, x1, 98), x145, 98), x143, 98),
        536459,
        4,
    )?;
    let x146: BytePoly_32 = bigint_add!(bigint_sub!(x1, bigint_add!(x145, x139, 32), 32), x1, 32);
    let x147: BytePoly_32 = bigint_nondet_quot!(ctx, x146, x1, 32);
    let x148: BytePoly_32 = bigint_nondet_rem!(ctx, x146, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x147, x1, 64), x148, 64), x146, 64),
        260103,
        4,
    )?;
    let x149: BytePoly_32 = bigint_add!(bigint_sub!(x5, x142, 32), x1, 32);
    let x150: BytePoly_32 = bigint_nondet_inv!(ctx, x149, x1, 32);
    let x151: BytePoly_64 = bigint_mul!(x149, x150, 64);
    let x152: BytePoly_66 = bigint_nondet_quot!(ctx, x151, x1, 66);
    let x153: BytePoly_32 = bigint_nondet_rem!(ctx, x151, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x152, x1, 98), x153, 98), x151, 98),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x153, x0, 32), 34, 1)?;
    let x154: BytePoly_64 = bigint_mul!(bigint_add!(bigint_sub!(x6, x148, 32), x1, 32), x150, 64);
    let x155: BytePoly_66 = bigint_nondet_quot!(ctx, x154, x1, 66);
    let x156: BytePoly_32 = bigint_nondet_rem!(ctx, x154, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x155, x1, 98), x156, 98), x154, 98),
        536459,
        4,
    )?;
    let x157: BytePoly_64 = bigint_add!(bigint_sub!(x148, bigint_mul!(x156, x142, 64), 64), x1, 64);
    let x158: BytePoly_64 = bigint_nondet_quot!(ctx, x157, x1, 64);
    let x159: BytePoly_32 = bigint_nondet_rem!(ctx, x157, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x158, x1, 96), x159, 96), x157, 96),
        520203,
        4,
    )?;
    let x160: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x156, x156, 64), x142, 64), x1, 64),
            x5,
            64
        ),
        x1,
        64
    );
    let x161: BytePoly_66 = bigint_nondet_quot!(ctx, x160, x1, 66);
    let x162: BytePoly_32 = bigint_nondet_rem!(ctx, x160, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x161, x1, 98), x162, 98), x160, 98),
        536459,
        4,
    )?;
    let x163: BytePoly_64 = bigint_mul!(x156, x162, 64);
    let x164: BytePoly_66 = bigint_nondet_quot!(ctx, x163, x1, 66);
    let x165: BytePoly_32 = bigint_nondet_rem!(ctx, x163, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x164, x1, 98), x165, 98), x163, 98),
        536459,
        4,
    )?;
    let x166: BytePoly_32 = bigint_add!(bigint_sub!(x1, bigint_add!(x165, x159, 32), 32), x1, 32);
    let x167: BytePoly_32 = bigint_nondet_quot!(ctx, x166, x1, 32);
    let x168: BytePoly_32 = bigint_nondet_rem!(ctx, x166, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x167, x1, 64), x168, 64), x166, 64),
        260103,
        4,
    )?;
    let x169: BytePoly_32 = bigint_add!(bigint_sub!(x5, x162, 32), x1, 32);
    let x170: BytePoly_32 = bigint_nondet_inv!(ctx, x169, x1, 32);
    let x171: BytePoly_64 = bigint_mul!(x169, x170, 64);
    let x172: BytePoly_66 = bigint_nondet_quot!(ctx, x171, x1, 66);
    let x173: BytePoly_32 = bigint_nondet_rem!(ctx, x171, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x172, x1, 98), x173, 98), x171, 98),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x173, x0, 32), 34, 1)?;
    let x174: BytePoly_64 = bigint_mul!(bigint_add!(bigint_sub!(x6, x168, 32), x1, 32), x170, 64);
    let x175: BytePoly_66 = bigint_nondet_quot!(ctx, x174, x1, 66);
    let x176: BytePoly_32 = bigint_nondet_rem!(ctx, x174, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x175, x1, 98), x176, 98), x174, 98),
        536459,
        4,
    )?;
    let x177: BytePoly_64 = bigint_add!(bigint_sub!(x168, bigint_mul!(x176, x162, 64), 64), x1, 64);
    let x178: BytePoly_64 = bigint_nondet_quot!(ctx, x177, x1, 64);
    let x179: BytePoly_32 = bigint_nondet_rem!(ctx, x177, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x178, x1, 96), x179, 96), x177, 96),
        520203,
        4,
    )?;
    let x180: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x176, x176, 64), x162, 64), x1, 64),
            x5,
            64
        ),
        x1,
        64
    );
    let x181: BytePoly_66 = bigint_nondet_quot!(ctx, x180, x1, 66);
    let x182: BytePoly_32 = bigint_nondet_rem!(ctx, x180, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x181, x1, 98), x182, 98), x180, 98),
        536459,
        4,
    )?;
    let x183: BytePoly_64 = bigint_mul!(x176, x182, 64);
    let x184: BytePoly_66 = bigint_nondet_quot!(ctx, x183, x1, 66);
    let x185: BytePoly_32 = bigint_nondet_rem!(ctx, x183, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x184, x1, 98), x185, 98), x183, 98),
        536459,
        4,
    )?;
    let x186: BytePoly_32 = bigint_add!(bigint_sub!(x1, bigint_add!(x185, x179, 32), 32), x1, 32);
    let x187: BytePoly_32 = bigint_nondet_quot!(ctx, x186, x1, 32);
    let x188: BytePoly_32 = bigint_nondet_rem!(ctx, x186, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x187, x1, 64), x188, 64), x186, 64),
        260103,
        4,
    )?;
    let x189: BytePoly_32 = bigint_add!(bigint_sub!(x5, x182, 32), x1, 32);
    let x190: BytePoly_32 = bigint_nondet_inv!(ctx, x189, x1, 32);
    let x191: BytePoly_64 = bigint_mul!(x189, x190, 64);
    let x192: BytePoly_66 = bigint_nondet_quot!(ctx, x191, x1, 66);
    let x193: BytePoly_32 = bigint_nondet_rem!(ctx, x191, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x192, x1, 98), x193, 98), x191, 98),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x193, x0, 32), 34, 1)?;
    let x194: BytePoly_64 = bigint_mul!(bigint_add!(bigint_sub!(x6, x188, 32), x1, 32), x190, 64);
    let x195: BytePoly_66 = bigint_nondet_quot!(ctx, x194, x1, 66);
    let x196: BytePoly_32 = bigint_nondet_rem!(ctx, x194, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x195, x1, 98), x196, 98), x194, 98),
        536459,
        4,
    )?;
    let x197: BytePoly_64 = bigint_add!(bigint_sub!(x188, bigint_mul!(x196, x182, 64), 64), x1, 64);
    let x198: BytePoly_64 = bigint_nondet_quot!(ctx, x197, x1, 64);
    let x199: BytePoly_32 = bigint_nondet_rem!(ctx, x197, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x198, x1, 96), x199, 96), x197, 96),
        520203,
        4,
    )?;
    let x200: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x196, x196, 64), x182, 64), x1, 64),
            x5,
            64
        ),
        x1,
        64
    );
    let x201: BytePoly_66 = bigint_nondet_quot!(ctx, x200, x1, 66);
    let x202: BytePoly_32 = bigint_nondet_rem!(ctx, x200, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x201, x1, 98), x202, 98), x200, 98),
        536459,
        4,
    )?;
    let x203: BytePoly_64 = bigint_mul!(x196, x202, 64);
    let x204: BytePoly_66 = bigint_nondet_quot!(ctx, x203, x1, 66);
    let x205: BytePoly_32 = bigint_nondet_rem!(ctx, x203, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x204, x1, 98), x205, 98), x203, 98),
        536459,
        4,
    )?;
    let x206: BytePoly_32 = bigint_add!(bigint_sub!(x1, bigint_add!(x205, x199, 32), 32), x1, 32);
    let x207: BytePoly_32 = bigint_nondet_quot!(ctx, x206, x1, 32);
    let x208: BytePoly_32 = bigint_nondet_rem!(ctx, x206, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x207, x1, 64), x208, 64), x206, 64),
        260103,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x202, x7, 32), 34, 1)?;
    eqz(ctx, &bigint_sub!(x208, x8, 32), 34, 1)?;
    return Ok(());
}
pub fn rep_ec_aff_add_test_256_r256(ctx: &mut BigIntContext) -> Result<()> {
    let x0: BytePoly_1 = bigint_const!(ctx, 1);
    let x1: BytePoly_32 = bigint_const!(
        ctx, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0
    );
    let x2: BytePoly_32 = bigint_def!(ctx, 32, 0, 1);
    let x3: BytePoly_32 = bigint_def!(ctx, 32, 1, 1);
    let x4: BytePoly_32 = bigint_def!(ctx, 32, 2, 1);
    let x5: BytePoly_32 = bigint_def!(ctx, 32, 3, 1);
    let x6: BytePoly_32 = bigint_def!(ctx, 32, 4, 1);
    let x7: BytePoly_32 = bigint_def!(ctx, 32, 5, 1);
    let x8: BytePoly_32 = bigint_def!(ctx, 32, 6, 1);
    eqz(ctx, &bigint_sub!(x4, x4, 32), 34, 1)?;
    let x9: BytePoly_32 = bigint_add!(bigint_sub!(x5, x2, 32), x1, 32);
    let x10: BytePoly_32 = bigint_nondet_inv!(ctx, x9, x1, 32);
    let x11: BytePoly_64 = bigint_mul!(x9, x10, 64);
    let x12: BytePoly_66 = bigint_nondet_quot!(ctx, x11, x1, 66);
    let x13: BytePoly_32 = bigint_nondet_rem!(ctx, x11, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x12, x1, 98), x13, 98), x11, 98),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x13, x0, 32), 34, 1)?;
    let x14: BytePoly_64 = bigint_mul!(bigint_add!(bigint_sub!(x6, x3, 32), x1, 32), x10, 64);
    let x15: BytePoly_66 = bigint_nondet_quot!(ctx, x14, x1, 66);
    let x16: BytePoly_32 = bigint_nondet_rem!(ctx, x14, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x15, x1, 98), x16, 98), x14, 98),
        536459,
        4,
    )?;
    let x17: BytePoly_64 = bigint_add!(bigint_sub!(x3, bigint_mul!(x16, x2, 64), 64), x1, 64);
    let x18: BytePoly_64 = bigint_nondet_quot!(ctx, x17, x1, 64);
    let x19: BytePoly_32 = bigint_nondet_rem!(ctx, x17, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x18, x1, 96), x19, 96), x17, 96),
        520203,
        4,
    )?;
    let x20: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x16, x16, 64), x2, 64), x1, 64),
            x5,
            64
        ),
        x1,
        64
    );
    let x21: BytePoly_66 = bigint_nondet_quot!(ctx, x20, x1, 66);
    let x22: BytePoly_32 = bigint_nondet_rem!(ctx, x20, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x21, x1, 98), x22, 98), x20, 98),
        536459,
        4,
    )?;
    let x23: BytePoly_64 = bigint_mul!(x16, x22, 64);
    let x24: BytePoly_66 = bigint_nondet_quot!(ctx, x23, x1, 66);
    let x25: BytePoly_32 = bigint_nondet_rem!(ctx, x23, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x24, x1, 98), x25, 98), x23, 98),
        536459,
        4,
    )?;
    let x26: BytePoly_32 = bigint_add!(bigint_sub!(x1, bigint_add!(x25, x19, 32), 32), x1, 32);
    let x27: BytePoly_32 = bigint_nondet_quot!(ctx, x26, x1, 32);
    let x28: BytePoly_32 = bigint_nondet_rem!(ctx, x26, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x27, x1, 64), x28, 64), x26, 64),
        260103,
        4,
    )?;
    let x29: BytePoly_32 = bigint_add!(bigint_sub!(x5, x22, 32), x1, 32);
    let x30: BytePoly_32 = bigint_nondet_inv!(ctx, x29, x1, 32);
    let x31: BytePoly_64 = bigint_mul!(x29, x30, 64);
    let x32: BytePoly_66 = bigint_nondet_quot!(ctx, x31, x1, 66);
    let x33: BytePoly_32 = bigint_nondet_rem!(ctx, x31, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x32, x1, 98), x33, 98), x31, 98),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x33, x0, 32), 34, 1)?;
    let x34: BytePoly_64 = bigint_mul!(bigint_add!(bigint_sub!(x6, x28, 32), x1, 32), x30, 64);
    let x35: BytePoly_66 = bigint_nondet_quot!(ctx, x34, x1, 66);
    let x36: BytePoly_32 = bigint_nondet_rem!(ctx, x34, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x35, x1, 98), x36, 98), x34, 98),
        536459,
        4,
    )?;
    let x37: BytePoly_64 = bigint_add!(bigint_sub!(x28, bigint_mul!(x36, x22, 64), 64), x1, 64);
    let x38: BytePoly_64 = bigint_nondet_quot!(ctx, x37, x1, 64);
    let x39: BytePoly_32 = bigint_nondet_rem!(ctx, x37, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x38, x1, 96), x39, 96), x37, 96),
        520203,
        4,
    )?;
    let x40: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x36, x36, 64), x22, 64), x1, 64),
            x5,
            64
        ),
        x1,
        64
    );
    let x41: BytePoly_66 = bigint_nondet_quot!(ctx, x40, x1, 66);
    let x42: BytePoly_32 = bigint_nondet_rem!(ctx, x40, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x41, x1, 98), x42, 98), x40, 98),
        536459,
        4,
    )?;
    let x43: BytePoly_64 = bigint_mul!(x36, x42, 64);
    let x44: BytePoly_66 = bigint_nondet_quot!(ctx, x43, x1, 66);
    let x45: BytePoly_32 = bigint_nondet_rem!(ctx, x43, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x44, x1, 98), x45, 98), x43, 98),
        536459,
        4,
    )?;
    let x46: BytePoly_32 = bigint_add!(bigint_sub!(x1, bigint_add!(x45, x39, 32), 32), x1, 32);
    let x47: BytePoly_32 = bigint_nondet_quot!(ctx, x46, x1, 32);
    let x48: BytePoly_32 = bigint_nondet_rem!(ctx, x46, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x47, x1, 64), x48, 64), x46, 64),
        260103,
        4,
    )?;
    let x49: BytePoly_32 = bigint_add!(bigint_sub!(x5, x42, 32), x1, 32);
    let x50: BytePoly_32 = bigint_nondet_inv!(ctx, x49, x1, 32);
    let x51: BytePoly_64 = bigint_mul!(x49, x50, 64);
    let x52: BytePoly_66 = bigint_nondet_quot!(ctx, x51, x1, 66);
    let x53: BytePoly_32 = bigint_nondet_rem!(ctx, x51, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x52, x1, 98), x53, 98), x51, 98),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x53, x0, 32), 34, 1)?;
    let x54: BytePoly_64 = bigint_mul!(bigint_add!(bigint_sub!(x6, x48, 32), x1, 32), x50, 64);
    let x55: BytePoly_66 = bigint_nondet_quot!(ctx, x54, x1, 66);
    let x56: BytePoly_32 = bigint_nondet_rem!(ctx, x54, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x55, x1, 98), x56, 98), x54, 98),
        536459,
        4,
    )?;
    let x57: BytePoly_64 = bigint_add!(bigint_sub!(x48, bigint_mul!(x56, x42, 64), 64), x1, 64);
    let x58: BytePoly_64 = bigint_nondet_quot!(ctx, x57, x1, 64);
    let x59: BytePoly_32 = bigint_nondet_rem!(ctx, x57, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x58, x1, 96), x59, 96), x57, 96),
        520203,
        4,
    )?;
    let x60: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x56, x56, 64), x42, 64), x1, 64),
            x5,
            64
        ),
        x1,
        64
    );
    let x61: BytePoly_66 = bigint_nondet_quot!(ctx, x60, x1, 66);
    let x62: BytePoly_32 = bigint_nondet_rem!(ctx, x60, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x61, x1, 98), x62, 98), x60, 98),
        536459,
        4,
    )?;
    let x63: BytePoly_64 = bigint_mul!(x56, x62, 64);
    let x64: BytePoly_66 = bigint_nondet_quot!(ctx, x63, x1, 66);
    let x65: BytePoly_32 = bigint_nondet_rem!(ctx, x63, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x64, x1, 98), x65, 98), x63, 98),
        536459,
        4,
    )?;
    let x66: BytePoly_32 = bigint_add!(bigint_sub!(x1, bigint_add!(x65, x59, 32), 32), x1, 32);
    let x67: BytePoly_32 = bigint_nondet_quot!(ctx, x66, x1, 32);
    let x68: BytePoly_32 = bigint_nondet_rem!(ctx, x66, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x67, x1, 64), x68, 64), x66, 64),
        260103,
        4,
    )?;
    let x69: BytePoly_32 = bigint_add!(bigint_sub!(x5, x62, 32), x1, 32);
    let x70: BytePoly_32 = bigint_nondet_inv!(ctx, x69, x1, 32);
    let x71: BytePoly_64 = bigint_mul!(x69, x70, 64);
    let x72: BytePoly_66 = bigint_nondet_quot!(ctx, x71, x1, 66);
    let x73: BytePoly_32 = bigint_nondet_rem!(ctx, x71, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x72, x1, 98), x73, 98), x71, 98),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x73, x0, 32), 34, 1)?;
    let x74: BytePoly_64 = bigint_mul!(bigint_add!(bigint_sub!(x6, x68, 32), x1, 32), x70, 64);
    let x75: BytePoly_66 = bigint_nondet_quot!(ctx, x74, x1, 66);
    let x76: BytePoly_32 = bigint_nondet_rem!(ctx, x74, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x75, x1, 98), x76, 98), x74, 98),
        536459,
        4,
    )?;
    let x77: BytePoly_64 = bigint_add!(bigint_sub!(x68, bigint_mul!(x76, x62, 64), 64), x1, 64);
    let x78: BytePoly_64 = bigint_nondet_quot!(ctx, x77, x1, 64);
    let x79: BytePoly_32 = bigint_nondet_rem!(ctx, x77, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x78, x1, 96), x79, 96), x77, 96),
        520203,
        4,
    )?;
    let x80: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x76, x76, 64), x62, 64), x1, 64),
            x5,
            64
        ),
        x1,
        64
    );
    let x81: BytePoly_66 = bigint_nondet_quot!(ctx, x80, x1, 66);
    let x82: BytePoly_32 = bigint_nondet_rem!(ctx, x80, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x81, x1, 98), x82, 98), x80, 98),
        536459,
        4,
    )?;
    let x83: BytePoly_64 = bigint_mul!(x76, x82, 64);
    let x84: BytePoly_66 = bigint_nondet_quot!(ctx, x83, x1, 66);
    let x85: BytePoly_32 = bigint_nondet_rem!(ctx, x83, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x84, x1, 98), x85, 98), x83, 98),
        536459,
        4,
    )?;
    let x86: BytePoly_32 = bigint_add!(bigint_sub!(x1, bigint_add!(x85, x79, 32), 32), x1, 32);
    let x87: BytePoly_32 = bigint_nondet_quot!(ctx, x86, x1, 32);
    let x88: BytePoly_32 = bigint_nondet_rem!(ctx, x86, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x87, x1, 64), x88, 64), x86, 64),
        260103,
        4,
    )?;
    let x89: BytePoly_32 = bigint_add!(bigint_sub!(x5, x82, 32), x1, 32);
    let x90: BytePoly_32 = bigint_nondet_inv!(ctx, x89, x1, 32);
    let x91: BytePoly_64 = bigint_mul!(x89, x90, 64);
    let x92: BytePoly_66 = bigint_nondet_quot!(ctx, x91, x1, 66);
    let x93: BytePoly_32 = bigint_nondet_rem!(ctx, x91, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x92, x1, 98), x93, 98), x91, 98),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x93, x0, 32), 34, 1)?;
    let x94: BytePoly_64 = bigint_mul!(bigint_add!(bigint_sub!(x6, x88, 32), x1, 32), x90, 64);
    let x95: BytePoly_66 = bigint_nondet_quot!(ctx, x94, x1, 66);
    let x96: BytePoly_32 = bigint_nondet_rem!(ctx, x94, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x95, x1, 98), x96, 98), x94, 98),
        536459,
        4,
    )?;
    let x97: BytePoly_64 = bigint_add!(bigint_sub!(x88, bigint_mul!(x96, x82, 64), 64), x1, 64);
    let x98: BytePoly_64 = bigint_nondet_quot!(ctx, x97, x1, 64);
    let x99: BytePoly_32 = bigint_nondet_rem!(ctx, x97, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x98, x1, 96), x99, 96), x97, 96),
        520203,
        4,
    )?;
    let x100: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x96, x96, 64), x82, 64), x1, 64),
            x5,
            64
        ),
        x1,
        64
    );
    let x101: BytePoly_66 = bigint_nondet_quot!(ctx, x100, x1, 66);
    let x102: BytePoly_32 = bigint_nondet_rem!(ctx, x100, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x101, x1, 98), x102, 98), x100, 98),
        536459,
        4,
    )?;
    let x103: BytePoly_64 = bigint_mul!(x96, x102, 64);
    let x104: BytePoly_66 = bigint_nondet_quot!(ctx, x103, x1, 66);
    let x105: BytePoly_32 = bigint_nondet_rem!(ctx, x103, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x104, x1, 98), x105, 98), x103, 98),
        536459,
        4,
    )?;
    let x106: BytePoly_32 = bigint_add!(bigint_sub!(x1, bigint_add!(x105, x99, 32), 32), x1, 32);
    let x107: BytePoly_32 = bigint_nondet_quot!(ctx, x106, x1, 32);
    let x108: BytePoly_32 = bigint_nondet_rem!(ctx, x106, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x107, x1, 64), x108, 64), x106, 64),
        260103,
        4,
    )?;
    let x109: BytePoly_32 = bigint_add!(bigint_sub!(x5, x102, 32), x1, 32);
    let x110: BytePoly_32 = bigint_nondet_inv!(ctx, x109, x1, 32);
    let x111: BytePoly_64 = bigint_mul!(x109, x110, 64);
    let x112: BytePoly_66 = bigint_nondet_quot!(ctx, x111, x1, 66);
    let x113: BytePoly_32 = bigint_nondet_rem!(ctx, x111, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x112, x1, 98), x113, 98), x111, 98),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x113, x0, 32), 34, 1)?;
    let x114: BytePoly_64 = bigint_mul!(bigint_add!(bigint_sub!(x6, x108, 32), x1, 32), x110, 64);
    let x115: BytePoly_66 = bigint_nondet_quot!(ctx, x114, x1, 66);
    let x116: BytePoly_32 = bigint_nondet_rem!(ctx, x114, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x115, x1, 98), x116, 98), x114, 98),
        536459,
        4,
    )?;
    let x117: BytePoly_64 = bigint_add!(bigint_sub!(x108, bigint_mul!(x116, x102, 64), 64), x1, 64);
    let x118: BytePoly_64 = bigint_nondet_quot!(ctx, x117, x1, 64);
    let x119: BytePoly_32 = bigint_nondet_rem!(ctx, x117, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x118, x1, 96), x119, 96), x117, 96),
        520203,
        4,
    )?;
    let x120: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x116, x116, 64), x102, 64), x1, 64),
            x5,
            64
        ),
        x1,
        64
    );
    let x121: BytePoly_66 = bigint_nondet_quot!(ctx, x120, x1, 66);
    let x122: BytePoly_32 = bigint_nondet_rem!(ctx, x120, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x121, x1, 98), x122, 98), x120, 98),
        536459,
        4,
    )?;
    let x123: BytePoly_64 = bigint_mul!(x116, x122, 64);
    let x124: BytePoly_66 = bigint_nondet_quot!(ctx, x123, x1, 66);
    let x125: BytePoly_32 = bigint_nondet_rem!(ctx, x123, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x124, x1, 98), x125, 98), x123, 98),
        536459,
        4,
    )?;
    let x126: BytePoly_32 = bigint_add!(bigint_sub!(x1, bigint_add!(x125, x119, 32), 32), x1, 32);
    let x127: BytePoly_32 = bigint_nondet_quot!(ctx, x126, x1, 32);
    let x128: BytePoly_32 = bigint_nondet_rem!(ctx, x126, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x127, x1, 64), x128, 64), x126, 64),
        260103,
        4,
    )?;
    let x129: BytePoly_32 = bigint_add!(bigint_sub!(x5, x122, 32), x1, 32);
    let x130: BytePoly_32 = bigint_nondet_inv!(ctx, x129, x1, 32);
    let x131: BytePoly_64 = bigint_mul!(x129, x130, 64);
    let x132: BytePoly_66 = bigint_nondet_quot!(ctx, x131, x1, 66);
    let x133: BytePoly_32 = bigint_nondet_rem!(ctx, x131, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x132, x1, 98), x133, 98), x131, 98),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x133, x0, 32), 34, 1)?;
    let x134: BytePoly_64 = bigint_mul!(bigint_add!(bigint_sub!(x6, x128, 32), x1, 32), x130, 64);
    let x135: BytePoly_66 = bigint_nondet_quot!(ctx, x134, x1, 66);
    let x136: BytePoly_32 = bigint_nondet_rem!(ctx, x134, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x135, x1, 98), x136, 98), x134, 98),
        536459,
        4,
    )?;
    let x137: BytePoly_64 = bigint_add!(bigint_sub!(x128, bigint_mul!(x136, x122, 64), 64), x1, 64);
    let x138: BytePoly_64 = bigint_nondet_quot!(ctx, x137, x1, 64);
    let x139: BytePoly_32 = bigint_nondet_rem!(ctx, x137, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x138, x1, 96), x139, 96), x137, 96),
        520203,
        4,
    )?;
    let x140: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x136, x136, 64), x122, 64), x1, 64),
            x5,
            64
        ),
        x1,
        64
    );
    let x141: BytePoly_66 = bigint_nondet_quot!(ctx, x140, x1, 66);
    let x142: BytePoly_32 = bigint_nondet_rem!(ctx, x140, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x141, x1, 98), x142, 98), x140, 98),
        536459,
        4,
    )?;
    let x143: BytePoly_64 = bigint_mul!(x136, x142, 64);
    let x144: BytePoly_66 = bigint_nondet_quot!(ctx, x143, x1, 66);
    let x145: BytePoly_32 = bigint_nondet_rem!(ctx, x143, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x144, x1, 98), x145, 98), x143, 98),
        536459,
        4,
    )?;
    let x146: BytePoly_32 = bigint_add!(bigint_sub!(x1, bigint_add!(x145, x139, 32), 32), x1, 32);
    let x147: BytePoly_32 = bigint_nondet_quot!(ctx, x146, x1, 32);
    let x148: BytePoly_32 = bigint_nondet_rem!(ctx, x146, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x147, x1, 64), x148, 64), x146, 64),
        260103,
        4,
    )?;
    let x149: BytePoly_32 = bigint_add!(bigint_sub!(x5, x142, 32), x1, 32);
    let x150: BytePoly_32 = bigint_nondet_inv!(ctx, x149, x1, 32);
    let x151: BytePoly_64 = bigint_mul!(x149, x150, 64);
    let x152: BytePoly_66 = bigint_nondet_quot!(ctx, x151, x1, 66);
    let x153: BytePoly_32 = bigint_nondet_rem!(ctx, x151, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x152, x1, 98), x153, 98), x151, 98),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x153, x0, 32), 34, 1)?;
    let x154: BytePoly_64 = bigint_mul!(bigint_add!(bigint_sub!(x6, x148, 32), x1, 32), x150, 64);
    let x155: BytePoly_66 = bigint_nondet_quot!(ctx, x154, x1, 66);
    let x156: BytePoly_32 = bigint_nondet_rem!(ctx, x154, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x155, x1, 98), x156, 98), x154, 98),
        536459,
        4,
    )?;
    let x157: BytePoly_64 = bigint_add!(bigint_sub!(x148, bigint_mul!(x156, x142, 64), 64), x1, 64);
    let x158: BytePoly_64 = bigint_nondet_quot!(ctx, x157, x1, 64);
    let x159: BytePoly_32 = bigint_nondet_rem!(ctx, x157, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x158, x1, 96), x159, 96), x157, 96),
        520203,
        4,
    )?;
    let x160: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x156, x156, 64), x142, 64), x1, 64),
            x5,
            64
        ),
        x1,
        64
    );
    let x161: BytePoly_66 = bigint_nondet_quot!(ctx, x160, x1, 66);
    let x162: BytePoly_32 = bigint_nondet_rem!(ctx, x160, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x161, x1, 98), x162, 98), x160, 98),
        536459,
        4,
    )?;
    let x163: BytePoly_64 = bigint_mul!(x156, x162, 64);
    let x164: BytePoly_66 = bigint_nondet_quot!(ctx, x163, x1, 66);
    let x165: BytePoly_32 = bigint_nondet_rem!(ctx, x163, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x164, x1, 98), x165, 98), x163, 98),
        536459,
        4,
    )?;
    let x166: BytePoly_32 = bigint_add!(bigint_sub!(x1, bigint_add!(x165, x159, 32), 32), x1, 32);
    let x167: BytePoly_32 = bigint_nondet_quot!(ctx, x166, x1, 32);
    let x168: BytePoly_32 = bigint_nondet_rem!(ctx, x166, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x167, x1, 64), x168, 64), x166, 64),
        260103,
        4,
    )?;
    let x169: BytePoly_32 = bigint_add!(bigint_sub!(x5, x162, 32), x1, 32);
    let x170: BytePoly_32 = bigint_nondet_inv!(ctx, x169, x1, 32);
    let x171: BytePoly_64 = bigint_mul!(x169, x170, 64);
    let x172: BytePoly_66 = bigint_nondet_quot!(ctx, x171, x1, 66);
    let x173: BytePoly_32 = bigint_nondet_rem!(ctx, x171, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x172, x1, 98), x173, 98), x171, 98),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x173, x0, 32), 34, 1)?;
    let x174: BytePoly_64 = bigint_mul!(bigint_add!(bigint_sub!(x6, x168, 32), x1, 32), x170, 64);
    let x175: BytePoly_66 = bigint_nondet_quot!(ctx, x174, x1, 66);
    let x176: BytePoly_32 = bigint_nondet_rem!(ctx, x174, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x175, x1, 98), x176, 98), x174, 98),
        536459,
        4,
    )?;
    let x177: BytePoly_64 = bigint_add!(bigint_sub!(x168, bigint_mul!(x176, x162, 64), 64), x1, 64);
    let x178: BytePoly_64 = bigint_nondet_quot!(ctx, x177, x1, 64);
    let x179: BytePoly_32 = bigint_nondet_rem!(ctx, x177, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x178, x1, 96), x179, 96), x177, 96),
        520203,
        4,
    )?;
    let x180: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x176, x176, 64), x162, 64), x1, 64),
            x5,
            64
        ),
        x1,
        64
    );
    let x181: BytePoly_66 = bigint_nondet_quot!(ctx, x180, x1, 66);
    let x182: BytePoly_32 = bigint_nondet_rem!(ctx, x180, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x181, x1, 98), x182, 98), x180, 98),
        536459,
        4,
    )?;
    let x183: BytePoly_64 = bigint_mul!(x176, x182, 64);
    let x184: BytePoly_66 = bigint_nondet_quot!(ctx, x183, x1, 66);
    let x185: BytePoly_32 = bigint_nondet_rem!(ctx, x183, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x184, x1, 98), x185, 98), x183, 98),
        536459,
        4,
    )?;
    let x186: BytePoly_32 = bigint_add!(bigint_sub!(x1, bigint_add!(x185, x179, 32), 32), x1, 32);
    let x187: BytePoly_32 = bigint_nondet_quot!(ctx, x186, x1, 32);
    let x188: BytePoly_32 = bigint_nondet_rem!(ctx, x186, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x187, x1, 64), x188, 64), x186, 64),
        260103,
        4,
    )?;
    let x189: BytePoly_32 = bigint_add!(bigint_sub!(x5, x182, 32), x1, 32);
    let x190: BytePoly_32 = bigint_nondet_inv!(ctx, x189, x1, 32);
    let x191: BytePoly_64 = bigint_mul!(x189, x190, 64);
    let x192: BytePoly_66 = bigint_nondet_quot!(ctx, x191, x1, 66);
    let x193: BytePoly_32 = bigint_nondet_rem!(ctx, x191, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x192, x1, 98), x193, 98), x191, 98),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x193, x0, 32), 34, 1)?;
    let x194: BytePoly_64 = bigint_mul!(bigint_add!(bigint_sub!(x6, x188, 32), x1, 32), x190, 64);
    let x195: BytePoly_66 = bigint_nondet_quot!(ctx, x194, x1, 66);
    let x196: BytePoly_32 = bigint_nondet_rem!(ctx, x194, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x195, x1, 98), x196, 98), x194, 98),
        536459,
        4,
    )?;
    let x197: BytePoly_64 = bigint_add!(bigint_sub!(x188, bigint_mul!(x196, x182, 64), 64), x1, 64);
    let x198: BytePoly_64 = bigint_nondet_quot!(ctx, x197, x1, 64);
    let x199: BytePoly_32 = bigint_nondet_rem!(ctx, x197, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x198, x1, 96), x199, 96), x197, 96),
        520203,
        4,
    )?;
    let x200: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x196, x196, 64), x182, 64), x1, 64),
            x5,
            64
        ),
        x1,
        64
    );
    let x201: BytePoly_66 = bigint_nondet_quot!(ctx, x200, x1, 66);
    let x202: BytePoly_32 = bigint_nondet_rem!(ctx, x200, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x201, x1, 98), x202, 98), x200, 98),
        536459,
        4,
    )?;
    let x203: BytePoly_64 = bigint_mul!(x196, x202, 64);
    let x204: BytePoly_66 = bigint_nondet_quot!(ctx, x203, x1, 66);
    let x205: BytePoly_32 = bigint_nondet_rem!(ctx, x203, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x204, x1, 98), x205, 98), x203, 98),
        536459,
        4,
    )?;
    let x206: BytePoly_32 = bigint_add!(bigint_sub!(x1, bigint_add!(x205, x199, 32), 32), x1, 32);
    let x207: BytePoly_32 = bigint_nondet_quot!(ctx, x206, x1, 32);
    let x208: BytePoly_32 = bigint_nondet_rem!(ctx, x206, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x207, x1, 64), x208, 64), x206, 64),
        260103,
        4,
    )?;
    let x209: BytePoly_32 = bigint_add!(bigint_sub!(x5, x202, 32), x1, 32);
    let x210: BytePoly_32 = bigint_nondet_inv!(ctx, x209, x1, 32);
    let x211: BytePoly_64 = bigint_mul!(x209, x210, 64);
    let x212: BytePoly_66 = bigint_nondet_quot!(ctx, x211, x1, 66);
    let x213: BytePoly_32 = bigint_nondet_rem!(ctx, x211, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x212, x1, 98), x213, 98), x211, 98),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x213, x0, 32), 34, 1)?;
    let x214: BytePoly_64 = bigint_mul!(bigint_add!(bigint_sub!(x6, x208, 32), x1, 32), x210, 64);
    let x215: BytePoly_66 = bigint_nondet_quot!(ctx, x214, x1, 66);
    let x216: BytePoly_32 = bigint_nondet_rem!(ctx, x214, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x215, x1, 98), x216, 98), x214, 98),
        536459,
        4,
    )?;
    let x217: BytePoly_64 = bigint_add!(bigint_sub!(x208, bigint_mul!(x216, x202, 64), 64), x1, 64);
    let x218: BytePoly_64 = bigint_nondet_quot!(ctx, x217, x1, 64);
    let x219: BytePoly_32 = bigint_nondet_rem!(ctx, x217, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x218, x1, 96), x219, 96), x217, 96),
        520203,
        4,
    )?;
    let x220: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x216, x216, 64), x202, 64), x1, 64),
            x5,
            64
        ),
        x1,
        64
    );
    let x221: BytePoly_66 = bigint_nondet_quot!(ctx, x220, x1, 66);
    let x222: BytePoly_32 = bigint_nondet_rem!(ctx, x220, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x221, x1, 98), x222, 98), x220, 98),
        536459,
        4,
    )?;
    let x223: BytePoly_64 = bigint_mul!(x216, x222, 64);
    let x224: BytePoly_66 = bigint_nondet_quot!(ctx, x223, x1, 66);
    let x225: BytePoly_32 = bigint_nondet_rem!(ctx, x223, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x224, x1, 98), x225, 98), x223, 98),
        536459,
        4,
    )?;
    let x226: BytePoly_32 = bigint_add!(bigint_sub!(x1, bigint_add!(x225, x219, 32), 32), x1, 32);
    let x227: BytePoly_32 = bigint_nondet_quot!(ctx, x226, x1, 32);
    let x228: BytePoly_32 = bigint_nondet_rem!(ctx, x226, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x227, x1, 64), x228, 64), x226, 64),
        260103,
        4,
    )?;
    let x229: BytePoly_32 = bigint_add!(bigint_sub!(x5, x222, 32), x1, 32);
    let x230: BytePoly_32 = bigint_nondet_inv!(ctx, x229, x1, 32);
    let x231: BytePoly_64 = bigint_mul!(x229, x230, 64);
    let x232: BytePoly_66 = bigint_nondet_quot!(ctx, x231, x1, 66);
    let x233: BytePoly_32 = bigint_nondet_rem!(ctx, x231, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x232, x1, 98), x233, 98), x231, 98),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x233, x0, 32), 34, 1)?;
    let x234: BytePoly_64 = bigint_mul!(bigint_add!(bigint_sub!(x6, x228, 32), x1, 32), x230, 64);
    let x235: BytePoly_66 = bigint_nondet_quot!(ctx, x234, x1, 66);
    let x236: BytePoly_32 = bigint_nondet_rem!(ctx, x234, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x235, x1, 98), x236, 98), x234, 98),
        536459,
        4,
    )?;
    let x237: BytePoly_64 = bigint_add!(bigint_sub!(x228, bigint_mul!(x236, x222, 64), 64), x1, 64);
    let x238: BytePoly_64 = bigint_nondet_quot!(ctx, x237, x1, 64);
    let x239: BytePoly_32 = bigint_nondet_rem!(ctx, x237, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x238, x1, 96), x239, 96), x237, 96),
        520203,
        4,
    )?;
    let x240: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x236, x236, 64), x222, 64), x1, 64),
            x5,
            64
        ),
        x1,
        64
    );
    let x241: BytePoly_66 = bigint_nondet_quot!(ctx, x240, x1, 66);
    let x242: BytePoly_32 = bigint_nondet_rem!(ctx, x240, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x241, x1, 98), x242, 98), x240, 98),
        536459,
        4,
    )?;
    let x243: BytePoly_64 = bigint_mul!(x236, x242, 64);
    let x244: BytePoly_66 = bigint_nondet_quot!(ctx, x243, x1, 66);
    let x245: BytePoly_32 = bigint_nondet_rem!(ctx, x243, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x244, x1, 98), x245, 98), x243, 98),
        536459,
        4,
    )?;
    let x246: BytePoly_32 = bigint_add!(bigint_sub!(x1, bigint_add!(x245, x239, 32), 32), x1, 32);
    let x247: BytePoly_32 = bigint_nondet_quot!(ctx, x246, x1, 32);
    let x248: BytePoly_32 = bigint_nondet_rem!(ctx, x246, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x247, x1, 64), x248, 64), x246, 64),
        260103,
        4,
    )?;
    let x249: BytePoly_32 = bigint_add!(bigint_sub!(x5, x242, 32), x1, 32);
    let x250: BytePoly_32 = bigint_nondet_inv!(ctx, x249, x1, 32);
    let x251: BytePoly_64 = bigint_mul!(x249, x250, 64);
    let x252: BytePoly_66 = bigint_nondet_quot!(ctx, x251, x1, 66);
    let x253: BytePoly_32 = bigint_nondet_rem!(ctx, x251, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x252, x1, 98), x253, 98), x251, 98),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x253, x0, 32), 34, 1)?;
    let x254: BytePoly_64 = bigint_mul!(bigint_add!(bigint_sub!(x6, x248, 32), x1, 32), x250, 64);
    let x255: BytePoly_66 = bigint_nondet_quot!(ctx, x254, x1, 66);
    let x256: BytePoly_32 = bigint_nondet_rem!(ctx, x254, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x255, x1, 98), x256, 98), x254, 98),
        536459,
        4,
    )?;
    let x257: BytePoly_64 = bigint_add!(bigint_sub!(x248, bigint_mul!(x256, x242, 64), 64), x1, 64);
    let x258: BytePoly_64 = bigint_nondet_quot!(ctx, x257, x1, 64);
    let x259: BytePoly_32 = bigint_nondet_rem!(ctx, x257, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x258, x1, 96), x259, 96), x257, 96),
        520203,
        4,
    )?;
    let x260: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x256, x256, 64), x242, 64), x1, 64),
            x5,
            64
        ),
        x1,
        64
    );
    let x261: BytePoly_66 = bigint_nondet_quot!(ctx, x260, x1, 66);
    let x262: BytePoly_32 = bigint_nondet_rem!(ctx, x260, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x261, x1, 98), x262, 98), x260, 98),
        536459,
        4,
    )?;
    let x263: BytePoly_64 = bigint_mul!(x256, x262, 64);
    let x264: BytePoly_66 = bigint_nondet_quot!(ctx, x263, x1, 66);
    let x265: BytePoly_32 = bigint_nondet_rem!(ctx, x263, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x264, x1, 98), x265, 98), x263, 98),
        536459,
        4,
    )?;
    let x266: BytePoly_32 = bigint_add!(bigint_sub!(x1, bigint_add!(x265, x259, 32), 32), x1, 32);
    let x267: BytePoly_32 = bigint_nondet_quot!(ctx, x266, x1, 32);
    let x268: BytePoly_32 = bigint_nondet_rem!(ctx, x266, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x267, x1, 64), x268, 64), x266, 64),
        260103,
        4,
    )?;
    let x269: BytePoly_32 = bigint_add!(bigint_sub!(x5, x262, 32), x1, 32);
    let x270: BytePoly_32 = bigint_nondet_inv!(ctx, x269, x1, 32);
    let x271: BytePoly_64 = bigint_mul!(x269, x270, 64);
    let x272: BytePoly_66 = bigint_nondet_quot!(ctx, x271, x1, 66);
    let x273: BytePoly_32 = bigint_nondet_rem!(ctx, x271, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x272, x1, 98), x273, 98), x271, 98),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x273, x0, 32), 34, 1)?;
    let x274: BytePoly_64 = bigint_mul!(bigint_add!(bigint_sub!(x6, x268, 32), x1, 32), x270, 64);
    let x275: BytePoly_66 = bigint_nondet_quot!(ctx, x274, x1, 66);
    let x276: BytePoly_32 = bigint_nondet_rem!(ctx, x274, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x275, x1, 98), x276, 98), x274, 98),
        536459,
        4,
    )?;
    let x277: BytePoly_64 = bigint_add!(bigint_sub!(x268, bigint_mul!(x276, x262, 64), 64), x1, 64);
    let x278: BytePoly_64 = bigint_nondet_quot!(ctx, x277, x1, 64);
    let x279: BytePoly_32 = bigint_nondet_rem!(ctx, x277, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x278, x1, 96), x279, 96), x277, 96),
        520203,
        4,
    )?;
    let x280: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x276, x276, 64), x262, 64), x1, 64),
            x5,
            64
        ),
        x1,
        64
    );
    let x281: BytePoly_66 = bigint_nondet_quot!(ctx, x280, x1, 66);
    let x282: BytePoly_32 = bigint_nondet_rem!(ctx, x280, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x281, x1, 98), x282, 98), x280, 98),
        536459,
        4,
    )?;
    let x283: BytePoly_64 = bigint_mul!(x276, x282, 64);
    let x284: BytePoly_66 = bigint_nondet_quot!(ctx, x283, x1, 66);
    let x285: BytePoly_32 = bigint_nondet_rem!(ctx, x283, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x284, x1, 98), x285, 98), x283, 98),
        536459,
        4,
    )?;
    let x286: BytePoly_32 = bigint_add!(bigint_sub!(x1, bigint_add!(x285, x279, 32), 32), x1, 32);
    let x287: BytePoly_32 = bigint_nondet_quot!(ctx, x286, x1, 32);
    let x288: BytePoly_32 = bigint_nondet_rem!(ctx, x286, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x287, x1, 64), x288, 64), x286, 64),
        260103,
        4,
    )?;
    let x289: BytePoly_32 = bigint_add!(bigint_sub!(x5, x282, 32), x1, 32);
    let x290: BytePoly_32 = bigint_nondet_inv!(ctx, x289, x1, 32);
    let x291: BytePoly_64 = bigint_mul!(x289, x290, 64);
    let x292: BytePoly_66 = bigint_nondet_quot!(ctx, x291, x1, 66);
    let x293: BytePoly_32 = bigint_nondet_rem!(ctx, x291, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x292, x1, 98), x293, 98), x291, 98),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x293, x0, 32), 34, 1)?;
    let x294: BytePoly_64 = bigint_mul!(bigint_add!(bigint_sub!(x6, x288, 32), x1, 32), x290, 64);
    let x295: BytePoly_66 = bigint_nondet_quot!(ctx, x294, x1, 66);
    let x296: BytePoly_32 = bigint_nondet_rem!(ctx, x294, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x295, x1, 98), x296, 98), x294, 98),
        536459,
        4,
    )?;
    let x297: BytePoly_64 = bigint_add!(bigint_sub!(x288, bigint_mul!(x296, x282, 64), 64), x1, 64);
    let x298: BytePoly_64 = bigint_nondet_quot!(ctx, x297, x1, 64);
    let x299: BytePoly_32 = bigint_nondet_rem!(ctx, x297, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x298, x1, 96), x299, 96), x297, 96),
        520203,
        4,
    )?;
    let x300: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x296, x296, 64), x282, 64), x1, 64),
            x5,
            64
        ),
        x1,
        64
    );
    let x301: BytePoly_66 = bigint_nondet_quot!(ctx, x300, x1, 66);
    let x302: BytePoly_32 = bigint_nondet_rem!(ctx, x300, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x301, x1, 98), x302, 98), x300, 98),
        536459,
        4,
    )?;
    let x303: BytePoly_64 = bigint_mul!(x296, x302, 64);
    let x304: BytePoly_66 = bigint_nondet_quot!(ctx, x303, x1, 66);
    let x305: BytePoly_32 = bigint_nondet_rem!(ctx, x303, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x304, x1, 98), x305, 98), x303, 98),
        536459,
        4,
    )?;
    let x306: BytePoly_32 = bigint_add!(bigint_sub!(x1, bigint_add!(x305, x299, 32), 32), x1, 32);
    let x307: BytePoly_32 = bigint_nondet_quot!(ctx, x306, x1, 32);
    let x308: BytePoly_32 = bigint_nondet_rem!(ctx, x306, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x307, x1, 64), x308, 64), x306, 64),
        260103,
        4,
    )?;
    let x309: BytePoly_32 = bigint_add!(bigint_sub!(x5, x302, 32), x1, 32);
    let x310: BytePoly_32 = bigint_nondet_inv!(ctx, x309, x1, 32);
    let x311: BytePoly_64 = bigint_mul!(x309, x310, 64);
    let x312: BytePoly_66 = bigint_nondet_quot!(ctx, x311, x1, 66);
    let x313: BytePoly_32 = bigint_nondet_rem!(ctx, x311, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x312, x1, 98), x313, 98), x311, 98),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x313, x0, 32), 34, 1)?;
    let x314: BytePoly_64 = bigint_mul!(bigint_add!(bigint_sub!(x6, x308, 32), x1, 32), x310, 64);
    let x315: BytePoly_66 = bigint_nondet_quot!(ctx, x314, x1, 66);
    let x316: BytePoly_32 = bigint_nondet_rem!(ctx, x314, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x315, x1, 98), x316, 98), x314, 98),
        536459,
        4,
    )?;
    let x317: BytePoly_64 = bigint_add!(bigint_sub!(x308, bigint_mul!(x316, x302, 64), 64), x1, 64);
    let x318: BytePoly_64 = bigint_nondet_quot!(ctx, x317, x1, 64);
    let x319: BytePoly_32 = bigint_nondet_rem!(ctx, x317, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x318, x1, 96), x319, 96), x317, 96),
        520203,
        4,
    )?;
    let x320: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x316, x316, 64), x302, 64), x1, 64),
            x5,
            64
        ),
        x1,
        64
    );
    let x321: BytePoly_66 = bigint_nondet_quot!(ctx, x320, x1, 66);
    let x322: BytePoly_32 = bigint_nondet_rem!(ctx, x320, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x321, x1, 98), x322, 98), x320, 98),
        536459,
        4,
    )?;
    let x323: BytePoly_64 = bigint_mul!(x316, x322, 64);
    let x324: BytePoly_66 = bigint_nondet_quot!(ctx, x323, x1, 66);
    let x325: BytePoly_32 = bigint_nondet_rem!(ctx, x323, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x324, x1, 98), x325, 98), x323, 98),
        536459,
        4,
    )?;
    let x326: BytePoly_32 = bigint_add!(bigint_sub!(x1, bigint_add!(x325, x319, 32), 32), x1, 32);
    let x327: BytePoly_32 = bigint_nondet_quot!(ctx, x326, x1, 32);
    let x328: BytePoly_32 = bigint_nondet_rem!(ctx, x326, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x327, x1, 64), x328, 64), x326, 64),
        260103,
        4,
    )?;
    let x329: BytePoly_32 = bigint_add!(bigint_sub!(x5, x322, 32), x1, 32);
    let x330: BytePoly_32 = bigint_nondet_inv!(ctx, x329, x1, 32);
    let x331: BytePoly_64 = bigint_mul!(x329, x330, 64);
    let x332: BytePoly_66 = bigint_nondet_quot!(ctx, x331, x1, 66);
    let x333: BytePoly_32 = bigint_nondet_rem!(ctx, x331, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x332, x1, 98), x333, 98), x331, 98),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x333, x0, 32), 34, 1)?;
    let x334: BytePoly_64 = bigint_mul!(bigint_add!(bigint_sub!(x6, x328, 32), x1, 32), x330, 64);
    let x335: BytePoly_66 = bigint_nondet_quot!(ctx, x334, x1, 66);
    let x336: BytePoly_32 = bigint_nondet_rem!(ctx, x334, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x335, x1, 98), x336, 98), x334, 98),
        536459,
        4,
    )?;
    let x337: BytePoly_64 = bigint_add!(bigint_sub!(x328, bigint_mul!(x336, x322, 64), 64), x1, 64);
    let x338: BytePoly_64 = bigint_nondet_quot!(ctx, x337, x1, 64);
    let x339: BytePoly_32 = bigint_nondet_rem!(ctx, x337, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x338, x1, 96), x339, 96), x337, 96),
        520203,
        4,
    )?;
    let x340: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x336, x336, 64), x322, 64), x1, 64),
            x5,
            64
        ),
        x1,
        64
    );
    let x341: BytePoly_66 = bigint_nondet_quot!(ctx, x340, x1, 66);
    let x342: BytePoly_32 = bigint_nondet_rem!(ctx, x340, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x341, x1, 98), x342, 98), x340, 98),
        536459,
        4,
    )?;
    let x343: BytePoly_64 = bigint_mul!(x336, x342, 64);
    let x344: BytePoly_66 = bigint_nondet_quot!(ctx, x343, x1, 66);
    let x345: BytePoly_32 = bigint_nondet_rem!(ctx, x343, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x344, x1, 98), x345, 98), x343, 98),
        536459,
        4,
    )?;
    let x346: BytePoly_32 = bigint_add!(bigint_sub!(x1, bigint_add!(x345, x339, 32), 32), x1, 32);
    let x347: BytePoly_32 = bigint_nondet_quot!(ctx, x346, x1, 32);
    let x348: BytePoly_32 = bigint_nondet_rem!(ctx, x346, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x347, x1, 64), x348, 64), x346, 64),
        260103,
        4,
    )?;
    let x349: BytePoly_32 = bigint_add!(bigint_sub!(x5, x342, 32), x1, 32);
    let x350: BytePoly_32 = bigint_nondet_inv!(ctx, x349, x1, 32);
    let x351: BytePoly_64 = bigint_mul!(x349, x350, 64);
    let x352: BytePoly_66 = bigint_nondet_quot!(ctx, x351, x1, 66);
    let x353: BytePoly_32 = bigint_nondet_rem!(ctx, x351, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x352, x1, 98), x353, 98), x351, 98),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x353, x0, 32), 34, 1)?;
    let x354: BytePoly_64 = bigint_mul!(bigint_add!(bigint_sub!(x6, x348, 32), x1, 32), x350, 64);
    let x355: BytePoly_66 = bigint_nondet_quot!(ctx, x354, x1, 66);
    let x356: BytePoly_32 = bigint_nondet_rem!(ctx, x354, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x355, x1, 98), x356, 98), x354, 98),
        536459,
        4,
    )?;
    let x357: BytePoly_64 = bigint_add!(bigint_sub!(x348, bigint_mul!(x356, x342, 64), 64), x1, 64);
    let x358: BytePoly_64 = bigint_nondet_quot!(ctx, x357, x1, 64);
    let x359: BytePoly_32 = bigint_nondet_rem!(ctx, x357, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x358, x1, 96), x359, 96), x357, 96),
        520203,
        4,
    )?;
    let x360: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x356, x356, 64), x342, 64), x1, 64),
            x5,
            64
        ),
        x1,
        64
    );
    let x361: BytePoly_66 = bigint_nondet_quot!(ctx, x360, x1, 66);
    let x362: BytePoly_32 = bigint_nondet_rem!(ctx, x360, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x361, x1, 98), x362, 98), x360, 98),
        536459,
        4,
    )?;
    let x363: BytePoly_64 = bigint_mul!(x356, x362, 64);
    let x364: BytePoly_66 = bigint_nondet_quot!(ctx, x363, x1, 66);
    let x365: BytePoly_32 = bigint_nondet_rem!(ctx, x363, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x364, x1, 98), x365, 98), x363, 98),
        536459,
        4,
    )?;
    let x366: BytePoly_32 = bigint_add!(bigint_sub!(x1, bigint_add!(x365, x359, 32), 32), x1, 32);
    let x367: BytePoly_32 = bigint_nondet_quot!(ctx, x366, x1, 32);
    let x368: BytePoly_32 = bigint_nondet_rem!(ctx, x366, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x367, x1, 64), x368, 64), x366, 64),
        260103,
        4,
    )?;
    let x369: BytePoly_32 = bigint_add!(bigint_sub!(x5, x362, 32), x1, 32);
    let x370: BytePoly_32 = bigint_nondet_inv!(ctx, x369, x1, 32);
    let x371: BytePoly_64 = bigint_mul!(x369, x370, 64);
    let x372: BytePoly_66 = bigint_nondet_quot!(ctx, x371, x1, 66);
    let x373: BytePoly_32 = bigint_nondet_rem!(ctx, x371, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x372, x1, 98), x373, 98), x371, 98),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x373, x0, 32), 34, 1)?;
    let x374: BytePoly_64 = bigint_mul!(bigint_add!(bigint_sub!(x6, x368, 32), x1, 32), x370, 64);
    let x375: BytePoly_66 = bigint_nondet_quot!(ctx, x374, x1, 66);
    let x376: BytePoly_32 = bigint_nondet_rem!(ctx, x374, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x375, x1, 98), x376, 98), x374, 98),
        536459,
        4,
    )?;
    let x377: BytePoly_64 = bigint_add!(bigint_sub!(x368, bigint_mul!(x376, x362, 64), 64), x1, 64);
    let x378: BytePoly_64 = bigint_nondet_quot!(ctx, x377, x1, 64);
    let x379: BytePoly_32 = bigint_nondet_rem!(ctx, x377, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x378, x1, 96), x379, 96), x377, 96),
        520203,
        4,
    )?;
    let x380: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x376, x376, 64), x362, 64), x1, 64),
            x5,
            64
        ),
        x1,
        64
    );
    let x381: BytePoly_66 = bigint_nondet_quot!(ctx, x380, x1, 66);
    let x382: BytePoly_32 = bigint_nondet_rem!(ctx, x380, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x381, x1, 98), x382, 98), x380, 98),
        536459,
        4,
    )?;
    let x383: BytePoly_64 = bigint_mul!(x376, x382, 64);
    let x384: BytePoly_66 = bigint_nondet_quot!(ctx, x383, x1, 66);
    let x385: BytePoly_32 = bigint_nondet_rem!(ctx, x383, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x384, x1, 98), x385, 98), x383, 98),
        536459,
        4,
    )?;
    let x386: BytePoly_32 = bigint_add!(bigint_sub!(x1, bigint_add!(x385, x379, 32), 32), x1, 32);
    let x387: BytePoly_32 = bigint_nondet_quot!(ctx, x386, x1, 32);
    let x388: BytePoly_32 = bigint_nondet_rem!(ctx, x386, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x387, x1, 64), x388, 64), x386, 64),
        260103,
        4,
    )?;
    let x389: BytePoly_32 = bigint_add!(bigint_sub!(x5, x382, 32), x1, 32);
    let x390: BytePoly_32 = bigint_nondet_inv!(ctx, x389, x1, 32);
    let x391: BytePoly_64 = bigint_mul!(x389, x390, 64);
    let x392: BytePoly_66 = bigint_nondet_quot!(ctx, x391, x1, 66);
    let x393: BytePoly_32 = bigint_nondet_rem!(ctx, x391, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x392, x1, 98), x393, 98), x391, 98),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x393, x0, 32), 34, 1)?;
    let x394: BytePoly_64 = bigint_mul!(bigint_add!(bigint_sub!(x6, x388, 32), x1, 32), x390, 64);
    let x395: BytePoly_66 = bigint_nondet_quot!(ctx, x394, x1, 66);
    let x396: BytePoly_32 = bigint_nondet_rem!(ctx, x394, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x395, x1, 98), x396, 98), x394, 98),
        536459,
        4,
    )?;
    let x397: BytePoly_64 = bigint_add!(bigint_sub!(x388, bigint_mul!(x396, x382, 64), 64), x1, 64);
    let x398: BytePoly_64 = bigint_nondet_quot!(ctx, x397, x1, 64);
    let x399: BytePoly_32 = bigint_nondet_rem!(ctx, x397, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x398, x1, 96), x399, 96), x397, 96),
        520203,
        4,
    )?;
    let x400: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x396, x396, 64), x382, 64), x1, 64),
            x5,
            64
        ),
        x1,
        64
    );
    let x401: BytePoly_66 = bigint_nondet_quot!(ctx, x400, x1, 66);
    let x402: BytePoly_32 = bigint_nondet_rem!(ctx, x400, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x401, x1, 98), x402, 98), x400, 98),
        536459,
        4,
    )?;
    let x403: BytePoly_64 = bigint_mul!(x396, x402, 64);
    let x404: BytePoly_66 = bigint_nondet_quot!(ctx, x403, x1, 66);
    let x405: BytePoly_32 = bigint_nondet_rem!(ctx, x403, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x404, x1, 98), x405, 98), x403, 98),
        536459,
        4,
    )?;
    let x406: BytePoly_32 = bigint_add!(bigint_sub!(x1, bigint_add!(x405, x399, 32), 32), x1, 32);
    let x407: BytePoly_32 = bigint_nondet_quot!(ctx, x406, x1, 32);
    let x408: BytePoly_32 = bigint_nondet_rem!(ctx, x406, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x407, x1, 64), x408, 64), x406, 64),
        260103,
        4,
    )?;
    let x409: BytePoly_32 = bigint_add!(bigint_sub!(x5, x402, 32), x1, 32);
    let x410: BytePoly_32 = bigint_nondet_inv!(ctx, x409, x1, 32);
    let x411: BytePoly_64 = bigint_mul!(x409, x410, 64);
    let x412: BytePoly_66 = bigint_nondet_quot!(ctx, x411, x1, 66);
    let x413: BytePoly_32 = bigint_nondet_rem!(ctx, x411, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x412, x1, 98), x413, 98), x411, 98),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x413, x0, 32), 34, 1)?;
    let x414: BytePoly_64 = bigint_mul!(bigint_add!(bigint_sub!(x6, x408, 32), x1, 32), x410, 64);
    let x415: BytePoly_66 = bigint_nondet_quot!(ctx, x414, x1, 66);
    let x416: BytePoly_32 = bigint_nondet_rem!(ctx, x414, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x415, x1, 98), x416, 98), x414, 98),
        536459,
        4,
    )?;
    let x417: BytePoly_64 = bigint_add!(bigint_sub!(x408, bigint_mul!(x416, x402, 64), 64), x1, 64);
    let x418: BytePoly_64 = bigint_nondet_quot!(ctx, x417, x1, 64);
    let x419: BytePoly_32 = bigint_nondet_rem!(ctx, x417, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x418, x1, 96), x419, 96), x417, 96),
        520203,
        4,
    )?;
    let x420: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x416, x416, 64), x402, 64), x1, 64),
            x5,
            64
        ),
        x1,
        64
    );
    let x421: BytePoly_66 = bigint_nondet_quot!(ctx, x420, x1, 66);
    let x422: BytePoly_32 = bigint_nondet_rem!(ctx, x420, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x421, x1, 98), x422, 98), x420, 98),
        536459,
        4,
    )?;
    let x423: BytePoly_64 = bigint_mul!(x416, x422, 64);
    let x424: BytePoly_66 = bigint_nondet_quot!(ctx, x423, x1, 66);
    let x425: BytePoly_32 = bigint_nondet_rem!(ctx, x423, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x424, x1, 98), x425, 98), x423, 98),
        536459,
        4,
    )?;
    let x426: BytePoly_32 = bigint_add!(bigint_sub!(x1, bigint_add!(x425, x419, 32), 32), x1, 32);
    let x427: BytePoly_32 = bigint_nondet_quot!(ctx, x426, x1, 32);
    let x428: BytePoly_32 = bigint_nondet_rem!(ctx, x426, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x427, x1, 64), x428, 64), x426, 64),
        260103,
        4,
    )?;
    let x429: BytePoly_32 = bigint_add!(bigint_sub!(x5, x422, 32), x1, 32);
    let x430: BytePoly_32 = bigint_nondet_inv!(ctx, x429, x1, 32);
    let x431: BytePoly_64 = bigint_mul!(x429, x430, 64);
    let x432: BytePoly_66 = bigint_nondet_quot!(ctx, x431, x1, 66);
    let x433: BytePoly_32 = bigint_nondet_rem!(ctx, x431, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x432, x1, 98), x433, 98), x431, 98),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x433, x0, 32), 34, 1)?;
    let x434: BytePoly_64 = bigint_mul!(bigint_add!(bigint_sub!(x6, x428, 32), x1, 32), x430, 64);
    let x435: BytePoly_66 = bigint_nondet_quot!(ctx, x434, x1, 66);
    let x436: BytePoly_32 = bigint_nondet_rem!(ctx, x434, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x435, x1, 98), x436, 98), x434, 98),
        536459,
        4,
    )?;
    let x437: BytePoly_64 = bigint_add!(bigint_sub!(x428, bigint_mul!(x436, x422, 64), 64), x1, 64);
    let x438: BytePoly_64 = bigint_nondet_quot!(ctx, x437, x1, 64);
    let x439: BytePoly_32 = bigint_nondet_rem!(ctx, x437, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x438, x1, 96), x439, 96), x437, 96),
        520203,
        4,
    )?;
    let x440: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x436, x436, 64), x422, 64), x1, 64),
            x5,
            64
        ),
        x1,
        64
    );
    let x441: BytePoly_66 = bigint_nondet_quot!(ctx, x440, x1, 66);
    let x442: BytePoly_32 = bigint_nondet_rem!(ctx, x440, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x441, x1, 98), x442, 98), x440, 98),
        536459,
        4,
    )?;
    let x443: BytePoly_64 = bigint_mul!(x436, x442, 64);
    let x444: BytePoly_66 = bigint_nondet_quot!(ctx, x443, x1, 66);
    let x445: BytePoly_32 = bigint_nondet_rem!(ctx, x443, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x444, x1, 98), x445, 98), x443, 98),
        536459,
        4,
    )?;
    let x446: BytePoly_32 = bigint_add!(bigint_sub!(x1, bigint_add!(x445, x439, 32), 32), x1, 32);
    let x447: BytePoly_32 = bigint_nondet_quot!(ctx, x446, x1, 32);
    let x448: BytePoly_32 = bigint_nondet_rem!(ctx, x446, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x447, x1, 64), x448, 64), x446, 64),
        260103,
        4,
    )?;
    let x449: BytePoly_32 = bigint_add!(bigint_sub!(x5, x442, 32), x1, 32);
    let x450: BytePoly_32 = bigint_nondet_inv!(ctx, x449, x1, 32);
    let x451: BytePoly_64 = bigint_mul!(x449, x450, 64);
    let x452: BytePoly_66 = bigint_nondet_quot!(ctx, x451, x1, 66);
    let x453: BytePoly_32 = bigint_nondet_rem!(ctx, x451, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x452, x1, 98), x453, 98), x451, 98),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x453, x0, 32), 34, 1)?;
    let x454: BytePoly_64 = bigint_mul!(bigint_add!(bigint_sub!(x6, x448, 32), x1, 32), x450, 64);
    let x455: BytePoly_66 = bigint_nondet_quot!(ctx, x454, x1, 66);
    let x456: BytePoly_32 = bigint_nondet_rem!(ctx, x454, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x455, x1, 98), x456, 98), x454, 98),
        536459,
        4,
    )?;
    let x457: BytePoly_64 = bigint_add!(bigint_sub!(x448, bigint_mul!(x456, x442, 64), 64), x1, 64);
    let x458: BytePoly_64 = bigint_nondet_quot!(ctx, x457, x1, 64);
    let x459: BytePoly_32 = bigint_nondet_rem!(ctx, x457, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x458, x1, 96), x459, 96), x457, 96),
        520203,
        4,
    )?;
    let x460: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x456, x456, 64), x442, 64), x1, 64),
            x5,
            64
        ),
        x1,
        64
    );
    let x461: BytePoly_66 = bigint_nondet_quot!(ctx, x460, x1, 66);
    let x462: BytePoly_32 = bigint_nondet_rem!(ctx, x460, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x461, x1, 98), x462, 98), x460, 98),
        536459,
        4,
    )?;
    let x463: BytePoly_64 = bigint_mul!(x456, x462, 64);
    let x464: BytePoly_66 = bigint_nondet_quot!(ctx, x463, x1, 66);
    let x465: BytePoly_32 = bigint_nondet_rem!(ctx, x463, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x464, x1, 98), x465, 98), x463, 98),
        536459,
        4,
    )?;
    let x466: BytePoly_32 = bigint_add!(bigint_sub!(x1, bigint_add!(x465, x459, 32), 32), x1, 32);
    let x467: BytePoly_32 = bigint_nondet_quot!(ctx, x466, x1, 32);
    let x468: BytePoly_32 = bigint_nondet_rem!(ctx, x466, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x467, x1, 64), x468, 64), x466, 64),
        260103,
        4,
    )?;
    let x469: BytePoly_32 = bigint_add!(bigint_sub!(x5, x462, 32), x1, 32);
    let x470: BytePoly_32 = bigint_nondet_inv!(ctx, x469, x1, 32);
    let x471: BytePoly_64 = bigint_mul!(x469, x470, 64);
    let x472: BytePoly_66 = bigint_nondet_quot!(ctx, x471, x1, 66);
    let x473: BytePoly_32 = bigint_nondet_rem!(ctx, x471, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x472, x1, 98), x473, 98), x471, 98),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x473, x0, 32), 34, 1)?;
    let x474: BytePoly_64 = bigint_mul!(bigint_add!(bigint_sub!(x6, x468, 32), x1, 32), x470, 64);
    let x475: BytePoly_66 = bigint_nondet_quot!(ctx, x474, x1, 66);
    let x476: BytePoly_32 = bigint_nondet_rem!(ctx, x474, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x475, x1, 98), x476, 98), x474, 98),
        536459,
        4,
    )?;
    let x477: BytePoly_64 = bigint_add!(bigint_sub!(x468, bigint_mul!(x476, x462, 64), 64), x1, 64);
    let x478: BytePoly_64 = bigint_nondet_quot!(ctx, x477, x1, 64);
    let x479: BytePoly_32 = bigint_nondet_rem!(ctx, x477, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x478, x1, 96), x479, 96), x477, 96),
        520203,
        4,
    )?;
    let x480: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x476, x476, 64), x462, 64), x1, 64),
            x5,
            64
        ),
        x1,
        64
    );
    let x481: BytePoly_66 = bigint_nondet_quot!(ctx, x480, x1, 66);
    let x482: BytePoly_32 = bigint_nondet_rem!(ctx, x480, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x481, x1, 98), x482, 98), x480, 98),
        536459,
        4,
    )?;
    let x483: BytePoly_64 = bigint_mul!(x476, x482, 64);
    let x484: BytePoly_66 = bigint_nondet_quot!(ctx, x483, x1, 66);
    let x485: BytePoly_32 = bigint_nondet_rem!(ctx, x483, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x484, x1, 98), x485, 98), x483, 98),
        536459,
        4,
    )?;
    let x486: BytePoly_32 = bigint_add!(bigint_sub!(x1, bigint_add!(x485, x479, 32), 32), x1, 32);
    let x487: BytePoly_32 = bigint_nondet_quot!(ctx, x486, x1, 32);
    let x488: BytePoly_32 = bigint_nondet_rem!(ctx, x486, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x487, x1, 64), x488, 64), x486, 64),
        260103,
        4,
    )?;
    let x489: BytePoly_32 = bigint_add!(bigint_sub!(x5, x482, 32), x1, 32);
    let x490: BytePoly_32 = bigint_nondet_inv!(ctx, x489, x1, 32);
    let x491: BytePoly_64 = bigint_mul!(x489, x490, 64);
    let x492: BytePoly_66 = bigint_nondet_quot!(ctx, x491, x1, 66);
    let x493: BytePoly_32 = bigint_nondet_rem!(ctx, x491, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x492, x1, 98), x493, 98), x491, 98),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x493, x0, 32), 34, 1)?;
    let x494: BytePoly_64 = bigint_mul!(bigint_add!(bigint_sub!(x6, x488, 32), x1, 32), x490, 64);
    let x495: BytePoly_66 = bigint_nondet_quot!(ctx, x494, x1, 66);
    let x496: BytePoly_32 = bigint_nondet_rem!(ctx, x494, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x495, x1, 98), x496, 98), x494, 98),
        536459,
        4,
    )?;
    let x497: BytePoly_64 = bigint_add!(bigint_sub!(x488, bigint_mul!(x496, x482, 64), 64), x1, 64);
    let x498: BytePoly_64 = bigint_nondet_quot!(ctx, x497, x1, 64);
    let x499: BytePoly_32 = bigint_nondet_rem!(ctx, x497, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x498, x1, 96), x499, 96), x497, 96),
        520203,
        4,
    )?;
    let x500: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x496, x496, 64), x482, 64), x1, 64),
            x5,
            64
        ),
        x1,
        64
    );
    let x501: BytePoly_66 = bigint_nondet_quot!(ctx, x500, x1, 66);
    let x502: BytePoly_32 = bigint_nondet_rem!(ctx, x500, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x501, x1, 98), x502, 98), x500, 98),
        536459,
        4,
    )?;
    let x503: BytePoly_64 = bigint_mul!(x496, x502, 64);
    let x504: BytePoly_66 = bigint_nondet_quot!(ctx, x503, x1, 66);
    let x505: BytePoly_32 = bigint_nondet_rem!(ctx, x503, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x504, x1, 98), x505, 98), x503, 98),
        536459,
        4,
    )?;
    let x506: BytePoly_32 = bigint_add!(bigint_sub!(x1, bigint_add!(x505, x499, 32), 32), x1, 32);
    let x507: BytePoly_32 = bigint_nondet_quot!(ctx, x506, x1, 32);
    let x508: BytePoly_32 = bigint_nondet_rem!(ctx, x506, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x507, x1, 64), x508, 64), x506, 64),
        260103,
        4,
    )?;
    let x509: BytePoly_32 = bigint_add!(bigint_sub!(x5, x502, 32), x1, 32);
    let x510: BytePoly_32 = bigint_nondet_inv!(ctx, x509, x1, 32);
    let x511: BytePoly_64 = bigint_mul!(x509, x510, 64);
    let x512: BytePoly_66 = bigint_nondet_quot!(ctx, x511, x1, 66);
    let x513: BytePoly_32 = bigint_nondet_rem!(ctx, x511, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x512, x1, 98), x513, 98), x511, 98),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x513, x0, 32), 34, 1)?;
    let x514: BytePoly_64 = bigint_mul!(bigint_add!(bigint_sub!(x6, x508, 32), x1, 32), x510, 64);
    let x515: BytePoly_66 = bigint_nondet_quot!(ctx, x514, x1, 66);
    let x516: BytePoly_32 = bigint_nondet_rem!(ctx, x514, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x515, x1, 98), x516, 98), x514, 98),
        536459,
        4,
    )?;
    let x517: BytePoly_64 = bigint_add!(bigint_sub!(x508, bigint_mul!(x516, x502, 64), 64), x1, 64);
    let x518: BytePoly_64 = bigint_nondet_quot!(ctx, x517, x1, 64);
    let x519: BytePoly_32 = bigint_nondet_rem!(ctx, x517, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x518, x1, 96), x519, 96), x517, 96),
        520203,
        4,
    )?;
    let x520: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x516, x516, 64), x502, 64), x1, 64),
            x5,
            64
        ),
        x1,
        64
    );
    let x521: BytePoly_66 = bigint_nondet_quot!(ctx, x520, x1, 66);
    let x522: BytePoly_32 = bigint_nondet_rem!(ctx, x520, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x521, x1, 98), x522, 98), x520, 98),
        536459,
        4,
    )?;
    let x523: BytePoly_64 = bigint_mul!(x516, x522, 64);
    let x524: BytePoly_66 = bigint_nondet_quot!(ctx, x523, x1, 66);
    let x525: BytePoly_32 = bigint_nondet_rem!(ctx, x523, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x524, x1, 98), x525, 98), x523, 98),
        536459,
        4,
    )?;
    let x526: BytePoly_32 = bigint_add!(bigint_sub!(x1, bigint_add!(x525, x519, 32), 32), x1, 32);
    let x527: BytePoly_32 = bigint_nondet_quot!(ctx, x526, x1, 32);
    let x528: BytePoly_32 = bigint_nondet_rem!(ctx, x526, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x527, x1, 64), x528, 64), x526, 64),
        260103,
        4,
    )?;
    let x529: BytePoly_32 = bigint_add!(bigint_sub!(x5, x522, 32), x1, 32);
    let x530: BytePoly_32 = bigint_nondet_inv!(ctx, x529, x1, 32);
    let x531: BytePoly_64 = bigint_mul!(x529, x530, 64);
    let x532: BytePoly_66 = bigint_nondet_quot!(ctx, x531, x1, 66);
    let x533: BytePoly_32 = bigint_nondet_rem!(ctx, x531, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x532, x1, 98), x533, 98), x531, 98),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x533, x0, 32), 34, 1)?;
    let x534: BytePoly_64 = bigint_mul!(bigint_add!(bigint_sub!(x6, x528, 32), x1, 32), x530, 64);
    let x535: BytePoly_66 = bigint_nondet_quot!(ctx, x534, x1, 66);
    let x536: BytePoly_32 = bigint_nondet_rem!(ctx, x534, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x535, x1, 98), x536, 98), x534, 98),
        536459,
        4,
    )?;
    let x537: BytePoly_64 = bigint_add!(bigint_sub!(x528, bigint_mul!(x536, x522, 64), 64), x1, 64);
    let x538: BytePoly_64 = bigint_nondet_quot!(ctx, x537, x1, 64);
    let x539: BytePoly_32 = bigint_nondet_rem!(ctx, x537, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x538, x1, 96), x539, 96), x537, 96),
        520203,
        4,
    )?;
    let x540: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x536, x536, 64), x522, 64), x1, 64),
            x5,
            64
        ),
        x1,
        64
    );
    let x541: BytePoly_66 = bigint_nondet_quot!(ctx, x540, x1, 66);
    let x542: BytePoly_32 = bigint_nondet_rem!(ctx, x540, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x541, x1, 98), x542, 98), x540, 98),
        536459,
        4,
    )?;
    let x543: BytePoly_64 = bigint_mul!(x536, x542, 64);
    let x544: BytePoly_66 = bigint_nondet_quot!(ctx, x543, x1, 66);
    let x545: BytePoly_32 = bigint_nondet_rem!(ctx, x543, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x544, x1, 98), x545, 98), x543, 98),
        536459,
        4,
    )?;
    let x546: BytePoly_32 = bigint_add!(bigint_sub!(x1, bigint_add!(x545, x539, 32), 32), x1, 32);
    let x547: BytePoly_32 = bigint_nondet_quot!(ctx, x546, x1, 32);
    let x548: BytePoly_32 = bigint_nondet_rem!(ctx, x546, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x547, x1, 64), x548, 64), x546, 64),
        260103,
        4,
    )?;
    let x549: BytePoly_32 = bigint_add!(bigint_sub!(x5, x542, 32), x1, 32);
    let x550: BytePoly_32 = bigint_nondet_inv!(ctx, x549, x1, 32);
    let x551: BytePoly_64 = bigint_mul!(x549, x550, 64);
    let x552: BytePoly_66 = bigint_nondet_quot!(ctx, x551, x1, 66);
    let x553: BytePoly_32 = bigint_nondet_rem!(ctx, x551, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x552, x1, 98), x553, 98), x551, 98),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x553, x0, 32), 34, 1)?;
    let x554: BytePoly_64 = bigint_mul!(bigint_add!(bigint_sub!(x6, x548, 32), x1, 32), x550, 64);
    let x555: BytePoly_66 = bigint_nondet_quot!(ctx, x554, x1, 66);
    let x556: BytePoly_32 = bigint_nondet_rem!(ctx, x554, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x555, x1, 98), x556, 98), x554, 98),
        536459,
        4,
    )?;
    let x557: BytePoly_64 = bigint_add!(bigint_sub!(x548, bigint_mul!(x556, x542, 64), 64), x1, 64);
    let x558: BytePoly_64 = bigint_nondet_quot!(ctx, x557, x1, 64);
    let x559: BytePoly_32 = bigint_nondet_rem!(ctx, x557, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x558, x1, 96), x559, 96), x557, 96),
        520203,
        4,
    )?;
    let x560: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x556, x556, 64), x542, 64), x1, 64),
            x5,
            64
        ),
        x1,
        64
    );
    let x561: BytePoly_66 = bigint_nondet_quot!(ctx, x560, x1, 66);
    let x562: BytePoly_32 = bigint_nondet_rem!(ctx, x560, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x561, x1, 98), x562, 98), x560, 98),
        536459,
        4,
    )?;
    let x563: BytePoly_64 = bigint_mul!(x556, x562, 64);
    let x564: BytePoly_66 = bigint_nondet_quot!(ctx, x563, x1, 66);
    let x565: BytePoly_32 = bigint_nondet_rem!(ctx, x563, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x564, x1, 98), x565, 98), x563, 98),
        536459,
        4,
    )?;
    let x566: BytePoly_32 = bigint_add!(bigint_sub!(x1, bigint_add!(x565, x559, 32), 32), x1, 32);
    let x567: BytePoly_32 = bigint_nondet_quot!(ctx, x566, x1, 32);
    let x568: BytePoly_32 = bigint_nondet_rem!(ctx, x566, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x567, x1, 64), x568, 64), x566, 64),
        260103,
        4,
    )?;
    let x569: BytePoly_32 = bigint_add!(bigint_sub!(x5, x562, 32), x1, 32);
    let x570: BytePoly_32 = bigint_nondet_inv!(ctx, x569, x1, 32);
    let x571: BytePoly_64 = bigint_mul!(x569, x570, 64);
    let x572: BytePoly_66 = bigint_nondet_quot!(ctx, x571, x1, 66);
    let x573: BytePoly_32 = bigint_nondet_rem!(ctx, x571, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x572, x1, 98), x573, 98), x571, 98),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x573, x0, 32), 34, 1)?;
    let x574: BytePoly_64 = bigint_mul!(bigint_add!(bigint_sub!(x6, x568, 32), x1, 32), x570, 64);
    let x575: BytePoly_66 = bigint_nondet_quot!(ctx, x574, x1, 66);
    let x576: BytePoly_32 = bigint_nondet_rem!(ctx, x574, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x575, x1, 98), x576, 98), x574, 98),
        536459,
        4,
    )?;
    let x577: BytePoly_64 = bigint_add!(bigint_sub!(x568, bigint_mul!(x576, x562, 64), 64), x1, 64);
    let x578: BytePoly_64 = bigint_nondet_quot!(ctx, x577, x1, 64);
    let x579: BytePoly_32 = bigint_nondet_rem!(ctx, x577, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x578, x1, 96), x579, 96), x577, 96),
        520203,
        4,
    )?;
    let x580: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x576, x576, 64), x562, 64), x1, 64),
            x5,
            64
        ),
        x1,
        64
    );
    let x581: BytePoly_66 = bigint_nondet_quot!(ctx, x580, x1, 66);
    let x582: BytePoly_32 = bigint_nondet_rem!(ctx, x580, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x581, x1, 98), x582, 98), x580, 98),
        536459,
        4,
    )?;
    let x583: BytePoly_64 = bigint_mul!(x576, x582, 64);
    let x584: BytePoly_66 = bigint_nondet_quot!(ctx, x583, x1, 66);
    let x585: BytePoly_32 = bigint_nondet_rem!(ctx, x583, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x584, x1, 98), x585, 98), x583, 98),
        536459,
        4,
    )?;
    let x586: BytePoly_32 = bigint_add!(bigint_sub!(x1, bigint_add!(x585, x579, 32), 32), x1, 32);
    let x587: BytePoly_32 = bigint_nondet_quot!(ctx, x586, x1, 32);
    let x588: BytePoly_32 = bigint_nondet_rem!(ctx, x586, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x587, x1, 64), x588, 64), x586, 64),
        260103,
        4,
    )?;
    let x589: BytePoly_32 = bigint_add!(bigint_sub!(x5, x582, 32), x1, 32);
    let x590: BytePoly_32 = bigint_nondet_inv!(ctx, x589, x1, 32);
    let x591: BytePoly_64 = bigint_mul!(x589, x590, 64);
    let x592: BytePoly_66 = bigint_nondet_quot!(ctx, x591, x1, 66);
    let x593: BytePoly_32 = bigint_nondet_rem!(ctx, x591, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x592, x1, 98), x593, 98), x591, 98),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x593, x0, 32), 34, 1)?;
    let x594: BytePoly_64 = bigint_mul!(bigint_add!(bigint_sub!(x6, x588, 32), x1, 32), x590, 64);
    let x595: BytePoly_66 = bigint_nondet_quot!(ctx, x594, x1, 66);
    let x596: BytePoly_32 = bigint_nondet_rem!(ctx, x594, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x595, x1, 98), x596, 98), x594, 98),
        536459,
        4,
    )?;
    let x597: BytePoly_64 = bigint_add!(bigint_sub!(x588, bigint_mul!(x596, x582, 64), 64), x1, 64);
    let x598: BytePoly_64 = bigint_nondet_quot!(ctx, x597, x1, 64);
    let x599: BytePoly_32 = bigint_nondet_rem!(ctx, x597, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x598, x1, 96), x599, 96), x597, 96),
        520203,
        4,
    )?;
    let x600: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x596, x596, 64), x582, 64), x1, 64),
            x5,
            64
        ),
        x1,
        64
    );
    let x601: BytePoly_66 = bigint_nondet_quot!(ctx, x600, x1, 66);
    let x602: BytePoly_32 = bigint_nondet_rem!(ctx, x600, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x601, x1, 98), x602, 98), x600, 98),
        536459,
        4,
    )?;
    let x603: BytePoly_64 = bigint_mul!(x596, x602, 64);
    let x604: BytePoly_66 = bigint_nondet_quot!(ctx, x603, x1, 66);
    let x605: BytePoly_32 = bigint_nondet_rem!(ctx, x603, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x604, x1, 98), x605, 98), x603, 98),
        536459,
        4,
    )?;
    let x606: BytePoly_32 = bigint_add!(bigint_sub!(x1, bigint_add!(x605, x599, 32), 32), x1, 32);
    let x607: BytePoly_32 = bigint_nondet_quot!(ctx, x606, x1, 32);
    let x608: BytePoly_32 = bigint_nondet_rem!(ctx, x606, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x607, x1, 64), x608, 64), x606, 64),
        260103,
        4,
    )?;
    let x609: BytePoly_32 = bigint_add!(bigint_sub!(x5, x602, 32), x1, 32);
    let x610: BytePoly_32 = bigint_nondet_inv!(ctx, x609, x1, 32);
    let x611: BytePoly_64 = bigint_mul!(x609, x610, 64);
    let x612: BytePoly_66 = bigint_nondet_quot!(ctx, x611, x1, 66);
    let x613: BytePoly_32 = bigint_nondet_rem!(ctx, x611, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x612, x1, 98), x613, 98), x611, 98),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x613, x0, 32), 34, 1)?;
    let x614: BytePoly_64 = bigint_mul!(bigint_add!(bigint_sub!(x6, x608, 32), x1, 32), x610, 64);
    let x615: BytePoly_66 = bigint_nondet_quot!(ctx, x614, x1, 66);
    let x616: BytePoly_32 = bigint_nondet_rem!(ctx, x614, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x615, x1, 98), x616, 98), x614, 98),
        536459,
        4,
    )?;
    let x617: BytePoly_64 = bigint_add!(bigint_sub!(x608, bigint_mul!(x616, x602, 64), 64), x1, 64);
    let x618: BytePoly_64 = bigint_nondet_quot!(ctx, x617, x1, 64);
    let x619: BytePoly_32 = bigint_nondet_rem!(ctx, x617, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x618, x1, 96), x619, 96), x617, 96),
        520203,
        4,
    )?;
    let x620: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x616, x616, 64), x602, 64), x1, 64),
            x5,
            64
        ),
        x1,
        64
    );
    let x621: BytePoly_66 = bigint_nondet_quot!(ctx, x620, x1, 66);
    let x622: BytePoly_32 = bigint_nondet_rem!(ctx, x620, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x621, x1, 98), x622, 98), x620, 98),
        536459,
        4,
    )?;
    let x623: BytePoly_64 = bigint_mul!(x616, x622, 64);
    let x624: BytePoly_66 = bigint_nondet_quot!(ctx, x623, x1, 66);
    let x625: BytePoly_32 = bigint_nondet_rem!(ctx, x623, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x624, x1, 98), x625, 98), x623, 98),
        536459,
        4,
    )?;
    let x626: BytePoly_32 = bigint_add!(bigint_sub!(x1, bigint_add!(x625, x619, 32), 32), x1, 32);
    let x627: BytePoly_32 = bigint_nondet_quot!(ctx, x626, x1, 32);
    let x628: BytePoly_32 = bigint_nondet_rem!(ctx, x626, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x627, x1, 64), x628, 64), x626, 64),
        260103,
        4,
    )?;
    let x629: BytePoly_32 = bigint_add!(bigint_sub!(x5, x622, 32), x1, 32);
    let x630: BytePoly_32 = bigint_nondet_inv!(ctx, x629, x1, 32);
    let x631: BytePoly_64 = bigint_mul!(x629, x630, 64);
    let x632: BytePoly_66 = bigint_nondet_quot!(ctx, x631, x1, 66);
    let x633: BytePoly_32 = bigint_nondet_rem!(ctx, x631, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x632, x1, 98), x633, 98), x631, 98),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x633, x0, 32), 34, 1)?;
    let x634: BytePoly_64 = bigint_mul!(bigint_add!(bigint_sub!(x6, x628, 32), x1, 32), x630, 64);
    let x635: BytePoly_66 = bigint_nondet_quot!(ctx, x634, x1, 66);
    let x636: BytePoly_32 = bigint_nondet_rem!(ctx, x634, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x635, x1, 98), x636, 98), x634, 98),
        536459,
        4,
    )?;
    let x637: BytePoly_64 = bigint_add!(bigint_sub!(x628, bigint_mul!(x636, x622, 64), 64), x1, 64);
    let x638: BytePoly_64 = bigint_nondet_quot!(ctx, x637, x1, 64);
    let x639: BytePoly_32 = bigint_nondet_rem!(ctx, x637, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x638, x1, 96), x639, 96), x637, 96),
        520203,
        4,
    )?;
    let x640: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x636, x636, 64), x622, 64), x1, 64),
            x5,
            64
        ),
        x1,
        64
    );
    let x641: BytePoly_66 = bigint_nondet_quot!(ctx, x640, x1, 66);
    let x642: BytePoly_32 = bigint_nondet_rem!(ctx, x640, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x641, x1, 98), x642, 98), x640, 98),
        536459,
        4,
    )?;
    let x643: BytePoly_64 = bigint_mul!(x636, x642, 64);
    let x644: BytePoly_66 = bigint_nondet_quot!(ctx, x643, x1, 66);
    let x645: BytePoly_32 = bigint_nondet_rem!(ctx, x643, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x644, x1, 98), x645, 98), x643, 98),
        536459,
        4,
    )?;
    let x646: BytePoly_32 = bigint_add!(bigint_sub!(x1, bigint_add!(x645, x639, 32), 32), x1, 32);
    let x647: BytePoly_32 = bigint_nondet_quot!(ctx, x646, x1, 32);
    let x648: BytePoly_32 = bigint_nondet_rem!(ctx, x646, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x647, x1, 64), x648, 64), x646, 64),
        260103,
        4,
    )?;
    let x649: BytePoly_32 = bigint_add!(bigint_sub!(x5, x642, 32), x1, 32);
    let x650: BytePoly_32 = bigint_nondet_inv!(ctx, x649, x1, 32);
    let x651: BytePoly_64 = bigint_mul!(x649, x650, 64);
    let x652: BytePoly_66 = bigint_nondet_quot!(ctx, x651, x1, 66);
    let x653: BytePoly_32 = bigint_nondet_rem!(ctx, x651, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x652, x1, 98), x653, 98), x651, 98),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x653, x0, 32), 34, 1)?;
    let x654: BytePoly_64 = bigint_mul!(bigint_add!(bigint_sub!(x6, x648, 32), x1, 32), x650, 64);
    let x655: BytePoly_66 = bigint_nondet_quot!(ctx, x654, x1, 66);
    let x656: BytePoly_32 = bigint_nondet_rem!(ctx, x654, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x655, x1, 98), x656, 98), x654, 98),
        536459,
        4,
    )?;
    let x657: BytePoly_64 = bigint_add!(bigint_sub!(x648, bigint_mul!(x656, x642, 64), 64), x1, 64);
    let x658: BytePoly_64 = bigint_nondet_quot!(ctx, x657, x1, 64);
    let x659: BytePoly_32 = bigint_nondet_rem!(ctx, x657, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x658, x1, 96), x659, 96), x657, 96),
        520203,
        4,
    )?;
    let x660: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x656, x656, 64), x642, 64), x1, 64),
            x5,
            64
        ),
        x1,
        64
    );
    let x661: BytePoly_66 = bigint_nondet_quot!(ctx, x660, x1, 66);
    let x662: BytePoly_32 = bigint_nondet_rem!(ctx, x660, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x661, x1, 98), x662, 98), x660, 98),
        536459,
        4,
    )?;
    let x663: BytePoly_64 = bigint_mul!(x656, x662, 64);
    let x664: BytePoly_66 = bigint_nondet_quot!(ctx, x663, x1, 66);
    let x665: BytePoly_32 = bigint_nondet_rem!(ctx, x663, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x664, x1, 98), x665, 98), x663, 98),
        536459,
        4,
    )?;
    let x666: BytePoly_32 = bigint_add!(bigint_sub!(x1, bigint_add!(x665, x659, 32), 32), x1, 32);
    let x667: BytePoly_32 = bigint_nondet_quot!(ctx, x666, x1, 32);
    let x668: BytePoly_32 = bigint_nondet_rem!(ctx, x666, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x667, x1, 64), x668, 64), x666, 64),
        260103,
        4,
    )?;
    let x669: BytePoly_32 = bigint_add!(bigint_sub!(x5, x662, 32), x1, 32);
    let x670: BytePoly_32 = bigint_nondet_inv!(ctx, x669, x1, 32);
    let x671: BytePoly_64 = bigint_mul!(x669, x670, 64);
    let x672: BytePoly_66 = bigint_nondet_quot!(ctx, x671, x1, 66);
    let x673: BytePoly_32 = bigint_nondet_rem!(ctx, x671, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x672, x1, 98), x673, 98), x671, 98),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x673, x0, 32), 34, 1)?;
    let x674: BytePoly_64 = bigint_mul!(bigint_add!(bigint_sub!(x6, x668, 32), x1, 32), x670, 64);
    let x675: BytePoly_66 = bigint_nondet_quot!(ctx, x674, x1, 66);
    let x676: BytePoly_32 = bigint_nondet_rem!(ctx, x674, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x675, x1, 98), x676, 98), x674, 98),
        536459,
        4,
    )?;
    let x677: BytePoly_64 = bigint_add!(bigint_sub!(x668, bigint_mul!(x676, x662, 64), 64), x1, 64);
    let x678: BytePoly_64 = bigint_nondet_quot!(ctx, x677, x1, 64);
    let x679: BytePoly_32 = bigint_nondet_rem!(ctx, x677, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x678, x1, 96), x679, 96), x677, 96),
        520203,
        4,
    )?;
    let x680: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x676, x676, 64), x662, 64), x1, 64),
            x5,
            64
        ),
        x1,
        64
    );
    let x681: BytePoly_66 = bigint_nondet_quot!(ctx, x680, x1, 66);
    let x682: BytePoly_32 = bigint_nondet_rem!(ctx, x680, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x681, x1, 98), x682, 98), x680, 98),
        536459,
        4,
    )?;
    let x683: BytePoly_64 = bigint_mul!(x676, x682, 64);
    let x684: BytePoly_66 = bigint_nondet_quot!(ctx, x683, x1, 66);
    let x685: BytePoly_32 = bigint_nondet_rem!(ctx, x683, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x684, x1, 98), x685, 98), x683, 98),
        536459,
        4,
    )?;
    let x686: BytePoly_32 = bigint_add!(bigint_sub!(x1, bigint_add!(x685, x679, 32), 32), x1, 32);
    let x687: BytePoly_32 = bigint_nondet_quot!(ctx, x686, x1, 32);
    let x688: BytePoly_32 = bigint_nondet_rem!(ctx, x686, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x687, x1, 64), x688, 64), x686, 64),
        260103,
        4,
    )?;
    let x689: BytePoly_32 = bigint_add!(bigint_sub!(x5, x682, 32), x1, 32);
    let x690: BytePoly_32 = bigint_nondet_inv!(ctx, x689, x1, 32);
    let x691: BytePoly_64 = bigint_mul!(x689, x690, 64);
    let x692: BytePoly_66 = bigint_nondet_quot!(ctx, x691, x1, 66);
    let x693: BytePoly_32 = bigint_nondet_rem!(ctx, x691, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x692, x1, 98), x693, 98), x691, 98),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x693, x0, 32), 34, 1)?;
    let x694: BytePoly_64 = bigint_mul!(bigint_add!(bigint_sub!(x6, x688, 32), x1, 32), x690, 64);
    let x695: BytePoly_66 = bigint_nondet_quot!(ctx, x694, x1, 66);
    let x696: BytePoly_32 = bigint_nondet_rem!(ctx, x694, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x695, x1, 98), x696, 98), x694, 98),
        536459,
        4,
    )?;
    let x697: BytePoly_64 = bigint_add!(bigint_sub!(x688, bigint_mul!(x696, x682, 64), 64), x1, 64);
    let x698: BytePoly_64 = bigint_nondet_quot!(ctx, x697, x1, 64);
    let x699: BytePoly_32 = bigint_nondet_rem!(ctx, x697, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x698, x1, 96), x699, 96), x697, 96),
        520203,
        4,
    )?;
    let x700: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x696, x696, 64), x682, 64), x1, 64),
            x5,
            64
        ),
        x1,
        64
    );
    let x701: BytePoly_66 = bigint_nondet_quot!(ctx, x700, x1, 66);
    let x702: BytePoly_32 = bigint_nondet_rem!(ctx, x700, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x701, x1, 98), x702, 98), x700, 98),
        536459,
        4,
    )?;
    let x703: BytePoly_64 = bigint_mul!(x696, x702, 64);
    let x704: BytePoly_66 = bigint_nondet_quot!(ctx, x703, x1, 66);
    let x705: BytePoly_32 = bigint_nondet_rem!(ctx, x703, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x704, x1, 98), x705, 98), x703, 98),
        536459,
        4,
    )?;
    let x706: BytePoly_32 = bigint_add!(bigint_sub!(x1, bigint_add!(x705, x699, 32), 32), x1, 32);
    let x707: BytePoly_32 = bigint_nondet_quot!(ctx, x706, x1, 32);
    let x708: BytePoly_32 = bigint_nondet_rem!(ctx, x706, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x707, x1, 64), x708, 64), x706, 64),
        260103,
        4,
    )?;
    let x709: BytePoly_32 = bigint_add!(bigint_sub!(x5, x702, 32), x1, 32);
    let x710: BytePoly_32 = bigint_nondet_inv!(ctx, x709, x1, 32);
    let x711: BytePoly_64 = bigint_mul!(x709, x710, 64);
    let x712: BytePoly_66 = bigint_nondet_quot!(ctx, x711, x1, 66);
    let x713: BytePoly_32 = bigint_nondet_rem!(ctx, x711, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x712, x1, 98), x713, 98), x711, 98),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x713, x0, 32), 34, 1)?;
    let x714: BytePoly_64 = bigint_mul!(bigint_add!(bigint_sub!(x6, x708, 32), x1, 32), x710, 64);
    let x715: BytePoly_66 = bigint_nondet_quot!(ctx, x714, x1, 66);
    let x716: BytePoly_32 = bigint_nondet_rem!(ctx, x714, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x715, x1, 98), x716, 98), x714, 98),
        536459,
        4,
    )?;
    let x717: BytePoly_64 = bigint_add!(bigint_sub!(x708, bigint_mul!(x716, x702, 64), 64), x1, 64);
    let x718: BytePoly_64 = bigint_nondet_quot!(ctx, x717, x1, 64);
    let x719: BytePoly_32 = bigint_nondet_rem!(ctx, x717, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x718, x1, 96), x719, 96), x717, 96),
        520203,
        4,
    )?;
    let x720: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x716, x716, 64), x702, 64), x1, 64),
            x5,
            64
        ),
        x1,
        64
    );
    let x721: BytePoly_66 = bigint_nondet_quot!(ctx, x720, x1, 66);
    let x722: BytePoly_32 = bigint_nondet_rem!(ctx, x720, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x721, x1, 98), x722, 98), x720, 98),
        536459,
        4,
    )?;
    let x723: BytePoly_64 = bigint_mul!(x716, x722, 64);
    let x724: BytePoly_66 = bigint_nondet_quot!(ctx, x723, x1, 66);
    let x725: BytePoly_32 = bigint_nondet_rem!(ctx, x723, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x724, x1, 98), x725, 98), x723, 98),
        536459,
        4,
    )?;
    let x726: BytePoly_32 = bigint_add!(bigint_sub!(x1, bigint_add!(x725, x719, 32), 32), x1, 32);
    let x727: BytePoly_32 = bigint_nondet_quot!(ctx, x726, x1, 32);
    let x728: BytePoly_32 = bigint_nondet_rem!(ctx, x726, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x727, x1, 64), x728, 64), x726, 64),
        260103,
        4,
    )?;
    let x729: BytePoly_32 = bigint_add!(bigint_sub!(x5, x722, 32), x1, 32);
    let x730: BytePoly_32 = bigint_nondet_inv!(ctx, x729, x1, 32);
    let x731: BytePoly_64 = bigint_mul!(x729, x730, 64);
    let x732: BytePoly_66 = bigint_nondet_quot!(ctx, x731, x1, 66);
    let x733: BytePoly_32 = bigint_nondet_rem!(ctx, x731, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x732, x1, 98), x733, 98), x731, 98),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x733, x0, 32), 34, 1)?;
    let x734: BytePoly_64 = bigint_mul!(bigint_add!(bigint_sub!(x6, x728, 32), x1, 32), x730, 64);
    let x735: BytePoly_66 = bigint_nondet_quot!(ctx, x734, x1, 66);
    let x736: BytePoly_32 = bigint_nondet_rem!(ctx, x734, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x735, x1, 98), x736, 98), x734, 98),
        536459,
        4,
    )?;
    let x737: BytePoly_64 = bigint_add!(bigint_sub!(x728, bigint_mul!(x736, x722, 64), 64), x1, 64);
    let x738: BytePoly_64 = bigint_nondet_quot!(ctx, x737, x1, 64);
    let x739: BytePoly_32 = bigint_nondet_rem!(ctx, x737, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x738, x1, 96), x739, 96), x737, 96),
        520203,
        4,
    )?;
    let x740: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x736, x736, 64), x722, 64), x1, 64),
            x5,
            64
        ),
        x1,
        64
    );
    let x741: BytePoly_66 = bigint_nondet_quot!(ctx, x740, x1, 66);
    let x742: BytePoly_32 = bigint_nondet_rem!(ctx, x740, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x741, x1, 98), x742, 98), x740, 98),
        536459,
        4,
    )?;
    let x743: BytePoly_64 = bigint_mul!(x736, x742, 64);
    let x744: BytePoly_66 = bigint_nondet_quot!(ctx, x743, x1, 66);
    let x745: BytePoly_32 = bigint_nondet_rem!(ctx, x743, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x744, x1, 98), x745, 98), x743, 98),
        536459,
        4,
    )?;
    let x746: BytePoly_32 = bigint_add!(bigint_sub!(x1, bigint_add!(x745, x739, 32), 32), x1, 32);
    let x747: BytePoly_32 = bigint_nondet_quot!(ctx, x746, x1, 32);
    let x748: BytePoly_32 = bigint_nondet_rem!(ctx, x746, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x747, x1, 64), x748, 64), x746, 64),
        260103,
        4,
    )?;
    let x749: BytePoly_32 = bigint_add!(bigint_sub!(x5, x742, 32), x1, 32);
    let x750: BytePoly_32 = bigint_nondet_inv!(ctx, x749, x1, 32);
    let x751: BytePoly_64 = bigint_mul!(x749, x750, 64);
    let x752: BytePoly_66 = bigint_nondet_quot!(ctx, x751, x1, 66);
    let x753: BytePoly_32 = bigint_nondet_rem!(ctx, x751, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x752, x1, 98), x753, 98), x751, 98),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x753, x0, 32), 34, 1)?;
    let x754: BytePoly_64 = bigint_mul!(bigint_add!(bigint_sub!(x6, x748, 32), x1, 32), x750, 64);
    let x755: BytePoly_66 = bigint_nondet_quot!(ctx, x754, x1, 66);
    let x756: BytePoly_32 = bigint_nondet_rem!(ctx, x754, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x755, x1, 98), x756, 98), x754, 98),
        536459,
        4,
    )?;
    let x757: BytePoly_64 = bigint_add!(bigint_sub!(x748, bigint_mul!(x756, x742, 64), 64), x1, 64);
    let x758: BytePoly_64 = bigint_nondet_quot!(ctx, x757, x1, 64);
    let x759: BytePoly_32 = bigint_nondet_rem!(ctx, x757, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x758, x1, 96), x759, 96), x757, 96),
        520203,
        4,
    )?;
    let x760: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x756, x756, 64), x742, 64), x1, 64),
            x5,
            64
        ),
        x1,
        64
    );
    let x761: BytePoly_66 = bigint_nondet_quot!(ctx, x760, x1, 66);
    let x762: BytePoly_32 = bigint_nondet_rem!(ctx, x760, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x761, x1, 98), x762, 98), x760, 98),
        536459,
        4,
    )?;
    let x763: BytePoly_64 = bigint_mul!(x756, x762, 64);
    let x764: BytePoly_66 = bigint_nondet_quot!(ctx, x763, x1, 66);
    let x765: BytePoly_32 = bigint_nondet_rem!(ctx, x763, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x764, x1, 98), x765, 98), x763, 98),
        536459,
        4,
    )?;
    let x766: BytePoly_32 = bigint_add!(bigint_sub!(x1, bigint_add!(x765, x759, 32), 32), x1, 32);
    let x767: BytePoly_32 = bigint_nondet_quot!(ctx, x766, x1, 32);
    let x768: BytePoly_32 = bigint_nondet_rem!(ctx, x766, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x767, x1, 64), x768, 64), x766, 64),
        260103,
        4,
    )?;
    let x769: BytePoly_32 = bigint_add!(bigint_sub!(x5, x762, 32), x1, 32);
    let x770: BytePoly_32 = bigint_nondet_inv!(ctx, x769, x1, 32);
    let x771: BytePoly_64 = bigint_mul!(x769, x770, 64);
    let x772: BytePoly_66 = bigint_nondet_quot!(ctx, x771, x1, 66);
    let x773: BytePoly_32 = bigint_nondet_rem!(ctx, x771, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x772, x1, 98), x773, 98), x771, 98),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x773, x0, 32), 34, 1)?;
    let x774: BytePoly_64 = bigint_mul!(bigint_add!(bigint_sub!(x6, x768, 32), x1, 32), x770, 64);
    let x775: BytePoly_66 = bigint_nondet_quot!(ctx, x774, x1, 66);
    let x776: BytePoly_32 = bigint_nondet_rem!(ctx, x774, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x775, x1, 98), x776, 98), x774, 98),
        536459,
        4,
    )?;
    let x777: BytePoly_64 = bigint_add!(bigint_sub!(x768, bigint_mul!(x776, x762, 64), 64), x1, 64);
    let x778: BytePoly_64 = bigint_nondet_quot!(ctx, x777, x1, 64);
    let x779: BytePoly_32 = bigint_nondet_rem!(ctx, x777, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x778, x1, 96), x779, 96), x777, 96),
        520203,
        4,
    )?;
    let x780: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x776, x776, 64), x762, 64), x1, 64),
            x5,
            64
        ),
        x1,
        64
    );
    let x781: BytePoly_66 = bigint_nondet_quot!(ctx, x780, x1, 66);
    let x782: BytePoly_32 = bigint_nondet_rem!(ctx, x780, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x781, x1, 98), x782, 98), x780, 98),
        536459,
        4,
    )?;
    let x783: BytePoly_64 = bigint_mul!(x776, x782, 64);
    let x784: BytePoly_66 = bigint_nondet_quot!(ctx, x783, x1, 66);
    let x785: BytePoly_32 = bigint_nondet_rem!(ctx, x783, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x784, x1, 98), x785, 98), x783, 98),
        536459,
        4,
    )?;
    let x786: BytePoly_32 = bigint_add!(bigint_sub!(x1, bigint_add!(x785, x779, 32), 32), x1, 32);
    let x787: BytePoly_32 = bigint_nondet_quot!(ctx, x786, x1, 32);
    let x788: BytePoly_32 = bigint_nondet_rem!(ctx, x786, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x787, x1, 64), x788, 64), x786, 64),
        260103,
        4,
    )?;
    let x789: BytePoly_32 = bigint_add!(bigint_sub!(x5, x782, 32), x1, 32);
    let x790: BytePoly_32 = bigint_nondet_inv!(ctx, x789, x1, 32);
    let x791: BytePoly_64 = bigint_mul!(x789, x790, 64);
    let x792: BytePoly_66 = bigint_nondet_quot!(ctx, x791, x1, 66);
    let x793: BytePoly_32 = bigint_nondet_rem!(ctx, x791, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x792, x1, 98), x793, 98), x791, 98),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x793, x0, 32), 34, 1)?;
    let x794: BytePoly_64 = bigint_mul!(bigint_add!(bigint_sub!(x6, x788, 32), x1, 32), x790, 64);
    let x795: BytePoly_66 = bigint_nondet_quot!(ctx, x794, x1, 66);
    let x796: BytePoly_32 = bigint_nondet_rem!(ctx, x794, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x795, x1, 98), x796, 98), x794, 98),
        536459,
        4,
    )?;
    let x797: BytePoly_64 = bigint_add!(bigint_sub!(x788, bigint_mul!(x796, x782, 64), 64), x1, 64);
    let x798: BytePoly_64 = bigint_nondet_quot!(ctx, x797, x1, 64);
    let x799: BytePoly_32 = bigint_nondet_rem!(ctx, x797, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x798, x1, 96), x799, 96), x797, 96),
        520203,
        4,
    )?;
    let x800: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x796, x796, 64), x782, 64), x1, 64),
            x5,
            64
        ),
        x1,
        64
    );
    let x801: BytePoly_66 = bigint_nondet_quot!(ctx, x800, x1, 66);
    let x802: BytePoly_32 = bigint_nondet_rem!(ctx, x800, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x801, x1, 98), x802, 98), x800, 98),
        536459,
        4,
    )?;
    let x803: BytePoly_64 = bigint_mul!(x796, x802, 64);
    let x804: BytePoly_66 = bigint_nondet_quot!(ctx, x803, x1, 66);
    let x805: BytePoly_32 = bigint_nondet_rem!(ctx, x803, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x804, x1, 98), x805, 98), x803, 98),
        536459,
        4,
    )?;
    let x806: BytePoly_32 = bigint_add!(bigint_sub!(x1, bigint_add!(x805, x799, 32), 32), x1, 32);
    let x807: BytePoly_32 = bigint_nondet_quot!(ctx, x806, x1, 32);
    let x808: BytePoly_32 = bigint_nondet_rem!(ctx, x806, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x807, x1, 64), x808, 64), x806, 64),
        260103,
        4,
    )?;
    let x809: BytePoly_32 = bigint_add!(bigint_sub!(x5, x802, 32), x1, 32);
    let x810: BytePoly_32 = bigint_nondet_inv!(ctx, x809, x1, 32);
    let x811: BytePoly_64 = bigint_mul!(x809, x810, 64);
    let x812: BytePoly_66 = bigint_nondet_quot!(ctx, x811, x1, 66);
    let x813: BytePoly_32 = bigint_nondet_rem!(ctx, x811, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x812, x1, 98), x813, 98), x811, 98),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x813, x0, 32), 34, 1)?;
    let x814: BytePoly_64 = bigint_mul!(bigint_add!(bigint_sub!(x6, x808, 32), x1, 32), x810, 64);
    let x815: BytePoly_66 = bigint_nondet_quot!(ctx, x814, x1, 66);
    let x816: BytePoly_32 = bigint_nondet_rem!(ctx, x814, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x815, x1, 98), x816, 98), x814, 98),
        536459,
        4,
    )?;
    let x817: BytePoly_64 = bigint_add!(bigint_sub!(x808, bigint_mul!(x816, x802, 64), 64), x1, 64);
    let x818: BytePoly_64 = bigint_nondet_quot!(ctx, x817, x1, 64);
    let x819: BytePoly_32 = bigint_nondet_rem!(ctx, x817, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x818, x1, 96), x819, 96), x817, 96),
        520203,
        4,
    )?;
    let x820: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x816, x816, 64), x802, 64), x1, 64),
            x5,
            64
        ),
        x1,
        64
    );
    let x821: BytePoly_66 = bigint_nondet_quot!(ctx, x820, x1, 66);
    let x822: BytePoly_32 = bigint_nondet_rem!(ctx, x820, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x821, x1, 98), x822, 98), x820, 98),
        536459,
        4,
    )?;
    let x823: BytePoly_64 = bigint_mul!(x816, x822, 64);
    let x824: BytePoly_66 = bigint_nondet_quot!(ctx, x823, x1, 66);
    let x825: BytePoly_32 = bigint_nondet_rem!(ctx, x823, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x824, x1, 98), x825, 98), x823, 98),
        536459,
        4,
    )?;
    let x826: BytePoly_32 = bigint_add!(bigint_sub!(x1, bigint_add!(x825, x819, 32), 32), x1, 32);
    let x827: BytePoly_32 = bigint_nondet_quot!(ctx, x826, x1, 32);
    let x828: BytePoly_32 = bigint_nondet_rem!(ctx, x826, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x827, x1, 64), x828, 64), x826, 64),
        260103,
        4,
    )?;
    let x829: BytePoly_32 = bigint_add!(bigint_sub!(x5, x822, 32), x1, 32);
    let x830: BytePoly_32 = bigint_nondet_inv!(ctx, x829, x1, 32);
    let x831: BytePoly_64 = bigint_mul!(x829, x830, 64);
    let x832: BytePoly_66 = bigint_nondet_quot!(ctx, x831, x1, 66);
    let x833: BytePoly_32 = bigint_nondet_rem!(ctx, x831, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x832, x1, 98), x833, 98), x831, 98),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x833, x0, 32), 34, 1)?;
    let x834: BytePoly_64 = bigint_mul!(bigint_add!(bigint_sub!(x6, x828, 32), x1, 32), x830, 64);
    let x835: BytePoly_66 = bigint_nondet_quot!(ctx, x834, x1, 66);
    let x836: BytePoly_32 = bigint_nondet_rem!(ctx, x834, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x835, x1, 98), x836, 98), x834, 98),
        536459,
        4,
    )?;
    let x837: BytePoly_64 = bigint_add!(bigint_sub!(x828, bigint_mul!(x836, x822, 64), 64), x1, 64);
    let x838: BytePoly_64 = bigint_nondet_quot!(ctx, x837, x1, 64);
    let x839: BytePoly_32 = bigint_nondet_rem!(ctx, x837, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x838, x1, 96), x839, 96), x837, 96),
        520203,
        4,
    )?;
    let x840: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x836, x836, 64), x822, 64), x1, 64),
            x5,
            64
        ),
        x1,
        64
    );
    let x841: BytePoly_66 = bigint_nondet_quot!(ctx, x840, x1, 66);
    let x842: BytePoly_32 = bigint_nondet_rem!(ctx, x840, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x841, x1, 98), x842, 98), x840, 98),
        536459,
        4,
    )?;
    let x843: BytePoly_64 = bigint_mul!(x836, x842, 64);
    let x844: BytePoly_66 = bigint_nondet_quot!(ctx, x843, x1, 66);
    let x845: BytePoly_32 = bigint_nondet_rem!(ctx, x843, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x844, x1, 98), x845, 98), x843, 98),
        536459,
        4,
    )?;
    let x846: BytePoly_32 = bigint_add!(bigint_sub!(x1, bigint_add!(x845, x839, 32), 32), x1, 32);
    let x847: BytePoly_32 = bigint_nondet_quot!(ctx, x846, x1, 32);
    let x848: BytePoly_32 = bigint_nondet_rem!(ctx, x846, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x847, x1, 64), x848, 64), x846, 64),
        260103,
        4,
    )?;
    let x849: BytePoly_32 = bigint_add!(bigint_sub!(x5, x842, 32), x1, 32);
    let x850: BytePoly_32 = bigint_nondet_inv!(ctx, x849, x1, 32);
    let x851: BytePoly_64 = bigint_mul!(x849, x850, 64);
    let x852: BytePoly_66 = bigint_nondet_quot!(ctx, x851, x1, 66);
    let x853: BytePoly_32 = bigint_nondet_rem!(ctx, x851, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x852, x1, 98), x853, 98), x851, 98),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x853, x0, 32), 34, 1)?;
    let x854: BytePoly_64 = bigint_mul!(bigint_add!(bigint_sub!(x6, x848, 32), x1, 32), x850, 64);
    let x855: BytePoly_66 = bigint_nondet_quot!(ctx, x854, x1, 66);
    let x856: BytePoly_32 = bigint_nondet_rem!(ctx, x854, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x855, x1, 98), x856, 98), x854, 98),
        536459,
        4,
    )?;
    let x857: BytePoly_64 = bigint_add!(bigint_sub!(x848, bigint_mul!(x856, x842, 64), 64), x1, 64);
    let x858: BytePoly_64 = bigint_nondet_quot!(ctx, x857, x1, 64);
    let x859: BytePoly_32 = bigint_nondet_rem!(ctx, x857, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x858, x1, 96), x859, 96), x857, 96),
        520203,
        4,
    )?;
    let x860: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x856, x856, 64), x842, 64), x1, 64),
            x5,
            64
        ),
        x1,
        64
    );
    let x861: BytePoly_66 = bigint_nondet_quot!(ctx, x860, x1, 66);
    let x862: BytePoly_32 = bigint_nondet_rem!(ctx, x860, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x861, x1, 98), x862, 98), x860, 98),
        536459,
        4,
    )?;
    let x863: BytePoly_64 = bigint_mul!(x856, x862, 64);
    let x864: BytePoly_66 = bigint_nondet_quot!(ctx, x863, x1, 66);
    let x865: BytePoly_32 = bigint_nondet_rem!(ctx, x863, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x864, x1, 98), x865, 98), x863, 98),
        536459,
        4,
    )?;
    let x866: BytePoly_32 = bigint_add!(bigint_sub!(x1, bigint_add!(x865, x859, 32), 32), x1, 32);
    let x867: BytePoly_32 = bigint_nondet_quot!(ctx, x866, x1, 32);
    let x868: BytePoly_32 = bigint_nondet_rem!(ctx, x866, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x867, x1, 64), x868, 64), x866, 64),
        260103,
        4,
    )?;
    let x869: BytePoly_32 = bigint_add!(bigint_sub!(x5, x862, 32), x1, 32);
    let x870: BytePoly_32 = bigint_nondet_inv!(ctx, x869, x1, 32);
    let x871: BytePoly_64 = bigint_mul!(x869, x870, 64);
    let x872: BytePoly_66 = bigint_nondet_quot!(ctx, x871, x1, 66);
    let x873: BytePoly_32 = bigint_nondet_rem!(ctx, x871, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x872, x1, 98), x873, 98), x871, 98),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x873, x0, 32), 34, 1)?;
    let x874: BytePoly_64 = bigint_mul!(bigint_add!(bigint_sub!(x6, x868, 32), x1, 32), x870, 64);
    let x875: BytePoly_66 = bigint_nondet_quot!(ctx, x874, x1, 66);
    let x876: BytePoly_32 = bigint_nondet_rem!(ctx, x874, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x875, x1, 98), x876, 98), x874, 98),
        536459,
        4,
    )?;
    let x877: BytePoly_64 = bigint_add!(bigint_sub!(x868, bigint_mul!(x876, x862, 64), 64), x1, 64);
    let x878: BytePoly_64 = bigint_nondet_quot!(ctx, x877, x1, 64);
    let x879: BytePoly_32 = bigint_nondet_rem!(ctx, x877, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x878, x1, 96), x879, 96), x877, 96),
        520203,
        4,
    )?;
    let x880: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x876, x876, 64), x862, 64), x1, 64),
            x5,
            64
        ),
        x1,
        64
    );
    let x881: BytePoly_66 = bigint_nondet_quot!(ctx, x880, x1, 66);
    let x882: BytePoly_32 = bigint_nondet_rem!(ctx, x880, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x881, x1, 98), x882, 98), x880, 98),
        536459,
        4,
    )?;
    let x883: BytePoly_64 = bigint_mul!(x876, x882, 64);
    let x884: BytePoly_66 = bigint_nondet_quot!(ctx, x883, x1, 66);
    let x885: BytePoly_32 = bigint_nondet_rem!(ctx, x883, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x884, x1, 98), x885, 98), x883, 98),
        536459,
        4,
    )?;
    let x886: BytePoly_32 = bigint_add!(bigint_sub!(x1, bigint_add!(x885, x879, 32), 32), x1, 32);
    let x887: BytePoly_32 = bigint_nondet_quot!(ctx, x886, x1, 32);
    let x888: BytePoly_32 = bigint_nondet_rem!(ctx, x886, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x887, x1, 64), x888, 64), x886, 64),
        260103,
        4,
    )?;
    let x889: BytePoly_32 = bigint_add!(bigint_sub!(x5, x882, 32), x1, 32);
    let x890: BytePoly_32 = bigint_nondet_inv!(ctx, x889, x1, 32);
    let x891: BytePoly_64 = bigint_mul!(x889, x890, 64);
    let x892: BytePoly_66 = bigint_nondet_quot!(ctx, x891, x1, 66);
    let x893: BytePoly_32 = bigint_nondet_rem!(ctx, x891, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x892, x1, 98), x893, 98), x891, 98),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x893, x0, 32), 34, 1)?;
    let x894: BytePoly_64 = bigint_mul!(bigint_add!(bigint_sub!(x6, x888, 32), x1, 32), x890, 64);
    let x895: BytePoly_66 = bigint_nondet_quot!(ctx, x894, x1, 66);
    let x896: BytePoly_32 = bigint_nondet_rem!(ctx, x894, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x895, x1, 98), x896, 98), x894, 98),
        536459,
        4,
    )?;
    let x897: BytePoly_64 = bigint_add!(bigint_sub!(x888, bigint_mul!(x896, x882, 64), 64), x1, 64);
    let x898: BytePoly_64 = bigint_nondet_quot!(ctx, x897, x1, 64);
    let x899: BytePoly_32 = bigint_nondet_rem!(ctx, x897, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x898, x1, 96), x899, 96), x897, 96),
        520203,
        4,
    )?;
    let x900: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x896, x896, 64), x882, 64), x1, 64),
            x5,
            64
        ),
        x1,
        64
    );
    let x901: BytePoly_66 = bigint_nondet_quot!(ctx, x900, x1, 66);
    let x902: BytePoly_32 = bigint_nondet_rem!(ctx, x900, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x901, x1, 98), x902, 98), x900, 98),
        536459,
        4,
    )?;
    let x903: BytePoly_64 = bigint_mul!(x896, x902, 64);
    let x904: BytePoly_66 = bigint_nondet_quot!(ctx, x903, x1, 66);
    let x905: BytePoly_32 = bigint_nondet_rem!(ctx, x903, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x904, x1, 98), x905, 98), x903, 98),
        536459,
        4,
    )?;
    let x906: BytePoly_32 = bigint_add!(bigint_sub!(x1, bigint_add!(x905, x899, 32), 32), x1, 32);
    let x907: BytePoly_32 = bigint_nondet_quot!(ctx, x906, x1, 32);
    let x908: BytePoly_32 = bigint_nondet_rem!(ctx, x906, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x907, x1, 64), x908, 64), x906, 64),
        260103,
        4,
    )?;
    let x909: BytePoly_32 = bigint_add!(bigint_sub!(x5, x902, 32), x1, 32);
    let x910: BytePoly_32 = bigint_nondet_inv!(ctx, x909, x1, 32);
    let x911: BytePoly_64 = bigint_mul!(x909, x910, 64);
    let x912: BytePoly_66 = bigint_nondet_quot!(ctx, x911, x1, 66);
    let x913: BytePoly_32 = bigint_nondet_rem!(ctx, x911, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x912, x1, 98), x913, 98), x911, 98),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x913, x0, 32), 34, 1)?;
    let x914: BytePoly_64 = bigint_mul!(bigint_add!(bigint_sub!(x6, x908, 32), x1, 32), x910, 64);
    let x915: BytePoly_66 = bigint_nondet_quot!(ctx, x914, x1, 66);
    let x916: BytePoly_32 = bigint_nondet_rem!(ctx, x914, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x915, x1, 98), x916, 98), x914, 98),
        536459,
        4,
    )?;
    let x917: BytePoly_64 = bigint_add!(bigint_sub!(x908, bigint_mul!(x916, x902, 64), 64), x1, 64);
    let x918: BytePoly_64 = bigint_nondet_quot!(ctx, x917, x1, 64);
    let x919: BytePoly_32 = bigint_nondet_rem!(ctx, x917, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x918, x1, 96), x919, 96), x917, 96),
        520203,
        4,
    )?;
    let x920: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x916, x916, 64), x902, 64), x1, 64),
            x5,
            64
        ),
        x1,
        64
    );
    let x921: BytePoly_66 = bigint_nondet_quot!(ctx, x920, x1, 66);
    let x922: BytePoly_32 = bigint_nondet_rem!(ctx, x920, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x921, x1, 98), x922, 98), x920, 98),
        536459,
        4,
    )?;
    let x923: BytePoly_64 = bigint_mul!(x916, x922, 64);
    let x924: BytePoly_66 = bigint_nondet_quot!(ctx, x923, x1, 66);
    let x925: BytePoly_32 = bigint_nondet_rem!(ctx, x923, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x924, x1, 98), x925, 98), x923, 98),
        536459,
        4,
    )?;
    let x926: BytePoly_32 = bigint_add!(bigint_sub!(x1, bigint_add!(x925, x919, 32), 32), x1, 32);
    let x927: BytePoly_32 = bigint_nondet_quot!(ctx, x926, x1, 32);
    let x928: BytePoly_32 = bigint_nondet_rem!(ctx, x926, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x927, x1, 64), x928, 64), x926, 64),
        260103,
        4,
    )?;
    let x929: BytePoly_32 = bigint_add!(bigint_sub!(x5, x922, 32), x1, 32);
    let x930: BytePoly_32 = bigint_nondet_inv!(ctx, x929, x1, 32);
    let x931: BytePoly_64 = bigint_mul!(x929, x930, 64);
    let x932: BytePoly_66 = bigint_nondet_quot!(ctx, x931, x1, 66);
    let x933: BytePoly_32 = bigint_nondet_rem!(ctx, x931, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x932, x1, 98), x933, 98), x931, 98),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x933, x0, 32), 34, 1)?;
    let x934: BytePoly_64 = bigint_mul!(bigint_add!(bigint_sub!(x6, x928, 32), x1, 32), x930, 64);
    let x935: BytePoly_66 = bigint_nondet_quot!(ctx, x934, x1, 66);
    let x936: BytePoly_32 = bigint_nondet_rem!(ctx, x934, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x935, x1, 98), x936, 98), x934, 98),
        536459,
        4,
    )?;
    let x937: BytePoly_64 = bigint_add!(bigint_sub!(x928, bigint_mul!(x936, x922, 64), 64), x1, 64);
    let x938: BytePoly_64 = bigint_nondet_quot!(ctx, x937, x1, 64);
    let x939: BytePoly_32 = bigint_nondet_rem!(ctx, x937, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x938, x1, 96), x939, 96), x937, 96),
        520203,
        4,
    )?;
    let x940: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x936, x936, 64), x922, 64), x1, 64),
            x5,
            64
        ),
        x1,
        64
    );
    let x941: BytePoly_66 = bigint_nondet_quot!(ctx, x940, x1, 66);
    let x942: BytePoly_32 = bigint_nondet_rem!(ctx, x940, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x941, x1, 98), x942, 98), x940, 98),
        536459,
        4,
    )?;
    let x943: BytePoly_64 = bigint_mul!(x936, x942, 64);
    let x944: BytePoly_66 = bigint_nondet_quot!(ctx, x943, x1, 66);
    let x945: BytePoly_32 = bigint_nondet_rem!(ctx, x943, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x944, x1, 98), x945, 98), x943, 98),
        536459,
        4,
    )?;
    let x946: BytePoly_32 = bigint_add!(bigint_sub!(x1, bigint_add!(x945, x939, 32), 32), x1, 32);
    let x947: BytePoly_32 = bigint_nondet_quot!(ctx, x946, x1, 32);
    let x948: BytePoly_32 = bigint_nondet_rem!(ctx, x946, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x947, x1, 64), x948, 64), x946, 64),
        260103,
        4,
    )?;
    let x949: BytePoly_32 = bigint_add!(bigint_sub!(x5, x942, 32), x1, 32);
    let x950: BytePoly_32 = bigint_nondet_inv!(ctx, x949, x1, 32);
    let x951: BytePoly_64 = bigint_mul!(x949, x950, 64);
    let x952: BytePoly_66 = bigint_nondet_quot!(ctx, x951, x1, 66);
    let x953: BytePoly_32 = bigint_nondet_rem!(ctx, x951, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x952, x1, 98), x953, 98), x951, 98),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x953, x0, 32), 34, 1)?;
    let x954: BytePoly_64 = bigint_mul!(bigint_add!(bigint_sub!(x6, x948, 32), x1, 32), x950, 64);
    let x955: BytePoly_66 = bigint_nondet_quot!(ctx, x954, x1, 66);
    let x956: BytePoly_32 = bigint_nondet_rem!(ctx, x954, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x955, x1, 98), x956, 98), x954, 98),
        536459,
        4,
    )?;
    let x957: BytePoly_64 = bigint_add!(bigint_sub!(x948, bigint_mul!(x956, x942, 64), 64), x1, 64);
    let x958: BytePoly_64 = bigint_nondet_quot!(ctx, x957, x1, 64);
    let x959: BytePoly_32 = bigint_nondet_rem!(ctx, x957, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x958, x1, 96), x959, 96), x957, 96),
        520203,
        4,
    )?;
    let x960: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x956, x956, 64), x942, 64), x1, 64),
            x5,
            64
        ),
        x1,
        64
    );
    let x961: BytePoly_66 = bigint_nondet_quot!(ctx, x960, x1, 66);
    let x962: BytePoly_32 = bigint_nondet_rem!(ctx, x960, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x961, x1, 98), x962, 98), x960, 98),
        536459,
        4,
    )?;
    let x963: BytePoly_64 = bigint_mul!(x956, x962, 64);
    let x964: BytePoly_66 = bigint_nondet_quot!(ctx, x963, x1, 66);
    let x965: BytePoly_32 = bigint_nondet_rem!(ctx, x963, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x964, x1, 98), x965, 98), x963, 98),
        536459,
        4,
    )?;
    let x966: BytePoly_32 = bigint_add!(bigint_sub!(x1, bigint_add!(x965, x959, 32), 32), x1, 32);
    let x967: BytePoly_32 = bigint_nondet_quot!(ctx, x966, x1, 32);
    let x968: BytePoly_32 = bigint_nondet_rem!(ctx, x966, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x967, x1, 64), x968, 64), x966, 64),
        260103,
        4,
    )?;
    let x969: BytePoly_32 = bigint_add!(bigint_sub!(x5, x962, 32), x1, 32);
    let x970: BytePoly_32 = bigint_nondet_inv!(ctx, x969, x1, 32);
    let x971: BytePoly_64 = bigint_mul!(x969, x970, 64);
    let x972: BytePoly_66 = bigint_nondet_quot!(ctx, x971, x1, 66);
    let x973: BytePoly_32 = bigint_nondet_rem!(ctx, x971, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x972, x1, 98), x973, 98), x971, 98),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x973, x0, 32), 34, 1)?;
    let x974: BytePoly_64 = bigint_mul!(bigint_add!(bigint_sub!(x6, x968, 32), x1, 32), x970, 64);
    let x975: BytePoly_66 = bigint_nondet_quot!(ctx, x974, x1, 66);
    let x976: BytePoly_32 = bigint_nondet_rem!(ctx, x974, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x975, x1, 98), x976, 98), x974, 98),
        536459,
        4,
    )?;
    let x977: BytePoly_64 = bigint_add!(bigint_sub!(x968, bigint_mul!(x976, x962, 64), 64), x1, 64);
    let x978: BytePoly_64 = bigint_nondet_quot!(ctx, x977, x1, 64);
    let x979: BytePoly_32 = bigint_nondet_rem!(ctx, x977, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x978, x1, 96), x979, 96), x977, 96),
        520203,
        4,
    )?;
    let x980: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x976, x976, 64), x962, 64), x1, 64),
            x5,
            64
        ),
        x1,
        64
    );
    let x981: BytePoly_66 = bigint_nondet_quot!(ctx, x980, x1, 66);
    let x982: BytePoly_32 = bigint_nondet_rem!(ctx, x980, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x981, x1, 98), x982, 98), x980, 98),
        536459,
        4,
    )?;
    let x983: BytePoly_64 = bigint_mul!(x976, x982, 64);
    let x984: BytePoly_66 = bigint_nondet_quot!(ctx, x983, x1, 66);
    let x985: BytePoly_32 = bigint_nondet_rem!(ctx, x983, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x984, x1, 98), x985, 98), x983, 98),
        536459,
        4,
    )?;
    let x986: BytePoly_32 = bigint_add!(bigint_sub!(x1, bigint_add!(x985, x979, 32), 32), x1, 32);
    let x987: BytePoly_32 = bigint_nondet_quot!(ctx, x986, x1, 32);
    let x988: BytePoly_32 = bigint_nondet_rem!(ctx, x986, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x987, x1, 64), x988, 64), x986, 64),
        260103,
        4,
    )?;
    let x989: BytePoly_32 = bigint_add!(bigint_sub!(x5, x982, 32), x1, 32);
    let x990: BytePoly_32 = bigint_nondet_inv!(ctx, x989, x1, 32);
    let x991: BytePoly_64 = bigint_mul!(x989, x990, 64);
    let x992: BytePoly_66 = bigint_nondet_quot!(ctx, x991, x1, 66);
    let x993: BytePoly_32 = bigint_nondet_rem!(ctx, x991, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x992, x1, 98), x993, 98), x991, 98),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x993, x0, 32), 34, 1)?;
    let x994: BytePoly_64 = bigint_mul!(bigint_add!(bigint_sub!(x6, x988, 32), x1, 32), x990, 64);
    let x995: BytePoly_66 = bigint_nondet_quot!(ctx, x994, x1, 66);
    let x996: BytePoly_32 = bigint_nondet_rem!(ctx, x994, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x995, x1, 98), x996, 98), x994, 98),
        536459,
        4,
    )?;
    let x997: BytePoly_64 = bigint_add!(bigint_sub!(x988, bigint_mul!(x996, x982, 64), 64), x1, 64);
    let x998: BytePoly_64 = bigint_nondet_quot!(ctx, x997, x1, 64);
    let x999: BytePoly_32 = bigint_nondet_rem!(ctx, x997, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(bigint_add!(bigint_mul!(x998, x1, 96), x999, 96), x997, 96),
        520203,
        4,
    )?;
    let x1000: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(bigint_sub!(bigint_mul!(x996, x996, 64), x982, 64), x1, 64),
            x5,
            64
        ),
        x1,
        64
    );
    let x1001: BytePoly_66 = bigint_nondet_quot!(ctx, x1000, x1, 66);
    let x1002: BytePoly_32 = bigint_nondet_rem!(ctx, x1000, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1001, x1, 98), x1002, 98),
            x1000,
            98
        ),
        536459,
        4,
    )?;
    let x1003: BytePoly_64 = bigint_mul!(x996, x1002, 64);
    let x1004: BytePoly_66 = bigint_nondet_quot!(ctx, x1003, x1, 66);
    let x1005: BytePoly_32 = bigint_nondet_rem!(ctx, x1003, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1004, x1, 98), x1005, 98),
            x1003,
            98
        ),
        536459,
        4,
    )?;
    let x1006: BytePoly_32 = bigint_add!(bigint_sub!(x1, bigint_add!(x1005, x999, 32), 32), x1, 32);
    let x1007: BytePoly_32 = bigint_nondet_quot!(ctx, x1006, x1, 32);
    let x1008: BytePoly_32 = bigint_nondet_rem!(ctx, x1006, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1007, x1, 64), x1008, 64),
            x1006,
            64
        ),
        260103,
        4,
    )?;
    let x1009: BytePoly_32 = bigint_add!(bigint_sub!(x5, x1002, 32), x1, 32);
    let x1010: BytePoly_32 = bigint_nondet_inv!(ctx, x1009, x1, 32);
    let x1011: BytePoly_64 = bigint_mul!(x1009, x1010, 64);
    let x1012: BytePoly_66 = bigint_nondet_quot!(ctx, x1011, x1, 66);
    let x1013: BytePoly_32 = bigint_nondet_rem!(ctx, x1011, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1012, x1, 98), x1013, 98),
            x1011,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1013, x0, 32), 34, 1)?;
    let x1014: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x1008, 32), x1, 32), x1010, 64);
    let x1015: BytePoly_66 = bigint_nondet_quot!(ctx, x1014, x1, 66);
    let x1016: BytePoly_32 = bigint_nondet_rem!(ctx, x1014, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1015, x1, 98), x1016, 98),
            x1014,
            98
        ),
        536459,
        4,
    )?;
    let x1017: BytePoly_64 = bigint_add!(
        bigint_sub!(x1008, bigint_mul!(x1016, x1002, 64), 64),
        x1,
        64
    );
    let x1018: BytePoly_64 = bigint_nondet_quot!(ctx, x1017, x1, 64);
    let x1019: BytePoly_32 = bigint_nondet_rem!(ctx, x1017, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1018, x1, 96), x1019, 96),
            x1017,
            96
        ),
        520203,
        4,
    )?;
    let x1020: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x1016, x1016, 64), x1002, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x1021: BytePoly_66 = bigint_nondet_quot!(ctx, x1020, x1, 66);
    let x1022: BytePoly_32 = bigint_nondet_rem!(ctx, x1020, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1021, x1, 98), x1022, 98),
            x1020,
            98
        ),
        536459,
        4,
    )?;
    let x1023: BytePoly_64 = bigint_mul!(x1016, x1022, 64);
    let x1024: BytePoly_66 = bigint_nondet_quot!(ctx, x1023, x1, 66);
    let x1025: BytePoly_32 = bigint_nondet_rem!(ctx, x1023, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1024, x1, 98), x1025, 98),
            x1023,
            98
        ),
        536459,
        4,
    )?;
    let x1026: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x1025, x1019, 32), 32), x1, 32);
    let x1027: BytePoly_32 = bigint_nondet_quot!(ctx, x1026, x1, 32);
    let x1028: BytePoly_32 = bigint_nondet_rem!(ctx, x1026, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1027, x1, 64), x1028, 64),
            x1026,
            64
        ),
        260103,
        4,
    )?;
    let x1029: BytePoly_32 = bigint_add!(bigint_sub!(x5, x1022, 32), x1, 32);
    let x1030: BytePoly_32 = bigint_nondet_inv!(ctx, x1029, x1, 32);
    let x1031: BytePoly_64 = bigint_mul!(x1029, x1030, 64);
    let x1032: BytePoly_66 = bigint_nondet_quot!(ctx, x1031, x1, 66);
    let x1033: BytePoly_32 = bigint_nondet_rem!(ctx, x1031, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1032, x1, 98), x1033, 98),
            x1031,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1033, x0, 32), 34, 1)?;
    let x1034: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x1028, 32), x1, 32), x1030, 64);
    let x1035: BytePoly_66 = bigint_nondet_quot!(ctx, x1034, x1, 66);
    let x1036: BytePoly_32 = bigint_nondet_rem!(ctx, x1034, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1035, x1, 98), x1036, 98),
            x1034,
            98
        ),
        536459,
        4,
    )?;
    let x1037: BytePoly_64 = bigint_add!(
        bigint_sub!(x1028, bigint_mul!(x1036, x1022, 64), 64),
        x1,
        64
    );
    let x1038: BytePoly_64 = bigint_nondet_quot!(ctx, x1037, x1, 64);
    let x1039: BytePoly_32 = bigint_nondet_rem!(ctx, x1037, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1038, x1, 96), x1039, 96),
            x1037,
            96
        ),
        520203,
        4,
    )?;
    let x1040: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x1036, x1036, 64), x1022, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x1041: BytePoly_66 = bigint_nondet_quot!(ctx, x1040, x1, 66);
    let x1042: BytePoly_32 = bigint_nondet_rem!(ctx, x1040, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1041, x1, 98), x1042, 98),
            x1040,
            98
        ),
        536459,
        4,
    )?;
    let x1043: BytePoly_64 = bigint_mul!(x1036, x1042, 64);
    let x1044: BytePoly_66 = bigint_nondet_quot!(ctx, x1043, x1, 66);
    let x1045: BytePoly_32 = bigint_nondet_rem!(ctx, x1043, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1044, x1, 98), x1045, 98),
            x1043,
            98
        ),
        536459,
        4,
    )?;
    let x1046: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x1045, x1039, 32), 32), x1, 32);
    let x1047: BytePoly_32 = bigint_nondet_quot!(ctx, x1046, x1, 32);
    let x1048: BytePoly_32 = bigint_nondet_rem!(ctx, x1046, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1047, x1, 64), x1048, 64),
            x1046,
            64
        ),
        260103,
        4,
    )?;
    let x1049: BytePoly_32 = bigint_add!(bigint_sub!(x5, x1042, 32), x1, 32);
    let x1050: BytePoly_32 = bigint_nondet_inv!(ctx, x1049, x1, 32);
    let x1051: BytePoly_64 = bigint_mul!(x1049, x1050, 64);
    let x1052: BytePoly_66 = bigint_nondet_quot!(ctx, x1051, x1, 66);
    let x1053: BytePoly_32 = bigint_nondet_rem!(ctx, x1051, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1052, x1, 98), x1053, 98),
            x1051,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1053, x0, 32), 34, 1)?;
    let x1054: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x1048, 32), x1, 32), x1050, 64);
    let x1055: BytePoly_66 = bigint_nondet_quot!(ctx, x1054, x1, 66);
    let x1056: BytePoly_32 = bigint_nondet_rem!(ctx, x1054, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1055, x1, 98), x1056, 98),
            x1054,
            98
        ),
        536459,
        4,
    )?;
    let x1057: BytePoly_64 = bigint_add!(
        bigint_sub!(x1048, bigint_mul!(x1056, x1042, 64), 64),
        x1,
        64
    );
    let x1058: BytePoly_64 = bigint_nondet_quot!(ctx, x1057, x1, 64);
    let x1059: BytePoly_32 = bigint_nondet_rem!(ctx, x1057, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1058, x1, 96), x1059, 96),
            x1057,
            96
        ),
        520203,
        4,
    )?;
    let x1060: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x1056, x1056, 64), x1042, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x1061: BytePoly_66 = bigint_nondet_quot!(ctx, x1060, x1, 66);
    let x1062: BytePoly_32 = bigint_nondet_rem!(ctx, x1060, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1061, x1, 98), x1062, 98),
            x1060,
            98
        ),
        536459,
        4,
    )?;
    let x1063: BytePoly_64 = bigint_mul!(x1056, x1062, 64);
    let x1064: BytePoly_66 = bigint_nondet_quot!(ctx, x1063, x1, 66);
    let x1065: BytePoly_32 = bigint_nondet_rem!(ctx, x1063, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1064, x1, 98), x1065, 98),
            x1063,
            98
        ),
        536459,
        4,
    )?;
    let x1066: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x1065, x1059, 32), 32), x1, 32);
    let x1067: BytePoly_32 = bigint_nondet_quot!(ctx, x1066, x1, 32);
    let x1068: BytePoly_32 = bigint_nondet_rem!(ctx, x1066, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1067, x1, 64), x1068, 64),
            x1066,
            64
        ),
        260103,
        4,
    )?;
    let x1069: BytePoly_32 = bigint_add!(bigint_sub!(x5, x1062, 32), x1, 32);
    let x1070: BytePoly_32 = bigint_nondet_inv!(ctx, x1069, x1, 32);
    let x1071: BytePoly_64 = bigint_mul!(x1069, x1070, 64);
    let x1072: BytePoly_66 = bigint_nondet_quot!(ctx, x1071, x1, 66);
    let x1073: BytePoly_32 = bigint_nondet_rem!(ctx, x1071, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1072, x1, 98), x1073, 98),
            x1071,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1073, x0, 32), 34, 1)?;
    let x1074: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x1068, 32), x1, 32), x1070, 64);
    let x1075: BytePoly_66 = bigint_nondet_quot!(ctx, x1074, x1, 66);
    let x1076: BytePoly_32 = bigint_nondet_rem!(ctx, x1074, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1075, x1, 98), x1076, 98),
            x1074,
            98
        ),
        536459,
        4,
    )?;
    let x1077: BytePoly_64 = bigint_add!(
        bigint_sub!(x1068, bigint_mul!(x1076, x1062, 64), 64),
        x1,
        64
    );
    let x1078: BytePoly_64 = bigint_nondet_quot!(ctx, x1077, x1, 64);
    let x1079: BytePoly_32 = bigint_nondet_rem!(ctx, x1077, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1078, x1, 96), x1079, 96),
            x1077,
            96
        ),
        520203,
        4,
    )?;
    let x1080: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x1076, x1076, 64), x1062, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x1081: BytePoly_66 = bigint_nondet_quot!(ctx, x1080, x1, 66);
    let x1082: BytePoly_32 = bigint_nondet_rem!(ctx, x1080, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1081, x1, 98), x1082, 98),
            x1080,
            98
        ),
        536459,
        4,
    )?;
    let x1083: BytePoly_64 = bigint_mul!(x1076, x1082, 64);
    let x1084: BytePoly_66 = bigint_nondet_quot!(ctx, x1083, x1, 66);
    let x1085: BytePoly_32 = bigint_nondet_rem!(ctx, x1083, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1084, x1, 98), x1085, 98),
            x1083,
            98
        ),
        536459,
        4,
    )?;
    let x1086: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x1085, x1079, 32), 32), x1, 32);
    let x1087: BytePoly_32 = bigint_nondet_quot!(ctx, x1086, x1, 32);
    let x1088: BytePoly_32 = bigint_nondet_rem!(ctx, x1086, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1087, x1, 64), x1088, 64),
            x1086,
            64
        ),
        260103,
        4,
    )?;
    let x1089: BytePoly_32 = bigint_add!(bigint_sub!(x5, x1082, 32), x1, 32);
    let x1090: BytePoly_32 = bigint_nondet_inv!(ctx, x1089, x1, 32);
    let x1091: BytePoly_64 = bigint_mul!(x1089, x1090, 64);
    let x1092: BytePoly_66 = bigint_nondet_quot!(ctx, x1091, x1, 66);
    let x1093: BytePoly_32 = bigint_nondet_rem!(ctx, x1091, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1092, x1, 98), x1093, 98),
            x1091,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1093, x0, 32), 34, 1)?;
    let x1094: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x1088, 32), x1, 32), x1090, 64);
    let x1095: BytePoly_66 = bigint_nondet_quot!(ctx, x1094, x1, 66);
    let x1096: BytePoly_32 = bigint_nondet_rem!(ctx, x1094, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1095, x1, 98), x1096, 98),
            x1094,
            98
        ),
        536459,
        4,
    )?;
    let x1097: BytePoly_64 = bigint_add!(
        bigint_sub!(x1088, bigint_mul!(x1096, x1082, 64), 64),
        x1,
        64
    );
    let x1098: BytePoly_64 = bigint_nondet_quot!(ctx, x1097, x1, 64);
    let x1099: BytePoly_32 = bigint_nondet_rem!(ctx, x1097, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1098, x1, 96), x1099, 96),
            x1097,
            96
        ),
        520203,
        4,
    )?;
    let x1100: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x1096, x1096, 64), x1082, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x1101: BytePoly_66 = bigint_nondet_quot!(ctx, x1100, x1, 66);
    let x1102: BytePoly_32 = bigint_nondet_rem!(ctx, x1100, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1101, x1, 98), x1102, 98),
            x1100,
            98
        ),
        536459,
        4,
    )?;
    let x1103: BytePoly_64 = bigint_mul!(x1096, x1102, 64);
    let x1104: BytePoly_66 = bigint_nondet_quot!(ctx, x1103, x1, 66);
    let x1105: BytePoly_32 = bigint_nondet_rem!(ctx, x1103, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1104, x1, 98), x1105, 98),
            x1103,
            98
        ),
        536459,
        4,
    )?;
    let x1106: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x1105, x1099, 32), 32), x1, 32);
    let x1107: BytePoly_32 = bigint_nondet_quot!(ctx, x1106, x1, 32);
    let x1108: BytePoly_32 = bigint_nondet_rem!(ctx, x1106, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1107, x1, 64), x1108, 64),
            x1106,
            64
        ),
        260103,
        4,
    )?;
    let x1109: BytePoly_32 = bigint_add!(bigint_sub!(x5, x1102, 32), x1, 32);
    let x1110: BytePoly_32 = bigint_nondet_inv!(ctx, x1109, x1, 32);
    let x1111: BytePoly_64 = bigint_mul!(x1109, x1110, 64);
    let x1112: BytePoly_66 = bigint_nondet_quot!(ctx, x1111, x1, 66);
    let x1113: BytePoly_32 = bigint_nondet_rem!(ctx, x1111, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1112, x1, 98), x1113, 98),
            x1111,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1113, x0, 32), 34, 1)?;
    let x1114: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x1108, 32), x1, 32), x1110, 64);
    let x1115: BytePoly_66 = bigint_nondet_quot!(ctx, x1114, x1, 66);
    let x1116: BytePoly_32 = bigint_nondet_rem!(ctx, x1114, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1115, x1, 98), x1116, 98),
            x1114,
            98
        ),
        536459,
        4,
    )?;
    let x1117: BytePoly_64 = bigint_add!(
        bigint_sub!(x1108, bigint_mul!(x1116, x1102, 64), 64),
        x1,
        64
    );
    let x1118: BytePoly_64 = bigint_nondet_quot!(ctx, x1117, x1, 64);
    let x1119: BytePoly_32 = bigint_nondet_rem!(ctx, x1117, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1118, x1, 96), x1119, 96),
            x1117,
            96
        ),
        520203,
        4,
    )?;
    let x1120: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x1116, x1116, 64), x1102, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x1121: BytePoly_66 = bigint_nondet_quot!(ctx, x1120, x1, 66);
    let x1122: BytePoly_32 = bigint_nondet_rem!(ctx, x1120, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1121, x1, 98), x1122, 98),
            x1120,
            98
        ),
        536459,
        4,
    )?;
    let x1123: BytePoly_64 = bigint_mul!(x1116, x1122, 64);
    let x1124: BytePoly_66 = bigint_nondet_quot!(ctx, x1123, x1, 66);
    let x1125: BytePoly_32 = bigint_nondet_rem!(ctx, x1123, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1124, x1, 98), x1125, 98),
            x1123,
            98
        ),
        536459,
        4,
    )?;
    let x1126: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x1125, x1119, 32), 32), x1, 32);
    let x1127: BytePoly_32 = bigint_nondet_quot!(ctx, x1126, x1, 32);
    let x1128: BytePoly_32 = bigint_nondet_rem!(ctx, x1126, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1127, x1, 64), x1128, 64),
            x1126,
            64
        ),
        260103,
        4,
    )?;
    let x1129: BytePoly_32 = bigint_add!(bigint_sub!(x5, x1122, 32), x1, 32);
    let x1130: BytePoly_32 = bigint_nondet_inv!(ctx, x1129, x1, 32);
    let x1131: BytePoly_64 = bigint_mul!(x1129, x1130, 64);
    let x1132: BytePoly_66 = bigint_nondet_quot!(ctx, x1131, x1, 66);
    let x1133: BytePoly_32 = bigint_nondet_rem!(ctx, x1131, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1132, x1, 98), x1133, 98),
            x1131,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1133, x0, 32), 34, 1)?;
    let x1134: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x1128, 32), x1, 32), x1130, 64);
    let x1135: BytePoly_66 = bigint_nondet_quot!(ctx, x1134, x1, 66);
    let x1136: BytePoly_32 = bigint_nondet_rem!(ctx, x1134, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1135, x1, 98), x1136, 98),
            x1134,
            98
        ),
        536459,
        4,
    )?;
    let x1137: BytePoly_64 = bigint_add!(
        bigint_sub!(x1128, bigint_mul!(x1136, x1122, 64), 64),
        x1,
        64
    );
    let x1138: BytePoly_64 = bigint_nondet_quot!(ctx, x1137, x1, 64);
    let x1139: BytePoly_32 = bigint_nondet_rem!(ctx, x1137, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1138, x1, 96), x1139, 96),
            x1137,
            96
        ),
        520203,
        4,
    )?;
    let x1140: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x1136, x1136, 64), x1122, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x1141: BytePoly_66 = bigint_nondet_quot!(ctx, x1140, x1, 66);
    let x1142: BytePoly_32 = bigint_nondet_rem!(ctx, x1140, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1141, x1, 98), x1142, 98),
            x1140,
            98
        ),
        536459,
        4,
    )?;
    let x1143: BytePoly_64 = bigint_mul!(x1136, x1142, 64);
    let x1144: BytePoly_66 = bigint_nondet_quot!(ctx, x1143, x1, 66);
    let x1145: BytePoly_32 = bigint_nondet_rem!(ctx, x1143, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1144, x1, 98), x1145, 98),
            x1143,
            98
        ),
        536459,
        4,
    )?;
    let x1146: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x1145, x1139, 32), 32), x1, 32);
    let x1147: BytePoly_32 = bigint_nondet_quot!(ctx, x1146, x1, 32);
    let x1148: BytePoly_32 = bigint_nondet_rem!(ctx, x1146, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1147, x1, 64), x1148, 64),
            x1146,
            64
        ),
        260103,
        4,
    )?;
    let x1149: BytePoly_32 = bigint_add!(bigint_sub!(x5, x1142, 32), x1, 32);
    let x1150: BytePoly_32 = bigint_nondet_inv!(ctx, x1149, x1, 32);
    let x1151: BytePoly_64 = bigint_mul!(x1149, x1150, 64);
    let x1152: BytePoly_66 = bigint_nondet_quot!(ctx, x1151, x1, 66);
    let x1153: BytePoly_32 = bigint_nondet_rem!(ctx, x1151, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1152, x1, 98), x1153, 98),
            x1151,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1153, x0, 32), 34, 1)?;
    let x1154: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x1148, 32), x1, 32), x1150, 64);
    let x1155: BytePoly_66 = bigint_nondet_quot!(ctx, x1154, x1, 66);
    let x1156: BytePoly_32 = bigint_nondet_rem!(ctx, x1154, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1155, x1, 98), x1156, 98),
            x1154,
            98
        ),
        536459,
        4,
    )?;
    let x1157: BytePoly_64 = bigint_add!(
        bigint_sub!(x1148, bigint_mul!(x1156, x1142, 64), 64),
        x1,
        64
    );
    let x1158: BytePoly_64 = bigint_nondet_quot!(ctx, x1157, x1, 64);
    let x1159: BytePoly_32 = bigint_nondet_rem!(ctx, x1157, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1158, x1, 96), x1159, 96),
            x1157,
            96
        ),
        520203,
        4,
    )?;
    let x1160: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x1156, x1156, 64), x1142, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x1161: BytePoly_66 = bigint_nondet_quot!(ctx, x1160, x1, 66);
    let x1162: BytePoly_32 = bigint_nondet_rem!(ctx, x1160, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1161, x1, 98), x1162, 98),
            x1160,
            98
        ),
        536459,
        4,
    )?;
    let x1163: BytePoly_64 = bigint_mul!(x1156, x1162, 64);
    let x1164: BytePoly_66 = bigint_nondet_quot!(ctx, x1163, x1, 66);
    let x1165: BytePoly_32 = bigint_nondet_rem!(ctx, x1163, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1164, x1, 98), x1165, 98),
            x1163,
            98
        ),
        536459,
        4,
    )?;
    let x1166: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x1165, x1159, 32), 32), x1, 32);
    let x1167: BytePoly_32 = bigint_nondet_quot!(ctx, x1166, x1, 32);
    let x1168: BytePoly_32 = bigint_nondet_rem!(ctx, x1166, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1167, x1, 64), x1168, 64),
            x1166,
            64
        ),
        260103,
        4,
    )?;
    let x1169: BytePoly_32 = bigint_add!(bigint_sub!(x5, x1162, 32), x1, 32);
    let x1170: BytePoly_32 = bigint_nondet_inv!(ctx, x1169, x1, 32);
    let x1171: BytePoly_64 = bigint_mul!(x1169, x1170, 64);
    let x1172: BytePoly_66 = bigint_nondet_quot!(ctx, x1171, x1, 66);
    let x1173: BytePoly_32 = bigint_nondet_rem!(ctx, x1171, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1172, x1, 98), x1173, 98),
            x1171,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1173, x0, 32), 34, 1)?;
    let x1174: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x1168, 32), x1, 32), x1170, 64);
    let x1175: BytePoly_66 = bigint_nondet_quot!(ctx, x1174, x1, 66);
    let x1176: BytePoly_32 = bigint_nondet_rem!(ctx, x1174, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1175, x1, 98), x1176, 98),
            x1174,
            98
        ),
        536459,
        4,
    )?;
    let x1177: BytePoly_64 = bigint_add!(
        bigint_sub!(x1168, bigint_mul!(x1176, x1162, 64), 64),
        x1,
        64
    );
    let x1178: BytePoly_64 = bigint_nondet_quot!(ctx, x1177, x1, 64);
    let x1179: BytePoly_32 = bigint_nondet_rem!(ctx, x1177, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1178, x1, 96), x1179, 96),
            x1177,
            96
        ),
        520203,
        4,
    )?;
    let x1180: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x1176, x1176, 64), x1162, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x1181: BytePoly_66 = bigint_nondet_quot!(ctx, x1180, x1, 66);
    let x1182: BytePoly_32 = bigint_nondet_rem!(ctx, x1180, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1181, x1, 98), x1182, 98),
            x1180,
            98
        ),
        536459,
        4,
    )?;
    let x1183: BytePoly_64 = bigint_mul!(x1176, x1182, 64);
    let x1184: BytePoly_66 = bigint_nondet_quot!(ctx, x1183, x1, 66);
    let x1185: BytePoly_32 = bigint_nondet_rem!(ctx, x1183, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1184, x1, 98), x1185, 98),
            x1183,
            98
        ),
        536459,
        4,
    )?;
    let x1186: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x1185, x1179, 32), 32), x1, 32);
    let x1187: BytePoly_32 = bigint_nondet_quot!(ctx, x1186, x1, 32);
    let x1188: BytePoly_32 = bigint_nondet_rem!(ctx, x1186, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1187, x1, 64), x1188, 64),
            x1186,
            64
        ),
        260103,
        4,
    )?;
    let x1189: BytePoly_32 = bigint_add!(bigint_sub!(x5, x1182, 32), x1, 32);
    let x1190: BytePoly_32 = bigint_nondet_inv!(ctx, x1189, x1, 32);
    let x1191: BytePoly_64 = bigint_mul!(x1189, x1190, 64);
    let x1192: BytePoly_66 = bigint_nondet_quot!(ctx, x1191, x1, 66);
    let x1193: BytePoly_32 = bigint_nondet_rem!(ctx, x1191, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1192, x1, 98), x1193, 98),
            x1191,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1193, x0, 32), 34, 1)?;
    let x1194: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x1188, 32), x1, 32), x1190, 64);
    let x1195: BytePoly_66 = bigint_nondet_quot!(ctx, x1194, x1, 66);
    let x1196: BytePoly_32 = bigint_nondet_rem!(ctx, x1194, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1195, x1, 98), x1196, 98),
            x1194,
            98
        ),
        536459,
        4,
    )?;
    let x1197: BytePoly_64 = bigint_add!(
        bigint_sub!(x1188, bigint_mul!(x1196, x1182, 64), 64),
        x1,
        64
    );
    let x1198: BytePoly_64 = bigint_nondet_quot!(ctx, x1197, x1, 64);
    let x1199: BytePoly_32 = bigint_nondet_rem!(ctx, x1197, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1198, x1, 96), x1199, 96),
            x1197,
            96
        ),
        520203,
        4,
    )?;
    let x1200: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x1196, x1196, 64), x1182, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x1201: BytePoly_66 = bigint_nondet_quot!(ctx, x1200, x1, 66);
    let x1202: BytePoly_32 = bigint_nondet_rem!(ctx, x1200, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1201, x1, 98), x1202, 98),
            x1200,
            98
        ),
        536459,
        4,
    )?;
    let x1203: BytePoly_64 = bigint_mul!(x1196, x1202, 64);
    let x1204: BytePoly_66 = bigint_nondet_quot!(ctx, x1203, x1, 66);
    let x1205: BytePoly_32 = bigint_nondet_rem!(ctx, x1203, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1204, x1, 98), x1205, 98),
            x1203,
            98
        ),
        536459,
        4,
    )?;
    let x1206: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x1205, x1199, 32), 32), x1, 32);
    let x1207: BytePoly_32 = bigint_nondet_quot!(ctx, x1206, x1, 32);
    let x1208: BytePoly_32 = bigint_nondet_rem!(ctx, x1206, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1207, x1, 64), x1208, 64),
            x1206,
            64
        ),
        260103,
        4,
    )?;
    let x1209: BytePoly_32 = bigint_add!(bigint_sub!(x5, x1202, 32), x1, 32);
    let x1210: BytePoly_32 = bigint_nondet_inv!(ctx, x1209, x1, 32);
    let x1211: BytePoly_64 = bigint_mul!(x1209, x1210, 64);
    let x1212: BytePoly_66 = bigint_nondet_quot!(ctx, x1211, x1, 66);
    let x1213: BytePoly_32 = bigint_nondet_rem!(ctx, x1211, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1212, x1, 98), x1213, 98),
            x1211,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1213, x0, 32), 34, 1)?;
    let x1214: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x1208, 32), x1, 32), x1210, 64);
    let x1215: BytePoly_66 = bigint_nondet_quot!(ctx, x1214, x1, 66);
    let x1216: BytePoly_32 = bigint_nondet_rem!(ctx, x1214, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1215, x1, 98), x1216, 98),
            x1214,
            98
        ),
        536459,
        4,
    )?;
    let x1217: BytePoly_64 = bigint_add!(
        bigint_sub!(x1208, bigint_mul!(x1216, x1202, 64), 64),
        x1,
        64
    );
    let x1218: BytePoly_64 = bigint_nondet_quot!(ctx, x1217, x1, 64);
    let x1219: BytePoly_32 = bigint_nondet_rem!(ctx, x1217, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1218, x1, 96), x1219, 96),
            x1217,
            96
        ),
        520203,
        4,
    )?;
    let x1220: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x1216, x1216, 64), x1202, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x1221: BytePoly_66 = bigint_nondet_quot!(ctx, x1220, x1, 66);
    let x1222: BytePoly_32 = bigint_nondet_rem!(ctx, x1220, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1221, x1, 98), x1222, 98),
            x1220,
            98
        ),
        536459,
        4,
    )?;
    let x1223: BytePoly_64 = bigint_mul!(x1216, x1222, 64);
    let x1224: BytePoly_66 = bigint_nondet_quot!(ctx, x1223, x1, 66);
    let x1225: BytePoly_32 = bigint_nondet_rem!(ctx, x1223, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1224, x1, 98), x1225, 98),
            x1223,
            98
        ),
        536459,
        4,
    )?;
    let x1226: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x1225, x1219, 32), 32), x1, 32);
    let x1227: BytePoly_32 = bigint_nondet_quot!(ctx, x1226, x1, 32);
    let x1228: BytePoly_32 = bigint_nondet_rem!(ctx, x1226, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1227, x1, 64), x1228, 64),
            x1226,
            64
        ),
        260103,
        4,
    )?;
    let x1229: BytePoly_32 = bigint_add!(bigint_sub!(x5, x1222, 32), x1, 32);
    let x1230: BytePoly_32 = bigint_nondet_inv!(ctx, x1229, x1, 32);
    let x1231: BytePoly_64 = bigint_mul!(x1229, x1230, 64);
    let x1232: BytePoly_66 = bigint_nondet_quot!(ctx, x1231, x1, 66);
    let x1233: BytePoly_32 = bigint_nondet_rem!(ctx, x1231, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1232, x1, 98), x1233, 98),
            x1231,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1233, x0, 32), 34, 1)?;
    let x1234: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x1228, 32), x1, 32), x1230, 64);
    let x1235: BytePoly_66 = bigint_nondet_quot!(ctx, x1234, x1, 66);
    let x1236: BytePoly_32 = bigint_nondet_rem!(ctx, x1234, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1235, x1, 98), x1236, 98),
            x1234,
            98
        ),
        536459,
        4,
    )?;
    let x1237: BytePoly_64 = bigint_add!(
        bigint_sub!(x1228, bigint_mul!(x1236, x1222, 64), 64),
        x1,
        64
    );
    let x1238: BytePoly_64 = bigint_nondet_quot!(ctx, x1237, x1, 64);
    let x1239: BytePoly_32 = bigint_nondet_rem!(ctx, x1237, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1238, x1, 96), x1239, 96),
            x1237,
            96
        ),
        520203,
        4,
    )?;
    let x1240: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x1236, x1236, 64), x1222, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x1241: BytePoly_66 = bigint_nondet_quot!(ctx, x1240, x1, 66);
    let x1242: BytePoly_32 = bigint_nondet_rem!(ctx, x1240, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1241, x1, 98), x1242, 98),
            x1240,
            98
        ),
        536459,
        4,
    )?;
    let x1243: BytePoly_64 = bigint_mul!(x1236, x1242, 64);
    let x1244: BytePoly_66 = bigint_nondet_quot!(ctx, x1243, x1, 66);
    let x1245: BytePoly_32 = bigint_nondet_rem!(ctx, x1243, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1244, x1, 98), x1245, 98),
            x1243,
            98
        ),
        536459,
        4,
    )?;
    let x1246: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x1245, x1239, 32), 32), x1, 32);
    let x1247: BytePoly_32 = bigint_nondet_quot!(ctx, x1246, x1, 32);
    let x1248: BytePoly_32 = bigint_nondet_rem!(ctx, x1246, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1247, x1, 64), x1248, 64),
            x1246,
            64
        ),
        260103,
        4,
    )?;
    let x1249: BytePoly_32 = bigint_add!(bigint_sub!(x5, x1242, 32), x1, 32);
    let x1250: BytePoly_32 = bigint_nondet_inv!(ctx, x1249, x1, 32);
    let x1251: BytePoly_64 = bigint_mul!(x1249, x1250, 64);
    let x1252: BytePoly_66 = bigint_nondet_quot!(ctx, x1251, x1, 66);
    let x1253: BytePoly_32 = bigint_nondet_rem!(ctx, x1251, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1252, x1, 98), x1253, 98),
            x1251,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1253, x0, 32), 34, 1)?;
    let x1254: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x1248, 32), x1, 32), x1250, 64);
    let x1255: BytePoly_66 = bigint_nondet_quot!(ctx, x1254, x1, 66);
    let x1256: BytePoly_32 = bigint_nondet_rem!(ctx, x1254, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1255, x1, 98), x1256, 98),
            x1254,
            98
        ),
        536459,
        4,
    )?;
    let x1257: BytePoly_64 = bigint_add!(
        bigint_sub!(x1248, bigint_mul!(x1256, x1242, 64), 64),
        x1,
        64
    );
    let x1258: BytePoly_64 = bigint_nondet_quot!(ctx, x1257, x1, 64);
    let x1259: BytePoly_32 = bigint_nondet_rem!(ctx, x1257, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1258, x1, 96), x1259, 96),
            x1257,
            96
        ),
        520203,
        4,
    )?;
    let x1260: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x1256, x1256, 64), x1242, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x1261: BytePoly_66 = bigint_nondet_quot!(ctx, x1260, x1, 66);
    let x1262: BytePoly_32 = bigint_nondet_rem!(ctx, x1260, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1261, x1, 98), x1262, 98),
            x1260,
            98
        ),
        536459,
        4,
    )?;
    let x1263: BytePoly_64 = bigint_mul!(x1256, x1262, 64);
    let x1264: BytePoly_66 = bigint_nondet_quot!(ctx, x1263, x1, 66);
    let x1265: BytePoly_32 = bigint_nondet_rem!(ctx, x1263, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1264, x1, 98), x1265, 98),
            x1263,
            98
        ),
        536459,
        4,
    )?;
    let x1266: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x1265, x1259, 32), 32), x1, 32);
    let x1267: BytePoly_32 = bigint_nondet_quot!(ctx, x1266, x1, 32);
    let x1268: BytePoly_32 = bigint_nondet_rem!(ctx, x1266, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1267, x1, 64), x1268, 64),
            x1266,
            64
        ),
        260103,
        4,
    )?;
    let x1269: BytePoly_32 = bigint_add!(bigint_sub!(x5, x1262, 32), x1, 32);
    let x1270: BytePoly_32 = bigint_nondet_inv!(ctx, x1269, x1, 32);
    let x1271: BytePoly_64 = bigint_mul!(x1269, x1270, 64);
    let x1272: BytePoly_66 = bigint_nondet_quot!(ctx, x1271, x1, 66);
    let x1273: BytePoly_32 = bigint_nondet_rem!(ctx, x1271, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1272, x1, 98), x1273, 98),
            x1271,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1273, x0, 32), 34, 1)?;
    let x1274: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x1268, 32), x1, 32), x1270, 64);
    let x1275: BytePoly_66 = bigint_nondet_quot!(ctx, x1274, x1, 66);
    let x1276: BytePoly_32 = bigint_nondet_rem!(ctx, x1274, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1275, x1, 98), x1276, 98),
            x1274,
            98
        ),
        536459,
        4,
    )?;
    let x1277: BytePoly_64 = bigint_add!(
        bigint_sub!(x1268, bigint_mul!(x1276, x1262, 64), 64),
        x1,
        64
    );
    let x1278: BytePoly_64 = bigint_nondet_quot!(ctx, x1277, x1, 64);
    let x1279: BytePoly_32 = bigint_nondet_rem!(ctx, x1277, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1278, x1, 96), x1279, 96),
            x1277,
            96
        ),
        520203,
        4,
    )?;
    let x1280: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x1276, x1276, 64), x1262, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x1281: BytePoly_66 = bigint_nondet_quot!(ctx, x1280, x1, 66);
    let x1282: BytePoly_32 = bigint_nondet_rem!(ctx, x1280, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1281, x1, 98), x1282, 98),
            x1280,
            98
        ),
        536459,
        4,
    )?;
    let x1283: BytePoly_64 = bigint_mul!(x1276, x1282, 64);
    let x1284: BytePoly_66 = bigint_nondet_quot!(ctx, x1283, x1, 66);
    let x1285: BytePoly_32 = bigint_nondet_rem!(ctx, x1283, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1284, x1, 98), x1285, 98),
            x1283,
            98
        ),
        536459,
        4,
    )?;
    let x1286: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x1285, x1279, 32), 32), x1, 32);
    let x1287: BytePoly_32 = bigint_nondet_quot!(ctx, x1286, x1, 32);
    let x1288: BytePoly_32 = bigint_nondet_rem!(ctx, x1286, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1287, x1, 64), x1288, 64),
            x1286,
            64
        ),
        260103,
        4,
    )?;
    let x1289: BytePoly_32 = bigint_add!(bigint_sub!(x5, x1282, 32), x1, 32);
    let x1290: BytePoly_32 = bigint_nondet_inv!(ctx, x1289, x1, 32);
    let x1291: BytePoly_64 = bigint_mul!(x1289, x1290, 64);
    let x1292: BytePoly_66 = bigint_nondet_quot!(ctx, x1291, x1, 66);
    let x1293: BytePoly_32 = bigint_nondet_rem!(ctx, x1291, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1292, x1, 98), x1293, 98),
            x1291,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1293, x0, 32), 34, 1)?;
    let x1294: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x1288, 32), x1, 32), x1290, 64);
    let x1295: BytePoly_66 = bigint_nondet_quot!(ctx, x1294, x1, 66);
    let x1296: BytePoly_32 = bigint_nondet_rem!(ctx, x1294, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1295, x1, 98), x1296, 98),
            x1294,
            98
        ),
        536459,
        4,
    )?;
    let x1297: BytePoly_64 = bigint_add!(
        bigint_sub!(x1288, bigint_mul!(x1296, x1282, 64), 64),
        x1,
        64
    );
    let x1298: BytePoly_64 = bigint_nondet_quot!(ctx, x1297, x1, 64);
    let x1299: BytePoly_32 = bigint_nondet_rem!(ctx, x1297, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1298, x1, 96), x1299, 96),
            x1297,
            96
        ),
        520203,
        4,
    )?;
    let x1300: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x1296, x1296, 64), x1282, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x1301: BytePoly_66 = bigint_nondet_quot!(ctx, x1300, x1, 66);
    let x1302: BytePoly_32 = bigint_nondet_rem!(ctx, x1300, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1301, x1, 98), x1302, 98),
            x1300,
            98
        ),
        536459,
        4,
    )?;
    let x1303: BytePoly_64 = bigint_mul!(x1296, x1302, 64);
    let x1304: BytePoly_66 = bigint_nondet_quot!(ctx, x1303, x1, 66);
    let x1305: BytePoly_32 = bigint_nondet_rem!(ctx, x1303, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1304, x1, 98), x1305, 98),
            x1303,
            98
        ),
        536459,
        4,
    )?;
    let x1306: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x1305, x1299, 32), 32), x1, 32);
    let x1307: BytePoly_32 = bigint_nondet_quot!(ctx, x1306, x1, 32);
    let x1308: BytePoly_32 = bigint_nondet_rem!(ctx, x1306, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1307, x1, 64), x1308, 64),
            x1306,
            64
        ),
        260103,
        4,
    )?;
    let x1309: BytePoly_32 = bigint_add!(bigint_sub!(x5, x1302, 32), x1, 32);
    let x1310: BytePoly_32 = bigint_nondet_inv!(ctx, x1309, x1, 32);
    let x1311: BytePoly_64 = bigint_mul!(x1309, x1310, 64);
    let x1312: BytePoly_66 = bigint_nondet_quot!(ctx, x1311, x1, 66);
    let x1313: BytePoly_32 = bigint_nondet_rem!(ctx, x1311, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1312, x1, 98), x1313, 98),
            x1311,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1313, x0, 32), 34, 1)?;
    let x1314: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x1308, 32), x1, 32), x1310, 64);
    let x1315: BytePoly_66 = bigint_nondet_quot!(ctx, x1314, x1, 66);
    let x1316: BytePoly_32 = bigint_nondet_rem!(ctx, x1314, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1315, x1, 98), x1316, 98),
            x1314,
            98
        ),
        536459,
        4,
    )?;
    let x1317: BytePoly_64 = bigint_add!(
        bigint_sub!(x1308, bigint_mul!(x1316, x1302, 64), 64),
        x1,
        64
    );
    let x1318: BytePoly_64 = bigint_nondet_quot!(ctx, x1317, x1, 64);
    let x1319: BytePoly_32 = bigint_nondet_rem!(ctx, x1317, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1318, x1, 96), x1319, 96),
            x1317,
            96
        ),
        520203,
        4,
    )?;
    let x1320: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x1316, x1316, 64), x1302, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x1321: BytePoly_66 = bigint_nondet_quot!(ctx, x1320, x1, 66);
    let x1322: BytePoly_32 = bigint_nondet_rem!(ctx, x1320, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1321, x1, 98), x1322, 98),
            x1320,
            98
        ),
        536459,
        4,
    )?;
    let x1323: BytePoly_64 = bigint_mul!(x1316, x1322, 64);
    let x1324: BytePoly_66 = bigint_nondet_quot!(ctx, x1323, x1, 66);
    let x1325: BytePoly_32 = bigint_nondet_rem!(ctx, x1323, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1324, x1, 98), x1325, 98),
            x1323,
            98
        ),
        536459,
        4,
    )?;
    let x1326: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x1325, x1319, 32), 32), x1, 32);
    let x1327: BytePoly_32 = bigint_nondet_quot!(ctx, x1326, x1, 32);
    let x1328: BytePoly_32 = bigint_nondet_rem!(ctx, x1326, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1327, x1, 64), x1328, 64),
            x1326,
            64
        ),
        260103,
        4,
    )?;
    let x1329: BytePoly_32 = bigint_add!(bigint_sub!(x5, x1322, 32), x1, 32);
    let x1330: BytePoly_32 = bigint_nondet_inv!(ctx, x1329, x1, 32);
    let x1331: BytePoly_64 = bigint_mul!(x1329, x1330, 64);
    let x1332: BytePoly_66 = bigint_nondet_quot!(ctx, x1331, x1, 66);
    let x1333: BytePoly_32 = bigint_nondet_rem!(ctx, x1331, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1332, x1, 98), x1333, 98),
            x1331,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1333, x0, 32), 34, 1)?;
    let x1334: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x1328, 32), x1, 32), x1330, 64);
    let x1335: BytePoly_66 = bigint_nondet_quot!(ctx, x1334, x1, 66);
    let x1336: BytePoly_32 = bigint_nondet_rem!(ctx, x1334, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1335, x1, 98), x1336, 98),
            x1334,
            98
        ),
        536459,
        4,
    )?;
    let x1337: BytePoly_64 = bigint_add!(
        bigint_sub!(x1328, bigint_mul!(x1336, x1322, 64), 64),
        x1,
        64
    );
    let x1338: BytePoly_64 = bigint_nondet_quot!(ctx, x1337, x1, 64);
    let x1339: BytePoly_32 = bigint_nondet_rem!(ctx, x1337, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1338, x1, 96), x1339, 96),
            x1337,
            96
        ),
        520203,
        4,
    )?;
    let x1340: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x1336, x1336, 64), x1322, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x1341: BytePoly_66 = bigint_nondet_quot!(ctx, x1340, x1, 66);
    let x1342: BytePoly_32 = bigint_nondet_rem!(ctx, x1340, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1341, x1, 98), x1342, 98),
            x1340,
            98
        ),
        536459,
        4,
    )?;
    let x1343: BytePoly_64 = bigint_mul!(x1336, x1342, 64);
    let x1344: BytePoly_66 = bigint_nondet_quot!(ctx, x1343, x1, 66);
    let x1345: BytePoly_32 = bigint_nondet_rem!(ctx, x1343, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1344, x1, 98), x1345, 98),
            x1343,
            98
        ),
        536459,
        4,
    )?;
    let x1346: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x1345, x1339, 32), 32), x1, 32);
    let x1347: BytePoly_32 = bigint_nondet_quot!(ctx, x1346, x1, 32);
    let x1348: BytePoly_32 = bigint_nondet_rem!(ctx, x1346, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1347, x1, 64), x1348, 64),
            x1346,
            64
        ),
        260103,
        4,
    )?;
    let x1349: BytePoly_32 = bigint_add!(bigint_sub!(x5, x1342, 32), x1, 32);
    let x1350: BytePoly_32 = bigint_nondet_inv!(ctx, x1349, x1, 32);
    let x1351: BytePoly_64 = bigint_mul!(x1349, x1350, 64);
    let x1352: BytePoly_66 = bigint_nondet_quot!(ctx, x1351, x1, 66);
    let x1353: BytePoly_32 = bigint_nondet_rem!(ctx, x1351, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1352, x1, 98), x1353, 98),
            x1351,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1353, x0, 32), 34, 1)?;
    let x1354: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x1348, 32), x1, 32), x1350, 64);
    let x1355: BytePoly_66 = bigint_nondet_quot!(ctx, x1354, x1, 66);
    let x1356: BytePoly_32 = bigint_nondet_rem!(ctx, x1354, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1355, x1, 98), x1356, 98),
            x1354,
            98
        ),
        536459,
        4,
    )?;
    let x1357: BytePoly_64 = bigint_add!(
        bigint_sub!(x1348, bigint_mul!(x1356, x1342, 64), 64),
        x1,
        64
    );
    let x1358: BytePoly_64 = bigint_nondet_quot!(ctx, x1357, x1, 64);
    let x1359: BytePoly_32 = bigint_nondet_rem!(ctx, x1357, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1358, x1, 96), x1359, 96),
            x1357,
            96
        ),
        520203,
        4,
    )?;
    let x1360: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x1356, x1356, 64), x1342, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x1361: BytePoly_66 = bigint_nondet_quot!(ctx, x1360, x1, 66);
    let x1362: BytePoly_32 = bigint_nondet_rem!(ctx, x1360, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1361, x1, 98), x1362, 98),
            x1360,
            98
        ),
        536459,
        4,
    )?;
    let x1363: BytePoly_64 = bigint_mul!(x1356, x1362, 64);
    let x1364: BytePoly_66 = bigint_nondet_quot!(ctx, x1363, x1, 66);
    let x1365: BytePoly_32 = bigint_nondet_rem!(ctx, x1363, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1364, x1, 98), x1365, 98),
            x1363,
            98
        ),
        536459,
        4,
    )?;
    let x1366: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x1365, x1359, 32), 32), x1, 32);
    let x1367: BytePoly_32 = bigint_nondet_quot!(ctx, x1366, x1, 32);
    let x1368: BytePoly_32 = bigint_nondet_rem!(ctx, x1366, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1367, x1, 64), x1368, 64),
            x1366,
            64
        ),
        260103,
        4,
    )?;
    let x1369: BytePoly_32 = bigint_add!(bigint_sub!(x5, x1362, 32), x1, 32);
    let x1370: BytePoly_32 = bigint_nondet_inv!(ctx, x1369, x1, 32);
    let x1371: BytePoly_64 = bigint_mul!(x1369, x1370, 64);
    let x1372: BytePoly_66 = bigint_nondet_quot!(ctx, x1371, x1, 66);
    let x1373: BytePoly_32 = bigint_nondet_rem!(ctx, x1371, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1372, x1, 98), x1373, 98),
            x1371,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1373, x0, 32), 34, 1)?;
    let x1374: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x1368, 32), x1, 32), x1370, 64);
    let x1375: BytePoly_66 = bigint_nondet_quot!(ctx, x1374, x1, 66);
    let x1376: BytePoly_32 = bigint_nondet_rem!(ctx, x1374, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1375, x1, 98), x1376, 98),
            x1374,
            98
        ),
        536459,
        4,
    )?;
    let x1377: BytePoly_64 = bigint_add!(
        bigint_sub!(x1368, bigint_mul!(x1376, x1362, 64), 64),
        x1,
        64
    );
    let x1378: BytePoly_64 = bigint_nondet_quot!(ctx, x1377, x1, 64);
    let x1379: BytePoly_32 = bigint_nondet_rem!(ctx, x1377, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1378, x1, 96), x1379, 96),
            x1377,
            96
        ),
        520203,
        4,
    )?;
    let x1380: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x1376, x1376, 64), x1362, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x1381: BytePoly_66 = bigint_nondet_quot!(ctx, x1380, x1, 66);
    let x1382: BytePoly_32 = bigint_nondet_rem!(ctx, x1380, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1381, x1, 98), x1382, 98),
            x1380,
            98
        ),
        536459,
        4,
    )?;
    let x1383: BytePoly_64 = bigint_mul!(x1376, x1382, 64);
    let x1384: BytePoly_66 = bigint_nondet_quot!(ctx, x1383, x1, 66);
    let x1385: BytePoly_32 = bigint_nondet_rem!(ctx, x1383, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1384, x1, 98), x1385, 98),
            x1383,
            98
        ),
        536459,
        4,
    )?;
    let x1386: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x1385, x1379, 32), 32), x1, 32);
    let x1387: BytePoly_32 = bigint_nondet_quot!(ctx, x1386, x1, 32);
    let x1388: BytePoly_32 = bigint_nondet_rem!(ctx, x1386, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1387, x1, 64), x1388, 64),
            x1386,
            64
        ),
        260103,
        4,
    )?;
    let x1389: BytePoly_32 = bigint_add!(bigint_sub!(x5, x1382, 32), x1, 32);
    let x1390: BytePoly_32 = bigint_nondet_inv!(ctx, x1389, x1, 32);
    let x1391: BytePoly_64 = bigint_mul!(x1389, x1390, 64);
    let x1392: BytePoly_66 = bigint_nondet_quot!(ctx, x1391, x1, 66);
    let x1393: BytePoly_32 = bigint_nondet_rem!(ctx, x1391, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1392, x1, 98), x1393, 98),
            x1391,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1393, x0, 32), 34, 1)?;
    let x1394: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x1388, 32), x1, 32), x1390, 64);
    let x1395: BytePoly_66 = bigint_nondet_quot!(ctx, x1394, x1, 66);
    let x1396: BytePoly_32 = bigint_nondet_rem!(ctx, x1394, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1395, x1, 98), x1396, 98),
            x1394,
            98
        ),
        536459,
        4,
    )?;
    let x1397: BytePoly_64 = bigint_add!(
        bigint_sub!(x1388, bigint_mul!(x1396, x1382, 64), 64),
        x1,
        64
    );
    let x1398: BytePoly_64 = bigint_nondet_quot!(ctx, x1397, x1, 64);
    let x1399: BytePoly_32 = bigint_nondet_rem!(ctx, x1397, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1398, x1, 96), x1399, 96),
            x1397,
            96
        ),
        520203,
        4,
    )?;
    let x1400: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x1396, x1396, 64), x1382, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x1401: BytePoly_66 = bigint_nondet_quot!(ctx, x1400, x1, 66);
    let x1402: BytePoly_32 = bigint_nondet_rem!(ctx, x1400, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1401, x1, 98), x1402, 98),
            x1400,
            98
        ),
        536459,
        4,
    )?;
    let x1403: BytePoly_64 = bigint_mul!(x1396, x1402, 64);
    let x1404: BytePoly_66 = bigint_nondet_quot!(ctx, x1403, x1, 66);
    let x1405: BytePoly_32 = bigint_nondet_rem!(ctx, x1403, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1404, x1, 98), x1405, 98),
            x1403,
            98
        ),
        536459,
        4,
    )?;
    let x1406: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x1405, x1399, 32), 32), x1, 32);
    let x1407: BytePoly_32 = bigint_nondet_quot!(ctx, x1406, x1, 32);
    let x1408: BytePoly_32 = bigint_nondet_rem!(ctx, x1406, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1407, x1, 64), x1408, 64),
            x1406,
            64
        ),
        260103,
        4,
    )?;
    let x1409: BytePoly_32 = bigint_add!(bigint_sub!(x5, x1402, 32), x1, 32);
    let x1410: BytePoly_32 = bigint_nondet_inv!(ctx, x1409, x1, 32);
    let x1411: BytePoly_64 = bigint_mul!(x1409, x1410, 64);
    let x1412: BytePoly_66 = bigint_nondet_quot!(ctx, x1411, x1, 66);
    let x1413: BytePoly_32 = bigint_nondet_rem!(ctx, x1411, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1412, x1, 98), x1413, 98),
            x1411,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1413, x0, 32), 34, 1)?;
    let x1414: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x1408, 32), x1, 32), x1410, 64);
    let x1415: BytePoly_66 = bigint_nondet_quot!(ctx, x1414, x1, 66);
    let x1416: BytePoly_32 = bigint_nondet_rem!(ctx, x1414, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1415, x1, 98), x1416, 98),
            x1414,
            98
        ),
        536459,
        4,
    )?;
    let x1417: BytePoly_64 = bigint_add!(
        bigint_sub!(x1408, bigint_mul!(x1416, x1402, 64), 64),
        x1,
        64
    );
    let x1418: BytePoly_64 = bigint_nondet_quot!(ctx, x1417, x1, 64);
    let x1419: BytePoly_32 = bigint_nondet_rem!(ctx, x1417, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1418, x1, 96), x1419, 96),
            x1417,
            96
        ),
        520203,
        4,
    )?;
    let x1420: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x1416, x1416, 64), x1402, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x1421: BytePoly_66 = bigint_nondet_quot!(ctx, x1420, x1, 66);
    let x1422: BytePoly_32 = bigint_nondet_rem!(ctx, x1420, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1421, x1, 98), x1422, 98),
            x1420,
            98
        ),
        536459,
        4,
    )?;
    let x1423: BytePoly_64 = bigint_mul!(x1416, x1422, 64);
    let x1424: BytePoly_66 = bigint_nondet_quot!(ctx, x1423, x1, 66);
    let x1425: BytePoly_32 = bigint_nondet_rem!(ctx, x1423, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1424, x1, 98), x1425, 98),
            x1423,
            98
        ),
        536459,
        4,
    )?;
    let x1426: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x1425, x1419, 32), 32), x1, 32);
    let x1427: BytePoly_32 = bigint_nondet_quot!(ctx, x1426, x1, 32);
    let x1428: BytePoly_32 = bigint_nondet_rem!(ctx, x1426, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1427, x1, 64), x1428, 64),
            x1426,
            64
        ),
        260103,
        4,
    )?;
    let x1429: BytePoly_32 = bigint_add!(bigint_sub!(x5, x1422, 32), x1, 32);
    let x1430: BytePoly_32 = bigint_nondet_inv!(ctx, x1429, x1, 32);
    let x1431: BytePoly_64 = bigint_mul!(x1429, x1430, 64);
    let x1432: BytePoly_66 = bigint_nondet_quot!(ctx, x1431, x1, 66);
    let x1433: BytePoly_32 = bigint_nondet_rem!(ctx, x1431, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1432, x1, 98), x1433, 98),
            x1431,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1433, x0, 32), 34, 1)?;
    let x1434: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x1428, 32), x1, 32), x1430, 64);
    let x1435: BytePoly_66 = bigint_nondet_quot!(ctx, x1434, x1, 66);
    let x1436: BytePoly_32 = bigint_nondet_rem!(ctx, x1434, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1435, x1, 98), x1436, 98),
            x1434,
            98
        ),
        536459,
        4,
    )?;
    let x1437: BytePoly_64 = bigint_add!(
        bigint_sub!(x1428, bigint_mul!(x1436, x1422, 64), 64),
        x1,
        64
    );
    let x1438: BytePoly_64 = bigint_nondet_quot!(ctx, x1437, x1, 64);
    let x1439: BytePoly_32 = bigint_nondet_rem!(ctx, x1437, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1438, x1, 96), x1439, 96),
            x1437,
            96
        ),
        520203,
        4,
    )?;
    let x1440: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x1436, x1436, 64), x1422, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x1441: BytePoly_66 = bigint_nondet_quot!(ctx, x1440, x1, 66);
    let x1442: BytePoly_32 = bigint_nondet_rem!(ctx, x1440, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1441, x1, 98), x1442, 98),
            x1440,
            98
        ),
        536459,
        4,
    )?;
    let x1443: BytePoly_64 = bigint_mul!(x1436, x1442, 64);
    let x1444: BytePoly_66 = bigint_nondet_quot!(ctx, x1443, x1, 66);
    let x1445: BytePoly_32 = bigint_nondet_rem!(ctx, x1443, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1444, x1, 98), x1445, 98),
            x1443,
            98
        ),
        536459,
        4,
    )?;
    let x1446: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x1445, x1439, 32), 32), x1, 32);
    let x1447: BytePoly_32 = bigint_nondet_quot!(ctx, x1446, x1, 32);
    let x1448: BytePoly_32 = bigint_nondet_rem!(ctx, x1446, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1447, x1, 64), x1448, 64),
            x1446,
            64
        ),
        260103,
        4,
    )?;
    let x1449: BytePoly_32 = bigint_add!(bigint_sub!(x5, x1442, 32), x1, 32);
    let x1450: BytePoly_32 = bigint_nondet_inv!(ctx, x1449, x1, 32);
    let x1451: BytePoly_64 = bigint_mul!(x1449, x1450, 64);
    let x1452: BytePoly_66 = bigint_nondet_quot!(ctx, x1451, x1, 66);
    let x1453: BytePoly_32 = bigint_nondet_rem!(ctx, x1451, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1452, x1, 98), x1453, 98),
            x1451,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1453, x0, 32), 34, 1)?;
    let x1454: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x1448, 32), x1, 32), x1450, 64);
    let x1455: BytePoly_66 = bigint_nondet_quot!(ctx, x1454, x1, 66);
    let x1456: BytePoly_32 = bigint_nondet_rem!(ctx, x1454, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1455, x1, 98), x1456, 98),
            x1454,
            98
        ),
        536459,
        4,
    )?;
    let x1457: BytePoly_64 = bigint_add!(
        bigint_sub!(x1448, bigint_mul!(x1456, x1442, 64), 64),
        x1,
        64
    );
    let x1458: BytePoly_64 = bigint_nondet_quot!(ctx, x1457, x1, 64);
    let x1459: BytePoly_32 = bigint_nondet_rem!(ctx, x1457, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1458, x1, 96), x1459, 96),
            x1457,
            96
        ),
        520203,
        4,
    )?;
    let x1460: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x1456, x1456, 64), x1442, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x1461: BytePoly_66 = bigint_nondet_quot!(ctx, x1460, x1, 66);
    let x1462: BytePoly_32 = bigint_nondet_rem!(ctx, x1460, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1461, x1, 98), x1462, 98),
            x1460,
            98
        ),
        536459,
        4,
    )?;
    let x1463: BytePoly_64 = bigint_mul!(x1456, x1462, 64);
    let x1464: BytePoly_66 = bigint_nondet_quot!(ctx, x1463, x1, 66);
    let x1465: BytePoly_32 = bigint_nondet_rem!(ctx, x1463, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1464, x1, 98), x1465, 98),
            x1463,
            98
        ),
        536459,
        4,
    )?;
    let x1466: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x1465, x1459, 32), 32), x1, 32);
    let x1467: BytePoly_32 = bigint_nondet_quot!(ctx, x1466, x1, 32);
    let x1468: BytePoly_32 = bigint_nondet_rem!(ctx, x1466, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1467, x1, 64), x1468, 64),
            x1466,
            64
        ),
        260103,
        4,
    )?;
    let x1469: BytePoly_32 = bigint_add!(bigint_sub!(x5, x1462, 32), x1, 32);
    let x1470: BytePoly_32 = bigint_nondet_inv!(ctx, x1469, x1, 32);
    let x1471: BytePoly_64 = bigint_mul!(x1469, x1470, 64);
    let x1472: BytePoly_66 = bigint_nondet_quot!(ctx, x1471, x1, 66);
    let x1473: BytePoly_32 = bigint_nondet_rem!(ctx, x1471, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1472, x1, 98), x1473, 98),
            x1471,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1473, x0, 32), 34, 1)?;
    let x1474: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x1468, 32), x1, 32), x1470, 64);
    let x1475: BytePoly_66 = bigint_nondet_quot!(ctx, x1474, x1, 66);
    let x1476: BytePoly_32 = bigint_nondet_rem!(ctx, x1474, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1475, x1, 98), x1476, 98),
            x1474,
            98
        ),
        536459,
        4,
    )?;
    let x1477: BytePoly_64 = bigint_add!(
        bigint_sub!(x1468, bigint_mul!(x1476, x1462, 64), 64),
        x1,
        64
    );
    let x1478: BytePoly_64 = bigint_nondet_quot!(ctx, x1477, x1, 64);
    let x1479: BytePoly_32 = bigint_nondet_rem!(ctx, x1477, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1478, x1, 96), x1479, 96),
            x1477,
            96
        ),
        520203,
        4,
    )?;
    let x1480: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x1476, x1476, 64), x1462, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x1481: BytePoly_66 = bigint_nondet_quot!(ctx, x1480, x1, 66);
    let x1482: BytePoly_32 = bigint_nondet_rem!(ctx, x1480, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1481, x1, 98), x1482, 98),
            x1480,
            98
        ),
        536459,
        4,
    )?;
    let x1483: BytePoly_64 = bigint_mul!(x1476, x1482, 64);
    let x1484: BytePoly_66 = bigint_nondet_quot!(ctx, x1483, x1, 66);
    let x1485: BytePoly_32 = bigint_nondet_rem!(ctx, x1483, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1484, x1, 98), x1485, 98),
            x1483,
            98
        ),
        536459,
        4,
    )?;
    let x1486: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x1485, x1479, 32), 32), x1, 32);
    let x1487: BytePoly_32 = bigint_nondet_quot!(ctx, x1486, x1, 32);
    let x1488: BytePoly_32 = bigint_nondet_rem!(ctx, x1486, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1487, x1, 64), x1488, 64),
            x1486,
            64
        ),
        260103,
        4,
    )?;
    let x1489: BytePoly_32 = bigint_add!(bigint_sub!(x5, x1482, 32), x1, 32);
    let x1490: BytePoly_32 = bigint_nondet_inv!(ctx, x1489, x1, 32);
    let x1491: BytePoly_64 = bigint_mul!(x1489, x1490, 64);
    let x1492: BytePoly_66 = bigint_nondet_quot!(ctx, x1491, x1, 66);
    let x1493: BytePoly_32 = bigint_nondet_rem!(ctx, x1491, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1492, x1, 98), x1493, 98),
            x1491,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1493, x0, 32), 34, 1)?;
    let x1494: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x1488, 32), x1, 32), x1490, 64);
    let x1495: BytePoly_66 = bigint_nondet_quot!(ctx, x1494, x1, 66);
    let x1496: BytePoly_32 = bigint_nondet_rem!(ctx, x1494, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1495, x1, 98), x1496, 98),
            x1494,
            98
        ),
        536459,
        4,
    )?;
    let x1497: BytePoly_64 = bigint_add!(
        bigint_sub!(x1488, bigint_mul!(x1496, x1482, 64), 64),
        x1,
        64
    );
    let x1498: BytePoly_64 = bigint_nondet_quot!(ctx, x1497, x1, 64);
    let x1499: BytePoly_32 = bigint_nondet_rem!(ctx, x1497, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1498, x1, 96), x1499, 96),
            x1497,
            96
        ),
        520203,
        4,
    )?;
    let x1500: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x1496, x1496, 64), x1482, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x1501: BytePoly_66 = bigint_nondet_quot!(ctx, x1500, x1, 66);
    let x1502: BytePoly_32 = bigint_nondet_rem!(ctx, x1500, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1501, x1, 98), x1502, 98),
            x1500,
            98
        ),
        536459,
        4,
    )?;
    let x1503: BytePoly_64 = bigint_mul!(x1496, x1502, 64);
    let x1504: BytePoly_66 = bigint_nondet_quot!(ctx, x1503, x1, 66);
    let x1505: BytePoly_32 = bigint_nondet_rem!(ctx, x1503, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1504, x1, 98), x1505, 98),
            x1503,
            98
        ),
        536459,
        4,
    )?;
    let x1506: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x1505, x1499, 32), 32), x1, 32);
    let x1507: BytePoly_32 = bigint_nondet_quot!(ctx, x1506, x1, 32);
    let x1508: BytePoly_32 = bigint_nondet_rem!(ctx, x1506, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1507, x1, 64), x1508, 64),
            x1506,
            64
        ),
        260103,
        4,
    )?;
    let x1509: BytePoly_32 = bigint_add!(bigint_sub!(x5, x1502, 32), x1, 32);
    let x1510: BytePoly_32 = bigint_nondet_inv!(ctx, x1509, x1, 32);
    let x1511: BytePoly_64 = bigint_mul!(x1509, x1510, 64);
    let x1512: BytePoly_66 = bigint_nondet_quot!(ctx, x1511, x1, 66);
    let x1513: BytePoly_32 = bigint_nondet_rem!(ctx, x1511, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1512, x1, 98), x1513, 98),
            x1511,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1513, x0, 32), 34, 1)?;
    let x1514: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x1508, 32), x1, 32), x1510, 64);
    let x1515: BytePoly_66 = bigint_nondet_quot!(ctx, x1514, x1, 66);
    let x1516: BytePoly_32 = bigint_nondet_rem!(ctx, x1514, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1515, x1, 98), x1516, 98),
            x1514,
            98
        ),
        536459,
        4,
    )?;
    let x1517: BytePoly_64 = bigint_add!(
        bigint_sub!(x1508, bigint_mul!(x1516, x1502, 64), 64),
        x1,
        64
    );
    let x1518: BytePoly_64 = bigint_nondet_quot!(ctx, x1517, x1, 64);
    let x1519: BytePoly_32 = bigint_nondet_rem!(ctx, x1517, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1518, x1, 96), x1519, 96),
            x1517,
            96
        ),
        520203,
        4,
    )?;
    let x1520: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x1516, x1516, 64), x1502, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x1521: BytePoly_66 = bigint_nondet_quot!(ctx, x1520, x1, 66);
    let x1522: BytePoly_32 = bigint_nondet_rem!(ctx, x1520, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1521, x1, 98), x1522, 98),
            x1520,
            98
        ),
        536459,
        4,
    )?;
    let x1523: BytePoly_64 = bigint_mul!(x1516, x1522, 64);
    let x1524: BytePoly_66 = bigint_nondet_quot!(ctx, x1523, x1, 66);
    let x1525: BytePoly_32 = bigint_nondet_rem!(ctx, x1523, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1524, x1, 98), x1525, 98),
            x1523,
            98
        ),
        536459,
        4,
    )?;
    let x1526: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x1525, x1519, 32), 32), x1, 32);
    let x1527: BytePoly_32 = bigint_nondet_quot!(ctx, x1526, x1, 32);
    let x1528: BytePoly_32 = bigint_nondet_rem!(ctx, x1526, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1527, x1, 64), x1528, 64),
            x1526,
            64
        ),
        260103,
        4,
    )?;
    let x1529: BytePoly_32 = bigint_add!(bigint_sub!(x5, x1522, 32), x1, 32);
    let x1530: BytePoly_32 = bigint_nondet_inv!(ctx, x1529, x1, 32);
    let x1531: BytePoly_64 = bigint_mul!(x1529, x1530, 64);
    let x1532: BytePoly_66 = bigint_nondet_quot!(ctx, x1531, x1, 66);
    let x1533: BytePoly_32 = bigint_nondet_rem!(ctx, x1531, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1532, x1, 98), x1533, 98),
            x1531,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1533, x0, 32), 34, 1)?;
    let x1534: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x1528, 32), x1, 32), x1530, 64);
    let x1535: BytePoly_66 = bigint_nondet_quot!(ctx, x1534, x1, 66);
    let x1536: BytePoly_32 = bigint_nondet_rem!(ctx, x1534, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1535, x1, 98), x1536, 98),
            x1534,
            98
        ),
        536459,
        4,
    )?;
    let x1537: BytePoly_64 = bigint_add!(
        bigint_sub!(x1528, bigint_mul!(x1536, x1522, 64), 64),
        x1,
        64
    );
    let x1538: BytePoly_64 = bigint_nondet_quot!(ctx, x1537, x1, 64);
    let x1539: BytePoly_32 = bigint_nondet_rem!(ctx, x1537, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1538, x1, 96), x1539, 96),
            x1537,
            96
        ),
        520203,
        4,
    )?;
    let x1540: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x1536, x1536, 64), x1522, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x1541: BytePoly_66 = bigint_nondet_quot!(ctx, x1540, x1, 66);
    let x1542: BytePoly_32 = bigint_nondet_rem!(ctx, x1540, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1541, x1, 98), x1542, 98),
            x1540,
            98
        ),
        536459,
        4,
    )?;
    let x1543: BytePoly_64 = bigint_mul!(x1536, x1542, 64);
    let x1544: BytePoly_66 = bigint_nondet_quot!(ctx, x1543, x1, 66);
    let x1545: BytePoly_32 = bigint_nondet_rem!(ctx, x1543, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1544, x1, 98), x1545, 98),
            x1543,
            98
        ),
        536459,
        4,
    )?;
    let x1546: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x1545, x1539, 32), 32), x1, 32);
    let x1547: BytePoly_32 = bigint_nondet_quot!(ctx, x1546, x1, 32);
    let x1548: BytePoly_32 = bigint_nondet_rem!(ctx, x1546, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1547, x1, 64), x1548, 64),
            x1546,
            64
        ),
        260103,
        4,
    )?;
    let x1549: BytePoly_32 = bigint_add!(bigint_sub!(x5, x1542, 32), x1, 32);
    let x1550: BytePoly_32 = bigint_nondet_inv!(ctx, x1549, x1, 32);
    let x1551: BytePoly_64 = bigint_mul!(x1549, x1550, 64);
    let x1552: BytePoly_66 = bigint_nondet_quot!(ctx, x1551, x1, 66);
    let x1553: BytePoly_32 = bigint_nondet_rem!(ctx, x1551, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1552, x1, 98), x1553, 98),
            x1551,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1553, x0, 32), 34, 1)?;
    let x1554: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x1548, 32), x1, 32), x1550, 64);
    let x1555: BytePoly_66 = bigint_nondet_quot!(ctx, x1554, x1, 66);
    let x1556: BytePoly_32 = bigint_nondet_rem!(ctx, x1554, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1555, x1, 98), x1556, 98),
            x1554,
            98
        ),
        536459,
        4,
    )?;
    let x1557: BytePoly_64 = bigint_add!(
        bigint_sub!(x1548, bigint_mul!(x1556, x1542, 64), 64),
        x1,
        64
    );
    let x1558: BytePoly_64 = bigint_nondet_quot!(ctx, x1557, x1, 64);
    let x1559: BytePoly_32 = bigint_nondet_rem!(ctx, x1557, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1558, x1, 96), x1559, 96),
            x1557,
            96
        ),
        520203,
        4,
    )?;
    let x1560: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x1556, x1556, 64), x1542, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x1561: BytePoly_66 = bigint_nondet_quot!(ctx, x1560, x1, 66);
    let x1562: BytePoly_32 = bigint_nondet_rem!(ctx, x1560, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1561, x1, 98), x1562, 98),
            x1560,
            98
        ),
        536459,
        4,
    )?;
    let x1563: BytePoly_64 = bigint_mul!(x1556, x1562, 64);
    let x1564: BytePoly_66 = bigint_nondet_quot!(ctx, x1563, x1, 66);
    let x1565: BytePoly_32 = bigint_nondet_rem!(ctx, x1563, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1564, x1, 98), x1565, 98),
            x1563,
            98
        ),
        536459,
        4,
    )?;
    let x1566: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x1565, x1559, 32), 32), x1, 32);
    let x1567: BytePoly_32 = bigint_nondet_quot!(ctx, x1566, x1, 32);
    let x1568: BytePoly_32 = bigint_nondet_rem!(ctx, x1566, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1567, x1, 64), x1568, 64),
            x1566,
            64
        ),
        260103,
        4,
    )?;
    let x1569: BytePoly_32 = bigint_add!(bigint_sub!(x5, x1562, 32), x1, 32);
    let x1570: BytePoly_32 = bigint_nondet_inv!(ctx, x1569, x1, 32);
    let x1571: BytePoly_64 = bigint_mul!(x1569, x1570, 64);
    let x1572: BytePoly_66 = bigint_nondet_quot!(ctx, x1571, x1, 66);
    let x1573: BytePoly_32 = bigint_nondet_rem!(ctx, x1571, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1572, x1, 98), x1573, 98),
            x1571,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1573, x0, 32), 34, 1)?;
    let x1574: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x1568, 32), x1, 32), x1570, 64);
    let x1575: BytePoly_66 = bigint_nondet_quot!(ctx, x1574, x1, 66);
    let x1576: BytePoly_32 = bigint_nondet_rem!(ctx, x1574, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1575, x1, 98), x1576, 98),
            x1574,
            98
        ),
        536459,
        4,
    )?;
    let x1577: BytePoly_64 = bigint_add!(
        bigint_sub!(x1568, bigint_mul!(x1576, x1562, 64), 64),
        x1,
        64
    );
    let x1578: BytePoly_64 = bigint_nondet_quot!(ctx, x1577, x1, 64);
    let x1579: BytePoly_32 = bigint_nondet_rem!(ctx, x1577, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1578, x1, 96), x1579, 96),
            x1577,
            96
        ),
        520203,
        4,
    )?;
    let x1580: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x1576, x1576, 64), x1562, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x1581: BytePoly_66 = bigint_nondet_quot!(ctx, x1580, x1, 66);
    let x1582: BytePoly_32 = bigint_nondet_rem!(ctx, x1580, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1581, x1, 98), x1582, 98),
            x1580,
            98
        ),
        536459,
        4,
    )?;
    let x1583: BytePoly_64 = bigint_mul!(x1576, x1582, 64);
    let x1584: BytePoly_66 = bigint_nondet_quot!(ctx, x1583, x1, 66);
    let x1585: BytePoly_32 = bigint_nondet_rem!(ctx, x1583, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1584, x1, 98), x1585, 98),
            x1583,
            98
        ),
        536459,
        4,
    )?;
    let x1586: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x1585, x1579, 32), 32), x1, 32);
    let x1587: BytePoly_32 = bigint_nondet_quot!(ctx, x1586, x1, 32);
    let x1588: BytePoly_32 = bigint_nondet_rem!(ctx, x1586, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1587, x1, 64), x1588, 64),
            x1586,
            64
        ),
        260103,
        4,
    )?;
    let x1589: BytePoly_32 = bigint_add!(bigint_sub!(x5, x1582, 32), x1, 32);
    let x1590: BytePoly_32 = bigint_nondet_inv!(ctx, x1589, x1, 32);
    let x1591: BytePoly_64 = bigint_mul!(x1589, x1590, 64);
    let x1592: BytePoly_66 = bigint_nondet_quot!(ctx, x1591, x1, 66);
    let x1593: BytePoly_32 = bigint_nondet_rem!(ctx, x1591, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1592, x1, 98), x1593, 98),
            x1591,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1593, x0, 32), 34, 1)?;
    let x1594: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x1588, 32), x1, 32), x1590, 64);
    let x1595: BytePoly_66 = bigint_nondet_quot!(ctx, x1594, x1, 66);
    let x1596: BytePoly_32 = bigint_nondet_rem!(ctx, x1594, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1595, x1, 98), x1596, 98),
            x1594,
            98
        ),
        536459,
        4,
    )?;
    let x1597: BytePoly_64 = bigint_add!(
        bigint_sub!(x1588, bigint_mul!(x1596, x1582, 64), 64),
        x1,
        64
    );
    let x1598: BytePoly_64 = bigint_nondet_quot!(ctx, x1597, x1, 64);
    let x1599: BytePoly_32 = bigint_nondet_rem!(ctx, x1597, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1598, x1, 96), x1599, 96),
            x1597,
            96
        ),
        520203,
        4,
    )?;
    let x1600: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x1596, x1596, 64), x1582, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x1601: BytePoly_66 = bigint_nondet_quot!(ctx, x1600, x1, 66);
    let x1602: BytePoly_32 = bigint_nondet_rem!(ctx, x1600, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1601, x1, 98), x1602, 98),
            x1600,
            98
        ),
        536459,
        4,
    )?;
    let x1603: BytePoly_64 = bigint_mul!(x1596, x1602, 64);
    let x1604: BytePoly_66 = bigint_nondet_quot!(ctx, x1603, x1, 66);
    let x1605: BytePoly_32 = bigint_nondet_rem!(ctx, x1603, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1604, x1, 98), x1605, 98),
            x1603,
            98
        ),
        536459,
        4,
    )?;
    let x1606: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x1605, x1599, 32), 32), x1, 32);
    let x1607: BytePoly_32 = bigint_nondet_quot!(ctx, x1606, x1, 32);
    let x1608: BytePoly_32 = bigint_nondet_rem!(ctx, x1606, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1607, x1, 64), x1608, 64),
            x1606,
            64
        ),
        260103,
        4,
    )?;
    let x1609: BytePoly_32 = bigint_add!(bigint_sub!(x5, x1602, 32), x1, 32);
    let x1610: BytePoly_32 = bigint_nondet_inv!(ctx, x1609, x1, 32);
    let x1611: BytePoly_64 = bigint_mul!(x1609, x1610, 64);
    let x1612: BytePoly_66 = bigint_nondet_quot!(ctx, x1611, x1, 66);
    let x1613: BytePoly_32 = bigint_nondet_rem!(ctx, x1611, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1612, x1, 98), x1613, 98),
            x1611,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1613, x0, 32), 34, 1)?;
    let x1614: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x1608, 32), x1, 32), x1610, 64);
    let x1615: BytePoly_66 = bigint_nondet_quot!(ctx, x1614, x1, 66);
    let x1616: BytePoly_32 = bigint_nondet_rem!(ctx, x1614, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1615, x1, 98), x1616, 98),
            x1614,
            98
        ),
        536459,
        4,
    )?;
    let x1617: BytePoly_64 = bigint_add!(
        bigint_sub!(x1608, bigint_mul!(x1616, x1602, 64), 64),
        x1,
        64
    );
    let x1618: BytePoly_64 = bigint_nondet_quot!(ctx, x1617, x1, 64);
    let x1619: BytePoly_32 = bigint_nondet_rem!(ctx, x1617, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1618, x1, 96), x1619, 96),
            x1617,
            96
        ),
        520203,
        4,
    )?;
    let x1620: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x1616, x1616, 64), x1602, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x1621: BytePoly_66 = bigint_nondet_quot!(ctx, x1620, x1, 66);
    let x1622: BytePoly_32 = bigint_nondet_rem!(ctx, x1620, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1621, x1, 98), x1622, 98),
            x1620,
            98
        ),
        536459,
        4,
    )?;
    let x1623: BytePoly_64 = bigint_mul!(x1616, x1622, 64);
    let x1624: BytePoly_66 = bigint_nondet_quot!(ctx, x1623, x1, 66);
    let x1625: BytePoly_32 = bigint_nondet_rem!(ctx, x1623, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1624, x1, 98), x1625, 98),
            x1623,
            98
        ),
        536459,
        4,
    )?;
    let x1626: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x1625, x1619, 32), 32), x1, 32);
    let x1627: BytePoly_32 = bigint_nondet_quot!(ctx, x1626, x1, 32);
    let x1628: BytePoly_32 = bigint_nondet_rem!(ctx, x1626, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1627, x1, 64), x1628, 64),
            x1626,
            64
        ),
        260103,
        4,
    )?;
    let x1629: BytePoly_32 = bigint_add!(bigint_sub!(x5, x1622, 32), x1, 32);
    let x1630: BytePoly_32 = bigint_nondet_inv!(ctx, x1629, x1, 32);
    let x1631: BytePoly_64 = bigint_mul!(x1629, x1630, 64);
    let x1632: BytePoly_66 = bigint_nondet_quot!(ctx, x1631, x1, 66);
    let x1633: BytePoly_32 = bigint_nondet_rem!(ctx, x1631, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1632, x1, 98), x1633, 98),
            x1631,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1633, x0, 32), 34, 1)?;
    let x1634: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x1628, 32), x1, 32), x1630, 64);
    let x1635: BytePoly_66 = bigint_nondet_quot!(ctx, x1634, x1, 66);
    let x1636: BytePoly_32 = bigint_nondet_rem!(ctx, x1634, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1635, x1, 98), x1636, 98),
            x1634,
            98
        ),
        536459,
        4,
    )?;
    let x1637: BytePoly_64 = bigint_add!(
        bigint_sub!(x1628, bigint_mul!(x1636, x1622, 64), 64),
        x1,
        64
    );
    let x1638: BytePoly_64 = bigint_nondet_quot!(ctx, x1637, x1, 64);
    let x1639: BytePoly_32 = bigint_nondet_rem!(ctx, x1637, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1638, x1, 96), x1639, 96),
            x1637,
            96
        ),
        520203,
        4,
    )?;
    let x1640: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x1636, x1636, 64), x1622, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x1641: BytePoly_66 = bigint_nondet_quot!(ctx, x1640, x1, 66);
    let x1642: BytePoly_32 = bigint_nondet_rem!(ctx, x1640, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1641, x1, 98), x1642, 98),
            x1640,
            98
        ),
        536459,
        4,
    )?;
    let x1643: BytePoly_64 = bigint_mul!(x1636, x1642, 64);
    let x1644: BytePoly_66 = bigint_nondet_quot!(ctx, x1643, x1, 66);
    let x1645: BytePoly_32 = bigint_nondet_rem!(ctx, x1643, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1644, x1, 98), x1645, 98),
            x1643,
            98
        ),
        536459,
        4,
    )?;
    let x1646: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x1645, x1639, 32), 32), x1, 32);
    let x1647: BytePoly_32 = bigint_nondet_quot!(ctx, x1646, x1, 32);
    let x1648: BytePoly_32 = bigint_nondet_rem!(ctx, x1646, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1647, x1, 64), x1648, 64),
            x1646,
            64
        ),
        260103,
        4,
    )?;
    let x1649: BytePoly_32 = bigint_add!(bigint_sub!(x5, x1642, 32), x1, 32);
    let x1650: BytePoly_32 = bigint_nondet_inv!(ctx, x1649, x1, 32);
    let x1651: BytePoly_64 = bigint_mul!(x1649, x1650, 64);
    let x1652: BytePoly_66 = bigint_nondet_quot!(ctx, x1651, x1, 66);
    let x1653: BytePoly_32 = bigint_nondet_rem!(ctx, x1651, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1652, x1, 98), x1653, 98),
            x1651,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1653, x0, 32), 34, 1)?;
    let x1654: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x1648, 32), x1, 32), x1650, 64);
    let x1655: BytePoly_66 = bigint_nondet_quot!(ctx, x1654, x1, 66);
    let x1656: BytePoly_32 = bigint_nondet_rem!(ctx, x1654, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1655, x1, 98), x1656, 98),
            x1654,
            98
        ),
        536459,
        4,
    )?;
    let x1657: BytePoly_64 = bigint_add!(
        bigint_sub!(x1648, bigint_mul!(x1656, x1642, 64), 64),
        x1,
        64
    );
    let x1658: BytePoly_64 = bigint_nondet_quot!(ctx, x1657, x1, 64);
    let x1659: BytePoly_32 = bigint_nondet_rem!(ctx, x1657, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1658, x1, 96), x1659, 96),
            x1657,
            96
        ),
        520203,
        4,
    )?;
    let x1660: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x1656, x1656, 64), x1642, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x1661: BytePoly_66 = bigint_nondet_quot!(ctx, x1660, x1, 66);
    let x1662: BytePoly_32 = bigint_nondet_rem!(ctx, x1660, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1661, x1, 98), x1662, 98),
            x1660,
            98
        ),
        536459,
        4,
    )?;
    let x1663: BytePoly_64 = bigint_mul!(x1656, x1662, 64);
    let x1664: BytePoly_66 = bigint_nondet_quot!(ctx, x1663, x1, 66);
    let x1665: BytePoly_32 = bigint_nondet_rem!(ctx, x1663, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1664, x1, 98), x1665, 98),
            x1663,
            98
        ),
        536459,
        4,
    )?;
    let x1666: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x1665, x1659, 32), 32), x1, 32);
    let x1667: BytePoly_32 = bigint_nondet_quot!(ctx, x1666, x1, 32);
    let x1668: BytePoly_32 = bigint_nondet_rem!(ctx, x1666, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1667, x1, 64), x1668, 64),
            x1666,
            64
        ),
        260103,
        4,
    )?;
    let x1669: BytePoly_32 = bigint_add!(bigint_sub!(x5, x1662, 32), x1, 32);
    let x1670: BytePoly_32 = bigint_nondet_inv!(ctx, x1669, x1, 32);
    let x1671: BytePoly_64 = bigint_mul!(x1669, x1670, 64);
    let x1672: BytePoly_66 = bigint_nondet_quot!(ctx, x1671, x1, 66);
    let x1673: BytePoly_32 = bigint_nondet_rem!(ctx, x1671, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1672, x1, 98), x1673, 98),
            x1671,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1673, x0, 32), 34, 1)?;
    let x1674: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x1668, 32), x1, 32), x1670, 64);
    let x1675: BytePoly_66 = bigint_nondet_quot!(ctx, x1674, x1, 66);
    let x1676: BytePoly_32 = bigint_nondet_rem!(ctx, x1674, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1675, x1, 98), x1676, 98),
            x1674,
            98
        ),
        536459,
        4,
    )?;
    let x1677: BytePoly_64 = bigint_add!(
        bigint_sub!(x1668, bigint_mul!(x1676, x1662, 64), 64),
        x1,
        64
    );
    let x1678: BytePoly_64 = bigint_nondet_quot!(ctx, x1677, x1, 64);
    let x1679: BytePoly_32 = bigint_nondet_rem!(ctx, x1677, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1678, x1, 96), x1679, 96),
            x1677,
            96
        ),
        520203,
        4,
    )?;
    let x1680: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x1676, x1676, 64), x1662, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x1681: BytePoly_66 = bigint_nondet_quot!(ctx, x1680, x1, 66);
    let x1682: BytePoly_32 = bigint_nondet_rem!(ctx, x1680, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1681, x1, 98), x1682, 98),
            x1680,
            98
        ),
        536459,
        4,
    )?;
    let x1683: BytePoly_64 = bigint_mul!(x1676, x1682, 64);
    let x1684: BytePoly_66 = bigint_nondet_quot!(ctx, x1683, x1, 66);
    let x1685: BytePoly_32 = bigint_nondet_rem!(ctx, x1683, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1684, x1, 98), x1685, 98),
            x1683,
            98
        ),
        536459,
        4,
    )?;
    let x1686: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x1685, x1679, 32), 32), x1, 32);
    let x1687: BytePoly_32 = bigint_nondet_quot!(ctx, x1686, x1, 32);
    let x1688: BytePoly_32 = bigint_nondet_rem!(ctx, x1686, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1687, x1, 64), x1688, 64),
            x1686,
            64
        ),
        260103,
        4,
    )?;
    let x1689: BytePoly_32 = bigint_add!(bigint_sub!(x5, x1682, 32), x1, 32);
    let x1690: BytePoly_32 = bigint_nondet_inv!(ctx, x1689, x1, 32);
    let x1691: BytePoly_64 = bigint_mul!(x1689, x1690, 64);
    let x1692: BytePoly_66 = bigint_nondet_quot!(ctx, x1691, x1, 66);
    let x1693: BytePoly_32 = bigint_nondet_rem!(ctx, x1691, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1692, x1, 98), x1693, 98),
            x1691,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1693, x0, 32), 34, 1)?;
    let x1694: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x1688, 32), x1, 32), x1690, 64);
    let x1695: BytePoly_66 = bigint_nondet_quot!(ctx, x1694, x1, 66);
    let x1696: BytePoly_32 = bigint_nondet_rem!(ctx, x1694, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1695, x1, 98), x1696, 98),
            x1694,
            98
        ),
        536459,
        4,
    )?;
    let x1697: BytePoly_64 = bigint_add!(
        bigint_sub!(x1688, bigint_mul!(x1696, x1682, 64), 64),
        x1,
        64
    );
    let x1698: BytePoly_64 = bigint_nondet_quot!(ctx, x1697, x1, 64);
    let x1699: BytePoly_32 = bigint_nondet_rem!(ctx, x1697, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1698, x1, 96), x1699, 96),
            x1697,
            96
        ),
        520203,
        4,
    )?;
    let x1700: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x1696, x1696, 64), x1682, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x1701: BytePoly_66 = bigint_nondet_quot!(ctx, x1700, x1, 66);
    let x1702: BytePoly_32 = bigint_nondet_rem!(ctx, x1700, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1701, x1, 98), x1702, 98),
            x1700,
            98
        ),
        536459,
        4,
    )?;
    let x1703: BytePoly_64 = bigint_mul!(x1696, x1702, 64);
    let x1704: BytePoly_66 = bigint_nondet_quot!(ctx, x1703, x1, 66);
    let x1705: BytePoly_32 = bigint_nondet_rem!(ctx, x1703, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1704, x1, 98), x1705, 98),
            x1703,
            98
        ),
        536459,
        4,
    )?;
    let x1706: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x1705, x1699, 32), 32), x1, 32);
    let x1707: BytePoly_32 = bigint_nondet_quot!(ctx, x1706, x1, 32);
    let x1708: BytePoly_32 = bigint_nondet_rem!(ctx, x1706, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1707, x1, 64), x1708, 64),
            x1706,
            64
        ),
        260103,
        4,
    )?;
    let x1709: BytePoly_32 = bigint_add!(bigint_sub!(x5, x1702, 32), x1, 32);
    let x1710: BytePoly_32 = bigint_nondet_inv!(ctx, x1709, x1, 32);
    let x1711: BytePoly_64 = bigint_mul!(x1709, x1710, 64);
    let x1712: BytePoly_66 = bigint_nondet_quot!(ctx, x1711, x1, 66);
    let x1713: BytePoly_32 = bigint_nondet_rem!(ctx, x1711, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1712, x1, 98), x1713, 98),
            x1711,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1713, x0, 32), 34, 1)?;
    let x1714: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x1708, 32), x1, 32), x1710, 64);
    let x1715: BytePoly_66 = bigint_nondet_quot!(ctx, x1714, x1, 66);
    let x1716: BytePoly_32 = bigint_nondet_rem!(ctx, x1714, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1715, x1, 98), x1716, 98),
            x1714,
            98
        ),
        536459,
        4,
    )?;
    let x1717: BytePoly_64 = bigint_add!(
        bigint_sub!(x1708, bigint_mul!(x1716, x1702, 64), 64),
        x1,
        64
    );
    let x1718: BytePoly_64 = bigint_nondet_quot!(ctx, x1717, x1, 64);
    let x1719: BytePoly_32 = bigint_nondet_rem!(ctx, x1717, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1718, x1, 96), x1719, 96),
            x1717,
            96
        ),
        520203,
        4,
    )?;
    let x1720: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x1716, x1716, 64), x1702, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x1721: BytePoly_66 = bigint_nondet_quot!(ctx, x1720, x1, 66);
    let x1722: BytePoly_32 = bigint_nondet_rem!(ctx, x1720, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1721, x1, 98), x1722, 98),
            x1720,
            98
        ),
        536459,
        4,
    )?;
    let x1723: BytePoly_64 = bigint_mul!(x1716, x1722, 64);
    let x1724: BytePoly_66 = bigint_nondet_quot!(ctx, x1723, x1, 66);
    let x1725: BytePoly_32 = bigint_nondet_rem!(ctx, x1723, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1724, x1, 98), x1725, 98),
            x1723,
            98
        ),
        536459,
        4,
    )?;
    let x1726: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x1725, x1719, 32), 32), x1, 32);
    let x1727: BytePoly_32 = bigint_nondet_quot!(ctx, x1726, x1, 32);
    let x1728: BytePoly_32 = bigint_nondet_rem!(ctx, x1726, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1727, x1, 64), x1728, 64),
            x1726,
            64
        ),
        260103,
        4,
    )?;
    let x1729: BytePoly_32 = bigint_add!(bigint_sub!(x5, x1722, 32), x1, 32);
    let x1730: BytePoly_32 = bigint_nondet_inv!(ctx, x1729, x1, 32);
    let x1731: BytePoly_64 = bigint_mul!(x1729, x1730, 64);
    let x1732: BytePoly_66 = bigint_nondet_quot!(ctx, x1731, x1, 66);
    let x1733: BytePoly_32 = bigint_nondet_rem!(ctx, x1731, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1732, x1, 98), x1733, 98),
            x1731,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1733, x0, 32), 34, 1)?;
    let x1734: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x1728, 32), x1, 32), x1730, 64);
    let x1735: BytePoly_66 = bigint_nondet_quot!(ctx, x1734, x1, 66);
    let x1736: BytePoly_32 = bigint_nondet_rem!(ctx, x1734, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1735, x1, 98), x1736, 98),
            x1734,
            98
        ),
        536459,
        4,
    )?;
    let x1737: BytePoly_64 = bigint_add!(
        bigint_sub!(x1728, bigint_mul!(x1736, x1722, 64), 64),
        x1,
        64
    );
    let x1738: BytePoly_64 = bigint_nondet_quot!(ctx, x1737, x1, 64);
    let x1739: BytePoly_32 = bigint_nondet_rem!(ctx, x1737, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1738, x1, 96), x1739, 96),
            x1737,
            96
        ),
        520203,
        4,
    )?;
    let x1740: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x1736, x1736, 64), x1722, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x1741: BytePoly_66 = bigint_nondet_quot!(ctx, x1740, x1, 66);
    let x1742: BytePoly_32 = bigint_nondet_rem!(ctx, x1740, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1741, x1, 98), x1742, 98),
            x1740,
            98
        ),
        536459,
        4,
    )?;
    let x1743: BytePoly_64 = bigint_mul!(x1736, x1742, 64);
    let x1744: BytePoly_66 = bigint_nondet_quot!(ctx, x1743, x1, 66);
    let x1745: BytePoly_32 = bigint_nondet_rem!(ctx, x1743, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1744, x1, 98), x1745, 98),
            x1743,
            98
        ),
        536459,
        4,
    )?;
    let x1746: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x1745, x1739, 32), 32), x1, 32);
    let x1747: BytePoly_32 = bigint_nondet_quot!(ctx, x1746, x1, 32);
    let x1748: BytePoly_32 = bigint_nondet_rem!(ctx, x1746, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1747, x1, 64), x1748, 64),
            x1746,
            64
        ),
        260103,
        4,
    )?;
    let x1749: BytePoly_32 = bigint_add!(bigint_sub!(x5, x1742, 32), x1, 32);
    let x1750: BytePoly_32 = bigint_nondet_inv!(ctx, x1749, x1, 32);
    let x1751: BytePoly_64 = bigint_mul!(x1749, x1750, 64);
    let x1752: BytePoly_66 = bigint_nondet_quot!(ctx, x1751, x1, 66);
    let x1753: BytePoly_32 = bigint_nondet_rem!(ctx, x1751, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1752, x1, 98), x1753, 98),
            x1751,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1753, x0, 32), 34, 1)?;
    let x1754: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x1748, 32), x1, 32), x1750, 64);
    let x1755: BytePoly_66 = bigint_nondet_quot!(ctx, x1754, x1, 66);
    let x1756: BytePoly_32 = bigint_nondet_rem!(ctx, x1754, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1755, x1, 98), x1756, 98),
            x1754,
            98
        ),
        536459,
        4,
    )?;
    let x1757: BytePoly_64 = bigint_add!(
        bigint_sub!(x1748, bigint_mul!(x1756, x1742, 64), 64),
        x1,
        64
    );
    let x1758: BytePoly_64 = bigint_nondet_quot!(ctx, x1757, x1, 64);
    let x1759: BytePoly_32 = bigint_nondet_rem!(ctx, x1757, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1758, x1, 96), x1759, 96),
            x1757,
            96
        ),
        520203,
        4,
    )?;
    let x1760: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x1756, x1756, 64), x1742, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x1761: BytePoly_66 = bigint_nondet_quot!(ctx, x1760, x1, 66);
    let x1762: BytePoly_32 = bigint_nondet_rem!(ctx, x1760, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1761, x1, 98), x1762, 98),
            x1760,
            98
        ),
        536459,
        4,
    )?;
    let x1763: BytePoly_64 = bigint_mul!(x1756, x1762, 64);
    let x1764: BytePoly_66 = bigint_nondet_quot!(ctx, x1763, x1, 66);
    let x1765: BytePoly_32 = bigint_nondet_rem!(ctx, x1763, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1764, x1, 98), x1765, 98),
            x1763,
            98
        ),
        536459,
        4,
    )?;
    let x1766: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x1765, x1759, 32), 32), x1, 32);
    let x1767: BytePoly_32 = bigint_nondet_quot!(ctx, x1766, x1, 32);
    let x1768: BytePoly_32 = bigint_nondet_rem!(ctx, x1766, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1767, x1, 64), x1768, 64),
            x1766,
            64
        ),
        260103,
        4,
    )?;
    let x1769: BytePoly_32 = bigint_add!(bigint_sub!(x5, x1762, 32), x1, 32);
    let x1770: BytePoly_32 = bigint_nondet_inv!(ctx, x1769, x1, 32);
    let x1771: BytePoly_64 = bigint_mul!(x1769, x1770, 64);
    let x1772: BytePoly_66 = bigint_nondet_quot!(ctx, x1771, x1, 66);
    let x1773: BytePoly_32 = bigint_nondet_rem!(ctx, x1771, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1772, x1, 98), x1773, 98),
            x1771,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1773, x0, 32), 34, 1)?;
    let x1774: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x1768, 32), x1, 32), x1770, 64);
    let x1775: BytePoly_66 = bigint_nondet_quot!(ctx, x1774, x1, 66);
    let x1776: BytePoly_32 = bigint_nondet_rem!(ctx, x1774, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1775, x1, 98), x1776, 98),
            x1774,
            98
        ),
        536459,
        4,
    )?;
    let x1777: BytePoly_64 = bigint_add!(
        bigint_sub!(x1768, bigint_mul!(x1776, x1762, 64), 64),
        x1,
        64
    );
    let x1778: BytePoly_64 = bigint_nondet_quot!(ctx, x1777, x1, 64);
    let x1779: BytePoly_32 = bigint_nondet_rem!(ctx, x1777, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1778, x1, 96), x1779, 96),
            x1777,
            96
        ),
        520203,
        4,
    )?;
    let x1780: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x1776, x1776, 64), x1762, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x1781: BytePoly_66 = bigint_nondet_quot!(ctx, x1780, x1, 66);
    let x1782: BytePoly_32 = bigint_nondet_rem!(ctx, x1780, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1781, x1, 98), x1782, 98),
            x1780,
            98
        ),
        536459,
        4,
    )?;
    let x1783: BytePoly_64 = bigint_mul!(x1776, x1782, 64);
    let x1784: BytePoly_66 = bigint_nondet_quot!(ctx, x1783, x1, 66);
    let x1785: BytePoly_32 = bigint_nondet_rem!(ctx, x1783, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1784, x1, 98), x1785, 98),
            x1783,
            98
        ),
        536459,
        4,
    )?;
    let x1786: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x1785, x1779, 32), 32), x1, 32);
    let x1787: BytePoly_32 = bigint_nondet_quot!(ctx, x1786, x1, 32);
    let x1788: BytePoly_32 = bigint_nondet_rem!(ctx, x1786, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1787, x1, 64), x1788, 64),
            x1786,
            64
        ),
        260103,
        4,
    )?;
    let x1789: BytePoly_32 = bigint_add!(bigint_sub!(x5, x1782, 32), x1, 32);
    let x1790: BytePoly_32 = bigint_nondet_inv!(ctx, x1789, x1, 32);
    let x1791: BytePoly_64 = bigint_mul!(x1789, x1790, 64);
    let x1792: BytePoly_66 = bigint_nondet_quot!(ctx, x1791, x1, 66);
    let x1793: BytePoly_32 = bigint_nondet_rem!(ctx, x1791, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1792, x1, 98), x1793, 98),
            x1791,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1793, x0, 32), 34, 1)?;
    let x1794: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x1788, 32), x1, 32), x1790, 64);
    let x1795: BytePoly_66 = bigint_nondet_quot!(ctx, x1794, x1, 66);
    let x1796: BytePoly_32 = bigint_nondet_rem!(ctx, x1794, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1795, x1, 98), x1796, 98),
            x1794,
            98
        ),
        536459,
        4,
    )?;
    let x1797: BytePoly_64 = bigint_add!(
        bigint_sub!(x1788, bigint_mul!(x1796, x1782, 64), 64),
        x1,
        64
    );
    let x1798: BytePoly_64 = bigint_nondet_quot!(ctx, x1797, x1, 64);
    let x1799: BytePoly_32 = bigint_nondet_rem!(ctx, x1797, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1798, x1, 96), x1799, 96),
            x1797,
            96
        ),
        520203,
        4,
    )?;
    let x1800: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x1796, x1796, 64), x1782, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x1801: BytePoly_66 = bigint_nondet_quot!(ctx, x1800, x1, 66);
    let x1802: BytePoly_32 = bigint_nondet_rem!(ctx, x1800, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1801, x1, 98), x1802, 98),
            x1800,
            98
        ),
        536459,
        4,
    )?;
    let x1803: BytePoly_64 = bigint_mul!(x1796, x1802, 64);
    let x1804: BytePoly_66 = bigint_nondet_quot!(ctx, x1803, x1, 66);
    let x1805: BytePoly_32 = bigint_nondet_rem!(ctx, x1803, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1804, x1, 98), x1805, 98),
            x1803,
            98
        ),
        536459,
        4,
    )?;
    let x1806: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x1805, x1799, 32), 32), x1, 32);
    let x1807: BytePoly_32 = bigint_nondet_quot!(ctx, x1806, x1, 32);
    let x1808: BytePoly_32 = bigint_nondet_rem!(ctx, x1806, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1807, x1, 64), x1808, 64),
            x1806,
            64
        ),
        260103,
        4,
    )?;
    let x1809: BytePoly_32 = bigint_add!(bigint_sub!(x5, x1802, 32), x1, 32);
    let x1810: BytePoly_32 = bigint_nondet_inv!(ctx, x1809, x1, 32);
    let x1811: BytePoly_64 = bigint_mul!(x1809, x1810, 64);
    let x1812: BytePoly_66 = bigint_nondet_quot!(ctx, x1811, x1, 66);
    let x1813: BytePoly_32 = bigint_nondet_rem!(ctx, x1811, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1812, x1, 98), x1813, 98),
            x1811,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1813, x0, 32), 34, 1)?;
    let x1814: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x1808, 32), x1, 32), x1810, 64);
    let x1815: BytePoly_66 = bigint_nondet_quot!(ctx, x1814, x1, 66);
    let x1816: BytePoly_32 = bigint_nondet_rem!(ctx, x1814, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1815, x1, 98), x1816, 98),
            x1814,
            98
        ),
        536459,
        4,
    )?;
    let x1817: BytePoly_64 = bigint_add!(
        bigint_sub!(x1808, bigint_mul!(x1816, x1802, 64), 64),
        x1,
        64
    );
    let x1818: BytePoly_64 = bigint_nondet_quot!(ctx, x1817, x1, 64);
    let x1819: BytePoly_32 = bigint_nondet_rem!(ctx, x1817, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1818, x1, 96), x1819, 96),
            x1817,
            96
        ),
        520203,
        4,
    )?;
    let x1820: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x1816, x1816, 64), x1802, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x1821: BytePoly_66 = bigint_nondet_quot!(ctx, x1820, x1, 66);
    let x1822: BytePoly_32 = bigint_nondet_rem!(ctx, x1820, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1821, x1, 98), x1822, 98),
            x1820,
            98
        ),
        536459,
        4,
    )?;
    let x1823: BytePoly_64 = bigint_mul!(x1816, x1822, 64);
    let x1824: BytePoly_66 = bigint_nondet_quot!(ctx, x1823, x1, 66);
    let x1825: BytePoly_32 = bigint_nondet_rem!(ctx, x1823, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1824, x1, 98), x1825, 98),
            x1823,
            98
        ),
        536459,
        4,
    )?;
    let x1826: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x1825, x1819, 32), 32), x1, 32);
    let x1827: BytePoly_32 = bigint_nondet_quot!(ctx, x1826, x1, 32);
    let x1828: BytePoly_32 = bigint_nondet_rem!(ctx, x1826, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1827, x1, 64), x1828, 64),
            x1826,
            64
        ),
        260103,
        4,
    )?;
    let x1829: BytePoly_32 = bigint_add!(bigint_sub!(x5, x1822, 32), x1, 32);
    let x1830: BytePoly_32 = bigint_nondet_inv!(ctx, x1829, x1, 32);
    let x1831: BytePoly_64 = bigint_mul!(x1829, x1830, 64);
    let x1832: BytePoly_66 = bigint_nondet_quot!(ctx, x1831, x1, 66);
    let x1833: BytePoly_32 = bigint_nondet_rem!(ctx, x1831, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1832, x1, 98), x1833, 98),
            x1831,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1833, x0, 32), 34, 1)?;
    let x1834: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x1828, 32), x1, 32), x1830, 64);
    let x1835: BytePoly_66 = bigint_nondet_quot!(ctx, x1834, x1, 66);
    let x1836: BytePoly_32 = bigint_nondet_rem!(ctx, x1834, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1835, x1, 98), x1836, 98),
            x1834,
            98
        ),
        536459,
        4,
    )?;
    let x1837: BytePoly_64 = bigint_add!(
        bigint_sub!(x1828, bigint_mul!(x1836, x1822, 64), 64),
        x1,
        64
    );
    let x1838: BytePoly_64 = bigint_nondet_quot!(ctx, x1837, x1, 64);
    let x1839: BytePoly_32 = bigint_nondet_rem!(ctx, x1837, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1838, x1, 96), x1839, 96),
            x1837,
            96
        ),
        520203,
        4,
    )?;
    let x1840: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x1836, x1836, 64), x1822, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x1841: BytePoly_66 = bigint_nondet_quot!(ctx, x1840, x1, 66);
    let x1842: BytePoly_32 = bigint_nondet_rem!(ctx, x1840, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1841, x1, 98), x1842, 98),
            x1840,
            98
        ),
        536459,
        4,
    )?;
    let x1843: BytePoly_64 = bigint_mul!(x1836, x1842, 64);
    let x1844: BytePoly_66 = bigint_nondet_quot!(ctx, x1843, x1, 66);
    let x1845: BytePoly_32 = bigint_nondet_rem!(ctx, x1843, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1844, x1, 98), x1845, 98),
            x1843,
            98
        ),
        536459,
        4,
    )?;
    let x1846: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x1845, x1839, 32), 32), x1, 32);
    let x1847: BytePoly_32 = bigint_nondet_quot!(ctx, x1846, x1, 32);
    let x1848: BytePoly_32 = bigint_nondet_rem!(ctx, x1846, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1847, x1, 64), x1848, 64),
            x1846,
            64
        ),
        260103,
        4,
    )?;
    let x1849: BytePoly_32 = bigint_add!(bigint_sub!(x5, x1842, 32), x1, 32);
    let x1850: BytePoly_32 = bigint_nondet_inv!(ctx, x1849, x1, 32);
    let x1851: BytePoly_64 = bigint_mul!(x1849, x1850, 64);
    let x1852: BytePoly_66 = bigint_nondet_quot!(ctx, x1851, x1, 66);
    let x1853: BytePoly_32 = bigint_nondet_rem!(ctx, x1851, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1852, x1, 98), x1853, 98),
            x1851,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1853, x0, 32), 34, 1)?;
    let x1854: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x1848, 32), x1, 32), x1850, 64);
    let x1855: BytePoly_66 = bigint_nondet_quot!(ctx, x1854, x1, 66);
    let x1856: BytePoly_32 = bigint_nondet_rem!(ctx, x1854, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1855, x1, 98), x1856, 98),
            x1854,
            98
        ),
        536459,
        4,
    )?;
    let x1857: BytePoly_64 = bigint_add!(
        bigint_sub!(x1848, bigint_mul!(x1856, x1842, 64), 64),
        x1,
        64
    );
    let x1858: BytePoly_64 = bigint_nondet_quot!(ctx, x1857, x1, 64);
    let x1859: BytePoly_32 = bigint_nondet_rem!(ctx, x1857, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1858, x1, 96), x1859, 96),
            x1857,
            96
        ),
        520203,
        4,
    )?;
    let x1860: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x1856, x1856, 64), x1842, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x1861: BytePoly_66 = bigint_nondet_quot!(ctx, x1860, x1, 66);
    let x1862: BytePoly_32 = bigint_nondet_rem!(ctx, x1860, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1861, x1, 98), x1862, 98),
            x1860,
            98
        ),
        536459,
        4,
    )?;
    let x1863: BytePoly_64 = bigint_mul!(x1856, x1862, 64);
    let x1864: BytePoly_66 = bigint_nondet_quot!(ctx, x1863, x1, 66);
    let x1865: BytePoly_32 = bigint_nondet_rem!(ctx, x1863, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1864, x1, 98), x1865, 98),
            x1863,
            98
        ),
        536459,
        4,
    )?;
    let x1866: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x1865, x1859, 32), 32), x1, 32);
    let x1867: BytePoly_32 = bigint_nondet_quot!(ctx, x1866, x1, 32);
    let x1868: BytePoly_32 = bigint_nondet_rem!(ctx, x1866, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1867, x1, 64), x1868, 64),
            x1866,
            64
        ),
        260103,
        4,
    )?;
    let x1869: BytePoly_32 = bigint_add!(bigint_sub!(x5, x1862, 32), x1, 32);
    let x1870: BytePoly_32 = bigint_nondet_inv!(ctx, x1869, x1, 32);
    let x1871: BytePoly_64 = bigint_mul!(x1869, x1870, 64);
    let x1872: BytePoly_66 = bigint_nondet_quot!(ctx, x1871, x1, 66);
    let x1873: BytePoly_32 = bigint_nondet_rem!(ctx, x1871, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1872, x1, 98), x1873, 98),
            x1871,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1873, x0, 32), 34, 1)?;
    let x1874: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x1868, 32), x1, 32), x1870, 64);
    let x1875: BytePoly_66 = bigint_nondet_quot!(ctx, x1874, x1, 66);
    let x1876: BytePoly_32 = bigint_nondet_rem!(ctx, x1874, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1875, x1, 98), x1876, 98),
            x1874,
            98
        ),
        536459,
        4,
    )?;
    let x1877: BytePoly_64 = bigint_add!(
        bigint_sub!(x1868, bigint_mul!(x1876, x1862, 64), 64),
        x1,
        64
    );
    let x1878: BytePoly_64 = bigint_nondet_quot!(ctx, x1877, x1, 64);
    let x1879: BytePoly_32 = bigint_nondet_rem!(ctx, x1877, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1878, x1, 96), x1879, 96),
            x1877,
            96
        ),
        520203,
        4,
    )?;
    let x1880: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x1876, x1876, 64), x1862, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x1881: BytePoly_66 = bigint_nondet_quot!(ctx, x1880, x1, 66);
    let x1882: BytePoly_32 = bigint_nondet_rem!(ctx, x1880, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1881, x1, 98), x1882, 98),
            x1880,
            98
        ),
        536459,
        4,
    )?;
    let x1883: BytePoly_64 = bigint_mul!(x1876, x1882, 64);
    let x1884: BytePoly_66 = bigint_nondet_quot!(ctx, x1883, x1, 66);
    let x1885: BytePoly_32 = bigint_nondet_rem!(ctx, x1883, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1884, x1, 98), x1885, 98),
            x1883,
            98
        ),
        536459,
        4,
    )?;
    let x1886: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x1885, x1879, 32), 32), x1, 32);
    let x1887: BytePoly_32 = bigint_nondet_quot!(ctx, x1886, x1, 32);
    let x1888: BytePoly_32 = bigint_nondet_rem!(ctx, x1886, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1887, x1, 64), x1888, 64),
            x1886,
            64
        ),
        260103,
        4,
    )?;
    let x1889: BytePoly_32 = bigint_add!(bigint_sub!(x5, x1882, 32), x1, 32);
    let x1890: BytePoly_32 = bigint_nondet_inv!(ctx, x1889, x1, 32);
    let x1891: BytePoly_64 = bigint_mul!(x1889, x1890, 64);
    let x1892: BytePoly_66 = bigint_nondet_quot!(ctx, x1891, x1, 66);
    let x1893: BytePoly_32 = bigint_nondet_rem!(ctx, x1891, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1892, x1, 98), x1893, 98),
            x1891,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1893, x0, 32), 34, 1)?;
    let x1894: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x1888, 32), x1, 32), x1890, 64);
    let x1895: BytePoly_66 = bigint_nondet_quot!(ctx, x1894, x1, 66);
    let x1896: BytePoly_32 = bigint_nondet_rem!(ctx, x1894, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1895, x1, 98), x1896, 98),
            x1894,
            98
        ),
        536459,
        4,
    )?;
    let x1897: BytePoly_64 = bigint_add!(
        bigint_sub!(x1888, bigint_mul!(x1896, x1882, 64), 64),
        x1,
        64
    );
    let x1898: BytePoly_64 = bigint_nondet_quot!(ctx, x1897, x1, 64);
    let x1899: BytePoly_32 = bigint_nondet_rem!(ctx, x1897, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1898, x1, 96), x1899, 96),
            x1897,
            96
        ),
        520203,
        4,
    )?;
    let x1900: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x1896, x1896, 64), x1882, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x1901: BytePoly_66 = bigint_nondet_quot!(ctx, x1900, x1, 66);
    let x1902: BytePoly_32 = bigint_nondet_rem!(ctx, x1900, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1901, x1, 98), x1902, 98),
            x1900,
            98
        ),
        536459,
        4,
    )?;
    let x1903: BytePoly_64 = bigint_mul!(x1896, x1902, 64);
    let x1904: BytePoly_66 = bigint_nondet_quot!(ctx, x1903, x1, 66);
    let x1905: BytePoly_32 = bigint_nondet_rem!(ctx, x1903, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1904, x1, 98), x1905, 98),
            x1903,
            98
        ),
        536459,
        4,
    )?;
    let x1906: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x1905, x1899, 32), 32), x1, 32);
    let x1907: BytePoly_32 = bigint_nondet_quot!(ctx, x1906, x1, 32);
    let x1908: BytePoly_32 = bigint_nondet_rem!(ctx, x1906, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1907, x1, 64), x1908, 64),
            x1906,
            64
        ),
        260103,
        4,
    )?;
    let x1909: BytePoly_32 = bigint_add!(bigint_sub!(x5, x1902, 32), x1, 32);
    let x1910: BytePoly_32 = bigint_nondet_inv!(ctx, x1909, x1, 32);
    let x1911: BytePoly_64 = bigint_mul!(x1909, x1910, 64);
    let x1912: BytePoly_66 = bigint_nondet_quot!(ctx, x1911, x1, 66);
    let x1913: BytePoly_32 = bigint_nondet_rem!(ctx, x1911, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1912, x1, 98), x1913, 98),
            x1911,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1913, x0, 32), 34, 1)?;
    let x1914: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x1908, 32), x1, 32), x1910, 64);
    let x1915: BytePoly_66 = bigint_nondet_quot!(ctx, x1914, x1, 66);
    let x1916: BytePoly_32 = bigint_nondet_rem!(ctx, x1914, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1915, x1, 98), x1916, 98),
            x1914,
            98
        ),
        536459,
        4,
    )?;
    let x1917: BytePoly_64 = bigint_add!(
        bigint_sub!(x1908, bigint_mul!(x1916, x1902, 64), 64),
        x1,
        64
    );
    let x1918: BytePoly_64 = bigint_nondet_quot!(ctx, x1917, x1, 64);
    let x1919: BytePoly_32 = bigint_nondet_rem!(ctx, x1917, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1918, x1, 96), x1919, 96),
            x1917,
            96
        ),
        520203,
        4,
    )?;
    let x1920: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x1916, x1916, 64), x1902, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x1921: BytePoly_66 = bigint_nondet_quot!(ctx, x1920, x1, 66);
    let x1922: BytePoly_32 = bigint_nondet_rem!(ctx, x1920, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1921, x1, 98), x1922, 98),
            x1920,
            98
        ),
        536459,
        4,
    )?;
    let x1923: BytePoly_64 = bigint_mul!(x1916, x1922, 64);
    let x1924: BytePoly_66 = bigint_nondet_quot!(ctx, x1923, x1, 66);
    let x1925: BytePoly_32 = bigint_nondet_rem!(ctx, x1923, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1924, x1, 98), x1925, 98),
            x1923,
            98
        ),
        536459,
        4,
    )?;
    let x1926: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x1925, x1919, 32), 32), x1, 32);
    let x1927: BytePoly_32 = bigint_nondet_quot!(ctx, x1926, x1, 32);
    let x1928: BytePoly_32 = bigint_nondet_rem!(ctx, x1926, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1927, x1, 64), x1928, 64),
            x1926,
            64
        ),
        260103,
        4,
    )?;
    let x1929: BytePoly_32 = bigint_add!(bigint_sub!(x5, x1922, 32), x1, 32);
    let x1930: BytePoly_32 = bigint_nondet_inv!(ctx, x1929, x1, 32);
    let x1931: BytePoly_64 = bigint_mul!(x1929, x1930, 64);
    let x1932: BytePoly_66 = bigint_nondet_quot!(ctx, x1931, x1, 66);
    let x1933: BytePoly_32 = bigint_nondet_rem!(ctx, x1931, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1932, x1, 98), x1933, 98),
            x1931,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1933, x0, 32), 34, 1)?;
    let x1934: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x1928, 32), x1, 32), x1930, 64);
    let x1935: BytePoly_66 = bigint_nondet_quot!(ctx, x1934, x1, 66);
    let x1936: BytePoly_32 = bigint_nondet_rem!(ctx, x1934, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1935, x1, 98), x1936, 98),
            x1934,
            98
        ),
        536459,
        4,
    )?;
    let x1937: BytePoly_64 = bigint_add!(
        bigint_sub!(x1928, bigint_mul!(x1936, x1922, 64), 64),
        x1,
        64
    );
    let x1938: BytePoly_64 = bigint_nondet_quot!(ctx, x1937, x1, 64);
    let x1939: BytePoly_32 = bigint_nondet_rem!(ctx, x1937, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1938, x1, 96), x1939, 96),
            x1937,
            96
        ),
        520203,
        4,
    )?;
    let x1940: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x1936, x1936, 64), x1922, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x1941: BytePoly_66 = bigint_nondet_quot!(ctx, x1940, x1, 66);
    let x1942: BytePoly_32 = bigint_nondet_rem!(ctx, x1940, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1941, x1, 98), x1942, 98),
            x1940,
            98
        ),
        536459,
        4,
    )?;
    let x1943: BytePoly_64 = bigint_mul!(x1936, x1942, 64);
    let x1944: BytePoly_66 = bigint_nondet_quot!(ctx, x1943, x1, 66);
    let x1945: BytePoly_32 = bigint_nondet_rem!(ctx, x1943, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1944, x1, 98), x1945, 98),
            x1943,
            98
        ),
        536459,
        4,
    )?;
    let x1946: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x1945, x1939, 32), 32), x1, 32);
    let x1947: BytePoly_32 = bigint_nondet_quot!(ctx, x1946, x1, 32);
    let x1948: BytePoly_32 = bigint_nondet_rem!(ctx, x1946, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1947, x1, 64), x1948, 64),
            x1946,
            64
        ),
        260103,
        4,
    )?;
    let x1949: BytePoly_32 = bigint_add!(bigint_sub!(x5, x1942, 32), x1, 32);
    let x1950: BytePoly_32 = bigint_nondet_inv!(ctx, x1949, x1, 32);
    let x1951: BytePoly_64 = bigint_mul!(x1949, x1950, 64);
    let x1952: BytePoly_66 = bigint_nondet_quot!(ctx, x1951, x1, 66);
    let x1953: BytePoly_32 = bigint_nondet_rem!(ctx, x1951, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1952, x1, 98), x1953, 98),
            x1951,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1953, x0, 32), 34, 1)?;
    let x1954: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x1948, 32), x1, 32), x1950, 64);
    let x1955: BytePoly_66 = bigint_nondet_quot!(ctx, x1954, x1, 66);
    let x1956: BytePoly_32 = bigint_nondet_rem!(ctx, x1954, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1955, x1, 98), x1956, 98),
            x1954,
            98
        ),
        536459,
        4,
    )?;
    let x1957: BytePoly_64 = bigint_add!(
        bigint_sub!(x1948, bigint_mul!(x1956, x1942, 64), 64),
        x1,
        64
    );
    let x1958: BytePoly_64 = bigint_nondet_quot!(ctx, x1957, x1, 64);
    let x1959: BytePoly_32 = bigint_nondet_rem!(ctx, x1957, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1958, x1, 96), x1959, 96),
            x1957,
            96
        ),
        520203,
        4,
    )?;
    let x1960: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x1956, x1956, 64), x1942, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x1961: BytePoly_66 = bigint_nondet_quot!(ctx, x1960, x1, 66);
    let x1962: BytePoly_32 = bigint_nondet_rem!(ctx, x1960, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1961, x1, 98), x1962, 98),
            x1960,
            98
        ),
        536459,
        4,
    )?;
    let x1963: BytePoly_64 = bigint_mul!(x1956, x1962, 64);
    let x1964: BytePoly_66 = bigint_nondet_quot!(ctx, x1963, x1, 66);
    let x1965: BytePoly_32 = bigint_nondet_rem!(ctx, x1963, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1964, x1, 98), x1965, 98),
            x1963,
            98
        ),
        536459,
        4,
    )?;
    let x1966: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x1965, x1959, 32), 32), x1, 32);
    let x1967: BytePoly_32 = bigint_nondet_quot!(ctx, x1966, x1, 32);
    let x1968: BytePoly_32 = bigint_nondet_rem!(ctx, x1966, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1967, x1, 64), x1968, 64),
            x1966,
            64
        ),
        260103,
        4,
    )?;
    let x1969: BytePoly_32 = bigint_add!(bigint_sub!(x5, x1962, 32), x1, 32);
    let x1970: BytePoly_32 = bigint_nondet_inv!(ctx, x1969, x1, 32);
    let x1971: BytePoly_64 = bigint_mul!(x1969, x1970, 64);
    let x1972: BytePoly_66 = bigint_nondet_quot!(ctx, x1971, x1, 66);
    let x1973: BytePoly_32 = bigint_nondet_rem!(ctx, x1971, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1972, x1, 98), x1973, 98),
            x1971,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1973, x0, 32), 34, 1)?;
    let x1974: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x1968, 32), x1, 32), x1970, 64);
    let x1975: BytePoly_66 = bigint_nondet_quot!(ctx, x1974, x1, 66);
    let x1976: BytePoly_32 = bigint_nondet_rem!(ctx, x1974, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1975, x1, 98), x1976, 98),
            x1974,
            98
        ),
        536459,
        4,
    )?;
    let x1977: BytePoly_64 = bigint_add!(
        bigint_sub!(x1968, bigint_mul!(x1976, x1962, 64), 64),
        x1,
        64
    );
    let x1978: BytePoly_64 = bigint_nondet_quot!(ctx, x1977, x1, 64);
    let x1979: BytePoly_32 = bigint_nondet_rem!(ctx, x1977, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1978, x1, 96), x1979, 96),
            x1977,
            96
        ),
        520203,
        4,
    )?;
    let x1980: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x1976, x1976, 64), x1962, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x1981: BytePoly_66 = bigint_nondet_quot!(ctx, x1980, x1, 66);
    let x1982: BytePoly_32 = bigint_nondet_rem!(ctx, x1980, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1981, x1, 98), x1982, 98),
            x1980,
            98
        ),
        536459,
        4,
    )?;
    let x1983: BytePoly_64 = bigint_mul!(x1976, x1982, 64);
    let x1984: BytePoly_66 = bigint_nondet_quot!(ctx, x1983, x1, 66);
    let x1985: BytePoly_32 = bigint_nondet_rem!(ctx, x1983, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1984, x1, 98), x1985, 98),
            x1983,
            98
        ),
        536459,
        4,
    )?;
    let x1986: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x1985, x1979, 32), 32), x1, 32);
    let x1987: BytePoly_32 = bigint_nondet_quot!(ctx, x1986, x1, 32);
    let x1988: BytePoly_32 = bigint_nondet_rem!(ctx, x1986, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1987, x1, 64), x1988, 64),
            x1986,
            64
        ),
        260103,
        4,
    )?;
    let x1989: BytePoly_32 = bigint_add!(bigint_sub!(x5, x1982, 32), x1, 32);
    let x1990: BytePoly_32 = bigint_nondet_inv!(ctx, x1989, x1, 32);
    let x1991: BytePoly_64 = bigint_mul!(x1989, x1990, 64);
    let x1992: BytePoly_66 = bigint_nondet_quot!(ctx, x1991, x1, 66);
    let x1993: BytePoly_32 = bigint_nondet_rem!(ctx, x1991, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1992, x1, 98), x1993, 98),
            x1991,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x1993, x0, 32), 34, 1)?;
    let x1994: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x1988, 32), x1, 32), x1990, 64);
    let x1995: BytePoly_66 = bigint_nondet_quot!(ctx, x1994, x1, 66);
    let x1996: BytePoly_32 = bigint_nondet_rem!(ctx, x1994, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1995, x1, 98), x1996, 98),
            x1994,
            98
        ),
        536459,
        4,
    )?;
    let x1997: BytePoly_64 = bigint_add!(
        bigint_sub!(x1988, bigint_mul!(x1996, x1982, 64), 64),
        x1,
        64
    );
    let x1998: BytePoly_64 = bigint_nondet_quot!(ctx, x1997, x1, 64);
    let x1999: BytePoly_32 = bigint_nondet_rem!(ctx, x1997, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x1998, x1, 96), x1999, 96),
            x1997,
            96
        ),
        520203,
        4,
    )?;
    let x2000: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x1996, x1996, 64), x1982, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x2001: BytePoly_66 = bigint_nondet_quot!(ctx, x2000, x1, 66);
    let x2002: BytePoly_32 = bigint_nondet_rem!(ctx, x2000, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2001, x1, 98), x2002, 98),
            x2000,
            98
        ),
        536459,
        4,
    )?;
    let x2003: BytePoly_64 = bigint_mul!(x1996, x2002, 64);
    let x2004: BytePoly_66 = bigint_nondet_quot!(ctx, x2003, x1, 66);
    let x2005: BytePoly_32 = bigint_nondet_rem!(ctx, x2003, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2004, x1, 98), x2005, 98),
            x2003,
            98
        ),
        536459,
        4,
    )?;
    let x2006: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x2005, x1999, 32), 32), x1, 32);
    let x2007: BytePoly_32 = bigint_nondet_quot!(ctx, x2006, x1, 32);
    let x2008: BytePoly_32 = bigint_nondet_rem!(ctx, x2006, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2007, x1, 64), x2008, 64),
            x2006,
            64
        ),
        260103,
        4,
    )?;
    let x2009: BytePoly_32 = bigint_add!(bigint_sub!(x5, x2002, 32), x1, 32);
    let x2010: BytePoly_32 = bigint_nondet_inv!(ctx, x2009, x1, 32);
    let x2011: BytePoly_64 = bigint_mul!(x2009, x2010, 64);
    let x2012: BytePoly_66 = bigint_nondet_quot!(ctx, x2011, x1, 66);
    let x2013: BytePoly_32 = bigint_nondet_rem!(ctx, x2011, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2012, x1, 98), x2013, 98),
            x2011,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x2013, x0, 32), 34, 1)?;
    let x2014: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x2008, 32), x1, 32), x2010, 64);
    let x2015: BytePoly_66 = bigint_nondet_quot!(ctx, x2014, x1, 66);
    let x2016: BytePoly_32 = bigint_nondet_rem!(ctx, x2014, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2015, x1, 98), x2016, 98),
            x2014,
            98
        ),
        536459,
        4,
    )?;
    let x2017: BytePoly_64 = bigint_add!(
        bigint_sub!(x2008, bigint_mul!(x2016, x2002, 64), 64),
        x1,
        64
    );
    let x2018: BytePoly_64 = bigint_nondet_quot!(ctx, x2017, x1, 64);
    let x2019: BytePoly_32 = bigint_nondet_rem!(ctx, x2017, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2018, x1, 96), x2019, 96),
            x2017,
            96
        ),
        520203,
        4,
    )?;
    let x2020: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x2016, x2016, 64), x2002, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x2021: BytePoly_66 = bigint_nondet_quot!(ctx, x2020, x1, 66);
    let x2022: BytePoly_32 = bigint_nondet_rem!(ctx, x2020, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2021, x1, 98), x2022, 98),
            x2020,
            98
        ),
        536459,
        4,
    )?;
    let x2023: BytePoly_64 = bigint_mul!(x2016, x2022, 64);
    let x2024: BytePoly_66 = bigint_nondet_quot!(ctx, x2023, x1, 66);
    let x2025: BytePoly_32 = bigint_nondet_rem!(ctx, x2023, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2024, x1, 98), x2025, 98),
            x2023,
            98
        ),
        536459,
        4,
    )?;
    let x2026: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x2025, x2019, 32), 32), x1, 32);
    let x2027: BytePoly_32 = bigint_nondet_quot!(ctx, x2026, x1, 32);
    let x2028: BytePoly_32 = bigint_nondet_rem!(ctx, x2026, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2027, x1, 64), x2028, 64),
            x2026,
            64
        ),
        260103,
        4,
    )?;
    let x2029: BytePoly_32 = bigint_add!(bigint_sub!(x5, x2022, 32), x1, 32);
    let x2030: BytePoly_32 = bigint_nondet_inv!(ctx, x2029, x1, 32);
    let x2031: BytePoly_64 = bigint_mul!(x2029, x2030, 64);
    let x2032: BytePoly_66 = bigint_nondet_quot!(ctx, x2031, x1, 66);
    let x2033: BytePoly_32 = bigint_nondet_rem!(ctx, x2031, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2032, x1, 98), x2033, 98),
            x2031,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x2033, x0, 32), 34, 1)?;
    let x2034: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x2028, 32), x1, 32), x2030, 64);
    let x2035: BytePoly_66 = bigint_nondet_quot!(ctx, x2034, x1, 66);
    let x2036: BytePoly_32 = bigint_nondet_rem!(ctx, x2034, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2035, x1, 98), x2036, 98),
            x2034,
            98
        ),
        536459,
        4,
    )?;
    let x2037: BytePoly_64 = bigint_add!(
        bigint_sub!(x2028, bigint_mul!(x2036, x2022, 64), 64),
        x1,
        64
    );
    let x2038: BytePoly_64 = bigint_nondet_quot!(ctx, x2037, x1, 64);
    let x2039: BytePoly_32 = bigint_nondet_rem!(ctx, x2037, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2038, x1, 96), x2039, 96),
            x2037,
            96
        ),
        520203,
        4,
    )?;
    let x2040: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x2036, x2036, 64), x2022, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x2041: BytePoly_66 = bigint_nondet_quot!(ctx, x2040, x1, 66);
    let x2042: BytePoly_32 = bigint_nondet_rem!(ctx, x2040, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2041, x1, 98), x2042, 98),
            x2040,
            98
        ),
        536459,
        4,
    )?;
    let x2043: BytePoly_64 = bigint_mul!(x2036, x2042, 64);
    let x2044: BytePoly_66 = bigint_nondet_quot!(ctx, x2043, x1, 66);
    let x2045: BytePoly_32 = bigint_nondet_rem!(ctx, x2043, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2044, x1, 98), x2045, 98),
            x2043,
            98
        ),
        536459,
        4,
    )?;
    let x2046: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x2045, x2039, 32), 32), x1, 32);
    let x2047: BytePoly_32 = bigint_nondet_quot!(ctx, x2046, x1, 32);
    let x2048: BytePoly_32 = bigint_nondet_rem!(ctx, x2046, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2047, x1, 64), x2048, 64),
            x2046,
            64
        ),
        260103,
        4,
    )?;
    let x2049: BytePoly_32 = bigint_add!(bigint_sub!(x5, x2042, 32), x1, 32);
    let x2050: BytePoly_32 = bigint_nondet_inv!(ctx, x2049, x1, 32);
    let x2051: BytePoly_64 = bigint_mul!(x2049, x2050, 64);
    let x2052: BytePoly_66 = bigint_nondet_quot!(ctx, x2051, x1, 66);
    let x2053: BytePoly_32 = bigint_nondet_rem!(ctx, x2051, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2052, x1, 98), x2053, 98),
            x2051,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x2053, x0, 32), 34, 1)?;
    let x2054: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x2048, 32), x1, 32), x2050, 64);
    let x2055: BytePoly_66 = bigint_nondet_quot!(ctx, x2054, x1, 66);
    let x2056: BytePoly_32 = bigint_nondet_rem!(ctx, x2054, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2055, x1, 98), x2056, 98),
            x2054,
            98
        ),
        536459,
        4,
    )?;
    let x2057: BytePoly_64 = bigint_add!(
        bigint_sub!(x2048, bigint_mul!(x2056, x2042, 64), 64),
        x1,
        64
    );
    let x2058: BytePoly_64 = bigint_nondet_quot!(ctx, x2057, x1, 64);
    let x2059: BytePoly_32 = bigint_nondet_rem!(ctx, x2057, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2058, x1, 96), x2059, 96),
            x2057,
            96
        ),
        520203,
        4,
    )?;
    let x2060: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x2056, x2056, 64), x2042, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x2061: BytePoly_66 = bigint_nondet_quot!(ctx, x2060, x1, 66);
    let x2062: BytePoly_32 = bigint_nondet_rem!(ctx, x2060, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2061, x1, 98), x2062, 98),
            x2060,
            98
        ),
        536459,
        4,
    )?;
    let x2063: BytePoly_64 = bigint_mul!(x2056, x2062, 64);
    let x2064: BytePoly_66 = bigint_nondet_quot!(ctx, x2063, x1, 66);
    let x2065: BytePoly_32 = bigint_nondet_rem!(ctx, x2063, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2064, x1, 98), x2065, 98),
            x2063,
            98
        ),
        536459,
        4,
    )?;
    let x2066: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x2065, x2059, 32), 32), x1, 32);
    let x2067: BytePoly_32 = bigint_nondet_quot!(ctx, x2066, x1, 32);
    let x2068: BytePoly_32 = bigint_nondet_rem!(ctx, x2066, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2067, x1, 64), x2068, 64),
            x2066,
            64
        ),
        260103,
        4,
    )?;
    let x2069: BytePoly_32 = bigint_add!(bigint_sub!(x5, x2062, 32), x1, 32);
    let x2070: BytePoly_32 = bigint_nondet_inv!(ctx, x2069, x1, 32);
    let x2071: BytePoly_64 = bigint_mul!(x2069, x2070, 64);
    let x2072: BytePoly_66 = bigint_nondet_quot!(ctx, x2071, x1, 66);
    let x2073: BytePoly_32 = bigint_nondet_rem!(ctx, x2071, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2072, x1, 98), x2073, 98),
            x2071,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x2073, x0, 32), 34, 1)?;
    let x2074: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x2068, 32), x1, 32), x2070, 64);
    let x2075: BytePoly_66 = bigint_nondet_quot!(ctx, x2074, x1, 66);
    let x2076: BytePoly_32 = bigint_nondet_rem!(ctx, x2074, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2075, x1, 98), x2076, 98),
            x2074,
            98
        ),
        536459,
        4,
    )?;
    let x2077: BytePoly_64 = bigint_add!(
        bigint_sub!(x2068, bigint_mul!(x2076, x2062, 64), 64),
        x1,
        64
    );
    let x2078: BytePoly_64 = bigint_nondet_quot!(ctx, x2077, x1, 64);
    let x2079: BytePoly_32 = bigint_nondet_rem!(ctx, x2077, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2078, x1, 96), x2079, 96),
            x2077,
            96
        ),
        520203,
        4,
    )?;
    let x2080: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x2076, x2076, 64), x2062, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x2081: BytePoly_66 = bigint_nondet_quot!(ctx, x2080, x1, 66);
    let x2082: BytePoly_32 = bigint_nondet_rem!(ctx, x2080, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2081, x1, 98), x2082, 98),
            x2080,
            98
        ),
        536459,
        4,
    )?;
    let x2083: BytePoly_64 = bigint_mul!(x2076, x2082, 64);
    let x2084: BytePoly_66 = bigint_nondet_quot!(ctx, x2083, x1, 66);
    let x2085: BytePoly_32 = bigint_nondet_rem!(ctx, x2083, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2084, x1, 98), x2085, 98),
            x2083,
            98
        ),
        536459,
        4,
    )?;
    let x2086: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x2085, x2079, 32), 32), x1, 32);
    let x2087: BytePoly_32 = bigint_nondet_quot!(ctx, x2086, x1, 32);
    let x2088: BytePoly_32 = bigint_nondet_rem!(ctx, x2086, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2087, x1, 64), x2088, 64),
            x2086,
            64
        ),
        260103,
        4,
    )?;
    let x2089: BytePoly_32 = bigint_add!(bigint_sub!(x5, x2082, 32), x1, 32);
    let x2090: BytePoly_32 = bigint_nondet_inv!(ctx, x2089, x1, 32);
    let x2091: BytePoly_64 = bigint_mul!(x2089, x2090, 64);
    let x2092: BytePoly_66 = bigint_nondet_quot!(ctx, x2091, x1, 66);
    let x2093: BytePoly_32 = bigint_nondet_rem!(ctx, x2091, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2092, x1, 98), x2093, 98),
            x2091,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x2093, x0, 32), 34, 1)?;
    let x2094: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x2088, 32), x1, 32), x2090, 64);
    let x2095: BytePoly_66 = bigint_nondet_quot!(ctx, x2094, x1, 66);
    let x2096: BytePoly_32 = bigint_nondet_rem!(ctx, x2094, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2095, x1, 98), x2096, 98),
            x2094,
            98
        ),
        536459,
        4,
    )?;
    let x2097: BytePoly_64 = bigint_add!(
        bigint_sub!(x2088, bigint_mul!(x2096, x2082, 64), 64),
        x1,
        64
    );
    let x2098: BytePoly_64 = bigint_nondet_quot!(ctx, x2097, x1, 64);
    let x2099: BytePoly_32 = bigint_nondet_rem!(ctx, x2097, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2098, x1, 96), x2099, 96),
            x2097,
            96
        ),
        520203,
        4,
    )?;
    let x2100: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x2096, x2096, 64), x2082, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x2101: BytePoly_66 = bigint_nondet_quot!(ctx, x2100, x1, 66);
    let x2102: BytePoly_32 = bigint_nondet_rem!(ctx, x2100, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2101, x1, 98), x2102, 98),
            x2100,
            98
        ),
        536459,
        4,
    )?;
    let x2103: BytePoly_64 = bigint_mul!(x2096, x2102, 64);
    let x2104: BytePoly_66 = bigint_nondet_quot!(ctx, x2103, x1, 66);
    let x2105: BytePoly_32 = bigint_nondet_rem!(ctx, x2103, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2104, x1, 98), x2105, 98),
            x2103,
            98
        ),
        536459,
        4,
    )?;
    let x2106: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x2105, x2099, 32), 32), x1, 32);
    let x2107: BytePoly_32 = bigint_nondet_quot!(ctx, x2106, x1, 32);
    let x2108: BytePoly_32 = bigint_nondet_rem!(ctx, x2106, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2107, x1, 64), x2108, 64),
            x2106,
            64
        ),
        260103,
        4,
    )?;
    let x2109: BytePoly_32 = bigint_add!(bigint_sub!(x5, x2102, 32), x1, 32);
    let x2110: BytePoly_32 = bigint_nondet_inv!(ctx, x2109, x1, 32);
    let x2111: BytePoly_64 = bigint_mul!(x2109, x2110, 64);
    let x2112: BytePoly_66 = bigint_nondet_quot!(ctx, x2111, x1, 66);
    let x2113: BytePoly_32 = bigint_nondet_rem!(ctx, x2111, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2112, x1, 98), x2113, 98),
            x2111,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x2113, x0, 32), 34, 1)?;
    let x2114: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x2108, 32), x1, 32), x2110, 64);
    let x2115: BytePoly_66 = bigint_nondet_quot!(ctx, x2114, x1, 66);
    let x2116: BytePoly_32 = bigint_nondet_rem!(ctx, x2114, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2115, x1, 98), x2116, 98),
            x2114,
            98
        ),
        536459,
        4,
    )?;
    let x2117: BytePoly_64 = bigint_add!(
        bigint_sub!(x2108, bigint_mul!(x2116, x2102, 64), 64),
        x1,
        64
    );
    let x2118: BytePoly_64 = bigint_nondet_quot!(ctx, x2117, x1, 64);
    let x2119: BytePoly_32 = bigint_nondet_rem!(ctx, x2117, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2118, x1, 96), x2119, 96),
            x2117,
            96
        ),
        520203,
        4,
    )?;
    let x2120: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x2116, x2116, 64), x2102, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x2121: BytePoly_66 = bigint_nondet_quot!(ctx, x2120, x1, 66);
    let x2122: BytePoly_32 = bigint_nondet_rem!(ctx, x2120, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2121, x1, 98), x2122, 98),
            x2120,
            98
        ),
        536459,
        4,
    )?;
    let x2123: BytePoly_64 = bigint_mul!(x2116, x2122, 64);
    let x2124: BytePoly_66 = bigint_nondet_quot!(ctx, x2123, x1, 66);
    let x2125: BytePoly_32 = bigint_nondet_rem!(ctx, x2123, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2124, x1, 98), x2125, 98),
            x2123,
            98
        ),
        536459,
        4,
    )?;
    let x2126: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x2125, x2119, 32), 32), x1, 32);
    let x2127: BytePoly_32 = bigint_nondet_quot!(ctx, x2126, x1, 32);
    let x2128: BytePoly_32 = bigint_nondet_rem!(ctx, x2126, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2127, x1, 64), x2128, 64),
            x2126,
            64
        ),
        260103,
        4,
    )?;
    let x2129: BytePoly_32 = bigint_add!(bigint_sub!(x5, x2122, 32), x1, 32);
    let x2130: BytePoly_32 = bigint_nondet_inv!(ctx, x2129, x1, 32);
    let x2131: BytePoly_64 = bigint_mul!(x2129, x2130, 64);
    let x2132: BytePoly_66 = bigint_nondet_quot!(ctx, x2131, x1, 66);
    let x2133: BytePoly_32 = bigint_nondet_rem!(ctx, x2131, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2132, x1, 98), x2133, 98),
            x2131,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x2133, x0, 32), 34, 1)?;
    let x2134: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x2128, 32), x1, 32), x2130, 64);
    let x2135: BytePoly_66 = bigint_nondet_quot!(ctx, x2134, x1, 66);
    let x2136: BytePoly_32 = bigint_nondet_rem!(ctx, x2134, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2135, x1, 98), x2136, 98),
            x2134,
            98
        ),
        536459,
        4,
    )?;
    let x2137: BytePoly_64 = bigint_add!(
        bigint_sub!(x2128, bigint_mul!(x2136, x2122, 64), 64),
        x1,
        64
    );
    let x2138: BytePoly_64 = bigint_nondet_quot!(ctx, x2137, x1, 64);
    let x2139: BytePoly_32 = bigint_nondet_rem!(ctx, x2137, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2138, x1, 96), x2139, 96),
            x2137,
            96
        ),
        520203,
        4,
    )?;
    let x2140: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x2136, x2136, 64), x2122, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x2141: BytePoly_66 = bigint_nondet_quot!(ctx, x2140, x1, 66);
    let x2142: BytePoly_32 = bigint_nondet_rem!(ctx, x2140, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2141, x1, 98), x2142, 98),
            x2140,
            98
        ),
        536459,
        4,
    )?;
    let x2143: BytePoly_64 = bigint_mul!(x2136, x2142, 64);
    let x2144: BytePoly_66 = bigint_nondet_quot!(ctx, x2143, x1, 66);
    let x2145: BytePoly_32 = bigint_nondet_rem!(ctx, x2143, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2144, x1, 98), x2145, 98),
            x2143,
            98
        ),
        536459,
        4,
    )?;
    let x2146: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x2145, x2139, 32), 32), x1, 32);
    let x2147: BytePoly_32 = bigint_nondet_quot!(ctx, x2146, x1, 32);
    let x2148: BytePoly_32 = bigint_nondet_rem!(ctx, x2146, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2147, x1, 64), x2148, 64),
            x2146,
            64
        ),
        260103,
        4,
    )?;
    let x2149: BytePoly_32 = bigint_add!(bigint_sub!(x5, x2142, 32), x1, 32);
    let x2150: BytePoly_32 = bigint_nondet_inv!(ctx, x2149, x1, 32);
    let x2151: BytePoly_64 = bigint_mul!(x2149, x2150, 64);
    let x2152: BytePoly_66 = bigint_nondet_quot!(ctx, x2151, x1, 66);
    let x2153: BytePoly_32 = bigint_nondet_rem!(ctx, x2151, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2152, x1, 98), x2153, 98),
            x2151,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x2153, x0, 32), 34, 1)?;
    let x2154: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x2148, 32), x1, 32), x2150, 64);
    let x2155: BytePoly_66 = bigint_nondet_quot!(ctx, x2154, x1, 66);
    let x2156: BytePoly_32 = bigint_nondet_rem!(ctx, x2154, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2155, x1, 98), x2156, 98),
            x2154,
            98
        ),
        536459,
        4,
    )?;
    let x2157: BytePoly_64 = bigint_add!(
        bigint_sub!(x2148, bigint_mul!(x2156, x2142, 64), 64),
        x1,
        64
    );
    let x2158: BytePoly_64 = bigint_nondet_quot!(ctx, x2157, x1, 64);
    let x2159: BytePoly_32 = bigint_nondet_rem!(ctx, x2157, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2158, x1, 96), x2159, 96),
            x2157,
            96
        ),
        520203,
        4,
    )?;
    let x2160: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x2156, x2156, 64), x2142, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x2161: BytePoly_66 = bigint_nondet_quot!(ctx, x2160, x1, 66);
    let x2162: BytePoly_32 = bigint_nondet_rem!(ctx, x2160, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2161, x1, 98), x2162, 98),
            x2160,
            98
        ),
        536459,
        4,
    )?;
    let x2163: BytePoly_64 = bigint_mul!(x2156, x2162, 64);
    let x2164: BytePoly_66 = bigint_nondet_quot!(ctx, x2163, x1, 66);
    let x2165: BytePoly_32 = bigint_nondet_rem!(ctx, x2163, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2164, x1, 98), x2165, 98),
            x2163,
            98
        ),
        536459,
        4,
    )?;
    let x2166: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x2165, x2159, 32), 32), x1, 32);
    let x2167: BytePoly_32 = bigint_nondet_quot!(ctx, x2166, x1, 32);
    let x2168: BytePoly_32 = bigint_nondet_rem!(ctx, x2166, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2167, x1, 64), x2168, 64),
            x2166,
            64
        ),
        260103,
        4,
    )?;
    let x2169: BytePoly_32 = bigint_add!(bigint_sub!(x5, x2162, 32), x1, 32);
    let x2170: BytePoly_32 = bigint_nondet_inv!(ctx, x2169, x1, 32);
    let x2171: BytePoly_64 = bigint_mul!(x2169, x2170, 64);
    let x2172: BytePoly_66 = bigint_nondet_quot!(ctx, x2171, x1, 66);
    let x2173: BytePoly_32 = bigint_nondet_rem!(ctx, x2171, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2172, x1, 98), x2173, 98),
            x2171,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x2173, x0, 32), 34, 1)?;
    let x2174: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x2168, 32), x1, 32), x2170, 64);
    let x2175: BytePoly_66 = bigint_nondet_quot!(ctx, x2174, x1, 66);
    let x2176: BytePoly_32 = bigint_nondet_rem!(ctx, x2174, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2175, x1, 98), x2176, 98),
            x2174,
            98
        ),
        536459,
        4,
    )?;
    let x2177: BytePoly_64 = bigint_add!(
        bigint_sub!(x2168, bigint_mul!(x2176, x2162, 64), 64),
        x1,
        64
    );
    let x2178: BytePoly_64 = bigint_nondet_quot!(ctx, x2177, x1, 64);
    let x2179: BytePoly_32 = bigint_nondet_rem!(ctx, x2177, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2178, x1, 96), x2179, 96),
            x2177,
            96
        ),
        520203,
        4,
    )?;
    let x2180: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x2176, x2176, 64), x2162, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x2181: BytePoly_66 = bigint_nondet_quot!(ctx, x2180, x1, 66);
    let x2182: BytePoly_32 = bigint_nondet_rem!(ctx, x2180, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2181, x1, 98), x2182, 98),
            x2180,
            98
        ),
        536459,
        4,
    )?;
    let x2183: BytePoly_64 = bigint_mul!(x2176, x2182, 64);
    let x2184: BytePoly_66 = bigint_nondet_quot!(ctx, x2183, x1, 66);
    let x2185: BytePoly_32 = bigint_nondet_rem!(ctx, x2183, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2184, x1, 98), x2185, 98),
            x2183,
            98
        ),
        536459,
        4,
    )?;
    let x2186: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x2185, x2179, 32), 32), x1, 32);
    let x2187: BytePoly_32 = bigint_nondet_quot!(ctx, x2186, x1, 32);
    let x2188: BytePoly_32 = bigint_nondet_rem!(ctx, x2186, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2187, x1, 64), x2188, 64),
            x2186,
            64
        ),
        260103,
        4,
    )?;
    let x2189: BytePoly_32 = bigint_add!(bigint_sub!(x5, x2182, 32), x1, 32);
    let x2190: BytePoly_32 = bigint_nondet_inv!(ctx, x2189, x1, 32);
    let x2191: BytePoly_64 = bigint_mul!(x2189, x2190, 64);
    let x2192: BytePoly_66 = bigint_nondet_quot!(ctx, x2191, x1, 66);
    let x2193: BytePoly_32 = bigint_nondet_rem!(ctx, x2191, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2192, x1, 98), x2193, 98),
            x2191,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x2193, x0, 32), 34, 1)?;
    let x2194: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x2188, 32), x1, 32), x2190, 64);
    let x2195: BytePoly_66 = bigint_nondet_quot!(ctx, x2194, x1, 66);
    let x2196: BytePoly_32 = bigint_nondet_rem!(ctx, x2194, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2195, x1, 98), x2196, 98),
            x2194,
            98
        ),
        536459,
        4,
    )?;
    let x2197: BytePoly_64 = bigint_add!(
        bigint_sub!(x2188, bigint_mul!(x2196, x2182, 64), 64),
        x1,
        64
    );
    let x2198: BytePoly_64 = bigint_nondet_quot!(ctx, x2197, x1, 64);
    let x2199: BytePoly_32 = bigint_nondet_rem!(ctx, x2197, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2198, x1, 96), x2199, 96),
            x2197,
            96
        ),
        520203,
        4,
    )?;
    let x2200: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x2196, x2196, 64), x2182, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x2201: BytePoly_66 = bigint_nondet_quot!(ctx, x2200, x1, 66);
    let x2202: BytePoly_32 = bigint_nondet_rem!(ctx, x2200, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2201, x1, 98), x2202, 98),
            x2200,
            98
        ),
        536459,
        4,
    )?;
    let x2203: BytePoly_64 = bigint_mul!(x2196, x2202, 64);
    let x2204: BytePoly_66 = bigint_nondet_quot!(ctx, x2203, x1, 66);
    let x2205: BytePoly_32 = bigint_nondet_rem!(ctx, x2203, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2204, x1, 98), x2205, 98),
            x2203,
            98
        ),
        536459,
        4,
    )?;
    let x2206: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x2205, x2199, 32), 32), x1, 32);
    let x2207: BytePoly_32 = bigint_nondet_quot!(ctx, x2206, x1, 32);
    let x2208: BytePoly_32 = bigint_nondet_rem!(ctx, x2206, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2207, x1, 64), x2208, 64),
            x2206,
            64
        ),
        260103,
        4,
    )?;
    let x2209: BytePoly_32 = bigint_add!(bigint_sub!(x5, x2202, 32), x1, 32);
    let x2210: BytePoly_32 = bigint_nondet_inv!(ctx, x2209, x1, 32);
    let x2211: BytePoly_64 = bigint_mul!(x2209, x2210, 64);
    let x2212: BytePoly_66 = bigint_nondet_quot!(ctx, x2211, x1, 66);
    let x2213: BytePoly_32 = bigint_nondet_rem!(ctx, x2211, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2212, x1, 98), x2213, 98),
            x2211,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x2213, x0, 32), 34, 1)?;
    let x2214: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x2208, 32), x1, 32), x2210, 64);
    let x2215: BytePoly_66 = bigint_nondet_quot!(ctx, x2214, x1, 66);
    let x2216: BytePoly_32 = bigint_nondet_rem!(ctx, x2214, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2215, x1, 98), x2216, 98),
            x2214,
            98
        ),
        536459,
        4,
    )?;
    let x2217: BytePoly_64 = bigint_add!(
        bigint_sub!(x2208, bigint_mul!(x2216, x2202, 64), 64),
        x1,
        64
    );
    let x2218: BytePoly_64 = bigint_nondet_quot!(ctx, x2217, x1, 64);
    let x2219: BytePoly_32 = bigint_nondet_rem!(ctx, x2217, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2218, x1, 96), x2219, 96),
            x2217,
            96
        ),
        520203,
        4,
    )?;
    let x2220: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x2216, x2216, 64), x2202, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x2221: BytePoly_66 = bigint_nondet_quot!(ctx, x2220, x1, 66);
    let x2222: BytePoly_32 = bigint_nondet_rem!(ctx, x2220, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2221, x1, 98), x2222, 98),
            x2220,
            98
        ),
        536459,
        4,
    )?;
    let x2223: BytePoly_64 = bigint_mul!(x2216, x2222, 64);
    let x2224: BytePoly_66 = bigint_nondet_quot!(ctx, x2223, x1, 66);
    let x2225: BytePoly_32 = bigint_nondet_rem!(ctx, x2223, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2224, x1, 98), x2225, 98),
            x2223,
            98
        ),
        536459,
        4,
    )?;
    let x2226: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x2225, x2219, 32), 32), x1, 32);
    let x2227: BytePoly_32 = bigint_nondet_quot!(ctx, x2226, x1, 32);
    let x2228: BytePoly_32 = bigint_nondet_rem!(ctx, x2226, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2227, x1, 64), x2228, 64),
            x2226,
            64
        ),
        260103,
        4,
    )?;
    let x2229: BytePoly_32 = bigint_add!(bigint_sub!(x5, x2222, 32), x1, 32);
    let x2230: BytePoly_32 = bigint_nondet_inv!(ctx, x2229, x1, 32);
    let x2231: BytePoly_64 = bigint_mul!(x2229, x2230, 64);
    let x2232: BytePoly_66 = bigint_nondet_quot!(ctx, x2231, x1, 66);
    let x2233: BytePoly_32 = bigint_nondet_rem!(ctx, x2231, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2232, x1, 98), x2233, 98),
            x2231,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x2233, x0, 32), 34, 1)?;
    let x2234: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x2228, 32), x1, 32), x2230, 64);
    let x2235: BytePoly_66 = bigint_nondet_quot!(ctx, x2234, x1, 66);
    let x2236: BytePoly_32 = bigint_nondet_rem!(ctx, x2234, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2235, x1, 98), x2236, 98),
            x2234,
            98
        ),
        536459,
        4,
    )?;
    let x2237: BytePoly_64 = bigint_add!(
        bigint_sub!(x2228, bigint_mul!(x2236, x2222, 64), 64),
        x1,
        64
    );
    let x2238: BytePoly_64 = bigint_nondet_quot!(ctx, x2237, x1, 64);
    let x2239: BytePoly_32 = bigint_nondet_rem!(ctx, x2237, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2238, x1, 96), x2239, 96),
            x2237,
            96
        ),
        520203,
        4,
    )?;
    let x2240: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x2236, x2236, 64), x2222, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x2241: BytePoly_66 = bigint_nondet_quot!(ctx, x2240, x1, 66);
    let x2242: BytePoly_32 = bigint_nondet_rem!(ctx, x2240, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2241, x1, 98), x2242, 98),
            x2240,
            98
        ),
        536459,
        4,
    )?;
    let x2243: BytePoly_64 = bigint_mul!(x2236, x2242, 64);
    let x2244: BytePoly_66 = bigint_nondet_quot!(ctx, x2243, x1, 66);
    let x2245: BytePoly_32 = bigint_nondet_rem!(ctx, x2243, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2244, x1, 98), x2245, 98),
            x2243,
            98
        ),
        536459,
        4,
    )?;
    let x2246: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x2245, x2239, 32), 32), x1, 32);
    let x2247: BytePoly_32 = bigint_nondet_quot!(ctx, x2246, x1, 32);
    let x2248: BytePoly_32 = bigint_nondet_rem!(ctx, x2246, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2247, x1, 64), x2248, 64),
            x2246,
            64
        ),
        260103,
        4,
    )?;
    let x2249: BytePoly_32 = bigint_add!(bigint_sub!(x5, x2242, 32), x1, 32);
    let x2250: BytePoly_32 = bigint_nondet_inv!(ctx, x2249, x1, 32);
    let x2251: BytePoly_64 = bigint_mul!(x2249, x2250, 64);
    let x2252: BytePoly_66 = bigint_nondet_quot!(ctx, x2251, x1, 66);
    let x2253: BytePoly_32 = bigint_nondet_rem!(ctx, x2251, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2252, x1, 98), x2253, 98),
            x2251,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x2253, x0, 32), 34, 1)?;
    let x2254: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x2248, 32), x1, 32), x2250, 64);
    let x2255: BytePoly_66 = bigint_nondet_quot!(ctx, x2254, x1, 66);
    let x2256: BytePoly_32 = bigint_nondet_rem!(ctx, x2254, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2255, x1, 98), x2256, 98),
            x2254,
            98
        ),
        536459,
        4,
    )?;
    let x2257: BytePoly_64 = bigint_add!(
        bigint_sub!(x2248, bigint_mul!(x2256, x2242, 64), 64),
        x1,
        64
    );
    let x2258: BytePoly_64 = bigint_nondet_quot!(ctx, x2257, x1, 64);
    let x2259: BytePoly_32 = bigint_nondet_rem!(ctx, x2257, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2258, x1, 96), x2259, 96),
            x2257,
            96
        ),
        520203,
        4,
    )?;
    let x2260: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x2256, x2256, 64), x2242, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x2261: BytePoly_66 = bigint_nondet_quot!(ctx, x2260, x1, 66);
    let x2262: BytePoly_32 = bigint_nondet_rem!(ctx, x2260, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2261, x1, 98), x2262, 98),
            x2260,
            98
        ),
        536459,
        4,
    )?;
    let x2263: BytePoly_64 = bigint_mul!(x2256, x2262, 64);
    let x2264: BytePoly_66 = bigint_nondet_quot!(ctx, x2263, x1, 66);
    let x2265: BytePoly_32 = bigint_nondet_rem!(ctx, x2263, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2264, x1, 98), x2265, 98),
            x2263,
            98
        ),
        536459,
        4,
    )?;
    let x2266: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x2265, x2259, 32), 32), x1, 32);
    let x2267: BytePoly_32 = bigint_nondet_quot!(ctx, x2266, x1, 32);
    let x2268: BytePoly_32 = bigint_nondet_rem!(ctx, x2266, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2267, x1, 64), x2268, 64),
            x2266,
            64
        ),
        260103,
        4,
    )?;
    let x2269: BytePoly_32 = bigint_add!(bigint_sub!(x5, x2262, 32), x1, 32);
    let x2270: BytePoly_32 = bigint_nondet_inv!(ctx, x2269, x1, 32);
    let x2271: BytePoly_64 = bigint_mul!(x2269, x2270, 64);
    let x2272: BytePoly_66 = bigint_nondet_quot!(ctx, x2271, x1, 66);
    let x2273: BytePoly_32 = bigint_nondet_rem!(ctx, x2271, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2272, x1, 98), x2273, 98),
            x2271,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x2273, x0, 32), 34, 1)?;
    let x2274: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x2268, 32), x1, 32), x2270, 64);
    let x2275: BytePoly_66 = bigint_nondet_quot!(ctx, x2274, x1, 66);
    let x2276: BytePoly_32 = bigint_nondet_rem!(ctx, x2274, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2275, x1, 98), x2276, 98),
            x2274,
            98
        ),
        536459,
        4,
    )?;
    let x2277: BytePoly_64 = bigint_add!(
        bigint_sub!(x2268, bigint_mul!(x2276, x2262, 64), 64),
        x1,
        64
    );
    let x2278: BytePoly_64 = bigint_nondet_quot!(ctx, x2277, x1, 64);
    let x2279: BytePoly_32 = bigint_nondet_rem!(ctx, x2277, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2278, x1, 96), x2279, 96),
            x2277,
            96
        ),
        520203,
        4,
    )?;
    let x2280: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x2276, x2276, 64), x2262, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x2281: BytePoly_66 = bigint_nondet_quot!(ctx, x2280, x1, 66);
    let x2282: BytePoly_32 = bigint_nondet_rem!(ctx, x2280, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2281, x1, 98), x2282, 98),
            x2280,
            98
        ),
        536459,
        4,
    )?;
    let x2283: BytePoly_64 = bigint_mul!(x2276, x2282, 64);
    let x2284: BytePoly_66 = bigint_nondet_quot!(ctx, x2283, x1, 66);
    let x2285: BytePoly_32 = bigint_nondet_rem!(ctx, x2283, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2284, x1, 98), x2285, 98),
            x2283,
            98
        ),
        536459,
        4,
    )?;
    let x2286: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x2285, x2279, 32), 32), x1, 32);
    let x2287: BytePoly_32 = bigint_nondet_quot!(ctx, x2286, x1, 32);
    let x2288: BytePoly_32 = bigint_nondet_rem!(ctx, x2286, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2287, x1, 64), x2288, 64),
            x2286,
            64
        ),
        260103,
        4,
    )?;
    let x2289: BytePoly_32 = bigint_add!(bigint_sub!(x5, x2282, 32), x1, 32);
    let x2290: BytePoly_32 = bigint_nondet_inv!(ctx, x2289, x1, 32);
    let x2291: BytePoly_64 = bigint_mul!(x2289, x2290, 64);
    let x2292: BytePoly_66 = bigint_nondet_quot!(ctx, x2291, x1, 66);
    let x2293: BytePoly_32 = bigint_nondet_rem!(ctx, x2291, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2292, x1, 98), x2293, 98),
            x2291,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x2293, x0, 32), 34, 1)?;
    let x2294: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x2288, 32), x1, 32), x2290, 64);
    let x2295: BytePoly_66 = bigint_nondet_quot!(ctx, x2294, x1, 66);
    let x2296: BytePoly_32 = bigint_nondet_rem!(ctx, x2294, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2295, x1, 98), x2296, 98),
            x2294,
            98
        ),
        536459,
        4,
    )?;
    let x2297: BytePoly_64 = bigint_add!(
        bigint_sub!(x2288, bigint_mul!(x2296, x2282, 64), 64),
        x1,
        64
    );
    let x2298: BytePoly_64 = bigint_nondet_quot!(ctx, x2297, x1, 64);
    let x2299: BytePoly_32 = bigint_nondet_rem!(ctx, x2297, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2298, x1, 96), x2299, 96),
            x2297,
            96
        ),
        520203,
        4,
    )?;
    let x2300: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x2296, x2296, 64), x2282, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x2301: BytePoly_66 = bigint_nondet_quot!(ctx, x2300, x1, 66);
    let x2302: BytePoly_32 = bigint_nondet_rem!(ctx, x2300, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2301, x1, 98), x2302, 98),
            x2300,
            98
        ),
        536459,
        4,
    )?;
    let x2303: BytePoly_64 = bigint_mul!(x2296, x2302, 64);
    let x2304: BytePoly_66 = bigint_nondet_quot!(ctx, x2303, x1, 66);
    let x2305: BytePoly_32 = bigint_nondet_rem!(ctx, x2303, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2304, x1, 98), x2305, 98),
            x2303,
            98
        ),
        536459,
        4,
    )?;
    let x2306: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x2305, x2299, 32), 32), x1, 32);
    let x2307: BytePoly_32 = bigint_nondet_quot!(ctx, x2306, x1, 32);
    let x2308: BytePoly_32 = bigint_nondet_rem!(ctx, x2306, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2307, x1, 64), x2308, 64),
            x2306,
            64
        ),
        260103,
        4,
    )?;
    let x2309: BytePoly_32 = bigint_add!(bigint_sub!(x5, x2302, 32), x1, 32);
    let x2310: BytePoly_32 = bigint_nondet_inv!(ctx, x2309, x1, 32);
    let x2311: BytePoly_64 = bigint_mul!(x2309, x2310, 64);
    let x2312: BytePoly_66 = bigint_nondet_quot!(ctx, x2311, x1, 66);
    let x2313: BytePoly_32 = bigint_nondet_rem!(ctx, x2311, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2312, x1, 98), x2313, 98),
            x2311,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x2313, x0, 32), 34, 1)?;
    let x2314: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x2308, 32), x1, 32), x2310, 64);
    let x2315: BytePoly_66 = bigint_nondet_quot!(ctx, x2314, x1, 66);
    let x2316: BytePoly_32 = bigint_nondet_rem!(ctx, x2314, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2315, x1, 98), x2316, 98),
            x2314,
            98
        ),
        536459,
        4,
    )?;
    let x2317: BytePoly_64 = bigint_add!(
        bigint_sub!(x2308, bigint_mul!(x2316, x2302, 64), 64),
        x1,
        64
    );
    let x2318: BytePoly_64 = bigint_nondet_quot!(ctx, x2317, x1, 64);
    let x2319: BytePoly_32 = bigint_nondet_rem!(ctx, x2317, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2318, x1, 96), x2319, 96),
            x2317,
            96
        ),
        520203,
        4,
    )?;
    let x2320: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x2316, x2316, 64), x2302, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x2321: BytePoly_66 = bigint_nondet_quot!(ctx, x2320, x1, 66);
    let x2322: BytePoly_32 = bigint_nondet_rem!(ctx, x2320, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2321, x1, 98), x2322, 98),
            x2320,
            98
        ),
        536459,
        4,
    )?;
    let x2323: BytePoly_64 = bigint_mul!(x2316, x2322, 64);
    let x2324: BytePoly_66 = bigint_nondet_quot!(ctx, x2323, x1, 66);
    let x2325: BytePoly_32 = bigint_nondet_rem!(ctx, x2323, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2324, x1, 98), x2325, 98),
            x2323,
            98
        ),
        536459,
        4,
    )?;
    let x2326: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x2325, x2319, 32), 32), x1, 32);
    let x2327: BytePoly_32 = bigint_nondet_quot!(ctx, x2326, x1, 32);
    let x2328: BytePoly_32 = bigint_nondet_rem!(ctx, x2326, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2327, x1, 64), x2328, 64),
            x2326,
            64
        ),
        260103,
        4,
    )?;
    let x2329: BytePoly_32 = bigint_add!(bigint_sub!(x5, x2322, 32), x1, 32);
    let x2330: BytePoly_32 = bigint_nondet_inv!(ctx, x2329, x1, 32);
    let x2331: BytePoly_64 = bigint_mul!(x2329, x2330, 64);
    let x2332: BytePoly_66 = bigint_nondet_quot!(ctx, x2331, x1, 66);
    let x2333: BytePoly_32 = bigint_nondet_rem!(ctx, x2331, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2332, x1, 98), x2333, 98),
            x2331,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x2333, x0, 32), 34, 1)?;
    let x2334: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x2328, 32), x1, 32), x2330, 64);
    let x2335: BytePoly_66 = bigint_nondet_quot!(ctx, x2334, x1, 66);
    let x2336: BytePoly_32 = bigint_nondet_rem!(ctx, x2334, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2335, x1, 98), x2336, 98),
            x2334,
            98
        ),
        536459,
        4,
    )?;
    let x2337: BytePoly_64 = bigint_add!(
        bigint_sub!(x2328, bigint_mul!(x2336, x2322, 64), 64),
        x1,
        64
    );
    let x2338: BytePoly_64 = bigint_nondet_quot!(ctx, x2337, x1, 64);
    let x2339: BytePoly_32 = bigint_nondet_rem!(ctx, x2337, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2338, x1, 96), x2339, 96),
            x2337,
            96
        ),
        520203,
        4,
    )?;
    let x2340: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x2336, x2336, 64), x2322, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x2341: BytePoly_66 = bigint_nondet_quot!(ctx, x2340, x1, 66);
    let x2342: BytePoly_32 = bigint_nondet_rem!(ctx, x2340, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2341, x1, 98), x2342, 98),
            x2340,
            98
        ),
        536459,
        4,
    )?;
    let x2343: BytePoly_64 = bigint_mul!(x2336, x2342, 64);
    let x2344: BytePoly_66 = bigint_nondet_quot!(ctx, x2343, x1, 66);
    let x2345: BytePoly_32 = bigint_nondet_rem!(ctx, x2343, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2344, x1, 98), x2345, 98),
            x2343,
            98
        ),
        536459,
        4,
    )?;
    let x2346: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x2345, x2339, 32), 32), x1, 32);
    let x2347: BytePoly_32 = bigint_nondet_quot!(ctx, x2346, x1, 32);
    let x2348: BytePoly_32 = bigint_nondet_rem!(ctx, x2346, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2347, x1, 64), x2348, 64),
            x2346,
            64
        ),
        260103,
        4,
    )?;
    let x2349: BytePoly_32 = bigint_add!(bigint_sub!(x5, x2342, 32), x1, 32);
    let x2350: BytePoly_32 = bigint_nondet_inv!(ctx, x2349, x1, 32);
    let x2351: BytePoly_64 = bigint_mul!(x2349, x2350, 64);
    let x2352: BytePoly_66 = bigint_nondet_quot!(ctx, x2351, x1, 66);
    let x2353: BytePoly_32 = bigint_nondet_rem!(ctx, x2351, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2352, x1, 98), x2353, 98),
            x2351,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x2353, x0, 32), 34, 1)?;
    let x2354: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x2348, 32), x1, 32), x2350, 64);
    let x2355: BytePoly_66 = bigint_nondet_quot!(ctx, x2354, x1, 66);
    let x2356: BytePoly_32 = bigint_nondet_rem!(ctx, x2354, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2355, x1, 98), x2356, 98),
            x2354,
            98
        ),
        536459,
        4,
    )?;
    let x2357: BytePoly_64 = bigint_add!(
        bigint_sub!(x2348, bigint_mul!(x2356, x2342, 64), 64),
        x1,
        64
    );
    let x2358: BytePoly_64 = bigint_nondet_quot!(ctx, x2357, x1, 64);
    let x2359: BytePoly_32 = bigint_nondet_rem!(ctx, x2357, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2358, x1, 96), x2359, 96),
            x2357,
            96
        ),
        520203,
        4,
    )?;
    let x2360: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x2356, x2356, 64), x2342, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x2361: BytePoly_66 = bigint_nondet_quot!(ctx, x2360, x1, 66);
    let x2362: BytePoly_32 = bigint_nondet_rem!(ctx, x2360, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2361, x1, 98), x2362, 98),
            x2360,
            98
        ),
        536459,
        4,
    )?;
    let x2363: BytePoly_64 = bigint_mul!(x2356, x2362, 64);
    let x2364: BytePoly_66 = bigint_nondet_quot!(ctx, x2363, x1, 66);
    let x2365: BytePoly_32 = bigint_nondet_rem!(ctx, x2363, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2364, x1, 98), x2365, 98),
            x2363,
            98
        ),
        536459,
        4,
    )?;
    let x2366: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x2365, x2359, 32), 32), x1, 32);
    let x2367: BytePoly_32 = bigint_nondet_quot!(ctx, x2366, x1, 32);
    let x2368: BytePoly_32 = bigint_nondet_rem!(ctx, x2366, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2367, x1, 64), x2368, 64),
            x2366,
            64
        ),
        260103,
        4,
    )?;
    let x2369: BytePoly_32 = bigint_add!(bigint_sub!(x5, x2362, 32), x1, 32);
    let x2370: BytePoly_32 = bigint_nondet_inv!(ctx, x2369, x1, 32);
    let x2371: BytePoly_64 = bigint_mul!(x2369, x2370, 64);
    let x2372: BytePoly_66 = bigint_nondet_quot!(ctx, x2371, x1, 66);
    let x2373: BytePoly_32 = bigint_nondet_rem!(ctx, x2371, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2372, x1, 98), x2373, 98),
            x2371,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x2373, x0, 32), 34, 1)?;
    let x2374: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x2368, 32), x1, 32), x2370, 64);
    let x2375: BytePoly_66 = bigint_nondet_quot!(ctx, x2374, x1, 66);
    let x2376: BytePoly_32 = bigint_nondet_rem!(ctx, x2374, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2375, x1, 98), x2376, 98),
            x2374,
            98
        ),
        536459,
        4,
    )?;
    let x2377: BytePoly_64 = bigint_add!(
        bigint_sub!(x2368, bigint_mul!(x2376, x2362, 64), 64),
        x1,
        64
    );
    let x2378: BytePoly_64 = bigint_nondet_quot!(ctx, x2377, x1, 64);
    let x2379: BytePoly_32 = bigint_nondet_rem!(ctx, x2377, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2378, x1, 96), x2379, 96),
            x2377,
            96
        ),
        520203,
        4,
    )?;
    let x2380: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x2376, x2376, 64), x2362, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x2381: BytePoly_66 = bigint_nondet_quot!(ctx, x2380, x1, 66);
    let x2382: BytePoly_32 = bigint_nondet_rem!(ctx, x2380, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2381, x1, 98), x2382, 98),
            x2380,
            98
        ),
        536459,
        4,
    )?;
    let x2383: BytePoly_64 = bigint_mul!(x2376, x2382, 64);
    let x2384: BytePoly_66 = bigint_nondet_quot!(ctx, x2383, x1, 66);
    let x2385: BytePoly_32 = bigint_nondet_rem!(ctx, x2383, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2384, x1, 98), x2385, 98),
            x2383,
            98
        ),
        536459,
        4,
    )?;
    let x2386: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x2385, x2379, 32), 32), x1, 32);
    let x2387: BytePoly_32 = bigint_nondet_quot!(ctx, x2386, x1, 32);
    let x2388: BytePoly_32 = bigint_nondet_rem!(ctx, x2386, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2387, x1, 64), x2388, 64),
            x2386,
            64
        ),
        260103,
        4,
    )?;
    let x2389: BytePoly_32 = bigint_add!(bigint_sub!(x5, x2382, 32), x1, 32);
    let x2390: BytePoly_32 = bigint_nondet_inv!(ctx, x2389, x1, 32);
    let x2391: BytePoly_64 = bigint_mul!(x2389, x2390, 64);
    let x2392: BytePoly_66 = bigint_nondet_quot!(ctx, x2391, x1, 66);
    let x2393: BytePoly_32 = bigint_nondet_rem!(ctx, x2391, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2392, x1, 98), x2393, 98),
            x2391,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x2393, x0, 32), 34, 1)?;
    let x2394: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x2388, 32), x1, 32), x2390, 64);
    let x2395: BytePoly_66 = bigint_nondet_quot!(ctx, x2394, x1, 66);
    let x2396: BytePoly_32 = bigint_nondet_rem!(ctx, x2394, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2395, x1, 98), x2396, 98),
            x2394,
            98
        ),
        536459,
        4,
    )?;
    let x2397: BytePoly_64 = bigint_add!(
        bigint_sub!(x2388, bigint_mul!(x2396, x2382, 64), 64),
        x1,
        64
    );
    let x2398: BytePoly_64 = bigint_nondet_quot!(ctx, x2397, x1, 64);
    let x2399: BytePoly_32 = bigint_nondet_rem!(ctx, x2397, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2398, x1, 96), x2399, 96),
            x2397,
            96
        ),
        520203,
        4,
    )?;
    let x2400: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x2396, x2396, 64), x2382, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x2401: BytePoly_66 = bigint_nondet_quot!(ctx, x2400, x1, 66);
    let x2402: BytePoly_32 = bigint_nondet_rem!(ctx, x2400, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2401, x1, 98), x2402, 98),
            x2400,
            98
        ),
        536459,
        4,
    )?;
    let x2403: BytePoly_64 = bigint_mul!(x2396, x2402, 64);
    let x2404: BytePoly_66 = bigint_nondet_quot!(ctx, x2403, x1, 66);
    let x2405: BytePoly_32 = bigint_nondet_rem!(ctx, x2403, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2404, x1, 98), x2405, 98),
            x2403,
            98
        ),
        536459,
        4,
    )?;
    let x2406: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x2405, x2399, 32), 32), x1, 32);
    let x2407: BytePoly_32 = bigint_nondet_quot!(ctx, x2406, x1, 32);
    let x2408: BytePoly_32 = bigint_nondet_rem!(ctx, x2406, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2407, x1, 64), x2408, 64),
            x2406,
            64
        ),
        260103,
        4,
    )?;
    let x2409: BytePoly_32 = bigint_add!(bigint_sub!(x5, x2402, 32), x1, 32);
    let x2410: BytePoly_32 = bigint_nondet_inv!(ctx, x2409, x1, 32);
    let x2411: BytePoly_64 = bigint_mul!(x2409, x2410, 64);
    let x2412: BytePoly_66 = bigint_nondet_quot!(ctx, x2411, x1, 66);
    let x2413: BytePoly_32 = bigint_nondet_rem!(ctx, x2411, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2412, x1, 98), x2413, 98),
            x2411,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x2413, x0, 32), 34, 1)?;
    let x2414: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x2408, 32), x1, 32), x2410, 64);
    let x2415: BytePoly_66 = bigint_nondet_quot!(ctx, x2414, x1, 66);
    let x2416: BytePoly_32 = bigint_nondet_rem!(ctx, x2414, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2415, x1, 98), x2416, 98),
            x2414,
            98
        ),
        536459,
        4,
    )?;
    let x2417: BytePoly_64 = bigint_add!(
        bigint_sub!(x2408, bigint_mul!(x2416, x2402, 64), 64),
        x1,
        64
    );
    let x2418: BytePoly_64 = bigint_nondet_quot!(ctx, x2417, x1, 64);
    let x2419: BytePoly_32 = bigint_nondet_rem!(ctx, x2417, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2418, x1, 96), x2419, 96),
            x2417,
            96
        ),
        520203,
        4,
    )?;
    let x2420: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x2416, x2416, 64), x2402, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x2421: BytePoly_66 = bigint_nondet_quot!(ctx, x2420, x1, 66);
    let x2422: BytePoly_32 = bigint_nondet_rem!(ctx, x2420, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2421, x1, 98), x2422, 98),
            x2420,
            98
        ),
        536459,
        4,
    )?;
    let x2423: BytePoly_64 = bigint_mul!(x2416, x2422, 64);
    let x2424: BytePoly_66 = bigint_nondet_quot!(ctx, x2423, x1, 66);
    let x2425: BytePoly_32 = bigint_nondet_rem!(ctx, x2423, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2424, x1, 98), x2425, 98),
            x2423,
            98
        ),
        536459,
        4,
    )?;
    let x2426: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x2425, x2419, 32), 32), x1, 32);
    let x2427: BytePoly_32 = bigint_nondet_quot!(ctx, x2426, x1, 32);
    let x2428: BytePoly_32 = bigint_nondet_rem!(ctx, x2426, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2427, x1, 64), x2428, 64),
            x2426,
            64
        ),
        260103,
        4,
    )?;
    let x2429: BytePoly_32 = bigint_add!(bigint_sub!(x5, x2422, 32), x1, 32);
    let x2430: BytePoly_32 = bigint_nondet_inv!(ctx, x2429, x1, 32);
    let x2431: BytePoly_64 = bigint_mul!(x2429, x2430, 64);
    let x2432: BytePoly_66 = bigint_nondet_quot!(ctx, x2431, x1, 66);
    let x2433: BytePoly_32 = bigint_nondet_rem!(ctx, x2431, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2432, x1, 98), x2433, 98),
            x2431,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x2433, x0, 32), 34, 1)?;
    let x2434: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x2428, 32), x1, 32), x2430, 64);
    let x2435: BytePoly_66 = bigint_nondet_quot!(ctx, x2434, x1, 66);
    let x2436: BytePoly_32 = bigint_nondet_rem!(ctx, x2434, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2435, x1, 98), x2436, 98),
            x2434,
            98
        ),
        536459,
        4,
    )?;
    let x2437: BytePoly_64 = bigint_add!(
        bigint_sub!(x2428, bigint_mul!(x2436, x2422, 64), 64),
        x1,
        64
    );
    let x2438: BytePoly_64 = bigint_nondet_quot!(ctx, x2437, x1, 64);
    let x2439: BytePoly_32 = bigint_nondet_rem!(ctx, x2437, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2438, x1, 96), x2439, 96),
            x2437,
            96
        ),
        520203,
        4,
    )?;
    let x2440: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x2436, x2436, 64), x2422, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x2441: BytePoly_66 = bigint_nondet_quot!(ctx, x2440, x1, 66);
    let x2442: BytePoly_32 = bigint_nondet_rem!(ctx, x2440, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2441, x1, 98), x2442, 98),
            x2440,
            98
        ),
        536459,
        4,
    )?;
    let x2443: BytePoly_64 = bigint_mul!(x2436, x2442, 64);
    let x2444: BytePoly_66 = bigint_nondet_quot!(ctx, x2443, x1, 66);
    let x2445: BytePoly_32 = bigint_nondet_rem!(ctx, x2443, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2444, x1, 98), x2445, 98),
            x2443,
            98
        ),
        536459,
        4,
    )?;
    let x2446: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x2445, x2439, 32), 32), x1, 32);
    let x2447: BytePoly_32 = bigint_nondet_quot!(ctx, x2446, x1, 32);
    let x2448: BytePoly_32 = bigint_nondet_rem!(ctx, x2446, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2447, x1, 64), x2448, 64),
            x2446,
            64
        ),
        260103,
        4,
    )?;
    let x2449: BytePoly_32 = bigint_add!(bigint_sub!(x5, x2442, 32), x1, 32);
    let x2450: BytePoly_32 = bigint_nondet_inv!(ctx, x2449, x1, 32);
    let x2451: BytePoly_64 = bigint_mul!(x2449, x2450, 64);
    let x2452: BytePoly_66 = bigint_nondet_quot!(ctx, x2451, x1, 66);
    let x2453: BytePoly_32 = bigint_nondet_rem!(ctx, x2451, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2452, x1, 98), x2453, 98),
            x2451,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x2453, x0, 32), 34, 1)?;
    let x2454: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x2448, 32), x1, 32), x2450, 64);
    let x2455: BytePoly_66 = bigint_nondet_quot!(ctx, x2454, x1, 66);
    let x2456: BytePoly_32 = bigint_nondet_rem!(ctx, x2454, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2455, x1, 98), x2456, 98),
            x2454,
            98
        ),
        536459,
        4,
    )?;
    let x2457: BytePoly_64 = bigint_add!(
        bigint_sub!(x2448, bigint_mul!(x2456, x2442, 64), 64),
        x1,
        64
    );
    let x2458: BytePoly_64 = bigint_nondet_quot!(ctx, x2457, x1, 64);
    let x2459: BytePoly_32 = bigint_nondet_rem!(ctx, x2457, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2458, x1, 96), x2459, 96),
            x2457,
            96
        ),
        520203,
        4,
    )?;
    let x2460: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x2456, x2456, 64), x2442, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x2461: BytePoly_66 = bigint_nondet_quot!(ctx, x2460, x1, 66);
    let x2462: BytePoly_32 = bigint_nondet_rem!(ctx, x2460, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2461, x1, 98), x2462, 98),
            x2460,
            98
        ),
        536459,
        4,
    )?;
    let x2463: BytePoly_64 = bigint_mul!(x2456, x2462, 64);
    let x2464: BytePoly_66 = bigint_nondet_quot!(ctx, x2463, x1, 66);
    let x2465: BytePoly_32 = bigint_nondet_rem!(ctx, x2463, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2464, x1, 98), x2465, 98),
            x2463,
            98
        ),
        536459,
        4,
    )?;
    let x2466: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x2465, x2459, 32), 32), x1, 32);
    let x2467: BytePoly_32 = bigint_nondet_quot!(ctx, x2466, x1, 32);
    let x2468: BytePoly_32 = bigint_nondet_rem!(ctx, x2466, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2467, x1, 64), x2468, 64),
            x2466,
            64
        ),
        260103,
        4,
    )?;
    let x2469: BytePoly_32 = bigint_add!(bigint_sub!(x5, x2462, 32), x1, 32);
    let x2470: BytePoly_32 = bigint_nondet_inv!(ctx, x2469, x1, 32);
    let x2471: BytePoly_64 = bigint_mul!(x2469, x2470, 64);
    let x2472: BytePoly_66 = bigint_nondet_quot!(ctx, x2471, x1, 66);
    let x2473: BytePoly_32 = bigint_nondet_rem!(ctx, x2471, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2472, x1, 98), x2473, 98),
            x2471,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x2473, x0, 32), 34, 1)?;
    let x2474: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x2468, 32), x1, 32), x2470, 64);
    let x2475: BytePoly_66 = bigint_nondet_quot!(ctx, x2474, x1, 66);
    let x2476: BytePoly_32 = bigint_nondet_rem!(ctx, x2474, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2475, x1, 98), x2476, 98),
            x2474,
            98
        ),
        536459,
        4,
    )?;
    let x2477: BytePoly_64 = bigint_add!(
        bigint_sub!(x2468, bigint_mul!(x2476, x2462, 64), 64),
        x1,
        64
    );
    let x2478: BytePoly_64 = bigint_nondet_quot!(ctx, x2477, x1, 64);
    let x2479: BytePoly_32 = bigint_nondet_rem!(ctx, x2477, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2478, x1, 96), x2479, 96),
            x2477,
            96
        ),
        520203,
        4,
    )?;
    let x2480: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x2476, x2476, 64), x2462, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x2481: BytePoly_66 = bigint_nondet_quot!(ctx, x2480, x1, 66);
    let x2482: BytePoly_32 = bigint_nondet_rem!(ctx, x2480, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2481, x1, 98), x2482, 98),
            x2480,
            98
        ),
        536459,
        4,
    )?;
    let x2483: BytePoly_64 = bigint_mul!(x2476, x2482, 64);
    let x2484: BytePoly_66 = bigint_nondet_quot!(ctx, x2483, x1, 66);
    let x2485: BytePoly_32 = bigint_nondet_rem!(ctx, x2483, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2484, x1, 98), x2485, 98),
            x2483,
            98
        ),
        536459,
        4,
    )?;
    let x2486: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x2485, x2479, 32), 32), x1, 32);
    let x2487: BytePoly_32 = bigint_nondet_quot!(ctx, x2486, x1, 32);
    let x2488: BytePoly_32 = bigint_nondet_rem!(ctx, x2486, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2487, x1, 64), x2488, 64),
            x2486,
            64
        ),
        260103,
        4,
    )?;
    let x2489: BytePoly_32 = bigint_add!(bigint_sub!(x5, x2482, 32), x1, 32);
    let x2490: BytePoly_32 = bigint_nondet_inv!(ctx, x2489, x1, 32);
    let x2491: BytePoly_64 = bigint_mul!(x2489, x2490, 64);
    let x2492: BytePoly_66 = bigint_nondet_quot!(ctx, x2491, x1, 66);
    let x2493: BytePoly_32 = bigint_nondet_rem!(ctx, x2491, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2492, x1, 98), x2493, 98),
            x2491,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x2493, x0, 32), 34, 1)?;
    let x2494: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x2488, 32), x1, 32), x2490, 64);
    let x2495: BytePoly_66 = bigint_nondet_quot!(ctx, x2494, x1, 66);
    let x2496: BytePoly_32 = bigint_nondet_rem!(ctx, x2494, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2495, x1, 98), x2496, 98),
            x2494,
            98
        ),
        536459,
        4,
    )?;
    let x2497: BytePoly_64 = bigint_add!(
        bigint_sub!(x2488, bigint_mul!(x2496, x2482, 64), 64),
        x1,
        64
    );
    let x2498: BytePoly_64 = bigint_nondet_quot!(ctx, x2497, x1, 64);
    let x2499: BytePoly_32 = bigint_nondet_rem!(ctx, x2497, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2498, x1, 96), x2499, 96),
            x2497,
            96
        ),
        520203,
        4,
    )?;
    let x2500: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x2496, x2496, 64), x2482, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x2501: BytePoly_66 = bigint_nondet_quot!(ctx, x2500, x1, 66);
    let x2502: BytePoly_32 = bigint_nondet_rem!(ctx, x2500, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2501, x1, 98), x2502, 98),
            x2500,
            98
        ),
        536459,
        4,
    )?;
    let x2503: BytePoly_64 = bigint_mul!(x2496, x2502, 64);
    let x2504: BytePoly_66 = bigint_nondet_quot!(ctx, x2503, x1, 66);
    let x2505: BytePoly_32 = bigint_nondet_rem!(ctx, x2503, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2504, x1, 98), x2505, 98),
            x2503,
            98
        ),
        536459,
        4,
    )?;
    let x2506: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x2505, x2499, 32), 32), x1, 32);
    let x2507: BytePoly_32 = bigint_nondet_quot!(ctx, x2506, x1, 32);
    let x2508: BytePoly_32 = bigint_nondet_rem!(ctx, x2506, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2507, x1, 64), x2508, 64),
            x2506,
            64
        ),
        260103,
        4,
    )?;
    let x2509: BytePoly_32 = bigint_add!(bigint_sub!(x5, x2502, 32), x1, 32);
    let x2510: BytePoly_32 = bigint_nondet_inv!(ctx, x2509, x1, 32);
    let x2511: BytePoly_64 = bigint_mul!(x2509, x2510, 64);
    let x2512: BytePoly_66 = bigint_nondet_quot!(ctx, x2511, x1, 66);
    let x2513: BytePoly_32 = bigint_nondet_rem!(ctx, x2511, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2512, x1, 98), x2513, 98),
            x2511,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x2513, x0, 32), 34, 1)?;
    let x2514: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x2508, 32), x1, 32), x2510, 64);
    let x2515: BytePoly_66 = bigint_nondet_quot!(ctx, x2514, x1, 66);
    let x2516: BytePoly_32 = bigint_nondet_rem!(ctx, x2514, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2515, x1, 98), x2516, 98),
            x2514,
            98
        ),
        536459,
        4,
    )?;
    let x2517: BytePoly_64 = bigint_add!(
        bigint_sub!(x2508, bigint_mul!(x2516, x2502, 64), 64),
        x1,
        64
    );
    let x2518: BytePoly_64 = bigint_nondet_quot!(ctx, x2517, x1, 64);
    let x2519: BytePoly_32 = bigint_nondet_rem!(ctx, x2517, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2518, x1, 96), x2519, 96),
            x2517,
            96
        ),
        520203,
        4,
    )?;
    let x2520: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x2516, x2516, 64), x2502, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x2521: BytePoly_66 = bigint_nondet_quot!(ctx, x2520, x1, 66);
    let x2522: BytePoly_32 = bigint_nondet_rem!(ctx, x2520, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2521, x1, 98), x2522, 98),
            x2520,
            98
        ),
        536459,
        4,
    )?;
    let x2523: BytePoly_64 = bigint_mul!(x2516, x2522, 64);
    let x2524: BytePoly_66 = bigint_nondet_quot!(ctx, x2523, x1, 66);
    let x2525: BytePoly_32 = bigint_nondet_rem!(ctx, x2523, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2524, x1, 98), x2525, 98),
            x2523,
            98
        ),
        536459,
        4,
    )?;
    let x2526: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x2525, x2519, 32), 32), x1, 32);
    let x2527: BytePoly_32 = bigint_nondet_quot!(ctx, x2526, x1, 32);
    let x2528: BytePoly_32 = bigint_nondet_rem!(ctx, x2526, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2527, x1, 64), x2528, 64),
            x2526,
            64
        ),
        260103,
        4,
    )?;
    let x2529: BytePoly_32 = bigint_add!(bigint_sub!(x5, x2522, 32), x1, 32);
    let x2530: BytePoly_32 = bigint_nondet_inv!(ctx, x2529, x1, 32);
    let x2531: BytePoly_64 = bigint_mul!(x2529, x2530, 64);
    let x2532: BytePoly_66 = bigint_nondet_quot!(ctx, x2531, x1, 66);
    let x2533: BytePoly_32 = bigint_nondet_rem!(ctx, x2531, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2532, x1, 98), x2533, 98),
            x2531,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x2533, x0, 32), 34, 1)?;
    let x2534: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x2528, 32), x1, 32), x2530, 64);
    let x2535: BytePoly_66 = bigint_nondet_quot!(ctx, x2534, x1, 66);
    let x2536: BytePoly_32 = bigint_nondet_rem!(ctx, x2534, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2535, x1, 98), x2536, 98),
            x2534,
            98
        ),
        536459,
        4,
    )?;
    let x2537: BytePoly_64 = bigint_add!(
        bigint_sub!(x2528, bigint_mul!(x2536, x2522, 64), 64),
        x1,
        64
    );
    let x2538: BytePoly_64 = bigint_nondet_quot!(ctx, x2537, x1, 64);
    let x2539: BytePoly_32 = bigint_nondet_rem!(ctx, x2537, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2538, x1, 96), x2539, 96),
            x2537,
            96
        ),
        520203,
        4,
    )?;
    let x2540: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x2536, x2536, 64), x2522, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x2541: BytePoly_66 = bigint_nondet_quot!(ctx, x2540, x1, 66);
    let x2542: BytePoly_32 = bigint_nondet_rem!(ctx, x2540, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2541, x1, 98), x2542, 98),
            x2540,
            98
        ),
        536459,
        4,
    )?;
    let x2543: BytePoly_64 = bigint_mul!(x2536, x2542, 64);
    let x2544: BytePoly_66 = bigint_nondet_quot!(ctx, x2543, x1, 66);
    let x2545: BytePoly_32 = bigint_nondet_rem!(ctx, x2543, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2544, x1, 98), x2545, 98),
            x2543,
            98
        ),
        536459,
        4,
    )?;
    let x2546: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x2545, x2539, 32), 32), x1, 32);
    let x2547: BytePoly_32 = bigint_nondet_quot!(ctx, x2546, x1, 32);
    let x2548: BytePoly_32 = bigint_nondet_rem!(ctx, x2546, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2547, x1, 64), x2548, 64),
            x2546,
            64
        ),
        260103,
        4,
    )?;
    let x2549: BytePoly_32 = bigint_add!(bigint_sub!(x5, x2542, 32), x1, 32);
    let x2550: BytePoly_32 = bigint_nondet_inv!(ctx, x2549, x1, 32);
    let x2551: BytePoly_64 = bigint_mul!(x2549, x2550, 64);
    let x2552: BytePoly_66 = bigint_nondet_quot!(ctx, x2551, x1, 66);
    let x2553: BytePoly_32 = bigint_nondet_rem!(ctx, x2551, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2552, x1, 98), x2553, 98),
            x2551,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x2553, x0, 32), 34, 1)?;
    let x2554: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x2548, 32), x1, 32), x2550, 64);
    let x2555: BytePoly_66 = bigint_nondet_quot!(ctx, x2554, x1, 66);
    let x2556: BytePoly_32 = bigint_nondet_rem!(ctx, x2554, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2555, x1, 98), x2556, 98),
            x2554,
            98
        ),
        536459,
        4,
    )?;
    let x2557: BytePoly_64 = bigint_add!(
        bigint_sub!(x2548, bigint_mul!(x2556, x2542, 64), 64),
        x1,
        64
    );
    let x2558: BytePoly_64 = bigint_nondet_quot!(ctx, x2557, x1, 64);
    let x2559: BytePoly_32 = bigint_nondet_rem!(ctx, x2557, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2558, x1, 96), x2559, 96),
            x2557,
            96
        ),
        520203,
        4,
    )?;
    let x2560: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x2556, x2556, 64), x2542, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x2561: BytePoly_66 = bigint_nondet_quot!(ctx, x2560, x1, 66);
    let x2562: BytePoly_32 = bigint_nondet_rem!(ctx, x2560, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2561, x1, 98), x2562, 98),
            x2560,
            98
        ),
        536459,
        4,
    )?;
    let x2563: BytePoly_64 = bigint_mul!(x2556, x2562, 64);
    let x2564: BytePoly_66 = bigint_nondet_quot!(ctx, x2563, x1, 66);
    let x2565: BytePoly_32 = bigint_nondet_rem!(ctx, x2563, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2564, x1, 98), x2565, 98),
            x2563,
            98
        ),
        536459,
        4,
    )?;
    let x2566: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x2565, x2559, 32), 32), x1, 32);
    let x2567: BytePoly_32 = bigint_nondet_quot!(ctx, x2566, x1, 32);
    let x2568: BytePoly_32 = bigint_nondet_rem!(ctx, x2566, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2567, x1, 64), x2568, 64),
            x2566,
            64
        ),
        260103,
        4,
    )?;
    let x2569: BytePoly_32 = bigint_add!(bigint_sub!(x5, x2562, 32), x1, 32);
    let x2570: BytePoly_32 = bigint_nondet_inv!(ctx, x2569, x1, 32);
    let x2571: BytePoly_64 = bigint_mul!(x2569, x2570, 64);
    let x2572: BytePoly_66 = bigint_nondet_quot!(ctx, x2571, x1, 66);
    let x2573: BytePoly_32 = bigint_nondet_rem!(ctx, x2571, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2572, x1, 98), x2573, 98),
            x2571,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x2573, x0, 32), 34, 1)?;
    let x2574: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x2568, 32), x1, 32), x2570, 64);
    let x2575: BytePoly_66 = bigint_nondet_quot!(ctx, x2574, x1, 66);
    let x2576: BytePoly_32 = bigint_nondet_rem!(ctx, x2574, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2575, x1, 98), x2576, 98),
            x2574,
            98
        ),
        536459,
        4,
    )?;
    let x2577: BytePoly_64 = bigint_add!(
        bigint_sub!(x2568, bigint_mul!(x2576, x2562, 64), 64),
        x1,
        64
    );
    let x2578: BytePoly_64 = bigint_nondet_quot!(ctx, x2577, x1, 64);
    let x2579: BytePoly_32 = bigint_nondet_rem!(ctx, x2577, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2578, x1, 96), x2579, 96),
            x2577,
            96
        ),
        520203,
        4,
    )?;
    let x2580: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x2576, x2576, 64), x2562, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x2581: BytePoly_66 = bigint_nondet_quot!(ctx, x2580, x1, 66);
    let x2582: BytePoly_32 = bigint_nondet_rem!(ctx, x2580, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2581, x1, 98), x2582, 98),
            x2580,
            98
        ),
        536459,
        4,
    )?;
    let x2583: BytePoly_64 = bigint_mul!(x2576, x2582, 64);
    let x2584: BytePoly_66 = bigint_nondet_quot!(ctx, x2583, x1, 66);
    let x2585: BytePoly_32 = bigint_nondet_rem!(ctx, x2583, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2584, x1, 98), x2585, 98),
            x2583,
            98
        ),
        536459,
        4,
    )?;
    let x2586: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x2585, x2579, 32), 32), x1, 32);
    let x2587: BytePoly_32 = bigint_nondet_quot!(ctx, x2586, x1, 32);
    let x2588: BytePoly_32 = bigint_nondet_rem!(ctx, x2586, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2587, x1, 64), x2588, 64),
            x2586,
            64
        ),
        260103,
        4,
    )?;
    let x2589: BytePoly_32 = bigint_add!(bigint_sub!(x5, x2582, 32), x1, 32);
    let x2590: BytePoly_32 = bigint_nondet_inv!(ctx, x2589, x1, 32);
    let x2591: BytePoly_64 = bigint_mul!(x2589, x2590, 64);
    let x2592: BytePoly_66 = bigint_nondet_quot!(ctx, x2591, x1, 66);
    let x2593: BytePoly_32 = bigint_nondet_rem!(ctx, x2591, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2592, x1, 98), x2593, 98),
            x2591,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x2593, x0, 32), 34, 1)?;
    let x2594: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x2588, 32), x1, 32), x2590, 64);
    let x2595: BytePoly_66 = bigint_nondet_quot!(ctx, x2594, x1, 66);
    let x2596: BytePoly_32 = bigint_nondet_rem!(ctx, x2594, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2595, x1, 98), x2596, 98),
            x2594,
            98
        ),
        536459,
        4,
    )?;
    let x2597: BytePoly_64 = bigint_add!(
        bigint_sub!(x2588, bigint_mul!(x2596, x2582, 64), 64),
        x1,
        64
    );
    let x2598: BytePoly_64 = bigint_nondet_quot!(ctx, x2597, x1, 64);
    let x2599: BytePoly_32 = bigint_nondet_rem!(ctx, x2597, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2598, x1, 96), x2599, 96),
            x2597,
            96
        ),
        520203,
        4,
    )?;
    let x2600: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x2596, x2596, 64), x2582, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x2601: BytePoly_66 = bigint_nondet_quot!(ctx, x2600, x1, 66);
    let x2602: BytePoly_32 = bigint_nondet_rem!(ctx, x2600, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2601, x1, 98), x2602, 98),
            x2600,
            98
        ),
        536459,
        4,
    )?;
    let x2603: BytePoly_64 = bigint_mul!(x2596, x2602, 64);
    let x2604: BytePoly_66 = bigint_nondet_quot!(ctx, x2603, x1, 66);
    let x2605: BytePoly_32 = bigint_nondet_rem!(ctx, x2603, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2604, x1, 98), x2605, 98),
            x2603,
            98
        ),
        536459,
        4,
    )?;
    let x2606: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x2605, x2599, 32), 32), x1, 32);
    let x2607: BytePoly_32 = bigint_nondet_quot!(ctx, x2606, x1, 32);
    let x2608: BytePoly_32 = bigint_nondet_rem!(ctx, x2606, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2607, x1, 64), x2608, 64),
            x2606,
            64
        ),
        260103,
        4,
    )?;
    let x2609: BytePoly_32 = bigint_add!(bigint_sub!(x5, x2602, 32), x1, 32);
    let x2610: BytePoly_32 = bigint_nondet_inv!(ctx, x2609, x1, 32);
    let x2611: BytePoly_64 = bigint_mul!(x2609, x2610, 64);
    let x2612: BytePoly_66 = bigint_nondet_quot!(ctx, x2611, x1, 66);
    let x2613: BytePoly_32 = bigint_nondet_rem!(ctx, x2611, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2612, x1, 98), x2613, 98),
            x2611,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x2613, x0, 32), 34, 1)?;
    let x2614: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x2608, 32), x1, 32), x2610, 64);
    let x2615: BytePoly_66 = bigint_nondet_quot!(ctx, x2614, x1, 66);
    let x2616: BytePoly_32 = bigint_nondet_rem!(ctx, x2614, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2615, x1, 98), x2616, 98),
            x2614,
            98
        ),
        536459,
        4,
    )?;
    let x2617: BytePoly_64 = bigint_add!(
        bigint_sub!(x2608, bigint_mul!(x2616, x2602, 64), 64),
        x1,
        64
    );
    let x2618: BytePoly_64 = bigint_nondet_quot!(ctx, x2617, x1, 64);
    let x2619: BytePoly_32 = bigint_nondet_rem!(ctx, x2617, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2618, x1, 96), x2619, 96),
            x2617,
            96
        ),
        520203,
        4,
    )?;
    let x2620: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x2616, x2616, 64), x2602, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x2621: BytePoly_66 = bigint_nondet_quot!(ctx, x2620, x1, 66);
    let x2622: BytePoly_32 = bigint_nondet_rem!(ctx, x2620, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2621, x1, 98), x2622, 98),
            x2620,
            98
        ),
        536459,
        4,
    )?;
    let x2623: BytePoly_64 = bigint_mul!(x2616, x2622, 64);
    let x2624: BytePoly_66 = bigint_nondet_quot!(ctx, x2623, x1, 66);
    let x2625: BytePoly_32 = bigint_nondet_rem!(ctx, x2623, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2624, x1, 98), x2625, 98),
            x2623,
            98
        ),
        536459,
        4,
    )?;
    let x2626: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x2625, x2619, 32), 32), x1, 32);
    let x2627: BytePoly_32 = bigint_nondet_quot!(ctx, x2626, x1, 32);
    let x2628: BytePoly_32 = bigint_nondet_rem!(ctx, x2626, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2627, x1, 64), x2628, 64),
            x2626,
            64
        ),
        260103,
        4,
    )?;
    let x2629: BytePoly_32 = bigint_add!(bigint_sub!(x5, x2622, 32), x1, 32);
    let x2630: BytePoly_32 = bigint_nondet_inv!(ctx, x2629, x1, 32);
    let x2631: BytePoly_64 = bigint_mul!(x2629, x2630, 64);
    let x2632: BytePoly_66 = bigint_nondet_quot!(ctx, x2631, x1, 66);
    let x2633: BytePoly_32 = bigint_nondet_rem!(ctx, x2631, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2632, x1, 98), x2633, 98),
            x2631,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x2633, x0, 32), 34, 1)?;
    let x2634: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x2628, 32), x1, 32), x2630, 64);
    let x2635: BytePoly_66 = bigint_nondet_quot!(ctx, x2634, x1, 66);
    let x2636: BytePoly_32 = bigint_nondet_rem!(ctx, x2634, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2635, x1, 98), x2636, 98),
            x2634,
            98
        ),
        536459,
        4,
    )?;
    let x2637: BytePoly_64 = bigint_add!(
        bigint_sub!(x2628, bigint_mul!(x2636, x2622, 64), 64),
        x1,
        64
    );
    let x2638: BytePoly_64 = bigint_nondet_quot!(ctx, x2637, x1, 64);
    let x2639: BytePoly_32 = bigint_nondet_rem!(ctx, x2637, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2638, x1, 96), x2639, 96),
            x2637,
            96
        ),
        520203,
        4,
    )?;
    let x2640: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x2636, x2636, 64), x2622, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x2641: BytePoly_66 = bigint_nondet_quot!(ctx, x2640, x1, 66);
    let x2642: BytePoly_32 = bigint_nondet_rem!(ctx, x2640, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2641, x1, 98), x2642, 98),
            x2640,
            98
        ),
        536459,
        4,
    )?;
    let x2643: BytePoly_64 = bigint_mul!(x2636, x2642, 64);
    let x2644: BytePoly_66 = bigint_nondet_quot!(ctx, x2643, x1, 66);
    let x2645: BytePoly_32 = bigint_nondet_rem!(ctx, x2643, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2644, x1, 98), x2645, 98),
            x2643,
            98
        ),
        536459,
        4,
    )?;
    let x2646: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x2645, x2639, 32), 32), x1, 32);
    let x2647: BytePoly_32 = bigint_nondet_quot!(ctx, x2646, x1, 32);
    let x2648: BytePoly_32 = bigint_nondet_rem!(ctx, x2646, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2647, x1, 64), x2648, 64),
            x2646,
            64
        ),
        260103,
        4,
    )?;
    let x2649: BytePoly_32 = bigint_add!(bigint_sub!(x5, x2642, 32), x1, 32);
    let x2650: BytePoly_32 = bigint_nondet_inv!(ctx, x2649, x1, 32);
    let x2651: BytePoly_64 = bigint_mul!(x2649, x2650, 64);
    let x2652: BytePoly_66 = bigint_nondet_quot!(ctx, x2651, x1, 66);
    let x2653: BytePoly_32 = bigint_nondet_rem!(ctx, x2651, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2652, x1, 98), x2653, 98),
            x2651,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x2653, x0, 32), 34, 1)?;
    let x2654: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x2648, 32), x1, 32), x2650, 64);
    let x2655: BytePoly_66 = bigint_nondet_quot!(ctx, x2654, x1, 66);
    let x2656: BytePoly_32 = bigint_nondet_rem!(ctx, x2654, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2655, x1, 98), x2656, 98),
            x2654,
            98
        ),
        536459,
        4,
    )?;
    let x2657: BytePoly_64 = bigint_add!(
        bigint_sub!(x2648, bigint_mul!(x2656, x2642, 64), 64),
        x1,
        64
    );
    let x2658: BytePoly_64 = bigint_nondet_quot!(ctx, x2657, x1, 64);
    let x2659: BytePoly_32 = bigint_nondet_rem!(ctx, x2657, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2658, x1, 96), x2659, 96),
            x2657,
            96
        ),
        520203,
        4,
    )?;
    let x2660: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x2656, x2656, 64), x2642, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x2661: BytePoly_66 = bigint_nondet_quot!(ctx, x2660, x1, 66);
    let x2662: BytePoly_32 = bigint_nondet_rem!(ctx, x2660, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2661, x1, 98), x2662, 98),
            x2660,
            98
        ),
        536459,
        4,
    )?;
    let x2663: BytePoly_64 = bigint_mul!(x2656, x2662, 64);
    let x2664: BytePoly_66 = bigint_nondet_quot!(ctx, x2663, x1, 66);
    let x2665: BytePoly_32 = bigint_nondet_rem!(ctx, x2663, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2664, x1, 98), x2665, 98),
            x2663,
            98
        ),
        536459,
        4,
    )?;
    let x2666: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x2665, x2659, 32), 32), x1, 32);
    let x2667: BytePoly_32 = bigint_nondet_quot!(ctx, x2666, x1, 32);
    let x2668: BytePoly_32 = bigint_nondet_rem!(ctx, x2666, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2667, x1, 64), x2668, 64),
            x2666,
            64
        ),
        260103,
        4,
    )?;
    let x2669: BytePoly_32 = bigint_add!(bigint_sub!(x5, x2662, 32), x1, 32);
    let x2670: BytePoly_32 = bigint_nondet_inv!(ctx, x2669, x1, 32);
    let x2671: BytePoly_64 = bigint_mul!(x2669, x2670, 64);
    let x2672: BytePoly_66 = bigint_nondet_quot!(ctx, x2671, x1, 66);
    let x2673: BytePoly_32 = bigint_nondet_rem!(ctx, x2671, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2672, x1, 98), x2673, 98),
            x2671,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x2673, x0, 32), 34, 1)?;
    let x2674: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x2668, 32), x1, 32), x2670, 64);
    let x2675: BytePoly_66 = bigint_nondet_quot!(ctx, x2674, x1, 66);
    let x2676: BytePoly_32 = bigint_nondet_rem!(ctx, x2674, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2675, x1, 98), x2676, 98),
            x2674,
            98
        ),
        536459,
        4,
    )?;
    let x2677: BytePoly_64 = bigint_add!(
        bigint_sub!(x2668, bigint_mul!(x2676, x2662, 64), 64),
        x1,
        64
    );
    let x2678: BytePoly_64 = bigint_nondet_quot!(ctx, x2677, x1, 64);
    let x2679: BytePoly_32 = bigint_nondet_rem!(ctx, x2677, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2678, x1, 96), x2679, 96),
            x2677,
            96
        ),
        520203,
        4,
    )?;
    let x2680: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x2676, x2676, 64), x2662, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x2681: BytePoly_66 = bigint_nondet_quot!(ctx, x2680, x1, 66);
    let x2682: BytePoly_32 = bigint_nondet_rem!(ctx, x2680, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2681, x1, 98), x2682, 98),
            x2680,
            98
        ),
        536459,
        4,
    )?;
    let x2683: BytePoly_64 = bigint_mul!(x2676, x2682, 64);
    let x2684: BytePoly_66 = bigint_nondet_quot!(ctx, x2683, x1, 66);
    let x2685: BytePoly_32 = bigint_nondet_rem!(ctx, x2683, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2684, x1, 98), x2685, 98),
            x2683,
            98
        ),
        536459,
        4,
    )?;
    let x2686: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x2685, x2679, 32), 32), x1, 32);
    let x2687: BytePoly_32 = bigint_nondet_quot!(ctx, x2686, x1, 32);
    let x2688: BytePoly_32 = bigint_nondet_rem!(ctx, x2686, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2687, x1, 64), x2688, 64),
            x2686,
            64
        ),
        260103,
        4,
    )?;
    let x2689: BytePoly_32 = bigint_add!(bigint_sub!(x5, x2682, 32), x1, 32);
    let x2690: BytePoly_32 = bigint_nondet_inv!(ctx, x2689, x1, 32);
    let x2691: BytePoly_64 = bigint_mul!(x2689, x2690, 64);
    let x2692: BytePoly_66 = bigint_nondet_quot!(ctx, x2691, x1, 66);
    let x2693: BytePoly_32 = bigint_nondet_rem!(ctx, x2691, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2692, x1, 98), x2693, 98),
            x2691,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x2693, x0, 32), 34, 1)?;
    let x2694: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x2688, 32), x1, 32), x2690, 64);
    let x2695: BytePoly_66 = bigint_nondet_quot!(ctx, x2694, x1, 66);
    let x2696: BytePoly_32 = bigint_nondet_rem!(ctx, x2694, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2695, x1, 98), x2696, 98),
            x2694,
            98
        ),
        536459,
        4,
    )?;
    let x2697: BytePoly_64 = bigint_add!(
        bigint_sub!(x2688, bigint_mul!(x2696, x2682, 64), 64),
        x1,
        64
    );
    let x2698: BytePoly_64 = bigint_nondet_quot!(ctx, x2697, x1, 64);
    let x2699: BytePoly_32 = bigint_nondet_rem!(ctx, x2697, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2698, x1, 96), x2699, 96),
            x2697,
            96
        ),
        520203,
        4,
    )?;
    let x2700: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x2696, x2696, 64), x2682, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x2701: BytePoly_66 = bigint_nondet_quot!(ctx, x2700, x1, 66);
    let x2702: BytePoly_32 = bigint_nondet_rem!(ctx, x2700, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2701, x1, 98), x2702, 98),
            x2700,
            98
        ),
        536459,
        4,
    )?;
    let x2703: BytePoly_64 = bigint_mul!(x2696, x2702, 64);
    let x2704: BytePoly_66 = bigint_nondet_quot!(ctx, x2703, x1, 66);
    let x2705: BytePoly_32 = bigint_nondet_rem!(ctx, x2703, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2704, x1, 98), x2705, 98),
            x2703,
            98
        ),
        536459,
        4,
    )?;
    let x2706: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x2705, x2699, 32), 32), x1, 32);
    let x2707: BytePoly_32 = bigint_nondet_quot!(ctx, x2706, x1, 32);
    let x2708: BytePoly_32 = bigint_nondet_rem!(ctx, x2706, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2707, x1, 64), x2708, 64),
            x2706,
            64
        ),
        260103,
        4,
    )?;
    let x2709: BytePoly_32 = bigint_add!(bigint_sub!(x5, x2702, 32), x1, 32);
    let x2710: BytePoly_32 = bigint_nondet_inv!(ctx, x2709, x1, 32);
    let x2711: BytePoly_64 = bigint_mul!(x2709, x2710, 64);
    let x2712: BytePoly_66 = bigint_nondet_quot!(ctx, x2711, x1, 66);
    let x2713: BytePoly_32 = bigint_nondet_rem!(ctx, x2711, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2712, x1, 98), x2713, 98),
            x2711,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x2713, x0, 32), 34, 1)?;
    let x2714: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x2708, 32), x1, 32), x2710, 64);
    let x2715: BytePoly_66 = bigint_nondet_quot!(ctx, x2714, x1, 66);
    let x2716: BytePoly_32 = bigint_nondet_rem!(ctx, x2714, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2715, x1, 98), x2716, 98),
            x2714,
            98
        ),
        536459,
        4,
    )?;
    let x2717: BytePoly_64 = bigint_add!(
        bigint_sub!(x2708, bigint_mul!(x2716, x2702, 64), 64),
        x1,
        64
    );
    let x2718: BytePoly_64 = bigint_nondet_quot!(ctx, x2717, x1, 64);
    let x2719: BytePoly_32 = bigint_nondet_rem!(ctx, x2717, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2718, x1, 96), x2719, 96),
            x2717,
            96
        ),
        520203,
        4,
    )?;
    let x2720: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x2716, x2716, 64), x2702, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x2721: BytePoly_66 = bigint_nondet_quot!(ctx, x2720, x1, 66);
    let x2722: BytePoly_32 = bigint_nondet_rem!(ctx, x2720, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2721, x1, 98), x2722, 98),
            x2720,
            98
        ),
        536459,
        4,
    )?;
    let x2723: BytePoly_64 = bigint_mul!(x2716, x2722, 64);
    let x2724: BytePoly_66 = bigint_nondet_quot!(ctx, x2723, x1, 66);
    let x2725: BytePoly_32 = bigint_nondet_rem!(ctx, x2723, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2724, x1, 98), x2725, 98),
            x2723,
            98
        ),
        536459,
        4,
    )?;
    let x2726: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x2725, x2719, 32), 32), x1, 32);
    let x2727: BytePoly_32 = bigint_nondet_quot!(ctx, x2726, x1, 32);
    let x2728: BytePoly_32 = bigint_nondet_rem!(ctx, x2726, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2727, x1, 64), x2728, 64),
            x2726,
            64
        ),
        260103,
        4,
    )?;
    let x2729: BytePoly_32 = bigint_add!(bigint_sub!(x5, x2722, 32), x1, 32);
    let x2730: BytePoly_32 = bigint_nondet_inv!(ctx, x2729, x1, 32);
    let x2731: BytePoly_64 = bigint_mul!(x2729, x2730, 64);
    let x2732: BytePoly_66 = bigint_nondet_quot!(ctx, x2731, x1, 66);
    let x2733: BytePoly_32 = bigint_nondet_rem!(ctx, x2731, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2732, x1, 98), x2733, 98),
            x2731,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x2733, x0, 32), 34, 1)?;
    let x2734: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x2728, 32), x1, 32), x2730, 64);
    let x2735: BytePoly_66 = bigint_nondet_quot!(ctx, x2734, x1, 66);
    let x2736: BytePoly_32 = bigint_nondet_rem!(ctx, x2734, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2735, x1, 98), x2736, 98),
            x2734,
            98
        ),
        536459,
        4,
    )?;
    let x2737: BytePoly_64 = bigint_add!(
        bigint_sub!(x2728, bigint_mul!(x2736, x2722, 64), 64),
        x1,
        64
    );
    let x2738: BytePoly_64 = bigint_nondet_quot!(ctx, x2737, x1, 64);
    let x2739: BytePoly_32 = bigint_nondet_rem!(ctx, x2737, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2738, x1, 96), x2739, 96),
            x2737,
            96
        ),
        520203,
        4,
    )?;
    let x2740: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x2736, x2736, 64), x2722, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x2741: BytePoly_66 = bigint_nondet_quot!(ctx, x2740, x1, 66);
    let x2742: BytePoly_32 = bigint_nondet_rem!(ctx, x2740, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2741, x1, 98), x2742, 98),
            x2740,
            98
        ),
        536459,
        4,
    )?;
    let x2743: BytePoly_64 = bigint_mul!(x2736, x2742, 64);
    let x2744: BytePoly_66 = bigint_nondet_quot!(ctx, x2743, x1, 66);
    let x2745: BytePoly_32 = bigint_nondet_rem!(ctx, x2743, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2744, x1, 98), x2745, 98),
            x2743,
            98
        ),
        536459,
        4,
    )?;
    let x2746: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x2745, x2739, 32), 32), x1, 32);
    let x2747: BytePoly_32 = bigint_nondet_quot!(ctx, x2746, x1, 32);
    let x2748: BytePoly_32 = bigint_nondet_rem!(ctx, x2746, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2747, x1, 64), x2748, 64),
            x2746,
            64
        ),
        260103,
        4,
    )?;
    let x2749: BytePoly_32 = bigint_add!(bigint_sub!(x5, x2742, 32), x1, 32);
    let x2750: BytePoly_32 = bigint_nondet_inv!(ctx, x2749, x1, 32);
    let x2751: BytePoly_64 = bigint_mul!(x2749, x2750, 64);
    let x2752: BytePoly_66 = bigint_nondet_quot!(ctx, x2751, x1, 66);
    let x2753: BytePoly_32 = bigint_nondet_rem!(ctx, x2751, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2752, x1, 98), x2753, 98),
            x2751,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x2753, x0, 32), 34, 1)?;
    let x2754: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x2748, 32), x1, 32), x2750, 64);
    let x2755: BytePoly_66 = bigint_nondet_quot!(ctx, x2754, x1, 66);
    let x2756: BytePoly_32 = bigint_nondet_rem!(ctx, x2754, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2755, x1, 98), x2756, 98),
            x2754,
            98
        ),
        536459,
        4,
    )?;
    let x2757: BytePoly_64 = bigint_add!(
        bigint_sub!(x2748, bigint_mul!(x2756, x2742, 64), 64),
        x1,
        64
    );
    let x2758: BytePoly_64 = bigint_nondet_quot!(ctx, x2757, x1, 64);
    let x2759: BytePoly_32 = bigint_nondet_rem!(ctx, x2757, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2758, x1, 96), x2759, 96),
            x2757,
            96
        ),
        520203,
        4,
    )?;
    let x2760: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x2756, x2756, 64), x2742, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x2761: BytePoly_66 = bigint_nondet_quot!(ctx, x2760, x1, 66);
    let x2762: BytePoly_32 = bigint_nondet_rem!(ctx, x2760, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2761, x1, 98), x2762, 98),
            x2760,
            98
        ),
        536459,
        4,
    )?;
    let x2763: BytePoly_64 = bigint_mul!(x2756, x2762, 64);
    let x2764: BytePoly_66 = bigint_nondet_quot!(ctx, x2763, x1, 66);
    let x2765: BytePoly_32 = bigint_nondet_rem!(ctx, x2763, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2764, x1, 98), x2765, 98),
            x2763,
            98
        ),
        536459,
        4,
    )?;
    let x2766: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x2765, x2759, 32), 32), x1, 32);
    let x2767: BytePoly_32 = bigint_nondet_quot!(ctx, x2766, x1, 32);
    let x2768: BytePoly_32 = bigint_nondet_rem!(ctx, x2766, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2767, x1, 64), x2768, 64),
            x2766,
            64
        ),
        260103,
        4,
    )?;
    let x2769: BytePoly_32 = bigint_add!(bigint_sub!(x5, x2762, 32), x1, 32);
    let x2770: BytePoly_32 = bigint_nondet_inv!(ctx, x2769, x1, 32);
    let x2771: BytePoly_64 = bigint_mul!(x2769, x2770, 64);
    let x2772: BytePoly_66 = bigint_nondet_quot!(ctx, x2771, x1, 66);
    let x2773: BytePoly_32 = bigint_nondet_rem!(ctx, x2771, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2772, x1, 98), x2773, 98),
            x2771,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x2773, x0, 32), 34, 1)?;
    let x2774: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x2768, 32), x1, 32), x2770, 64);
    let x2775: BytePoly_66 = bigint_nondet_quot!(ctx, x2774, x1, 66);
    let x2776: BytePoly_32 = bigint_nondet_rem!(ctx, x2774, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2775, x1, 98), x2776, 98),
            x2774,
            98
        ),
        536459,
        4,
    )?;
    let x2777: BytePoly_64 = bigint_add!(
        bigint_sub!(x2768, bigint_mul!(x2776, x2762, 64), 64),
        x1,
        64
    );
    let x2778: BytePoly_64 = bigint_nondet_quot!(ctx, x2777, x1, 64);
    let x2779: BytePoly_32 = bigint_nondet_rem!(ctx, x2777, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2778, x1, 96), x2779, 96),
            x2777,
            96
        ),
        520203,
        4,
    )?;
    let x2780: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x2776, x2776, 64), x2762, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x2781: BytePoly_66 = bigint_nondet_quot!(ctx, x2780, x1, 66);
    let x2782: BytePoly_32 = bigint_nondet_rem!(ctx, x2780, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2781, x1, 98), x2782, 98),
            x2780,
            98
        ),
        536459,
        4,
    )?;
    let x2783: BytePoly_64 = bigint_mul!(x2776, x2782, 64);
    let x2784: BytePoly_66 = bigint_nondet_quot!(ctx, x2783, x1, 66);
    let x2785: BytePoly_32 = bigint_nondet_rem!(ctx, x2783, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2784, x1, 98), x2785, 98),
            x2783,
            98
        ),
        536459,
        4,
    )?;
    let x2786: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x2785, x2779, 32), 32), x1, 32);
    let x2787: BytePoly_32 = bigint_nondet_quot!(ctx, x2786, x1, 32);
    let x2788: BytePoly_32 = bigint_nondet_rem!(ctx, x2786, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2787, x1, 64), x2788, 64),
            x2786,
            64
        ),
        260103,
        4,
    )?;
    let x2789: BytePoly_32 = bigint_add!(bigint_sub!(x5, x2782, 32), x1, 32);
    let x2790: BytePoly_32 = bigint_nondet_inv!(ctx, x2789, x1, 32);
    let x2791: BytePoly_64 = bigint_mul!(x2789, x2790, 64);
    let x2792: BytePoly_66 = bigint_nondet_quot!(ctx, x2791, x1, 66);
    let x2793: BytePoly_32 = bigint_nondet_rem!(ctx, x2791, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2792, x1, 98), x2793, 98),
            x2791,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x2793, x0, 32), 34, 1)?;
    let x2794: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x2788, 32), x1, 32), x2790, 64);
    let x2795: BytePoly_66 = bigint_nondet_quot!(ctx, x2794, x1, 66);
    let x2796: BytePoly_32 = bigint_nondet_rem!(ctx, x2794, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2795, x1, 98), x2796, 98),
            x2794,
            98
        ),
        536459,
        4,
    )?;
    let x2797: BytePoly_64 = bigint_add!(
        bigint_sub!(x2788, bigint_mul!(x2796, x2782, 64), 64),
        x1,
        64
    );
    let x2798: BytePoly_64 = bigint_nondet_quot!(ctx, x2797, x1, 64);
    let x2799: BytePoly_32 = bigint_nondet_rem!(ctx, x2797, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2798, x1, 96), x2799, 96),
            x2797,
            96
        ),
        520203,
        4,
    )?;
    let x2800: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x2796, x2796, 64), x2782, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x2801: BytePoly_66 = bigint_nondet_quot!(ctx, x2800, x1, 66);
    let x2802: BytePoly_32 = bigint_nondet_rem!(ctx, x2800, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2801, x1, 98), x2802, 98),
            x2800,
            98
        ),
        536459,
        4,
    )?;
    let x2803: BytePoly_64 = bigint_mul!(x2796, x2802, 64);
    let x2804: BytePoly_66 = bigint_nondet_quot!(ctx, x2803, x1, 66);
    let x2805: BytePoly_32 = bigint_nondet_rem!(ctx, x2803, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2804, x1, 98), x2805, 98),
            x2803,
            98
        ),
        536459,
        4,
    )?;
    let x2806: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x2805, x2799, 32), 32), x1, 32);
    let x2807: BytePoly_32 = bigint_nondet_quot!(ctx, x2806, x1, 32);
    let x2808: BytePoly_32 = bigint_nondet_rem!(ctx, x2806, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2807, x1, 64), x2808, 64),
            x2806,
            64
        ),
        260103,
        4,
    )?;
    let x2809: BytePoly_32 = bigint_add!(bigint_sub!(x5, x2802, 32), x1, 32);
    let x2810: BytePoly_32 = bigint_nondet_inv!(ctx, x2809, x1, 32);
    let x2811: BytePoly_64 = bigint_mul!(x2809, x2810, 64);
    let x2812: BytePoly_66 = bigint_nondet_quot!(ctx, x2811, x1, 66);
    let x2813: BytePoly_32 = bigint_nondet_rem!(ctx, x2811, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2812, x1, 98), x2813, 98),
            x2811,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x2813, x0, 32), 34, 1)?;
    let x2814: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x2808, 32), x1, 32), x2810, 64);
    let x2815: BytePoly_66 = bigint_nondet_quot!(ctx, x2814, x1, 66);
    let x2816: BytePoly_32 = bigint_nondet_rem!(ctx, x2814, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2815, x1, 98), x2816, 98),
            x2814,
            98
        ),
        536459,
        4,
    )?;
    let x2817: BytePoly_64 = bigint_add!(
        bigint_sub!(x2808, bigint_mul!(x2816, x2802, 64), 64),
        x1,
        64
    );
    let x2818: BytePoly_64 = bigint_nondet_quot!(ctx, x2817, x1, 64);
    let x2819: BytePoly_32 = bigint_nondet_rem!(ctx, x2817, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2818, x1, 96), x2819, 96),
            x2817,
            96
        ),
        520203,
        4,
    )?;
    let x2820: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x2816, x2816, 64), x2802, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x2821: BytePoly_66 = bigint_nondet_quot!(ctx, x2820, x1, 66);
    let x2822: BytePoly_32 = bigint_nondet_rem!(ctx, x2820, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2821, x1, 98), x2822, 98),
            x2820,
            98
        ),
        536459,
        4,
    )?;
    let x2823: BytePoly_64 = bigint_mul!(x2816, x2822, 64);
    let x2824: BytePoly_66 = bigint_nondet_quot!(ctx, x2823, x1, 66);
    let x2825: BytePoly_32 = bigint_nondet_rem!(ctx, x2823, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2824, x1, 98), x2825, 98),
            x2823,
            98
        ),
        536459,
        4,
    )?;
    let x2826: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x2825, x2819, 32), 32), x1, 32);
    let x2827: BytePoly_32 = bigint_nondet_quot!(ctx, x2826, x1, 32);
    let x2828: BytePoly_32 = bigint_nondet_rem!(ctx, x2826, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2827, x1, 64), x2828, 64),
            x2826,
            64
        ),
        260103,
        4,
    )?;
    let x2829: BytePoly_32 = bigint_add!(bigint_sub!(x5, x2822, 32), x1, 32);
    let x2830: BytePoly_32 = bigint_nondet_inv!(ctx, x2829, x1, 32);
    let x2831: BytePoly_64 = bigint_mul!(x2829, x2830, 64);
    let x2832: BytePoly_66 = bigint_nondet_quot!(ctx, x2831, x1, 66);
    let x2833: BytePoly_32 = bigint_nondet_rem!(ctx, x2831, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2832, x1, 98), x2833, 98),
            x2831,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x2833, x0, 32), 34, 1)?;
    let x2834: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x2828, 32), x1, 32), x2830, 64);
    let x2835: BytePoly_66 = bigint_nondet_quot!(ctx, x2834, x1, 66);
    let x2836: BytePoly_32 = bigint_nondet_rem!(ctx, x2834, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2835, x1, 98), x2836, 98),
            x2834,
            98
        ),
        536459,
        4,
    )?;
    let x2837: BytePoly_64 = bigint_add!(
        bigint_sub!(x2828, bigint_mul!(x2836, x2822, 64), 64),
        x1,
        64
    );
    let x2838: BytePoly_64 = bigint_nondet_quot!(ctx, x2837, x1, 64);
    let x2839: BytePoly_32 = bigint_nondet_rem!(ctx, x2837, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2838, x1, 96), x2839, 96),
            x2837,
            96
        ),
        520203,
        4,
    )?;
    let x2840: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x2836, x2836, 64), x2822, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x2841: BytePoly_66 = bigint_nondet_quot!(ctx, x2840, x1, 66);
    let x2842: BytePoly_32 = bigint_nondet_rem!(ctx, x2840, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2841, x1, 98), x2842, 98),
            x2840,
            98
        ),
        536459,
        4,
    )?;
    let x2843: BytePoly_64 = bigint_mul!(x2836, x2842, 64);
    let x2844: BytePoly_66 = bigint_nondet_quot!(ctx, x2843, x1, 66);
    let x2845: BytePoly_32 = bigint_nondet_rem!(ctx, x2843, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2844, x1, 98), x2845, 98),
            x2843,
            98
        ),
        536459,
        4,
    )?;
    let x2846: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x2845, x2839, 32), 32), x1, 32);
    let x2847: BytePoly_32 = bigint_nondet_quot!(ctx, x2846, x1, 32);
    let x2848: BytePoly_32 = bigint_nondet_rem!(ctx, x2846, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2847, x1, 64), x2848, 64),
            x2846,
            64
        ),
        260103,
        4,
    )?;
    let x2849: BytePoly_32 = bigint_add!(bigint_sub!(x5, x2842, 32), x1, 32);
    let x2850: BytePoly_32 = bigint_nondet_inv!(ctx, x2849, x1, 32);
    let x2851: BytePoly_64 = bigint_mul!(x2849, x2850, 64);
    let x2852: BytePoly_66 = bigint_nondet_quot!(ctx, x2851, x1, 66);
    let x2853: BytePoly_32 = bigint_nondet_rem!(ctx, x2851, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2852, x1, 98), x2853, 98),
            x2851,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x2853, x0, 32), 34, 1)?;
    let x2854: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x2848, 32), x1, 32), x2850, 64);
    let x2855: BytePoly_66 = bigint_nondet_quot!(ctx, x2854, x1, 66);
    let x2856: BytePoly_32 = bigint_nondet_rem!(ctx, x2854, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2855, x1, 98), x2856, 98),
            x2854,
            98
        ),
        536459,
        4,
    )?;
    let x2857: BytePoly_64 = bigint_add!(
        bigint_sub!(x2848, bigint_mul!(x2856, x2842, 64), 64),
        x1,
        64
    );
    let x2858: BytePoly_64 = bigint_nondet_quot!(ctx, x2857, x1, 64);
    let x2859: BytePoly_32 = bigint_nondet_rem!(ctx, x2857, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2858, x1, 96), x2859, 96),
            x2857,
            96
        ),
        520203,
        4,
    )?;
    let x2860: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x2856, x2856, 64), x2842, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x2861: BytePoly_66 = bigint_nondet_quot!(ctx, x2860, x1, 66);
    let x2862: BytePoly_32 = bigint_nondet_rem!(ctx, x2860, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2861, x1, 98), x2862, 98),
            x2860,
            98
        ),
        536459,
        4,
    )?;
    let x2863: BytePoly_64 = bigint_mul!(x2856, x2862, 64);
    let x2864: BytePoly_66 = bigint_nondet_quot!(ctx, x2863, x1, 66);
    let x2865: BytePoly_32 = bigint_nondet_rem!(ctx, x2863, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2864, x1, 98), x2865, 98),
            x2863,
            98
        ),
        536459,
        4,
    )?;
    let x2866: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x2865, x2859, 32), 32), x1, 32);
    let x2867: BytePoly_32 = bigint_nondet_quot!(ctx, x2866, x1, 32);
    let x2868: BytePoly_32 = bigint_nondet_rem!(ctx, x2866, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2867, x1, 64), x2868, 64),
            x2866,
            64
        ),
        260103,
        4,
    )?;
    let x2869: BytePoly_32 = bigint_add!(bigint_sub!(x5, x2862, 32), x1, 32);
    let x2870: BytePoly_32 = bigint_nondet_inv!(ctx, x2869, x1, 32);
    let x2871: BytePoly_64 = bigint_mul!(x2869, x2870, 64);
    let x2872: BytePoly_66 = bigint_nondet_quot!(ctx, x2871, x1, 66);
    let x2873: BytePoly_32 = bigint_nondet_rem!(ctx, x2871, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2872, x1, 98), x2873, 98),
            x2871,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x2873, x0, 32), 34, 1)?;
    let x2874: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x2868, 32), x1, 32), x2870, 64);
    let x2875: BytePoly_66 = bigint_nondet_quot!(ctx, x2874, x1, 66);
    let x2876: BytePoly_32 = bigint_nondet_rem!(ctx, x2874, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2875, x1, 98), x2876, 98),
            x2874,
            98
        ),
        536459,
        4,
    )?;
    let x2877: BytePoly_64 = bigint_add!(
        bigint_sub!(x2868, bigint_mul!(x2876, x2862, 64), 64),
        x1,
        64
    );
    let x2878: BytePoly_64 = bigint_nondet_quot!(ctx, x2877, x1, 64);
    let x2879: BytePoly_32 = bigint_nondet_rem!(ctx, x2877, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2878, x1, 96), x2879, 96),
            x2877,
            96
        ),
        520203,
        4,
    )?;
    let x2880: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x2876, x2876, 64), x2862, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x2881: BytePoly_66 = bigint_nondet_quot!(ctx, x2880, x1, 66);
    let x2882: BytePoly_32 = bigint_nondet_rem!(ctx, x2880, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2881, x1, 98), x2882, 98),
            x2880,
            98
        ),
        536459,
        4,
    )?;
    let x2883: BytePoly_64 = bigint_mul!(x2876, x2882, 64);
    let x2884: BytePoly_66 = bigint_nondet_quot!(ctx, x2883, x1, 66);
    let x2885: BytePoly_32 = bigint_nondet_rem!(ctx, x2883, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2884, x1, 98), x2885, 98),
            x2883,
            98
        ),
        536459,
        4,
    )?;
    let x2886: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x2885, x2879, 32), 32), x1, 32);
    let x2887: BytePoly_32 = bigint_nondet_quot!(ctx, x2886, x1, 32);
    let x2888: BytePoly_32 = bigint_nondet_rem!(ctx, x2886, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2887, x1, 64), x2888, 64),
            x2886,
            64
        ),
        260103,
        4,
    )?;
    let x2889: BytePoly_32 = bigint_add!(bigint_sub!(x5, x2882, 32), x1, 32);
    let x2890: BytePoly_32 = bigint_nondet_inv!(ctx, x2889, x1, 32);
    let x2891: BytePoly_64 = bigint_mul!(x2889, x2890, 64);
    let x2892: BytePoly_66 = bigint_nondet_quot!(ctx, x2891, x1, 66);
    let x2893: BytePoly_32 = bigint_nondet_rem!(ctx, x2891, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2892, x1, 98), x2893, 98),
            x2891,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x2893, x0, 32), 34, 1)?;
    let x2894: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x2888, 32), x1, 32), x2890, 64);
    let x2895: BytePoly_66 = bigint_nondet_quot!(ctx, x2894, x1, 66);
    let x2896: BytePoly_32 = bigint_nondet_rem!(ctx, x2894, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2895, x1, 98), x2896, 98),
            x2894,
            98
        ),
        536459,
        4,
    )?;
    let x2897: BytePoly_64 = bigint_add!(
        bigint_sub!(x2888, bigint_mul!(x2896, x2882, 64), 64),
        x1,
        64
    );
    let x2898: BytePoly_64 = bigint_nondet_quot!(ctx, x2897, x1, 64);
    let x2899: BytePoly_32 = bigint_nondet_rem!(ctx, x2897, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2898, x1, 96), x2899, 96),
            x2897,
            96
        ),
        520203,
        4,
    )?;
    let x2900: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x2896, x2896, 64), x2882, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x2901: BytePoly_66 = bigint_nondet_quot!(ctx, x2900, x1, 66);
    let x2902: BytePoly_32 = bigint_nondet_rem!(ctx, x2900, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2901, x1, 98), x2902, 98),
            x2900,
            98
        ),
        536459,
        4,
    )?;
    let x2903: BytePoly_64 = bigint_mul!(x2896, x2902, 64);
    let x2904: BytePoly_66 = bigint_nondet_quot!(ctx, x2903, x1, 66);
    let x2905: BytePoly_32 = bigint_nondet_rem!(ctx, x2903, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2904, x1, 98), x2905, 98),
            x2903,
            98
        ),
        536459,
        4,
    )?;
    let x2906: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x2905, x2899, 32), 32), x1, 32);
    let x2907: BytePoly_32 = bigint_nondet_quot!(ctx, x2906, x1, 32);
    let x2908: BytePoly_32 = bigint_nondet_rem!(ctx, x2906, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2907, x1, 64), x2908, 64),
            x2906,
            64
        ),
        260103,
        4,
    )?;
    let x2909: BytePoly_32 = bigint_add!(bigint_sub!(x5, x2902, 32), x1, 32);
    let x2910: BytePoly_32 = bigint_nondet_inv!(ctx, x2909, x1, 32);
    let x2911: BytePoly_64 = bigint_mul!(x2909, x2910, 64);
    let x2912: BytePoly_66 = bigint_nondet_quot!(ctx, x2911, x1, 66);
    let x2913: BytePoly_32 = bigint_nondet_rem!(ctx, x2911, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2912, x1, 98), x2913, 98),
            x2911,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x2913, x0, 32), 34, 1)?;
    let x2914: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x2908, 32), x1, 32), x2910, 64);
    let x2915: BytePoly_66 = bigint_nondet_quot!(ctx, x2914, x1, 66);
    let x2916: BytePoly_32 = bigint_nondet_rem!(ctx, x2914, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2915, x1, 98), x2916, 98),
            x2914,
            98
        ),
        536459,
        4,
    )?;
    let x2917: BytePoly_64 = bigint_add!(
        bigint_sub!(x2908, bigint_mul!(x2916, x2902, 64), 64),
        x1,
        64
    );
    let x2918: BytePoly_64 = bigint_nondet_quot!(ctx, x2917, x1, 64);
    let x2919: BytePoly_32 = bigint_nondet_rem!(ctx, x2917, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2918, x1, 96), x2919, 96),
            x2917,
            96
        ),
        520203,
        4,
    )?;
    let x2920: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x2916, x2916, 64), x2902, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x2921: BytePoly_66 = bigint_nondet_quot!(ctx, x2920, x1, 66);
    let x2922: BytePoly_32 = bigint_nondet_rem!(ctx, x2920, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2921, x1, 98), x2922, 98),
            x2920,
            98
        ),
        536459,
        4,
    )?;
    let x2923: BytePoly_64 = bigint_mul!(x2916, x2922, 64);
    let x2924: BytePoly_66 = bigint_nondet_quot!(ctx, x2923, x1, 66);
    let x2925: BytePoly_32 = bigint_nondet_rem!(ctx, x2923, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2924, x1, 98), x2925, 98),
            x2923,
            98
        ),
        536459,
        4,
    )?;
    let x2926: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x2925, x2919, 32), 32), x1, 32);
    let x2927: BytePoly_32 = bigint_nondet_quot!(ctx, x2926, x1, 32);
    let x2928: BytePoly_32 = bigint_nondet_rem!(ctx, x2926, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2927, x1, 64), x2928, 64),
            x2926,
            64
        ),
        260103,
        4,
    )?;
    let x2929: BytePoly_32 = bigint_add!(bigint_sub!(x5, x2922, 32), x1, 32);
    let x2930: BytePoly_32 = bigint_nondet_inv!(ctx, x2929, x1, 32);
    let x2931: BytePoly_64 = bigint_mul!(x2929, x2930, 64);
    let x2932: BytePoly_66 = bigint_nondet_quot!(ctx, x2931, x1, 66);
    let x2933: BytePoly_32 = bigint_nondet_rem!(ctx, x2931, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2932, x1, 98), x2933, 98),
            x2931,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x2933, x0, 32), 34, 1)?;
    let x2934: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x2928, 32), x1, 32), x2930, 64);
    let x2935: BytePoly_66 = bigint_nondet_quot!(ctx, x2934, x1, 66);
    let x2936: BytePoly_32 = bigint_nondet_rem!(ctx, x2934, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2935, x1, 98), x2936, 98),
            x2934,
            98
        ),
        536459,
        4,
    )?;
    let x2937: BytePoly_64 = bigint_add!(
        bigint_sub!(x2928, bigint_mul!(x2936, x2922, 64), 64),
        x1,
        64
    );
    let x2938: BytePoly_64 = bigint_nondet_quot!(ctx, x2937, x1, 64);
    let x2939: BytePoly_32 = bigint_nondet_rem!(ctx, x2937, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2938, x1, 96), x2939, 96),
            x2937,
            96
        ),
        520203,
        4,
    )?;
    let x2940: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x2936, x2936, 64), x2922, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x2941: BytePoly_66 = bigint_nondet_quot!(ctx, x2940, x1, 66);
    let x2942: BytePoly_32 = bigint_nondet_rem!(ctx, x2940, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2941, x1, 98), x2942, 98),
            x2940,
            98
        ),
        536459,
        4,
    )?;
    let x2943: BytePoly_64 = bigint_mul!(x2936, x2942, 64);
    let x2944: BytePoly_66 = bigint_nondet_quot!(ctx, x2943, x1, 66);
    let x2945: BytePoly_32 = bigint_nondet_rem!(ctx, x2943, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2944, x1, 98), x2945, 98),
            x2943,
            98
        ),
        536459,
        4,
    )?;
    let x2946: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x2945, x2939, 32), 32), x1, 32);
    let x2947: BytePoly_32 = bigint_nondet_quot!(ctx, x2946, x1, 32);
    let x2948: BytePoly_32 = bigint_nondet_rem!(ctx, x2946, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2947, x1, 64), x2948, 64),
            x2946,
            64
        ),
        260103,
        4,
    )?;
    let x2949: BytePoly_32 = bigint_add!(bigint_sub!(x5, x2942, 32), x1, 32);
    let x2950: BytePoly_32 = bigint_nondet_inv!(ctx, x2949, x1, 32);
    let x2951: BytePoly_64 = bigint_mul!(x2949, x2950, 64);
    let x2952: BytePoly_66 = bigint_nondet_quot!(ctx, x2951, x1, 66);
    let x2953: BytePoly_32 = bigint_nondet_rem!(ctx, x2951, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2952, x1, 98), x2953, 98),
            x2951,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x2953, x0, 32), 34, 1)?;
    let x2954: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x2948, 32), x1, 32), x2950, 64);
    let x2955: BytePoly_66 = bigint_nondet_quot!(ctx, x2954, x1, 66);
    let x2956: BytePoly_32 = bigint_nondet_rem!(ctx, x2954, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2955, x1, 98), x2956, 98),
            x2954,
            98
        ),
        536459,
        4,
    )?;
    let x2957: BytePoly_64 = bigint_add!(
        bigint_sub!(x2948, bigint_mul!(x2956, x2942, 64), 64),
        x1,
        64
    );
    let x2958: BytePoly_64 = bigint_nondet_quot!(ctx, x2957, x1, 64);
    let x2959: BytePoly_32 = bigint_nondet_rem!(ctx, x2957, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2958, x1, 96), x2959, 96),
            x2957,
            96
        ),
        520203,
        4,
    )?;
    let x2960: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x2956, x2956, 64), x2942, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x2961: BytePoly_66 = bigint_nondet_quot!(ctx, x2960, x1, 66);
    let x2962: BytePoly_32 = bigint_nondet_rem!(ctx, x2960, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2961, x1, 98), x2962, 98),
            x2960,
            98
        ),
        536459,
        4,
    )?;
    let x2963: BytePoly_64 = bigint_mul!(x2956, x2962, 64);
    let x2964: BytePoly_66 = bigint_nondet_quot!(ctx, x2963, x1, 66);
    let x2965: BytePoly_32 = bigint_nondet_rem!(ctx, x2963, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2964, x1, 98), x2965, 98),
            x2963,
            98
        ),
        536459,
        4,
    )?;
    let x2966: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x2965, x2959, 32), 32), x1, 32);
    let x2967: BytePoly_32 = bigint_nondet_quot!(ctx, x2966, x1, 32);
    let x2968: BytePoly_32 = bigint_nondet_rem!(ctx, x2966, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2967, x1, 64), x2968, 64),
            x2966,
            64
        ),
        260103,
        4,
    )?;
    let x2969: BytePoly_32 = bigint_add!(bigint_sub!(x5, x2962, 32), x1, 32);
    let x2970: BytePoly_32 = bigint_nondet_inv!(ctx, x2969, x1, 32);
    let x2971: BytePoly_64 = bigint_mul!(x2969, x2970, 64);
    let x2972: BytePoly_66 = bigint_nondet_quot!(ctx, x2971, x1, 66);
    let x2973: BytePoly_32 = bigint_nondet_rem!(ctx, x2971, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2972, x1, 98), x2973, 98),
            x2971,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x2973, x0, 32), 34, 1)?;
    let x2974: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x2968, 32), x1, 32), x2970, 64);
    let x2975: BytePoly_66 = bigint_nondet_quot!(ctx, x2974, x1, 66);
    let x2976: BytePoly_32 = bigint_nondet_rem!(ctx, x2974, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2975, x1, 98), x2976, 98),
            x2974,
            98
        ),
        536459,
        4,
    )?;
    let x2977: BytePoly_64 = bigint_add!(
        bigint_sub!(x2968, bigint_mul!(x2976, x2962, 64), 64),
        x1,
        64
    );
    let x2978: BytePoly_64 = bigint_nondet_quot!(ctx, x2977, x1, 64);
    let x2979: BytePoly_32 = bigint_nondet_rem!(ctx, x2977, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2978, x1, 96), x2979, 96),
            x2977,
            96
        ),
        520203,
        4,
    )?;
    let x2980: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x2976, x2976, 64), x2962, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x2981: BytePoly_66 = bigint_nondet_quot!(ctx, x2980, x1, 66);
    let x2982: BytePoly_32 = bigint_nondet_rem!(ctx, x2980, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2981, x1, 98), x2982, 98),
            x2980,
            98
        ),
        536459,
        4,
    )?;
    let x2983: BytePoly_64 = bigint_mul!(x2976, x2982, 64);
    let x2984: BytePoly_66 = bigint_nondet_quot!(ctx, x2983, x1, 66);
    let x2985: BytePoly_32 = bigint_nondet_rem!(ctx, x2983, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2984, x1, 98), x2985, 98),
            x2983,
            98
        ),
        536459,
        4,
    )?;
    let x2986: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x2985, x2979, 32), 32), x1, 32);
    let x2987: BytePoly_32 = bigint_nondet_quot!(ctx, x2986, x1, 32);
    let x2988: BytePoly_32 = bigint_nondet_rem!(ctx, x2986, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2987, x1, 64), x2988, 64),
            x2986,
            64
        ),
        260103,
        4,
    )?;
    let x2989: BytePoly_32 = bigint_add!(bigint_sub!(x5, x2982, 32), x1, 32);
    let x2990: BytePoly_32 = bigint_nondet_inv!(ctx, x2989, x1, 32);
    let x2991: BytePoly_64 = bigint_mul!(x2989, x2990, 64);
    let x2992: BytePoly_66 = bigint_nondet_quot!(ctx, x2991, x1, 66);
    let x2993: BytePoly_32 = bigint_nondet_rem!(ctx, x2991, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2992, x1, 98), x2993, 98),
            x2991,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x2993, x0, 32), 34, 1)?;
    let x2994: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x2988, 32), x1, 32), x2990, 64);
    let x2995: BytePoly_66 = bigint_nondet_quot!(ctx, x2994, x1, 66);
    let x2996: BytePoly_32 = bigint_nondet_rem!(ctx, x2994, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2995, x1, 98), x2996, 98),
            x2994,
            98
        ),
        536459,
        4,
    )?;
    let x2997: BytePoly_64 = bigint_add!(
        bigint_sub!(x2988, bigint_mul!(x2996, x2982, 64), 64),
        x1,
        64
    );
    let x2998: BytePoly_64 = bigint_nondet_quot!(ctx, x2997, x1, 64);
    let x2999: BytePoly_32 = bigint_nondet_rem!(ctx, x2997, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x2998, x1, 96), x2999, 96),
            x2997,
            96
        ),
        520203,
        4,
    )?;
    let x3000: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x2996, x2996, 64), x2982, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x3001: BytePoly_66 = bigint_nondet_quot!(ctx, x3000, x1, 66);
    let x3002: BytePoly_32 = bigint_nondet_rem!(ctx, x3000, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3001, x1, 98), x3002, 98),
            x3000,
            98
        ),
        536459,
        4,
    )?;
    let x3003: BytePoly_64 = bigint_mul!(x2996, x3002, 64);
    let x3004: BytePoly_66 = bigint_nondet_quot!(ctx, x3003, x1, 66);
    let x3005: BytePoly_32 = bigint_nondet_rem!(ctx, x3003, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3004, x1, 98), x3005, 98),
            x3003,
            98
        ),
        536459,
        4,
    )?;
    let x3006: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x3005, x2999, 32), 32), x1, 32);
    let x3007: BytePoly_32 = bigint_nondet_quot!(ctx, x3006, x1, 32);
    let x3008: BytePoly_32 = bigint_nondet_rem!(ctx, x3006, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3007, x1, 64), x3008, 64),
            x3006,
            64
        ),
        260103,
        4,
    )?;
    let x3009: BytePoly_32 = bigint_add!(bigint_sub!(x5, x3002, 32), x1, 32);
    let x3010: BytePoly_32 = bigint_nondet_inv!(ctx, x3009, x1, 32);
    let x3011: BytePoly_64 = bigint_mul!(x3009, x3010, 64);
    let x3012: BytePoly_66 = bigint_nondet_quot!(ctx, x3011, x1, 66);
    let x3013: BytePoly_32 = bigint_nondet_rem!(ctx, x3011, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3012, x1, 98), x3013, 98),
            x3011,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x3013, x0, 32), 34, 1)?;
    let x3014: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x3008, 32), x1, 32), x3010, 64);
    let x3015: BytePoly_66 = bigint_nondet_quot!(ctx, x3014, x1, 66);
    let x3016: BytePoly_32 = bigint_nondet_rem!(ctx, x3014, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3015, x1, 98), x3016, 98),
            x3014,
            98
        ),
        536459,
        4,
    )?;
    let x3017: BytePoly_64 = bigint_add!(
        bigint_sub!(x3008, bigint_mul!(x3016, x3002, 64), 64),
        x1,
        64
    );
    let x3018: BytePoly_64 = bigint_nondet_quot!(ctx, x3017, x1, 64);
    let x3019: BytePoly_32 = bigint_nondet_rem!(ctx, x3017, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3018, x1, 96), x3019, 96),
            x3017,
            96
        ),
        520203,
        4,
    )?;
    let x3020: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x3016, x3016, 64), x3002, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x3021: BytePoly_66 = bigint_nondet_quot!(ctx, x3020, x1, 66);
    let x3022: BytePoly_32 = bigint_nondet_rem!(ctx, x3020, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3021, x1, 98), x3022, 98),
            x3020,
            98
        ),
        536459,
        4,
    )?;
    let x3023: BytePoly_64 = bigint_mul!(x3016, x3022, 64);
    let x3024: BytePoly_66 = bigint_nondet_quot!(ctx, x3023, x1, 66);
    let x3025: BytePoly_32 = bigint_nondet_rem!(ctx, x3023, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3024, x1, 98), x3025, 98),
            x3023,
            98
        ),
        536459,
        4,
    )?;
    let x3026: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x3025, x3019, 32), 32), x1, 32);
    let x3027: BytePoly_32 = bigint_nondet_quot!(ctx, x3026, x1, 32);
    let x3028: BytePoly_32 = bigint_nondet_rem!(ctx, x3026, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3027, x1, 64), x3028, 64),
            x3026,
            64
        ),
        260103,
        4,
    )?;
    let x3029: BytePoly_32 = bigint_add!(bigint_sub!(x5, x3022, 32), x1, 32);
    let x3030: BytePoly_32 = bigint_nondet_inv!(ctx, x3029, x1, 32);
    let x3031: BytePoly_64 = bigint_mul!(x3029, x3030, 64);
    let x3032: BytePoly_66 = bigint_nondet_quot!(ctx, x3031, x1, 66);
    let x3033: BytePoly_32 = bigint_nondet_rem!(ctx, x3031, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3032, x1, 98), x3033, 98),
            x3031,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x3033, x0, 32), 34, 1)?;
    let x3034: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x3028, 32), x1, 32), x3030, 64);
    let x3035: BytePoly_66 = bigint_nondet_quot!(ctx, x3034, x1, 66);
    let x3036: BytePoly_32 = bigint_nondet_rem!(ctx, x3034, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3035, x1, 98), x3036, 98),
            x3034,
            98
        ),
        536459,
        4,
    )?;
    let x3037: BytePoly_64 = bigint_add!(
        bigint_sub!(x3028, bigint_mul!(x3036, x3022, 64), 64),
        x1,
        64
    );
    let x3038: BytePoly_64 = bigint_nondet_quot!(ctx, x3037, x1, 64);
    let x3039: BytePoly_32 = bigint_nondet_rem!(ctx, x3037, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3038, x1, 96), x3039, 96),
            x3037,
            96
        ),
        520203,
        4,
    )?;
    let x3040: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x3036, x3036, 64), x3022, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x3041: BytePoly_66 = bigint_nondet_quot!(ctx, x3040, x1, 66);
    let x3042: BytePoly_32 = bigint_nondet_rem!(ctx, x3040, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3041, x1, 98), x3042, 98),
            x3040,
            98
        ),
        536459,
        4,
    )?;
    let x3043: BytePoly_64 = bigint_mul!(x3036, x3042, 64);
    let x3044: BytePoly_66 = bigint_nondet_quot!(ctx, x3043, x1, 66);
    let x3045: BytePoly_32 = bigint_nondet_rem!(ctx, x3043, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3044, x1, 98), x3045, 98),
            x3043,
            98
        ),
        536459,
        4,
    )?;
    let x3046: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x3045, x3039, 32), 32), x1, 32);
    let x3047: BytePoly_32 = bigint_nondet_quot!(ctx, x3046, x1, 32);
    let x3048: BytePoly_32 = bigint_nondet_rem!(ctx, x3046, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3047, x1, 64), x3048, 64),
            x3046,
            64
        ),
        260103,
        4,
    )?;
    let x3049: BytePoly_32 = bigint_add!(bigint_sub!(x5, x3042, 32), x1, 32);
    let x3050: BytePoly_32 = bigint_nondet_inv!(ctx, x3049, x1, 32);
    let x3051: BytePoly_64 = bigint_mul!(x3049, x3050, 64);
    let x3052: BytePoly_66 = bigint_nondet_quot!(ctx, x3051, x1, 66);
    let x3053: BytePoly_32 = bigint_nondet_rem!(ctx, x3051, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3052, x1, 98), x3053, 98),
            x3051,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x3053, x0, 32), 34, 1)?;
    let x3054: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x3048, 32), x1, 32), x3050, 64);
    let x3055: BytePoly_66 = bigint_nondet_quot!(ctx, x3054, x1, 66);
    let x3056: BytePoly_32 = bigint_nondet_rem!(ctx, x3054, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3055, x1, 98), x3056, 98),
            x3054,
            98
        ),
        536459,
        4,
    )?;
    let x3057: BytePoly_64 = bigint_add!(
        bigint_sub!(x3048, bigint_mul!(x3056, x3042, 64), 64),
        x1,
        64
    );
    let x3058: BytePoly_64 = bigint_nondet_quot!(ctx, x3057, x1, 64);
    let x3059: BytePoly_32 = bigint_nondet_rem!(ctx, x3057, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3058, x1, 96), x3059, 96),
            x3057,
            96
        ),
        520203,
        4,
    )?;
    let x3060: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x3056, x3056, 64), x3042, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x3061: BytePoly_66 = bigint_nondet_quot!(ctx, x3060, x1, 66);
    let x3062: BytePoly_32 = bigint_nondet_rem!(ctx, x3060, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3061, x1, 98), x3062, 98),
            x3060,
            98
        ),
        536459,
        4,
    )?;
    let x3063: BytePoly_64 = bigint_mul!(x3056, x3062, 64);
    let x3064: BytePoly_66 = bigint_nondet_quot!(ctx, x3063, x1, 66);
    let x3065: BytePoly_32 = bigint_nondet_rem!(ctx, x3063, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3064, x1, 98), x3065, 98),
            x3063,
            98
        ),
        536459,
        4,
    )?;
    let x3066: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x3065, x3059, 32), 32), x1, 32);
    let x3067: BytePoly_32 = bigint_nondet_quot!(ctx, x3066, x1, 32);
    let x3068: BytePoly_32 = bigint_nondet_rem!(ctx, x3066, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3067, x1, 64), x3068, 64),
            x3066,
            64
        ),
        260103,
        4,
    )?;
    let x3069: BytePoly_32 = bigint_add!(bigint_sub!(x5, x3062, 32), x1, 32);
    let x3070: BytePoly_32 = bigint_nondet_inv!(ctx, x3069, x1, 32);
    let x3071: BytePoly_64 = bigint_mul!(x3069, x3070, 64);
    let x3072: BytePoly_66 = bigint_nondet_quot!(ctx, x3071, x1, 66);
    let x3073: BytePoly_32 = bigint_nondet_rem!(ctx, x3071, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3072, x1, 98), x3073, 98),
            x3071,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x3073, x0, 32), 34, 1)?;
    let x3074: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x3068, 32), x1, 32), x3070, 64);
    let x3075: BytePoly_66 = bigint_nondet_quot!(ctx, x3074, x1, 66);
    let x3076: BytePoly_32 = bigint_nondet_rem!(ctx, x3074, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3075, x1, 98), x3076, 98),
            x3074,
            98
        ),
        536459,
        4,
    )?;
    let x3077: BytePoly_64 = bigint_add!(
        bigint_sub!(x3068, bigint_mul!(x3076, x3062, 64), 64),
        x1,
        64
    );
    let x3078: BytePoly_64 = bigint_nondet_quot!(ctx, x3077, x1, 64);
    let x3079: BytePoly_32 = bigint_nondet_rem!(ctx, x3077, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3078, x1, 96), x3079, 96),
            x3077,
            96
        ),
        520203,
        4,
    )?;
    let x3080: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x3076, x3076, 64), x3062, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x3081: BytePoly_66 = bigint_nondet_quot!(ctx, x3080, x1, 66);
    let x3082: BytePoly_32 = bigint_nondet_rem!(ctx, x3080, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3081, x1, 98), x3082, 98),
            x3080,
            98
        ),
        536459,
        4,
    )?;
    let x3083: BytePoly_64 = bigint_mul!(x3076, x3082, 64);
    let x3084: BytePoly_66 = bigint_nondet_quot!(ctx, x3083, x1, 66);
    let x3085: BytePoly_32 = bigint_nondet_rem!(ctx, x3083, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3084, x1, 98), x3085, 98),
            x3083,
            98
        ),
        536459,
        4,
    )?;
    let x3086: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x3085, x3079, 32), 32), x1, 32);
    let x3087: BytePoly_32 = bigint_nondet_quot!(ctx, x3086, x1, 32);
    let x3088: BytePoly_32 = bigint_nondet_rem!(ctx, x3086, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3087, x1, 64), x3088, 64),
            x3086,
            64
        ),
        260103,
        4,
    )?;
    let x3089: BytePoly_32 = bigint_add!(bigint_sub!(x5, x3082, 32), x1, 32);
    let x3090: BytePoly_32 = bigint_nondet_inv!(ctx, x3089, x1, 32);
    let x3091: BytePoly_64 = bigint_mul!(x3089, x3090, 64);
    let x3092: BytePoly_66 = bigint_nondet_quot!(ctx, x3091, x1, 66);
    let x3093: BytePoly_32 = bigint_nondet_rem!(ctx, x3091, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3092, x1, 98), x3093, 98),
            x3091,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x3093, x0, 32), 34, 1)?;
    let x3094: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x3088, 32), x1, 32), x3090, 64);
    let x3095: BytePoly_66 = bigint_nondet_quot!(ctx, x3094, x1, 66);
    let x3096: BytePoly_32 = bigint_nondet_rem!(ctx, x3094, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3095, x1, 98), x3096, 98),
            x3094,
            98
        ),
        536459,
        4,
    )?;
    let x3097: BytePoly_64 = bigint_add!(
        bigint_sub!(x3088, bigint_mul!(x3096, x3082, 64), 64),
        x1,
        64
    );
    let x3098: BytePoly_64 = bigint_nondet_quot!(ctx, x3097, x1, 64);
    let x3099: BytePoly_32 = bigint_nondet_rem!(ctx, x3097, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3098, x1, 96), x3099, 96),
            x3097,
            96
        ),
        520203,
        4,
    )?;
    let x3100: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x3096, x3096, 64), x3082, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x3101: BytePoly_66 = bigint_nondet_quot!(ctx, x3100, x1, 66);
    let x3102: BytePoly_32 = bigint_nondet_rem!(ctx, x3100, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3101, x1, 98), x3102, 98),
            x3100,
            98
        ),
        536459,
        4,
    )?;
    let x3103: BytePoly_64 = bigint_mul!(x3096, x3102, 64);
    let x3104: BytePoly_66 = bigint_nondet_quot!(ctx, x3103, x1, 66);
    let x3105: BytePoly_32 = bigint_nondet_rem!(ctx, x3103, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3104, x1, 98), x3105, 98),
            x3103,
            98
        ),
        536459,
        4,
    )?;
    let x3106: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x3105, x3099, 32), 32), x1, 32);
    let x3107: BytePoly_32 = bigint_nondet_quot!(ctx, x3106, x1, 32);
    let x3108: BytePoly_32 = bigint_nondet_rem!(ctx, x3106, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3107, x1, 64), x3108, 64),
            x3106,
            64
        ),
        260103,
        4,
    )?;
    let x3109: BytePoly_32 = bigint_add!(bigint_sub!(x5, x3102, 32), x1, 32);
    let x3110: BytePoly_32 = bigint_nondet_inv!(ctx, x3109, x1, 32);
    let x3111: BytePoly_64 = bigint_mul!(x3109, x3110, 64);
    let x3112: BytePoly_66 = bigint_nondet_quot!(ctx, x3111, x1, 66);
    let x3113: BytePoly_32 = bigint_nondet_rem!(ctx, x3111, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3112, x1, 98), x3113, 98),
            x3111,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x3113, x0, 32), 34, 1)?;
    let x3114: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x3108, 32), x1, 32), x3110, 64);
    let x3115: BytePoly_66 = bigint_nondet_quot!(ctx, x3114, x1, 66);
    let x3116: BytePoly_32 = bigint_nondet_rem!(ctx, x3114, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3115, x1, 98), x3116, 98),
            x3114,
            98
        ),
        536459,
        4,
    )?;
    let x3117: BytePoly_64 = bigint_add!(
        bigint_sub!(x3108, bigint_mul!(x3116, x3102, 64), 64),
        x1,
        64
    );
    let x3118: BytePoly_64 = bigint_nondet_quot!(ctx, x3117, x1, 64);
    let x3119: BytePoly_32 = bigint_nondet_rem!(ctx, x3117, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3118, x1, 96), x3119, 96),
            x3117,
            96
        ),
        520203,
        4,
    )?;
    let x3120: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x3116, x3116, 64), x3102, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x3121: BytePoly_66 = bigint_nondet_quot!(ctx, x3120, x1, 66);
    let x3122: BytePoly_32 = bigint_nondet_rem!(ctx, x3120, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3121, x1, 98), x3122, 98),
            x3120,
            98
        ),
        536459,
        4,
    )?;
    let x3123: BytePoly_64 = bigint_mul!(x3116, x3122, 64);
    let x3124: BytePoly_66 = bigint_nondet_quot!(ctx, x3123, x1, 66);
    let x3125: BytePoly_32 = bigint_nondet_rem!(ctx, x3123, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3124, x1, 98), x3125, 98),
            x3123,
            98
        ),
        536459,
        4,
    )?;
    let x3126: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x3125, x3119, 32), 32), x1, 32);
    let x3127: BytePoly_32 = bigint_nondet_quot!(ctx, x3126, x1, 32);
    let x3128: BytePoly_32 = bigint_nondet_rem!(ctx, x3126, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3127, x1, 64), x3128, 64),
            x3126,
            64
        ),
        260103,
        4,
    )?;
    let x3129: BytePoly_32 = bigint_add!(bigint_sub!(x5, x3122, 32), x1, 32);
    let x3130: BytePoly_32 = bigint_nondet_inv!(ctx, x3129, x1, 32);
    let x3131: BytePoly_64 = bigint_mul!(x3129, x3130, 64);
    let x3132: BytePoly_66 = bigint_nondet_quot!(ctx, x3131, x1, 66);
    let x3133: BytePoly_32 = bigint_nondet_rem!(ctx, x3131, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3132, x1, 98), x3133, 98),
            x3131,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x3133, x0, 32), 34, 1)?;
    let x3134: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x3128, 32), x1, 32), x3130, 64);
    let x3135: BytePoly_66 = bigint_nondet_quot!(ctx, x3134, x1, 66);
    let x3136: BytePoly_32 = bigint_nondet_rem!(ctx, x3134, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3135, x1, 98), x3136, 98),
            x3134,
            98
        ),
        536459,
        4,
    )?;
    let x3137: BytePoly_64 = bigint_add!(
        bigint_sub!(x3128, bigint_mul!(x3136, x3122, 64), 64),
        x1,
        64
    );
    let x3138: BytePoly_64 = bigint_nondet_quot!(ctx, x3137, x1, 64);
    let x3139: BytePoly_32 = bigint_nondet_rem!(ctx, x3137, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3138, x1, 96), x3139, 96),
            x3137,
            96
        ),
        520203,
        4,
    )?;
    let x3140: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x3136, x3136, 64), x3122, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x3141: BytePoly_66 = bigint_nondet_quot!(ctx, x3140, x1, 66);
    let x3142: BytePoly_32 = bigint_nondet_rem!(ctx, x3140, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3141, x1, 98), x3142, 98),
            x3140,
            98
        ),
        536459,
        4,
    )?;
    let x3143: BytePoly_64 = bigint_mul!(x3136, x3142, 64);
    let x3144: BytePoly_66 = bigint_nondet_quot!(ctx, x3143, x1, 66);
    let x3145: BytePoly_32 = bigint_nondet_rem!(ctx, x3143, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3144, x1, 98), x3145, 98),
            x3143,
            98
        ),
        536459,
        4,
    )?;
    let x3146: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x3145, x3139, 32), 32), x1, 32);
    let x3147: BytePoly_32 = bigint_nondet_quot!(ctx, x3146, x1, 32);
    let x3148: BytePoly_32 = bigint_nondet_rem!(ctx, x3146, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3147, x1, 64), x3148, 64),
            x3146,
            64
        ),
        260103,
        4,
    )?;
    let x3149: BytePoly_32 = bigint_add!(bigint_sub!(x5, x3142, 32), x1, 32);
    let x3150: BytePoly_32 = bigint_nondet_inv!(ctx, x3149, x1, 32);
    let x3151: BytePoly_64 = bigint_mul!(x3149, x3150, 64);
    let x3152: BytePoly_66 = bigint_nondet_quot!(ctx, x3151, x1, 66);
    let x3153: BytePoly_32 = bigint_nondet_rem!(ctx, x3151, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3152, x1, 98), x3153, 98),
            x3151,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x3153, x0, 32), 34, 1)?;
    let x3154: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x3148, 32), x1, 32), x3150, 64);
    let x3155: BytePoly_66 = bigint_nondet_quot!(ctx, x3154, x1, 66);
    let x3156: BytePoly_32 = bigint_nondet_rem!(ctx, x3154, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3155, x1, 98), x3156, 98),
            x3154,
            98
        ),
        536459,
        4,
    )?;
    let x3157: BytePoly_64 = bigint_add!(
        bigint_sub!(x3148, bigint_mul!(x3156, x3142, 64), 64),
        x1,
        64
    );
    let x3158: BytePoly_64 = bigint_nondet_quot!(ctx, x3157, x1, 64);
    let x3159: BytePoly_32 = bigint_nondet_rem!(ctx, x3157, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3158, x1, 96), x3159, 96),
            x3157,
            96
        ),
        520203,
        4,
    )?;
    let x3160: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x3156, x3156, 64), x3142, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x3161: BytePoly_66 = bigint_nondet_quot!(ctx, x3160, x1, 66);
    let x3162: BytePoly_32 = bigint_nondet_rem!(ctx, x3160, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3161, x1, 98), x3162, 98),
            x3160,
            98
        ),
        536459,
        4,
    )?;
    let x3163: BytePoly_64 = bigint_mul!(x3156, x3162, 64);
    let x3164: BytePoly_66 = bigint_nondet_quot!(ctx, x3163, x1, 66);
    let x3165: BytePoly_32 = bigint_nondet_rem!(ctx, x3163, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3164, x1, 98), x3165, 98),
            x3163,
            98
        ),
        536459,
        4,
    )?;
    let x3166: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x3165, x3159, 32), 32), x1, 32);
    let x3167: BytePoly_32 = bigint_nondet_quot!(ctx, x3166, x1, 32);
    let x3168: BytePoly_32 = bigint_nondet_rem!(ctx, x3166, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3167, x1, 64), x3168, 64),
            x3166,
            64
        ),
        260103,
        4,
    )?;
    let x3169: BytePoly_32 = bigint_add!(bigint_sub!(x5, x3162, 32), x1, 32);
    let x3170: BytePoly_32 = bigint_nondet_inv!(ctx, x3169, x1, 32);
    let x3171: BytePoly_64 = bigint_mul!(x3169, x3170, 64);
    let x3172: BytePoly_66 = bigint_nondet_quot!(ctx, x3171, x1, 66);
    let x3173: BytePoly_32 = bigint_nondet_rem!(ctx, x3171, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3172, x1, 98), x3173, 98),
            x3171,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x3173, x0, 32), 34, 1)?;
    let x3174: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x3168, 32), x1, 32), x3170, 64);
    let x3175: BytePoly_66 = bigint_nondet_quot!(ctx, x3174, x1, 66);
    let x3176: BytePoly_32 = bigint_nondet_rem!(ctx, x3174, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3175, x1, 98), x3176, 98),
            x3174,
            98
        ),
        536459,
        4,
    )?;
    let x3177: BytePoly_64 = bigint_add!(
        bigint_sub!(x3168, bigint_mul!(x3176, x3162, 64), 64),
        x1,
        64
    );
    let x3178: BytePoly_64 = bigint_nondet_quot!(ctx, x3177, x1, 64);
    let x3179: BytePoly_32 = bigint_nondet_rem!(ctx, x3177, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3178, x1, 96), x3179, 96),
            x3177,
            96
        ),
        520203,
        4,
    )?;
    let x3180: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x3176, x3176, 64), x3162, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x3181: BytePoly_66 = bigint_nondet_quot!(ctx, x3180, x1, 66);
    let x3182: BytePoly_32 = bigint_nondet_rem!(ctx, x3180, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3181, x1, 98), x3182, 98),
            x3180,
            98
        ),
        536459,
        4,
    )?;
    let x3183: BytePoly_64 = bigint_mul!(x3176, x3182, 64);
    let x3184: BytePoly_66 = bigint_nondet_quot!(ctx, x3183, x1, 66);
    let x3185: BytePoly_32 = bigint_nondet_rem!(ctx, x3183, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3184, x1, 98), x3185, 98),
            x3183,
            98
        ),
        536459,
        4,
    )?;
    let x3186: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x3185, x3179, 32), 32), x1, 32);
    let x3187: BytePoly_32 = bigint_nondet_quot!(ctx, x3186, x1, 32);
    let x3188: BytePoly_32 = bigint_nondet_rem!(ctx, x3186, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3187, x1, 64), x3188, 64),
            x3186,
            64
        ),
        260103,
        4,
    )?;
    let x3189: BytePoly_32 = bigint_add!(bigint_sub!(x5, x3182, 32), x1, 32);
    let x3190: BytePoly_32 = bigint_nondet_inv!(ctx, x3189, x1, 32);
    let x3191: BytePoly_64 = bigint_mul!(x3189, x3190, 64);
    let x3192: BytePoly_66 = bigint_nondet_quot!(ctx, x3191, x1, 66);
    let x3193: BytePoly_32 = bigint_nondet_rem!(ctx, x3191, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3192, x1, 98), x3193, 98),
            x3191,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x3193, x0, 32), 34, 1)?;
    let x3194: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x3188, 32), x1, 32), x3190, 64);
    let x3195: BytePoly_66 = bigint_nondet_quot!(ctx, x3194, x1, 66);
    let x3196: BytePoly_32 = bigint_nondet_rem!(ctx, x3194, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3195, x1, 98), x3196, 98),
            x3194,
            98
        ),
        536459,
        4,
    )?;
    let x3197: BytePoly_64 = bigint_add!(
        bigint_sub!(x3188, bigint_mul!(x3196, x3182, 64), 64),
        x1,
        64
    );
    let x3198: BytePoly_64 = bigint_nondet_quot!(ctx, x3197, x1, 64);
    let x3199: BytePoly_32 = bigint_nondet_rem!(ctx, x3197, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3198, x1, 96), x3199, 96),
            x3197,
            96
        ),
        520203,
        4,
    )?;
    let x3200: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x3196, x3196, 64), x3182, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x3201: BytePoly_66 = bigint_nondet_quot!(ctx, x3200, x1, 66);
    let x3202: BytePoly_32 = bigint_nondet_rem!(ctx, x3200, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3201, x1, 98), x3202, 98),
            x3200,
            98
        ),
        536459,
        4,
    )?;
    let x3203: BytePoly_64 = bigint_mul!(x3196, x3202, 64);
    let x3204: BytePoly_66 = bigint_nondet_quot!(ctx, x3203, x1, 66);
    let x3205: BytePoly_32 = bigint_nondet_rem!(ctx, x3203, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3204, x1, 98), x3205, 98),
            x3203,
            98
        ),
        536459,
        4,
    )?;
    let x3206: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x3205, x3199, 32), 32), x1, 32);
    let x3207: BytePoly_32 = bigint_nondet_quot!(ctx, x3206, x1, 32);
    let x3208: BytePoly_32 = bigint_nondet_rem!(ctx, x3206, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3207, x1, 64), x3208, 64),
            x3206,
            64
        ),
        260103,
        4,
    )?;
    let x3209: BytePoly_32 = bigint_add!(bigint_sub!(x5, x3202, 32), x1, 32);
    let x3210: BytePoly_32 = bigint_nondet_inv!(ctx, x3209, x1, 32);
    let x3211: BytePoly_64 = bigint_mul!(x3209, x3210, 64);
    let x3212: BytePoly_66 = bigint_nondet_quot!(ctx, x3211, x1, 66);
    let x3213: BytePoly_32 = bigint_nondet_rem!(ctx, x3211, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3212, x1, 98), x3213, 98),
            x3211,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x3213, x0, 32), 34, 1)?;
    let x3214: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x3208, 32), x1, 32), x3210, 64);
    let x3215: BytePoly_66 = bigint_nondet_quot!(ctx, x3214, x1, 66);
    let x3216: BytePoly_32 = bigint_nondet_rem!(ctx, x3214, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3215, x1, 98), x3216, 98),
            x3214,
            98
        ),
        536459,
        4,
    )?;
    let x3217: BytePoly_64 = bigint_add!(
        bigint_sub!(x3208, bigint_mul!(x3216, x3202, 64), 64),
        x1,
        64
    );
    let x3218: BytePoly_64 = bigint_nondet_quot!(ctx, x3217, x1, 64);
    let x3219: BytePoly_32 = bigint_nondet_rem!(ctx, x3217, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3218, x1, 96), x3219, 96),
            x3217,
            96
        ),
        520203,
        4,
    )?;
    let x3220: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x3216, x3216, 64), x3202, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x3221: BytePoly_66 = bigint_nondet_quot!(ctx, x3220, x1, 66);
    let x3222: BytePoly_32 = bigint_nondet_rem!(ctx, x3220, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3221, x1, 98), x3222, 98),
            x3220,
            98
        ),
        536459,
        4,
    )?;
    let x3223: BytePoly_64 = bigint_mul!(x3216, x3222, 64);
    let x3224: BytePoly_66 = bigint_nondet_quot!(ctx, x3223, x1, 66);
    let x3225: BytePoly_32 = bigint_nondet_rem!(ctx, x3223, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3224, x1, 98), x3225, 98),
            x3223,
            98
        ),
        536459,
        4,
    )?;
    let x3226: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x3225, x3219, 32), 32), x1, 32);
    let x3227: BytePoly_32 = bigint_nondet_quot!(ctx, x3226, x1, 32);
    let x3228: BytePoly_32 = bigint_nondet_rem!(ctx, x3226, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3227, x1, 64), x3228, 64),
            x3226,
            64
        ),
        260103,
        4,
    )?;
    let x3229: BytePoly_32 = bigint_add!(bigint_sub!(x5, x3222, 32), x1, 32);
    let x3230: BytePoly_32 = bigint_nondet_inv!(ctx, x3229, x1, 32);
    let x3231: BytePoly_64 = bigint_mul!(x3229, x3230, 64);
    let x3232: BytePoly_66 = bigint_nondet_quot!(ctx, x3231, x1, 66);
    let x3233: BytePoly_32 = bigint_nondet_rem!(ctx, x3231, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3232, x1, 98), x3233, 98),
            x3231,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x3233, x0, 32), 34, 1)?;
    let x3234: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x3228, 32), x1, 32), x3230, 64);
    let x3235: BytePoly_66 = bigint_nondet_quot!(ctx, x3234, x1, 66);
    let x3236: BytePoly_32 = bigint_nondet_rem!(ctx, x3234, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3235, x1, 98), x3236, 98),
            x3234,
            98
        ),
        536459,
        4,
    )?;
    let x3237: BytePoly_64 = bigint_add!(
        bigint_sub!(x3228, bigint_mul!(x3236, x3222, 64), 64),
        x1,
        64
    );
    let x3238: BytePoly_64 = bigint_nondet_quot!(ctx, x3237, x1, 64);
    let x3239: BytePoly_32 = bigint_nondet_rem!(ctx, x3237, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3238, x1, 96), x3239, 96),
            x3237,
            96
        ),
        520203,
        4,
    )?;
    let x3240: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x3236, x3236, 64), x3222, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x3241: BytePoly_66 = bigint_nondet_quot!(ctx, x3240, x1, 66);
    let x3242: BytePoly_32 = bigint_nondet_rem!(ctx, x3240, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3241, x1, 98), x3242, 98),
            x3240,
            98
        ),
        536459,
        4,
    )?;
    let x3243: BytePoly_64 = bigint_mul!(x3236, x3242, 64);
    let x3244: BytePoly_66 = bigint_nondet_quot!(ctx, x3243, x1, 66);
    let x3245: BytePoly_32 = bigint_nondet_rem!(ctx, x3243, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3244, x1, 98), x3245, 98),
            x3243,
            98
        ),
        536459,
        4,
    )?;
    let x3246: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x3245, x3239, 32), 32), x1, 32);
    let x3247: BytePoly_32 = bigint_nondet_quot!(ctx, x3246, x1, 32);
    let x3248: BytePoly_32 = bigint_nondet_rem!(ctx, x3246, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3247, x1, 64), x3248, 64),
            x3246,
            64
        ),
        260103,
        4,
    )?;
    let x3249: BytePoly_32 = bigint_add!(bigint_sub!(x5, x3242, 32), x1, 32);
    let x3250: BytePoly_32 = bigint_nondet_inv!(ctx, x3249, x1, 32);
    let x3251: BytePoly_64 = bigint_mul!(x3249, x3250, 64);
    let x3252: BytePoly_66 = bigint_nondet_quot!(ctx, x3251, x1, 66);
    let x3253: BytePoly_32 = bigint_nondet_rem!(ctx, x3251, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3252, x1, 98), x3253, 98),
            x3251,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x3253, x0, 32), 34, 1)?;
    let x3254: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x3248, 32), x1, 32), x3250, 64);
    let x3255: BytePoly_66 = bigint_nondet_quot!(ctx, x3254, x1, 66);
    let x3256: BytePoly_32 = bigint_nondet_rem!(ctx, x3254, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3255, x1, 98), x3256, 98),
            x3254,
            98
        ),
        536459,
        4,
    )?;
    let x3257: BytePoly_64 = bigint_add!(
        bigint_sub!(x3248, bigint_mul!(x3256, x3242, 64), 64),
        x1,
        64
    );
    let x3258: BytePoly_64 = bigint_nondet_quot!(ctx, x3257, x1, 64);
    let x3259: BytePoly_32 = bigint_nondet_rem!(ctx, x3257, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3258, x1, 96), x3259, 96),
            x3257,
            96
        ),
        520203,
        4,
    )?;
    let x3260: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x3256, x3256, 64), x3242, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x3261: BytePoly_66 = bigint_nondet_quot!(ctx, x3260, x1, 66);
    let x3262: BytePoly_32 = bigint_nondet_rem!(ctx, x3260, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3261, x1, 98), x3262, 98),
            x3260,
            98
        ),
        536459,
        4,
    )?;
    let x3263: BytePoly_64 = bigint_mul!(x3256, x3262, 64);
    let x3264: BytePoly_66 = bigint_nondet_quot!(ctx, x3263, x1, 66);
    let x3265: BytePoly_32 = bigint_nondet_rem!(ctx, x3263, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3264, x1, 98), x3265, 98),
            x3263,
            98
        ),
        536459,
        4,
    )?;
    let x3266: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x3265, x3259, 32), 32), x1, 32);
    let x3267: BytePoly_32 = bigint_nondet_quot!(ctx, x3266, x1, 32);
    let x3268: BytePoly_32 = bigint_nondet_rem!(ctx, x3266, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3267, x1, 64), x3268, 64),
            x3266,
            64
        ),
        260103,
        4,
    )?;
    let x3269: BytePoly_32 = bigint_add!(bigint_sub!(x5, x3262, 32), x1, 32);
    let x3270: BytePoly_32 = bigint_nondet_inv!(ctx, x3269, x1, 32);
    let x3271: BytePoly_64 = bigint_mul!(x3269, x3270, 64);
    let x3272: BytePoly_66 = bigint_nondet_quot!(ctx, x3271, x1, 66);
    let x3273: BytePoly_32 = bigint_nondet_rem!(ctx, x3271, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3272, x1, 98), x3273, 98),
            x3271,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x3273, x0, 32), 34, 1)?;
    let x3274: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x3268, 32), x1, 32), x3270, 64);
    let x3275: BytePoly_66 = bigint_nondet_quot!(ctx, x3274, x1, 66);
    let x3276: BytePoly_32 = bigint_nondet_rem!(ctx, x3274, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3275, x1, 98), x3276, 98),
            x3274,
            98
        ),
        536459,
        4,
    )?;
    let x3277: BytePoly_64 = bigint_add!(
        bigint_sub!(x3268, bigint_mul!(x3276, x3262, 64), 64),
        x1,
        64
    );
    let x3278: BytePoly_64 = bigint_nondet_quot!(ctx, x3277, x1, 64);
    let x3279: BytePoly_32 = bigint_nondet_rem!(ctx, x3277, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3278, x1, 96), x3279, 96),
            x3277,
            96
        ),
        520203,
        4,
    )?;
    let x3280: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x3276, x3276, 64), x3262, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x3281: BytePoly_66 = bigint_nondet_quot!(ctx, x3280, x1, 66);
    let x3282: BytePoly_32 = bigint_nondet_rem!(ctx, x3280, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3281, x1, 98), x3282, 98),
            x3280,
            98
        ),
        536459,
        4,
    )?;
    let x3283: BytePoly_64 = bigint_mul!(x3276, x3282, 64);
    let x3284: BytePoly_66 = bigint_nondet_quot!(ctx, x3283, x1, 66);
    let x3285: BytePoly_32 = bigint_nondet_rem!(ctx, x3283, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3284, x1, 98), x3285, 98),
            x3283,
            98
        ),
        536459,
        4,
    )?;
    let x3286: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x3285, x3279, 32), 32), x1, 32);
    let x3287: BytePoly_32 = bigint_nondet_quot!(ctx, x3286, x1, 32);
    let x3288: BytePoly_32 = bigint_nondet_rem!(ctx, x3286, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3287, x1, 64), x3288, 64),
            x3286,
            64
        ),
        260103,
        4,
    )?;
    let x3289: BytePoly_32 = bigint_add!(bigint_sub!(x5, x3282, 32), x1, 32);
    let x3290: BytePoly_32 = bigint_nondet_inv!(ctx, x3289, x1, 32);
    let x3291: BytePoly_64 = bigint_mul!(x3289, x3290, 64);
    let x3292: BytePoly_66 = bigint_nondet_quot!(ctx, x3291, x1, 66);
    let x3293: BytePoly_32 = bigint_nondet_rem!(ctx, x3291, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3292, x1, 98), x3293, 98),
            x3291,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x3293, x0, 32), 34, 1)?;
    let x3294: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x3288, 32), x1, 32), x3290, 64);
    let x3295: BytePoly_66 = bigint_nondet_quot!(ctx, x3294, x1, 66);
    let x3296: BytePoly_32 = bigint_nondet_rem!(ctx, x3294, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3295, x1, 98), x3296, 98),
            x3294,
            98
        ),
        536459,
        4,
    )?;
    let x3297: BytePoly_64 = bigint_add!(
        bigint_sub!(x3288, bigint_mul!(x3296, x3282, 64), 64),
        x1,
        64
    );
    let x3298: BytePoly_64 = bigint_nondet_quot!(ctx, x3297, x1, 64);
    let x3299: BytePoly_32 = bigint_nondet_rem!(ctx, x3297, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3298, x1, 96), x3299, 96),
            x3297,
            96
        ),
        520203,
        4,
    )?;
    let x3300: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x3296, x3296, 64), x3282, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x3301: BytePoly_66 = bigint_nondet_quot!(ctx, x3300, x1, 66);
    let x3302: BytePoly_32 = bigint_nondet_rem!(ctx, x3300, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3301, x1, 98), x3302, 98),
            x3300,
            98
        ),
        536459,
        4,
    )?;
    let x3303: BytePoly_64 = bigint_mul!(x3296, x3302, 64);
    let x3304: BytePoly_66 = bigint_nondet_quot!(ctx, x3303, x1, 66);
    let x3305: BytePoly_32 = bigint_nondet_rem!(ctx, x3303, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3304, x1, 98), x3305, 98),
            x3303,
            98
        ),
        536459,
        4,
    )?;
    let x3306: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x3305, x3299, 32), 32), x1, 32);
    let x3307: BytePoly_32 = bigint_nondet_quot!(ctx, x3306, x1, 32);
    let x3308: BytePoly_32 = bigint_nondet_rem!(ctx, x3306, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3307, x1, 64), x3308, 64),
            x3306,
            64
        ),
        260103,
        4,
    )?;
    let x3309: BytePoly_32 = bigint_add!(bigint_sub!(x5, x3302, 32), x1, 32);
    let x3310: BytePoly_32 = bigint_nondet_inv!(ctx, x3309, x1, 32);
    let x3311: BytePoly_64 = bigint_mul!(x3309, x3310, 64);
    let x3312: BytePoly_66 = bigint_nondet_quot!(ctx, x3311, x1, 66);
    let x3313: BytePoly_32 = bigint_nondet_rem!(ctx, x3311, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3312, x1, 98), x3313, 98),
            x3311,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x3313, x0, 32), 34, 1)?;
    let x3314: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x3308, 32), x1, 32), x3310, 64);
    let x3315: BytePoly_66 = bigint_nondet_quot!(ctx, x3314, x1, 66);
    let x3316: BytePoly_32 = bigint_nondet_rem!(ctx, x3314, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3315, x1, 98), x3316, 98),
            x3314,
            98
        ),
        536459,
        4,
    )?;
    let x3317: BytePoly_64 = bigint_add!(
        bigint_sub!(x3308, bigint_mul!(x3316, x3302, 64), 64),
        x1,
        64
    );
    let x3318: BytePoly_64 = bigint_nondet_quot!(ctx, x3317, x1, 64);
    let x3319: BytePoly_32 = bigint_nondet_rem!(ctx, x3317, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3318, x1, 96), x3319, 96),
            x3317,
            96
        ),
        520203,
        4,
    )?;
    let x3320: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x3316, x3316, 64), x3302, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x3321: BytePoly_66 = bigint_nondet_quot!(ctx, x3320, x1, 66);
    let x3322: BytePoly_32 = bigint_nondet_rem!(ctx, x3320, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3321, x1, 98), x3322, 98),
            x3320,
            98
        ),
        536459,
        4,
    )?;
    let x3323: BytePoly_64 = bigint_mul!(x3316, x3322, 64);
    let x3324: BytePoly_66 = bigint_nondet_quot!(ctx, x3323, x1, 66);
    let x3325: BytePoly_32 = bigint_nondet_rem!(ctx, x3323, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3324, x1, 98), x3325, 98),
            x3323,
            98
        ),
        536459,
        4,
    )?;
    let x3326: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x3325, x3319, 32), 32), x1, 32);
    let x3327: BytePoly_32 = bigint_nondet_quot!(ctx, x3326, x1, 32);
    let x3328: BytePoly_32 = bigint_nondet_rem!(ctx, x3326, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3327, x1, 64), x3328, 64),
            x3326,
            64
        ),
        260103,
        4,
    )?;
    let x3329: BytePoly_32 = bigint_add!(bigint_sub!(x5, x3322, 32), x1, 32);
    let x3330: BytePoly_32 = bigint_nondet_inv!(ctx, x3329, x1, 32);
    let x3331: BytePoly_64 = bigint_mul!(x3329, x3330, 64);
    let x3332: BytePoly_66 = bigint_nondet_quot!(ctx, x3331, x1, 66);
    let x3333: BytePoly_32 = bigint_nondet_rem!(ctx, x3331, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3332, x1, 98), x3333, 98),
            x3331,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x3333, x0, 32), 34, 1)?;
    let x3334: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x3328, 32), x1, 32), x3330, 64);
    let x3335: BytePoly_66 = bigint_nondet_quot!(ctx, x3334, x1, 66);
    let x3336: BytePoly_32 = bigint_nondet_rem!(ctx, x3334, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3335, x1, 98), x3336, 98),
            x3334,
            98
        ),
        536459,
        4,
    )?;
    let x3337: BytePoly_64 = bigint_add!(
        bigint_sub!(x3328, bigint_mul!(x3336, x3322, 64), 64),
        x1,
        64
    );
    let x3338: BytePoly_64 = bigint_nondet_quot!(ctx, x3337, x1, 64);
    let x3339: BytePoly_32 = bigint_nondet_rem!(ctx, x3337, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3338, x1, 96), x3339, 96),
            x3337,
            96
        ),
        520203,
        4,
    )?;
    let x3340: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x3336, x3336, 64), x3322, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x3341: BytePoly_66 = bigint_nondet_quot!(ctx, x3340, x1, 66);
    let x3342: BytePoly_32 = bigint_nondet_rem!(ctx, x3340, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3341, x1, 98), x3342, 98),
            x3340,
            98
        ),
        536459,
        4,
    )?;
    let x3343: BytePoly_64 = bigint_mul!(x3336, x3342, 64);
    let x3344: BytePoly_66 = bigint_nondet_quot!(ctx, x3343, x1, 66);
    let x3345: BytePoly_32 = bigint_nondet_rem!(ctx, x3343, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3344, x1, 98), x3345, 98),
            x3343,
            98
        ),
        536459,
        4,
    )?;
    let x3346: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x3345, x3339, 32), 32), x1, 32);
    let x3347: BytePoly_32 = bigint_nondet_quot!(ctx, x3346, x1, 32);
    let x3348: BytePoly_32 = bigint_nondet_rem!(ctx, x3346, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3347, x1, 64), x3348, 64),
            x3346,
            64
        ),
        260103,
        4,
    )?;
    let x3349: BytePoly_32 = bigint_add!(bigint_sub!(x5, x3342, 32), x1, 32);
    let x3350: BytePoly_32 = bigint_nondet_inv!(ctx, x3349, x1, 32);
    let x3351: BytePoly_64 = bigint_mul!(x3349, x3350, 64);
    let x3352: BytePoly_66 = bigint_nondet_quot!(ctx, x3351, x1, 66);
    let x3353: BytePoly_32 = bigint_nondet_rem!(ctx, x3351, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3352, x1, 98), x3353, 98),
            x3351,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x3353, x0, 32), 34, 1)?;
    let x3354: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x3348, 32), x1, 32), x3350, 64);
    let x3355: BytePoly_66 = bigint_nondet_quot!(ctx, x3354, x1, 66);
    let x3356: BytePoly_32 = bigint_nondet_rem!(ctx, x3354, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3355, x1, 98), x3356, 98),
            x3354,
            98
        ),
        536459,
        4,
    )?;
    let x3357: BytePoly_64 = bigint_add!(
        bigint_sub!(x3348, bigint_mul!(x3356, x3342, 64), 64),
        x1,
        64
    );
    let x3358: BytePoly_64 = bigint_nondet_quot!(ctx, x3357, x1, 64);
    let x3359: BytePoly_32 = bigint_nondet_rem!(ctx, x3357, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3358, x1, 96), x3359, 96),
            x3357,
            96
        ),
        520203,
        4,
    )?;
    let x3360: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x3356, x3356, 64), x3342, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x3361: BytePoly_66 = bigint_nondet_quot!(ctx, x3360, x1, 66);
    let x3362: BytePoly_32 = bigint_nondet_rem!(ctx, x3360, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3361, x1, 98), x3362, 98),
            x3360,
            98
        ),
        536459,
        4,
    )?;
    let x3363: BytePoly_64 = bigint_mul!(x3356, x3362, 64);
    let x3364: BytePoly_66 = bigint_nondet_quot!(ctx, x3363, x1, 66);
    let x3365: BytePoly_32 = bigint_nondet_rem!(ctx, x3363, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3364, x1, 98), x3365, 98),
            x3363,
            98
        ),
        536459,
        4,
    )?;
    let x3366: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x3365, x3359, 32), 32), x1, 32);
    let x3367: BytePoly_32 = bigint_nondet_quot!(ctx, x3366, x1, 32);
    let x3368: BytePoly_32 = bigint_nondet_rem!(ctx, x3366, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3367, x1, 64), x3368, 64),
            x3366,
            64
        ),
        260103,
        4,
    )?;
    let x3369: BytePoly_32 = bigint_add!(bigint_sub!(x5, x3362, 32), x1, 32);
    let x3370: BytePoly_32 = bigint_nondet_inv!(ctx, x3369, x1, 32);
    let x3371: BytePoly_64 = bigint_mul!(x3369, x3370, 64);
    let x3372: BytePoly_66 = bigint_nondet_quot!(ctx, x3371, x1, 66);
    let x3373: BytePoly_32 = bigint_nondet_rem!(ctx, x3371, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3372, x1, 98), x3373, 98),
            x3371,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x3373, x0, 32), 34, 1)?;
    let x3374: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x3368, 32), x1, 32), x3370, 64);
    let x3375: BytePoly_66 = bigint_nondet_quot!(ctx, x3374, x1, 66);
    let x3376: BytePoly_32 = bigint_nondet_rem!(ctx, x3374, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3375, x1, 98), x3376, 98),
            x3374,
            98
        ),
        536459,
        4,
    )?;
    let x3377: BytePoly_64 = bigint_add!(
        bigint_sub!(x3368, bigint_mul!(x3376, x3362, 64), 64),
        x1,
        64
    );
    let x3378: BytePoly_64 = bigint_nondet_quot!(ctx, x3377, x1, 64);
    let x3379: BytePoly_32 = bigint_nondet_rem!(ctx, x3377, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3378, x1, 96), x3379, 96),
            x3377,
            96
        ),
        520203,
        4,
    )?;
    let x3380: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x3376, x3376, 64), x3362, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x3381: BytePoly_66 = bigint_nondet_quot!(ctx, x3380, x1, 66);
    let x3382: BytePoly_32 = bigint_nondet_rem!(ctx, x3380, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3381, x1, 98), x3382, 98),
            x3380,
            98
        ),
        536459,
        4,
    )?;
    let x3383: BytePoly_64 = bigint_mul!(x3376, x3382, 64);
    let x3384: BytePoly_66 = bigint_nondet_quot!(ctx, x3383, x1, 66);
    let x3385: BytePoly_32 = bigint_nondet_rem!(ctx, x3383, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3384, x1, 98), x3385, 98),
            x3383,
            98
        ),
        536459,
        4,
    )?;
    let x3386: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x3385, x3379, 32), 32), x1, 32);
    let x3387: BytePoly_32 = bigint_nondet_quot!(ctx, x3386, x1, 32);
    let x3388: BytePoly_32 = bigint_nondet_rem!(ctx, x3386, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3387, x1, 64), x3388, 64),
            x3386,
            64
        ),
        260103,
        4,
    )?;
    let x3389: BytePoly_32 = bigint_add!(bigint_sub!(x5, x3382, 32), x1, 32);
    let x3390: BytePoly_32 = bigint_nondet_inv!(ctx, x3389, x1, 32);
    let x3391: BytePoly_64 = bigint_mul!(x3389, x3390, 64);
    let x3392: BytePoly_66 = bigint_nondet_quot!(ctx, x3391, x1, 66);
    let x3393: BytePoly_32 = bigint_nondet_rem!(ctx, x3391, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3392, x1, 98), x3393, 98),
            x3391,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x3393, x0, 32), 34, 1)?;
    let x3394: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x3388, 32), x1, 32), x3390, 64);
    let x3395: BytePoly_66 = bigint_nondet_quot!(ctx, x3394, x1, 66);
    let x3396: BytePoly_32 = bigint_nondet_rem!(ctx, x3394, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3395, x1, 98), x3396, 98),
            x3394,
            98
        ),
        536459,
        4,
    )?;
    let x3397: BytePoly_64 = bigint_add!(
        bigint_sub!(x3388, bigint_mul!(x3396, x3382, 64), 64),
        x1,
        64
    );
    let x3398: BytePoly_64 = bigint_nondet_quot!(ctx, x3397, x1, 64);
    let x3399: BytePoly_32 = bigint_nondet_rem!(ctx, x3397, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3398, x1, 96), x3399, 96),
            x3397,
            96
        ),
        520203,
        4,
    )?;
    let x3400: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x3396, x3396, 64), x3382, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x3401: BytePoly_66 = bigint_nondet_quot!(ctx, x3400, x1, 66);
    let x3402: BytePoly_32 = bigint_nondet_rem!(ctx, x3400, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3401, x1, 98), x3402, 98),
            x3400,
            98
        ),
        536459,
        4,
    )?;
    let x3403: BytePoly_64 = bigint_mul!(x3396, x3402, 64);
    let x3404: BytePoly_66 = bigint_nondet_quot!(ctx, x3403, x1, 66);
    let x3405: BytePoly_32 = bigint_nondet_rem!(ctx, x3403, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3404, x1, 98), x3405, 98),
            x3403,
            98
        ),
        536459,
        4,
    )?;
    let x3406: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x3405, x3399, 32), 32), x1, 32);
    let x3407: BytePoly_32 = bigint_nondet_quot!(ctx, x3406, x1, 32);
    let x3408: BytePoly_32 = bigint_nondet_rem!(ctx, x3406, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3407, x1, 64), x3408, 64),
            x3406,
            64
        ),
        260103,
        4,
    )?;
    let x3409: BytePoly_32 = bigint_add!(bigint_sub!(x5, x3402, 32), x1, 32);
    let x3410: BytePoly_32 = bigint_nondet_inv!(ctx, x3409, x1, 32);
    let x3411: BytePoly_64 = bigint_mul!(x3409, x3410, 64);
    let x3412: BytePoly_66 = bigint_nondet_quot!(ctx, x3411, x1, 66);
    let x3413: BytePoly_32 = bigint_nondet_rem!(ctx, x3411, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3412, x1, 98), x3413, 98),
            x3411,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x3413, x0, 32), 34, 1)?;
    let x3414: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x3408, 32), x1, 32), x3410, 64);
    let x3415: BytePoly_66 = bigint_nondet_quot!(ctx, x3414, x1, 66);
    let x3416: BytePoly_32 = bigint_nondet_rem!(ctx, x3414, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3415, x1, 98), x3416, 98),
            x3414,
            98
        ),
        536459,
        4,
    )?;
    let x3417: BytePoly_64 = bigint_add!(
        bigint_sub!(x3408, bigint_mul!(x3416, x3402, 64), 64),
        x1,
        64
    );
    let x3418: BytePoly_64 = bigint_nondet_quot!(ctx, x3417, x1, 64);
    let x3419: BytePoly_32 = bigint_nondet_rem!(ctx, x3417, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3418, x1, 96), x3419, 96),
            x3417,
            96
        ),
        520203,
        4,
    )?;
    let x3420: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x3416, x3416, 64), x3402, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x3421: BytePoly_66 = bigint_nondet_quot!(ctx, x3420, x1, 66);
    let x3422: BytePoly_32 = bigint_nondet_rem!(ctx, x3420, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3421, x1, 98), x3422, 98),
            x3420,
            98
        ),
        536459,
        4,
    )?;
    let x3423: BytePoly_64 = bigint_mul!(x3416, x3422, 64);
    let x3424: BytePoly_66 = bigint_nondet_quot!(ctx, x3423, x1, 66);
    let x3425: BytePoly_32 = bigint_nondet_rem!(ctx, x3423, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3424, x1, 98), x3425, 98),
            x3423,
            98
        ),
        536459,
        4,
    )?;
    let x3426: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x3425, x3419, 32), 32), x1, 32);
    let x3427: BytePoly_32 = bigint_nondet_quot!(ctx, x3426, x1, 32);
    let x3428: BytePoly_32 = bigint_nondet_rem!(ctx, x3426, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3427, x1, 64), x3428, 64),
            x3426,
            64
        ),
        260103,
        4,
    )?;
    let x3429: BytePoly_32 = bigint_add!(bigint_sub!(x5, x3422, 32), x1, 32);
    let x3430: BytePoly_32 = bigint_nondet_inv!(ctx, x3429, x1, 32);
    let x3431: BytePoly_64 = bigint_mul!(x3429, x3430, 64);
    let x3432: BytePoly_66 = bigint_nondet_quot!(ctx, x3431, x1, 66);
    let x3433: BytePoly_32 = bigint_nondet_rem!(ctx, x3431, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3432, x1, 98), x3433, 98),
            x3431,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x3433, x0, 32), 34, 1)?;
    let x3434: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x3428, 32), x1, 32), x3430, 64);
    let x3435: BytePoly_66 = bigint_nondet_quot!(ctx, x3434, x1, 66);
    let x3436: BytePoly_32 = bigint_nondet_rem!(ctx, x3434, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3435, x1, 98), x3436, 98),
            x3434,
            98
        ),
        536459,
        4,
    )?;
    let x3437: BytePoly_64 = bigint_add!(
        bigint_sub!(x3428, bigint_mul!(x3436, x3422, 64), 64),
        x1,
        64
    );
    let x3438: BytePoly_64 = bigint_nondet_quot!(ctx, x3437, x1, 64);
    let x3439: BytePoly_32 = bigint_nondet_rem!(ctx, x3437, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3438, x1, 96), x3439, 96),
            x3437,
            96
        ),
        520203,
        4,
    )?;
    let x3440: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x3436, x3436, 64), x3422, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x3441: BytePoly_66 = bigint_nondet_quot!(ctx, x3440, x1, 66);
    let x3442: BytePoly_32 = bigint_nondet_rem!(ctx, x3440, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3441, x1, 98), x3442, 98),
            x3440,
            98
        ),
        536459,
        4,
    )?;
    let x3443: BytePoly_64 = bigint_mul!(x3436, x3442, 64);
    let x3444: BytePoly_66 = bigint_nondet_quot!(ctx, x3443, x1, 66);
    let x3445: BytePoly_32 = bigint_nondet_rem!(ctx, x3443, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3444, x1, 98), x3445, 98),
            x3443,
            98
        ),
        536459,
        4,
    )?;
    let x3446: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x3445, x3439, 32), 32), x1, 32);
    let x3447: BytePoly_32 = bigint_nondet_quot!(ctx, x3446, x1, 32);
    let x3448: BytePoly_32 = bigint_nondet_rem!(ctx, x3446, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3447, x1, 64), x3448, 64),
            x3446,
            64
        ),
        260103,
        4,
    )?;
    let x3449: BytePoly_32 = bigint_add!(bigint_sub!(x5, x3442, 32), x1, 32);
    let x3450: BytePoly_32 = bigint_nondet_inv!(ctx, x3449, x1, 32);
    let x3451: BytePoly_64 = bigint_mul!(x3449, x3450, 64);
    let x3452: BytePoly_66 = bigint_nondet_quot!(ctx, x3451, x1, 66);
    let x3453: BytePoly_32 = bigint_nondet_rem!(ctx, x3451, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3452, x1, 98), x3453, 98),
            x3451,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x3453, x0, 32), 34, 1)?;
    let x3454: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x3448, 32), x1, 32), x3450, 64);
    let x3455: BytePoly_66 = bigint_nondet_quot!(ctx, x3454, x1, 66);
    let x3456: BytePoly_32 = bigint_nondet_rem!(ctx, x3454, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3455, x1, 98), x3456, 98),
            x3454,
            98
        ),
        536459,
        4,
    )?;
    let x3457: BytePoly_64 = bigint_add!(
        bigint_sub!(x3448, bigint_mul!(x3456, x3442, 64), 64),
        x1,
        64
    );
    let x3458: BytePoly_64 = bigint_nondet_quot!(ctx, x3457, x1, 64);
    let x3459: BytePoly_32 = bigint_nondet_rem!(ctx, x3457, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3458, x1, 96), x3459, 96),
            x3457,
            96
        ),
        520203,
        4,
    )?;
    let x3460: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x3456, x3456, 64), x3442, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x3461: BytePoly_66 = bigint_nondet_quot!(ctx, x3460, x1, 66);
    let x3462: BytePoly_32 = bigint_nondet_rem!(ctx, x3460, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3461, x1, 98), x3462, 98),
            x3460,
            98
        ),
        536459,
        4,
    )?;
    let x3463: BytePoly_64 = bigint_mul!(x3456, x3462, 64);
    let x3464: BytePoly_66 = bigint_nondet_quot!(ctx, x3463, x1, 66);
    let x3465: BytePoly_32 = bigint_nondet_rem!(ctx, x3463, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3464, x1, 98), x3465, 98),
            x3463,
            98
        ),
        536459,
        4,
    )?;
    let x3466: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x3465, x3459, 32), 32), x1, 32);
    let x3467: BytePoly_32 = bigint_nondet_quot!(ctx, x3466, x1, 32);
    let x3468: BytePoly_32 = bigint_nondet_rem!(ctx, x3466, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3467, x1, 64), x3468, 64),
            x3466,
            64
        ),
        260103,
        4,
    )?;
    let x3469: BytePoly_32 = bigint_add!(bigint_sub!(x5, x3462, 32), x1, 32);
    let x3470: BytePoly_32 = bigint_nondet_inv!(ctx, x3469, x1, 32);
    let x3471: BytePoly_64 = bigint_mul!(x3469, x3470, 64);
    let x3472: BytePoly_66 = bigint_nondet_quot!(ctx, x3471, x1, 66);
    let x3473: BytePoly_32 = bigint_nondet_rem!(ctx, x3471, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3472, x1, 98), x3473, 98),
            x3471,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x3473, x0, 32), 34, 1)?;
    let x3474: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x3468, 32), x1, 32), x3470, 64);
    let x3475: BytePoly_66 = bigint_nondet_quot!(ctx, x3474, x1, 66);
    let x3476: BytePoly_32 = bigint_nondet_rem!(ctx, x3474, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3475, x1, 98), x3476, 98),
            x3474,
            98
        ),
        536459,
        4,
    )?;
    let x3477: BytePoly_64 = bigint_add!(
        bigint_sub!(x3468, bigint_mul!(x3476, x3462, 64), 64),
        x1,
        64
    );
    let x3478: BytePoly_64 = bigint_nondet_quot!(ctx, x3477, x1, 64);
    let x3479: BytePoly_32 = bigint_nondet_rem!(ctx, x3477, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3478, x1, 96), x3479, 96),
            x3477,
            96
        ),
        520203,
        4,
    )?;
    let x3480: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x3476, x3476, 64), x3462, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x3481: BytePoly_66 = bigint_nondet_quot!(ctx, x3480, x1, 66);
    let x3482: BytePoly_32 = bigint_nondet_rem!(ctx, x3480, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3481, x1, 98), x3482, 98),
            x3480,
            98
        ),
        536459,
        4,
    )?;
    let x3483: BytePoly_64 = bigint_mul!(x3476, x3482, 64);
    let x3484: BytePoly_66 = bigint_nondet_quot!(ctx, x3483, x1, 66);
    let x3485: BytePoly_32 = bigint_nondet_rem!(ctx, x3483, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3484, x1, 98), x3485, 98),
            x3483,
            98
        ),
        536459,
        4,
    )?;
    let x3486: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x3485, x3479, 32), 32), x1, 32);
    let x3487: BytePoly_32 = bigint_nondet_quot!(ctx, x3486, x1, 32);
    let x3488: BytePoly_32 = bigint_nondet_rem!(ctx, x3486, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3487, x1, 64), x3488, 64),
            x3486,
            64
        ),
        260103,
        4,
    )?;
    let x3489: BytePoly_32 = bigint_add!(bigint_sub!(x5, x3482, 32), x1, 32);
    let x3490: BytePoly_32 = bigint_nondet_inv!(ctx, x3489, x1, 32);
    let x3491: BytePoly_64 = bigint_mul!(x3489, x3490, 64);
    let x3492: BytePoly_66 = bigint_nondet_quot!(ctx, x3491, x1, 66);
    let x3493: BytePoly_32 = bigint_nondet_rem!(ctx, x3491, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3492, x1, 98), x3493, 98),
            x3491,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x3493, x0, 32), 34, 1)?;
    let x3494: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x3488, 32), x1, 32), x3490, 64);
    let x3495: BytePoly_66 = bigint_nondet_quot!(ctx, x3494, x1, 66);
    let x3496: BytePoly_32 = bigint_nondet_rem!(ctx, x3494, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3495, x1, 98), x3496, 98),
            x3494,
            98
        ),
        536459,
        4,
    )?;
    let x3497: BytePoly_64 = bigint_add!(
        bigint_sub!(x3488, bigint_mul!(x3496, x3482, 64), 64),
        x1,
        64
    );
    let x3498: BytePoly_64 = bigint_nondet_quot!(ctx, x3497, x1, 64);
    let x3499: BytePoly_32 = bigint_nondet_rem!(ctx, x3497, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3498, x1, 96), x3499, 96),
            x3497,
            96
        ),
        520203,
        4,
    )?;
    let x3500: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x3496, x3496, 64), x3482, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x3501: BytePoly_66 = bigint_nondet_quot!(ctx, x3500, x1, 66);
    let x3502: BytePoly_32 = bigint_nondet_rem!(ctx, x3500, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3501, x1, 98), x3502, 98),
            x3500,
            98
        ),
        536459,
        4,
    )?;
    let x3503: BytePoly_64 = bigint_mul!(x3496, x3502, 64);
    let x3504: BytePoly_66 = bigint_nondet_quot!(ctx, x3503, x1, 66);
    let x3505: BytePoly_32 = bigint_nondet_rem!(ctx, x3503, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3504, x1, 98), x3505, 98),
            x3503,
            98
        ),
        536459,
        4,
    )?;
    let x3506: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x3505, x3499, 32), 32), x1, 32);
    let x3507: BytePoly_32 = bigint_nondet_quot!(ctx, x3506, x1, 32);
    let x3508: BytePoly_32 = bigint_nondet_rem!(ctx, x3506, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3507, x1, 64), x3508, 64),
            x3506,
            64
        ),
        260103,
        4,
    )?;
    let x3509: BytePoly_32 = bigint_add!(bigint_sub!(x5, x3502, 32), x1, 32);
    let x3510: BytePoly_32 = bigint_nondet_inv!(ctx, x3509, x1, 32);
    let x3511: BytePoly_64 = bigint_mul!(x3509, x3510, 64);
    let x3512: BytePoly_66 = bigint_nondet_quot!(ctx, x3511, x1, 66);
    let x3513: BytePoly_32 = bigint_nondet_rem!(ctx, x3511, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3512, x1, 98), x3513, 98),
            x3511,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x3513, x0, 32), 34, 1)?;
    let x3514: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x3508, 32), x1, 32), x3510, 64);
    let x3515: BytePoly_66 = bigint_nondet_quot!(ctx, x3514, x1, 66);
    let x3516: BytePoly_32 = bigint_nondet_rem!(ctx, x3514, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3515, x1, 98), x3516, 98),
            x3514,
            98
        ),
        536459,
        4,
    )?;
    let x3517: BytePoly_64 = bigint_add!(
        bigint_sub!(x3508, bigint_mul!(x3516, x3502, 64), 64),
        x1,
        64
    );
    let x3518: BytePoly_64 = bigint_nondet_quot!(ctx, x3517, x1, 64);
    let x3519: BytePoly_32 = bigint_nondet_rem!(ctx, x3517, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3518, x1, 96), x3519, 96),
            x3517,
            96
        ),
        520203,
        4,
    )?;
    let x3520: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x3516, x3516, 64), x3502, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x3521: BytePoly_66 = bigint_nondet_quot!(ctx, x3520, x1, 66);
    let x3522: BytePoly_32 = bigint_nondet_rem!(ctx, x3520, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3521, x1, 98), x3522, 98),
            x3520,
            98
        ),
        536459,
        4,
    )?;
    let x3523: BytePoly_64 = bigint_mul!(x3516, x3522, 64);
    let x3524: BytePoly_66 = bigint_nondet_quot!(ctx, x3523, x1, 66);
    let x3525: BytePoly_32 = bigint_nondet_rem!(ctx, x3523, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3524, x1, 98), x3525, 98),
            x3523,
            98
        ),
        536459,
        4,
    )?;
    let x3526: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x3525, x3519, 32), 32), x1, 32);
    let x3527: BytePoly_32 = bigint_nondet_quot!(ctx, x3526, x1, 32);
    let x3528: BytePoly_32 = bigint_nondet_rem!(ctx, x3526, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3527, x1, 64), x3528, 64),
            x3526,
            64
        ),
        260103,
        4,
    )?;
    let x3529: BytePoly_32 = bigint_add!(bigint_sub!(x5, x3522, 32), x1, 32);
    let x3530: BytePoly_32 = bigint_nondet_inv!(ctx, x3529, x1, 32);
    let x3531: BytePoly_64 = bigint_mul!(x3529, x3530, 64);
    let x3532: BytePoly_66 = bigint_nondet_quot!(ctx, x3531, x1, 66);
    let x3533: BytePoly_32 = bigint_nondet_rem!(ctx, x3531, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3532, x1, 98), x3533, 98),
            x3531,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x3533, x0, 32), 34, 1)?;
    let x3534: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x3528, 32), x1, 32), x3530, 64);
    let x3535: BytePoly_66 = bigint_nondet_quot!(ctx, x3534, x1, 66);
    let x3536: BytePoly_32 = bigint_nondet_rem!(ctx, x3534, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3535, x1, 98), x3536, 98),
            x3534,
            98
        ),
        536459,
        4,
    )?;
    let x3537: BytePoly_64 = bigint_add!(
        bigint_sub!(x3528, bigint_mul!(x3536, x3522, 64), 64),
        x1,
        64
    );
    let x3538: BytePoly_64 = bigint_nondet_quot!(ctx, x3537, x1, 64);
    let x3539: BytePoly_32 = bigint_nondet_rem!(ctx, x3537, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3538, x1, 96), x3539, 96),
            x3537,
            96
        ),
        520203,
        4,
    )?;
    let x3540: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x3536, x3536, 64), x3522, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x3541: BytePoly_66 = bigint_nondet_quot!(ctx, x3540, x1, 66);
    let x3542: BytePoly_32 = bigint_nondet_rem!(ctx, x3540, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3541, x1, 98), x3542, 98),
            x3540,
            98
        ),
        536459,
        4,
    )?;
    let x3543: BytePoly_64 = bigint_mul!(x3536, x3542, 64);
    let x3544: BytePoly_66 = bigint_nondet_quot!(ctx, x3543, x1, 66);
    let x3545: BytePoly_32 = bigint_nondet_rem!(ctx, x3543, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3544, x1, 98), x3545, 98),
            x3543,
            98
        ),
        536459,
        4,
    )?;
    let x3546: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x3545, x3539, 32), 32), x1, 32);
    let x3547: BytePoly_32 = bigint_nondet_quot!(ctx, x3546, x1, 32);
    let x3548: BytePoly_32 = bigint_nondet_rem!(ctx, x3546, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3547, x1, 64), x3548, 64),
            x3546,
            64
        ),
        260103,
        4,
    )?;
    let x3549: BytePoly_32 = bigint_add!(bigint_sub!(x5, x3542, 32), x1, 32);
    let x3550: BytePoly_32 = bigint_nondet_inv!(ctx, x3549, x1, 32);
    let x3551: BytePoly_64 = bigint_mul!(x3549, x3550, 64);
    let x3552: BytePoly_66 = bigint_nondet_quot!(ctx, x3551, x1, 66);
    let x3553: BytePoly_32 = bigint_nondet_rem!(ctx, x3551, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3552, x1, 98), x3553, 98),
            x3551,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x3553, x0, 32), 34, 1)?;
    let x3554: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x3548, 32), x1, 32), x3550, 64);
    let x3555: BytePoly_66 = bigint_nondet_quot!(ctx, x3554, x1, 66);
    let x3556: BytePoly_32 = bigint_nondet_rem!(ctx, x3554, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3555, x1, 98), x3556, 98),
            x3554,
            98
        ),
        536459,
        4,
    )?;
    let x3557: BytePoly_64 = bigint_add!(
        bigint_sub!(x3548, bigint_mul!(x3556, x3542, 64), 64),
        x1,
        64
    );
    let x3558: BytePoly_64 = bigint_nondet_quot!(ctx, x3557, x1, 64);
    let x3559: BytePoly_32 = bigint_nondet_rem!(ctx, x3557, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3558, x1, 96), x3559, 96),
            x3557,
            96
        ),
        520203,
        4,
    )?;
    let x3560: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x3556, x3556, 64), x3542, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x3561: BytePoly_66 = bigint_nondet_quot!(ctx, x3560, x1, 66);
    let x3562: BytePoly_32 = bigint_nondet_rem!(ctx, x3560, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3561, x1, 98), x3562, 98),
            x3560,
            98
        ),
        536459,
        4,
    )?;
    let x3563: BytePoly_64 = bigint_mul!(x3556, x3562, 64);
    let x3564: BytePoly_66 = bigint_nondet_quot!(ctx, x3563, x1, 66);
    let x3565: BytePoly_32 = bigint_nondet_rem!(ctx, x3563, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3564, x1, 98), x3565, 98),
            x3563,
            98
        ),
        536459,
        4,
    )?;
    let x3566: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x3565, x3559, 32), 32), x1, 32);
    let x3567: BytePoly_32 = bigint_nondet_quot!(ctx, x3566, x1, 32);
    let x3568: BytePoly_32 = bigint_nondet_rem!(ctx, x3566, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3567, x1, 64), x3568, 64),
            x3566,
            64
        ),
        260103,
        4,
    )?;
    let x3569: BytePoly_32 = bigint_add!(bigint_sub!(x5, x3562, 32), x1, 32);
    let x3570: BytePoly_32 = bigint_nondet_inv!(ctx, x3569, x1, 32);
    let x3571: BytePoly_64 = bigint_mul!(x3569, x3570, 64);
    let x3572: BytePoly_66 = bigint_nondet_quot!(ctx, x3571, x1, 66);
    let x3573: BytePoly_32 = bigint_nondet_rem!(ctx, x3571, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3572, x1, 98), x3573, 98),
            x3571,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x3573, x0, 32), 34, 1)?;
    let x3574: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x3568, 32), x1, 32), x3570, 64);
    let x3575: BytePoly_66 = bigint_nondet_quot!(ctx, x3574, x1, 66);
    let x3576: BytePoly_32 = bigint_nondet_rem!(ctx, x3574, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3575, x1, 98), x3576, 98),
            x3574,
            98
        ),
        536459,
        4,
    )?;
    let x3577: BytePoly_64 = bigint_add!(
        bigint_sub!(x3568, bigint_mul!(x3576, x3562, 64), 64),
        x1,
        64
    );
    let x3578: BytePoly_64 = bigint_nondet_quot!(ctx, x3577, x1, 64);
    let x3579: BytePoly_32 = bigint_nondet_rem!(ctx, x3577, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3578, x1, 96), x3579, 96),
            x3577,
            96
        ),
        520203,
        4,
    )?;
    let x3580: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x3576, x3576, 64), x3562, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x3581: BytePoly_66 = bigint_nondet_quot!(ctx, x3580, x1, 66);
    let x3582: BytePoly_32 = bigint_nondet_rem!(ctx, x3580, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3581, x1, 98), x3582, 98),
            x3580,
            98
        ),
        536459,
        4,
    )?;
    let x3583: BytePoly_64 = bigint_mul!(x3576, x3582, 64);
    let x3584: BytePoly_66 = bigint_nondet_quot!(ctx, x3583, x1, 66);
    let x3585: BytePoly_32 = bigint_nondet_rem!(ctx, x3583, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3584, x1, 98), x3585, 98),
            x3583,
            98
        ),
        536459,
        4,
    )?;
    let x3586: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x3585, x3579, 32), 32), x1, 32);
    let x3587: BytePoly_32 = bigint_nondet_quot!(ctx, x3586, x1, 32);
    let x3588: BytePoly_32 = bigint_nondet_rem!(ctx, x3586, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3587, x1, 64), x3588, 64),
            x3586,
            64
        ),
        260103,
        4,
    )?;
    let x3589: BytePoly_32 = bigint_add!(bigint_sub!(x5, x3582, 32), x1, 32);
    let x3590: BytePoly_32 = bigint_nondet_inv!(ctx, x3589, x1, 32);
    let x3591: BytePoly_64 = bigint_mul!(x3589, x3590, 64);
    let x3592: BytePoly_66 = bigint_nondet_quot!(ctx, x3591, x1, 66);
    let x3593: BytePoly_32 = bigint_nondet_rem!(ctx, x3591, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3592, x1, 98), x3593, 98),
            x3591,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x3593, x0, 32), 34, 1)?;
    let x3594: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x3588, 32), x1, 32), x3590, 64);
    let x3595: BytePoly_66 = bigint_nondet_quot!(ctx, x3594, x1, 66);
    let x3596: BytePoly_32 = bigint_nondet_rem!(ctx, x3594, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3595, x1, 98), x3596, 98),
            x3594,
            98
        ),
        536459,
        4,
    )?;
    let x3597: BytePoly_64 = bigint_add!(
        bigint_sub!(x3588, bigint_mul!(x3596, x3582, 64), 64),
        x1,
        64
    );
    let x3598: BytePoly_64 = bigint_nondet_quot!(ctx, x3597, x1, 64);
    let x3599: BytePoly_32 = bigint_nondet_rem!(ctx, x3597, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3598, x1, 96), x3599, 96),
            x3597,
            96
        ),
        520203,
        4,
    )?;
    let x3600: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x3596, x3596, 64), x3582, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x3601: BytePoly_66 = bigint_nondet_quot!(ctx, x3600, x1, 66);
    let x3602: BytePoly_32 = bigint_nondet_rem!(ctx, x3600, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3601, x1, 98), x3602, 98),
            x3600,
            98
        ),
        536459,
        4,
    )?;
    let x3603: BytePoly_64 = bigint_mul!(x3596, x3602, 64);
    let x3604: BytePoly_66 = bigint_nondet_quot!(ctx, x3603, x1, 66);
    let x3605: BytePoly_32 = bigint_nondet_rem!(ctx, x3603, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3604, x1, 98), x3605, 98),
            x3603,
            98
        ),
        536459,
        4,
    )?;
    let x3606: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x3605, x3599, 32), 32), x1, 32);
    let x3607: BytePoly_32 = bigint_nondet_quot!(ctx, x3606, x1, 32);
    let x3608: BytePoly_32 = bigint_nondet_rem!(ctx, x3606, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3607, x1, 64), x3608, 64),
            x3606,
            64
        ),
        260103,
        4,
    )?;
    let x3609: BytePoly_32 = bigint_add!(bigint_sub!(x5, x3602, 32), x1, 32);
    let x3610: BytePoly_32 = bigint_nondet_inv!(ctx, x3609, x1, 32);
    let x3611: BytePoly_64 = bigint_mul!(x3609, x3610, 64);
    let x3612: BytePoly_66 = bigint_nondet_quot!(ctx, x3611, x1, 66);
    let x3613: BytePoly_32 = bigint_nondet_rem!(ctx, x3611, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3612, x1, 98), x3613, 98),
            x3611,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x3613, x0, 32), 34, 1)?;
    let x3614: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x3608, 32), x1, 32), x3610, 64);
    let x3615: BytePoly_66 = bigint_nondet_quot!(ctx, x3614, x1, 66);
    let x3616: BytePoly_32 = bigint_nondet_rem!(ctx, x3614, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3615, x1, 98), x3616, 98),
            x3614,
            98
        ),
        536459,
        4,
    )?;
    let x3617: BytePoly_64 = bigint_add!(
        bigint_sub!(x3608, bigint_mul!(x3616, x3602, 64), 64),
        x1,
        64
    );
    let x3618: BytePoly_64 = bigint_nondet_quot!(ctx, x3617, x1, 64);
    let x3619: BytePoly_32 = bigint_nondet_rem!(ctx, x3617, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3618, x1, 96), x3619, 96),
            x3617,
            96
        ),
        520203,
        4,
    )?;
    let x3620: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x3616, x3616, 64), x3602, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x3621: BytePoly_66 = bigint_nondet_quot!(ctx, x3620, x1, 66);
    let x3622: BytePoly_32 = bigint_nondet_rem!(ctx, x3620, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3621, x1, 98), x3622, 98),
            x3620,
            98
        ),
        536459,
        4,
    )?;
    let x3623: BytePoly_64 = bigint_mul!(x3616, x3622, 64);
    let x3624: BytePoly_66 = bigint_nondet_quot!(ctx, x3623, x1, 66);
    let x3625: BytePoly_32 = bigint_nondet_rem!(ctx, x3623, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3624, x1, 98), x3625, 98),
            x3623,
            98
        ),
        536459,
        4,
    )?;
    let x3626: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x3625, x3619, 32), 32), x1, 32);
    let x3627: BytePoly_32 = bigint_nondet_quot!(ctx, x3626, x1, 32);
    let x3628: BytePoly_32 = bigint_nondet_rem!(ctx, x3626, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3627, x1, 64), x3628, 64),
            x3626,
            64
        ),
        260103,
        4,
    )?;
    let x3629: BytePoly_32 = bigint_add!(bigint_sub!(x5, x3622, 32), x1, 32);
    let x3630: BytePoly_32 = bigint_nondet_inv!(ctx, x3629, x1, 32);
    let x3631: BytePoly_64 = bigint_mul!(x3629, x3630, 64);
    let x3632: BytePoly_66 = bigint_nondet_quot!(ctx, x3631, x1, 66);
    let x3633: BytePoly_32 = bigint_nondet_rem!(ctx, x3631, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3632, x1, 98), x3633, 98),
            x3631,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x3633, x0, 32), 34, 1)?;
    let x3634: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x3628, 32), x1, 32), x3630, 64);
    let x3635: BytePoly_66 = bigint_nondet_quot!(ctx, x3634, x1, 66);
    let x3636: BytePoly_32 = bigint_nondet_rem!(ctx, x3634, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3635, x1, 98), x3636, 98),
            x3634,
            98
        ),
        536459,
        4,
    )?;
    let x3637: BytePoly_64 = bigint_add!(
        bigint_sub!(x3628, bigint_mul!(x3636, x3622, 64), 64),
        x1,
        64
    );
    let x3638: BytePoly_64 = bigint_nondet_quot!(ctx, x3637, x1, 64);
    let x3639: BytePoly_32 = bigint_nondet_rem!(ctx, x3637, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3638, x1, 96), x3639, 96),
            x3637,
            96
        ),
        520203,
        4,
    )?;
    let x3640: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x3636, x3636, 64), x3622, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x3641: BytePoly_66 = bigint_nondet_quot!(ctx, x3640, x1, 66);
    let x3642: BytePoly_32 = bigint_nondet_rem!(ctx, x3640, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3641, x1, 98), x3642, 98),
            x3640,
            98
        ),
        536459,
        4,
    )?;
    let x3643: BytePoly_64 = bigint_mul!(x3636, x3642, 64);
    let x3644: BytePoly_66 = bigint_nondet_quot!(ctx, x3643, x1, 66);
    let x3645: BytePoly_32 = bigint_nondet_rem!(ctx, x3643, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3644, x1, 98), x3645, 98),
            x3643,
            98
        ),
        536459,
        4,
    )?;
    let x3646: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x3645, x3639, 32), 32), x1, 32);
    let x3647: BytePoly_32 = bigint_nondet_quot!(ctx, x3646, x1, 32);
    let x3648: BytePoly_32 = bigint_nondet_rem!(ctx, x3646, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3647, x1, 64), x3648, 64),
            x3646,
            64
        ),
        260103,
        4,
    )?;
    let x3649: BytePoly_32 = bigint_add!(bigint_sub!(x5, x3642, 32), x1, 32);
    let x3650: BytePoly_32 = bigint_nondet_inv!(ctx, x3649, x1, 32);
    let x3651: BytePoly_64 = bigint_mul!(x3649, x3650, 64);
    let x3652: BytePoly_66 = bigint_nondet_quot!(ctx, x3651, x1, 66);
    let x3653: BytePoly_32 = bigint_nondet_rem!(ctx, x3651, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3652, x1, 98), x3653, 98),
            x3651,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x3653, x0, 32), 34, 1)?;
    let x3654: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x3648, 32), x1, 32), x3650, 64);
    let x3655: BytePoly_66 = bigint_nondet_quot!(ctx, x3654, x1, 66);
    let x3656: BytePoly_32 = bigint_nondet_rem!(ctx, x3654, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3655, x1, 98), x3656, 98),
            x3654,
            98
        ),
        536459,
        4,
    )?;
    let x3657: BytePoly_64 = bigint_add!(
        bigint_sub!(x3648, bigint_mul!(x3656, x3642, 64), 64),
        x1,
        64
    );
    let x3658: BytePoly_64 = bigint_nondet_quot!(ctx, x3657, x1, 64);
    let x3659: BytePoly_32 = bigint_nondet_rem!(ctx, x3657, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3658, x1, 96), x3659, 96),
            x3657,
            96
        ),
        520203,
        4,
    )?;
    let x3660: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x3656, x3656, 64), x3642, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x3661: BytePoly_66 = bigint_nondet_quot!(ctx, x3660, x1, 66);
    let x3662: BytePoly_32 = bigint_nondet_rem!(ctx, x3660, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3661, x1, 98), x3662, 98),
            x3660,
            98
        ),
        536459,
        4,
    )?;
    let x3663: BytePoly_64 = bigint_mul!(x3656, x3662, 64);
    let x3664: BytePoly_66 = bigint_nondet_quot!(ctx, x3663, x1, 66);
    let x3665: BytePoly_32 = bigint_nondet_rem!(ctx, x3663, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3664, x1, 98), x3665, 98),
            x3663,
            98
        ),
        536459,
        4,
    )?;
    let x3666: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x3665, x3659, 32), 32), x1, 32);
    let x3667: BytePoly_32 = bigint_nondet_quot!(ctx, x3666, x1, 32);
    let x3668: BytePoly_32 = bigint_nondet_rem!(ctx, x3666, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3667, x1, 64), x3668, 64),
            x3666,
            64
        ),
        260103,
        4,
    )?;
    let x3669: BytePoly_32 = bigint_add!(bigint_sub!(x5, x3662, 32), x1, 32);
    let x3670: BytePoly_32 = bigint_nondet_inv!(ctx, x3669, x1, 32);
    let x3671: BytePoly_64 = bigint_mul!(x3669, x3670, 64);
    let x3672: BytePoly_66 = bigint_nondet_quot!(ctx, x3671, x1, 66);
    let x3673: BytePoly_32 = bigint_nondet_rem!(ctx, x3671, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3672, x1, 98), x3673, 98),
            x3671,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x3673, x0, 32), 34, 1)?;
    let x3674: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x3668, 32), x1, 32), x3670, 64);
    let x3675: BytePoly_66 = bigint_nondet_quot!(ctx, x3674, x1, 66);
    let x3676: BytePoly_32 = bigint_nondet_rem!(ctx, x3674, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3675, x1, 98), x3676, 98),
            x3674,
            98
        ),
        536459,
        4,
    )?;
    let x3677: BytePoly_64 = bigint_add!(
        bigint_sub!(x3668, bigint_mul!(x3676, x3662, 64), 64),
        x1,
        64
    );
    let x3678: BytePoly_64 = bigint_nondet_quot!(ctx, x3677, x1, 64);
    let x3679: BytePoly_32 = bigint_nondet_rem!(ctx, x3677, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3678, x1, 96), x3679, 96),
            x3677,
            96
        ),
        520203,
        4,
    )?;
    let x3680: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x3676, x3676, 64), x3662, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x3681: BytePoly_66 = bigint_nondet_quot!(ctx, x3680, x1, 66);
    let x3682: BytePoly_32 = bigint_nondet_rem!(ctx, x3680, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3681, x1, 98), x3682, 98),
            x3680,
            98
        ),
        536459,
        4,
    )?;
    let x3683: BytePoly_64 = bigint_mul!(x3676, x3682, 64);
    let x3684: BytePoly_66 = bigint_nondet_quot!(ctx, x3683, x1, 66);
    let x3685: BytePoly_32 = bigint_nondet_rem!(ctx, x3683, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3684, x1, 98), x3685, 98),
            x3683,
            98
        ),
        536459,
        4,
    )?;
    let x3686: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x3685, x3679, 32), 32), x1, 32);
    let x3687: BytePoly_32 = bigint_nondet_quot!(ctx, x3686, x1, 32);
    let x3688: BytePoly_32 = bigint_nondet_rem!(ctx, x3686, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3687, x1, 64), x3688, 64),
            x3686,
            64
        ),
        260103,
        4,
    )?;
    let x3689: BytePoly_32 = bigint_add!(bigint_sub!(x5, x3682, 32), x1, 32);
    let x3690: BytePoly_32 = bigint_nondet_inv!(ctx, x3689, x1, 32);
    let x3691: BytePoly_64 = bigint_mul!(x3689, x3690, 64);
    let x3692: BytePoly_66 = bigint_nondet_quot!(ctx, x3691, x1, 66);
    let x3693: BytePoly_32 = bigint_nondet_rem!(ctx, x3691, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3692, x1, 98), x3693, 98),
            x3691,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x3693, x0, 32), 34, 1)?;
    let x3694: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x3688, 32), x1, 32), x3690, 64);
    let x3695: BytePoly_66 = bigint_nondet_quot!(ctx, x3694, x1, 66);
    let x3696: BytePoly_32 = bigint_nondet_rem!(ctx, x3694, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3695, x1, 98), x3696, 98),
            x3694,
            98
        ),
        536459,
        4,
    )?;
    let x3697: BytePoly_64 = bigint_add!(
        bigint_sub!(x3688, bigint_mul!(x3696, x3682, 64), 64),
        x1,
        64
    );
    let x3698: BytePoly_64 = bigint_nondet_quot!(ctx, x3697, x1, 64);
    let x3699: BytePoly_32 = bigint_nondet_rem!(ctx, x3697, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3698, x1, 96), x3699, 96),
            x3697,
            96
        ),
        520203,
        4,
    )?;
    let x3700: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x3696, x3696, 64), x3682, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x3701: BytePoly_66 = bigint_nondet_quot!(ctx, x3700, x1, 66);
    let x3702: BytePoly_32 = bigint_nondet_rem!(ctx, x3700, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3701, x1, 98), x3702, 98),
            x3700,
            98
        ),
        536459,
        4,
    )?;
    let x3703: BytePoly_64 = bigint_mul!(x3696, x3702, 64);
    let x3704: BytePoly_66 = bigint_nondet_quot!(ctx, x3703, x1, 66);
    let x3705: BytePoly_32 = bigint_nondet_rem!(ctx, x3703, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3704, x1, 98), x3705, 98),
            x3703,
            98
        ),
        536459,
        4,
    )?;
    let x3706: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x3705, x3699, 32), 32), x1, 32);
    let x3707: BytePoly_32 = bigint_nondet_quot!(ctx, x3706, x1, 32);
    let x3708: BytePoly_32 = bigint_nondet_rem!(ctx, x3706, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3707, x1, 64), x3708, 64),
            x3706,
            64
        ),
        260103,
        4,
    )?;
    let x3709: BytePoly_32 = bigint_add!(bigint_sub!(x5, x3702, 32), x1, 32);
    let x3710: BytePoly_32 = bigint_nondet_inv!(ctx, x3709, x1, 32);
    let x3711: BytePoly_64 = bigint_mul!(x3709, x3710, 64);
    let x3712: BytePoly_66 = bigint_nondet_quot!(ctx, x3711, x1, 66);
    let x3713: BytePoly_32 = bigint_nondet_rem!(ctx, x3711, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3712, x1, 98), x3713, 98),
            x3711,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x3713, x0, 32), 34, 1)?;
    let x3714: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x3708, 32), x1, 32), x3710, 64);
    let x3715: BytePoly_66 = bigint_nondet_quot!(ctx, x3714, x1, 66);
    let x3716: BytePoly_32 = bigint_nondet_rem!(ctx, x3714, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3715, x1, 98), x3716, 98),
            x3714,
            98
        ),
        536459,
        4,
    )?;
    let x3717: BytePoly_64 = bigint_add!(
        bigint_sub!(x3708, bigint_mul!(x3716, x3702, 64), 64),
        x1,
        64
    );
    let x3718: BytePoly_64 = bigint_nondet_quot!(ctx, x3717, x1, 64);
    let x3719: BytePoly_32 = bigint_nondet_rem!(ctx, x3717, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3718, x1, 96), x3719, 96),
            x3717,
            96
        ),
        520203,
        4,
    )?;
    let x3720: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x3716, x3716, 64), x3702, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x3721: BytePoly_66 = bigint_nondet_quot!(ctx, x3720, x1, 66);
    let x3722: BytePoly_32 = bigint_nondet_rem!(ctx, x3720, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3721, x1, 98), x3722, 98),
            x3720,
            98
        ),
        536459,
        4,
    )?;
    let x3723: BytePoly_64 = bigint_mul!(x3716, x3722, 64);
    let x3724: BytePoly_66 = bigint_nondet_quot!(ctx, x3723, x1, 66);
    let x3725: BytePoly_32 = bigint_nondet_rem!(ctx, x3723, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3724, x1, 98), x3725, 98),
            x3723,
            98
        ),
        536459,
        4,
    )?;
    let x3726: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x3725, x3719, 32), 32), x1, 32);
    let x3727: BytePoly_32 = bigint_nondet_quot!(ctx, x3726, x1, 32);
    let x3728: BytePoly_32 = bigint_nondet_rem!(ctx, x3726, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3727, x1, 64), x3728, 64),
            x3726,
            64
        ),
        260103,
        4,
    )?;
    let x3729: BytePoly_32 = bigint_add!(bigint_sub!(x5, x3722, 32), x1, 32);
    let x3730: BytePoly_32 = bigint_nondet_inv!(ctx, x3729, x1, 32);
    let x3731: BytePoly_64 = bigint_mul!(x3729, x3730, 64);
    let x3732: BytePoly_66 = bigint_nondet_quot!(ctx, x3731, x1, 66);
    let x3733: BytePoly_32 = bigint_nondet_rem!(ctx, x3731, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3732, x1, 98), x3733, 98),
            x3731,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x3733, x0, 32), 34, 1)?;
    let x3734: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x3728, 32), x1, 32), x3730, 64);
    let x3735: BytePoly_66 = bigint_nondet_quot!(ctx, x3734, x1, 66);
    let x3736: BytePoly_32 = bigint_nondet_rem!(ctx, x3734, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3735, x1, 98), x3736, 98),
            x3734,
            98
        ),
        536459,
        4,
    )?;
    let x3737: BytePoly_64 = bigint_add!(
        bigint_sub!(x3728, bigint_mul!(x3736, x3722, 64), 64),
        x1,
        64
    );
    let x3738: BytePoly_64 = bigint_nondet_quot!(ctx, x3737, x1, 64);
    let x3739: BytePoly_32 = bigint_nondet_rem!(ctx, x3737, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3738, x1, 96), x3739, 96),
            x3737,
            96
        ),
        520203,
        4,
    )?;
    let x3740: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x3736, x3736, 64), x3722, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x3741: BytePoly_66 = bigint_nondet_quot!(ctx, x3740, x1, 66);
    let x3742: BytePoly_32 = bigint_nondet_rem!(ctx, x3740, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3741, x1, 98), x3742, 98),
            x3740,
            98
        ),
        536459,
        4,
    )?;
    let x3743: BytePoly_64 = bigint_mul!(x3736, x3742, 64);
    let x3744: BytePoly_66 = bigint_nondet_quot!(ctx, x3743, x1, 66);
    let x3745: BytePoly_32 = bigint_nondet_rem!(ctx, x3743, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3744, x1, 98), x3745, 98),
            x3743,
            98
        ),
        536459,
        4,
    )?;
    let x3746: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x3745, x3739, 32), 32), x1, 32);
    let x3747: BytePoly_32 = bigint_nondet_quot!(ctx, x3746, x1, 32);
    let x3748: BytePoly_32 = bigint_nondet_rem!(ctx, x3746, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3747, x1, 64), x3748, 64),
            x3746,
            64
        ),
        260103,
        4,
    )?;
    let x3749: BytePoly_32 = bigint_add!(bigint_sub!(x5, x3742, 32), x1, 32);
    let x3750: BytePoly_32 = bigint_nondet_inv!(ctx, x3749, x1, 32);
    let x3751: BytePoly_64 = bigint_mul!(x3749, x3750, 64);
    let x3752: BytePoly_66 = bigint_nondet_quot!(ctx, x3751, x1, 66);
    let x3753: BytePoly_32 = bigint_nondet_rem!(ctx, x3751, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3752, x1, 98), x3753, 98),
            x3751,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x3753, x0, 32), 34, 1)?;
    let x3754: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x3748, 32), x1, 32), x3750, 64);
    let x3755: BytePoly_66 = bigint_nondet_quot!(ctx, x3754, x1, 66);
    let x3756: BytePoly_32 = bigint_nondet_rem!(ctx, x3754, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3755, x1, 98), x3756, 98),
            x3754,
            98
        ),
        536459,
        4,
    )?;
    let x3757: BytePoly_64 = bigint_add!(
        bigint_sub!(x3748, bigint_mul!(x3756, x3742, 64), 64),
        x1,
        64
    );
    let x3758: BytePoly_64 = bigint_nondet_quot!(ctx, x3757, x1, 64);
    let x3759: BytePoly_32 = bigint_nondet_rem!(ctx, x3757, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3758, x1, 96), x3759, 96),
            x3757,
            96
        ),
        520203,
        4,
    )?;
    let x3760: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x3756, x3756, 64), x3742, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x3761: BytePoly_66 = bigint_nondet_quot!(ctx, x3760, x1, 66);
    let x3762: BytePoly_32 = bigint_nondet_rem!(ctx, x3760, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3761, x1, 98), x3762, 98),
            x3760,
            98
        ),
        536459,
        4,
    )?;
    let x3763: BytePoly_64 = bigint_mul!(x3756, x3762, 64);
    let x3764: BytePoly_66 = bigint_nondet_quot!(ctx, x3763, x1, 66);
    let x3765: BytePoly_32 = bigint_nondet_rem!(ctx, x3763, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3764, x1, 98), x3765, 98),
            x3763,
            98
        ),
        536459,
        4,
    )?;
    let x3766: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x3765, x3759, 32), 32), x1, 32);
    let x3767: BytePoly_32 = bigint_nondet_quot!(ctx, x3766, x1, 32);
    let x3768: BytePoly_32 = bigint_nondet_rem!(ctx, x3766, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3767, x1, 64), x3768, 64),
            x3766,
            64
        ),
        260103,
        4,
    )?;
    let x3769: BytePoly_32 = bigint_add!(bigint_sub!(x5, x3762, 32), x1, 32);
    let x3770: BytePoly_32 = bigint_nondet_inv!(ctx, x3769, x1, 32);
    let x3771: BytePoly_64 = bigint_mul!(x3769, x3770, 64);
    let x3772: BytePoly_66 = bigint_nondet_quot!(ctx, x3771, x1, 66);
    let x3773: BytePoly_32 = bigint_nondet_rem!(ctx, x3771, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3772, x1, 98), x3773, 98),
            x3771,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x3773, x0, 32), 34, 1)?;
    let x3774: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x3768, 32), x1, 32), x3770, 64);
    let x3775: BytePoly_66 = bigint_nondet_quot!(ctx, x3774, x1, 66);
    let x3776: BytePoly_32 = bigint_nondet_rem!(ctx, x3774, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3775, x1, 98), x3776, 98),
            x3774,
            98
        ),
        536459,
        4,
    )?;
    let x3777: BytePoly_64 = bigint_add!(
        bigint_sub!(x3768, bigint_mul!(x3776, x3762, 64), 64),
        x1,
        64
    );
    let x3778: BytePoly_64 = bigint_nondet_quot!(ctx, x3777, x1, 64);
    let x3779: BytePoly_32 = bigint_nondet_rem!(ctx, x3777, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3778, x1, 96), x3779, 96),
            x3777,
            96
        ),
        520203,
        4,
    )?;
    let x3780: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x3776, x3776, 64), x3762, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x3781: BytePoly_66 = bigint_nondet_quot!(ctx, x3780, x1, 66);
    let x3782: BytePoly_32 = bigint_nondet_rem!(ctx, x3780, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3781, x1, 98), x3782, 98),
            x3780,
            98
        ),
        536459,
        4,
    )?;
    let x3783: BytePoly_64 = bigint_mul!(x3776, x3782, 64);
    let x3784: BytePoly_66 = bigint_nondet_quot!(ctx, x3783, x1, 66);
    let x3785: BytePoly_32 = bigint_nondet_rem!(ctx, x3783, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3784, x1, 98), x3785, 98),
            x3783,
            98
        ),
        536459,
        4,
    )?;
    let x3786: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x3785, x3779, 32), 32), x1, 32);
    let x3787: BytePoly_32 = bigint_nondet_quot!(ctx, x3786, x1, 32);
    let x3788: BytePoly_32 = bigint_nondet_rem!(ctx, x3786, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3787, x1, 64), x3788, 64),
            x3786,
            64
        ),
        260103,
        4,
    )?;
    let x3789: BytePoly_32 = bigint_add!(bigint_sub!(x5, x3782, 32), x1, 32);
    let x3790: BytePoly_32 = bigint_nondet_inv!(ctx, x3789, x1, 32);
    let x3791: BytePoly_64 = bigint_mul!(x3789, x3790, 64);
    let x3792: BytePoly_66 = bigint_nondet_quot!(ctx, x3791, x1, 66);
    let x3793: BytePoly_32 = bigint_nondet_rem!(ctx, x3791, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3792, x1, 98), x3793, 98),
            x3791,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x3793, x0, 32), 34, 1)?;
    let x3794: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x3788, 32), x1, 32), x3790, 64);
    let x3795: BytePoly_66 = bigint_nondet_quot!(ctx, x3794, x1, 66);
    let x3796: BytePoly_32 = bigint_nondet_rem!(ctx, x3794, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3795, x1, 98), x3796, 98),
            x3794,
            98
        ),
        536459,
        4,
    )?;
    let x3797: BytePoly_64 = bigint_add!(
        bigint_sub!(x3788, bigint_mul!(x3796, x3782, 64), 64),
        x1,
        64
    );
    let x3798: BytePoly_64 = bigint_nondet_quot!(ctx, x3797, x1, 64);
    let x3799: BytePoly_32 = bigint_nondet_rem!(ctx, x3797, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3798, x1, 96), x3799, 96),
            x3797,
            96
        ),
        520203,
        4,
    )?;
    let x3800: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x3796, x3796, 64), x3782, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x3801: BytePoly_66 = bigint_nondet_quot!(ctx, x3800, x1, 66);
    let x3802: BytePoly_32 = bigint_nondet_rem!(ctx, x3800, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3801, x1, 98), x3802, 98),
            x3800,
            98
        ),
        536459,
        4,
    )?;
    let x3803: BytePoly_64 = bigint_mul!(x3796, x3802, 64);
    let x3804: BytePoly_66 = bigint_nondet_quot!(ctx, x3803, x1, 66);
    let x3805: BytePoly_32 = bigint_nondet_rem!(ctx, x3803, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3804, x1, 98), x3805, 98),
            x3803,
            98
        ),
        536459,
        4,
    )?;
    let x3806: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x3805, x3799, 32), 32), x1, 32);
    let x3807: BytePoly_32 = bigint_nondet_quot!(ctx, x3806, x1, 32);
    let x3808: BytePoly_32 = bigint_nondet_rem!(ctx, x3806, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3807, x1, 64), x3808, 64),
            x3806,
            64
        ),
        260103,
        4,
    )?;
    let x3809: BytePoly_32 = bigint_add!(bigint_sub!(x5, x3802, 32), x1, 32);
    let x3810: BytePoly_32 = bigint_nondet_inv!(ctx, x3809, x1, 32);
    let x3811: BytePoly_64 = bigint_mul!(x3809, x3810, 64);
    let x3812: BytePoly_66 = bigint_nondet_quot!(ctx, x3811, x1, 66);
    let x3813: BytePoly_32 = bigint_nondet_rem!(ctx, x3811, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3812, x1, 98), x3813, 98),
            x3811,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x3813, x0, 32), 34, 1)?;
    let x3814: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x3808, 32), x1, 32), x3810, 64);
    let x3815: BytePoly_66 = bigint_nondet_quot!(ctx, x3814, x1, 66);
    let x3816: BytePoly_32 = bigint_nondet_rem!(ctx, x3814, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3815, x1, 98), x3816, 98),
            x3814,
            98
        ),
        536459,
        4,
    )?;
    let x3817: BytePoly_64 = bigint_add!(
        bigint_sub!(x3808, bigint_mul!(x3816, x3802, 64), 64),
        x1,
        64
    );
    let x3818: BytePoly_64 = bigint_nondet_quot!(ctx, x3817, x1, 64);
    let x3819: BytePoly_32 = bigint_nondet_rem!(ctx, x3817, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3818, x1, 96), x3819, 96),
            x3817,
            96
        ),
        520203,
        4,
    )?;
    let x3820: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x3816, x3816, 64), x3802, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x3821: BytePoly_66 = bigint_nondet_quot!(ctx, x3820, x1, 66);
    let x3822: BytePoly_32 = bigint_nondet_rem!(ctx, x3820, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3821, x1, 98), x3822, 98),
            x3820,
            98
        ),
        536459,
        4,
    )?;
    let x3823: BytePoly_64 = bigint_mul!(x3816, x3822, 64);
    let x3824: BytePoly_66 = bigint_nondet_quot!(ctx, x3823, x1, 66);
    let x3825: BytePoly_32 = bigint_nondet_rem!(ctx, x3823, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3824, x1, 98), x3825, 98),
            x3823,
            98
        ),
        536459,
        4,
    )?;
    let x3826: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x3825, x3819, 32), 32), x1, 32);
    let x3827: BytePoly_32 = bigint_nondet_quot!(ctx, x3826, x1, 32);
    let x3828: BytePoly_32 = bigint_nondet_rem!(ctx, x3826, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3827, x1, 64), x3828, 64),
            x3826,
            64
        ),
        260103,
        4,
    )?;
    let x3829: BytePoly_32 = bigint_add!(bigint_sub!(x5, x3822, 32), x1, 32);
    let x3830: BytePoly_32 = bigint_nondet_inv!(ctx, x3829, x1, 32);
    let x3831: BytePoly_64 = bigint_mul!(x3829, x3830, 64);
    let x3832: BytePoly_66 = bigint_nondet_quot!(ctx, x3831, x1, 66);
    let x3833: BytePoly_32 = bigint_nondet_rem!(ctx, x3831, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3832, x1, 98), x3833, 98),
            x3831,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x3833, x0, 32), 34, 1)?;
    let x3834: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x3828, 32), x1, 32), x3830, 64);
    let x3835: BytePoly_66 = bigint_nondet_quot!(ctx, x3834, x1, 66);
    let x3836: BytePoly_32 = bigint_nondet_rem!(ctx, x3834, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3835, x1, 98), x3836, 98),
            x3834,
            98
        ),
        536459,
        4,
    )?;
    let x3837: BytePoly_64 = bigint_add!(
        bigint_sub!(x3828, bigint_mul!(x3836, x3822, 64), 64),
        x1,
        64
    );
    let x3838: BytePoly_64 = bigint_nondet_quot!(ctx, x3837, x1, 64);
    let x3839: BytePoly_32 = bigint_nondet_rem!(ctx, x3837, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3838, x1, 96), x3839, 96),
            x3837,
            96
        ),
        520203,
        4,
    )?;
    let x3840: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x3836, x3836, 64), x3822, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x3841: BytePoly_66 = bigint_nondet_quot!(ctx, x3840, x1, 66);
    let x3842: BytePoly_32 = bigint_nondet_rem!(ctx, x3840, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3841, x1, 98), x3842, 98),
            x3840,
            98
        ),
        536459,
        4,
    )?;
    let x3843: BytePoly_64 = bigint_mul!(x3836, x3842, 64);
    let x3844: BytePoly_66 = bigint_nondet_quot!(ctx, x3843, x1, 66);
    let x3845: BytePoly_32 = bigint_nondet_rem!(ctx, x3843, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3844, x1, 98), x3845, 98),
            x3843,
            98
        ),
        536459,
        4,
    )?;
    let x3846: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x3845, x3839, 32), 32), x1, 32);
    let x3847: BytePoly_32 = bigint_nondet_quot!(ctx, x3846, x1, 32);
    let x3848: BytePoly_32 = bigint_nondet_rem!(ctx, x3846, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3847, x1, 64), x3848, 64),
            x3846,
            64
        ),
        260103,
        4,
    )?;
    let x3849: BytePoly_32 = bigint_add!(bigint_sub!(x5, x3842, 32), x1, 32);
    let x3850: BytePoly_32 = bigint_nondet_inv!(ctx, x3849, x1, 32);
    let x3851: BytePoly_64 = bigint_mul!(x3849, x3850, 64);
    let x3852: BytePoly_66 = bigint_nondet_quot!(ctx, x3851, x1, 66);
    let x3853: BytePoly_32 = bigint_nondet_rem!(ctx, x3851, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3852, x1, 98), x3853, 98),
            x3851,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x3853, x0, 32), 34, 1)?;
    let x3854: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x3848, 32), x1, 32), x3850, 64);
    let x3855: BytePoly_66 = bigint_nondet_quot!(ctx, x3854, x1, 66);
    let x3856: BytePoly_32 = bigint_nondet_rem!(ctx, x3854, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3855, x1, 98), x3856, 98),
            x3854,
            98
        ),
        536459,
        4,
    )?;
    let x3857: BytePoly_64 = bigint_add!(
        bigint_sub!(x3848, bigint_mul!(x3856, x3842, 64), 64),
        x1,
        64
    );
    let x3858: BytePoly_64 = bigint_nondet_quot!(ctx, x3857, x1, 64);
    let x3859: BytePoly_32 = bigint_nondet_rem!(ctx, x3857, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3858, x1, 96), x3859, 96),
            x3857,
            96
        ),
        520203,
        4,
    )?;
    let x3860: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x3856, x3856, 64), x3842, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x3861: BytePoly_66 = bigint_nondet_quot!(ctx, x3860, x1, 66);
    let x3862: BytePoly_32 = bigint_nondet_rem!(ctx, x3860, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3861, x1, 98), x3862, 98),
            x3860,
            98
        ),
        536459,
        4,
    )?;
    let x3863: BytePoly_64 = bigint_mul!(x3856, x3862, 64);
    let x3864: BytePoly_66 = bigint_nondet_quot!(ctx, x3863, x1, 66);
    let x3865: BytePoly_32 = bigint_nondet_rem!(ctx, x3863, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3864, x1, 98), x3865, 98),
            x3863,
            98
        ),
        536459,
        4,
    )?;
    let x3866: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x3865, x3859, 32), 32), x1, 32);
    let x3867: BytePoly_32 = bigint_nondet_quot!(ctx, x3866, x1, 32);
    let x3868: BytePoly_32 = bigint_nondet_rem!(ctx, x3866, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3867, x1, 64), x3868, 64),
            x3866,
            64
        ),
        260103,
        4,
    )?;
    let x3869: BytePoly_32 = bigint_add!(bigint_sub!(x5, x3862, 32), x1, 32);
    let x3870: BytePoly_32 = bigint_nondet_inv!(ctx, x3869, x1, 32);
    let x3871: BytePoly_64 = bigint_mul!(x3869, x3870, 64);
    let x3872: BytePoly_66 = bigint_nondet_quot!(ctx, x3871, x1, 66);
    let x3873: BytePoly_32 = bigint_nondet_rem!(ctx, x3871, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3872, x1, 98), x3873, 98),
            x3871,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x3873, x0, 32), 34, 1)?;
    let x3874: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x3868, 32), x1, 32), x3870, 64);
    let x3875: BytePoly_66 = bigint_nondet_quot!(ctx, x3874, x1, 66);
    let x3876: BytePoly_32 = bigint_nondet_rem!(ctx, x3874, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3875, x1, 98), x3876, 98),
            x3874,
            98
        ),
        536459,
        4,
    )?;
    let x3877: BytePoly_64 = bigint_add!(
        bigint_sub!(x3868, bigint_mul!(x3876, x3862, 64), 64),
        x1,
        64
    );
    let x3878: BytePoly_64 = bigint_nondet_quot!(ctx, x3877, x1, 64);
    let x3879: BytePoly_32 = bigint_nondet_rem!(ctx, x3877, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3878, x1, 96), x3879, 96),
            x3877,
            96
        ),
        520203,
        4,
    )?;
    let x3880: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x3876, x3876, 64), x3862, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x3881: BytePoly_66 = bigint_nondet_quot!(ctx, x3880, x1, 66);
    let x3882: BytePoly_32 = bigint_nondet_rem!(ctx, x3880, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3881, x1, 98), x3882, 98),
            x3880,
            98
        ),
        536459,
        4,
    )?;
    let x3883: BytePoly_64 = bigint_mul!(x3876, x3882, 64);
    let x3884: BytePoly_66 = bigint_nondet_quot!(ctx, x3883, x1, 66);
    let x3885: BytePoly_32 = bigint_nondet_rem!(ctx, x3883, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3884, x1, 98), x3885, 98),
            x3883,
            98
        ),
        536459,
        4,
    )?;
    let x3886: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x3885, x3879, 32), 32), x1, 32);
    let x3887: BytePoly_32 = bigint_nondet_quot!(ctx, x3886, x1, 32);
    let x3888: BytePoly_32 = bigint_nondet_rem!(ctx, x3886, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3887, x1, 64), x3888, 64),
            x3886,
            64
        ),
        260103,
        4,
    )?;
    let x3889: BytePoly_32 = bigint_add!(bigint_sub!(x5, x3882, 32), x1, 32);
    let x3890: BytePoly_32 = bigint_nondet_inv!(ctx, x3889, x1, 32);
    let x3891: BytePoly_64 = bigint_mul!(x3889, x3890, 64);
    let x3892: BytePoly_66 = bigint_nondet_quot!(ctx, x3891, x1, 66);
    let x3893: BytePoly_32 = bigint_nondet_rem!(ctx, x3891, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3892, x1, 98), x3893, 98),
            x3891,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x3893, x0, 32), 34, 1)?;
    let x3894: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x3888, 32), x1, 32), x3890, 64);
    let x3895: BytePoly_66 = bigint_nondet_quot!(ctx, x3894, x1, 66);
    let x3896: BytePoly_32 = bigint_nondet_rem!(ctx, x3894, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3895, x1, 98), x3896, 98),
            x3894,
            98
        ),
        536459,
        4,
    )?;
    let x3897: BytePoly_64 = bigint_add!(
        bigint_sub!(x3888, bigint_mul!(x3896, x3882, 64), 64),
        x1,
        64
    );
    let x3898: BytePoly_64 = bigint_nondet_quot!(ctx, x3897, x1, 64);
    let x3899: BytePoly_32 = bigint_nondet_rem!(ctx, x3897, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3898, x1, 96), x3899, 96),
            x3897,
            96
        ),
        520203,
        4,
    )?;
    let x3900: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x3896, x3896, 64), x3882, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x3901: BytePoly_66 = bigint_nondet_quot!(ctx, x3900, x1, 66);
    let x3902: BytePoly_32 = bigint_nondet_rem!(ctx, x3900, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3901, x1, 98), x3902, 98),
            x3900,
            98
        ),
        536459,
        4,
    )?;
    let x3903: BytePoly_64 = bigint_mul!(x3896, x3902, 64);
    let x3904: BytePoly_66 = bigint_nondet_quot!(ctx, x3903, x1, 66);
    let x3905: BytePoly_32 = bigint_nondet_rem!(ctx, x3903, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3904, x1, 98), x3905, 98),
            x3903,
            98
        ),
        536459,
        4,
    )?;
    let x3906: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x3905, x3899, 32), 32), x1, 32);
    let x3907: BytePoly_32 = bigint_nondet_quot!(ctx, x3906, x1, 32);
    let x3908: BytePoly_32 = bigint_nondet_rem!(ctx, x3906, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3907, x1, 64), x3908, 64),
            x3906,
            64
        ),
        260103,
        4,
    )?;
    let x3909: BytePoly_32 = bigint_add!(bigint_sub!(x5, x3902, 32), x1, 32);
    let x3910: BytePoly_32 = bigint_nondet_inv!(ctx, x3909, x1, 32);
    let x3911: BytePoly_64 = bigint_mul!(x3909, x3910, 64);
    let x3912: BytePoly_66 = bigint_nondet_quot!(ctx, x3911, x1, 66);
    let x3913: BytePoly_32 = bigint_nondet_rem!(ctx, x3911, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3912, x1, 98), x3913, 98),
            x3911,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x3913, x0, 32), 34, 1)?;
    let x3914: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x3908, 32), x1, 32), x3910, 64);
    let x3915: BytePoly_66 = bigint_nondet_quot!(ctx, x3914, x1, 66);
    let x3916: BytePoly_32 = bigint_nondet_rem!(ctx, x3914, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3915, x1, 98), x3916, 98),
            x3914,
            98
        ),
        536459,
        4,
    )?;
    let x3917: BytePoly_64 = bigint_add!(
        bigint_sub!(x3908, bigint_mul!(x3916, x3902, 64), 64),
        x1,
        64
    );
    let x3918: BytePoly_64 = bigint_nondet_quot!(ctx, x3917, x1, 64);
    let x3919: BytePoly_32 = bigint_nondet_rem!(ctx, x3917, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3918, x1, 96), x3919, 96),
            x3917,
            96
        ),
        520203,
        4,
    )?;
    let x3920: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x3916, x3916, 64), x3902, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x3921: BytePoly_66 = bigint_nondet_quot!(ctx, x3920, x1, 66);
    let x3922: BytePoly_32 = bigint_nondet_rem!(ctx, x3920, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3921, x1, 98), x3922, 98),
            x3920,
            98
        ),
        536459,
        4,
    )?;
    let x3923: BytePoly_64 = bigint_mul!(x3916, x3922, 64);
    let x3924: BytePoly_66 = bigint_nondet_quot!(ctx, x3923, x1, 66);
    let x3925: BytePoly_32 = bigint_nondet_rem!(ctx, x3923, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3924, x1, 98), x3925, 98),
            x3923,
            98
        ),
        536459,
        4,
    )?;
    let x3926: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x3925, x3919, 32), 32), x1, 32);
    let x3927: BytePoly_32 = bigint_nondet_quot!(ctx, x3926, x1, 32);
    let x3928: BytePoly_32 = bigint_nondet_rem!(ctx, x3926, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3927, x1, 64), x3928, 64),
            x3926,
            64
        ),
        260103,
        4,
    )?;
    let x3929: BytePoly_32 = bigint_add!(bigint_sub!(x5, x3922, 32), x1, 32);
    let x3930: BytePoly_32 = bigint_nondet_inv!(ctx, x3929, x1, 32);
    let x3931: BytePoly_64 = bigint_mul!(x3929, x3930, 64);
    let x3932: BytePoly_66 = bigint_nondet_quot!(ctx, x3931, x1, 66);
    let x3933: BytePoly_32 = bigint_nondet_rem!(ctx, x3931, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3932, x1, 98), x3933, 98),
            x3931,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x3933, x0, 32), 34, 1)?;
    let x3934: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x3928, 32), x1, 32), x3930, 64);
    let x3935: BytePoly_66 = bigint_nondet_quot!(ctx, x3934, x1, 66);
    let x3936: BytePoly_32 = bigint_nondet_rem!(ctx, x3934, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3935, x1, 98), x3936, 98),
            x3934,
            98
        ),
        536459,
        4,
    )?;
    let x3937: BytePoly_64 = bigint_add!(
        bigint_sub!(x3928, bigint_mul!(x3936, x3922, 64), 64),
        x1,
        64
    );
    let x3938: BytePoly_64 = bigint_nondet_quot!(ctx, x3937, x1, 64);
    let x3939: BytePoly_32 = bigint_nondet_rem!(ctx, x3937, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3938, x1, 96), x3939, 96),
            x3937,
            96
        ),
        520203,
        4,
    )?;
    let x3940: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x3936, x3936, 64), x3922, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x3941: BytePoly_66 = bigint_nondet_quot!(ctx, x3940, x1, 66);
    let x3942: BytePoly_32 = bigint_nondet_rem!(ctx, x3940, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3941, x1, 98), x3942, 98),
            x3940,
            98
        ),
        536459,
        4,
    )?;
    let x3943: BytePoly_64 = bigint_mul!(x3936, x3942, 64);
    let x3944: BytePoly_66 = bigint_nondet_quot!(ctx, x3943, x1, 66);
    let x3945: BytePoly_32 = bigint_nondet_rem!(ctx, x3943, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3944, x1, 98), x3945, 98),
            x3943,
            98
        ),
        536459,
        4,
    )?;
    let x3946: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x3945, x3939, 32), 32), x1, 32);
    let x3947: BytePoly_32 = bigint_nondet_quot!(ctx, x3946, x1, 32);
    let x3948: BytePoly_32 = bigint_nondet_rem!(ctx, x3946, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3947, x1, 64), x3948, 64),
            x3946,
            64
        ),
        260103,
        4,
    )?;
    let x3949: BytePoly_32 = bigint_add!(bigint_sub!(x5, x3942, 32), x1, 32);
    let x3950: BytePoly_32 = bigint_nondet_inv!(ctx, x3949, x1, 32);
    let x3951: BytePoly_64 = bigint_mul!(x3949, x3950, 64);
    let x3952: BytePoly_66 = bigint_nondet_quot!(ctx, x3951, x1, 66);
    let x3953: BytePoly_32 = bigint_nondet_rem!(ctx, x3951, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3952, x1, 98), x3953, 98),
            x3951,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x3953, x0, 32), 34, 1)?;
    let x3954: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x3948, 32), x1, 32), x3950, 64);
    let x3955: BytePoly_66 = bigint_nondet_quot!(ctx, x3954, x1, 66);
    let x3956: BytePoly_32 = bigint_nondet_rem!(ctx, x3954, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3955, x1, 98), x3956, 98),
            x3954,
            98
        ),
        536459,
        4,
    )?;
    let x3957: BytePoly_64 = bigint_add!(
        bigint_sub!(x3948, bigint_mul!(x3956, x3942, 64), 64),
        x1,
        64
    );
    let x3958: BytePoly_64 = bigint_nondet_quot!(ctx, x3957, x1, 64);
    let x3959: BytePoly_32 = bigint_nondet_rem!(ctx, x3957, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3958, x1, 96), x3959, 96),
            x3957,
            96
        ),
        520203,
        4,
    )?;
    let x3960: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x3956, x3956, 64), x3942, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x3961: BytePoly_66 = bigint_nondet_quot!(ctx, x3960, x1, 66);
    let x3962: BytePoly_32 = bigint_nondet_rem!(ctx, x3960, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3961, x1, 98), x3962, 98),
            x3960,
            98
        ),
        536459,
        4,
    )?;
    let x3963: BytePoly_64 = bigint_mul!(x3956, x3962, 64);
    let x3964: BytePoly_66 = bigint_nondet_quot!(ctx, x3963, x1, 66);
    let x3965: BytePoly_32 = bigint_nondet_rem!(ctx, x3963, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3964, x1, 98), x3965, 98),
            x3963,
            98
        ),
        536459,
        4,
    )?;
    let x3966: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x3965, x3959, 32), 32), x1, 32);
    let x3967: BytePoly_32 = bigint_nondet_quot!(ctx, x3966, x1, 32);
    let x3968: BytePoly_32 = bigint_nondet_rem!(ctx, x3966, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3967, x1, 64), x3968, 64),
            x3966,
            64
        ),
        260103,
        4,
    )?;
    let x3969: BytePoly_32 = bigint_add!(bigint_sub!(x5, x3962, 32), x1, 32);
    let x3970: BytePoly_32 = bigint_nondet_inv!(ctx, x3969, x1, 32);
    let x3971: BytePoly_64 = bigint_mul!(x3969, x3970, 64);
    let x3972: BytePoly_66 = bigint_nondet_quot!(ctx, x3971, x1, 66);
    let x3973: BytePoly_32 = bigint_nondet_rem!(ctx, x3971, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3972, x1, 98), x3973, 98),
            x3971,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x3973, x0, 32), 34, 1)?;
    let x3974: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x3968, 32), x1, 32), x3970, 64);
    let x3975: BytePoly_66 = bigint_nondet_quot!(ctx, x3974, x1, 66);
    let x3976: BytePoly_32 = bigint_nondet_rem!(ctx, x3974, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3975, x1, 98), x3976, 98),
            x3974,
            98
        ),
        536459,
        4,
    )?;
    let x3977: BytePoly_64 = bigint_add!(
        bigint_sub!(x3968, bigint_mul!(x3976, x3962, 64), 64),
        x1,
        64
    );
    let x3978: BytePoly_64 = bigint_nondet_quot!(ctx, x3977, x1, 64);
    let x3979: BytePoly_32 = bigint_nondet_rem!(ctx, x3977, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3978, x1, 96), x3979, 96),
            x3977,
            96
        ),
        520203,
        4,
    )?;
    let x3980: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x3976, x3976, 64), x3962, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x3981: BytePoly_66 = bigint_nondet_quot!(ctx, x3980, x1, 66);
    let x3982: BytePoly_32 = bigint_nondet_rem!(ctx, x3980, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3981, x1, 98), x3982, 98),
            x3980,
            98
        ),
        536459,
        4,
    )?;
    let x3983: BytePoly_64 = bigint_mul!(x3976, x3982, 64);
    let x3984: BytePoly_66 = bigint_nondet_quot!(ctx, x3983, x1, 66);
    let x3985: BytePoly_32 = bigint_nondet_rem!(ctx, x3983, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3984, x1, 98), x3985, 98),
            x3983,
            98
        ),
        536459,
        4,
    )?;
    let x3986: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x3985, x3979, 32), 32), x1, 32);
    let x3987: BytePoly_32 = bigint_nondet_quot!(ctx, x3986, x1, 32);
    let x3988: BytePoly_32 = bigint_nondet_rem!(ctx, x3986, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3987, x1, 64), x3988, 64),
            x3986,
            64
        ),
        260103,
        4,
    )?;
    let x3989: BytePoly_32 = bigint_add!(bigint_sub!(x5, x3982, 32), x1, 32);
    let x3990: BytePoly_32 = bigint_nondet_inv!(ctx, x3989, x1, 32);
    let x3991: BytePoly_64 = bigint_mul!(x3989, x3990, 64);
    let x3992: BytePoly_66 = bigint_nondet_quot!(ctx, x3991, x1, 66);
    let x3993: BytePoly_32 = bigint_nondet_rem!(ctx, x3991, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3992, x1, 98), x3993, 98),
            x3991,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x3993, x0, 32), 34, 1)?;
    let x3994: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x3988, 32), x1, 32), x3990, 64);
    let x3995: BytePoly_66 = bigint_nondet_quot!(ctx, x3994, x1, 66);
    let x3996: BytePoly_32 = bigint_nondet_rem!(ctx, x3994, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3995, x1, 98), x3996, 98),
            x3994,
            98
        ),
        536459,
        4,
    )?;
    let x3997: BytePoly_64 = bigint_add!(
        bigint_sub!(x3988, bigint_mul!(x3996, x3982, 64), 64),
        x1,
        64
    );
    let x3998: BytePoly_64 = bigint_nondet_quot!(ctx, x3997, x1, 64);
    let x3999: BytePoly_32 = bigint_nondet_rem!(ctx, x3997, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x3998, x1, 96), x3999, 96),
            x3997,
            96
        ),
        520203,
        4,
    )?;
    let x4000: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x3996, x3996, 64), x3982, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x4001: BytePoly_66 = bigint_nondet_quot!(ctx, x4000, x1, 66);
    let x4002: BytePoly_32 = bigint_nondet_rem!(ctx, x4000, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4001, x1, 98), x4002, 98),
            x4000,
            98
        ),
        536459,
        4,
    )?;
    let x4003: BytePoly_64 = bigint_mul!(x3996, x4002, 64);
    let x4004: BytePoly_66 = bigint_nondet_quot!(ctx, x4003, x1, 66);
    let x4005: BytePoly_32 = bigint_nondet_rem!(ctx, x4003, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4004, x1, 98), x4005, 98),
            x4003,
            98
        ),
        536459,
        4,
    )?;
    let x4006: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x4005, x3999, 32), 32), x1, 32);
    let x4007: BytePoly_32 = bigint_nondet_quot!(ctx, x4006, x1, 32);
    let x4008: BytePoly_32 = bigint_nondet_rem!(ctx, x4006, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4007, x1, 64), x4008, 64),
            x4006,
            64
        ),
        260103,
        4,
    )?;
    let x4009: BytePoly_32 = bigint_add!(bigint_sub!(x5, x4002, 32), x1, 32);
    let x4010: BytePoly_32 = bigint_nondet_inv!(ctx, x4009, x1, 32);
    let x4011: BytePoly_64 = bigint_mul!(x4009, x4010, 64);
    let x4012: BytePoly_66 = bigint_nondet_quot!(ctx, x4011, x1, 66);
    let x4013: BytePoly_32 = bigint_nondet_rem!(ctx, x4011, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4012, x1, 98), x4013, 98),
            x4011,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x4013, x0, 32), 34, 1)?;
    let x4014: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x4008, 32), x1, 32), x4010, 64);
    let x4015: BytePoly_66 = bigint_nondet_quot!(ctx, x4014, x1, 66);
    let x4016: BytePoly_32 = bigint_nondet_rem!(ctx, x4014, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4015, x1, 98), x4016, 98),
            x4014,
            98
        ),
        536459,
        4,
    )?;
    let x4017: BytePoly_64 = bigint_add!(
        bigint_sub!(x4008, bigint_mul!(x4016, x4002, 64), 64),
        x1,
        64
    );
    let x4018: BytePoly_64 = bigint_nondet_quot!(ctx, x4017, x1, 64);
    let x4019: BytePoly_32 = bigint_nondet_rem!(ctx, x4017, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4018, x1, 96), x4019, 96),
            x4017,
            96
        ),
        520203,
        4,
    )?;
    let x4020: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x4016, x4016, 64), x4002, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x4021: BytePoly_66 = bigint_nondet_quot!(ctx, x4020, x1, 66);
    let x4022: BytePoly_32 = bigint_nondet_rem!(ctx, x4020, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4021, x1, 98), x4022, 98),
            x4020,
            98
        ),
        536459,
        4,
    )?;
    let x4023: BytePoly_64 = bigint_mul!(x4016, x4022, 64);
    let x4024: BytePoly_66 = bigint_nondet_quot!(ctx, x4023, x1, 66);
    let x4025: BytePoly_32 = bigint_nondet_rem!(ctx, x4023, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4024, x1, 98), x4025, 98),
            x4023,
            98
        ),
        536459,
        4,
    )?;
    let x4026: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x4025, x4019, 32), 32), x1, 32);
    let x4027: BytePoly_32 = bigint_nondet_quot!(ctx, x4026, x1, 32);
    let x4028: BytePoly_32 = bigint_nondet_rem!(ctx, x4026, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4027, x1, 64), x4028, 64),
            x4026,
            64
        ),
        260103,
        4,
    )?;
    let x4029: BytePoly_32 = bigint_add!(bigint_sub!(x5, x4022, 32), x1, 32);
    let x4030: BytePoly_32 = bigint_nondet_inv!(ctx, x4029, x1, 32);
    let x4031: BytePoly_64 = bigint_mul!(x4029, x4030, 64);
    let x4032: BytePoly_66 = bigint_nondet_quot!(ctx, x4031, x1, 66);
    let x4033: BytePoly_32 = bigint_nondet_rem!(ctx, x4031, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4032, x1, 98), x4033, 98),
            x4031,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x4033, x0, 32), 34, 1)?;
    let x4034: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x4028, 32), x1, 32), x4030, 64);
    let x4035: BytePoly_66 = bigint_nondet_quot!(ctx, x4034, x1, 66);
    let x4036: BytePoly_32 = bigint_nondet_rem!(ctx, x4034, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4035, x1, 98), x4036, 98),
            x4034,
            98
        ),
        536459,
        4,
    )?;
    let x4037: BytePoly_64 = bigint_add!(
        bigint_sub!(x4028, bigint_mul!(x4036, x4022, 64), 64),
        x1,
        64
    );
    let x4038: BytePoly_64 = bigint_nondet_quot!(ctx, x4037, x1, 64);
    let x4039: BytePoly_32 = bigint_nondet_rem!(ctx, x4037, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4038, x1, 96), x4039, 96),
            x4037,
            96
        ),
        520203,
        4,
    )?;
    let x4040: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x4036, x4036, 64), x4022, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x4041: BytePoly_66 = bigint_nondet_quot!(ctx, x4040, x1, 66);
    let x4042: BytePoly_32 = bigint_nondet_rem!(ctx, x4040, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4041, x1, 98), x4042, 98),
            x4040,
            98
        ),
        536459,
        4,
    )?;
    let x4043: BytePoly_64 = bigint_mul!(x4036, x4042, 64);
    let x4044: BytePoly_66 = bigint_nondet_quot!(ctx, x4043, x1, 66);
    let x4045: BytePoly_32 = bigint_nondet_rem!(ctx, x4043, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4044, x1, 98), x4045, 98),
            x4043,
            98
        ),
        536459,
        4,
    )?;
    let x4046: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x4045, x4039, 32), 32), x1, 32);
    let x4047: BytePoly_32 = bigint_nondet_quot!(ctx, x4046, x1, 32);
    let x4048: BytePoly_32 = bigint_nondet_rem!(ctx, x4046, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4047, x1, 64), x4048, 64),
            x4046,
            64
        ),
        260103,
        4,
    )?;
    let x4049: BytePoly_32 = bigint_add!(bigint_sub!(x5, x4042, 32), x1, 32);
    let x4050: BytePoly_32 = bigint_nondet_inv!(ctx, x4049, x1, 32);
    let x4051: BytePoly_64 = bigint_mul!(x4049, x4050, 64);
    let x4052: BytePoly_66 = bigint_nondet_quot!(ctx, x4051, x1, 66);
    let x4053: BytePoly_32 = bigint_nondet_rem!(ctx, x4051, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4052, x1, 98), x4053, 98),
            x4051,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x4053, x0, 32), 34, 1)?;
    let x4054: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x4048, 32), x1, 32), x4050, 64);
    let x4055: BytePoly_66 = bigint_nondet_quot!(ctx, x4054, x1, 66);
    let x4056: BytePoly_32 = bigint_nondet_rem!(ctx, x4054, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4055, x1, 98), x4056, 98),
            x4054,
            98
        ),
        536459,
        4,
    )?;
    let x4057: BytePoly_64 = bigint_add!(
        bigint_sub!(x4048, bigint_mul!(x4056, x4042, 64), 64),
        x1,
        64
    );
    let x4058: BytePoly_64 = bigint_nondet_quot!(ctx, x4057, x1, 64);
    let x4059: BytePoly_32 = bigint_nondet_rem!(ctx, x4057, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4058, x1, 96), x4059, 96),
            x4057,
            96
        ),
        520203,
        4,
    )?;
    let x4060: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x4056, x4056, 64), x4042, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x4061: BytePoly_66 = bigint_nondet_quot!(ctx, x4060, x1, 66);
    let x4062: BytePoly_32 = bigint_nondet_rem!(ctx, x4060, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4061, x1, 98), x4062, 98),
            x4060,
            98
        ),
        536459,
        4,
    )?;
    let x4063: BytePoly_64 = bigint_mul!(x4056, x4062, 64);
    let x4064: BytePoly_66 = bigint_nondet_quot!(ctx, x4063, x1, 66);
    let x4065: BytePoly_32 = bigint_nondet_rem!(ctx, x4063, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4064, x1, 98), x4065, 98),
            x4063,
            98
        ),
        536459,
        4,
    )?;
    let x4066: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x4065, x4059, 32), 32), x1, 32);
    let x4067: BytePoly_32 = bigint_nondet_quot!(ctx, x4066, x1, 32);
    let x4068: BytePoly_32 = bigint_nondet_rem!(ctx, x4066, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4067, x1, 64), x4068, 64),
            x4066,
            64
        ),
        260103,
        4,
    )?;
    let x4069: BytePoly_32 = bigint_add!(bigint_sub!(x5, x4062, 32), x1, 32);
    let x4070: BytePoly_32 = bigint_nondet_inv!(ctx, x4069, x1, 32);
    let x4071: BytePoly_64 = bigint_mul!(x4069, x4070, 64);
    let x4072: BytePoly_66 = bigint_nondet_quot!(ctx, x4071, x1, 66);
    let x4073: BytePoly_32 = bigint_nondet_rem!(ctx, x4071, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4072, x1, 98), x4073, 98),
            x4071,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x4073, x0, 32), 34, 1)?;
    let x4074: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x4068, 32), x1, 32), x4070, 64);
    let x4075: BytePoly_66 = bigint_nondet_quot!(ctx, x4074, x1, 66);
    let x4076: BytePoly_32 = bigint_nondet_rem!(ctx, x4074, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4075, x1, 98), x4076, 98),
            x4074,
            98
        ),
        536459,
        4,
    )?;
    let x4077: BytePoly_64 = bigint_add!(
        bigint_sub!(x4068, bigint_mul!(x4076, x4062, 64), 64),
        x1,
        64
    );
    let x4078: BytePoly_64 = bigint_nondet_quot!(ctx, x4077, x1, 64);
    let x4079: BytePoly_32 = bigint_nondet_rem!(ctx, x4077, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4078, x1, 96), x4079, 96),
            x4077,
            96
        ),
        520203,
        4,
    )?;
    let x4080: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x4076, x4076, 64), x4062, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x4081: BytePoly_66 = bigint_nondet_quot!(ctx, x4080, x1, 66);
    let x4082: BytePoly_32 = bigint_nondet_rem!(ctx, x4080, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4081, x1, 98), x4082, 98),
            x4080,
            98
        ),
        536459,
        4,
    )?;
    let x4083: BytePoly_64 = bigint_mul!(x4076, x4082, 64);
    let x4084: BytePoly_66 = bigint_nondet_quot!(ctx, x4083, x1, 66);
    let x4085: BytePoly_32 = bigint_nondet_rem!(ctx, x4083, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4084, x1, 98), x4085, 98),
            x4083,
            98
        ),
        536459,
        4,
    )?;
    let x4086: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x4085, x4079, 32), 32), x1, 32);
    let x4087: BytePoly_32 = bigint_nondet_quot!(ctx, x4086, x1, 32);
    let x4088: BytePoly_32 = bigint_nondet_rem!(ctx, x4086, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4087, x1, 64), x4088, 64),
            x4086,
            64
        ),
        260103,
        4,
    )?;
    let x4089: BytePoly_32 = bigint_add!(bigint_sub!(x5, x4082, 32), x1, 32);
    let x4090: BytePoly_32 = bigint_nondet_inv!(ctx, x4089, x1, 32);
    let x4091: BytePoly_64 = bigint_mul!(x4089, x4090, 64);
    let x4092: BytePoly_66 = bigint_nondet_quot!(ctx, x4091, x1, 66);
    let x4093: BytePoly_32 = bigint_nondet_rem!(ctx, x4091, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4092, x1, 98), x4093, 98),
            x4091,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x4093, x0, 32), 34, 1)?;
    let x4094: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x4088, 32), x1, 32), x4090, 64);
    let x4095: BytePoly_66 = bigint_nondet_quot!(ctx, x4094, x1, 66);
    let x4096: BytePoly_32 = bigint_nondet_rem!(ctx, x4094, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4095, x1, 98), x4096, 98),
            x4094,
            98
        ),
        536459,
        4,
    )?;
    let x4097: BytePoly_64 = bigint_add!(
        bigint_sub!(x4088, bigint_mul!(x4096, x4082, 64), 64),
        x1,
        64
    );
    let x4098: BytePoly_64 = bigint_nondet_quot!(ctx, x4097, x1, 64);
    let x4099: BytePoly_32 = bigint_nondet_rem!(ctx, x4097, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4098, x1, 96), x4099, 96),
            x4097,
            96
        ),
        520203,
        4,
    )?;
    let x4100: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x4096, x4096, 64), x4082, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x4101: BytePoly_66 = bigint_nondet_quot!(ctx, x4100, x1, 66);
    let x4102: BytePoly_32 = bigint_nondet_rem!(ctx, x4100, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4101, x1, 98), x4102, 98),
            x4100,
            98
        ),
        536459,
        4,
    )?;
    let x4103: BytePoly_64 = bigint_mul!(x4096, x4102, 64);
    let x4104: BytePoly_66 = bigint_nondet_quot!(ctx, x4103, x1, 66);
    let x4105: BytePoly_32 = bigint_nondet_rem!(ctx, x4103, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4104, x1, 98), x4105, 98),
            x4103,
            98
        ),
        536459,
        4,
    )?;
    let x4106: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x4105, x4099, 32), 32), x1, 32);
    let x4107: BytePoly_32 = bigint_nondet_quot!(ctx, x4106, x1, 32);
    let x4108: BytePoly_32 = bigint_nondet_rem!(ctx, x4106, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4107, x1, 64), x4108, 64),
            x4106,
            64
        ),
        260103,
        4,
    )?;
    let x4109: BytePoly_32 = bigint_add!(bigint_sub!(x5, x4102, 32), x1, 32);
    let x4110: BytePoly_32 = bigint_nondet_inv!(ctx, x4109, x1, 32);
    let x4111: BytePoly_64 = bigint_mul!(x4109, x4110, 64);
    let x4112: BytePoly_66 = bigint_nondet_quot!(ctx, x4111, x1, 66);
    let x4113: BytePoly_32 = bigint_nondet_rem!(ctx, x4111, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4112, x1, 98), x4113, 98),
            x4111,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x4113, x0, 32), 34, 1)?;
    let x4114: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x4108, 32), x1, 32), x4110, 64);
    let x4115: BytePoly_66 = bigint_nondet_quot!(ctx, x4114, x1, 66);
    let x4116: BytePoly_32 = bigint_nondet_rem!(ctx, x4114, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4115, x1, 98), x4116, 98),
            x4114,
            98
        ),
        536459,
        4,
    )?;
    let x4117: BytePoly_64 = bigint_add!(
        bigint_sub!(x4108, bigint_mul!(x4116, x4102, 64), 64),
        x1,
        64
    );
    let x4118: BytePoly_64 = bigint_nondet_quot!(ctx, x4117, x1, 64);
    let x4119: BytePoly_32 = bigint_nondet_rem!(ctx, x4117, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4118, x1, 96), x4119, 96),
            x4117,
            96
        ),
        520203,
        4,
    )?;
    let x4120: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x4116, x4116, 64), x4102, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x4121: BytePoly_66 = bigint_nondet_quot!(ctx, x4120, x1, 66);
    let x4122: BytePoly_32 = bigint_nondet_rem!(ctx, x4120, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4121, x1, 98), x4122, 98),
            x4120,
            98
        ),
        536459,
        4,
    )?;
    let x4123: BytePoly_64 = bigint_mul!(x4116, x4122, 64);
    let x4124: BytePoly_66 = bigint_nondet_quot!(ctx, x4123, x1, 66);
    let x4125: BytePoly_32 = bigint_nondet_rem!(ctx, x4123, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4124, x1, 98), x4125, 98),
            x4123,
            98
        ),
        536459,
        4,
    )?;
    let x4126: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x4125, x4119, 32), 32), x1, 32);
    let x4127: BytePoly_32 = bigint_nondet_quot!(ctx, x4126, x1, 32);
    let x4128: BytePoly_32 = bigint_nondet_rem!(ctx, x4126, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4127, x1, 64), x4128, 64),
            x4126,
            64
        ),
        260103,
        4,
    )?;
    let x4129: BytePoly_32 = bigint_add!(bigint_sub!(x5, x4122, 32), x1, 32);
    let x4130: BytePoly_32 = bigint_nondet_inv!(ctx, x4129, x1, 32);
    let x4131: BytePoly_64 = bigint_mul!(x4129, x4130, 64);
    let x4132: BytePoly_66 = bigint_nondet_quot!(ctx, x4131, x1, 66);
    let x4133: BytePoly_32 = bigint_nondet_rem!(ctx, x4131, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4132, x1, 98), x4133, 98),
            x4131,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x4133, x0, 32), 34, 1)?;
    let x4134: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x4128, 32), x1, 32), x4130, 64);
    let x4135: BytePoly_66 = bigint_nondet_quot!(ctx, x4134, x1, 66);
    let x4136: BytePoly_32 = bigint_nondet_rem!(ctx, x4134, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4135, x1, 98), x4136, 98),
            x4134,
            98
        ),
        536459,
        4,
    )?;
    let x4137: BytePoly_64 = bigint_add!(
        bigint_sub!(x4128, bigint_mul!(x4136, x4122, 64), 64),
        x1,
        64
    );
    let x4138: BytePoly_64 = bigint_nondet_quot!(ctx, x4137, x1, 64);
    let x4139: BytePoly_32 = bigint_nondet_rem!(ctx, x4137, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4138, x1, 96), x4139, 96),
            x4137,
            96
        ),
        520203,
        4,
    )?;
    let x4140: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x4136, x4136, 64), x4122, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x4141: BytePoly_66 = bigint_nondet_quot!(ctx, x4140, x1, 66);
    let x4142: BytePoly_32 = bigint_nondet_rem!(ctx, x4140, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4141, x1, 98), x4142, 98),
            x4140,
            98
        ),
        536459,
        4,
    )?;
    let x4143: BytePoly_64 = bigint_mul!(x4136, x4142, 64);
    let x4144: BytePoly_66 = bigint_nondet_quot!(ctx, x4143, x1, 66);
    let x4145: BytePoly_32 = bigint_nondet_rem!(ctx, x4143, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4144, x1, 98), x4145, 98),
            x4143,
            98
        ),
        536459,
        4,
    )?;
    let x4146: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x4145, x4139, 32), 32), x1, 32);
    let x4147: BytePoly_32 = bigint_nondet_quot!(ctx, x4146, x1, 32);
    let x4148: BytePoly_32 = bigint_nondet_rem!(ctx, x4146, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4147, x1, 64), x4148, 64),
            x4146,
            64
        ),
        260103,
        4,
    )?;
    let x4149: BytePoly_32 = bigint_add!(bigint_sub!(x5, x4142, 32), x1, 32);
    let x4150: BytePoly_32 = bigint_nondet_inv!(ctx, x4149, x1, 32);
    let x4151: BytePoly_64 = bigint_mul!(x4149, x4150, 64);
    let x4152: BytePoly_66 = bigint_nondet_quot!(ctx, x4151, x1, 66);
    let x4153: BytePoly_32 = bigint_nondet_rem!(ctx, x4151, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4152, x1, 98), x4153, 98),
            x4151,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x4153, x0, 32), 34, 1)?;
    let x4154: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x4148, 32), x1, 32), x4150, 64);
    let x4155: BytePoly_66 = bigint_nondet_quot!(ctx, x4154, x1, 66);
    let x4156: BytePoly_32 = bigint_nondet_rem!(ctx, x4154, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4155, x1, 98), x4156, 98),
            x4154,
            98
        ),
        536459,
        4,
    )?;
    let x4157: BytePoly_64 = bigint_add!(
        bigint_sub!(x4148, bigint_mul!(x4156, x4142, 64), 64),
        x1,
        64
    );
    let x4158: BytePoly_64 = bigint_nondet_quot!(ctx, x4157, x1, 64);
    let x4159: BytePoly_32 = bigint_nondet_rem!(ctx, x4157, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4158, x1, 96), x4159, 96),
            x4157,
            96
        ),
        520203,
        4,
    )?;
    let x4160: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x4156, x4156, 64), x4142, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x4161: BytePoly_66 = bigint_nondet_quot!(ctx, x4160, x1, 66);
    let x4162: BytePoly_32 = bigint_nondet_rem!(ctx, x4160, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4161, x1, 98), x4162, 98),
            x4160,
            98
        ),
        536459,
        4,
    )?;
    let x4163: BytePoly_64 = bigint_mul!(x4156, x4162, 64);
    let x4164: BytePoly_66 = bigint_nondet_quot!(ctx, x4163, x1, 66);
    let x4165: BytePoly_32 = bigint_nondet_rem!(ctx, x4163, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4164, x1, 98), x4165, 98),
            x4163,
            98
        ),
        536459,
        4,
    )?;
    let x4166: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x4165, x4159, 32), 32), x1, 32);
    let x4167: BytePoly_32 = bigint_nondet_quot!(ctx, x4166, x1, 32);
    let x4168: BytePoly_32 = bigint_nondet_rem!(ctx, x4166, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4167, x1, 64), x4168, 64),
            x4166,
            64
        ),
        260103,
        4,
    )?;
    let x4169: BytePoly_32 = bigint_add!(bigint_sub!(x5, x4162, 32), x1, 32);
    let x4170: BytePoly_32 = bigint_nondet_inv!(ctx, x4169, x1, 32);
    let x4171: BytePoly_64 = bigint_mul!(x4169, x4170, 64);
    let x4172: BytePoly_66 = bigint_nondet_quot!(ctx, x4171, x1, 66);
    let x4173: BytePoly_32 = bigint_nondet_rem!(ctx, x4171, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4172, x1, 98), x4173, 98),
            x4171,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x4173, x0, 32), 34, 1)?;
    let x4174: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x4168, 32), x1, 32), x4170, 64);
    let x4175: BytePoly_66 = bigint_nondet_quot!(ctx, x4174, x1, 66);
    let x4176: BytePoly_32 = bigint_nondet_rem!(ctx, x4174, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4175, x1, 98), x4176, 98),
            x4174,
            98
        ),
        536459,
        4,
    )?;
    let x4177: BytePoly_64 = bigint_add!(
        bigint_sub!(x4168, bigint_mul!(x4176, x4162, 64), 64),
        x1,
        64
    );
    let x4178: BytePoly_64 = bigint_nondet_quot!(ctx, x4177, x1, 64);
    let x4179: BytePoly_32 = bigint_nondet_rem!(ctx, x4177, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4178, x1, 96), x4179, 96),
            x4177,
            96
        ),
        520203,
        4,
    )?;
    let x4180: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x4176, x4176, 64), x4162, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x4181: BytePoly_66 = bigint_nondet_quot!(ctx, x4180, x1, 66);
    let x4182: BytePoly_32 = bigint_nondet_rem!(ctx, x4180, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4181, x1, 98), x4182, 98),
            x4180,
            98
        ),
        536459,
        4,
    )?;
    let x4183: BytePoly_64 = bigint_mul!(x4176, x4182, 64);
    let x4184: BytePoly_66 = bigint_nondet_quot!(ctx, x4183, x1, 66);
    let x4185: BytePoly_32 = bigint_nondet_rem!(ctx, x4183, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4184, x1, 98), x4185, 98),
            x4183,
            98
        ),
        536459,
        4,
    )?;
    let x4186: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x4185, x4179, 32), 32), x1, 32);
    let x4187: BytePoly_32 = bigint_nondet_quot!(ctx, x4186, x1, 32);
    let x4188: BytePoly_32 = bigint_nondet_rem!(ctx, x4186, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4187, x1, 64), x4188, 64),
            x4186,
            64
        ),
        260103,
        4,
    )?;
    let x4189: BytePoly_32 = bigint_add!(bigint_sub!(x5, x4182, 32), x1, 32);
    let x4190: BytePoly_32 = bigint_nondet_inv!(ctx, x4189, x1, 32);
    let x4191: BytePoly_64 = bigint_mul!(x4189, x4190, 64);
    let x4192: BytePoly_66 = bigint_nondet_quot!(ctx, x4191, x1, 66);
    let x4193: BytePoly_32 = bigint_nondet_rem!(ctx, x4191, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4192, x1, 98), x4193, 98),
            x4191,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x4193, x0, 32), 34, 1)?;
    let x4194: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x4188, 32), x1, 32), x4190, 64);
    let x4195: BytePoly_66 = bigint_nondet_quot!(ctx, x4194, x1, 66);
    let x4196: BytePoly_32 = bigint_nondet_rem!(ctx, x4194, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4195, x1, 98), x4196, 98),
            x4194,
            98
        ),
        536459,
        4,
    )?;
    let x4197: BytePoly_64 = bigint_add!(
        bigint_sub!(x4188, bigint_mul!(x4196, x4182, 64), 64),
        x1,
        64
    );
    let x4198: BytePoly_64 = bigint_nondet_quot!(ctx, x4197, x1, 64);
    let x4199: BytePoly_32 = bigint_nondet_rem!(ctx, x4197, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4198, x1, 96), x4199, 96),
            x4197,
            96
        ),
        520203,
        4,
    )?;
    let x4200: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x4196, x4196, 64), x4182, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x4201: BytePoly_66 = bigint_nondet_quot!(ctx, x4200, x1, 66);
    let x4202: BytePoly_32 = bigint_nondet_rem!(ctx, x4200, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4201, x1, 98), x4202, 98),
            x4200,
            98
        ),
        536459,
        4,
    )?;
    let x4203: BytePoly_64 = bigint_mul!(x4196, x4202, 64);
    let x4204: BytePoly_66 = bigint_nondet_quot!(ctx, x4203, x1, 66);
    let x4205: BytePoly_32 = bigint_nondet_rem!(ctx, x4203, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4204, x1, 98), x4205, 98),
            x4203,
            98
        ),
        536459,
        4,
    )?;
    let x4206: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x4205, x4199, 32), 32), x1, 32);
    let x4207: BytePoly_32 = bigint_nondet_quot!(ctx, x4206, x1, 32);
    let x4208: BytePoly_32 = bigint_nondet_rem!(ctx, x4206, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4207, x1, 64), x4208, 64),
            x4206,
            64
        ),
        260103,
        4,
    )?;
    let x4209: BytePoly_32 = bigint_add!(bigint_sub!(x5, x4202, 32), x1, 32);
    let x4210: BytePoly_32 = bigint_nondet_inv!(ctx, x4209, x1, 32);
    let x4211: BytePoly_64 = bigint_mul!(x4209, x4210, 64);
    let x4212: BytePoly_66 = bigint_nondet_quot!(ctx, x4211, x1, 66);
    let x4213: BytePoly_32 = bigint_nondet_rem!(ctx, x4211, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4212, x1, 98), x4213, 98),
            x4211,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x4213, x0, 32), 34, 1)?;
    let x4214: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x4208, 32), x1, 32), x4210, 64);
    let x4215: BytePoly_66 = bigint_nondet_quot!(ctx, x4214, x1, 66);
    let x4216: BytePoly_32 = bigint_nondet_rem!(ctx, x4214, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4215, x1, 98), x4216, 98),
            x4214,
            98
        ),
        536459,
        4,
    )?;
    let x4217: BytePoly_64 = bigint_add!(
        bigint_sub!(x4208, bigint_mul!(x4216, x4202, 64), 64),
        x1,
        64
    );
    let x4218: BytePoly_64 = bigint_nondet_quot!(ctx, x4217, x1, 64);
    let x4219: BytePoly_32 = bigint_nondet_rem!(ctx, x4217, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4218, x1, 96), x4219, 96),
            x4217,
            96
        ),
        520203,
        4,
    )?;
    let x4220: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x4216, x4216, 64), x4202, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x4221: BytePoly_66 = bigint_nondet_quot!(ctx, x4220, x1, 66);
    let x4222: BytePoly_32 = bigint_nondet_rem!(ctx, x4220, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4221, x1, 98), x4222, 98),
            x4220,
            98
        ),
        536459,
        4,
    )?;
    let x4223: BytePoly_64 = bigint_mul!(x4216, x4222, 64);
    let x4224: BytePoly_66 = bigint_nondet_quot!(ctx, x4223, x1, 66);
    let x4225: BytePoly_32 = bigint_nondet_rem!(ctx, x4223, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4224, x1, 98), x4225, 98),
            x4223,
            98
        ),
        536459,
        4,
    )?;
    let x4226: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x4225, x4219, 32), 32), x1, 32);
    let x4227: BytePoly_32 = bigint_nondet_quot!(ctx, x4226, x1, 32);
    let x4228: BytePoly_32 = bigint_nondet_rem!(ctx, x4226, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4227, x1, 64), x4228, 64),
            x4226,
            64
        ),
        260103,
        4,
    )?;
    let x4229: BytePoly_32 = bigint_add!(bigint_sub!(x5, x4222, 32), x1, 32);
    let x4230: BytePoly_32 = bigint_nondet_inv!(ctx, x4229, x1, 32);
    let x4231: BytePoly_64 = bigint_mul!(x4229, x4230, 64);
    let x4232: BytePoly_66 = bigint_nondet_quot!(ctx, x4231, x1, 66);
    let x4233: BytePoly_32 = bigint_nondet_rem!(ctx, x4231, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4232, x1, 98), x4233, 98),
            x4231,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x4233, x0, 32), 34, 1)?;
    let x4234: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x4228, 32), x1, 32), x4230, 64);
    let x4235: BytePoly_66 = bigint_nondet_quot!(ctx, x4234, x1, 66);
    let x4236: BytePoly_32 = bigint_nondet_rem!(ctx, x4234, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4235, x1, 98), x4236, 98),
            x4234,
            98
        ),
        536459,
        4,
    )?;
    let x4237: BytePoly_64 = bigint_add!(
        bigint_sub!(x4228, bigint_mul!(x4236, x4222, 64), 64),
        x1,
        64
    );
    let x4238: BytePoly_64 = bigint_nondet_quot!(ctx, x4237, x1, 64);
    let x4239: BytePoly_32 = bigint_nondet_rem!(ctx, x4237, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4238, x1, 96), x4239, 96),
            x4237,
            96
        ),
        520203,
        4,
    )?;
    let x4240: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x4236, x4236, 64), x4222, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x4241: BytePoly_66 = bigint_nondet_quot!(ctx, x4240, x1, 66);
    let x4242: BytePoly_32 = bigint_nondet_rem!(ctx, x4240, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4241, x1, 98), x4242, 98),
            x4240,
            98
        ),
        536459,
        4,
    )?;
    let x4243: BytePoly_64 = bigint_mul!(x4236, x4242, 64);
    let x4244: BytePoly_66 = bigint_nondet_quot!(ctx, x4243, x1, 66);
    let x4245: BytePoly_32 = bigint_nondet_rem!(ctx, x4243, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4244, x1, 98), x4245, 98),
            x4243,
            98
        ),
        536459,
        4,
    )?;
    let x4246: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x4245, x4239, 32), 32), x1, 32);
    let x4247: BytePoly_32 = bigint_nondet_quot!(ctx, x4246, x1, 32);
    let x4248: BytePoly_32 = bigint_nondet_rem!(ctx, x4246, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4247, x1, 64), x4248, 64),
            x4246,
            64
        ),
        260103,
        4,
    )?;
    let x4249: BytePoly_32 = bigint_add!(bigint_sub!(x5, x4242, 32), x1, 32);
    let x4250: BytePoly_32 = bigint_nondet_inv!(ctx, x4249, x1, 32);
    let x4251: BytePoly_64 = bigint_mul!(x4249, x4250, 64);
    let x4252: BytePoly_66 = bigint_nondet_quot!(ctx, x4251, x1, 66);
    let x4253: BytePoly_32 = bigint_nondet_rem!(ctx, x4251, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4252, x1, 98), x4253, 98),
            x4251,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x4253, x0, 32), 34, 1)?;
    let x4254: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x4248, 32), x1, 32), x4250, 64);
    let x4255: BytePoly_66 = bigint_nondet_quot!(ctx, x4254, x1, 66);
    let x4256: BytePoly_32 = bigint_nondet_rem!(ctx, x4254, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4255, x1, 98), x4256, 98),
            x4254,
            98
        ),
        536459,
        4,
    )?;
    let x4257: BytePoly_64 = bigint_add!(
        bigint_sub!(x4248, bigint_mul!(x4256, x4242, 64), 64),
        x1,
        64
    );
    let x4258: BytePoly_64 = bigint_nondet_quot!(ctx, x4257, x1, 64);
    let x4259: BytePoly_32 = bigint_nondet_rem!(ctx, x4257, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4258, x1, 96), x4259, 96),
            x4257,
            96
        ),
        520203,
        4,
    )?;
    let x4260: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x4256, x4256, 64), x4242, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x4261: BytePoly_66 = bigint_nondet_quot!(ctx, x4260, x1, 66);
    let x4262: BytePoly_32 = bigint_nondet_rem!(ctx, x4260, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4261, x1, 98), x4262, 98),
            x4260,
            98
        ),
        536459,
        4,
    )?;
    let x4263: BytePoly_64 = bigint_mul!(x4256, x4262, 64);
    let x4264: BytePoly_66 = bigint_nondet_quot!(ctx, x4263, x1, 66);
    let x4265: BytePoly_32 = bigint_nondet_rem!(ctx, x4263, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4264, x1, 98), x4265, 98),
            x4263,
            98
        ),
        536459,
        4,
    )?;
    let x4266: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x4265, x4259, 32), 32), x1, 32);
    let x4267: BytePoly_32 = bigint_nondet_quot!(ctx, x4266, x1, 32);
    let x4268: BytePoly_32 = bigint_nondet_rem!(ctx, x4266, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4267, x1, 64), x4268, 64),
            x4266,
            64
        ),
        260103,
        4,
    )?;
    let x4269: BytePoly_32 = bigint_add!(bigint_sub!(x5, x4262, 32), x1, 32);
    let x4270: BytePoly_32 = bigint_nondet_inv!(ctx, x4269, x1, 32);
    let x4271: BytePoly_64 = bigint_mul!(x4269, x4270, 64);
    let x4272: BytePoly_66 = bigint_nondet_quot!(ctx, x4271, x1, 66);
    let x4273: BytePoly_32 = bigint_nondet_rem!(ctx, x4271, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4272, x1, 98), x4273, 98),
            x4271,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x4273, x0, 32), 34, 1)?;
    let x4274: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x4268, 32), x1, 32), x4270, 64);
    let x4275: BytePoly_66 = bigint_nondet_quot!(ctx, x4274, x1, 66);
    let x4276: BytePoly_32 = bigint_nondet_rem!(ctx, x4274, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4275, x1, 98), x4276, 98),
            x4274,
            98
        ),
        536459,
        4,
    )?;
    let x4277: BytePoly_64 = bigint_add!(
        bigint_sub!(x4268, bigint_mul!(x4276, x4262, 64), 64),
        x1,
        64
    );
    let x4278: BytePoly_64 = bigint_nondet_quot!(ctx, x4277, x1, 64);
    let x4279: BytePoly_32 = bigint_nondet_rem!(ctx, x4277, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4278, x1, 96), x4279, 96),
            x4277,
            96
        ),
        520203,
        4,
    )?;
    let x4280: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x4276, x4276, 64), x4262, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x4281: BytePoly_66 = bigint_nondet_quot!(ctx, x4280, x1, 66);
    let x4282: BytePoly_32 = bigint_nondet_rem!(ctx, x4280, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4281, x1, 98), x4282, 98),
            x4280,
            98
        ),
        536459,
        4,
    )?;
    let x4283: BytePoly_64 = bigint_mul!(x4276, x4282, 64);
    let x4284: BytePoly_66 = bigint_nondet_quot!(ctx, x4283, x1, 66);
    let x4285: BytePoly_32 = bigint_nondet_rem!(ctx, x4283, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4284, x1, 98), x4285, 98),
            x4283,
            98
        ),
        536459,
        4,
    )?;
    let x4286: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x4285, x4279, 32), 32), x1, 32);
    let x4287: BytePoly_32 = bigint_nondet_quot!(ctx, x4286, x1, 32);
    let x4288: BytePoly_32 = bigint_nondet_rem!(ctx, x4286, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4287, x1, 64), x4288, 64),
            x4286,
            64
        ),
        260103,
        4,
    )?;
    let x4289: BytePoly_32 = bigint_add!(bigint_sub!(x5, x4282, 32), x1, 32);
    let x4290: BytePoly_32 = bigint_nondet_inv!(ctx, x4289, x1, 32);
    let x4291: BytePoly_64 = bigint_mul!(x4289, x4290, 64);
    let x4292: BytePoly_66 = bigint_nondet_quot!(ctx, x4291, x1, 66);
    let x4293: BytePoly_32 = bigint_nondet_rem!(ctx, x4291, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4292, x1, 98), x4293, 98),
            x4291,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x4293, x0, 32), 34, 1)?;
    let x4294: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x4288, 32), x1, 32), x4290, 64);
    let x4295: BytePoly_66 = bigint_nondet_quot!(ctx, x4294, x1, 66);
    let x4296: BytePoly_32 = bigint_nondet_rem!(ctx, x4294, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4295, x1, 98), x4296, 98),
            x4294,
            98
        ),
        536459,
        4,
    )?;
    let x4297: BytePoly_64 = bigint_add!(
        bigint_sub!(x4288, bigint_mul!(x4296, x4282, 64), 64),
        x1,
        64
    );
    let x4298: BytePoly_64 = bigint_nondet_quot!(ctx, x4297, x1, 64);
    let x4299: BytePoly_32 = bigint_nondet_rem!(ctx, x4297, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4298, x1, 96), x4299, 96),
            x4297,
            96
        ),
        520203,
        4,
    )?;
    let x4300: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x4296, x4296, 64), x4282, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x4301: BytePoly_66 = bigint_nondet_quot!(ctx, x4300, x1, 66);
    let x4302: BytePoly_32 = bigint_nondet_rem!(ctx, x4300, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4301, x1, 98), x4302, 98),
            x4300,
            98
        ),
        536459,
        4,
    )?;
    let x4303: BytePoly_64 = bigint_mul!(x4296, x4302, 64);
    let x4304: BytePoly_66 = bigint_nondet_quot!(ctx, x4303, x1, 66);
    let x4305: BytePoly_32 = bigint_nondet_rem!(ctx, x4303, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4304, x1, 98), x4305, 98),
            x4303,
            98
        ),
        536459,
        4,
    )?;
    let x4306: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x4305, x4299, 32), 32), x1, 32);
    let x4307: BytePoly_32 = bigint_nondet_quot!(ctx, x4306, x1, 32);
    let x4308: BytePoly_32 = bigint_nondet_rem!(ctx, x4306, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4307, x1, 64), x4308, 64),
            x4306,
            64
        ),
        260103,
        4,
    )?;
    let x4309: BytePoly_32 = bigint_add!(bigint_sub!(x5, x4302, 32), x1, 32);
    let x4310: BytePoly_32 = bigint_nondet_inv!(ctx, x4309, x1, 32);
    let x4311: BytePoly_64 = bigint_mul!(x4309, x4310, 64);
    let x4312: BytePoly_66 = bigint_nondet_quot!(ctx, x4311, x1, 66);
    let x4313: BytePoly_32 = bigint_nondet_rem!(ctx, x4311, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4312, x1, 98), x4313, 98),
            x4311,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x4313, x0, 32), 34, 1)?;
    let x4314: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x4308, 32), x1, 32), x4310, 64);
    let x4315: BytePoly_66 = bigint_nondet_quot!(ctx, x4314, x1, 66);
    let x4316: BytePoly_32 = bigint_nondet_rem!(ctx, x4314, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4315, x1, 98), x4316, 98),
            x4314,
            98
        ),
        536459,
        4,
    )?;
    let x4317: BytePoly_64 = bigint_add!(
        bigint_sub!(x4308, bigint_mul!(x4316, x4302, 64), 64),
        x1,
        64
    );
    let x4318: BytePoly_64 = bigint_nondet_quot!(ctx, x4317, x1, 64);
    let x4319: BytePoly_32 = bigint_nondet_rem!(ctx, x4317, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4318, x1, 96), x4319, 96),
            x4317,
            96
        ),
        520203,
        4,
    )?;
    let x4320: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x4316, x4316, 64), x4302, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x4321: BytePoly_66 = bigint_nondet_quot!(ctx, x4320, x1, 66);
    let x4322: BytePoly_32 = bigint_nondet_rem!(ctx, x4320, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4321, x1, 98), x4322, 98),
            x4320,
            98
        ),
        536459,
        4,
    )?;
    let x4323: BytePoly_64 = bigint_mul!(x4316, x4322, 64);
    let x4324: BytePoly_66 = bigint_nondet_quot!(ctx, x4323, x1, 66);
    let x4325: BytePoly_32 = bigint_nondet_rem!(ctx, x4323, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4324, x1, 98), x4325, 98),
            x4323,
            98
        ),
        536459,
        4,
    )?;
    let x4326: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x4325, x4319, 32), 32), x1, 32);
    let x4327: BytePoly_32 = bigint_nondet_quot!(ctx, x4326, x1, 32);
    let x4328: BytePoly_32 = bigint_nondet_rem!(ctx, x4326, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4327, x1, 64), x4328, 64),
            x4326,
            64
        ),
        260103,
        4,
    )?;
    let x4329: BytePoly_32 = bigint_add!(bigint_sub!(x5, x4322, 32), x1, 32);
    let x4330: BytePoly_32 = bigint_nondet_inv!(ctx, x4329, x1, 32);
    let x4331: BytePoly_64 = bigint_mul!(x4329, x4330, 64);
    let x4332: BytePoly_66 = bigint_nondet_quot!(ctx, x4331, x1, 66);
    let x4333: BytePoly_32 = bigint_nondet_rem!(ctx, x4331, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4332, x1, 98), x4333, 98),
            x4331,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x4333, x0, 32), 34, 1)?;
    let x4334: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x4328, 32), x1, 32), x4330, 64);
    let x4335: BytePoly_66 = bigint_nondet_quot!(ctx, x4334, x1, 66);
    let x4336: BytePoly_32 = bigint_nondet_rem!(ctx, x4334, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4335, x1, 98), x4336, 98),
            x4334,
            98
        ),
        536459,
        4,
    )?;
    let x4337: BytePoly_64 = bigint_add!(
        bigint_sub!(x4328, bigint_mul!(x4336, x4322, 64), 64),
        x1,
        64
    );
    let x4338: BytePoly_64 = bigint_nondet_quot!(ctx, x4337, x1, 64);
    let x4339: BytePoly_32 = bigint_nondet_rem!(ctx, x4337, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4338, x1, 96), x4339, 96),
            x4337,
            96
        ),
        520203,
        4,
    )?;
    let x4340: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x4336, x4336, 64), x4322, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x4341: BytePoly_66 = bigint_nondet_quot!(ctx, x4340, x1, 66);
    let x4342: BytePoly_32 = bigint_nondet_rem!(ctx, x4340, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4341, x1, 98), x4342, 98),
            x4340,
            98
        ),
        536459,
        4,
    )?;
    let x4343: BytePoly_64 = bigint_mul!(x4336, x4342, 64);
    let x4344: BytePoly_66 = bigint_nondet_quot!(ctx, x4343, x1, 66);
    let x4345: BytePoly_32 = bigint_nondet_rem!(ctx, x4343, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4344, x1, 98), x4345, 98),
            x4343,
            98
        ),
        536459,
        4,
    )?;
    let x4346: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x4345, x4339, 32), 32), x1, 32);
    let x4347: BytePoly_32 = bigint_nondet_quot!(ctx, x4346, x1, 32);
    let x4348: BytePoly_32 = bigint_nondet_rem!(ctx, x4346, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4347, x1, 64), x4348, 64),
            x4346,
            64
        ),
        260103,
        4,
    )?;
    let x4349: BytePoly_32 = bigint_add!(bigint_sub!(x5, x4342, 32), x1, 32);
    let x4350: BytePoly_32 = bigint_nondet_inv!(ctx, x4349, x1, 32);
    let x4351: BytePoly_64 = bigint_mul!(x4349, x4350, 64);
    let x4352: BytePoly_66 = bigint_nondet_quot!(ctx, x4351, x1, 66);
    let x4353: BytePoly_32 = bigint_nondet_rem!(ctx, x4351, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4352, x1, 98), x4353, 98),
            x4351,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x4353, x0, 32), 34, 1)?;
    let x4354: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x4348, 32), x1, 32), x4350, 64);
    let x4355: BytePoly_66 = bigint_nondet_quot!(ctx, x4354, x1, 66);
    let x4356: BytePoly_32 = bigint_nondet_rem!(ctx, x4354, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4355, x1, 98), x4356, 98),
            x4354,
            98
        ),
        536459,
        4,
    )?;
    let x4357: BytePoly_64 = bigint_add!(
        bigint_sub!(x4348, bigint_mul!(x4356, x4342, 64), 64),
        x1,
        64
    );
    let x4358: BytePoly_64 = bigint_nondet_quot!(ctx, x4357, x1, 64);
    let x4359: BytePoly_32 = bigint_nondet_rem!(ctx, x4357, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4358, x1, 96), x4359, 96),
            x4357,
            96
        ),
        520203,
        4,
    )?;
    let x4360: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x4356, x4356, 64), x4342, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x4361: BytePoly_66 = bigint_nondet_quot!(ctx, x4360, x1, 66);
    let x4362: BytePoly_32 = bigint_nondet_rem!(ctx, x4360, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4361, x1, 98), x4362, 98),
            x4360,
            98
        ),
        536459,
        4,
    )?;
    let x4363: BytePoly_64 = bigint_mul!(x4356, x4362, 64);
    let x4364: BytePoly_66 = bigint_nondet_quot!(ctx, x4363, x1, 66);
    let x4365: BytePoly_32 = bigint_nondet_rem!(ctx, x4363, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4364, x1, 98), x4365, 98),
            x4363,
            98
        ),
        536459,
        4,
    )?;
    let x4366: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x4365, x4359, 32), 32), x1, 32);
    let x4367: BytePoly_32 = bigint_nondet_quot!(ctx, x4366, x1, 32);
    let x4368: BytePoly_32 = bigint_nondet_rem!(ctx, x4366, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4367, x1, 64), x4368, 64),
            x4366,
            64
        ),
        260103,
        4,
    )?;
    let x4369: BytePoly_32 = bigint_add!(bigint_sub!(x5, x4362, 32), x1, 32);
    let x4370: BytePoly_32 = bigint_nondet_inv!(ctx, x4369, x1, 32);
    let x4371: BytePoly_64 = bigint_mul!(x4369, x4370, 64);
    let x4372: BytePoly_66 = bigint_nondet_quot!(ctx, x4371, x1, 66);
    let x4373: BytePoly_32 = bigint_nondet_rem!(ctx, x4371, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4372, x1, 98), x4373, 98),
            x4371,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x4373, x0, 32), 34, 1)?;
    let x4374: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x4368, 32), x1, 32), x4370, 64);
    let x4375: BytePoly_66 = bigint_nondet_quot!(ctx, x4374, x1, 66);
    let x4376: BytePoly_32 = bigint_nondet_rem!(ctx, x4374, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4375, x1, 98), x4376, 98),
            x4374,
            98
        ),
        536459,
        4,
    )?;
    let x4377: BytePoly_64 = bigint_add!(
        bigint_sub!(x4368, bigint_mul!(x4376, x4362, 64), 64),
        x1,
        64
    );
    let x4378: BytePoly_64 = bigint_nondet_quot!(ctx, x4377, x1, 64);
    let x4379: BytePoly_32 = bigint_nondet_rem!(ctx, x4377, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4378, x1, 96), x4379, 96),
            x4377,
            96
        ),
        520203,
        4,
    )?;
    let x4380: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x4376, x4376, 64), x4362, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x4381: BytePoly_66 = bigint_nondet_quot!(ctx, x4380, x1, 66);
    let x4382: BytePoly_32 = bigint_nondet_rem!(ctx, x4380, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4381, x1, 98), x4382, 98),
            x4380,
            98
        ),
        536459,
        4,
    )?;
    let x4383: BytePoly_64 = bigint_mul!(x4376, x4382, 64);
    let x4384: BytePoly_66 = bigint_nondet_quot!(ctx, x4383, x1, 66);
    let x4385: BytePoly_32 = bigint_nondet_rem!(ctx, x4383, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4384, x1, 98), x4385, 98),
            x4383,
            98
        ),
        536459,
        4,
    )?;
    let x4386: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x4385, x4379, 32), 32), x1, 32);
    let x4387: BytePoly_32 = bigint_nondet_quot!(ctx, x4386, x1, 32);
    let x4388: BytePoly_32 = bigint_nondet_rem!(ctx, x4386, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4387, x1, 64), x4388, 64),
            x4386,
            64
        ),
        260103,
        4,
    )?;
    let x4389: BytePoly_32 = bigint_add!(bigint_sub!(x5, x4382, 32), x1, 32);
    let x4390: BytePoly_32 = bigint_nondet_inv!(ctx, x4389, x1, 32);
    let x4391: BytePoly_64 = bigint_mul!(x4389, x4390, 64);
    let x4392: BytePoly_66 = bigint_nondet_quot!(ctx, x4391, x1, 66);
    let x4393: BytePoly_32 = bigint_nondet_rem!(ctx, x4391, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4392, x1, 98), x4393, 98),
            x4391,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x4393, x0, 32), 34, 1)?;
    let x4394: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x4388, 32), x1, 32), x4390, 64);
    let x4395: BytePoly_66 = bigint_nondet_quot!(ctx, x4394, x1, 66);
    let x4396: BytePoly_32 = bigint_nondet_rem!(ctx, x4394, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4395, x1, 98), x4396, 98),
            x4394,
            98
        ),
        536459,
        4,
    )?;
    let x4397: BytePoly_64 = bigint_add!(
        bigint_sub!(x4388, bigint_mul!(x4396, x4382, 64), 64),
        x1,
        64
    );
    let x4398: BytePoly_64 = bigint_nondet_quot!(ctx, x4397, x1, 64);
    let x4399: BytePoly_32 = bigint_nondet_rem!(ctx, x4397, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4398, x1, 96), x4399, 96),
            x4397,
            96
        ),
        520203,
        4,
    )?;
    let x4400: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x4396, x4396, 64), x4382, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x4401: BytePoly_66 = bigint_nondet_quot!(ctx, x4400, x1, 66);
    let x4402: BytePoly_32 = bigint_nondet_rem!(ctx, x4400, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4401, x1, 98), x4402, 98),
            x4400,
            98
        ),
        536459,
        4,
    )?;
    let x4403: BytePoly_64 = bigint_mul!(x4396, x4402, 64);
    let x4404: BytePoly_66 = bigint_nondet_quot!(ctx, x4403, x1, 66);
    let x4405: BytePoly_32 = bigint_nondet_rem!(ctx, x4403, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4404, x1, 98), x4405, 98),
            x4403,
            98
        ),
        536459,
        4,
    )?;
    let x4406: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x4405, x4399, 32), 32), x1, 32);
    let x4407: BytePoly_32 = bigint_nondet_quot!(ctx, x4406, x1, 32);
    let x4408: BytePoly_32 = bigint_nondet_rem!(ctx, x4406, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4407, x1, 64), x4408, 64),
            x4406,
            64
        ),
        260103,
        4,
    )?;
    let x4409: BytePoly_32 = bigint_add!(bigint_sub!(x5, x4402, 32), x1, 32);
    let x4410: BytePoly_32 = bigint_nondet_inv!(ctx, x4409, x1, 32);
    let x4411: BytePoly_64 = bigint_mul!(x4409, x4410, 64);
    let x4412: BytePoly_66 = bigint_nondet_quot!(ctx, x4411, x1, 66);
    let x4413: BytePoly_32 = bigint_nondet_rem!(ctx, x4411, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4412, x1, 98), x4413, 98),
            x4411,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x4413, x0, 32), 34, 1)?;
    let x4414: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x4408, 32), x1, 32), x4410, 64);
    let x4415: BytePoly_66 = bigint_nondet_quot!(ctx, x4414, x1, 66);
    let x4416: BytePoly_32 = bigint_nondet_rem!(ctx, x4414, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4415, x1, 98), x4416, 98),
            x4414,
            98
        ),
        536459,
        4,
    )?;
    let x4417: BytePoly_64 = bigint_add!(
        bigint_sub!(x4408, bigint_mul!(x4416, x4402, 64), 64),
        x1,
        64
    );
    let x4418: BytePoly_64 = bigint_nondet_quot!(ctx, x4417, x1, 64);
    let x4419: BytePoly_32 = bigint_nondet_rem!(ctx, x4417, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4418, x1, 96), x4419, 96),
            x4417,
            96
        ),
        520203,
        4,
    )?;
    let x4420: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x4416, x4416, 64), x4402, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x4421: BytePoly_66 = bigint_nondet_quot!(ctx, x4420, x1, 66);
    let x4422: BytePoly_32 = bigint_nondet_rem!(ctx, x4420, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4421, x1, 98), x4422, 98),
            x4420,
            98
        ),
        536459,
        4,
    )?;
    let x4423: BytePoly_64 = bigint_mul!(x4416, x4422, 64);
    let x4424: BytePoly_66 = bigint_nondet_quot!(ctx, x4423, x1, 66);
    let x4425: BytePoly_32 = bigint_nondet_rem!(ctx, x4423, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4424, x1, 98), x4425, 98),
            x4423,
            98
        ),
        536459,
        4,
    )?;
    let x4426: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x4425, x4419, 32), 32), x1, 32);
    let x4427: BytePoly_32 = bigint_nondet_quot!(ctx, x4426, x1, 32);
    let x4428: BytePoly_32 = bigint_nondet_rem!(ctx, x4426, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4427, x1, 64), x4428, 64),
            x4426,
            64
        ),
        260103,
        4,
    )?;
    let x4429: BytePoly_32 = bigint_add!(bigint_sub!(x5, x4422, 32), x1, 32);
    let x4430: BytePoly_32 = bigint_nondet_inv!(ctx, x4429, x1, 32);
    let x4431: BytePoly_64 = bigint_mul!(x4429, x4430, 64);
    let x4432: BytePoly_66 = bigint_nondet_quot!(ctx, x4431, x1, 66);
    let x4433: BytePoly_32 = bigint_nondet_rem!(ctx, x4431, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4432, x1, 98), x4433, 98),
            x4431,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x4433, x0, 32), 34, 1)?;
    let x4434: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x4428, 32), x1, 32), x4430, 64);
    let x4435: BytePoly_66 = bigint_nondet_quot!(ctx, x4434, x1, 66);
    let x4436: BytePoly_32 = bigint_nondet_rem!(ctx, x4434, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4435, x1, 98), x4436, 98),
            x4434,
            98
        ),
        536459,
        4,
    )?;
    let x4437: BytePoly_64 = bigint_add!(
        bigint_sub!(x4428, bigint_mul!(x4436, x4422, 64), 64),
        x1,
        64
    );
    let x4438: BytePoly_64 = bigint_nondet_quot!(ctx, x4437, x1, 64);
    let x4439: BytePoly_32 = bigint_nondet_rem!(ctx, x4437, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4438, x1, 96), x4439, 96),
            x4437,
            96
        ),
        520203,
        4,
    )?;
    let x4440: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x4436, x4436, 64), x4422, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x4441: BytePoly_66 = bigint_nondet_quot!(ctx, x4440, x1, 66);
    let x4442: BytePoly_32 = bigint_nondet_rem!(ctx, x4440, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4441, x1, 98), x4442, 98),
            x4440,
            98
        ),
        536459,
        4,
    )?;
    let x4443: BytePoly_64 = bigint_mul!(x4436, x4442, 64);
    let x4444: BytePoly_66 = bigint_nondet_quot!(ctx, x4443, x1, 66);
    let x4445: BytePoly_32 = bigint_nondet_rem!(ctx, x4443, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4444, x1, 98), x4445, 98),
            x4443,
            98
        ),
        536459,
        4,
    )?;
    let x4446: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x4445, x4439, 32), 32), x1, 32);
    let x4447: BytePoly_32 = bigint_nondet_quot!(ctx, x4446, x1, 32);
    let x4448: BytePoly_32 = bigint_nondet_rem!(ctx, x4446, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4447, x1, 64), x4448, 64),
            x4446,
            64
        ),
        260103,
        4,
    )?;
    let x4449: BytePoly_32 = bigint_add!(bigint_sub!(x5, x4442, 32), x1, 32);
    let x4450: BytePoly_32 = bigint_nondet_inv!(ctx, x4449, x1, 32);
    let x4451: BytePoly_64 = bigint_mul!(x4449, x4450, 64);
    let x4452: BytePoly_66 = bigint_nondet_quot!(ctx, x4451, x1, 66);
    let x4453: BytePoly_32 = bigint_nondet_rem!(ctx, x4451, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4452, x1, 98), x4453, 98),
            x4451,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x4453, x0, 32), 34, 1)?;
    let x4454: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x4448, 32), x1, 32), x4450, 64);
    let x4455: BytePoly_66 = bigint_nondet_quot!(ctx, x4454, x1, 66);
    let x4456: BytePoly_32 = bigint_nondet_rem!(ctx, x4454, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4455, x1, 98), x4456, 98),
            x4454,
            98
        ),
        536459,
        4,
    )?;
    let x4457: BytePoly_64 = bigint_add!(
        bigint_sub!(x4448, bigint_mul!(x4456, x4442, 64), 64),
        x1,
        64
    );
    let x4458: BytePoly_64 = bigint_nondet_quot!(ctx, x4457, x1, 64);
    let x4459: BytePoly_32 = bigint_nondet_rem!(ctx, x4457, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4458, x1, 96), x4459, 96),
            x4457,
            96
        ),
        520203,
        4,
    )?;
    let x4460: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x4456, x4456, 64), x4442, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x4461: BytePoly_66 = bigint_nondet_quot!(ctx, x4460, x1, 66);
    let x4462: BytePoly_32 = bigint_nondet_rem!(ctx, x4460, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4461, x1, 98), x4462, 98),
            x4460,
            98
        ),
        536459,
        4,
    )?;
    let x4463: BytePoly_64 = bigint_mul!(x4456, x4462, 64);
    let x4464: BytePoly_66 = bigint_nondet_quot!(ctx, x4463, x1, 66);
    let x4465: BytePoly_32 = bigint_nondet_rem!(ctx, x4463, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4464, x1, 98), x4465, 98),
            x4463,
            98
        ),
        536459,
        4,
    )?;
    let x4466: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x4465, x4459, 32), 32), x1, 32);
    let x4467: BytePoly_32 = bigint_nondet_quot!(ctx, x4466, x1, 32);
    let x4468: BytePoly_32 = bigint_nondet_rem!(ctx, x4466, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4467, x1, 64), x4468, 64),
            x4466,
            64
        ),
        260103,
        4,
    )?;
    let x4469: BytePoly_32 = bigint_add!(bigint_sub!(x5, x4462, 32), x1, 32);
    let x4470: BytePoly_32 = bigint_nondet_inv!(ctx, x4469, x1, 32);
    let x4471: BytePoly_64 = bigint_mul!(x4469, x4470, 64);
    let x4472: BytePoly_66 = bigint_nondet_quot!(ctx, x4471, x1, 66);
    let x4473: BytePoly_32 = bigint_nondet_rem!(ctx, x4471, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4472, x1, 98), x4473, 98),
            x4471,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x4473, x0, 32), 34, 1)?;
    let x4474: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x4468, 32), x1, 32), x4470, 64);
    let x4475: BytePoly_66 = bigint_nondet_quot!(ctx, x4474, x1, 66);
    let x4476: BytePoly_32 = bigint_nondet_rem!(ctx, x4474, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4475, x1, 98), x4476, 98),
            x4474,
            98
        ),
        536459,
        4,
    )?;
    let x4477: BytePoly_64 = bigint_add!(
        bigint_sub!(x4468, bigint_mul!(x4476, x4462, 64), 64),
        x1,
        64
    );
    let x4478: BytePoly_64 = bigint_nondet_quot!(ctx, x4477, x1, 64);
    let x4479: BytePoly_32 = bigint_nondet_rem!(ctx, x4477, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4478, x1, 96), x4479, 96),
            x4477,
            96
        ),
        520203,
        4,
    )?;
    let x4480: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x4476, x4476, 64), x4462, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x4481: BytePoly_66 = bigint_nondet_quot!(ctx, x4480, x1, 66);
    let x4482: BytePoly_32 = bigint_nondet_rem!(ctx, x4480, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4481, x1, 98), x4482, 98),
            x4480,
            98
        ),
        536459,
        4,
    )?;
    let x4483: BytePoly_64 = bigint_mul!(x4476, x4482, 64);
    let x4484: BytePoly_66 = bigint_nondet_quot!(ctx, x4483, x1, 66);
    let x4485: BytePoly_32 = bigint_nondet_rem!(ctx, x4483, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4484, x1, 98), x4485, 98),
            x4483,
            98
        ),
        536459,
        4,
    )?;
    let x4486: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x4485, x4479, 32), 32), x1, 32);
    let x4487: BytePoly_32 = bigint_nondet_quot!(ctx, x4486, x1, 32);
    let x4488: BytePoly_32 = bigint_nondet_rem!(ctx, x4486, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4487, x1, 64), x4488, 64),
            x4486,
            64
        ),
        260103,
        4,
    )?;
    let x4489: BytePoly_32 = bigint_add!(bigint_sub!(x5, x4482, 32), x1, 32);
    let x4490: BytePoly_32 = bigint_nondet_inv!(ctx, x4489, x1, 32);
    let x4491: BytePoly_64 = bigint_mul!(x4489, x4490, 64);
    let x4492: BytePoly_66 = bigint_nondet_quot!(ctx, x4491, x1, 66);
    let x4493: BytePoly_32 = bigint_nondet_rem!(ctx, x4491, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4492, x1, 98), x4493, 98),
            x4491,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x4493, x0, 32), 34, 1)?;
    let x4494: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x4488, 32), x1, 32), x4490, 64);
    let x4495: BytePoly_66 = bigint_nondet_quot!(ctx, x4494, x1, 66);
    let x4496: BytePoly_32 = bigint_nondet_rem!(ctx, x4494, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4495, x1, 98), x4496, 98),
            x4494,
            98
        ),
        536459,
        4,
    )?;
    let x4497: BytePoly_64 = bigint_add!(
        bigint_sub!(x4488, bigint_mul!(x4496, x4482, 64), 64),
        x1,
        64
    );
    let x4498: BytePoly_64 = bigint_nondet_quot!(ctx, x4497, x1, 64);
    let x4499: BytePoly_32 = bigint_nondet_rem!(ctx, x4497, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4498, x1, 96), x4499, 96),
            x4497,
            96
        ),
        520203,
        4,
    )?;
    let x4500: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x4496, x4496, 64), x4482, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x4501: BytePoly_66 = bigint_nondet_quot!(ctx, x4500, x1, 66);
    let x4502: BytePoly_32 = bigint_nondet_rem!(ctx, x4500, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4501, x1, 98), x4502, 98),
            x4500,
            98
        ),
        536459,
        4,
    )?;
    let x4503: BytePoly_64 = bigint_mul!(x4496, x4502, 64);
    let x4504: BytePoly_66 = bigint_nondet_quot!(ctx, x4503, x1, 66);
    let x4505: BytePoly_32 = bigint_nondet_rem!(ctx, x4503, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4504, x1, 98), x4505, 98),
            x4503,
            98
        ),
        536459,
        4,
    )?;
    let x4506: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x4505, x4499, 32), 32), x1, 32);
    let x4507: BytePoly_32 = bigint_nondet_quot!(ctx, x4506, x1, 32);
    let x4508: BytePoly_32 = bigint_nondet_rem!(ctx, x4506, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4507, x1, 64), x4508, 64),
            x4506,
            64
        ),
        260103,
        4,
    )?;
    let x4509: BytePoly_32 = bigint_add!(bigint_sub!(x5, x4502, 32), x1, 32);
    let x4510: BytePoly_32 = bigint_nondet_inv!(ctx, x4509, x1, 32);
    let x4511: BytePoly_64 = bigint_mul!(x4509, x4510, 64);
    let x4512: BytePoly_66 = bigint_nondet_quot!(ctx, x4511, x1, 66);
    let x4513: BytePoly_32 = bigint_nondet_rem!(ctx, x4511, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4512, x1, 98), x4513, 98),
            x4511,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x4513, x0, 32), 34, 1)?;
    let x4514: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x4508, 32), x1, 32), x4510, 64);
    let x4515: BytePoly_66 = bigint_nondet_quot!(ctx, x4514, x1, 66);
    let x4516: BytePoly_32 = bigint_nondet_rem!(ctx, x4514, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4515, x1, 98), x4516, 98),
            x4514,
            98
        ),
        536459,
        4,
    )?;
    let x4517: BytePoly_64 = bigint_add!(
        bigint_sub!(x4508, bigint_mul!(x4516, x4502, 64), 64),
        x1,
        64
    );
    let x4518: BytePoly_64 = bigint_nondet_quot!(ctx, x4517, x1, 64);
    let x4519: BytePoly_32 = bigint_nondet_rem!(ctx, x4517, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4518, x1, 96), x4519, 96),
            x4517,
            96
        ),
        520203,
        4,
    )?;
    let x4520: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x4516, x4516, 64), x4502, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x4521: BytePoly_66 = bigint_nondet_quot!(ctx, x4520, x1, 66);
    let x4522: BytePoly_32 = bigint_nondet_rem!(ctx, x4520, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4521, x1, 98), x4522, 98),
            x4520,
            98
        ),
        536459,
        4,
    )?;
    let x4523: BytePoly_64 = bigint_mul!(x4516, x4522, 64);
    let x4524: BytePoly_66 = bigint_nondet_quot!(ctx, x4523, x1, 66);
    let x4525: BytePoly_32 = bigint_nondet_rem!(ctx, x4523, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4524, x1, 98), x4525, 98),
            x4523,
            98
        ),
        536459,
        4,
    )?;
    let x4526: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x4525, x4519, 32), 32), x1, 32);
    let x4527: BytePoly_32 = bigint_nondet_quot!(ctx, x4526, x1, 32);
    let x4528: BytePoly_32 = bigint_nondet_rem!(ctx, x4526, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4527, x1, 64), x4528, 64),
            x4526,
            64
        ),
        260103,
        4,
    )?;
    let x4529: BytePoly_32 = bigint_add!(bigint_sub!(x5, x4522, 32), x1, 32);
    let x4530: BytePoly_32 = bigint_nondet_inv!(ctx, x4529, x1, 32);
    let x4531: BytePoly_64 = bigint_mul!(x4529, x4530, 64);
    let x4532: BytePoly_66 = bigint_nondet_quot!(ctx, x4531, x1, 66);
    let x4533: BytePoly_32 = bigint_nondet_rem!(ctx, x4531, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4532, x1, 98), x4533, 98),
            x4531,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x4533, x0, 32), 34, 1)?;
    let x4534: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x4528, 32), x1, 32), x4530, 64);
    let x4535: BytePoly_66 = bigint_nondet_quot!(ctx, x4534, x1, 66);
    let x4536: BytePoly_32 = bigint_nondet_rem!(ctx, x4534, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4535, x1, 98), x4536, 98),
            x4534,
            98
        ),
        536459,
        4,
    )?;
    let x4537: BytePoly_64 = bigint_add!(
        bigint_sub!(x4528, bigint_mul!(x4536, x4522, 64), 64),
        x1,
        64
    );
    let x4538: BytePoly_64 = bigint_nondet_quot!(ctx, x4537, x1, 64);
    let x4539: BytePoly_32 = bigint_nondet_rem!(ctx, x4537, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4538, x1, 96), x4539, 96),
            x4537,
            96
        ),
        520203,
        4,
    )?;
    let x4540: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x4536, x4536, 64), x4522, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x4541: BytePoly_66 = bigint_nondet_quot!(ctx, x4540, x1, 66);
    let x4542: BytePoly_32 = bigint_nondet_rem!(ctx, x4540, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4541, x1, 98), x4542, 98),
            x4540,
            98
        ),
        536459,
        4,
    )?;
    let x4543: BytePoly_64 = bigint_mul!(x4536, x4542, 64);
    let x4544: BytePoly_66 = bigint_nondet_quot!(ctx, x4543, x1, 66);
    let x4545: BytePoly_32 = bigint_nondet_rem!(ctx, x4543, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4544, x1, 98), x4545, 98),
            x4543,
            98
        ),
        536459,
        4,
    )?;
    let x4546: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x4545, x4539, 32), 32), x1, 32);
    let x4547: BytePoly_32 = bigint_nondet_quot!(ctx, x4546, x1, 32);
    let x4548: BytePoly_32 = bigint_nondet_rem!(ctx, x4546, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4547, x1, 64), x4548, 64),
            x4546,
            64
        ),
        260103,
        4,
    )?;
    let x4549: BytePoly_32 = bigint_add!(bigint_sub!(x5, x4542, 32), x1, 32);
    let x4550: BytePoly_32 = bigint_nondet_inv!(ctx, x4549, x1, 32);
    let x4551: BytePoly_64 = bigint_mul!(x4549, x4550, 64);
    let x4552: BytePoly_66 = bigint_nondet_quot!(ctx, x4551, x1, 66);
    let x4553: BytePoly_32 = bigint_nondet_rem!(ctx, x4551, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4552, x1, 98), x4553, 98),
            x4551,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x4553, x0, 32), 34, 1)?;
    let x4554: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x4548, 32), x1, 32), x4550, 64);
    let x4555: BytePoly_66 = bigint_nondet_quot!(ctx, x4554, x1, 66);
    let x4556: BytePoly_32 = bigint_nondet_rem!(ctx, x4554, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4555, x1, 98), x4556, 98),
            x4554,
            98
        ),
        536459,
        4,
    )?;
    let x4557: BytePoly_64 = bigint_add!(
        bigint_sub!(x4548, bigint_mul!(x4556, x4542, 64), 64),
        x1,
        64
    );
    let x4558: BytePoly_64 = bigint_nondet_quot!(ctx, x4557, x1, 64);
    let x4559: BytePoly_32 = bigint_nondet_rem!(ctx, x4557, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4558, x1, 96), x4559, 96),
            x4557,
            96
        ),
        520203,
        4,
    )?;
    let x4560: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x4556, x4556, 64), x4542, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x4561: BytePoly_66 = bigint_nondet_quot!(ctx, x4560, x1, 66);
    let x4562: BytePoly_32 = bigint_nondet_rem!(ctx, x4560, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4561, x1, 98), x4562, 98),
            x4560,
            98
        ),
        536459,
        4,
    )?;
    let x4563: BytePoly_64 = bigint_mul!(x4556, x4562, 64);
    let x4564: BytePoly_66 = bigint_nondet_quot!(ctx, x4563, x1, 66);
    let x4565: BytePoly_32 = bigint_nondet_rem!(ctx, x4563, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4564, x1, 98), x4565, 98),
            x4563,
            98
        ),
        536459,
        4,
    )?;
    let x4566: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x4565, x4559, 32), 32), x1, 32);
    let x4567: BytePoly_32 = bigint_nondet_quot!(ctx, x4566, x1, 32);
    let x4568: BytePoly_32 = bigint_nondet_rem!(ctx, x4566, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4567, x1, 64), x4568, 64),
            x4566,
            64
        ),
        260103,
        4,
    )?;
    let x4569: BytePoly_32 = bigint_add!(bigint_sub!(x5, x4562, 32), x1, 32);
    let x4570: BytePoly_32 = bigint_nondet_inv!(ctx, x4569, x1, 32);
    let x4571: BytePoly_64 = bigint_mul!(x4569, x4570, 64);
    let x4572: BytePoly_66 = bigint_nondet_quot!(ctx, x4571, x1, 66);
    let x4573: BytePoly_32 = bigint_nondet_rem!(ctx, x4571, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4572, x1, 98), x4573, 98),
            x4571,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x4573, x0, 32), 34, 1)?;
    let x4574: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x4568, 32), x1, 32), x4570, 64);
    let x4575: BytePoly_66 = bigint_nondet_quot!(ctx, x4574, x1, 66);
    let x4576: BytePoly_32 = bigint_nondet_rem!(ctx, x4574, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4575, x1, 98), x4576, 98),
            x4574,
            98
        ),
        536459,
        4,
    )?;
    let x4577: BytePoly_64 = bigint_add!(
        bigint_sub!(x4568, bigint_mul!(x4576, x4562, 64), 64),
        x1,
        64
    );
    let x4578: BytePoly_64 = bigint_nondet_quot!(ctx, x4577, x1, 64);
    let x4579: BytePoly_32 = bigint_nondet_rem!(ctx, x4577, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4578, x1, 96), x4579, 96),
            x4577,
            96
        ),
        520203,
        4,
    )?;
    let x4580: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x4576, x4576, 64), x4562, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x4581: BytePoly_66 = bigint_nondet_quot!(ctx, x4580, x1, 66);
    let x4582: BytePoly_32 = bigint_nondet_rem!(ctx, x4580, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4581, x1, 98), x4582, 98),
            x4580,
            98
        ),
        536459,
        4,
    )?;
    let x4583: BytePoly_64 = bigint_mul!(x4576, x4582, 64);
    let x4584: BytePoly_66 = bigint_nondet_quot!(ctx, x4583, x1, 66);
    let x4585: BytePoly_32 = bigint_nondet_rem!(ctx, x4583, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4584, x1, 98), x4585, 98),
            x4583,
            98
        ),
        536459,
        4,
    )?;
    let x4586: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x4585, x4579, 32), 32), x1, 32);
    let x4587: BytePoly_32 = bigint_nondet_quot!(ctx, x4586, x1, 32);
    let x4588: BytePoly_32 = bigint_nondet_rem!(ctx, x4586, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4587, x1, 64), x4588, 64),
            x4586,
            64
        ),
        260103,
        4,
    )?;
    let x4589: BytePoly_32 = bigint_add!(bigint_sub!(x5, x4582, 32), x1, 32);
    let x4590: BytePoly_32 = bigint_nondet_inv!(ctx, x4589, x1, 32);
    let x4591: BytePoly_64 = bigint_mul!(x4589, x4590, 64);
    let x4592: BytePoly_66 = bigint_nondet_quot!(ctx, x4591, x1, 66);
    let x4593: BytePoly_32 = bigint_nondet_rem!(ctx, x4591, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4592, x1, 98), x4593, 98),
            x4591,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x4593, x0, 32), 34, 1)?;
    let x4594: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x4588, 32), x1, 32), x4590, 64);
    let x4595: BytePoly_66 = bigint_nondet_quot!(ctx, x4594, x1, 66);
    let x4596: BytePoly_32 = bigint_nondet_rem!(ctx, x4594, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4595, x1, 98), x4596, 98),
            x4594,
            98
        ),
        536459,
        4,
    )?;
    let x4597: BytePoly_64 = bigint_add!(
        bigint_sub!(x4588, bigint_mul!(x4596, x4582, 64), 64),
        x1,
        64
    );
    let x4598: BytePoly_64 = bigint_nondet_quot!(ctx, x4597, x1, 64);
    let x4599: BytePoly_32 = bigint_nondet_rem!(ctx, x4597, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4598, x1, 96), x4599, 96),
            x4597,
            96
        ),
        520203,
        4,
    )?;
    let x4600: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x4596, x4596, 64), x4582, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x4601: BytePoly_66 = bigint_nondet_quot!(ctx, x4600, x1, 66);
    let x4602: BytePoly_32 = bigint_nondet_rem!(ctx, x4600, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4601, x1, 98), x4602, 98),
            x4600,
            98
        ),
        536459,
        4,
    )?;
    let x4603: BytePoly_64 = bigint_mul!(x4596, x4602, 64);
    let x4604: BytePoly_66 = bigint_nondet_quot!(ctx, x4603, x1, 66);
    let x4605: BytePoly_32 = bigint_nondet_rem!(ctx, x4603, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4604, x1, 98), x4605, 98),
            x4603,
            98
        ),
        536459,
        4,
    )?;
    let x4606: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x4605, x4599, 32), 32), x1, 32);
    let x4607: BytePoly_32 = bigint_nondet_quot!(ctx, x4606, x1, 32);
    let x4608: BytePoly_32 = bigint_nondet_rem!(ctx, x4606, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4607, x1, 64), x4608, 64),
            x4606,
            64
        ),
        260103,
        4,
    )?;
    let x4609: BytePoly_32 = bigint_add!(bigint_sub!(x5, x4602, 32), x1, 32);
    let x4610: BytePoly_32 = bigint_nondet_inv!(ctx, x4609, x1, 32);
    let x4611: BytePoly_64 = bigint_mul!(x4609, x4610, 64);
    let x4612: BytePoly_66 = bigint_nondet_quot!(ctx, x4611, x1, 66);
    let x4613: BytePoly_32 = bigint_nondet_rem!(ctx, x4611, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4612, x1, 98), x4613, 98),
            x4611,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x4613, x0, 32), 34, 1)?;
    let x4614: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x4608, 32), x1, 32), x4610, 64);
    let x4615: BytePoly_66 = bigint_nondet_quot!(ctx, x4614, x1, 66);
    let x4616: BytePoly_32 = bigint_nondet_rem!(ctx, x4614, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4615, x1, 98), x4616, 98),
            x4614,
            98
        ),
        536459,
        4,
    )?;
    let x4617: BytePoly_64 = bigint_add!(
        bigint_sub!(x4608, bigint_mul!(x4616, x4602, 64), 64),
        x1,
        64
    );
    let x4618: BytePoly_64 = bigint_nondet_quot!(ctx, x4617, x1, 64);
    let x4619: BytePoly_32 = bigint_nondet_rem!(ctx, x4617, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4618, x1, 96), x4619, 96),
            x4617,
            96
        ),
        520203,
        4,
    )?;
    let x4620: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x4616, x4616, 64), x4602, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x4621: BytePoly_66 = bigint_nondet_quot!(ctx, x4620, x1, 66);
    let x4622: BytePoly_32 = bigint_nondet_rem!(ctx, x4620, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4621, x1, 98), x4622, 98),
            x4620,
            98
        ),
        536459,
        4,
    )?;
    let x4623: BytePoly_64 = bigint_mul!(x4616, x4622, 64);
    let x4624: BytePoly_66 = bigint_nondet_quot!(ctx, x4623, x1, 66);
    let x4625: BytePoly_32 = bigint_nondet_rem!(ctx, x4623, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4624, x1, 98), x4625, 98),
            x4623,
            98
        ),
        536459,
        4,
    )?;
    let x4626: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x4625, x4619, 32), 32), x1, 32);
    let x4627: BytePoly_32 = bigint_nondet_quot!(ctx, x4626, x1, 32);
    let x4628: BytePoly_32 = bigint_nondet_rem!(ctx, x4626, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4627, x1, 64), x4628, 64),
            x4626,
            64
        ),
        260103,
        4,
    )?;
    let x4629: BytePoly_32 = bigint_add!(bigint_sub!(x5, x4622, 32), x1, 32);
    let x4630: BytePoly_32 = bigint_nondet_inv!(ctx, x4629, x1, 32);
    let x4631: BytePoly_64 = bigint_mul!(x4629, x4630, 64);
    let x4632: BytePoly_66 = bigint_nondet_quot!(ctx, x4631, x1, 66);
    let x4633: BytePoly_32 = bigint_nondet_rem!(ctx, x4631, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4632, x1, 98), x4633, 98),
            x4631,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x4633, x0, 32), 34, 1)?;
    let x4634: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x4628, 32), x1, 32), x4630, 64);
    let x4635: BytePoly_66 = bigint_nondet_quot!(ctx, x4634, x1, 66);
    let x4636: BytePoly_32 = bigint_nondet_rem!(ctx, x4634, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4635, x1, 98), x4636, 98),
            x4634,
            98
        ),
        536459,
        4,
    )?;
    let x4637: BytePoly_64 = bigint_add!(
        bigint_sub!(x4628, bigint_mul!(x4636, x4622, 64), 64),
        x1,
        64
    );
    let x4638: BytePoly_64 = bigint_nondet_quot!(ctx, x4637, x1, 64);
    let x4639: BytePoly_32 = bigint_nondet_rem!(ctx, x4637, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4638, x1, 96), x4639, 96),
            x4637,
            96
        ),
        520203,
        4,
    )?;
    let x4640: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x4636, x4636, 64), x4622, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x4641: BytePoly_66 = bigint_nondet_quot!(ctx, x4640, x1, 66);
    let x4642: BytePoly_32 = bigint_nondet_rem!(ctx, x4640, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4641, x1, 98), x4642, 98),
            x4640,
            98
        ),
        536459,
        4,
    )?;
    let x4643: BytePoly_64 = bigint_mul!(x4636, x4642, 64);
    let x4644: BytePoly_66 = bigint_nondet_quot!(ctx, x4643, x1, 66);
    let x4645: BytePoly_32 = bigint_nondet_rem!(ctx, x4643, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4644, x1, 98), x4645, 98),
            x4643,
            98
        ),
        536459,
        4,
    )?;
    let x4646: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x4645, x4639, 32), 32), x1, 32);
    let x4647: BytePoly_32 = bigint_nondet_quot!(ctx, x4646, x1, 32);
    let x4648: BytePoly_32 = bigint_nondet_rem!(ctx, x4646, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4647, x1, 64), x4648, 64),
            x4646,
            64
        ),
        260103,
        4,
    )?;
    let x4649: BytePoly_32 = bigint_add!(bigint_sub!(x5, x4642, 32), x1, 32);
    let x4650: BytePoly_32 = bigint_nondet_inv!(ctx, x4649, x1, 32);
    let x4651: BytePoly_64 = bigint_mul!(x4649, x4650, 64);
    let x4652: BytePoly_66 = bigint_nondet_quot!(ctx, x4651, x1, 66);
    let x4653: BytePoly_32 = bigint_nondet_rem!(ctx, x4651, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4652, x1, 98), x4653, 98),
            x4651,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x4653, x0, 32), 34, 1)?;
    let x4654: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x4648, 32), x1, 32), x4650, 64);
    let x4655: BytePoly_66 = bigint_nondet_quot!(ctx, x4654, x1, 66);
    let x4656: BytePoly_32 = bigint_nondet_rem!(ctx, x4654, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4655, x1, 98), x4656, 98),
            x4654,
            98
        ),
        536459,
        4,
    )?;
    let x4657: BytePoly_64 = bigint_add!(
        bigint_sub!(x4648, bigint_mul!(x4656, x4642, 64), 64),
        x1,
        64
    );
    let x4658: BytePoly_64 = bigint_nondet_quot!(ctx, x4657, x1, 64);
    let x4659: BytePoly_32 = bigint_nondet_rem!(ctx, x4657, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4658, x1, 96), x4659, 96),
            x4657,
            96
        ),
        520203,
        4,
    )?;
    let x4660: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x4656, x4656, 64), x4642, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x4661: BytePoly_66 = bigint_nondet_quot!(ctx, x4660, x1, 66);
    let x4662: BytePoly_32 = bigint_nondet_rem!(ctx, x4660, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4661, x1, 98), x4662, 98),
            x4660,
            98
        ),
        536459,
        4,
    )?;
    let x4663: BytePoly_64 = bigint_mul!(x4656, x4662, 64);
    let x4664: BytePoly_66 = bigint_nondet_quot!(ctx, x4663, x1, 66);
    let x4665: BytePoly_32 = bigint_nondet_rem!(ctx, x4663, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4664, x1, 98), x4665, 98),
            x4663,
            98
        ),
        536459,
        4,
    )?;
    let x4666: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x4665, x4659, 32), 32), x1, 32);
    let x4667: BytePoly_32 = bigint_nondet_quot!(ctx, x4666, x1, 32);
    let x4668: BytePoly_32 = bigint_nondet_rem!(ctx, x4666, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4667, x1, 64), x4668, 64),
            x4666,
            64
        ),
        260103,
        4,
    )?;
    let x4669: BytePoly_32 = bigint_add!(bigint_sub!(x5, x4662, 32), x1, 32);
    let x4670: BytePoly_32 = bigint_nondet_inv!(ctx, x4669, x1, 32);
    let x4671: BytePoly_64 = bigint_mul!(x4669, x4670, 64);
    let x4672: BytePoly_66 = bigint_nondet_quot!(ctx, x4671, x1, 66);
    let x4673: BytePoly_32 = bigint_nondet_rem!(ctx, x4671, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4672, x1, 98), x4673, 98),
            x4671,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x4673, x0, 32), 34, 1)?;
    let x4674: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x4668, 32), x1, 32), x4670, 64);
    let x4675: BytePoly_66 = bigint_nondet_quot!(ctx, x4674, x1, 66);
    let x4676: BytePoly_32 = bigint_nondet_rem!(ctx, x4674, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4675, x1, 98), x4676, 98),
            x4674,
            98
        ),
        536459,
        4,
    )?;
    let x4677: BytePoly_64 = bigint_add!(
        bigint_sub!(x4668, bigint_mul!(x4676, x4662, 64), 64),
        x1,
        64
    );
    let x4678: BytePoly_64 = bigint_nondet_quot!(ctx, x4677, x1, 64);
    let x4679: BytePoly_32 = bigint_nondet_rem!(ctx, x4677, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4678, x1, 96), x4679, 96),
            x4677,
            96
        ),
        520203,
        4,
    )?;
    let x4680: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x4676, x4676, 64), x4662, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x4681: BytePoly_66 = bigint_nondet_quot!(ctx, x4680, x1, 66);
    let x4682: BytePoly_32 = bigint_nondet_rem!(ctx, x4680, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4681, x1, 98), x4682, 98),
            x4680,
            98
        ),
        536459,
        4,
    )?;
    let x4683: BytePoly_64 = bigint_mul!(x4676, x4682, 64);
    let x4684: BytePoly_66 = bigint_nondet_quot!(ctx, x4683, x1, 66);
    let x4685: BytePoly_32 = bigint_nondet_rem!(ctx, x4683, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4684, x1, 98), x4685, 98),
            x4683,
            98
        ),
        536459,
        4,
    )?;
    let x4686: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x4685, x4679, 32), 32), x1, 32);
    let x4687: BytePoly_32 = bigint_nondet_quot!(ctx, x4686, x1, 32);
    let x4688: BytePoly_32 = bigint_nondet_rem!(ctx, x4686, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4687, x1, 64), x4688, 64),
            x4686,
            64
        ),
        260103,
        4,
    )?;
    let x4689: BytePoly_32 = bigint_add!(bigint_sub!(x5, x4682, 32), x1, 32);
    let x4690: BytePoly_32 = bigint_nondet_inv!(ctx, x4689, x1, 32);
    let x4691: BytePoly_64 = bigint_mul!(x4689, x4690, 64);
    let x4692: BytePoly_66 = bigint_nondet_quot!(ctx, x4691, x1, 66);
    let x4693: BytePoly_32 = bigint_nondet_rem!(ctx, x4691, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4692, x1, 98), x4693, 98),
            x4691,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x4693, x0, 32), 34, 1)?;
    let x4694: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x4688, 32), x1, 32), x4690, 64);
    let x4695: BytePoly_66 = bigint_nondet_quot!(ctx, x4694, x1, 66);
    let x4696: BytePoly_32 = bigint_nondet_rem!(ctx, x4694, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4695, x1, 98), x4696, 98),
            x4694,
            98
        ),
        536459,
        4,
    )?;
    let x4697: BytePoly_64 = bigint_add!(
        bigint_sub!(x4688, bigint_mul!(x4696, x4682, 64), 64),
        x1,
        64
    );
    let x4698: BytePoly_64 = bigint_nondet_quot!(ctx, x4697, x1, 64);
    let x4699: BytePoly_32 = bigint_nondet_rem!(ctx, x4697, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4698, x1, 96), x4699, 96),
            x4697,
            96
        ),
        520203,
        4,
    )?;
    let x4700: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x4696, x4696, 64), x4682, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x4701: BytePoly_66 = bigint_nondet_quot!(ctx, x4700, x1, 66);
    let x4702: BytePoly_32 = bigint_nondet_rem!(ctx, x4700, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4701, x1, 98), x4702, 98),
            x4700,
            98
        ),
        536459,
        4,
    )?;
    let x4703: BytePoly_64 = bigint_mul!(x4696, x4702, 64);
    let x4704: BytePoly_66 = bigint_nondet_quot!(ctx, x4703, x1, 66);
    let x4705: BytePoly_32 = bigint_nondet_rem!(ctx, x4703, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4704, x1, 98), x4705, 98),
            x4703,
            98
        ),
        536459,
        4,
    )?;
    let x4706: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x4705, x4699, 32), 32), x1, 32);
    let x4707: BytePoly_32 = bigint_nondet_quot!(ctx, x4706, x1, 32);
    let x4708: BytePoly_32 = bigint_nondet_rem!(ctx, x4706, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4707, x1, 64), x4708, 64),
            x4706,
            64
        ),
        260103,
        4,
    )?;
    let x4709: BytePoly_32 = bigint_add!(bigint_sub!(x5, x4702, 32), x1, 32);
    let x4710: BytePoly_32 = bigint_nondet_inv!(ctx, x4709, x1, 32);
    let x4711: BytePoly_64 = bigint_mul!(x4709, x4710, 64);
    let x4712: BytePoly_66 = bigint_nondet_quot!(ctx, x4711, x1, 66);
    let x4713: BytePoly_32 = bigint_nondet_rem!(ctx, x4711, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4712, x1, 98), x4713, 98),
            x4711,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x4713, x0, 32), 34, 1)?;
    let x4714: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x4708, 32), x1, 32), x4710, 64);
    let x4715: BytePoly_66 = bigint_nondet_quot!(ctx, x4714, x1, 66);
    let x4716: BytePoly_32 = bigint_nondet_rem!(ctx, x4714, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4715, x1, 98), x4716, 98),
            x4714,
            98
        ),
        536459,
        4,
    )?;
    let x4717: BytePoly_64 = bigint_add!(
        bigint_sub!(x4708, bigint_mul!(x4716, x4702, 64), 64),
        x1,
        64
    );
    let x4718: BytePoly_64 = bigint_nondet_quot!(ctx, x4717, x1, 64);
    let x4719: BytePoly_32 = bigint_nondet_rem!(ctx, x4717, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4718, x1, 96), x4719, 96),
            x4717,
            96
        ),
        520203,
        4,
    )?;
    let x4720: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x4716, x4716, 64), x4702, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x4721: BytePoly_66 = bigint_nondet_quot!(ctx, x4720, x1, 66);
    let x4722: BytePoly_32 = bigint_nondet_rem!(ctx, x4720, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4721, x1, 98), x4722, 98),
            x4720,
            98
        ),
        536459,
        4,
    )?;
    let x4723: BytePoly_64 = bigint_mul!(x4716, x4722, 64);
    let x4724: BytePoly_66 = bigint_nondet_quot!(ctx, x4723, x1, 66);
    let x4725: BytePoly_32 = bigint_nondet_rem!(ctx, x4723, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4724, x1, 98), x4725, 98),
            x4723,
            98
        ),
        536459,
        4,
    )?;
    let x4726: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x4725, x4719, 32), 32), x1, 32);
    let x4727: BytePoly_32 = bigint_nondet_quot!(ctx, x4726, x1, 32);
    let x4728: BytePoly_32 = bigint_nondet_rem!(ctx, x4726, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4727, x1, 64), x4728, 64),
            x4726,
            64
        ),
        260103,
        4,
    )?;
    let x4729: BytePoly_32 = bigint_add!(bigint_sub!(x5, x4722, 32), x1, 32);
    let x4730: BytePoly_32 = bigint_nondet_inv!(ctx, x4729, x1, 32);
    let x4731: BytePoly_64 = bigint_mul!(x4729, x4730, 64);
    let x4732: BytePoly_66 = bigint_nondet_quot!(ctx, x4731, x1, 66);
    let x4733: BytePoly_32 = bigint_nondet_rem!(ctx, x4731, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4732, x1, 98), x4733, 98),
            x4731,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x4733, x0, 32), 34, 1)?;
    let x4734: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x4728, 32), x1, 32), x4730, 64);
    let x4735: BytePoly_66 = bigint_nondet_quot!(ctx, x4734, x1, 66);
    let x4736: BytePoly_32 = bigint_nondet_rem!(ctx, x4734, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4735, x1, 98), x4736, 98),
            x4734,
            98
        ),
        536459,
        4,
    )?;
    let x4737: BytePoly_64 = bigint_add!(
        bigint_sub!(x4728, bigint_mul!(x4736, x4722, 64), 64),
        x1,
        64
    );
    let x4738: BytePoly_64 = bigint_nondet_quot!(ctx, x4737, x1, 64);
    let x4739: BytePoly_32 = bigint_nondet_rem!(ctx, x4737, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4738, x1, 96), x4739, 96),
            x4737,
            96
        ),
        520203,
        4,
    )?;
    let x4740: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x4736, x4736, 64), x4722, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x4741: BytePoly_66 = bigint_nondet_quot!(ctx, x4740, x1, 66);
    let x4742: BytePoly_32 = bigint_nondet_rem!(ctx, x4740, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4741, x1, 98), x4742, 98),
            x4740,
            98
        ),
        536459,
        4,
    )?;
    let x4743: BytePoly_64 = bigint_mul!(x4736, x4742, 64);
    let x4744: BytePoly_66 = bigint_nondet_quot!(ctx, x4743, x1, 66);
    let x4745: BytePoly_32 = bigint_nondet_rem!(ctx, x4743, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4744, x1, 98), x4745, 98),
            x4743,
            98
        ),
        536459,
        4,
    )?;
    let x4746: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x4745, x4739, 32), 32), x1, 32);
    let x4747: BytePoly_32 = bigint_nondet_quot!(ctx, x4746, x1, 32);
    let x4748: BytePoly_32 = bigint_nondet_rem!(ctx, x4746, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4747, x1, 64), x4748, 64),
            x4746,
            64
        ),
        260103,
        4,
    )?;
    let x4749: BytePoly_32 = bigint_add!(bigint_sub!(x5, x4742, 32), x1, 32);
    let x4750: BytePoly_32 = bigint_nondet_inv!(ctx, x4749, x1, 32);
    let x4751: BytePoly_64 = bigint_mul!(x4749, x4750, 64);
    let x4752: BytePoly_66 = bigint_nondet_quot!(ctx, x4751, x1, 66);
    let x4753: BytePoly_32 = bigint_nondet_rem!(ctx, x4751, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4752, x1, 98), x4753, 98),
            x4751,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x4753, x0, 32), 34, 1)?;
    let x4754: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x4748, 32), x1, 32), x4750, 64);
    let x4755: BytePoly_66 = bigint_nondet_quot!(ctx, x4754, x1, 66);
    let x4756: BytePoly_32 = bigint_nondet_rem!(ctx, x4754, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4755, x1, 98), x4756, 98),
            x4754,
            98
        ),
        536459,
        4,
    )?;
    let x4757: BytePoly_64 = bigint_add!(
        bigint_sub!(x4748, bigint_mul!(x4756, x4742, 64), 64),
        x1,
        64
    );
    let x4758: BytePoly_64 = bigint_nondet_quot!(ctx, x4757, x1, 64);
    let x4759: BytePoly_32 = bigint_nondet_rem!(ctx, x4757, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4758, x1, 96), x4759, 96),
            x4757,
            96
        ),
        520203,
        4,
    )?;
    let x4760: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x4756, x4756, 64), x4742, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x4761: BytePoly_66 = bigint_nondet_quot!(ctx, x4760, x1, 66);
    let x4762: BytePoly_32 = bigint_nondet_rem!(ctx, x4760, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4761, x1, 98), x4762, 98),
            x4760,
            98
        ),
        536459,
        4,
    )?;
    let x4763: BytePoly_64 = bigint_mul!(x4756, x4762, 64);
    let x4764: BytePoly_66 = bigint_nondet_quot!(ctx, x4763, x1, 66);
    let x4765: BytePoly_32 = bigint_nondet_rem!(ctx, x4763, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4764, x1, 98), x4765, 98),
            x4763,
            98
        ),
        536459,
        4,
    )?;
    let x4766: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x4765, x4759, 32), 32), x1, 32);
    let x4767: BytePoly_32 = bigint_nondet_quot!(ctx, x4766, x1, 32);
    let x4768: BytePoly_32 = bigint_nondet_rem!(ctx, x4766, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4767, x1, 64), x4768, 64),
            x4766,
            64
        ),
        260103,
        4,
    )?;
    let x4769: BytePoly_32 = bigint_add!(bigint_sub!(x5, x4762, 32), x1, 32);
    let x4770: BytePoly_32 = bigint_nondet_inv!(ctx, x4769, x1, 32);
    let x4771: BytePoly_64 = bigint_mul!(x4769, x4770, 64);
    let x4772: BytePoly_66 = bigint_nondet_quot!(ctx, x4771, x1, 66);
    let x4773: BytePoly_32 = bigint_nondet_rem!(ctx, x4771, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4772, x1, 98), x4773, 98),
            x4771,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x4773, x0, 32), 34, 1)?;
    let x4774: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x4768, 32), x1, 32), x4770, 64);
    let x4775: BytePoly_66 = bigint_nondet_quot!(ctx, x4774, x1, 66);
    let x4776: BytePoly_32 = bigint_nondet_rem!(ctx, x4774, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4775, x1, 98), x4776, 98),
            x4774,
            98
        ),
        536459,
        4,
    )?;
    let x4777: BytePoly_64 = bigint_add!(
        bigint_sub!(x4768, bigint_mul!(x4776, x4762, 64), 64),
        x1,
        64
    );
    let x4778: BytePoly_64 = bigint_nondet_quot!(ctx, x4777, x1, 64);
    let x4779: BytePoly_32 = bigint_nondet_rem!(ctx, x4777, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4778, x1, 96), x4779, 96),
            x4777,
            96
        ),
        520203,
        4,
    )?;
    let x4780: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x4776, x4776, 64), x4762, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x4781: BytePoly_66 = bigint_nondet_quot!(ctx, x4780, x1, 66);
    let x4782: BytePoly_32 = bigint_nondet_rem!(ctx, x4780, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4781, x1, 98), x4782, 98),
            x4780,
            98
        ),
        536459,
        4,
    )?;
    let x4783: BytePoly_64 = bigint_mul!(x4776, x4782, 64);
    let x4784: BytePoly_66 = bigint_nondet_quot!(ctx, x4783, x1, 66);
    let x4785: BytePoly_32 = bigint_nondet_rem!(ctx, x4783, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4784, x1, 98), x4785, 98),
            x4783,
            98
        ),
        536459,
        4,
    )?;
    let x4786: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x4785, x4779, 32), 32), x1, 32);
    let x4787: BytePoly_32 = bigint_nondet_quot!(ctx, x4786, x1, 32);
    let x4788: BytePoly_32 = bigint_nondet_rem!(ctx, x4786, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4787, x1, 64), x4788, 64),
            x4786,
            64
        ),
        260103,
        4,
    )?;
    let x4789: BytePoly_32 = bigint_add!(bigint_sub!(x5, x4782, 32), x1, 32);
    let x4790: BytePoly_32 = bigint_nondet_inv!(ctx, x4789, x1, 32);
    let x4791: BytePoly_64 = bigint_mul!(x4789, x4790, 64);
    let x4792: BytePoly_66 = bigint_nondet_quot!(ctx, x4791, x1, 66);
    let x4793: BytePoly_32 = bigint_nondet_rem!(ctx, x4791, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4792, x1, 98), x4793, 98),
            x4791,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x4793, x0, 32), 34, 1)?;
    let x4794: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x4788, 32), x1, 32), x4790, 64);
    let x4795: BytePoly_66 = bigint_nondet_quot!(ctx, x4794, x1, 66);
    let x4796: BytePoly_32 = bigint_nondet_rem!(ctx, x4794, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4795, x1, 98), x4796, 98),
            x4794,
            98
        ),
        536459,
        4,
    )?;
    let x4797: BytePoly_64 = bigint_add!(
        bigint_sub!(x4788, bigint_mul!(x4796, x4782, 64), 64),
        x1,
        64
    );
    let x4798: BytePoly_64 = bigint_nondet_quot!(ctx, x4797, x1, 64);
    let x4799: BytePoly_32 = bigint_nondet_rem!(ctx, x4797, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4798, x1, 96), x4799, 96),
            x4797,
            96
        ),
        520203,
        4,
    )?;
    let x4800: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x4796, x4796, 64), x4782, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x4801: BytePoly_66 = bigint_nondet_quot!(ctx, x4800, x1, 66);
    let x4802: BytePoly_32 = bigint_nondet_rem!(ctx, x4800, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4801, x1, 98), x4802, 98),
            x4800,
            98
        ),
        536459,
        4,
    )?;
    let x4803: BytePoly_64 = bigint_mul!(x4796, x4802, 64);
    let x4804: BytePoly_66 = bigint_nondet_quot!(ctx, x4803, x1, 66);
    let x4805: BytePoly_32 = bigint_nondet_rem!(ctx, x4803, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4804, x1, 98), x4805, 98),
            x4803,
            98
        ),
        536459,
        4,
    )?;
    let x4806: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x4805, x4799, 32), 32), x1, 32);
    let x4807: BytePoly_32 = bigint_nondet_quot!(ctx, x4806, x1, 32);
    let x4808: BytePoly_32 = bigint_nondet_rem!(ctx, x4806, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4807, x1, 64), x4808, 64),
            x4806,
            64
        ),
        260103,
        4,
    )?;
    let x4809: BytePoly_32 = bigint_add!(bigint_sub!(x5, x4802, 32), x1, 32);
    let x4810: BytePoly_32 = bigint_nondet_inv!(ctx, x4809, x1, 32);
    let x4811: BytePoly_64 = bigint_mul!(x4809, x4810, 64);
    let x4812: BytePoly_66 = bigint_nondet_quot!(ctx, x4811, x1, 66);
    let x4813: BytePoly_32 = bigint_nondet_rem!(ctx, x4811, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4812, x1, 98), x4813, 98),
            x4811,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x4813, x0, 32), 34, 1)?;
    let x4814: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x4808, 32), x1, 32), x4810, 64);
    let x4815: BytePoly_66 = bigint_nondet_quot!(ctx, x4814, x1, 66);
    let x4816: BytePoly_32 = bigint_nondet_rem!(ctx, x4814, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4815, x1, 98), x4816, 98),
            x4814,
            98
        ),
        536459,
        4,
    )?;
    let x4817: BytePoly_64 = bigint_add!(
        bigint_sub!(x4808, bigint_mul!(x4816, x4802, 64), 64),
        x1,
        64
    );
    let x4818: BytePoly_64 = bigint_nondet_quot!(ctx, x4817, x1, 64);
    let x4819: BytePoly_32 = bigint_nondet_rem!(ctx, x4817, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4818, x1, 96), x4819, 96),
            x4817,
            96
        ),
        520203,
        4,
    )?;
    let x4820: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x4816, x4816, 64), x4802, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x4821: BytePoly_66 = bigint_nondet_quot!(ctx, x4820, x1, 66);
    let x4822: BytePoly_32 = bigint_nondet_rem!(ctx, x4820, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4821, x1, 98), x4822, 98),
            x4820,
            98
        ),
        536459,
        4,
    )?;
    let x4823: BytePoly_64 = bigint_mul!(x4816, x4822, 64);
    let x4824: BytePoly_66 = bigint_nondet_quot!(ctx, x4823, x1, 66);
    let x4825: BytePoly_32 = bigint_nondet_rem!(ctx, x4823, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4824, x1, 98), x4825, 98),
            x4823,
            98
        ),
        536459,
        4,
    )?;
    let x4826: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x4825, x4819, 32), 32), x1, 32);
    let x4827: BytePoly_32 = bigint_nondet_quot!(ctx, x4826, x1, 32);
    let x4828: BytePoly_32 = bigint_nondet_rem!(ctx, x4826, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4827, x1, 64), x4828, 64),
            x4826,
            64
        ),
        260103,
        4,
    )?;
    let x4829: BytePoly_32 = bigint_add!(bigint_sub!(x5, x4822, 32), x1, 32);
    let x4830: BytePoly_32 = bigint_nondet_inv!(ctx, x4829, x1, 32);
    let x4831: BytePoly_64 = bigint_mul!(x4829, x4830, 64);
    let x4832: BytePoly_66 = bigint_nondet_quot!(ctx, x4831, x1, 66);
    let x4833: BytePoly_32 = bigint_nondet_rem!(ctx, x4831, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4832, x1, 98), x4833, 98),
            x4831,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x4833, x0, 32), 34, 1)?;
    let x4834: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x4828, 32), x1, 32), x4830, 64);
    let x4835: BytePoly_66 = bigint_nondet_quot!(ctx, x4834, x1, 66);
    let x4836: BytePoly_32 = bigint_nondet_rem!(ctx, x4834, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4835, x1, 98), x4836, 98),
            x4834,
            98
        ),
        536459,
        4,
    )?;
    let x4837: BytePoly_64 = bigint_add!(
        bigint_sub!(x4828, bigint_mul!(x4836, x4822, 64), 64),
        x1,
        64
    );
    let x4838: BytePoly_64 = bigint_nondet_quot!(ctx, x4837, x1, 64);
    let x4839: BytePoly_32 = bigint_nondet_rem!(ctx, x4837, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4838, x1, 96), x4839, 96),
            x4837,
            96
        ),
        520203,
        4,
    )?;
    let x4840: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x4836, x4836, 64), x4822, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x4841: BytePoly_66 = bigint_nondet_quot!(ctx, x4840, x1, 66);
    let x4842: BytePoly_32 = bigint_nondet_rem!(ctx, x4840, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4841, x1, 98), x4842, 98),
            x4840,
            98
        ),
        536459,
        4,
    )?;
    let x4843: BytePoly_64 = bigint_mul!(x4836, x4842, 64);
    let x4844: BytePoly_66 = bigint_nondet_quot!(ctx, x4843, x1, 66);
    let x4845: BytePoly_32 = bigint_nondet_rem!(ctx, x4843, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4844, x1, 98), x4845, 98),
            x4843,
            98
        ),
        536459,
        4,
    )?;
    let x4846: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x4845, x4839, 32), 32), x1, 32);
    let x4847: BytePoly_32 = bigint_nondet_quot!(ctx, x4846, x1, 32);
    let x4848: BytePoly_32 = bigint_nondet_rem!(ctx, x4846, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4847, x1, 64), x4848, 64),
            x4846,
            64
        ),
        260103,
        4,
    )?;
    let x4849: BytePoly_32 = bigint_add!(bigint_sub!(x5, x4842, 32), x1, 32);
    let x4850: BytePoly_32 = bigint_nondet_inv!(ctx, x4849, x1, 32);
    let x4851: BytePoly_64 = bigint_mul!(x4849, x4850, 64);
    let x4852: BytePoly_66 = bigint_nondet_quot!(ctx, x4851, x1, 66);
    let x4853: BytePoly_32 = bigint_nondet_rem!(ctx, x4851, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4852, x1, 98), x4853, 98),
            x4851,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x4853, x0, 32), 34, 1)?;
    let x4854: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x4848, 32), x1, 32), x4850, 64);
    let x4855: BytePoly_66 = bigint_nondet_quot!(ctx, x4854, x1, 66);
    let x4856: BytePoly_32 = bigint_nondet_rem!(ctx, x4854, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4855, x1, 98), x4856, 98),
            x4854,
            98
        ),
        536459,
        4,
    )?;
    let x4857: BytePoly_64 = bigint_add!(
        bigint_sub!(x4848, bigint_mul!(x4856, x4842, 64), 64),
        x1,
        64
    );
    let x4858: BytePoly_64 = bigint_nondet_quot!(ctx, x4857, x1, 64);
    let x4859: BytePoly_32 = bigint_nondet_rem!(ctx, x4857, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4858, x1, 96), x4859, 96),
            x4857,
            96
        ),
        520203,
        4,
    )?;
    let x4860: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x4856, x4856, 64), x4842, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x4861: BytePoly_66 = bigint_nondet_quot!(ctx, x4860, x1, 66);
    let x4862: BytePoly_32 = bigint_nondet_rem!(ctx, x4860, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4861, x1, 98), x4862, 98),
            x4860,
            98
        ),
        536459,
        4,
    )?;
    let x4863: BytePoly_64 = bigint_mul!(x4856, x4862, 64);
    let x4864: BytePoly_66 = bigint_nondet_quot!(ctx, x4863, x1, 66);
    let x4865: BytePoly_32 = bigint_nondet_rem!(ctx, x4863, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4864, x1, 98), x4865, 98),
            x4863,
            98
        ),
        536459,
        4,
    )?;
    let x4866: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x4865, x4859, 32), 32), x1, 32);
    let x4867: BytePoly_32 = bigint_nondet_quot!(ctx, x4866, x1, 32);
    let x4868: BytePoly_32 = bigint_nondet_rem!(ctx, x4866, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4867, x1, 64), x4868, 64),
            x4866,
            64
        ),
        260103,
        4,
    )?;
    let x4869: BytePoly_32 = bigint_add!(bigint_sub!(x5, x4862, 32), x1, 32);
    let x4870: BytePoly_32 = bigint_nondet_inv!(ctx, x4869, x1, 32);
    let x4871: BytePoly_64 = bigint_mul!(x4869, x4870, 64);
    let x4872: BytePoly_66 = bigint_nondet_quot!(ctx, x4871, x1, 66);
    let x4873: BytePoly_32 = bigint_nondet_rem!(ctx, x4871, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4872, x1, 98), x4873, 98),
            x4871,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x4873, x0, 32), 34, 1)?;
    let x4874: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x4868, 32), x1, 32), x4870, 64);
    let x4875: BytePoly_66 = bigint_nondet_quot!(ctx, x4874, x1, 66);
    let x4876: BytePoly_32 = bigint_nondet_rem!(ctx, x4874, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4875, x1, 98), x4876, 98),
            x4874,
            98
        ),
        536459,
        4,
    )?;
    let x4877: BytePoly_64 = bigint_add!(
        bigint_sub!(x4868, bigint_mul!(x4876, x4862, 64), 64),
        x1,
        64
    );
    let x4878: BytePoly_64 = bigint_nondet_quot!(ctx, x4877, x1, 64);
    let x4879: BytePoly_32 = bigint_nondet_rem!(ctx, x4877, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4878, x1, 96), x4879, 96),
            x4877,
            96
        ),
        520203,
        4,
    )?;
    let x4880: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x4876, x4876, 64), x4862, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x4881: BytePoly_66 = bigint_nondet_quot!(ctx, x4880, x1, 66);
    let x4882: BytePoly_32 = bigint_nondet_rem!(ctx, x4880, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4881, x1, 98), x4882, 98),
            x4880,
            98
        ),
        536459,
        4,
    )?;
    let x4883: BytePoly_64 = bigint_mul!(x4876, x4882, 64);
    let x4884: BytePoly_66 = bigint_nondet_quot!(ctx, x4883, x1, 66);
    let x4885: BytePoly_32 = bigint_nondet_rem!(ctx, x4883, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4884, x1, 98), x4885, 98),
            x4883,
            98
        ),
        536459,
        4,
    )?;
    let x4886: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x4885, x4879, 32), 32), x1, 32);
    let x4887: BytePoly_32 = bigint_nondet_quot!(ctx, x4886, x1, 32);
    let x4888: BytePoly_32 = bigint_nondet_rem!(ctx, x4886, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4887, x1, 64), x4888, 64),
            x4886,
            64
        ),
        260103,
        4,
    )?;
    let x4889: BytePoly_32 = bigint_add!(bigint_sub!(x5, x4882, 32), x1, 32);
    let x4890: BytePoly_32 = bigint_nondet_inv!(ctx, x4889, x1, 32);
    let x4891: BytePoly_64 = bigint_mul!(x4889, x4890, 64);
    let x4892: BytePoly_66 = bigint_nondet_quot!(ctx, x4891, x1, 66);
    let x4893: BytePoly_32 = bigint_nondet_rem!(ctx, x4891, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4892, x1, 98), x4893, 98),
            x4891,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x4893, x0, 32), 34, 1)?;
    let x4894: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x4888, 32), x1, 32), x4890, 64);
    let x4895: BytePoly_66 = bigint_nondet_quot!(ctx, x4894, x1, 66);
    let x4896: BytePoly_32 = bigint_nondet_rem!(ctx, x4894, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4895, x1, 98), x4896, 98),
            x4894,
            98
        ),
        536459,
        4,
    )?;
    let x4897: BytePoly_64 = bigint_add!(
        bigint_sub!(x4888, bigint_mul!(x4896, x4882, 64), 64),
        x1,
        64
    );
    let x4898: BytePoly_64 = bigint_nondet_quot!(ctx, x4897, x1, 64);
    let x4899: BytePoly_32 = bigint_nondet_rem!(ctx, x4897, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4898, x1, 96), x4899, 96),
            x4897,
            96
        ),
        520203,
        4,
    )?;
    let x4900: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x4896, x4896, 64), x4882, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x4901: BytePoly_66 = bigint_nondet_quot!(ctx, x4900, x1, 66);
    let x4902: BytePoly_32 = bigint_nondet_rem!(ctx, x4900, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4901, x1, 98), x4902, 98),
            x4900,
            98
        ),
        536459,
        4,
    )?;
    let x4903: BytePoly_64 = bigint_mul!(x4896, x4902, 64);
    let x4904: BytePoly_66 = bigint_nondet_quot!(ctx, x4903, x1, 66);
    let x4905: BytePoly_32 = bigint_nondet_rem!(ctx, x4903, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4904, x1, 98), x4905, 98),
            x4903,
            98
        ),
        536459,
        4,
    )?;
    let x4906: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x4905, x4899, 32), 32), x1, 32);
    let x4907: BytePoly_32 = bigint_nondet_quot!(ctx, x4906, x1, 32);
    let x4908: BytePoly_32 = bigint_nondet_rem!(ctx, x4906, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4907, x1, 64), x4908, 64),
            x4906,
            64
        ),
        260103,
        4,
    )?;
    let x4909: BytePoly_32 = bigint_add!(bigint_sub!(x5, x4902, 32), x1, 32);
    let x4910: BytePoly_32 = bigint_nondet_inv!(ctx, x4909, x1, 32);
    let x4911: BytePoly_64 = bigint_mul!(x4909, x4910, 64);
    let x4912: BytePoly_66 = bigint_nondet_quot!(ctx, x4911, x1, 66);
    let x4913: BytePoly_32 = bigint_nondet_rem!(ctx, x4911, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4912, x1, 98), x4913, 98),
            x4911,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x4913, x0, 32), 34, 1)?;
    let x4914: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x4908, 32), x1, 32), x4910, 64);
    let x4915: BytePoly_66 = bigint_nondet_quot!(ctx, x4914, x1, 66);
    let x4916: BytePoly_32 = bigint_nondet_rem!(ctx, x4914, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4915, x1, 98), x4916, 98),
            x4914,
            98
        ),
        536459,
        4,
    )?;
    let x4917: BytePoly_64 = bigint_add!(
        bigint_sub!(x4908, bigint_mul!(x4916, x4902, 64), 64),
        x1,
        64
    );
    let x4918: BytePoly_64 = bigint_nondet_quot!(ctx, x4917, x1, 64);
    let x4919: BytePoly_32 = bigint_nondet_rem!(ctx, x4917, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4918, x1, 96), x4919, 96),
            x4917,
            96
        ),
        520203,
        4,
    )?;
    let x4920: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x4916, x4916, 64), x4902, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x4921: BytePoly_66 = bigint_nondet_quot!(ctx, x4920, x1, 66);
    let x4922: BytePoly_32 = bigint_nondet_rem!(ctx, x4920, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4921, x1, 98), x4922, 98),
            x4920,
            98
        ),
        536459,
        4,
    )?;
    let x4923: BytePoly_64 = bigint_mul!(x4916, x4922, 64);
    let x4924: BytePoly_66 = bigint_nondet_quot!(ctx, x4923, x1, 66);
    let x4925: BytePoly_32 = bigint_nondet_rem!(ctx, x4923, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4924, x1, 98), x4925, 98),
            x4923,
            98
        ),
        536459,
        4,
    )?;
    let x4926: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x4925, x4919, 32), 32), x1, 32);
    let x4927: BytePoly_32 = bigint_nondet_quot!(ctx, x4926, x1, 32);
    let x4928: BytePoly_32 = bigint_nondet_rem!(ctx, x4926, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4927, x1, 64), x4928, 64),
            x4926,
            64
        ),
        260103,
        4,
    )?;
    let x4929: BytePoly_32 = bigint_add!(bigint_sub!(x5, x4922, 32), x1, 32);
    let x4930: BytePoly_32 = bigint_nondet_inv!(ctx, x4929, x1, 32);
    let x4931: BytePoly_64 = bigint_mul!(x4929, x4930, 64);
    let x4932: BytePoly_66 = bigint_nondet_quot!(ctx, x4931, x1, 66);
    let x4933: BytePoly_32 = bigint_nondet_rem!(ctx, x4931, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4932, x1, 98), x4933, 98),
            x4931,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x4933, x0, 32), 34, 1)?;
    let x4934: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x4928, 32), x1, 32), x4930, 64);
    let x4935: BytePoly_66 = bigint_nondet_quot!(ctx, x4934, x1, 66);
    let x4936: BytePoly_32 = bigint_nondet_rem!(ctx, x4934, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4935, x1, 98), x4936, 98),
            x4934,
            98
        ),
        536459,
        4,
    )?;
    let x4937: BytePoly_64 = bigint_add!(
        bigint_sub!(x4928, bigint_mul!(x4936, x4922, 64), 64),
        x1,
        64
    );
    let x4938: BytePoly_64 = bigint_nondet_quot!(ctx, x4937, x1, 64);
    let x4939: BytePoly_32 = bigint_nondet_rem!(ctx, x4937, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4938, x1, 96), x4939, 96),
            x4937,
            96
        ),
        520203,
        4,
    )?;
    let x4940: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x4936, x4936, 64), x4922, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x4941: BytePoly_66 = bigint_nondet_quot!(ctx, x4940, x1, 66);
    let x4942: BytePoly_32 = bigint_nondet_rem!(ctx, x4940, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4941, x1, 98), x4942, 98),
            x4940,
            98
        ),
        536459,
        4,
    )?;
    let x4943: BytePoly_64 = bigint_mul!(x4936, x4942, 64);
    let x4944: BytePoly_66 = bigint_nondet_quot!(ctx, x4943, x1, 66);
    let x4945: BytePoly_32 = bigint_nondet_rem!(ctx, x4943, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4944, x1, 98), x4945, 98),
            x4943,
            98
        ),
        536459,
        4,
    )?;
    let x4946: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x4945, x4939, 32), 32), x1, 32);
    let x4947: BytePoly_32 = bigint_nondet_quot!(ctx, x4946, x1, 32);
    let x4948: BytePoly_32 = bigint_nondet_rem!(ctx, x4946, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4947, x1, 64), x4948, 64),
            x4946,
            64
        ),
        260103,
        4,
    )?;
    let x4949: BytePoly_32 = bigint_add!(bigint_sub!(x5, x4942, 32), x1, 32);
    let x4950: BytePoly_32 = bigint_nondet_inv!(ctx, x4949, x1, 32);
    let x4951: BytePoly_64 = bigint_mul!(x4949, x4950, 64);
    let x4952: BytePoly_66 = bigint_nondet_quot!(ctx, x4951, x1, 66);
    let x4953: BytePoly_32 = bigint_nondet_rem!(ctx, x4951, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4952, x1, 98), x4953, 98),
            x4951,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x4953, x0, 32), 34, 1)?;
    let x4954: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x4948, 32), x1, 32), x4950, 64);
    let x4955: BytePoly_66 = bigint_nondet_quot!(ctx, x4954, x1, 66);
    let x4956: BytePoly_32 = bigint_nondet_rem!(ctx, x4954, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4955, x1, 98), x4956, 98),
            x4954,
            98
        ),
        536459,
        4,
    )?;
    let x4957: BytePoly_64 = bigint_add!(
        bigint_sub!(x4948, bigint_mul!(x4956, x4942, 64), 64),
        x1,
        64
    );
    let x4958: BytePoly_64 = bigint_nondet_quot!(ctx, x4957, x1, 64);
    let x4959: BytePoly_32 = bigint_nondet_rem!(ctx, x4957, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4958, x1, 96), x4959, 96),
            x4957,
            96
        ),
        520203,
        4,
    )?;
    let x4960: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x4956, x4956, 64), x4942, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x4961: BytePoly_66 = bigint_nondet_quot!(ctx, x4960, x1, 66);
    let x4962: BytePoly_32 = bigint_nondet_rem!(ctx, x4960, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4961, x1, 98), x4962, 98),
            x4960,
            98
        ),
        536459,
        4,
    )?;
    let x4963: BytePoly_64 = bigint_mul!(x4956, x4962, 64);
    let x4964: BytePoly_66 = bigint_nondet_quot!(ctx, x4963, x1, 66);
    let x4965: BytePoly_32 = bigint_nondet_rem!(ctx, x4963, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4964, x1, 98), x4965, 98),
            x4963,
            98
        ),
        536459,
        4,
    )?;
    let x4966: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x4965, x4959, 32), 32), x1, 32);
    let x4967: BytePoly_32 = bigint_nondet_quot!(ctx, x4966, x1, 32);
    let x4968: BytePoly_32 = bigint_nondet_rem!(ctx, x4966, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4967, x1, 64), x4968, 64),
            x4966,
            64
        ),
        260103,
        4,
    )?;
    let x4969: BytePoly_32 = bigint_add!(bigint_sub!(x5, x4962, 32), x1, 32);
    let x4970: BytePoly_32 = bigint_nondet_inv!(ctx, x4969, x1, 32);
    let x4971: BytePoly_64 = bigint_mul!(x4969, x4970, 64);
    let x4972: BytePoly_66 = bigint_nondet_quot!(ctx, x4971, x1, 66);
    let x4973: BytePoly_32 = bigint_nondet_rem!(ctx, x4971, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4972, x1, 98), x4973, 98),
            x4971,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x4973, x0, 32), 34, 1)?;
    let x4974: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x4968, 32), x1, 32), x4970, 64);
    let x4975: BytePoly_66 = bigint_nondet_quot!(ctx, x4974, x1, 66);
    let x4976: BytePoly_32 = bigint_nondet_rem!(ctx, x4974, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4975, x1, 98), x4976, 98),
            x4974,
            98
        ),
        536459,
        4,
    )?;
    let x4977: BytePoly_64 = bigint_add!(
        bigint_sub!(x4968, bigint_mul!(x4976, x4962, 64), 64),
        x1,
        64
    );
    let x4978: BytePoly_64 = bigint_nondet_quot!(ctx, x4977, x1, 64);
    let x4979: BytePoly_32 = bigint_nondet_rem!(ctx, x4977, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4978, x1, 96), x4979, 96),
            x4977,
            96
        ),
        520203,
        4,
    )?;
    let x4980: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x4976, x4976, 64), x4962, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x4981: BytePoly_66 = bigint_nondet_quot!(ctx, x4980, x1, 66);
    let x4982: BytePoly_32 = bigint_nondet_rem!(ctx, x4980, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4981, x1, 98), x4982, 98),
            x4980,
            98
        ),
        536459,
        4,
    )?;
    let x4983: BytePoly_64 = bigint_mul!(x4976, x4982, 64);
    let x4984: BytePoly_66 = bigint_nondet_quot!(ctx, x4983, x1, 66);
    let x4985: BytePoly_32 = bigint_nondet_rem!(ctx, x4983, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4984, x1, 98), x4985, 98),
            x4983,
            98
        ),
        536459,
        4,
    )?;
    let x4986: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x4985, x4979, 32), 32), x1, 32);
    let x4987: BytePoly_32 = bigint_nondet_quot!(ctx, x4986, x1, 32);
    let x4988: BytePoly_32 = bigint_nondet_rem!(ctx, x4986, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4987, x1, 64), x4988, 64),
            x4986,
            64
        ),
        260103,
        4,
    )?;
    let x4989: BytePoly_32 = bigint_add!(bigint_sub!(x5, x4982, 32), x1, 32);
    let x4990: BytePoly_32 = bigint_nondet_inv!(ctx, x4989, x1, 32);
    let x4991: BytePoly_64 = bigint_mul!(x4989, x4990, 64);
    let x4992: BytePoly_66 = bigint_nondet_quot!(ctx, x4991, x1, 66);
    let x4993: BytePoly_32 = bigint_nondet_rem!(ctx, x4991, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4992, x1, 98), x4993, 98),
            x4991,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x4993, x0, 32), 34, 1)?;
    let x4994: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x4988, 32), x1, 32), x4990, 64);
    let x4995: BytePoly_66 = bigint_nondet_quot!(ctx, x4994, x1, 66);
    let x4996: BytePoly_32 = bigint_nondet_rem!(ctx, x4994, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4995, x1, 98), x4996, 98),
            x4994,
            98
        ),
        536459,
        4,
    )?;
    let x4997: BytePoly_64 = bigint_add!(
        bigint_sub!(x4988, bigint_mul!(x4996, x4982, 64), 64),
        x1,
        64
    );
    let x4998: BytePoly_64 = bigint_nondet_quot!(ctx, x4997, x1, 64);
    let x4999: BytePoly_32 = bigint_nondet_rem!(ctx, x4997, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x4998, x1, 96), x4999, 96),
            x4997,
            96
        ),
        520203,
        4,
    )?;
    let x5000: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x4996, x4996, 64), x4982, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x5001: BytePoly_66 = bigint_nondet_quot!(ctx, x5000, x1, 66);
    let x5002: BytePoly_32 = bigint_nondet_rem!(ctx, x5000, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5001, x1, 98), x5002, 98),
            x5000,
            98
        ),
        536459,
        4,
    )?;
    let x5003: BytePoly_64 = bigint_mul!(x4996, x5002, 64);
    let x5004: BytePoly_66 = bigint_nondet_quot!(ctx, x5003, x1, 66);
    let x5005: BytePoly_32 = bigint_nondet_rem!(ctx, x5003, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5004, x1, 98), x5005, 98),
            x5003,
            98
        ),
        536459,
        4,
    )?;
    let x5006: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x5005, x4999, 32), 32), x1, 32);
    let x5007: BytePoly_32 = bigint_nondet_quot!(ctx, x5006, x1, 32);
    let x5008: BytePoly_32 = bigint_nondet_rem!(ctx, x5006, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5007, x1, 64), x5008, 64),
            x5006,
            64
        ),
        260103,
        4,
    )?;
    let x5009: BytePoly_32 = bigint_add!(bigint_sub!(x5, x5002, 32), x1, 32);
    let x5010: BytePoly_32 = bigint_nondet_inv!(ctx, x5009, x1, 32);
    let x5011: BytePoly_64 = bigint_mul!(x5009, x5010, 64);
    let x5012: BytePoly_66 = bigint_nondet_quot!(ctx, x5011, x1, 66);
    let x5013: BytePoly_32 = bigint_nondet_rem!(ctx, x5011, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5012, x1, 98), x5013, 98),
            x5011,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x5013, x0, 32), 34, 1)?;
    let x5014: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x5008, 32), x1, 32), x5010, 64);
    let x5015: BytePoly_66 = bigint_nondet_quot!(ctx, x5014, x1, 66);
    let x5016: BytePoly_32 = bigint_nondet_rem!(ctx, x5014, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5015, x1, 98), x5016, 98),
            x5014,
            98
        ),
        536459,
        4,
    )?;
    let x5017: BytePoly_64 = bigint_add!(
        bigint_sub!(x5008, bigint_mul!(x5016, x5002, 64), 64),
        x1,
        64
    );
    let x5018: BytePoly_64 = bigint_nondet_quot!(ctx, x5017, x1, 64);
    let x5019: BytePoly_32 = bigint_nondet_rem!(ctx, x5017, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5018, x1, 96), x5019, 96),
            x5017,
            96
        ),
        520203,
        4,
    )?;
    let x5020: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x5016, x5016, 64), x5002, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x5021: BytePoly_66 = bigint_nondet_quot!(ctx, x5020, x1, 66);
    let x5022: BytePoly_32 = bigint_nondet_rem!(ctx, x5020, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5021, x1, 98), x5022, 98),
            x5020,
            98
        ),
        536459,
        4,
    )?;
    let x5023: BytePoly_64 = bigint_mul!(x5016, x5022, 64);
    let x5024: BytePoly_66 = bigint_nondet_quot!(ctx, x5023, x1, 66);
    let x5025: BytePoly_32 = bigint_nondet_rem!(ctx, x5023, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5024, x1, 98), x5025, 98),
            x5023,
            98
        ),
        536459,
        4,
    )?;
    let x5026: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x5025, x5019, 32), 32), x1, 32);
    let x5027: BytePoly_32 = bigint_nondet_quot!(ctx, x5026, x1, 32);
    let x5028: BytePoly_32 = bigint_nondet_rem!(ctx, x5026, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5027, x1, 64), x5028, 64),
            x5026,
            64
        ),
        260103,
        4,
    )?;
    let x5029: BytePoly_32 = bigint_add!(bigint_sub!(x5, x5022, 32), x1, 32);
    let x5030: BytePoly_32 = bigint_nondet_inv!(ctx, x5029, x1, 32);
    let x5031: BytePoly_64 = bigint_mul!(x5029, x5030, 64);
    let x5032: BytePoly_66 = bigint_nondet_quot!(ctx, x5031, x1, 66);
    let x5033: BytePoly_32 = bigint_nondet_rem!(ctx, x5031, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5032, x1, 98), x5033, 98),
            x5031,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x5033, x0, 32), 34, 1)?;
    let x5034: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x5028, 32), x1, 32), x5030, 64);
    let x5035: BytePoly_66 = bigint_nondet_quot!(ctx, x5034, x1, 66);
    let x5036: BytePoly_32 = bigint_nondet_rem!(ctx, x5034, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5035, x1, 98), x5036, 98),
            x5034,
            98
        ),
        536459,
        4,
    )?;
    let x5037: BytePoly_64 = bigint_add!(
        bigint_sub!(x5028, bigint_mul!(x5036, x5022, 64), 64),
        x1,
        64
    );
    let x5038: BytePoly_64 = bigint_nondet_quot!(ctx, x5037, x1, 64);
    let x5039: BytePoly_32 = bigint_nondet_rem!(ctx, x5037, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5038, x1, 96), x5039, 96),
            x5037,
            96
        ),
        520203,
        4,
    )?;
    let x5040: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x5036, x5036, 64), x5022, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x5041: BytePoly_66 = bigint_nondet_quot!(ctx, x5040, x1, 66);
    let x5042: BytePoly_32 = bigint_nondet_rem!(ctx, x5040, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5041, x1, 98), x5042, 98),
            x5040,
            98
        ),
        536459,
        4,
    )?;
    let x5043: BytePoly_64 = bigint_mul!(x5036, x5042, 64);
    let x5044: BytePoly_66 = bigint_nondet_quot!(ctx, x5043, x1, 66);
    let x5045: BytePoly_32 = bigint_nondet_rem!(ctx, x5043, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5044, x1, 98), x5045, 98),
            x5043,
            98
        ),
        536459,
        4,
    )?;
    let x5046: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x5045, x5039, 32), 32), x1, 32);
    let x5047: BytePoly_32 = bigint_nondet_quot!(ctx, x5046, x1, 32);
    let x5048: BytePoly_32 = bigint_nondet_rem!(ctx, x5046, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5047, x1, 64), x5048, 64),
            x5046,
            64
        ),
        260103,
        4,
    )?;
    let x5049: BytePoly_32 = bigint_add!(bigint_sub!(x5, x5042, 32), x1, 32);
    let x5050: BytePoly_32 = bigint_nondet_inv!(ctx, x5049, x1, 32);
    let x5051: BytePoly_64 = bigint_mul!(x5049, x5050, 64);
    let x5052: BytePoly_66 = bigint_nondet_quot!(ctx, x5051, x1, 66);
    let x5053: BytePoly_32 = bigint_nondet_rem!(ctx, x5051, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5052, x1, 98), x5053, 98),
            x5051,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x5053, x0, 32), 34, 1)?;
    let x5054: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x5048, 32), x1, 32), x5050, 64);
    let x5055: BytePoly_66 = bigint_nondet_quot!(ctx, x5054, x1, 66);
    let x5056: BytePoly_32 = bigint_nondet_rem!(ctx, x5054, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5055, x1, 98), x5056, 98),
            x5054,
            98
        ),
        536459,
        4,
    )?;
    let x5057: BytePoly_64 = bigint_add!(
        bigint_sub!(x5048, bigint_mul!(x5056, x5042, 64), 64),
        x1,
        64
    );
    let x5058: BytePoly_64 = bigint_nondet_quot!(ctx, x5057, x1, 64);
    let x5059: BytePoly_32 = bigint_nondet_rem!(ctx, x5057, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5058, x1, 96), x5059, 96),
            x5057,
            96
        ),
        520203,
        4,
    )?;
    let x5060: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x5056, x5056, 64), x5042, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x5061: BytePoly_66 = bigint_nondet_quot!(ctx, x5060, x1, 66);
    let x5062: BytePoly_32 = bigint_nondet_rem!(ctx, x5060, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5061, x1, 98), x5062, 98),
            x5060,
            98
        ),
        536459,
        4,
    )?;
    let x5063: BytePoly_64 = bigint_mul!(x5056, x5062, 64);
    let x5064: BytePoly_66 = bigint_nondet_quot!(ctx, x5063, x1, 66);
    let x5065: BytePoly_32 = bigint_nondet_rem!(ctx, x5063, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5064, x1, 98), x5065, 98),
            x5063,
            98
        ),
        536459,
        4,
    )?;
    let x5066: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x5065, x5059, 32), 32), x1, 32);
    let x5067: BytePoly_32 = bigint_nondet_quot!(ctx, x5066, x1, 32);
    let x5068: BytePoly_32 = bigint_nondet_rem!(ctx, x5066, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5067, x1, 64), x5068, 64),
            x5066,
            64
        ),
        260103,
        4,
    )?;
    let x5069: BytePoly_32 = bigint_add!(bigint_sub!(x5, x5062, 32), x1, 32);
    let x5070: BytePoly_32 = bigint_nondet_inv!(ctx, x5069, x1, 32);
    let x5071: BytePoly_64 = bigint_mul!(x5069, x5070, 64);
    let x5072: BytePoly_66 = bigint_nondet_quot!(ctx, x5071, x1, 66);
    let x5073: BytePoly_32 = bigint_nondet_rem!(ctx, x5071, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5072, x1, 98), x5073, 98),
            x5071,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x5073, x0, 32), 34, 1)?;
    let x5074: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x5068, 32), x1, 32), x5070, 64);
    let x5075: BytePoly_66 = bigint_nondet_quot!(ctx, x5074, x1, 66);
    let x5076: BytePoly_32 = bigint_nondet_rem!(ctx, x5074, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5075, x1, 98), x5076, 98),
            x5074,
            98
        ),
        536459,
        4,
    )?;
    let x5077: BytePoly_64 = bigint_add!(
        bigint_sub!(x5068, bigint_mul!(x5076, x5062, 64), 64),
        x1,
        64
    );
    let x5078: BytePoly_64 = bigint_nondet_quot!(ctx, x5077, x1, 64);
    let x5079: BytePoly_32 = bigint_nondet_rem!(ctx, x5077, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5078, x1, 96), x5079, 96),
            x5077,
            96
        ),
        520203,
        4,
    )?;
    let x5080: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x5076, x5076, 64), x5062, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x5081: BytePoly_66 = bigint_nondet_quot!(ctx, x5080, x1, 66);
    let x5082: BytePoly_32 = bigint_nondet_rem!(ctx, x5080, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5081, x1, 98), x5082, 98),
            x5080,
            98
        ),
        536459,
        4,
    )?;
    let x5083: BytePoly_64 = bigint_mul!(x5076, x5082, 64);
    let x5084: BytePoly_66 = bigint_nondet_quot!(ctx, x5083, x1, 66);
    let x5085: BytePoly_32 = bigint_nondet_rem!(ctx, x5083, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5084, x1, 98), x5085, 98),
            x5083,
            98
        ),
        536459,
        4,
    )?;
    let x5086: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x5085, x5079, 32), 32), x1, 32);
    let x5087: BytePoly_32 = bigint_nondet_quot!(ctx, x5086, x1, 32);
    let x5088: BytePoly_32 = bigint_nondet_rem!(ctx, x5086, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5087, x1, 64), x5088, 64),
            x5086,
            64
        ),
        260103,
        4,
    )?;
    let x5089: BytePoly_32 = bigint_add!(bigint_sub!(x5, x5082, 32), x1, 32);
    let x5090: BytePoly_32 = bigint_nondet_inv!(ctx, x5089, x1, 32);
    let x5091: BytePoly_64 = bigint_mul!(x5089, x5090, 64);
    let x5092: BytePoly_66 = bigint_nondet_quot!(ctx, x5091, x1, 66);
    let x5093: BytePoly_32 = bigint_nondet_rem!(ctx, x5091, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5092, x1, 98), x5093, 98),
            x5091,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x5093, x0, 32), 34, 1)?;
    let x5094: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x5088, 32), x1, 32), x5090, 64);
    let x5095: BytePoly_66 = bigint_nondet_quot!(ctx, x5094, x1, 66);
    let x5096: BytePoly_32 = bigint_nondet_rem!(ctx, x5094, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5095, x1, 98), x5096, 98),
            x5094,
            98
        ),
        536459,
        4,
    )?;
    let x5097: BytePoly_64 = bigint_add!(
        bigint_sub!(x5088, bigint_mul!(x5096, x5082, 64), 64),
        x1,
        64
    );
    let x5098: BytePoly_64 = bigint_nondet_quot!(ctx, x5097, x1, 64);
    let x5099: BytePoly_32 = bigint_nondet_rem!(ctx, x5097, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5098, x1, 96), x5099, 96),
            x5097,
            96
        ),
        520203,
        4,
    )?;
    let x5100: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x5096, x5096, 64), x5082, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x5101: BytePoly_66 = bigint_nondet_quot!(ctx, x5100, x1, 66);
    let x5102: BytePoly_32 = bigint_nondet_rem!(ctx, x5100, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5101, x1, 98), x5102, 98),
            x5100,
            98
        ),
        536459,
        4,
    )?;
    let x5103: BytePoly_64 = bigint_mul!(x5096, x5102, 64);
    let x5104: BytePoly_66 = bigint_nondet_quot!(ctx, x5103, x1, 66);
    let x5105: BytePoly_32 = bigint_nondet_rem!(ctx, x5103, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5104, x1, 98), x5105, 98),
            x5103,
            98
        ),
        536459,
        4,
    )?;
    let x5106: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x5105, x5099, 32), 32), x1, 32);
    let x5107: BytePoly_32 = bigint_nondet_quot!(ctx, x5106, x1, 32);
    let x5108: BytePoly_32 = bigint_nondet_rem!(ctx, x5106, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5107, x1, 64), x5108, 64),
            x5106,
            64
        ),
        260103,
        4,
    )?;
    let x5109: BytePoly_32 = bigint_add!(bigint_sub!(x5, x5102, 32), x1, 32);
    let x5110: BytePoly_32 = bigint_nondet_inv!(ctx, x5109, x1, 32);
    let x5111: BytePoly_64 = bigint_mul!(x5109, x5110, 64);
    let x5112: BytePoly_66 = bigint_nondet_quot!(ctx, x5111, x1, 66);
    let x5113: BytePoly_32 = bigint_nondet_rem!(ctx, x5111, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5112, x1, 98), x5113, 98),
            x5111,
            98
        ),
        536459,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x5113, x0, 32), 34, 1)?;
    let x5114: BytePoly_64 =
        bigint_mul!(bigint_add!(bigint_sub!(x6, x5108, 32), x1, 32), x5110, 64);
    let x5115: BytePoly_66 = bigint_nondet_quot!(ctx, x5114, x1, 66);
    let x5116: BytePoly_32 = bigint_nondet_rem!(ctx, x5114, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5115, x1, 98), x5116, 98),
            x5114,
            98
        ),
        536459,
        4,
    )?;
    let x5117: BytePoly_64 = bigint_add!(
        bigint_sub!(x5108, bigint_mul!(x5116, x5102, 64), 64),
        x1,
        64
    );
    let x5118: BytePoly_64 = bigint_nondet_quot!(ctx, x5117, x1, 64);
    let x5119: BytePoly_32 = bigint_nondet_rem!(ctx, x5117, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5118, x1, 96), x5119, 96),
            x5117,
            96
        ),
        520203,
        4,
    )?;
    let x5120: BytePoly_64 = bigint_add!(
        bigint_sub!(
            bigint_add!(
                bigint_sub!(bigint_mul!(x5116, x5116, 64), x5102, 64),
                x1,
                64
            ),
            x5,
            64
        ),
        x1,
        64
    );
    let x5121: BytePoly_66 = bigint_nondet_quot!(ctx, x5120, x1, 66);
    let x5122: BytePoly_32 = bigint_nondet_rem!(ctx, x5120, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5121, x1, 98), x5122, 98),
            x5120,
            98
        ),
        536459,
        4,
    )?;
    let x5123: BytePoly_64 = bigint_mul!(x5116, x5122, 64);
    let x5124: BytePoly_66 = bigint_nondet_quot!(ctx, x5123, x1, 66);
    let x5125: BytePoly_32 = bigint_nondet_rem!(ctx, x5123, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5124, x1, 98), x5125, 98),
            x5123,
            98
        ),
        536459,
        4,
    )?;
    let x5126: BytePoly_32 =
        bigint_add!(bigint_sub!(x1, bigint_add!(x5125, x5119, 32), 32), x1, 32);
    let x5127: BytePoly_32 = bigint_nondet_quot!(ctx, x5126, x1, 32);
    let x5128: BytePoly_32 = bigint_nondet_rem!(ctx, x5126, x1, 32);
    eqz(
        ctx,
        &bigint_sub!(
            bigint_add!(bigint_mul!(x5127, x1, 64), x5128, 64),
            x5126,
            64
        ),
        260103,
        4,
    )?;
    eqz(ctx, &bigint_sub!(x5122, x7, 32), 34, 1)?;
    eqz(ctx, &bigint_sub!(x5128, x8, 32), 34, 1)?;
    return Ok(());
}
bigint_program_info! {rsa_256_x1, /*iters=*/1,
bigint_witness_info!(/*bits=*/256, /*label=*/0, /*public=*/ true, /*min_bits=*/255),
bigint_witness_info!(/*bits=*/256, /*label=*/1, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/2, /*public=*/ true, /*min_bits=*/0)}
bigint_program_info! {rsa_256_x2, /*iters=*/2,
bigint_witness_info!(/*bits=*/256, /*label=*/0, /*public=*/ true, /*min_bits=*/255),
bigint_witness_info!(/*bits=*/256, /*label=*/1, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/2, /*public=*/ true, /*min_bits=*/0)}
bigint_program_info! {rsa_3072_x15, /*iters=*/15,
bigint_witness_info!(/*bits=*/3072, /*label=*/0, /*public=*/ true, /*min_bits=*/3071),
bigint_witness_info!(/*bits=*/3072, /*label=*/1, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/3072, /*label=*/2, /*public=*/ true, /*min_bits=*/0)}
bigint_program_info! {nondet_inv_test_8, /*iters=*/1,
bigint_witness_info!(/*bits=*/8, /*label=*/0, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/1, /*public=*/ true, /*min_bits=*/7),
bigint_witness_info!(/*bits=*/8, /*label=*/2, /*public=*/ true, /*min_bits=*/0)}
bigint_program_info! {const_add_test_8, /*iters=*/1,
bigint_witness_info!(/*bits=*/8, /*label=*/0, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/17, /*label=*/1, /*public=*/ true, /*min_bits=*/0)}
bigint_program_info! {const_add_alt_test_16, /*iters=*/1,
bigint_witness_info!(/*bits=*/16, /*label=*/0, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/17, /*label=*/1, /*public=*/ true, /*min_bits=*/0)}
bigint_program_info! {const_mul_test_8, /*iters=*/1,
bigint_witness_info!(/*bits=*/8, /*label=*/0, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/24, /*label=*/1, /*public=*/ true, /*min_bits=*/0)}
bigint_program_info! {add_test_8, /*iters=*/1,
bigint_witness_info!(/*bits=*/8, /*label=*/0, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/1, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/9, /*label=*/2, /*public=*/ true, /*min_bits=*/0)}
bigint_program_info! {add_test_16, /*iters=*/1,
bigint_witness_info!(/*bits=*/16, /*label=*/0, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/16, /*label=*/1, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/17, /*label=*/2, /*public=*/ true, /*min_bits=*/0)}
bigint_program_info! {add_test_128, /*iters=*/1,
bigint_witness_info!(/*bits=*/128, /*label=*/0, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/128, /*label=*/1, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/129, /*label=*/2, /*public=*/ true, /*min_bits=*/0)}
bigint_program_info! {const_one_test_8, /*iters=*/1,
bigint_witness_info!(/*bits=*/8, /*label=*/0, /*public=*/ true, /*min_bits=*/0)}
bigint_program_info! {const_twobyte_test_16, /*iters=*/1,
bigint_witness_info!(/*bits=*/16, /*label=*/0, /*public=*/ true, /*min_bits=*/0)}
bigint_program_info! {sub_test_8, /*iters=*/1,
bigint_witness_info!(/*bits=*/8, /*label=*/0, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/1, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/2, /*public=*/ true, /*min_bits=*/0)}
bigint_program_info! {sub_test_128, /*iters=*/1,
bigint_witness_info!(/*bits=*/128, /*label=*/0, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/128, /*label=*/1, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/128, /*label=*/2, /*public=*/ true, /*min_bits=*/0)}
bigint_program_info! {mul_test_8, /*iters=*/1,
bigint_witness_info!(/*bits=*/8, /*label=*/0, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/1, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/16, /*label=*/2, /*public=*/ true, /*min_bits=*/0)}
bigint_program_info! {mul_test_128, /*iters=*/1,
bigint_witness_info!(/*bits=*/128, /*label=*/0, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/128, /*label=*/1, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/2, /*public=*/ true, /*min_bits=*/0)}
bigint_program_info! {reduce_test_8, /*iters=*/1,
bigint_witness_info!(/*bits=*/8, /*label=*/0, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/1, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/2, /*public=*/ true, /*min_bits=*/0)}
bigint_program_info! {reduce_test_128, /*iters=*/1,
bigint_witness_info!(/*bits=*/128, /*label=*/0, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/128, /*label=*/1, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/128, /*label=*/2, /*public=*/ true, /*min_bits=*/0)}
bigint_program_info! {ecdsa_verify_8, /*iters=*/1,
bigint_witness_info!(/*bits=*/8, /*label=*/0, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/1, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/9, /*label=*/2, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/3, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/4, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/9, /*label=*/5, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/9, /*label=*/6, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/9, /*label=*/7, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/8, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/9, /*public=*/ true, /*min_bits=*/0)}
bigint_program_info! {ecdsa_verify_32, /*iters=*/1,
bigint_witness_info!(/*bits=*/32, /*label=*/0, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/32, /*label=*/1, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/33, /*label=*/2, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/32, /*label=*/3, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/32, /*label=*/4, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/33, /*label=*/5, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/33, /*label=*/6, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/33, /*label=*/7, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/32, /*label=*/8, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/32, /*label=*/9, /*public=*/ true, /*min_bits=*/0)}
bigint_program_info! {ec_aff_add_test_8, /*iters=*/1,
bigint_witness_info!(/*bits=*/8, /*label=*/0, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/1, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/2, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/3, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/4, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/5, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/6, /*public=*/ true, /*min_bits=*/0)}
bigint_program_info! {ec_aff_add_test_256, /*iters=*/1,
bigint_witness_info!(/*bits=*/256, /*label=*/0, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/1, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/2, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/3, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/4, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/5, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/6, /*public=*/ true, /*min_bits=*/0)}
bigint_program_info! {ec_aff_doub_test_8, /*iters=*/1,
bigint_witness_info!(/*bits=*/8, /*label=*/0, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/1, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/9, /*label=*/2, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/3, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/4, /*public=*/ true, /*min_bits=*/0)}
bigint_program_info! {ec_aff_doub_test_256, /*iters=*/1,
bigint_witness_info!(/*bits=*/256, /*label=*/0, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/1, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/257, /*label=*/2, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/3, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/4, /*public=*/ true, /*min_bits=*/0)}
bigint_program_info! {ec_aff_mul_test_8, /*iters=*/1,
bigint_witness_info!(/*bits=*/8, /*label=*/0, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/1, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/2, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/3, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/4, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/5, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/6, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/7, /*public=*/ true, /*min_bits=*/0)}
bigint_program_info! {ec_aff_mul_test_32, /*iters=*/1,
bigint_witness_info!(/*bits=*/32, /*label=*/0, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/32, /*label=*/1, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/32, /*label=*/2, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/32, /*label=*/3, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/32, /*label=*/4, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/32, /*label=*/5, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/32, /*label=*/6, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/32, /*label=*/7, /*public=*/ true, /*min_bits=*/0)}
bigint_program_info! {ec_aff_neg_test_8, /*iters=*/1,
bigint_witness_info!(/*bits=*/8, /*label=*/0, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/1, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/2, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/3, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/4, /*public=*/ true, /*min_bits=*/0)}
bigint_program_info! {ec_aff_sub_test_8, /*iters=*/1,
bigint_witness_info!(/*bits=*/8, /*label=*/0, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/1, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/9, /*label=*/2, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/3, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/4, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/5, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/6, /*public=*/ true, /*min_bits=*/0)}
bigint_program_info! {ec_pts_eq_test_8, /*iters=*/1,
bigint_witness_info!(/*bits=*/8, /*label=*/0, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/1, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/2, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/3, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/8, /*label=*/4, /*public=*/ true, /*min_bits=*/0)}
bigint_program_info! {rep_ec_aff_add_test_256_r5, /*iters=*/1,
bigint_witness_info!(/*bits=*/256, /*label=*/0, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/1, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/2, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/3, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/4, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/5, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/6, /*public=*/ true, /*min_bits=*/0)}
bigint_program_info! {rep_ec_aff_add_test_256_r10, /*iters=*/1,
bigint_witness_info!(/*bits=*/256, /*label=*/0, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/1, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/2, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/3, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/4, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/5, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/6, /*public=*/ true, /*min_bits=*/0)}
bigint_program_info! {rep_ec_aff_add_test_256_r256, /*iters=*/1,
bigint_witness_info!(/*bits=*/256, /*label=*/0, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/1, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/2, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/3, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/4, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/5, /*public=*/ true, /*min_bits=*/0),
bigint_witness_info!(/*bits=*/256, /*label=*/6, /*public=*/ true, /*min_bits=*/0)}
bigint_program_list! {rsa_256_x1, rsa_256_x2, rsa_3072_x15, nondet_inv_test_8, const_add_test_8, const_add_alt_test_16, const_mul_test_8, add_test_8, add_test_16, add_test_128, const_one_test_8, const_twobyte_test_16, sub_test_8, sub_test_128, mul_test_8, mul_test_128, reduce_test_8, reduce_test_128, ecdsa_verify_8, ecdsa_verify_32, ec_aff_add_test_8, ec_aff_add_test_256, ec_aff_doub_test_8, ec_aff_doub_test_256, ec_aff_mul_test_8, ec_aff_mul_test_32, ec_aff_neg_test_8, ec_aff_sub_test_8, ec_pts_eq_test_8, rep_ec_aff_add_test_256_r5, rep_ec_aff_add_test_256_r10, rep_ec_aff_add_test_256_r256}
