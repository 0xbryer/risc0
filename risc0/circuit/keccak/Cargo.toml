[package]
name = "risc0-circuit-keccak"
description = "RISC Zero circuit for keccak"
version = { workspace = true }
edition = { workspace = true }
license = { workspace = true }
homepage = { workspace = true }
repository = { workspace = true }

[[bin]]
name = "make_control_ids"
required-features = ["make_control_ids"]

# Host dependencies
[target.'cfg(not(target_os = "zkvm"))'.dependencies]
clap = "4.5"
lazy_static = "1.5.0"
paste = "1.0"
hex = "0.4"
rayon = "1.10.0"
risc0-zirgen-dsl = { workspace = true, optional = true }
tracing = { version = "0.1", default-features = false, features = ["attributes"] }
risc0-circuit-keccak-sys = { workspace = true, optional = true }
zip = { version = "2.0", default-features = false, features = ["deflate"] }
bytemuck = { version = "1.16.1", features = ["extern_crate_alloc"] }

[dependencies]
anyhow = { version = "1.0", default-features = false }
risc0-binfmt = { workspace = true }
risc0-circuit-recursion = { workspace = true }
risc0-core = { workspace = true }
risc0-zkp = { workspace = true }
risc0-zkvm-platform = { workspace = true, features = ["unstable"] }

[dev-dependencies]
test-log = { version = "0.2", default-features = false, features = ["trace"] }
tracing-forest = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter"] }

#[target.'cfg(not(target_os = "zkvm"))'.dev-dependencies]
#risc0-circuit-keccak-test-methods = { path = "methods" }
#tracing-subscriber = { version = "0.3", features = ["env-filter"] }

[features]
default = ["prove"]
# Omits control_ids.rs, and instead uses all zeros for control ids.
# This is needed for the 'make_control_ids' binary to compile to
# generate control ids fot lift predicates.
# make_control_ids = ["risc0-zkvm/prove", "risc0-circuit-recursion/prove"]
# Enables ZKR registration to actually generate proofs.
prove = ["risc0-circuit-recursion/prove", "dep:risc0-circuit-keccak-sys", "dep:risc0-zirgen-dsl", "std"]
std = []
